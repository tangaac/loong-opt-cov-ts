	.file	"k.cc"
	.text
	.globl	_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_ # -- Begin function _ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_
	.p2align	5
	.type	_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_,@function
_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_: # @_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 0
	move	$fp, $a1
	move	$a0, $s0
	jirl	$ra, $a2, 0
	ld.d	$a1, $fp, 0
	ld.d	$a1, $a1, 0
	move	$s1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a1, $a0
	ori	$a0, $zero, 1
	blt	$s1, $a1, .LBB0_3
# %bb.1:
	bge	$a1, $s1, .LBB0_4
# %bb.2:
	move	$a0, $zero
.LBB0_3:                                # %.loopexit
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB0_4:
	addi.d	$a0, $s1, -1
	ori	$a1, $zero, 4
	bltu	$a1, $a0, .LBB0_11
# %bb.5:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI0_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI0_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB0_6:
	ld.d	$a0, $s0, 8
	ld.d	$a1, $fp, 8
	pcaddu18i	$ra, %call36(strcasecmp)
	jirl	$ra, $ra, 0
	slti	$a0, $a0, 0
	b	.LBB0_3
.LBB0_7:
	ld.d	$a0, $s0, 8
	ld.d	$a1, $fp, 8
	sltu	$a0, $a0, $a1
	b	.LBB0_3
.LBB0_8:
	fld.d	$fa0, $s0, 8
	fld.d	$fa1, $fp, 8
	fcmp.clt.d	$fcc0, $fa0, $fa1
	movcf2gr	$a0, $fcc0
	b	.LBB0_3
.LBB0_9:
	ld.w	$a0, $s0, 8
	ld.w	$a1, $fp, 8
	slt	$a0, $a0, $a1
	b	.LBB0_3
.LBB0_10:
	ld.d	$a0, $s0, 8
	ld.d	$a1, $fp, 8
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	slti	$a0, $a0, 0
	b	.LBB0_3
.LBB0_11:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	add.d	$a0, $a1, $a0
	ld.wu	$a0, $a0, 20
	slli.d	$a1, $a0, 4
	alsl.d	$a0, $a0, $a1, 3
	pcalau12i	$a1, %pc_hi20(_ZN2kc11phylum_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc11phylum_infoE)
	add.d	$a0, $a1, $a0
	ld.wu	$a0, $a0, 16
	pcalau12i	$a1, %pc_hi20(_ZN2kc26kc_storageclass_still_uniqE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc26kc_storageclass_still_uniqE)
	ldx.bu	$a0, $a1, $a0
	beqz	$a0, .LBB0_16
# %bb.12:                               # %.split.us.preheader
	move	$s1, $zero
	.p2align	4, , 16
.LBB0_13:                               # %.split.us
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $s1
	jirl	$ra, $a2, 0
	ld.d	$a1, $fp, 0
	ld.d	$a2, $a1, 8
	move	$s2, $a0
	move	$a0, $fp
	move	$a1, $s1
	jirl	$ra, $a2, 0
	move	$a1, $a0
	sltu	$a0, $s2, $a0
	bltu	$s2, $a1, .LBB0_3
# %bb.14:                               #   in Loop: Header=BB0_13 Depth=1
	bltu	$a1, $s2, .LBB0_3
# %bb.15:                               #   in Loop: Header=BB0_13 Depth=1
	addi.w	$s1, $s1, 1
	bnez	$s2, .LBB0_13
	b	.LBB0_3
.LBB0_16:                               # %.split.preheader
	move	$s1, $zero
	.p2align	4, , 16
.LBB0_17:                               # %.split
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $s1
	jirl	$ra, $a2, 0
	ld.d	$a1, $fp, 0
	ld.d	$a2, $a1, 8
	move	$s2, $a0
	move	$a0, $fp
	move	$a1, $s1
	jirl	$ra, $a2, 0
	move	$s3, $a0
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB0_3
# %bb.18:                               #   in Loop: Header=BB0_17 Depth=1
	move	$s4, $a0
	move	$a0, $s3
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB0_20
# %bb.19:                               #   in Loop: Header=BB0_17 Depth=1
	addi.w	$s1, $s1, 1
	move	$a0, $s4
	bnez	$s2, .LBB0_17
	b	.LBB0_3
.LBB0_20:
	move	$a0, $s4
	b	.LBB0_3
.Lfunc_end0:
	.size	_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_, .Lfunc_end0-_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI0_0:
	.word	.LBB0_6-.LJTI0_0
	.word	.LBB0_10-.LJTI0_0
	.word	.LBB0_8-.LJTI0_0
	.word	.LBB0_9-.LJTI0_0
	.word	.LBB0_7-.LJTI0_0
                                        # -- End function
	.text
	.globl	_ZNK2kc20impl_abstract_phylum6phylumEv # -- Begin function _ZNK2kc20impl_abstract_phylum6phylumEv
	.p2align	5
	.type	_ZNK2kc20impl_abstract_phylum6phylumEv,@function
_ZNK2kc20impl_abstract_phylum6phylumEv: # @_ZNK2kc20impl_abstract_phylum6phylumEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	add.d	$a0, $a1, $a0
	ld.w	$a0, $a0, 20
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1:
	.size	_ZNK2kc20impl_abstract_phylum6phylumEv, .Lfunc_end1-_ZNK2kc20impl_abstract_phylum6phylumEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_nocasestring_NoCaseStrC2EPKc # -- Begin function _ZN2kc27impl_nocasestring_NoCaseStrC2EPKc
	.p2align	5
	.type	_ZN2kc27impl_nocasestring_NoCaseStrC2EPKc,@function
_ZN2kc27impl_nocasestring_NoCaseStrC2EPKc: # @_ZN2kc27impl_nocasestring_NoCaseStrC2EPKc
# %bb.0:
	pcalau12i	$a2, %got_pc_hi20(_ZTVN2kc27impl_nocasestring_NoCaseStrE)
	ld.d	$a2, $a2, %got_pc_lo12(_ZTVN2kc27impl_nocasestring_NoCaseStrE)
	addi.d	$a2, $a2, 16
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end2:
	.size	_ZN2kc27impl_nocasestring_NoCaseStrC2EPKc, .Lfunc_end2-_ZN2kc27impl_nocasestring_NoCaseStrC2EPKc
                                        # -- End function
	.globl	_ZN2kc27impl_nocasestring_NoCaseStr8make_ownEi # -- Begin function _ZN2kc27impl_nocasestring_NoCaseStr8make_ownEi
	.p2align	5
	.type	_ZN2kc27impl_nocasestring_NoCaseStr8make_ownEi,@function
_ZN2kc27impl_nocasestring_NoCaseStr8make_ownEi: # @_ZN2kc27impl_nocasestring_NoCaseStr8make_ownEi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	move	$fp, $a0
	addi.w	$a0, $a1, 1
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 1
	move	$s1, $a0
	blt	$s0, $a1, .LBB3_4
# %bb.1:                                # %.lr.ph
	ld.d	$s2, $fp, 8
	move	$s3, $s0
	move	$s4, $s1
	.p2align	4, , 16
.LBB3_2:                                # =>This Inner Loop Header: Depth=1
	ld.bu	$a0, $s2, 0
	beqz	$a0, .LBB3_4
# %bb.3:                                #   in Loop: Header=BB3_2 Depth=1
	ext.w.b	$a0, $a0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s4, 0
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, -1
	addi.d	$s2, $s2, 1
	bnez	$s3, .LBB3_2
.LBB3_4:                                # %.critedge
	stx.b	$zero, $s1, $s0
	st.d	$s1, $fp, 8
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end3:
	.size	_ZN2kc27impl_nocasestring_NoCaseStr8make_ownEi, .Lfunc_end3-_ZN2kc27impl_nocasestring_NoCaseStr8make_ownEi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_casestring__StrC2EPKc # -- Begin function _ZN2kc20impl_casestring__StrC2EPKc
	.p2align	5
	.type	_ZN2kc20impl_casestring__StrC2EPKc,@function
_ZN2kc20impl_casestring__StrC2EPKc:     # @_ZN2kc20impl_casestring__StrC2EPKc
# %bb.0:
	pcalau12i	$a2, %got_pc_hi20(_ZTVN2kc20impl_casestring__StrE)
	ld.d	$a2, $a2, %got_pc_lo12(_ZTVN2kc20impl_casestring__StrE)
	addi.d	$a2, $a2, 16
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end4:
	.size	_ZN2kc20impl_casestring__StrC2EPKc, .Lfunc_end4-_ZN2kc20impl_casestring__StrC2EPKc
                                        # -- End function
	.globl	_ZN2kc20impl_casestring__Str8make_ownEi # -- Begin function _ZN2kc20impl_casestring__Str8make_ownEi
	.p2align	5
	.type	_ZN2kc20impl_casestring__Str8make_ownEi,@function
_ZN2kc20impl_casestring__Str8make_ownEi: # @_ZN2kc20impl_casestring__Str8make_ownEi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	addi.w	$a0, $a1, 1
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 8
	move	$s1, $a0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(strncpy)
	jirl	$ra, $ra, 0
	stx.b	$zero, $s1, $fp
	st.d	$s1, $s0, 8
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end5:
	.size	_ZN2kc20impl_casestring__Str8make_ownEi, .Lfunc_end5-_ZN2kc20impl_casestring__Str8make_ownEi
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc32impl_bindingidmark_BindingIdMark9subphylumEi # -- Begin function _ZNK2kc32impl_bindingidmark_BindingIdMark9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_bindingidmark_BindingIdMark9subphylumEi,@function
_ZNK2kc32impl_bindingidmark_BindingIdMark9subphylumEi: # @_ZNK2kc32impl_bindingidmark_BindingIdMark9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 16
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end6:
	.size	_ZNK2kc32impl_bindingidmark_BindingIdMark9subphylumEi, .Lfunc_end6-_ZNK2kc32impl_bindingidmark_BindingIdMark9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_bindingidmarks9subphylumEi # -- Begin function _ZNK2kc19impl_bindingidmarks9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_bindingidmarks9subphylumEi,@function
_ZNK2kc19impl_bindingidmarks9subphylumEi: # @_ZNK2kc19impl_bindingidmarks9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB7_3
# %bb.1:
	bnez	$a1, .LBB7_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB7_3:
	ld.d	$a0, $a0, 16
	ret
.LBB7_4:
	move	$a0, $zero
	ret
.Lfunc_end7:
	.size	_ZNK2kc19impl_bindingidmarks9subphylumEi, .Lfunc_end7-_ZNK2kc19impl_bindingidmarks9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration9subphylumEi # -- Begin function _ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration9subphylumEi
	.p2align	5
	.type	_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration9subphylumEi,@function
_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration9subphylumEi: # @_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 16
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end8:
	.size	_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration9subphylumEi, .Lfunc_end8-_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc30impl_countedphylumdeclarations9subphylumEi # -- Begin function _ZNK2kc30impl_countedphylumdeclarations9subphylumEi
	.p2align	5
	.type	_ZNK2kc30impl_countedphylumdeclarations9subphylumEi,@function
_ZNK2kc30impl_countedphylumdeclarations9subphylumEi: # @_ZNK2kc30impl_countedphylumdeclarations9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB9_3
# %bb.1:
	bnez	$a1, .LBB9_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB9_3:
	ld.d	$a0, $a0, 16
	ret
.LBB9_4:
	move	$a0, $zero
	ret
.Lfunc_end9:
	.size	_ZNK2kc30impl_countedphylumdeclarations9subphylumEi, .Lfunc_end9-_ZNK2kc30impl_countedphylumdeclarations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration9subphylumEi # -- Begin function _ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration9subphylumEi
	.p2align	5
	.type	_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration9subphylumEi,@function
_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration9subphylumEi: # @_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 16
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end10:
	.size	_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration9subphylumEi, .Lfunc_end10-_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc28impl_addedphylumdeclarations9subphylumEi # -- Begin function _ZNK2kc28impl_addedphylumdeclarations9subphylumEi
	.p2align	5
	.type	_ZNK2kc28impl_addedphylumdeclarations9subphylumEi,@function
_ZNK2kc28impl_addedphylumdeclarations9subphylumEi: # @_ZNK2kc28impl_addedphylumdeclarations9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB11_3
# %bb.1:
	bnez	$a1, .LBB11_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB11_3:
	ld.d	$a0, $a0, 16
	ret
.LBB11_4:
	move	$a0, $zero
	ret
.Lfunc_end11:
	.size	_ZNK2kc28impl_addedphylumdeclarations9subphylumEi, .Lfunc_end11-_ZNK2kc28impl_addedphylumdeclarations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc21impl_problem_Problem69subphylumEi # -- Begin function _ZNK2kc21impl_problem_Problem69subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem69subphylumEi,@function
_ZNK2kc21impl_problem_Problem69subphylumEi: # @_ZNK2kc21impl_problem_Problem69subphylumEi
# %bb.0:
	ori	$a2, $zero, 5
	bltu	$a2, $a1, .LBB12_8
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI12_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI12_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB12_2:
	ld.d	$a0, $a0, 8
	ret
.LBB12_3:
	ld.d	$a0, $a0, 40
	ret
.LBB12_4:
	ld.d	$a0, $a0, 24
	ret
.LBB12_5:
	ld.d	$a0, $a0, 32
	ret
.LBB12_6:
	ld.d	$a0, $a0, 16
	ret
.LBB12_7:
	ld.d	$a0, $a0, 48
	ret
.LBB12_8:
	move	$a0, $zero
	ret
.Lfunc_end12:
	.size	_ZNK2kc21impl_problem_Problem69subphylumEi, .Lfunc_end12-_ZNK2kc21impl_problem_Problem69subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI12_0:
	.word	.LBB12_2-.LJTI12_0
	.word	.LBB12_6-.LJTI12_0
	.word	.LBB12_4-.LJTI12_0
	.word	.LBB12_5-.LJTI12_0
	.word	.LBB12_3-.LJTI12_0
	.word	.LBB12_7-.LJTI12_0
                                        # -- End function
	.text
	.globl	_ZNK2kc21impl_problem_Problem59subphylumEi # -- Begin function _ZNK2kc21impl_problem_Problem59subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem59subphylumEi,@function
_ZNK2kc21impl_problem_Problem59subphylumEi: # @_ZNK2kc21impl_problem_Problem59subphylumEi
# %bb.0:
	ori	$a2, $zero, 4
	bltu	$a2, $a1, .LBB13_7
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI13_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI13_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB13_2:
	ld.d	$a0, $a0, 8
	ret
.LBB13_3:
	ld.d	$a0, $a0, 40
	ret
.LBB13_4:
	ld.d	$a0, $a0, 24
	ret
.LBB13_5:
	ld.d	$a0, $a0, 32
	ret
.LBB13_6:
	ld.d	$a0, $a0, 16
	ret
.LBB13_7:
	move	$a0, $zero
	ret
.Lfunc_end13:
	.size	_ZNK2kc21impl_problem_Problem59subphylumEi, .Lfunc_end13-_ZNK2kc21impl_problem_Problem59subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI13_0:
	.word	.LBB13_2-.LJTI13_0
	.word	.LBB13_6-.LJTI13_0
	.word	.LBB13_4-.LJTI13_0
	.word	.LBB13_5-.LJTI13_0
	.word	.LBB13_3-.LJTI13_0
                                        # -- End function
	.text
	.globl	_ZNK2kc21impl_problem_Problem49subphylumEi # -- Begin function _ZNK2kc21impl_problem_Problem49subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem49subphylumEi,@function
_ZNK2kc21impl_problem_Problem49subphylumEi: # @_ZNK2kc21impl_problem_Problem49subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB14_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI14_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI14_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB14_2:
	ld.d	$a0, $a0, 8
	ret
.LBB14_3:
	ld.d	$a0, $a0, 24
	ret
.LBB14_4:
	ld.d	$a0, $a0, 32
	ret
.LBB14_5:
	ld.d	$a0, $a0, 16
	ret
.LBB14_6:
	move	$a0, $zero
	ret
.Lfunc_end14:
	.size	_ZNK2kc21impl_problem_Problem49subphylumEi, .Lfunc_end14-_ZNK2kc21impl_problem_Problem49subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI14_0:
	.word	.LBB14_2-.LJTI14_0
	.word	.LBB14_5-.LJTI14_0
	.word	.LBB14_3-.LJTI14_0
	.word	.LBB14_4-.LJTI14_0
                                        # -- End function
	.text
	.globl	_ZNK2kc25impl_problem_Problem3int19subphylumEi # -- Begin function _ZNK2kc25impl_problem_Problem3int19subphylumEi
	.p2align	5
	.type	_ZNK2kc25impl_problem_Problem3int19subphylumEi,@function
_ZNK2kc25impl_problem_Problem3int19subphylumEi: # @_ZNK2kc25impl_problem_Problem3int19subphylumEi
# %bb.0:
	ori	$a2, $zero, 4
	bltu	$a2, $a1, .LBB15_7
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI15_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI15_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB15_2:
	ld.d	$a0, $a0, 8
	ret
.LBB15_3:
	ld.d	$a0, $a0, 40
	ret
.LBB15_4:
	ld.d	$a0, $a0, 24
	ret
.LBB15_5:
	ld.d	$a0, $a0, 32
	ret
.LBB15_6:
	ld.d	$a0, $a0, 16
	ret
.LBB15_7:
	move	$a0, $zero
	ret
.Lfunc_end15:
	.size	_ZNK2kc25impl_problem_Problem3int19subphylumEi, .Lfunc_end15-_ZNK2kc25impl_problem_Problem3int19subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI15_0:
	.word	.LBB15_2-.LJTI15_0
	.word	.LBB15_6-.LJTI15_0
	.word	.LBB15_4-.LJTI15_0
	.word	.LBB15_5-.LJTI15_0
	.word	.LBB15_3-.LJTI15_0
                                        # -- End function
	.text
	.globl	_ZNK2kc21impl_problem_Problem39subphylumEi # -- Begin function _ZNK2kc21impl_problem_Problem39subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem39subphylumEi,@function
_ZNK2kc21impl_problem_Problem39subphylumEi: # @_ZNK2kc21impl_problem_Problem39subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB16_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB16_4
# %bb.2:
	bnez	$a1, .LBB16_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB16_4:
	ld.d	$a0, $a0, 16
	ret
.LBB16_5:
	ld.d	$a0, $a0, 24
	ret
.LBB16_6:
	move	$a0, $zero
	ret
.Lfunc_end16:
	.size	_ZNK2kc21impl_problem_Problem39subphylumEi, .Lfunc_end16-_ZNK2kc21impl_problem_Problem39subphylumEi
                                        # -- End function
	.globl	_ZNK2kc21impl_problem_Problem29subphylumEi # -- Begin function _ZNK2kc21impl_problem_Problem29subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem29subphylumEi,@function
_ZNK2kc21impl_problem_Problem29subphylumEi: # @_ZNK2kc21impl_problem_Problem29subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB17_3
# %bb.1:
	bnez	$a1, .LBB17_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB17_3:
	ld.d	$a0, $a0, 16
	ret
.LBB17_4:
	move	$a0, $zero
	ret
.Lfunc_end17:
	.size	_ZNK2kc21impl_problem_Problem29subphylumEi, .Lfunc_end17-_ZNK2kc21impl_problem_Problem29subphylumEi
                                        # -- End function
	.globl	_ZNK2kc37impl_problem_Problem1storageoption1ID9subphylumEi # -- Begin function _ZNK2kc37impl_problem_Problem1storageoption1ID9subphylumEi
	.p2align	5
	.type	_ZNK2kc37impl_problem_Problem1storageoption1ID9subphylumEi,@function
_ZNK2kc37impl_problem_Problem1storageoption1ID9subphylumEi: # @_ZNK2kc37impl_problem_Problem1storageoption1ID9subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB18_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI18_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI18_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB18_2:
	ld.d	$a0, $a0, 8
	ret
.LBB18_3:
	ld.d	$a0, $a0, 24
	ret
.LBB18_4:
	ld.d	$a0, $a0, 32
	ret
.LBB18_5:
	ld.d	$a0, $a0, 16
	ret
.LBB18_6:
	move	$a0, $zero
	ret
.Lfunc_end18:
	.size	_ZNK2kc37impl_problem_Problem1storageoption1ID9subphylumEi, .Lfunc_end18-_ZNK2kc37impl_problem_Problem1storageoption1ID9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI18_0:
	.word	.LBB18_2-.LJTI18_0
	.word	.LBB18_5-.LJTI18_0
	.word	.LBB18_3-.LJTI18_0
	.word	.LBB18_4-.LJTI18_0
                                        # -- End function
	.text
	.globl	_ZNK2kc30impl_problem_Problem1INT1ID1ID9subphylumEi # -- Begin function _ZNK2kc30impl_problem_Problem1INT1ID1ID9subphylumEi
	.p2align	5
	.type	_ZNK2kc30impl_problem_Problem1INT1ID1ID9subphylumEi,@function
_ZNK2kc30impl_problem_Problem1INT1ID1ID9subphylumEi: # @_ZNK2kc30impl_problem_Problem1INT1ID1ID9subphylumEi
# %bb.0:
	ori	$a2, $zero, 5
	bltu	$a2, $a1, .LBB19_8
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI19_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI19_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB19_2:
	ld.d	$a0, $a0, 8
	ret
.LBB19_3:
	ld.d	$a0, $a0, 40
	ret
.LBB19_4:
	ld.d	$a0, $a0, 24
	ret
.LBB19_5:
	ld.d	$a0, $a0, 32
	ret
.LBB19_6:
	ld.d	$a0, $a0, 16
	ret
.LBB19_7:
	ld.d	$a0, $a0, 48
	ret
.LBB19_8:
	move	$a0, $zero
	ret
.Lfunc_end19:
	.size	_ZNK2kc30impl_problem_Problem1INT1ID1ID9subphylumEi, .Lfunc_end19-_ZNK2kc30impl_problem_Problem1INT1ID1ID9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI19_0:
	.word	.LBB19_2-.LJTI19_0
	.word	.LBB19_6-.LJTI19_0
	.word	.LBB19_4-.LJTI19_0
	.word	.LBB19_5-.LJTI19_0
	.word	.LBB19_3-.LJTI19_0
	.word	.LBB19_7-.LJTI19_0
                                        # -- End function
	.text
	.globl	_ZNK2kc29impl_problem_Problem1ID1ID1ID9subphylumEi # -- Begin function _ZNK2kc29impl_problem_Problem1ID1ID1ID9subphylumEi
	.p2align	5
	.type	_ZNK2kc29impl_problem_Problem1ID1ID1ID9subphylumEi,@function
_ZNK2kc29impl_problem_Problem1ID1ID1ID9subphylumEi: # @_ZNK2kc29impl_problem_Problem1ID1ID1ID9subphylumEi
# %bb.0:
	ori	$a2, $zero, 5
	bltu	$a2, $a1, .LBB20_8
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI20_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI20_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB20_2:
	ld.d	$a0, $a0, 8
	ret
.LBB20_3:
	ld.d	$a0, $a0, 40
	ret
.LBB20_4:
	ld.d	$a0, $a0, 24
	ret
.LBB20_5:
	ld.d	$a0, $a0, 32
	ret
.LBB20_6:
	ld.d	$a0, $a0, 16
	ret
.LBB20_7:
	ld.d	$a0, $a0, 48
	ret
.LBB20_8:
	move	$a0, $zero
	ret
.Lfunc_end20:
	.size	_ZNK2kc29impl_problem_Problem1ID1ID1ID9subphylumEi, .Lfunc_end20-_ZNK2kc29impl_problem_Problem1ID1ID1ID9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI20_0:
	.word	.LBB20_2-.LJTI20_0
	.word	.LBB20_6-.LJTI20_0
	.word	.LBB20_4-.LJTI20_0
	.word	.LBB20_5-.LJTI20_0
	.word	.LBB20_3-.LJTI20_0
	.word	.LBB20_7-.LJTI20_0
                                        # -- End function
	.text
	.globl	_ZNK2kc27impl_problem_Problem1INT1ID9subphylumEi # -- Begin function _ZNK2kc27impl_problem_Problem1INT1ID9subphylumEi
	.p2align	5
	.type	_ZNK2kc27impl_problem_Problem1INT1ID9subphylumEi,@function
_ZNK2kc27impl_problem_Problem1INT1ID9subphylumEi: # @_ZNK2kc27impl_problem_Problem1INT1ID9subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB21_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI21_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI21_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB21_2:
	ld.d	$a0, $a0, 8
	ret
.LBB21_3:
	ld.d	$a0, $a0, 24
	ret
.LBB21_4:
	ld.d	$a0, $a0, 32
	ret
.LBB21_5:
	ld.d	$a0, $a0, 16
	ret
.LBB21_6:
	move	$a0, $zero
	ret
.Lfunc_end21:
	.size	_ZNK2kc27impl_problem_Problem1INT1ID9subphylumEi, .Lfunc_end21-_ZNK2kc27impl_problem_Problem1INT1ID9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI21_0:
	.word	.LBB21_2-.LJTI21_0
	.word	.LBB21_5-.LJTI21_0
	.word	.LBB21_3-.LJTI21_0
	.word	.LBB21_4-.LJTI21_0
                                        # -- End function
	.text
	.globl	_ZNK2kc25impl_problem_Problem1int19subphylumEi # -- Begin function _ZNK2kc25impl_problem_Problem1int19subphylumEi
	.p2align	5
	.type	_ZNK2kc25impl_problem_Problem1int19subphylumEi,@function
_ZNK2kc25impl_problem_Problem1int19subphylumEi: # @_ZNK2kc25impl_problem_Problem1int19subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB22_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB22_4
# %bb.2:
	bnez	$a1, .LBB22_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB22_4:
	ld.d	$a0, $a0, 16
	ret
.LBB22_5:
	ld.d	$a0, $a0, 24
	ret
.LBB22_6:
	move	$a0, $zero
	ret
.Lfunc_end22:
	.size	_ZNK2kc25impl_problem_Problem1int19subphylumEi, .Lfunc_end22-_ZNK2kc25impl_problem_Problem1int19subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_problem_Problem1INT9subphylumEi # -- Begin function _ZNK2kc24impl_problem_Problem1INT9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_problem_Problem1INT9subphylumEi,@function
_ZNK2kc24impl_problem_Problem1INT9subphylumEi: # @_ZNK2kc24impl_problem_Problem1INT9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB23_3
# %bb.1:
	bnez	$a1, .LBB23_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB23_3:
	ld.d	$a0, $a0, 16
	ret
.LBB23_4:
	move	$a0, $zero
	ret
.Lfunc_end23:
	.size	_ZNK2kc24impl_problem_Problem1INT9subphylumEi, .Lfunc_end23-_ZNK2kc24impl_problem_Problem1INT9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc25impl_problem_Problem1t1ID9subphylumEi # -- Begin function _ZNK2kc25impl_problem_Problem1t1ID9subphylumEi
	.p2align	5
	.type	_ZNK2kc25impl_problem_Problem1t1ID9subphylumEi,@function
_ZNK2kc25impl_problem_Problem1t1ID9subphylumEi: # @_ZNK2kc25impl_problem_Problem1t1ID9subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB24_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI24_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI24_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB24_2:
	ld.d	$a0, $a0, 8
	ret
.LBB24_3:
	ld.d	$a0, $a0, 24
	ret
.LBB24_4:
	ld.d	$a0, $a0, 32
	ret
.LBB24_5:
	ld.d	$a0, $a0, 16
	ret
.LBB24_6:
	move	$a0, $zero
	ret
.Lfunc_end24:
	.size	_ZNK2kc25impl_problem_Problem1t1ID9subphylumEi, .Lfunc_end24-_ZNK2kc25impl_problem_Problem1t1ID9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI24_0:
	.word	.LBB24_2-.LJTI24_0
	.word	.LBB24_5-.LJTI24_0
	.word	.LBB24_3-.LJTI24_0
	.word	.LBB24_4-.LJTI24_0
                                        # -- End function
	.text
	.globl	_ZNK2kc26impl_problem_Problem1ID1ID9subphylumEi # -- Begin function _ZNK2kc26impl_problem_Problem1ID1ID9subphylumEi
	.p2align	5
	.type	_ZNK2kc26impl_problem_Problem1ID1ID9subphylumEi,@function
_ZNK2kc26impl_problem_Problem1ID1ID9subphylumEi: # @_ZNK2kc26impl_problem_Problem1ID1ID9subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB25_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI25_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI25_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB25_2:
	ld.d	$a0, $a0, 8
	ret
.LBB25_3:
	ld.d	$a0, $a0, 24
	ret
.LBB25_4:
	ld.d	$a0, $a0, 32
	ret
.LBB25_5:
	ld.d	$a0, $a0, 16
	ret
.LBB25_6:
	move	$a0, $zero
	ret
.Lfunc_end25:
	.size	_ZNK2kc26impl_problem_Problem1ID1ID9subphylumEi, .Lfunc_end25-_ZNK2kc26impl_problem_Problem1ID1ID9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI25_0:
	.word	.LBB25_2-.LJTI25_0
	.word	.LBB25_5-.LJTI25_0
	.word	.LBB25_3-.LJTI25_0
	.word	.LBB25_4-.LJTI25_0
                                        # -- End function
	.text
	.globl	_ZNK2kc23impl_problem_Problem1we9subphylumEi # -- Begin function _ZNK2kc23impl_problem_Problem1we9subphylumEi
	.p2align	5
	.type	_ZNK2kc23impl_problem_Problem1we9subphylumEi,@function
_ZNK2kc23impl_problem_Problem1we9subphylumEi: # @_ZNK2kc23impl_problem_Problem1we9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB26_3
# %bb.1:
	bnez	$a1, .LBB26_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB26_3:
	ld.d	$a0, $a0, 16
	ret
.LBB26_4:
	move	$a0, $zero
	ret
.Lfunc_end26:
	.size	_ZNK2kc23impl_problem_Problem1we9subphylumEi, .Lfunc_end26-_ZNK2kc23impl_problem_Problem1we9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_problem_Problem1tID9subphylumEi # -- Begin function _ZNK2kc24impl_problem_Problem1tID9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_problem_Problem1tID9subphylumEi,@function
_ZNK2kc24impl_problem_Problem1tID9subphylumEi: # @_ZNK2kc24impl_problem_Problem1tID9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB27_3
# %bb.1:
	bnez	$a1, .LBB27_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB27_3:
	ld.d	$a0, $a0, 16
	ret
.LBB27_4:
	move	$a0, $zero
	ret
.Lfunc_end27:
	.size	_ZNK2kc24impl_problem_Problem1tID9subphylumEi, .Lfunc_end27-_ZNK2kc24impl_problem_Problem1tID9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc23impl_problem_Problem1ID9subphylumEi # -- Begin function _ZNK2kc23impl_problem_Problem1ID9subphylumEi
	.p2align	5
	.type	_ZNK2kc23impl_problem_Problem1ID9subphylumEi,@function
_ZNK2kc23impl_problem_Problem1ID9subphylumEi: # @_ZNK2kc23impl_problem_Problem1ID9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB28_3
# %bb.1:
	bnez	$a1, .LBB28_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB28_3:
	ld.d	$a0, $a0, 16
	ret
.LBB28_4:
	move	$a0, $zero
	ret
.Lfunc_end28:
	.size	_ZNK2kc23impl_problem_Problem1ID9subphylumEi, .Lfunc_end28-_ZNK2kc23impl_problem_Problem1ID9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc21impl_problem_Problem19subphylumEi # -- Begin function _ZNK2kc21impl_problem_Problem19subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem19subphylumEi,@function
_ZNK2kc21impl_problem_Problem19subphylumEi: # @_ZNK2kc21impl_problem_Problem19subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end29:
	.size	_ZNK2kc21impl_problem_Problem19subphylumEi, .Lfunc_end29-_ZNK2kc21impl_problem_Problem19subphylumEi
                                        # -- End function
	.globl	_ZNK2kc18impl_error_Warning9subphylumEi # -- Begin function _ZNK2kc18impl_error_Warning9subphylumEi
	.p2align	5
	.type	_ZNK2kc18impl_error_Warning9subphylumEi,@function
_ZNK2kc18impl_error_Warning9subphylumEi: # @_ZNK2kc18impl_error_Warning9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB30_3
# %bb.1:
	bnez	$a1, .LBB30_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB30_3:
	ld.d	$a0, $a0, 16
	ret
.LBB30_4:
	move	$a0, $zero
	ret
.Lfunc_end30:
	.size	_ZNK2kc18impl_error_Warning9subphylumEi, .Lfunc_end30-_ZNK2kc18impl_error_Warning9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_error_NonFatal9subphylumEi # -- Begin function _ZNK2kc19impl_error_NonFatal9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_error_NonFatal9subphylumEi,@function
_ZNK2kc19impl_error_NonFatal9subphylumEi: # @_ZNK2kc19impl_error_NonFatal9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB31_3
# %bb.1:
	bnez	$a1, .LBB31_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB31_3:
	ld.d	$a0, $a0, 16
	ret
.LBB31_4:
	move	$a0, $zero
	ret
.Lfunc_end31:
	.size	_ZNK2kc19impl_error_NonFatal9subphylumEi, .Lfunc_end31-_ZNK2kc19impl_error_NonFatal9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc16impl_error_Fatal9subphylumEi # -- Begin function _ZNK2kc16impl_error_Fatal9subphylumEi
	.p2align	5
	.type	_ZNK2kc16impl_error_Fatal9subphylumEi,@function
_ZNK2kc16impl_error_Fatal9subphylumEi:  # @_ZNK2kc16impl_error_Fatal9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB32_3
# %bb.1:
	bnez	$a1, .LBB32_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB32_3:
	ld.d	$a0, $a0, 16
	ret
.LBB32_4:
	move	$a0, $zero
	ret
.Lfunc_end32:
	.size	_ZNK2kc16impl_error_Fatal9subphylumEi, .Lfunc_end32-_ZNK2kc16impl_error_Fatal9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_baseclass_list9subphylumEi # -- Begin function _ZNK2kc19impl_baseclass_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_baseclass_list9subphylumEi,@function
_ZNK2kc19impl_baseclass_list9subphylumEi: # @_ZNK2kc19impl_baseclass_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB33_3
# %bb.1:
	bnez	$a1, .LBB33_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB33_3:
	ld.d	$a0, $a0, 16
	ret
.LBB33_4:
	move	$a0, $zero
	ret
.Lfunc_end33:
	.size	_ZNK2kc19impl_baseclass_list9subphylumEi, .Lfunc_end33-_ZNK2kc19impl_baseclass_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc33impl_baseclass_decl_BaseClassDecl9subphylumEi # -- Begin function _ZNK2kc33impl_baseclass_decl_BaseClassDecl9subphylumEi
	.p2align	5
	.type	_ZNK2kc33impl_baseclass_decl_BaseClassDecl9subphylumEi,@function
_ZNK2kc33impl_baseclass_decl_BaseClassDecl9subphylumEi: # @_ZNK2kc33impl_baseclass_decl_BaseClassDecl9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB34_3
# %bb.1:
	bnez	$a1, .LBB34_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB34_3:
	ld.d	$a0, $a0, 16
	ret
.LBB34_4:
	move	$a0, $zero
	ret
.Lfunc_end34:
	.size	_ZNK2kc33impl_baseclass_decl_BaseClassDecl9subphylumEi, .Lfunc_end34-_ZNK2kc33impl_baseclass_decl_BaseClassDecl9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc27impl_baseclass_declarations9subphylumEi # -- Begin function _ZNK2kc27impl_baseclass_declarations9subphylumEi
	.p2align	5
	.type	_ZNK2kc27impl_baseclass_declarations9subphylumEi,@function
_ZNK2kc27impl_baseclass_declarations9subphylumEi: # @_ZNK2kc27impl_baseclass_declarations9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB35_3
# %bb.1:
	bnez	$a1, .LBB35_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB35_3:
	ld.d	$a0, $a0, 16
	ret
.LBB35_4:
	move	$a0, $zero
	ret
.Lfunc_end35:
	.size	_ZNK2kc27impl_baseclass_declarations9subphylumEi, .Lfunc_end35-_ZNK2kc27impl_baseclass_declarations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_base_init_AcBaseInit9subphylumEi # -- Begin function _ZNK2kc28impl_ac_base_init_AcBaseInit9subphylumEi
	.p2align	5
	.type	_ZNK2kc28impl_ac_base_init_AcBaseInit9subphylumEi,@function
_ZNK2kc28impl_ac_base_init_AcBaseInit9subphylumEi: # @_ZNK2kc28impl_ac_base_init_AcBaseInit9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB36_3
# %bb.1:
	bnez	$a1, .LBB36_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB36_3:
	ld.d	$a0, $a0, 16
	ret
.LBB36_4:
	move	$a0, $zero
	ret
.Lfunc_end36:
	.size	_ZNK2kc28impl_ac_base_init_AcBaseInit9subphylumEi, .Lfunc_end36-_ZNK2kc28impl_ac_base_init_AcBaseInit9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc22impl_ac_base_init_list9subphylumEi # -- Begin function _ZNK2kc22impl_ac_base_init_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc22impl_ac_base_init_list9subphylumEi,@function
_ZNK2kc22impl_ac_base_init_list9subphylumEi: # @_ZNK2kc22impl_ac_base_init_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB37_3
# %bb.1:
	bnez	$a1, .LBB37_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB37_3:
	ld.d	$a0, $a0, 16
	ret
.LBB37_4:
	move	$a0, $zero
	ret
.Lfunc_end37:
	.size	_ZNK2kc22impl_ac_base_init_list9subphylumEi, .Lfunc_end37-_ZNK2kc22impl_ac_base_init_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit9subphylumEi # -- Begin function _ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit9subphylumEi
	.p2align	5
	.type	_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit9subphylumEi,@function
_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit9subphylumEi: # @_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end38:
	.size	_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit9subphylumEi, .Lfunc_end38-_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc32impl_ac_constant_expression_list9subphylumEi # -- Begin function _ZNK2kc32impl_ac_constant_expression_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_ac_constant_expression_list9subphylumEi,@function
_ZNK2kc32impl_ac_constant_expression_list9subphylumEi: # @_ZNK2kc32impl_ac_constant_expression_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB39_3
# %bb.1:
	bnez	$a1, .LBB39_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB39_3:
	ld.d	$a0, $a0, 16
	ret
.LBB39_4:
	move	$a0, $zero
	ret
.Lfunc_end39:
	.size	_ZNK2kc32impl_ac_constant_expression_list9subphylumEi, .Lfunc_end39-_ZNK2kc32impl_ac_constant_expression_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc39impl_ac_constant_expression_AcConstExpr9subphylumEi # -- Begin function _ZNK2kc39impl_ac_constant_expression_AcConstExpr9subphylumEi
	.p2align	5
	.type	_ZNK2kc39impl_ac_constant_expression_AcConstExpr9subphylumEi,@function
_ZNK2kc39impl_ac_constant_expression_AcConstExpr9subphylumEi: # @_ZNK2kc39impl_ac_constant_expression_AcConstExpr9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end40:
	.size	_ZNK2kc39impl_ac_constant_expression_AcConstExpr9subphylumEi, .Lfunc_end40-_ZNK2kc39impl_ac_constant_expression_AcConstExpr9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression9subphylumEi # -- Begin function _ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression9subphylumEi
	.p2align	5
	.type	_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression9subphylumEi,@function
_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression9subphylumEi: # @_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end41:
	.size	_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression9subphylumEi, .Lfunc_end41-_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn9subphylumEi # -- Begin function _ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn9subphylumEi
	.p2align	5
	.type	_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn9subphylumEi,@function
_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn9subphylumEi: # @_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB42_3
# %bb.1:
	bnez	$a1, .LBB42_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB42_3:
	ld.d	$a0, $a0, 16
	ret
.LBB42_4:
	move	$a0, $zero
	ret
.Lfunc_end42:
	.size	_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn9subphylumEi, .Lfunc_end42-_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray9subphylumEi # -- Begin function _ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray9subphylumEi
	.p2align	5
	.type	_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray9subphylumEi,@function
_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray9subphylumEi: # @_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB43_3
# %bb.1:
	bnez	$a1, .LBB43_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB43_3:
	ld.d	$a0, $a0, 16
	ret
.LBB43_4:
	move	$a0, $zero
	ret
.Lfunc_end43:
	.size	_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray9subphylumEi, .Lfunc_end43-_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack9subphylumEi # -- Begin function _ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack9subphylumEi
	.p2align	5
	.type	_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack9subphylumEi,@function
_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack9subphylumEi: # @_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end44:
	.size	_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack9subphylumEi, .Lfunc_end44-_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator9subphylumEi # -- Begin function _ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator9subphylumEi
	.p2align	5
	.type	_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator9subphylumEi,@function
_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator9subphylumEi: # @_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end45:
	.size	_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator9subphylumEi, .Lfunc_end45-_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl9subphylumEi # -- Begin function _ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl9subphylumEi
	.p2align	5
	.type	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl9subphylumEi,@function
_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl9subphylumEi: # @_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB46_3
# %bb.1:
	bnez	$a1, .LBB46_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB46_3:
	ld.d	$a0, $a0, 16
	ret
.LBB46_4:
	move	$a0, $zero
	ret
.Lfunc_end46:
	.size	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl9subphylumEi, .Lfunc_end46-_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer9subphylumEi # -- Begin function _ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer9subphylumEi
	.p2align	5
	.type	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer9subphylumEi,@function
_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer9subphylumEi: # @_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end47:
	.size	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer9subphylumEi, .Lfunc_end47-_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc23impl_ac_identifier_list9subphylumEi # -- Begin function _ZNK2kc23impl_ac_identifier_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc23impl_ac_identifier_list9subphylumEi,@function
_ZNK2kc23impl_ac_identifier_list9subphylumEi: # @_ZNK2kc23impl_ac_identifier_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB48_3
# %bb.1:
	bnez	$a1, .LBB48_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB48_3:
	ld.d	$a0, $a0, 16
	ret
.LBB48_4:
	move	$a0, $zero
	ret
.Lfunc_end48:
	.size	_ZNK2kc23impl_ac_identifier_list9subphylumEi, .Lfunc_end48-_ZNK2kc23impl_ac_identifier_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl9subphylumEi # -- Begin function _ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl9subphylumEi
	.p2align	5
	.type	_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl9subphylumEi,@function
_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl9subphylumEi: # @_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB49_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB49_4
# %bb.2:
	bnez	$a1, .LBB49_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB49_4:
	ld.d	$a0, $a0, 16
	ret
.LBB49_5:
	ld.d	$a0, $a0, 24
	ret
.LBB49_6:
	move	$a0, $zero
	ret
.Lfunc_end49:
	.size	_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl9subphylumEi, .Lfunc_end49-_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl9subphylumEi # -- Begin function _ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl9subphylumEi
	.p2align	5
	.type	_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl9subphylumEi,@function
_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl9subphylumEi: # @_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB50_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB50_4
# %bb.2:
	bnez	$a1, .LBB50_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB50_4:
	ld.d	$a0, $a0, 16
	ret
.LBB50_5:
	ld.d	$a0, $a0, 24
	ret
.LBB50_6:
	move	$a0, $zero
	ret
.Lfunc_end50:
	.size	_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl9subphylumEi, .Lfunc_end50-_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc22impl_ac_parameter_list9subphylumEi # -- Begin function _ZNK2kc22impl_ac_parameter_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc22impl_ac_parameter_list9subphylumEi,@function
_ZNK2kc22impl_ac_parameter_list9subphylumEi: # @_ZNK2kc22impl_ac_parameter_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB51_3
# %bb.1:
	bnez	$a1, .LBB51_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB51_3:
	ld.d	$a0, $a0, 16
	ret
.LBB51_4:
	move	$a0, $zero
	ret
.Lfunc_end51:
	.size	_ZNK2kc22impl_ac_parameter_list9subphylumEi, .Lfunc_end51-_ZNK2kc22impl_ac_parameter_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot9subphylumEi # -- Begin function _ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot9subphylumEi
	.p2align	5
	.type	_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot9subphylumEi,@function
_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot9subphylumEi: # @_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end52:
	.size	_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot9subphylumEi, .Lfunc_end52-_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc37impl_ac_parameter_type_list_AcParList9subphylumEi # -- Begin function _ZNK2kc37impl_ac_parameter_type_list_AcParList9subphylumEi
	.p2align	5
	.type	_ZNK2kc37impl_ac_parameter_type_list_AcParList9subphylumEi,@function
_ZNK2kc37impl_ac_parameter_type_list_AcParList9subphylumEi: # @_ZNK2kc37impl_ac_parameter_type_list_AcParList9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end53:
	.size	_ZNK2kc37impl_ac_parameter_type_list_AcParList9subphylumEi, .Lfunc_end53-_ZNK2kc37impl_ac_parameter_type_list_AcParList9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc27impl_ac_type_qualifier_list9subphylumEi # -- Begin function _ZNK2kc27impl_ac_type_qualifier_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc27impl_ac_type_qualifier_list9subphylumEi,@function
_ZNK2kc27impl_ac_type_qualifier_list9subphylumEi: # @_ZNK2kc27impl_ac_type_qualifier_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB54_3
# %bb.1:
	bnez	$a1, .LBB54_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB54_3:
	ld.d	$a0, $a0, 16
	ret
.LBB54_4:
	move	$a0, $zero
	ret
.Lfunc_end54:
	.size	_ZNK2kc27impl_ac_type_qualifier_list9subphylumEi, .Lfunc_end54-_ZNK2kc27impl_ac_type_qualifier_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_class_qualifier_list9subphylumEi # -- Begin function _ZNK2kc28impl_ac_class_qualifier_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc28impl_ac_class_qualifier_list9subphylumEi,@function
_ZNK2kc28impl_ac_class_qualifier_list9subphylumEi: # @_ZNK2kc28impl_ac_class_qualifier_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB55_3
# %bb.1:
	bnez	$a1, .LBB55_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB55_3:
	ld.d	$a0, $a0, 16
	ret
.LBB55_4:
	move	$a0, $zero
	ret
.Lfunc_end55:
	.size	_ZNK2kc28impl_ac_class_qualifier_list9subphylumEi, .Lfunc_end55-_ZNK2kc28impl_ac_class_qualifier_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc33impl_ac_class_qualifier_help_list9subphylumEi # -- Begin function _ZNK2kc33impl_ac_class_qualifier_help_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc33impl_ac_class_qualifier_help_list9subphylumEi,@function
_ZNK2kc33impl_ac_class_qualifier_help_list9subphylumEi: # @_ZNK2kc33impl_ac_class_qualifier_help_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB56_3
# %bb.1:
	bnez	$a1, .LBB56_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB56_3:
	ld.d	$a0, $a0, 16
	ret
.LBB56_4:
	move	$a0, $zero
	ret
.Lfunc_end56:
	.size	_ZNK2kc33impl_ac_class_qualifier_help_list9subphylumEi, .Lfunc_end56-_ZNK2kc33impl_ac_class_qualifier_help_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc36impl_ac_operator_name_AcOperatorName9subphylumEi # -- Begin function _ZNK2kc36impl_ac_operator_name_AcOperatorName9subphylumEi
	.p2align	5
	.type	_ZNK2kc36impl_ac_operator_name_AcOperatorName9subphylumEi,@function
_ZNK2kc36impl_ac_operator_name_AcOperatorName9subphylumEi: # @_ZNK2kc36impl_ac_operator_name_AcOperatorName9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end57:
	.size	_ZNK2kc36impl_ac_operator_name_AcOperatorName9subphylumEi, .Lfunc_end57-_ZNK2kc36impl_ac_operator_name_AcOperatorName9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc29impl_ac_pointer_AcPointerCons9subphylumEi # -- Begin function _ZNK2kc29impl_ac_pointer_AcPointerCons9subphylumEi
	.p2align	5
	.type	_ZNK2kc29impl_ac_pointer_AcPointerCons9subphylumEi,@function
_ZNK2kc29impl_ac_pointer_AcPointerCons9subphylumEi: # @_ZNK2kc29impl_ac_pointer_AcPointerCons9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB58_3
# %bb.1:
	bnez	$a1, .LBB58_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB58_3:
	ld.d	$a0, $a0, 16
	ret
.LBB58_4:
	move	$a0, $zero
	ret
.Lfunc_end58:
	.size	_ZNK2kc29impl_ac_pointer_AcPointerCons9subphylumEi, .Lfunc_end58-_ZNK2kc29impl_ac_pointer_AcPointerCons9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_pointer_AcPointerNil9subphylumEi # -- Begin function _ZNK2kc28impl_ac_pointer_AcPointerNil9subphylumEi
	.p2align	5
	.type	_ZNK2kc28impl_ac_pointer_AcPointerNil9subphylumEi,@function
_ZNK2kc28impl_ac_pointer_AcPointerNil9subphylumEi: # @_ZNK2kc28impl_ac_pointer_AcPointerNil9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end59:
	.size	_ZNK2kc28impl_ac_pointer_AcPointerNil9subphylumEi, .Lfunc_end59-_ZNK2kc28impl_ac_pointer_AcPointerNil9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc33impl_ac_pointer_option_Yespointer9subphylumEi # -- Begin function _ZNK2kc33impl_ac_pointer_option_Yespointer9subphylumEi
	.p2align	5
	.type	_ZNK2kc33impl_ac_pointer_option_Yespointer9subphylumEi,@function
_ZNK2kc33impl_ac_pointer_option_Yespointer9subphylumEi: # @_ZNK2kc33impl_ac_pointer_option_Yespointer9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end60:
	.size	_ZNK2kc33impl_ac_pointer_option_Yespointer9subphylumEi, .Lfunc_end60-_ZNK2kc33impl_ac_pointer_option_Yespointer9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId9subphylumEi # -- Begin function _ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId9subphylumEi
	.p2align	5
	.type	_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId9subphylumEi,@function
_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId9subphylumEi: # @_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end61:
	.size	_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId9subphylumEi, .Lfunc_end61-_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl9subphylumEi # -- Begin function _ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl9subphylumEi
	.p2align	5
	.type	_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl9subphylumEi,@function
_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl9subphylumEi: # @_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB62_3
# %bb.1:
	bnez	$a1, .LBB62_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB62_3:
	ld.d	$a0, $a0, 16
	ret
.LBB62_4:
	move	$a0, $zero
	ret
.Lfunc_end62:
	.size	_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl9subphylumEi, .Lfunc_end62-_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl9subphylumEi # -- Begin function _ZNK2kc38impl_ac_direct_declarator_AcMemberDecl9subphylumEi
	.p2align	5
	.type	_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl9subphylumEi,@function
_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl9subphylumEi: # @_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB63_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB63_4
# %bb.2:
	bnez	$a1, .LBB63_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB63_4:
	ld.d	$a0, $a0, 16
	ret
.LBB63_5:
	ld.d	$a0, $a0, 24
	ret
.LBB63_6:
	move	$a0, $zero
	ret
.Lfunc_end63:
	.size	_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl9subphylumEi, .Lfunc_end63-_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto9subphylumEi # -- Begin function _ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto9subphylumEi
	.p2align	5
	.type	_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto9subphylumEi,@function
_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto9subphylumEi: # @_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto9subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB64_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI64_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI64_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB64_2:
	ld.d	$a0, $a0, 8
	ret
.LBB64_3:
	ld.d	$a0, $a0, 24
	ret
.LBB64_4:
	ld.d	$a0, $a0, 32
	ret
.LBB64_5:
	ld.d	$a0, $a0, 16
	ret
.LBB64_6:
	move	$a0, $zero
	ret
.Lfunc_end64:
	.size	_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto9subphylumEi, .Lfunc_end64-_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI64_0:
	.word	.LBB64_2-.LJTI64_0
	.word	.LBB64_5-.LJTI64_0
	.word	.LBB64_3-.LJTI64_0
	.word	.LBB64_4-.LJTI64_0
                                        # -- End function
	.text
	.globl	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto9subphylumEi # -- Begin function _ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto9subphylumEi
	.p2align	5
	.type	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto9subphylumEi,@function
_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto9subphylumEi: # @_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB65_3
# %bb.1:
	bnez	$a1, .LBB65_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB65_3:
	ld.d	$a0, $a0, 16
	ret
.LBB65_4:
	move	$a0, $zero
	ret
.Lfunc_end65:
	.size	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto9subphylumEi, .Lfunc_end65-_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray9subphylumEi # -- Begin function _ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray9subphylumEi
	.p2align	5
	.type	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray9subphylumEi,@function
_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray9subphylumEi: # @_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB66_3
# %bb.1:
	bnez	$a1, .LBB66_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB66_3:
	ld.d	$a0, $a0, 16
	ret
.LBB66_4:
	move	$a0, $zero
	ret
.Lfunc_end66:
	.size	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray9subphylumEi, .Lfunc_end66-_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack9subphylumEi # -- Begin function _ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack9subphylumEi
	.p2align	5
	.type	_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack9subphylumEi,@function
_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack9subphylumEi: # @_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end67:
	.size	_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack9subphylumEi, .Lfunc_end67-_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId9subphylumEi # -- Begin function _ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId9subphylumEi
	.p2align	5
	.type	_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId9subphylumEi,@function
_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId9subphylumEi: # @_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end68:
	.size	_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId9subphylumEi, .Lfunc_end68-_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc31impl_ac_declarator_AcDeclarator9subphylumEi # -- Begin function _ZNK2kc31impl_ac_declarator_AcDeclarator9subphylumEi
	.p2align	5
	.type	_ZNK2kc31impl_ac_declarator_AcDeclarator9subphylumEi,@function
_ZNK2kc31impl_ac_declarator_AcDeclarator9subphylumEi: # @_ZNK2kc31impl_ac_declarator_AcDeclarator9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB69_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB69_4
# %bb.2:
	bnez	$a1, .LBB69_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB69_4:
	ld.d	$a0, $a0, 16
	ret
.LBB69_5:
	ld.d	$a0, $a0, 24
	ret
.LBB69_6:
	move	$a0, $zero
	ret
.Lfunc_end69:
	.size	_ZNK2kc31impl_ac_declarator_AcDeclarator9subphylumEi, .Lfunc_end69-_ZNK2kc31impl_ac_declarator_AcDeclarator9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc34impl_ac_init_declarator_AcInitDecl9subphylumEi # -- Begin function _ZNK2kc34impl_ac_init_declarator_AcInitDecl9subphylumEi
	.p2align	5
	.type	_ZNK2kc34impl_ac_init_declarator_AcInitDecl9subphylumEi,@function
_ZNK2kc34impl_ac_init_declarator_AcInitDecl9subphylumEi: # @_ZNK2kc34impl_ac_init_declarator_AcInitDecl9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end70:
	.size	_ZNK2kc34impl_ac_init_declarator_AcInitDecl9subphylumEi, .Lfunc_end70-_ZNK2kc34impl_ac_init_declarator_AcInitDecl9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_init_declarator_list9subphylumEi # -- Begin function _ZNK2kc28impl_ac_init_declarator_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc28impl_ac_init_declarator_list9subphylumEi,@function
_ZNK2kc28impl_ac_init_declarator_list9subphylumEi: # @_ZNK2kc28impl_ac_init_declarator_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB71_3
# %bb.1:
	bnez	$a1, .LBB71_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB71_3:
	ld.d	$a0, $a0, 16
	ret
.LBB71_4:
	move	$a0, $zero
	ret
.Lfunc_end71:
	.size	_ZNK2kc28impl_ac_init_declarator_list9subphylumEi, .Lfunc_end71-_ZNK2kc28impl_ac_init_declarator_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc33impl_ac_type_specifier_AcTypeSpec9subphylumEi # -- Begin function _ZNK2kc33impl_ac_type_specifier_AcTypeSpec9subphylumEi
	.p2align	5
	.type	_ZNK2kc33impl_ac_type_specifier_AcTypeSpec9subphylumEi,@function
_ZNK2kc33impl_ac_type_specifier_AcTypeSpec9subphylumEi: # @_ZNK2kc33impl_ac_type_specifier_AcTypeSpec9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end72:
	.size	_ZNK2kc33impl_ac_type_specifier_AcTypeSpec9subphylumEi, .Lfunc_end72-_ZNK2kc33impl_ac_type_specifier_AcTypeSpec9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual9subphylumEi # -- Begin function _ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual9subphylumEi
	.p2align	5
	.type	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual9subphylumEi,@function
_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual9subphylumEi: # @_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end73:
	.size	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual9subphylumEi, .Lfunc_end73-_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec9subphylumEi # -- Begin function _ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec9subphylumEi
	.p2align	5
	.type	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec9subphylumEi,@function
_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec9subphylumEi: # @_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end74:
	.size	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec9subphylumEi, .Lfunc_end74-_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec9subphylumEi # -- Begin function _ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec9subphylumEi
	.p2align	5
	.type	_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec9subphylumEi,@function
_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec9subphylumEi: # @_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end75:
	.size	_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec9subphylumEi, .Lfunc_end75-_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc30impl_ac_declaration_specifiers9subphylumEi # -- Begin function _ZNK2kc30impl_ac_declaration_specifiers9subphylumEi
	.p2align	5
	.type	_ZNK2kc30impl_ac_declaration_specifiers9subphylumEi,@function
_ZNK2kc30impl_ac_declaration_specifiers9subphylumEi: # @_ZNK2kc30impl_ac_declaration_specifiers9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB76_3
# %bb.1:
	bnez	$a1, .LBB76_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB76_3:
	ld.d	$a0, $a0, 16
	ret
.LBB76_4:
	move	$a0, $zero
	ret
.Lfunc_end76:
	.size	_ZNK2kc30impl_ac_declaration_specifiers9subphylumEi, .Lfunc_end76-_ZNK2kc30impl_ac_declaration_specifiers9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_ac_declaration_list9subphylumEi # -- Begin function _ZNK2kc24impl_ac_declaration_list9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_ac_declaration_list9subphylumEi,@function
_ZNK2kc24impl_ac_declaration_list9subphylumEi: # @_ZNK2kc24impl_ac_declaration_list9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB77_3
# %bb.1:
	bnez	$a1, .LBB77_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB77_3:
	ld.d	$a0, $a0, 16
	ret
.LBB77_4:
	move	$a0, $zero
	ret
.Lfunc_end77:
	.size	_ZNK2kc24impl_ac_declaration_list9subphylumEi, .Lfunc_end77-_ZNK2kc24impl_ac_declaration_list9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc33impl_ac_declaration_AcDeclaration9subphylumEi # -- Begin function _ZNK2kc33impl_ac_declaration_AcDeclaration9subphylumEi
	.p2align	5
	.type	_ZNK2kc33impl_ac_declaration_AcDeclaration9subphylumEi,@function
_ZNK2kc33impl_ac_declaration_AcDeclaration9subphylumEi: # @_ZNK2kc33impl_ac_declaration_AcDeclaration9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB78_3
# %bb.1:
	bnez	$a1, .LBB78_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB78_3:
	ld.d	$a0, $a0, 16
	ret
.LBB78_4:
	move	$a0, $zero
	ret
.Lfunc_end78:
	.size	_ZNK2kc33impl_ac_declaration_AcDeclaration9subphylumEi, .Lfunc_end78-_ZNK2kc33impl_ac_declaration_AcDeclaration9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo9subphylumEi # -- Begin function _ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo9subphylumEi,@function
_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo9subphylumEi: # @_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB79_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB79_4
# %bb.2:
	bnez	$a1, .LBB79_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB79_4:
	ld.d	$a0, $a0, 16
	ret
.LBB79_5:
	ld.d	$a0, $a0, 24
	ret
.LBB79_6:
	move	$a0, $zero
	ret
.Lfunc_end79:
	.size	_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo9subphylumEi, .Lfunc_end79-_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc21impl_unparsedeclsinfo9subphylumEi # -- Begin function _ZNK2kc21impl_unparsedeclsinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_unparsedeclsinfo9subphylumEi,@function
_ZNK2kc21impl_unparsedeclsinfo9subphylumEi: # @_ZNK2kc21impl_unparsedeclsinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB80_3
# %bb.1:
	bnez	$a1, .LBB80_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB80_3:
	ld.d	$a0, $a0, 16
	ret
.LBB80_4:
	move	$a0, $zero
	ret
.Lfunc_end80:
	.size	_ZNK2kc21impl_unparsedeclsinfo9subphylumEi, .Lfunc_end80-_ZNK2kc21impl_unparsedeclsinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo9subphylumEi # -- Begin function _ZNK2kc36impl_unparseviewinfo_Unparseviewinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo9subphylumEi,@function
_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo9subphylumEi: # @_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB81_3
# %bb.1:
	bnez	$a1, .LBB81_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB81_3:
	ld.d	$a0, $a0, 16
	ret
.LBB81_4:
	move	$a0, $zero
	ret
.Lfunc_end81:
	.size	_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo9subphylumEi, .Lfunc_end81-_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc21impl_unparseviewsinfo9subphylumEi # -- Begin function _ZNK2kc21impl_unparseviewsinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_unparseviewsinfo9subphylumEi,@function
_ZNK2kc21impl_unparseviewsinfo9subphylumEi: # @_ZNK2kc21impl_unparseviewsinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB82_3
# %bb.1:
	bnez	$a1, .LBB82_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB82_3:
	ld.d	$a0, $a0, 16
	ret
.LBB82_4:
	move	$a0, $zero
	ret
.Lfunc_end82:
	.size	_ZNK2kc21impl_unparseviewsinfo9subphylumEi, .Lfunc_end82-_ZNK2kc21impl_unparseviewsinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo9subphylumEi # -- Begin function _ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo9subphylumEi,@function
_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo9subphylumEi: # @_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB83_3
# %bb.1:
	bnez	$a1, .LBB83_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB83_3:
	ld.d	$a0, $a0, 16
	ret
.LBB83_4:
	move	$a0, $zero
	ret
.Lfunc_end83:
	.size	_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo9subphylumEi, .Lfunc_end83-_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc21impl_rewriteviewsinfo9subphylumEi # -- Begin function _ZNK2kc21impl_rewriteviewsinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_rewriteviewsinfo9subphylumEi,@function
_ZNK2kc21impl_rewriteviewsinfo9subphylumEi: # @_ZNK2kc21impl_rewriteviewsinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB84_3
# %bb.1:
	bnez	$a1, .LBB84_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB84_3:
	ld.d	$a0, $a0, 16
	ret
.LBB84_4:
	move	$a0, $zero
	ret
.Lfunc_end84:
	.size	_ZNK2kc21impl_rewriteviewsinfo9subphylumEi, .Lfunc_end84-_ZNK2kc21impl_rewriteviewsinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc30impl_withcaseinfo_Withcaseinfo9subphylumEi # -- Begin function _ZNK2kc30impl_withcaseinfo_Withcaseinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc30impl_withcaseinfo_Withcaseinfo9subphylumEi,@function
_ZNK2kc30impl_withcaseinfo_Withcaseinfo9subphylumEi: # @_ZNK2kc30impl_withcaseinfo_Withcaseinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB85_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB85_4
# %bb.2:
	bnez	$a1, .LBB85_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB85_4:
	ld.d	$a0, $a0, 16
	ret
.LBB85_5:
	ld.d	$a0, $a0, 24
	ret
.LBB85_6:
	move	$a0, $zero
	ret
.Lfunc_end85:
	.size	_ZNK2kc30impl_withcaseinfo_Withcaseinfo9subphylumEi, .Lfunc_end85-_ZNK2kc30impl_withcaseinfo_Withcaseinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc18impl_withcasesinfo9subphylumEi # -- Begin function _ZNK2kc18impl_withcasesinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc18impl_withcasesinfo9subphylumEi,@function
_ZNK2kc18impl_withcasesinfo9subphylumEi: # @_ZNK2kc18impl_withcasesinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB86_3
# %bb.1:
	bnez	$a1, .LBB86_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB86_3:
	ld.d	$a0, $a0, 16
	ret
.LBB86_4:
	move	$a0, $zero
	ret
.Lfunc_end86:
	.size	_ZNK2kc18impl_withcasesinfo9subphylumEi, .Lfunc_end86-_ZNK2kc18impl_withcasesinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo9subphylumEi # -- Begin function _ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo9subphylumEi,@function
_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo9subphylumEi: # @_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB87_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB87_4
# %bb.2:
	bnez	$a1, .LBB87_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB87_4:
	ld.d	$a0, $a0, 16
	ret
.LBB87_5:
	ld.d	$a0, $a0, 24
	ret
.LBB87_6:
	move	$a0, $zero
	ret
.Lfunc_end87:
	.size	_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo9subphylumEi, .Lfunc_end87-_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc21impl_rewriterulesinfo9subphylumEi # -- Begin function _ZNK2kc21impl_rewriterulesinfo9subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_rewriterulesinfo9subphylumEi,@function
_ZNK2kc21impl_rewriterulesinfo9subphylumEi: # @_ZNK2kc21impl_rewriterulesinfo9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB88_3
# %bb.1:
	bnez	$a1, .LBB88_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB88_3:
	ld.d	$a0, $a0, 16
	ret
.LBB88_4:
	move	$a0, $zero
	ret
.Lfunc_end88:
	.size	_ZNK2kc21impl_rewriterulesinfo9subphylumEi, .Lfunc_end88-_ZNK2kc21impl_rewriterulesinfo9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc16impl_argsnumbers9subphylumEi # -- Begin function _ZNK2kc16impl_argsnumbers9subphylumEi
	.p2align	5
	.type	_ZNK2kc16impl_argsnumbers9subphylumEi,@function
_ZNK2kc16impl_argsnumbers9subphylumEi:  # @_ZNK2kc16impl_argsnumbers9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB89_3
# %bb.1:
	bnez	$a1, .LBB89_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB89_3:
	ld.d	$a0, $a0, 16
	ret
.LBB89_4:
	move	$a0, $zero
	ret
.Lfunc_end89:
	.size	_ZNK2kc16impl_argsnumbers9subphylumEi, .Lfunc_end89-_ZNK2kc16impl_argsnumbers9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc10impl_paths9subphylumEi # -- Begin function _ZNK2kc10impl_paths9subphylumEi
	.p2align	5
	.type	_ZNK2kc10impl_paths9subphylumEi,@function
_ZNK2kc10impl_paths9subphylumEi:        # @_ZNK2kc10impl_paths9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB90_3
# %bb.1:
	bnez	$a1, .LBB90_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB90_3:
	ld.d	$a0, $a0, 16
	ret
.LBB90_4:
	move	$a0, $zero
	ret
.Lfunc_end90:
	.size	_ZNK2kc10impl_paths9subphylumEi, .Lfunc_end90-_ZNK2kc10impl_paths9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc9impl_path9subphylumEi   # -- Begin function _ZNK2kc9impl_path9subphylumEi
	.p2align	5
	.type	_ZNK2kc9impl_path9subphylumEi,@function
_ZNK2kc9impl_path9subphylumEi:          # @_ZNK2kc9impl_path9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB91_3
# %bb.1:
	bnez	$a1, .LBB91_4
# %bb.2:
	ld.d	$a0, $a0, 24
	ret
.LBB91_3:
	ld.d	$a0, $a0, 32
	ret
.LBB91_4:
	move	$a0, $zero
	ret
.Lfunc_end91:
	.size	_ZNK2kc9impl_path9subphylumEi, .Lfunc_end91-_ZNK2kc9impl_path9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral9subphylumEi # -- Begin function _ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral9subphylumEi
	.p2align	5
	.type	_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral9subphylumEi,@function
_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral9subphylumEi: # @_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB92_3
# %bb.1:
	bnez	$a1, .LBB92_4
# %bb.2:
	ld.d	$a0, $a0, 32
	ret
.LBB92_3:
	ld.d	$a0, $a0, 40
	ret
.LBB92_4:
	move	$a0, $zero
	ret
.Lfunc_end92:
	.size	_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral9subphylumEi, .Lfunc_end92-_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral9subphylumEi # -- Begin function _ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral9subphylumEi
	.p2align	5
	.type	_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral9subphylumEi,@function
_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral9subphylumEi: # @_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB93_3
# %bb.1:
	bnez	$a1, .LBB93_4
# %bb.2:
	ld.d	$a0, $a0, 32
	ret
.LBB93_3:
	ld.d	$a0, $a0, 40
	ret
.LBB93_4:
	move	$a0, $zero
	ret
.Lfunc_end93:
	.size	_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral9subphylumEi, .Lfunc_end93-_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc42impl_elem_patternrepresentation_PRWildcard9subphylumEi # -- Begin function _ZNK2kc42impl_elem_patternrepresentation_PRWildcard9subphylumEi
	.p2align	5
	.type	_ZNK2kc42impl_elem_patternrepresentation_PRWildcard9subphylumEi,@function
_ZNK2kc42impl_elem_patternrepresentation_PRWildcard9subphylumEi: # @_ZNK2kc42impl_elem_patternrepresentation_PRWildcard9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end94:
	.size	_ZNK2kc42impl_elem_patternrepresentation_PRWildcard9subphylumEi, .Lfunc_end94-_ZNK2kc42impl_elem_patternrepresentation_PRWildcard9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding9subphylumEi # -- Begin function _ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding9subphylumEi
	.p2align	5
	.type	_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding9subphylumEi,@function
_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding9subphylumEi: # @_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB95_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB95_4
# %bb.2:
	bnez	$a1, .LBB95_6
# %bb.3:
	ld.d	$a0, $a0, 32
	ret
.LBB95_4:
	ld.d	$a0, $a0, 40
	ret
.LBB95_5:
	ld.d	$a0, $a0, 48
	ret
.LBB95_6:
	move	$a0, $zero
	ret
.Lfunc_end95:
	.size	_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding9subphylumEi, .Lfunc_end95-_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate9subphylumEi # -- Begin function _ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate9subphylumEi
	.p2align	5
	.type	_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate9subphylumEi,@function
_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate9subphylumEi: # @_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end96:
	.size	_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate9subphylumEi, .Lfunc_end96-_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate9subphylumEi # -- Begin function _ZNK2kc47impl_elem_patternrepresentation_PROperPredicate9subphylumEi
	.p2align	5
	.type	_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate9subphylumEi,@function
_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate9subphylumEi: # @_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB97_3
# %bb.1:
	bnez	$a1, .LBB97_4
# %bb.2:
	ld.d	$a0, $a0, 32
	ret
.LBB97_3:
	ld.d	$a0, $a0, 40
	ret
.LBB97_4:
	move	$a0, $zero
	ret
.Lfunc_end97:
	.size	_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate9subphylumEi, .Lfunc_end97-_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate9subphylumEi # -- Begin function _ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate9subphylumEi
	.p2align	5
	.type	_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate9subphylumEi,@function
_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate9subphylumEi: # @_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB98_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB98_4
# %bb.2:
	bnez	$a1, .LBB98_6
# %bb.3:
	ld.d	$a0, $a0, 32
	ret
.LBB98_4:
	ld.d	$a0, $a0, 40
	ret
.LBB98_5:
	ld.d	$a0, $a0, 48
	ret
.LBB98_6:
	move	$a0, $zero
	ret
.Lfunc_end98:
	.size	_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate9subphylumEi, .Lfunc_end98-_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc41impl_elem_patternrepresentation_PRBinding9subphylumEi # -- Begin function _ZNK2kc41impl_elem_patternrepresentation_PRBinding9subphylumEi
	.p2align	5
	.type	_ZNK2kc41impl_elem_patternrepresentation_PRBinding9subphylumEi,@function
_ZNK2kc41impl_elem_patternrepresentation_PRBinding9subphylumEi: # @_ZNK2kc41impl_elem_patternrepresentation_PRBinding9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB99_3
# %bb.1:
	bnez	$a1, .LBB99_4
# %bb.2:
	ld.d	$a0, $a0, 32
	ret
.LBB99_3:
	ld.d	$a0, $a0, 40
	ret
.LBB99_4:
	move	$a0, $zero
	ret
.Lfunc_end99:
	.size	_ZNK2kc41impl_elem_patternrepresentation_PRBinding9subphylumEi, .Lfunc_end99-_ZNK2kc41impl_elem_patternrepresentation_PRBinding9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc26impl_patternrepresentation9subphylumEi # -- Begin function _ZNK2kc26impl_patternrepresentation9subphylumEi
	.p2align	5
	.type	_ZNK2kc26impl_patternrepresentation9subphylumEi,@function
_ZNK2kc26impl_patternrepresentation9subphylumEi: # @_ZNK2kc26impl_patternrepresentation9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB100_3
# %bb.1:
	bnez	$a1, .LBB100_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB100_3:
	ld.d	$a0, $a0, 16
	ret
.LBB100_4:
	move	$a0, $zero
	ret
.Lfunc_end100:
	.size	_ZNK2kc26impl_patternrepresentation9subphylumEi, .Lfunc_end100-_ZNK2kc26impl_patternrepresentation9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc27impl_patternrepresentations9subphylumEi # -- Begin function _ZNK2kc27impl_patternrepresentations9subphylumEi
	.p2align	5
	.type	_ZNK2kc27impl_patternrepresentations9subphylumEi,@function
_ZNK2kc27impl_patternrepresentations9subphylumEi: # @_ZNK2kc27impl_patternrepresentations9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB101_3
# %bb.1:
	bnez	$a1, .LBB101_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB101_3:
	ld.d	$a0, $a0, 16
	ret
.LBB101_4:
	move	$a0, $zero
	ret
.Lfunc_end101:
	.size	_ZNK2kc27impl_patternrepresentations9subphylumEi, .Lfunc_end101-_ZNK2kc27impl_patternrepresentations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc14impl_variables9subphylumEi # -- Begin function _ZNK2kc14impl_variables9subphylumEi
	.p2align	5
	.type	_ZNK2kc14impl_variables9subphylumEi,@function
_ZNK2kc14impl_variables9subphylumEi:    # @_ZNK2kc14impl_variables9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB102_3
# %bb.1:
	bnez	$a1, .LBB102_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB102_3:
	ld.d	$a0, $a0, 16
	ret
.LBB102_4:
	move	$a0, $zero
	ret
.Lfunc_end102:
	.size	_ZNK2kc14impl_variables9subphylumEi, .Lfunc_end102-_ZNK2kc14impl_variables9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc10impl_phyla9subphylumEi # -- Begin function _ZNK2kc10impl_phyla9subphylumEi
	.p2align	5
	.type	_ZNK2kc10impl_phyla9subphylumEi,@function
_ZNK2kc10impl_phyla9subphylumEi:        # @_ZNK2kc10impl_phyla9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB103_3
# %bb.1:
	bnez	$a1, .LBB103_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB103_3:
	ld.d	$a0, $a0, 16
	ret
.LBB103_4:
	move	$a0, $zero
	ret
.Lfunc_end103:
	.size	_ZNK2kc10impl_phyla9subphylumEi, .Lfunc_end103-_ZNK2kc10impl_phyla9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc14impl_operators9subphylumEi # -- Begin function _ZNK2kc14impl_operators9subphylumEi
	.p2align	5
	.type	_ZNK2kc14impl_operators9subphylumEi,@function
_ZNK2kc14impl_operators9subphylumEi:    # @_ZNK2kc14impl_operators9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB104_3
# %bb.1:
	bnez	$a1, .LBB104_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB104_3:
	ld.d	$a0, $a0, 16
	ret
.LBB104_4:
	move	$a0, $zero
	ret
.Lfunc_end104:
	.size	_ZNK2kc14impl_operators9subphylumEi, .Lfunc_end104-_ZNK2kc14impl_operators9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc26impl_IDtype_ITLanguageName9subphylumEi # -- Begin function _ZNK2kc26impl_IDtype_ITLanguageName9subphylumEi
	.p2align	5
	.type	_ZNK2kc26impl_IDtype_ITLanguageName9subphylumEi,@function
_ZNK2kc26impl_IDtype_ITLanguageName9subphylumEi: # @_ZNK2kc26impl_IDtype_ITLanguageName9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end105:
	.size	_ZNK2kc26impl_IDtype_ITLanguageName9subphylumEi, .Lfunc_end105-_ZNK2kc26impl_IDtype_ITLanguageName9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc29impl_IDtype_ITPatternVariable9subphylumEi # -- Begin function _ZNK2kc29impl_IDtype_ITPatternVariable9subphylumEi
	.p2align	5
	.type	_ZNK2kc29impl_IDtype_ITPatternVariable9subphylumEi,@function
_ZNK2kc29impl_IDtype_ITPatternVariable9subphylumEi: # @_ZNK2kc29impl_IDtype_ITPatternVariable9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB106_3
# %bb.1:
	bnez	$a1, .LBB106_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB106_3:
	ld.d	$a0, $a0, 16
	ret
.LBB106_4:
	move	$a0, $zero
	ret
.Lfunc_end106:
	.size	_ZNK2kc29impl_IDtype_ITPatternVariable9subphylumEi, .Lfunc_end106-_ZNK2kc29impl_IDtype_ITPatternVariable9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc26impl_IDtype_ITUserFunction9subphylumEi # -- Begin function _ZNK2kc26impl_IDtype_ITUserFunction9subphylumEi
	.p2align	5
	.type	_ZNK2kc26impl_IDtype_ITUserFunction9subphylumEi,@function
_ZNK2kc26impl_IDtype_ITUserFunction9subphylumEi: # @_ZNK2kc26impl_IDtype_ITUserFunction9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end107:
	.size	_ZNK2kc26impl_IDtype_ITUserFunction9subphylumEi, .Lfunc_end107-_ZNK2kc26impl_IDtype_ITUserFunction9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc26impl_IDtype_ITUserOperator9subphylumEi # -- Begin function _ZNK2kc26impl_IDtype_ITUserOperator9subphylumEi
	.p2align	5
	.type	_ZNK2kc26impl_IDtype_ITUserOperator9subphylumEi,@function
_ZNK2kc26impl_IDtype_ITUserOperator9subphylumEi: # @_ZNK2kc26impl_IDtype_ITUserOperator9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB108_3
# %bb.1:
	bnez	$a1, .LBB108_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB108_3:
	ld.d	$a0, $a0, 16
	ret
.LBB108_4:
	move	$a0, $zero
	ret
.Lfunc_end108:
	.size	_ZNK2kc26impl_IDtype_ITUserOperator9subphylumEi, .Lfunc_end108-_ZNK2kc26impl_IDtype_ITUserOperator9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc32impl_IDtype_ITPredefinedOperator9subphylumEi # -- Begin function _ZNK2kc32impl_IDtype_ITPredefinedOperator9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_IDtype_ITPredefinedOperator9subphylumEi,@function
_ZNK2kc32impl_IDtype_ITPredefinedOperator9subphylumEi: # @_ZNK2kc32impl_IDtype_ITPredefinedOperator9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB109_3
# %bb.1:
	bnez	$a1, .LBB109_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB109_3:
	ld.d	$a0, $a0, 16
	ret
.LBB109_4:
	move	$a0, $zero
	ret
.Lfunc_end109:
	.size	_ZNK2kc32impl_IDtype_ITPredefinedOperator9subphylumEi, .Lfunc_end109-_ZNK2kc32impl_IDtype_ITPredefinedOperator9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_IDtype_ITUserPhylum9subphylumEi # -- Begin function _ZNK2kc24impl_IDtype_ITUserPhylum9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_IDtype_ITUserPhylum9subphylumEi,@function
_ZNK2kc24impl_IDtype_ITUserPhylum9subphylumEi: # @_ZNK2kc24impl_IDtype_ITUserPhylum9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end110:
	.size	_ZNK2kc24impl_IDtype_ITUserPhylum9subphylumEi, .Lfunc_end110-_ZNK2kc24impl_IDtype_ITUserPhylum9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc30impl_IDtype_ITPredefinedPhylum9subphylumEi # -- Begin function _ZNK2kc30impl_IDtype_ITPredefinedPhylum9subphylumEi
	.p2align	5
	.type	_ZNK2kc30impl_IDtype_ITPredefinedPhylum9subphylumEi,@function
_ZNK2kc30impl_IDtype_ITPredefinedPhylum9subphylumEi: # @_ZNK2kc30impl_IDtype_ITPredefinedPhylum9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end111:
	.size	_ZNK2kc30impl_IDtype_ITPredefinedPhylum9subphylumEi, .Lfunc_end111-_ZNK2kc30impl_IDtype_ITPredefinedPhylum9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine9subphylumEi # -- Begin function _ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine9subphylumEi
	.p2align	5
	.type	_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine9subphylumEi,@function
_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine9subphylumEi: # @_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine9subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB112_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI112_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI112_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB112_2:
	ld.d	$a0, $a0, 8
	ret
.LBB112_3:
	ld.d	$a0, $a0, 24
	ret
.LBB112_4:
	ld.d	$a0, $a0, 32
	ret
.LBB112_5:
	ld.d	$a0, $a0, 16
	ret
.LBB112_6:
	move	$a0, $zero
	ret
.Lfunc_end112:
	.size	_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine9subphylumEi, .Lfunc_end112-_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI112_0:
	.word	.LBB112_2-.LJTI112_0
	.word	.LBB112_5-.LJTI112_0
	.word	.LBB112_3-.LJTI112_0
	.word	.LBB112_4-.LJTI112_0
                                        # -- End function
	.text
	.globl	_ZNK2kc27impl_scopetypefilelinestack9subphylumEi # -- Begin function _ZNK2kc27impl_scopetypefilelinestack9subphylumEi
	.p2align	5
	.type	_ZNK2kc27impl_scopetypefilelinestack9subphylumEi,@function
_ZNK2kc27impl_scopetypefilelinestack9subphylumEi: # @_ZNK2kc27impl_scopetypefilelinestack9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB113_3
# %bb.1:
	bnez	$a1, .LBB113_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB113_3:
	ld.d	$a0, $a0, 16
	ret
.LBB113_4:
	move	$a0, $zero
	ret
.Lfunc_end113:
	.size	_ZNK2kc27impl_scopetypefilelinestack9subphylumEi, .Lfunc_end113-_ZNK2kc27impl_scopetypefilelinestack9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc18impl_languagenames9subphylumEi # -- Begin function _ZNK2kc18impl_languagenames9subphylumEi
	.p2align	5
	.type	_ZNK2kc18impl_languagenames9subphylumEi,@function
_ZNK2kc18impl_languagenames9subphylumEi: # @_ZNK2kc18impl_languagenames9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB114_3
# %bb.1:
	bnez	$a1, .LBB114_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB114_3:
	ld.d	$a0, $a0, 16
	ret
.LBB114_4:
	move	$a0, $zero
	ret
.Lfunc_end114:
	.size	_ZNK2kc18impl_languagenames9subphylumEi, .Lfunc_end114-_ZNK2kc18impl_languagenames9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc32impl_languageoption_LanguageList9subphylumEi # -- Begin function _ZNK2kc32impl_languageoption_LanguageList9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_languageoption_LanguageList9subphylumEi,@function
_ZNK2kc32impl_languageoption_LanguageList9subphylumEi: # @_ZNK2kc32impl_languageoption_LanguageList9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end115:
	.size	_ZNK2kc32impl_languageoption_LanguageList9subphylumEi, .Lfunc_end115-_ZNK2kc32impl_languageoption_LanguageList9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc31impl_viewnameoption_YesViewname9subphylumEi # -- Begin function _ZNK2kc31impl_viewnameoption_YesViewname9subphylumEi
	.p2align	5
	.type	_ZNK2kc31impl_viewnameoption_YesViewname9subphylumEi,@function
_ZNK2kc31impl_viewnameoption_YesViewname9subphylumEi: # @_ZNK2kc31impl_viewnameoption_YesViewname9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end116:
	.size	_ZNK2kc31impl_viewnameoption_YesViewname9subphylumEi, .Lfunc_end116-_ZNK2kc31impl_viewnameoption_YesViewname9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc18impl_unpattributes9subphylumEi # -- Begin function _ZNK2kc18impl_unpattributes9subphylumEi
	.p2align	5
	.type	_ZNK2kc18impl_unpattributes9subphylumEi,@function
_ZNK2kc18impl_unpattributes9subphylumEi: # @_ZNK2kc18impl_unpattributes9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB117_3
# %bb.1:
	bnez	$a1, .LBB117_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB117_3:
	ld.d	$a0, $a0, 16
	ret
.LBB117_4:
	move	$a0, $zero
	ret
.Lfunc_end117:
	.size	_ZNK2kc18impl_unpattributes9subphylumEi, .Lfunc_end117-_ZNK2kc18impl_unpattributes9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc33impl_unpsubterm_UnpCastedVariable9subphylumEi # -- Begin function _ZNK2kc33impl_unpsubterm_UnpCastedVariable9subphylumEi
	.p2align	5
	.type	_ZNK2kc33impl_unpsubterm_UnpCastedVariable9subphylumEi,@function
_ZNK2kc33impl_unpsubterm_UnpCastedVariable9subphylumEi: # @_ZNK2kc33impl_unpsubterm_UnpCastedVariable9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB118_3
# %bb.1:
	bnez	$a1, .LBB118_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB118_3:
	ld.d	$a0, $a0, 16
	ret
.LBB118_4:
	move	$a0, $zero
	ret
.Lfunc_end118:
	.size	_ZNK2kc33impl_unpsubterm_UnpCastedVariable9subphylumEi, .Lfunc_end118-_ZNK2kc33impl_unpsubterm_UnpCastedVariable9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr9subphylumEi # -- Begin function _ZNK2kc32impl_unpsubterm_UnpDollarvarAttr9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr9subphylumEi,@function
_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr9subphylumEi: # @_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB119_3
# %bb.1:
	bnez	$a1, .LBB119_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB119_3:
	ld.d	$a0, $a0, 16
	ret
.LBB119_4:
	move	$a0, $zero
	ret
.Lfunc_end119:
	.size	_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr9subphylumEi, .Lfunc_end119-_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc26impl_unpsubterm_UnpSubAttr9subphylumEi # -- Begin function _ZNK2kc26impl_unpsubterm_UnpSubAttr9subphylumEi
	.p2align	5
	.type	_ZNK2kc26impl_unpsubterm_UnpSubAttr9subphylumEi,@function
_ZNK2kc26impl_unpsubterm_UnpSubAttr9subphylumEi: # @_ZNK2kc26impl_unpsubterm_UnpSubAttr9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB120_3
# %bb.1:
	bnez	$a1, .LBB120_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB120_3:
	ld.d	$a0, $a0, 16
	ret
.LBB120_4:
	move	$a0, $zero
	ret
.Lfunc_end120:
	.size	_ZNK2kc26impl_unpsubterm_UnpSubAttr9subphylumEi, .Lfunc_end120-_ZNK2kc26impl_unpsubterm_UnpSubAttr9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm9subphylumEi # -- Begin function _ZNK2kc32impl_unpsubterm_UnpDollarvarTerm9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm9subphylumEi,@function
_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm9subphylumEi: # @_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end121:
	.size	_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm9subphylumEi, .Lfunc_end121-_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc26impl_unpsubterm_UnpSubTerm9subphylumEi # -- Begin function _ZNK2kc26impl_unpsubterm_UnpSubTerm9subphylumEi
	.p2align	5
	.type	_ZNK2kc26impl_unpsubterm_UnpSubTerm9subphylumEi,@function
_ZNK2kc26impl_unpsubterm_UnpSubTerm9subphylumEi: # @_ZNK2kc26impl_unpsubterm_UnpSubTerm9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end122:
	.size	_ZNK2kc26impl_unpsubterm_UnpSubTerm9subphylumEi, .Lfunc_end122-_ZNK2kc26impl_unpsubterm_UnpSubTerm9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc29impl_unparseitem_UViewVarDecl9subphylumEi # -- Begin function _ZNK2kc29impl_unparseitem_UViewVarDecl9subphylumEi
	.p2align	5
	.type	_ZNK2kc29impl_unparseitem_UViewVarDecl9subphylumEi,@function
_ZNK2kc29impl_unparseitem_UViewVarDecl9subphylumEi: # @_ZNK2kc29impl_unparseitem_UViewVarDecl9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB123_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB123_4
# %bb.2:
	bnez	$a1, .LBB123_6
# %bb.3:
	ld.d	$a0, $a0, 16
	ret
.LBB123_4:
	ld.d	$a0, $a0, 24
	ret
.LBB123_5:
	ld.d	$a0, $a0, 32
	ret
.LBB123_6:
	move	$a0, $zero
	ret
.Lfunc_end123:
	.size	_ZNK2kc29impl_unparseitem_UViewVarDecl9subphylumEi, .Lfunc_end123-_ZNK2kc29impl_unparseitem_UViewVarDecl9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_unparseitem_UnpBody9subphylumEi # -- Begin function _ZNK2kc24impl_unparseitem_UnpBody9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_unparseitem_UnpBody9subphylumEi,@function
_ZNK2kc24impl_unparseitem_UnpBody9subphylumEi: # @_ZNK2kc24impl_unparseitem_UnpBody9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB124_3
# %bb.1:
	bnez	$a1, .LBB124_4
# %bb.2:
	ld.d	$a0, $a0, 16
	ret
.LBB124_3:
	ld.d	$a0, $a0, 24
	ret
.LBB124_4:
	move	$a0, $zero
	ret
.Lfunc_end124:
	.size	_ZNK2kc24impl_unparseitem_UnpBody9subphylumEi, .Lfunc_end124-_ZNK2kc24impl_unparseitem_UnpBody9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc25impl_unparseitem_UnpCtext9subphylumEi # -- Begin function _ZNK2kc25impl_unparseitem_UnpCtext9subphylumEi
	.p2align	5
	.type	_ZNK2kc25impl_unparseitem_UnpCtext9subphylumEi,@function
_ZNK2kc25impl_unparseitem_UnpCtext9subphylumEi: # @_ZNK2kc25impl_unparseitem_UnpCtext9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB125_3
# %bb.1:
	bnez	$a1, .LBB125_4
# %bb.2:
	ld.d	$a0, $a0, 16
	ret
.LBB125_3:
	ld.d	$a0, $a0, 24
	ret
.LBB125_4:
	move	$a0, $zero
	ret
.Lfunc_end125:
	.size	_ZNK2kc25impl_unparseitem_UnpCtext9subphylumEi, .Lfunc_end125-_ZNK2kc25impl_unparseitem_UnpCtext9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc27impl_unparseitem_UnpSubexpr9subphylumEi # -- Begin function _ZNK2kc27impl_unparseitem_UnpSubexpr9subphylumEi
	.p2align	5
	.type	_ZNK2kc27impl_unparseitem_UnpSubexpr9subphylumEi,@function
_ZNK2kc27impl_unparseitem_UnpSubexpr9subphylumEi: # @_ZNK2kc27impl_unparseitem_UnpSubexpr9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB126_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB126_4
# %bb.2:
	bnez	$a1, .LBB126_6
# %bb.3:
	ld.d	$a0, $a0, 16
	ret
.LBB126_4:
	ld.d	$a0, $a0, 24
	ret
.LBB126_5:
	ld.d	$a0, $a0, 32
	ret
.LBB126_6:
	move	$a0, $zero
	ret
.Lfunc_end126:
	.size	_ZNK2kc27impl_unparseitem_UnpSubexpr9subphylumEi, .Lfunc_end126-_ZNK2kc27impl_unparseitem_UnpSubexpr9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc23impl_unparseitem_UnpStr9subphylumEi # -- Begin function _ZNK2kc23impl_unparseitem_UnpStr9subphylumEi
	.p2align	5
	.type	_ZNK2kc23impl_unparseitem_UnpStr9subphylumEi,@function
_ZNK2kc23impl_unparseitem_UnpStr9subphylumEi: # @_ZNK2kc23impl_unparseitem_UnpStr9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB127_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB127_4
# %bb.2:
	bnez	$a1, .LBB127_6
# %bb.3:
	ld.d	$a0, $a0, 16
	ret
.LBB127_4:
	ld.d	$a0, $a0, 24
	ret
.LBB127_5:
	ld.d	$a0, $a0, 32
	ret
.LBB127_6:
	move	$a0, $zero
	ret
.Lfunc_end127:
	.size	_ZNK2kc23impl_unparseitem_UnpStr9subphylumEi, .Lfunc_end127-_ZNK2kc23impl_unparseitem_UnpStr9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc17impl_unparseitems9subphylumEi # -- Begin function _ZNK2kc17impl_unparseitems9subphylumEi
	.p2align	5
	.type	_ZNK2kc17impl_unparseitems9subphylumEi,@function
_ZNK2kc17impl_unparseitems9subphylumEi: # @_ZNK2kc17impl_unparseitems9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB128_3
# %bb.1:
	bnez	$a1, .LBB128_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB128_3:
	ld.d	$a0, $a0, 16
	ret
.LBB128_4:
	move	$a0, $zero
	ret
.Lfunc_end128:
	.size	_ZNK2kc17impl_unparseitems9subphylumEi, .Lfunc_end128-_ZNK2kc17impl_unparseitems9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc14impl_viewnames9subphylumEi # -- Begin function _ZNK2kc14impl_viewnames9subphylumEi
	.p2align	5
	.type	_ZNK2kc14impl_viewnames9subphylumEi,@function
_ZNK2kc14impl_viewnames9subphylumEi:    # @_ZNK2kc14impl_viewnames9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB129_3
# %bb.1:
	bnez	$a1, .LBB129_4
# %bb.2:
	ld.d	$a0, $a0, 16
	ret
.LBB129_3:
	ld.d	$a0, $a0, 24
	ret
.LBB129_4:
	move	$a0, $zero
	ret
.Lfunc_end129:
	.size	_ZNK2kc14impl_viewnames9subphylumEi, .Lfunc_end129-_ZNK2kc14impl_viewnames9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc32impl_unparseclause_UnparseClause9subphylumEi # -- Begin function _ZNK2kc32impl_unparseclause_UnparseClause9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_unparseclause_UnparseClause9subphylumEi,@function
_ZNK2kc32impl_unparseclause_UnparseClause9subphylumEi: # @_ZNK2kc32impl_unparseclause_UnparseClause9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB130_3
# %bb.1:
	bnez	$a1, .LBB130_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB130_3:
	ld.d	$a0, $a0, 16
	ret
.LBB130_4:
	move	$a0, $zero
	ret
.Lfunc_end130:
	.size	_ZNK2kc32impl_unparseclause_UnparseClause9subphylumEi, .Lfunc_end130-_ZNK2kc32impl_unparseclause_UnparseClause9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_unparseclauses9subphylumEi # -- Begin function _ZNK2kc19impl_unparseclauses9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_unparseclauses9subphylumEi,@function
_ZNK2kc19impl_unparseclauses9subphylumEi: # @_ZNK2kc19impl_unparseclauses9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB131_3
# %bb.1:
	bnez	$a1, .LBB131_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB131_3:
	ld.d	$a0, $a0, 16
	ret
.LBB131_4:
	move	$a0, $zero
	ret
.Lfunc_end131:
	.size	_ZNK2kc19impl_unparseclauses9subphylumEi, .Lfunc_end131-_ZNK2kc19impl_unparseclauses9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration9subphylumEi # -- Begin function _ZNK2kc42impl_unparsedeclaration_UnparseDeclaration9subphylumEi
	.p2align	5
	.type	_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration9subphylumEi,@function
_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration9subphylumEi: # @_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB132_3
# %bb.1:
	bnez	$a1, .LBB132_4
# %bb.2:
	ld.d	$a0, $a0, 16
	ret
.LBB132_3:
	ld.d	$a0, $a0, 24
	ret
.LBB132_4:
	move	$a0, $zero
	ret
.Lfunc_end132:
	.size	_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration9subphylumEi, .Lfunc_end132-_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_unparsedeclarations9subphylumEi # -- Begin function _ZNK2kc24impl_unparsedeclarations9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_unparsedeclarations9subphylumEi,@function
_ZNK2kc24impl_unparsedeclarations9subphylumEi: # @_ZNK2kc24impl_unparsedeclarations9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB133_3
# %bb.1:
	bnez	$a1, .LBB133_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB133_3:
	ld.d	$a0, $a0, 16
	ret
.LBB133_4:
	move	$a0, $zero
	ret
.Lfunc_end133:
	.size	_ZNK2kc24impl_unparsedeclarations9subphylumEi, .Lfunc_end133-_ZNK2kc24impl_unparsedeclarations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc22impl_withcase_Withcase9subphylumEi # -- Begin function _ZNK2kc22impl_withcase_Withcase9subphylumEi
	.p2align	5
	.type	_ZNK2kc22impl_withcase_Withcase9subphylumEi,@function
_ZNK2kc22impl_withcase_Withcase9subphylumEi: # @_ZNK2kc22impl_withcase_Withcase9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB134_3
# %bb.1:
	bnez	$a1, .LBB134_4
# %bb.2:
	ld.d	$a0, $a0, 16
	ret
.LBB134_3:
	ld.d	$a0, $a0, 24
	ret
.LBB134_4:
	move	$a0, $zero
	ret
.Lfunc_end134:
	.size	_ZNK2kc22impl_withcase_Withcase9subphylumEi, .Lfunc_end134-_ZNK2kc22impl_withcase_Withcase9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc14impl_withcases9subphylumEi # -- Begin function _ZNK2kc14impl_withcases9subphylumEi
	.p2align	5
	.type	_ZNK2kc14impl_withcases9subphylumEi,@function
_ZNK2kc14impl_withcases9subphylumEi:    # @_ZNK2kc14impl_withcases9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB135_3
# %bb.1:
	bnez	$a1, .LBB135_4
# %bb.2:
	ld.d	$a0, $a0, 16
	ret
.LBB135_3:
	ld.d	$a0, $a0, 24
	ret
.LBB135_4:
	move	$a0, $zero
	ret
.Lfunc_end135:
	.size	_ZNK2kc14impl_withcases9subphylumEi, .Lfunc_end135-_ZNK2kc14impl_withcases9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc33impl_withexpression_WECexpression9subphylumEi # -- Begin function _ZNK2kc33impl_withexpression_WECexpression9subphylumEi
	.p2align	5
	.type	_ZNK2kc33impl_withexpression_WECexpression9subphylumEi,@function
_ZNK2kc33impl_withexpression_WECexpression9subphylumEi: # @_ZNK2kc33impl_withexpression_WECexpression9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end136:
	.size	_ZNK2kc33impl_withexpression_WECexpression9subphylumEi, .Lfunc_end136-_ZNK2kc33impl_withexpression_WECexpression9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc30impl_withexpression_WEVariable9subphylumEi # -- Begin function _ZNK2kc30impl_withexpression_WEVariable9subphylumEi
	.p2align	5
	.type	_ZNK2kc30impl_withexpression_WEVariable9subphylumEi,@function
_ZNK2kc30impl_withexpression_WEVariable9subphylumEi: # @_ZNK2kc30impl_withexpression_WEVariable9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end137:
	.size	_ZNK2kc30impl_withexpression_WEVariable9subphylumEi, .Lfunc_end137-_ZNK2kc30impl_withexpression_WEVariable9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc20impl_withexpressions9subphylumEi # -- Begin function _ZNK2kc20impl_withexpressions9subphylumEi
	.p2align	5
	.type	_ZNK2kc20impl_withexpressions9subphylumEi,@function
_ZNK2kc20impl_withexpressions9subphylumEi: # @_ZNK2kc20impl_withexpressions9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB138_3
# %bb.1:
	bnez	$a1, .LBB138_4
# %bb.2:
	ld.d	$a0, $a0, 32
	ret
.LBB138_3:
	ld.d	$a0, $a0, 40
	ret
.LBB138_4:
	move	$a0, $zero
	ret
.Lfunc_end138:
	.size	_ZNK2kc20impl_withexpressions9subphylumEi, .Lfunc_end138-_ZNK2kc20impl_withexpressions9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc33impl_contextinfo_InForeachContext9subphylumEi # -- Begin function _ZNK2kc33impl_contextinfo_InForeachContext9subphylumEi
	.p2align	5
	.type	_ZNK2kc33impl_contextinfo_InForeachContext9subphylumEi,@function
_ZNK2kc33impl_contextinfo_InForeachContext9subphylumEi: # @_ZNK2kc33impl_contextinfo_InForeachContext9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end139:
	.size	_ZNK2kc33impl_contextinfo_InForeachContext9subphylumEi, .Lfunc_end139-_ZNK2kc33impl_contextinfo_InForeachContext9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc31impl_foreach_after_ForeachAfter9subphylumEi # -- Begin function _ZNK2kc31impl_foreach_after_ForeachAfter9subphylumEi
	.p2align	5
	.type	_ZNK2kc31impl_foreach_after_ForeachAfter9subphylumEi,@function
_ZNK2kc31impl_foreach_after_ForeachAfter9subphylumEi: # @_ZNK2kc31impl_foreach_after_ForeachAfter9subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB140_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI140_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI140_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB140_2:
	ld.d	$a0, $a0, 24
	ret
.LBB140_3:
	ld.d	$a0, $a0, 40
	ret
.LBB140_4:
	ld.d	$a0, $a0, 48
	ret
.LBB140_5:
	ld.d	$a0, $a0, 32
	ret
.LBB140_6:
	move	$a0, $zero
	ret
.Lfunc_end140:
	.size	_ZNK2kc31impl_foreach_after_ForeachAfter9subphylumEi, .Lfunc_end140-_ZNK2kc31impl_foreach_after_ForeachAfter9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI140_0:
	.word	.LBB140_2-.LJTI140_0
	.word	.LBB140_5-.LJTI140_0
	.word	.LBB140_3-.LJTI140_0
	.word	.LBB140_4-.LJTI140_0
                                        # -- End function
	.text
	.globl	_ZNK2kc35impl_Ctext_elem_CTextWithexpression9subphylumEi # -- Begin function _ZNK2kc35impl_Ctext_elem_CTextWithexpression9subphylumEi
	.p2align	5
	.type	_ZNK2kc35impl_Ctext_elem_CTextWithexpression9subphylumEi,@function
_ZNK2kc35impl_Ctext_elem_CTextWithexpression9subphylumEi: # @_ZNK2kc35impl_Ctext_elem_CTextWithexpression9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB141_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB141_4
# %bb.2:
	bnez	$a1, .LBB141_6
# %bb.3:
	ld.d	$a0, $a0, 24
	ret
.LBB141_4:
	ld.d	$a0, $a0, 32
	ret
.LBB141_5:
	ld.d	$a0, $a0, 40
	ret
.LBB141_6:
	move	$a0, $zero
	ret
.Lfunc_end141:
	.size	_ZNK2kc35impl_Ctext_elem_CTextWithexpression9subphylumEi, .Lfunc_end141-_ZNK2kc35impl_Ctext_elem_CTextWithexpression9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc38impl_Ctext_elem_CTextForeachexpression9subphylumEi # -- Begin function _ZNK2kc38impl_Ctext_elem_CTextForeachexpression9subphylumEi
	.p2align	5
	.type	_ZNK2kc38impl_Ctext_elem_CTextForeachexpression9subphylumEi,@function
_ZNK2kc38impl_Ctext_elem_CTextForeachexpression9subphylumEi: # @_ZNK2kc38impl_Ctext_elem_CTextForeachexpression9subphylumEi
# %bb.0:
	ori	$a2, $zero, 4
	bltu	$a2, $a1, .LBB142_7
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI142_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI142_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB142_2:
	ld.d	$a0, $a0, 24
	ret
.LBB142_3:
	ld.d	$a0, $a0, 56
	ret
.LBB142_4:
	ld.d	$a0, $a0, 40
	ret
.LBB142_5:
	ld.d	$a0, $a0, 48
	ret
.LBB142_6:
	ld.d	$a0, $a0, 32
	ret
.LBB142_7:
	move	$a0, $zero
	ret
.Lfunc_end142:
	.size	_ZNK2kc38impl_Ctext_elem_CTextForeachexpression9subphylumEi, .Lfunc_end142-_ZNK2kc38impl_Ctext_elem_CTextForeachexpression9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI142_0:
	.word	.LBB142_2-.LJTI142_0
	.word	.LBB142_6-.LJTI142_0
	.word	.LBB142_4-.LJTI142_0
	.word	.LBB142_5-.LJTI142_0
	.word	.LBB142_3-.LJTI142_0
                                        # -- End function
	.text
	.globl	_ZNK2kc26impl_Ctext_elem_CTextCbody9subphylumEi # -- Begin function _ZNK2kc26impl_Ctext_elem_CTextCbody9subphylumEi
	.p2align	5
	.type	_ZNK2kc26impl_Ctext_elem_CTextCbody9subphylumEi,@function
_ZNK2kc26impl_Ctext_elem_CTextCbody9subphylumEi: # @_ZNK2kc26impl_Ctext_elem_CTextCbody9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end143:
	.size	_ZNK2kc26impl_Ctext_elem_CTextCbody9subphylumEi, .Lfunc_end143-_ZNK2kc26impl_Ctext_elem_CTextCbody9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ9subphylumEi # -- Begin function _ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ9subphylumEi
	.p2align	5
	.type	_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ9subphylumEi,@function
_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ9subphylumEi: # @_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end144:
	.size	_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ9subphylumEi, .Lfunc_end144-_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ9subphylumEi # -- Begin function _ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ9subphylumEi
	.p2align	5
	.type	_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ9subphylumEi,@function
_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ9subphylumEi: # @_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end145:
	.size	_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ9subphylumEi, .Lfunc_end145-_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc23impl_Ctext_elem_CTextNl9subphylumEi # -- Begin function _ZNK2kc23impl_Ctext_elem_CTextNl9subphylumEi
	.p2align	5
	.type	_ZNK2kc23impl_Ctext_elem_CTextNl9subphylumEi,@function
_ZNK2kc23impl_Ctext_elem_CTextNl9subphylumEi: # @_ZNK2kc23impl_Ctext_elem_CTextNl9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end146:
	.size	_ZNK2kc23impl_Ctext_elem_CTextNl9subphylumEi, .Lfunc_end146-_ZNK2kc23impl_Ctext_elem_CTextNl9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc30impl_Ctext_elem_CTextDollarVar9subphylumEi # -- Begin function _ZNK2kc30impl_Ctext_elem_CTextDollarVar9subphylumEi
	.p2align	5
	.type	_ZNK2kc30impl_Ctext_elem_CTextDollarVar9subphylumEi,@function
_ZNK2kc30impl_Ctext_elem_CTextDollarVar9subphylumEi: # @_ZNK2kc30impl_Ctext_elem_CTextDollarVar9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end147:
	.size	_ZNK2kc30impl_Ctext_elem_CTextDollarVar9subphylumEi, .Lfunc_end147-_ZNK2kc30impl_Ctext_elem_CTextDollarVar9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc25impl_Ctext_elem_CTextLine9subphylumEi # -- Begin function _ZNK2kc25impl_Ctext_elem_CTextLine9subphylumEi
	.p2align	5
	.type	_ZNK2kc25impl_Ctext_elem_CTextLine9subphylumEi,@function
_ZNK2kc25impl_Ctext_elem_CTextLine9subphylumEi: # @_ZNK2kc25impl_Ctext_elem_CTextLine9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end148:
	.size	_ZNK2kc25impl_Ctext_elem_CTextLine9subphylumEi, .Lfunc_end148-_ZNK2kc25impl_Ctext_elem_CTextLine9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc10impl_Ctext9subphylumEi # -- Begin function _ZNK2kc10impl_Ctext9subphylumEi
	.p2align	5
	.type	_ZNK2kc10impl_Ctext9subphylumEi,@function
_ZNK2kc10impl_Ctext9subphylumEi:        # @_ZNK2kc10impl_Ctext9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB149_3
# %bb.1:
	bnez	$a1, .LBB149_4
# %bb.2:
	ld.d	$a0, $a0, 24
	ret
.LBB149_3:
	ld.d	$a0, $a0, 32
	ret
.LBB149_4:
	move	$a0, $zero
	ret
.Lfunc_end149:
	.size	_ZNK2kc10impl_Ctext9subphylumEi, .Lfunc_end149-_ZNK2kc10impl_Ctext9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc21impl_fnclass_StaticFn9subphylumEi # -- Begin function _ZNK2kc21impl_fnclass_StaticFn9subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_fnclass_StaticFn9subphylumEi,@function
_ZNK2kc21impl_fnclass_StaticFn9subphylumEi: # @_ZNK2kc21impl_fnclass_StaticFn9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end150:
	.size	_ZNK2kc21impl_fnclass_StaticFn9subphylumEi, .Lfunc_end150-_ZNK2kc21impl_fnclass_StaticFn9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc38impl_fndeclaration_AcMemberDeclaration9subphylumEi # -- Begin function _ZNK2kc38impl_fndeclaration_AcMemberDeclaration9subphylumEi
	.p2align	5
	.type	_ZNK2kc38impl_fndeclaration_AcMemberDeclaration9subphylumEi,@function
_ZNK2kc38impl_fndeclaration_AcMemberDeclaration9subphylumEi: # @_ZNK2kc38impl_fndeclaration_AcMemberDeclaration9subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB151_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI151_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI151_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB151_2:
	ld.d	$a0, $a0, 40
	ret
.LBB151_3:
	ld.d	$a0, $a0, 56
	ret
.LBB151_4:
	ld.d	$a0, $a0, 64
	ret
.LBB151_5:
	ld.d	$a0, $a0, 48
	ret
.LBB151_6:
	move	$a0, $zero
	ret
.Lfunc_end151:
	.size	_ZNK2kc38impl_fndeclaration_AcMemberDeclaration9subphylumEi, .Lfunc_end151-_ZNK2kc38impl_fndeclaration_AcMemberDeclaration9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI151_0:
	.word	.LBB151_2-.LJTI151_0
	.word	.LBB151_5-.LJTI151_0
	.word	.LBB151_3-.LJTI151_0
	.word	.LBB151_4-.LJTI151_0
                                        # -- End function
	.text
	.globl	_ZNK2kc34impl_fndeclaration_FnAcDeclaration9subphylumEi # -- Begin function _ZNK2kc34impl_fndeclaration_FnAcDeclaration9subphylumEi
	.p2align	5
	.type	_ZNK2kc34impl_fndeclaration_FnAcDeclaration9subphylumEi,@function
_ZNK2kc34impl_fndeclaration_FnAcDeclaration9subphylumEi: # @_ZNK2kc34impl_fndeclaration_FnAcDeclaration9subphylumEi
# %bb.0:
	ori	$a2, $zero, 6
	bltu	$a2, $a1, .LBB152_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI152_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI152_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB152_2:
	ld.d	$a0, $a0, 40
	ret
.LBB152_3:
	ld.d	$a0, $a0, 72
	ret
.LBB152_4:
	ld.d	$a0, $a0, 56
	ret
.LBB152_5:
	ld.d	$a0, $a0, 64
	ret
.LBB152_6:
	move	$a0, $zero
	ret
.LBB152_7:
	ld.d	$a0, $a0, 48
	ret
.LBB152_8:
	ld.d	$a0, $a0, 80
	ret
.LBB152_9:
	ld.d	$a0, $a0, 88
	ret
.Lfunc_end152:
	.size	_ZNK2kc34impl_fndeclaration_FnAcDeclaration9subphylumEi, .Lfunc_end152-_ZNK2kc34impl_fndeclaration_FnAcDeclaration9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI152_0:
	.word	.LBB152_2-.LJTI152_0
	.word	.LBB152_7-.LJTI152_0
	.word	.LBB152_4-.LJTI152_0
	.word	.LBB152_5-.LJTI152_0
	.word	.LBB152_3-.LJTI152_0
	.word	.LBB152_8-.LJTI152_0
	.word	.LBB152_9-.LJTI152_0
                                        # -- End function
	.text
	.globl	_ZNK2kc19impl_fndeclarations9subphylumEi # -- Begin function _ZNK2kc19impl_fndeclarations9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_fndeclarations9subphylumEi,@function
_ZNK2kc19impl_fndeclarations9subphylumEi: # @_ZNK2kc19impl_fndeclarations9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB153_3
# %bb.1:
	bnez	$a1, .LBB153_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB153_3:
	ld.d	$a0, $a0, 16
	ret
.LBB153_4:
	move	$a0, $zero
	ret
.Lfunc_end153:
	.size	_ZNK2kc19impl_fndeclarations9subphylumEi, .Lfunc_end153-_ZNK2kc19impl_fndeclarations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc18impl_fnfile_FnFile9subphylumEi # -- Begin function _ZNK2kc18impl_fnfile_FnFile9subphylumEi
	.p2align	5
	.type	_ZNK2kc18impl_fnfile_FnFile9subphylumEi,@function
_ZNK2kc18impl_fnfile_FnFile9subphylumEi: # @_ZNK2kc18impl_fnfile_FnFile9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 16
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end154:
	.size	_ZNK2kc18impl_fnfile_FnFile9subphylumEi, .Lfunc_end154-_ZNK2kc18impl_fnfile_FnFile9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc12impl_fnfiles9subphylumEi # -- Begin function _ZNK2kc12impl_fnfiles9subphylumEi
	.p2align	5
	.type	_ZNK2kc12impl_fnfiles9subphylumEi,@function
_ZNK2kc12impl_fnfiles9subphylumEi:      # @_ZNK2kc12impl_fnfiles9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB155_3
# %bb.1:
	bnez	$a1, .LBB155_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB155_3:
	ld.d	$a0, $a0, 16
	ret
.LBB155_4:
	move	$a0, $zero
	ret
.Lfunc_end155:
	.size	_ZNK2kc12impl_fnfiles9subphylumEi, .Lfunc_end155-_ZNK2kc12impl_fnfiles9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc10impl_terms9subphylumEi # -- Begin function _ZNK2kc10impl_terms9subphylumEi
	.p2align	5
	.type	_ZNK2kc10impl_terms9subphylumEi,@function
_ZNK2kc10impl_terms9subphylumEi:        # @_ZNK2kc10impl_terms9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB156_3
# %bb.1:
	bnez	$a1, .LBB156_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB156_3:
	ld.d	$a0, $a0, 16
	ret
.LBB156_4:
	move	$a0, $zero
	ret
.Lfunc_end156:
	.size	_ZNK2kc10impl_terms9subphylumEi, .Lfunc_end156-_ZNK2kc10impl_terms9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc21impl_term_TIntLiteral9subphylumEi # -- Begin function _ZNK2kc21impl_term_TIntLiteral9subphylumEi
	.p2align	5
	.type	_ZNK2kc21impl_term_TIntLiteral9subphylumEi,@function
_ZNK2kc21impl_term_TIntLiteral9subphylumEi: # @_ZNK2kc21impl_term_TIntLiteral9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end157:
	.size	_ZNK2kc21impl_term_TIntLiteral9subphylumEi, .Lfunc_end157-_ZNK2kc21impl_term_TIntLiteral9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_term_TStringLiteral9subphylumEi # -- Begin function _ZNK2kc24impl_term_TStringLiteral9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_term_TStringLiteral9subphylumEi,@function
_ZNK2kc24impl_term_TStringLiteral9subphylumEi: # @_ZNK2kc24impl_term_TStringLiteral9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end158:
	.size	_ZNK2kc24impl_term_TStringLiteral9subphylumEi, .Lfunc_end158-_ZNK2kc24impl_term_TStringLiteral9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc16impl_term_TCTerm9subphylumEi # -- Begin function _ZNK2kc16impl_term_TCTerm9subphylumEi
	.p2align	5
	.type	_ZNK2kc16impl_term_TCTerm9subphylumEi,@function
_ZNK2kc16impl_term_TCTerm9subphylumEi:  # @_ZNK2kc16impl_term_TCTerm9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end159:
	.size	_ZNK2kc16impl_term_TCTerm9subphylumEi, .Lfunc_end159-_ZNK2kc16impl_term_TCTerm9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc23impl_term_TMemberVarDot9subphylumEi # -- Begin function _ZNK2kc23impl_term_TMemberVarDot9subphylumEi
	.p2align	5
	.type	_ZNK2kc23impl_term_TMemberVarDot9subphylumEi,@function
_ZNK2kc23impl_term_TMemberVarDot9subphylumEi: # @_ZNK2kc23impl_term_TMemberVarDot9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB160_3
# %bb.1:
	bnez	$a1, .LBB160_4
# %bb.2:
	ld.d	$a0, $a0, 24
	ret
.LBB160_3:
	ld.d	$a0, $a0, 32
	ret
.LBB160_4:
	move	$a0, $zero
	ret
.Lfunc_end160:
	.size	_ZNK2kc23impl_term_TMemberVarDot9subphylumEi, .Lfunc_end160-_ZNK2kc23impl_term_TMemberVarDot9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc20impl_term_TMemberVar9subphylumEi # -- Begin function _ZNK2kc20impl_term_TMemberVar9subphylumEi
	.p2align	5
	.type	_ZNK2kc20impl_term_TMemberVar9subphylumEi,@function
_ZNK2kc20impl_term_TMemberVar9subphylumEi: # @_ZNK2kc20impl_term_TMemberVar9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB161_3
# %bb.1:
	bnez	$a1, .LBB161_4
# %bb.2:
	ld.d	$a0, $a0, 24
	ret
.LBB161_3:
	ld.d	$a0, $a0, 32
	ret
.LBB161_4:
	move	$a0, $zero
	ret
.Lfunc_end161:
	.size	_ZNK2kc20impl_term_TMemberVar9subphylumEi, .Lfunc_end161-_ZNK2kc20impl_term_TMemberVar9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc20impl_term_TMethodDot9subphylumEi # -- Begin function _ZNK2kc20impl_term_TMethodDot9subphylumEi
	.p2align	5
	.type	_ZNK2kc20impl_term_TMethodDot9subphylumEi,@function
_ZNK2kc20impl_term_TMethodDot9subphylumEi: # @_ZNK2kc20impl_term_TMethodDot9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB162_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB162_4
# %bb.2:
	bnez	$a1, .LBB162_6
# %bb.3:
	ld.d	$a0, $a0, 24
	ret
.LBB162_4:
	ld.d	$a0, $a0, 32
	ret
.LBB162_5:
	ld.d	$a0, $a0, 40
	ret
.LBB162_6:
	move	$a0, $zero
	ret
.Lfunc_end162:
	.size	_ZNK2kc20impl_term_TMethodDot9subphylumEi, .Lfunc_end162-_ZNK2kc20impl_term_TMethodDot9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc17impl_term_TMethod9subphylumEi # -- Begin function _ZNK2kc17impl_term_TMethod9subphylumEi
	.p2align	5
	.type	_ZNK2kc17impl_term_TMethod9subphylumEi,@function
_ZNK2kc17impl_term_TMethod9subphylumEi: # @_ZNK2kc17impl_term_TMethod9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB163_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB163_4
# %bb.2:
	bnez	$a1, .LBB163_6
# %bb.3:
	ld.d	$a0, $a0, 24
	ret
.LBB163_4:
	ld.d	$a0, $a0, 32
	ret
.LBB163_5:
	ld.d	$a0, $a0, 40
	ret
.LBB163_6:
	move	$a0, $zero
	ret
.Lfunc_end163:
	.size	_ZNK2kc17impl_term_TMethod9subphylumEi, .Lfunc_end163-_ZNK2kc17impl_term_TMethod9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_term_TOperator9subphylumEi # -- Begin function _ZNK2kc19impl_term_TOperator9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_term_TOperator9subphylumEi,@function
_ZNK2kc19impl_term_TOperator9subphylumEi: # @_ZNK2kc19impl_term_TOperator9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB164_3
# %bb.1:
	bnez	$a1, .LBB164_4
# %bb.2:
	ld.d	$a0, $a0, 24
	ret
.LBB164_3:
	ld.d	$a0, $a0, 32
	ret
.LBB164_4:
	move	$a0, $zero
	ret
.Lfunc_end164:
	.size	_ZNK2kc19impl_term_TOperator9subphylumEi, .Lfunc_end164-_ZNK2kc19impl_term_TOperator9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_term_TVariable9subphylumEi # -- Begin function _ZNK2kc19impl_term_TVariable9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_term_TVariable9subphylumEi,@function
_ZNK2kc19impl_term_TVariable9subphylumEi: # @_ZNK2kc19impl_term_TVariable9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end165:
	.size	_ZNK2kc19impl_term_TVariable9subphylumEi, .Lfunc_end165-_ZNK2kc19impl_term_TVariable9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc13impl_patterns9subphylumEi # -- Begin function _ZNK2kc13impl_patterns9subphylumEi
	.p2align	5
	.type	_ZNK2kc13impl_patterns9subphylumEi,@function
_ZNK2kc13impl_patterns9subphylumEi:     # @_ZNK2kc13impl_patterns9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB166_3
# %bb.1:
	bnez	$a1, .LBB166_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB166_3:
	ld.d	$a0, $a0, 16
	ret
.LBB166_4:
	move	$a0, $zero
	ret
.Lfunc_end166:
	.size	_ZNK2kc13impl_patterns9subphylumEi, .Lfunc_end166-_ZNK2kc13impl_patterns9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_pattern_PIntLiteral9subphylumEi # -- Begin function _ZNK2kc24impl_pattern_PIntLiteral9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_pattern_PIntLiteral9subphylumEi,@function
_ZNK2kc24impl_pattern_PIntLiteral9subphylumEi: # @_ZNK2kc24impl_pattern_PIntLiteral9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end167:
	.size	_ZNK2kc24impl_pattern_PIntLiteral9subphylumEi, .Lfunc_end167-_ZNK2kc24impl_pattern_PIntLiteral9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc27impl_pattern_PStringLiteral9subphylumEi # -- Begin function _ZNK2kc27impl_pattern_PStringLiteral9subphylumEi
	.p2align	5
	.type	_ZNK2kc27impl_pattern_PStringLiteral9subphylumEi,@function
_ZNK2kc27impl_pattern_PStringLiteral9subphylumEi: # @_ZNK2kc27impl_pattern_PStringLiteral9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end168:
	.size	_ZNK2kc27impl_pattern_PStringLiteral9subphylumEi, .Lfunc_end168-_ZNK2kc27impl_pattern_PStringLiteral9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc29impl_pattern_PNonLeafVariable9subphylumEi # -- Begin function _ZNK2kc29impl_pattern_PNonLeafVariable9subphylumEi
	.p2align	5
	.type	_ZNK2kc29impl_pattern_PNonLeafVariable9subphylumEi,@function
_ZNK2kc29impl_pattern_PNonLeafVariable9subphylumEi: # @_ZNK2kc29impl_pattern_PNonLeafVariable9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB169_3
# %bb.1:
	bnez	$a1, .LBB169_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB169_3:
	ld.d	$a0, $a0, 16
	ret
.LBB169_4:
	move	$a0, $zero
	ret
.Lfunc_end169:
	.size	_ZNK2kc29impl_pattern_PNonLeafVariable9subphylumEi, .Lfunc_end169-_ZNK2kc29impl_pattern_PNonLeafVariable9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc22impl_pattern_POperator9subphylumEi # -- Begin function _ZNK2kc22impl_pattern_POperator9subphylumEi
	.p2align	5
	.type	_ZNK2kc22impl_pattern_POperator9subphylumEi,@function
_ZNK2kc22impl_pattern_POperator9subphylumEi: # @_ZNK2kc22impl_pattern_POperator9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB170_3
# %bb.1:
	bnez	$a1, .LBB170_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB170_3:
	ld.d	$a0, $a0, 16
	ret
.LBB170_4:
	move	$a0, $zero
	ret
.Lfunc_end170:
	.size	_ZNK2kc22impl_pattern_POperator9subphylumEi, .Lfunc_end170-_ZNK2kc22impl_pattern_POperator9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc22impl_pattern_PVariable9subphylumEi # -- Begin function _ZNK2kc22impl_pattern_PVariable9subphylumEi
	.p2align	5
	.type	_ZNK2kc22impl_pattern_PVariable9subphylumEi,@function
_ZNK2kc22impl_pattern_PVariable9subphylumEi: # @_ZNK2kc22impl_pattern_PVariable9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end171:
	.size	_ZNK2kc22impl_pattern_PVariable9subphylumEi, .Lfunc_end171-_ZNK2kc22impl_pattern_PVariable9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc29impl_outmostpattern_OPDefault9subphylumEi # -- Begin function _ZNK2kc29impl_outmostpattern_OPDefault9subphylumEi
	.p2align	5
	.type	_ZNK2kc29impl_outmostpattern_OPDefault9subphylumEi,@function
_ZNK2kc29impl_outmostpattern_OPDefault9subphylumEi: # @_ZNK2kc29impl_outmostpattern_OPDefault9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end172:
	.size	_ZNK2kc29impl_outmostpattern_OPDefault9subphylumEi, .Lfunc_end172-_ZNK2kc29impl_outmostpattern_OPDefault9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc30impl_outmostpattern_OPWildcard9subphylumEi # -- Begin function _ZNK2kc30impl_outmostpattern_OPWildcard9subphylumEi
	.p2align	5
	.type	_ZNK2kc30impl_outmostpattern_OPWildcard9subphylumEi,@function
_ZNK2kc30impl_outmostpattern_OPWildcard9subphylumEi: # @_ZNK2kc30impl_outmostpattern_OPWildcard9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end173:
	.size	_ZNK2kc30impl_outmostpattern_OPWildcard9subphylumEi, .Lfunc_end173-_ZNK2kc30impl_outmostpattern_OPWildcard9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc37impl_outmostpattern_OPNonLeafVariable9subphylumEi # -- Begin function _ZNK2kc37impl_outmostpattern_OPNonLeafVariable9subphylumEi
	.p2align	5
	.type	_ZNK2kc37impl_outmostpattern_OPNonLeafVariable9subphylumEi,@function
_ZNK2kc37impl_outmostpattern_OPNonLeafVariable9subphylumEi: # @_ZNK2kc37impl_outmostpattern_OPNonLeafVariable9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB174_3
# %bb.1:
	bnez	$a1, .LBB174_4
# %bb.2:
	ld.d	$a0, $a0, 32
	ret
.LBB174_3:
	ld.d	$a0, $a0, 40
	ret
.LBB174_4:
	move	$a0, $zero
	ret
.Lfunc_end174:
	.size	_ZNK2kc37impl_outmostpattern_OPNonLeafVariable9subphylumEi, .Lfunc_end174-_ZNK2kc37impl_outmostpattern_OPNonLeafVariable9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc30impl_outmostpattern_OPOperator9subphylumEi # -- Begin function _ZNK2kc30impl_outmostpattern_OPOperator9subphylumEi
	.p2align	5
	.type	_ZNK2kc30impl_outmostpattern_OPOperator9subphylumEi,@function
_ZNK2kc30impl_outmostpattern_OPOperator9subphylumEi: # @_ZNK2kc30impl_outmostpattern_OPOperator9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB175_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB175_4
# %bb.2:
	bnez	$a1, .LBB175_6
# %bb.3:
	ld.d	$a0, $a0, 32
	ret
.LBB175_4:
	ld.d	$a0, $a0, 40
	ret
.LBB175_5:
	ld.d	$a0, $a0, 48
	ret
.LBB175_6:
	move	$a0, $zero
	ret
.Lfunc_end175:
	.size	_ZNK2kc30impl_outmostpattern_OPOperator9subphylumEi, .Lfunc_end175-_ZNK2kc30impl_outmostpattern_OPOperator9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc38impl_outmostpattern_OPOperatorWildcard9subphylumEi # -- Begin function _ZNK2kc38impl_outmostpattern_OPOperatorWildcard9subphylumEi
	.p2align	5
	.type	_ZNK2kc38impl_outmostpattern_OPOperatorWildcard9subphylumEi,@function
_ZNK2kc38impl_outmostpattern_OPOperatorWildcard9subphylumEi: # @_ZNK2kc38impl_outmostpattern_OPOperatorWildcard9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB176_3
# %bb.1:
	bnez	$a1, .LBB176_4
# %bb.2:
	ld.d	$a0, $a0, 32
	ret
.LBB176_3:
	ld.d	$a0, $a0, 40
	ret
.LBB176_4:
	move	$a0, $zero
	ret
.Lfunc_end176:
	.size	_ZNK2kc38impl_outmostpattern_OPOperatorWildcard9subphylumEi, .Lfunc_end176-_ZNK2kc38impl_outmostpattern_OPOperatorWildcard9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid9subphylumEi # -- Begin function _ZNK2kc46impl_patternchainitem_PatternchainitemDollarid9subphylumEi
	.p2align	5
	.type	_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid9subphylumEi,@function
_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid9subphylumEi: # @_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end177:
	.size	_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid9subphylumEi, .Lfunc_end177-_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc43impl_patternchainitem_PatternchainitemGroup9subphylumEi # -- Begin function _ZNK2kc43impl_patternchainitem_PatternchainitemGroup9subphylumEi
	.p2align	5
	.type	_ZNK2kc43impl_patternchainitem_PatternchainitemGroup9subphylumEi,@function
_ZNK2kc43impl_patternchainitem_PatternchainitemGroup9subphylumEi: # @_ZNK2kc43impl_patternchainitem_PatternchainitemGroup9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end178:
	.size	_ZNK2kc43impl_patternchainitem_PatternchainitemGroup9subphylumEi, .Lfunc_end178-_ZNK2kc43impl_patternchainitem_PatternchainitemGroup9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost9subphylumEi # -- Begin function _ZNK2kc45impl_patternchainitem_PatternchainitemOutmost9subphylumEi
	.p2align	5
	.type	_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost9subphylumEi,@function
_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost9subphylumEi: # @_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end179:
	.size	_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost9subphylumEi, .Lfunc_end179-_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc20impl_outmostpatterns9subphylumEi # -- Begin function _ZNK2kc20impl_outmostpatterns9subphylumEi
	.p2align	5
	.type	_ZNK2kc20impl_outmostpatterns9subphylumEi,@function
_ZNK2kc20impl_outmostpatterns9subphylumEi: # @_ZNK2kc20impl_outmostpatterns9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB180_3
# %bb.1:
	bnez	$a1, .LBB180_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB180_3:
	ld.d	$a0, $a0, 16
	ret
.LBB180_4:
	move	$a0, $zero
	ret
.Lfunc_end180:
	.size	_ZNK2kc20impl_outmostpatterns9subphylumEi, .Lfunc_end180-_ZNK2kc20impl_outmostpatterns9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc17impl_patternchain9subphylumEi # -- Begin function _ZNK2kc17impl_patternchain9subphylumEi
	.p2align	5
	.type	_ZNK2kc17impl_patternchain9subphylumEi,@function
_ZNK2kc17impl_patternchain9subphylumEi: # @_ZNK2kc17impl_patternchain9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB181_3
# %bb.1:
	bnez	$a1, .LBB181_4
# %bb.2:
	ld.d	$a0, $a0, 24
	ret
.LBB181_3:
	ld.d	$a0, $a0, 32
	ret
.LBB181_4:
	move	$a0, $zero
	ret
.Lfunc_end181:
	.size	_ZNK2kc17impl_patternchain9subphylumEi, .Lfunc_end181-_ZNK2kc17impl_patternchain9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc18impl_patternchains9subphylumEi # -- Begin function _ZNK2kc18impl_patternchains9subphylumEi
	.p2align	5
	.type	_ZNK2kc18impl_patternchains9subphylumEi,@function
_ZNK2kc18impl_patternchains9subphylumEi: # @_ZNK2kc18impl_patternchains9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB182_3
# %bb.1:
	bnez	$a1, .LBB182_4
# %bb.2:
	ld.d	$a0, $a0, 24
	ret
.LBB182_3:
	ld.d	$a0, $a0, 32
	ret
.LBB182_4:
	move	$a0, $zero
	ret
.Lfunc_end182:
	.size	_ZNK2kc18impl_patternchains9subphylumEi, .Lfunc_end182-_ZNK2kc18impl_patternchains9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc32impl_rewriteclause_RewriteClause9subphylumEi # -- Begin function _ZNK2kc32impl_rewriteclause_RewriteClause9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_rewriteclause_RewriteClause9subphylumEi,@function
_ZNK2kc32impl_rewriteclause_RewriteClause9subphylumEi: # @_ZNK2kc32impl_rewriteclause_RewriteClause9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB183_3
# %bb.1:
	bnez	$a1, .LBB183_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB183_3:
	ld.d	$a0, $a0, 16
	ret
.LBB183_4:
	move	$a0, $zero
	ret
.Lfunc_end183:
	.size	_ZNK2kc32impl_rewriteclause_RewriteClause9subphylumEi, .Lfunc_end183-_ZNK2kc32impl_rewriteclause_RewriteClause9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_rewriteclauses9subphylumEi # -- Begin function _ZNK2kc19impl_rewriteclauses9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_rewriteclauses9subphylumEi,@function
_ZNK2kc19impl_rewriteclauses9subphylumEi: # @_ZNK2kc19impl_rewriteclauses9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB184_3
# %bb.1:
	bnez	$a1, .LBB184_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB184_3:
	ld.d	$a0, $a0, 16
	ret
.LBB184_4:
	move	$a0, $zero
	ret
.Lfunc_end184:
	.size	_ZNK2kc19impl_rewriteclauses9subphylumEi, .Lfunc_end184-_ZNK2kc19impl_rewriteclauses9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc32impl_rwdeclaration_RwDeclaration9subphylumEi # -- Begin function _ZNK2kc32impl_rwdeclaration_RwDeclaration9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_rwdeclaration_RwDeclaration9subphylumEi,@function
_ZNK2kc32impl_rwdeclaration_RwDeclaration9subphylumEi: # @_ZNK2kc32impl_rwdeclaration_RwDeclaration9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB185_3
# %bb.1:
	bnez	$a1, .LBB185_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB185_3:
	ld.d	$a0, $a0, 16
	ret
.LBB185_4:
	move	$a0, $zero
	ret
.Lfunc_end185:
	.size	_ZNK2kc32impl_rwdeclaration_RwDeclaration9subphylumEi, .Lfunc_end185-_ZNK2kc32impl_rwdeclaration_RwDeclaration9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_rwdeclarations9subphylumEi # -- Begin function _ZNK2kc19impl_rwdeclarations9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_rwdeclarations9subphylumEi,@function
_ZNK2kc19impl_rwdeclarations9subphylumEi: # @_ZNK2kc19impl_rwdeclarations9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB186_3
# %bb.1:
	bnez	$a1, .LBB186_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB186_3:
	ld.d	$a0, $a0, 16
	ret
.LBB186_4:
	move	$a0, $zero
	ret
.Lfunc_end186:
	.size	_ZNK2kc19impl_rwdeclarations9subphylumEi, .Lfunc_end186-_ZNK2kc19impl_rwdeclarations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc42impl_includedeclaration_IncludeDeclaration9subphylumEi # -- Begin function _ZNK2kc42impl_includedeclaration_IncludeDeclaration9subphylumEi
	.p2align	5
	.type	_ZNK2kc42impl_includedeclaration_IncludeDeclaration9subphylumEi,@function
_ZNK2kc42impl_includedeclaration_IncludeDeclaration9subphylumEi: # @_ZNK2kc42impl_includedeclaration_IncludeDeclaration9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end187:
	.size	_ZNK2kc42impl_includedeclaration_IncludeDeclaration9subphylumEi, .Lfunc_end187-_ZNK2kc42impl_includedeclaration_IncludeDeclaration9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_includedeclarations9subphylumEi # -- Begin function _ZNK2kc24impl_includedeclarations9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_includedeclarations9subphylumEi,@function
_ZNK2kc24impl_includedeclarations9subphylumEi: # @_ZNK2kc24impl_includedeclarations9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB188_3
# %bb.1:
	bnez	$a1, .LBB188_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB188_3:
	ld.d	$a0, $a0, 16
	ret
.LBB188_4:
	move	$a0, $zero
	ret
.Lfunc_end188:
	.size	_ZNK2kc24impl_includedeclarations9subphylumEi, .Lfunc_end188-_ZNK2kc24impl_includedeclarations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc28impl_includefile_IncludeFile9subphylumEi # -- Begin function _ZNK2kc28impl_includefile_IncludeFile9subphylumEi
	.p2align	5
	.type	_ZNK2kc28impl_includefile_IncludeFile9subphylumEi,@function
_ZNK2kc28impl_includefile_IncludeFile9subphylumEi: # @_ZNK2kc28impl_includefile_IncludeFile9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 32
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end189:
	.size	_ZNK2kc28impl_includefile_IncludeFile9subphylumEi, .Lfunc_end189-_ZNK2kc28impl_includefile_IncludeFile9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc17impl_includefiles9subphylumEi # -- Begin function _ZNK2kc17impl_includefiles9subphylumEi
	.p2align	5
	.type	_ZNK2kc17impl_includefiles9subphylumEi,@function
_ZNK2kc17impl_includefiles9subphylumEi: # @_ZNK2kc17impl_includefiles9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB190_3
# %bb.1:
	bnez	$a1, .LBB190_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB190_3:
	ld.d	$a0, $a0, 16
	ret
.LBB190_4:
	move	$a0, $zero
	ret
.Lfunc_end190:
	.size	_ZNK2kc17impl_includefiles9subphylumEi, .Lfunc_end190-_ZNK2kc17impl_includefiles9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc11impl_Ctexts9subphylumEi # -- Begin function _ZNK2kc11impl_Ctexts9subphylumEi
	.p2align	5
	.type	_ZNK2kc11impl_Ctexts9subphylumEi,@function
_ZNK2kc11impl_Ctexts9subphylumEi:       # @_ZNK2kc11impl_Ctexts9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB191_3
# %bb.1:
	bnez	$a1, .LBB191_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB191_3:
	ld.d	$a0, $a0, 16
	ret
.LBB191_4:
	move	$a0, $zero
	ret
.Lfunc_end191:
	.size	_ZNK2kc11impl_Ctexts9subphylumEi, .Lfunc_end191-_ZNK2kc11impl_Ctexts9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc32impl_idCexpression_IdCexpression9subphylumEi # -- Begin function _ZNK2kc32impl_idCexpression_IdCexpression9subphylumEi
	.p2align	5
	.type	_ZNK2kc32impl_idCexpression_IdCexpression9subphylumEi,@function
_ZNK2kc32impl_idCexpression_IdCexpression9subphylumEi: # @_ZNK2kc32impl_idCexpression_IdCexpression9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB192_3
# %bb.1:
	bnez	$a1, .LBB192_4
# %bb.2:
	ld.d	$a0, $a0, 16
	ret
.LBB192_3:
	ld.d	$a0, $a0, 24
	ret
.LBB192_4:
	move	$a0, $zero
	ret
.Lfunc_end192:
	.size	_ZNK2kc32impl_idCexpression_IdCexpression9subphylumEi, .Lfunc_end192-_ZNK2kc32impl_idCexpression_IdCexpression9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_idCexpressions9subphylumEi # -- Begin function _ZNK2kc19impl_idCexpressions9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_idCexpressions9subphylumEi,@function
_ZNK2kc19impl_idCexpressions9subphylumEi: # @_ZNK2kc19impl_idCexpressions9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB193_3
# %bb.1:
	bnez	$a1, .LBB193_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB193_3:
	ld.d	$a0, $a0, 16
	ret
.LBB193_4:
	move	$a0, $zero
	ret
.Lfunc_end193:
	.size	_ZNK2kc19impl_idCexpressions9subphylumEi, .Lfunc_end193-_ZNK2kc19impl_idCexpressions9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart9subphylumEi # -- Begin function _ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart9subphylumEi
	.p2align	5
	.type	_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart9subphylumEi,@function
_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart9subphylumEi: # @_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end194:
	.size	_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart9subphylumEi, .Lfunc_end194-_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc18impl_CexpressionSQ9subphylumEi # -- Begin function _ZNK2kc18impl_CexpressionSQ9subphylumEi
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionSQ9subphylumEi,@function
_ZNK2kc18impl_CexpressionSQ9subphylumEi: # @_ZNK2kc18impl_CexpressionSQ9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB195_3
# %bb.1:
	bnez	$a1, .LBB195_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB195_3:
	ld.d	$a0, $a0, 16
	ret
.LBB195_4:
	move	$a0, $zero
	ret
.Lfunc_end195:
	.size	_ZNK2kc18impl_CexpressionSQ9subphylumEi, .Lfunc_end195-_ZNK2kc18impl_CexpressionSQ9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart9subphylumEi # -- Begin function _ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart9subphylumEi
	.p2align	5
	.type	_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart9subphylumEi,@function
_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart9subphylumEi: # @_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end196:
	.size	_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart9subphylumEi, .Lfunc_end196-_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc18impl_CexpressionDQ9subphylumEi # -- Begin function _ZNK2kc18impl_CexpressionDQ9subphylumEi
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionDQ9subphylumEi,@function
_ZNK2kc18impl_CexpressionDQ9subphylumEi: # @_ZNK2kc18impl_CexpressionDQ9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB197_3
# %bb.1:
	bnez	$a1, .LBB197_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB197_3:
	ld.d	$a0, $a0, 16
	ret
.LBB197_4:
	move	$a0, $zero
	ret
.Lfunc_end197:
	.size	_ZNK2kc18impl_CexpressionDQ9subphylumEi, .Lfunc_end197-_ZNK2kc18impl_CexpressionDQ9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc38impl_Cexpression_elem_CExpressionArray9subphylumEi # -- Begin function _ZNK2kc38impl_Cexpression_elem_CExpressionArray9subphylumEi
	.p2align	5
	.type	_ZNK2kc38impl_Cexpression_elem_CExpressionArray9subphylumEi,@function
_ZNK2kc38impl_Cexpression_elem_CExpressionArray9subphylumEi: # @_ZNK2kc38impl_Cexpression_elem_CExpressionArray9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end198:
	.size	_ZNK2kc38impl_Cexpression_elem_CExpressionArray9subphylumEi, .Lfunc_end198-_ZNK2kc38impl_Cexpression_elem_CExpressionArray9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc37impl_Cexpression_elem_CExpressionPack9subphylumEi # -- Begin function _ZNK2kc37impl_Cexpression_elem_CExpressionPack9subphylumEi
	.p2align	5
	.type	_ZNK2kc37impl_Cexpression_elem_CExpressionPack9subphylumEi,@function
_ZNK2kc37impl_Cexpression_elem_CExpressionPack9subphylumEi: # @_ZNK2kc37impl_Cexpression_elem_CExpressionPack9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end199:
	.size	_ZNK2kc37impl_Cexpression_elem_CExpressionPack9subphylumEi, .Lfunc_end199-_ZNK2kc37impl_Cexpression_elem_CExpressionPack9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc35impl_Cexpression_elem_CExpressionSQ9subphylumEi # -- Begin function _ZNK2kc35impl_Cexpression_elem_CExpressionSQ9subphylumEi
	.p2align	5
	.type	_ZNK2kc35impl_Cexpression_elem_CExpressionSQ9subphylumEi,@function
_ZNK2kc35impl_Cexpression_elem_CExpressionSQ9subphylumEi: # @_ZNK2kc35impl_Cexpression_elem_CExpressionSQ9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end200:
	.size	_ZNK2kc35impl_Cexpression_elem_CExpressionSQ9subphylumEi, .Lfunc_end200-_ZNK2kc35impl_Cexpression_elem_CExpressionSQ9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc35impl_Cexpression_elem_CExpressionDQ9subphylumEi # -- Begin function _ZNK2kc35impl_Cexpression_elem_CExpressionDQ9subphylumEi
	.p2align	5
	.type	_ZNK2kc35impl_Cexpression_elem_CExpressionDQ9subphylumEi,@function
_ZNK2kc35impl_Cexpression_elem_CExpressionDQ9subphylumEi: # @_ZNK2kc35impl_Cexpression_elem_CExpressionDQ9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end201:
	.size	_ZNK2kc35impl_Cexpression_elem_CExpressionDQ9subphylumEi, .Lfunc_end201-_ZNK2kc35impl_Cexpression_elem_CExpressionDQ9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar9subphylumEi # -- Begin function _ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar9subphylumEi
	.p2align	5
	.type	_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar9subphylumEi,@function
_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar9subphylumEi: # @_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end202:
	.size	_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar9subphylumEi, .Lfunc_end202-_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc37impl_Cexpression_elem_CExpressionPart9subphylumEi # -- Begin function _ZNK2kc37impl_Cexpression_elem_CExpressionPart9subphylumEi
	.p2align	5
	.type	_ZNK2kc37impl_Cexpression_elem_CExpressionPart9subphylumEi,@function
_ZNK2kc37impl_Cexpression_elem_CExpressionPart9subphylumEi: # @_ZNK2kc37impl_Cexpression_elem_CExpressionPart9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end203:
	.size	_ZNK2kc37impl_Cexpression_elem_CExpressionPart9subphylumEi, .Lfunc_end203-_ZNK2kc37impl_Cexpression_elem_CExpressionPart9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc16impl_Cexpression9subphylumEi # -- Begin function _ZNK2kc16impl_Cexpression9subphylumEi
	.p2align	5
	.type	_ZNK2kc16impl_Cexpression9subphylumEi,@function
_ZNK2kc16impl_Cexpression9subphylumEi:  # @_ZNK2kc16impl_Cexpression9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB204_3
# %bb.1:
	bnez	$a1, .LBB204_4
# %bb.2:
	ld.d	$a0, $a0, 24
	ret
.LBB204_3:
	ld.d	$a0, $a0, 32
	ret
.LBB204_4:
	move	$a0, $zero
	ret
.Lfunc_end204:
	.size	_ZNK2kc16impl_Cexpression9subphylumEi, .Lfunc_end204-_ZNK2kc16impl_Cexpression9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation9subphylumEi # -- Begin function _ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation9subphylumEi
	.p2align	5
	.type	_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation9subphylumEi,@function
_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation9subphylumEi: # @_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end205:
	.size	_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation9subphylumEi, .Lfunc_end205-_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc24impl_attribute_Attribute9subphylumEi # -- Begin function _ZNK2kc24impl_attribute_Attribute9subphylumEi
	.p2align	5
	.type	_ZNK2kc24impl_attribute_Attribute9subphylumEi,@function
_ZNK2kc24impl_attribute_Attribute9subphylumEi: # @_ZNK2kc24impl_attribute_Attribute9subphylumEi
# %bb.0:
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB206_5
# %bb.1:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB206_4
# %bb.2:
	bnez	$a1, .LBB206_6
# %bb.3:
	ld.d	$a0, $a0, 8
	ret
.LBB206_4:
	ld.d	$a0, $a0, 16
	ret
.LBB206_5:
	ld.d	$a0, $a0, 24
	ret
.LBB206_6:
	move	$a0, $zero
	ret
.Lfunc_end206:
	.size	_ZNK2kc24impl_attribute_Attribute9subphylumEi, .Lfunc_end206-_ZNK2kc24impl_attribute_Attribute9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc15impl_attributes9subphylumEi # -- Begin function _ZNK2kc15impl_attributes9subphylumEi
	.p2align	5
	.type	_ZNK2kc15impl_attributes9subphylumEi,@function
_ZNK2kc15impl_attributes9subphylumEi:   # @_ZNK2kc15impl_attributes9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB207_3
# %bb.1:
	bnez	$a1, .LBB207_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB207_3:
	ld.d	$a0, $a0, 16
	ret
.LBB207_4:
	move	$a0, $zero
	ret
.Lfunc_end207:
	.size	_ZNK2kc15impl_attributes9subphylumEi, .Lfunc_end207-_ZNK2kc15impl_attributes9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc29impl_Ccode_option_CcodeOption9subphylumEi # -- Begin function _ZNK2kc29impl_Ccode_option_CcodeOption9subphylumEi
	.p2align	5
	.type	_ZNK2kc29impl_Ccode_option_CcodeOption9subphylumEi,@function
_ZNK2kc29impl_Ccode_option_CcodeOption9subphylumEi: # @_ZNK2kc29impl_Ccode_option_CcodeOption9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB208_3
# %bb.1:
	bnez	$a1, .LBB208_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB208_3:
	ld.d	$a0, $a0, 16
	ret
.LBB208_4:
	move	$a0, $zero
	ret
.Lfunc_end208:
	.size	_ZNK2kc29impl_Ccode_option_CcodeOption9subphylumEi, .Lfunc_end208-_ZNK2kc29impl_Ccode_option_CcodeOption9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc22impl_argument_Argument9subphylumEi # -- Begin function _ZNK2kc22impl_argument_Argument9subphylumEi
	.p2align	5
	.type	_ZNK2kc22impl_argument_Argument9subphylumEi,@function
_ZNK2kc22impl_argument_Argument9subphylumEi: # @_ZNK2kc22impl_argument_Argument9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB209_3
# %bb.1:
	bnez	$a1, .LBB209_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB209_3:
	ld.d	$a0, $a0, 16
	ret
.LBB209_4:
	move	$a0, $zero
	ret
.Lfunc_end209:
	.size	_ZNK2kc22impl_argument_Argument9subphylumEi, .Lfunc_end209-_ZNK2kc22impl_argument_Argument9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc14impl_arguments9subphylumEi # -- Begin function _ZNK2kc14impl_arguments9subphylumEi
	.p2align	5
	.type	_ZNK2kc14impl_arguments9subphylumEi,@function
_ZNK2kc14impl_arguments9subphylumEi:    # @_ZNK2kc14impl_arguments9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB210_3
# %bb.1:
	bnez	$a1, .LBB210_4
# %bb.2:
	ld.d	$a0, $a0, 16
	ret
.LBB210_3:
	ld.d	$a0, $a0, 24
	ret
.LBB210_4:
	move	$a0, $zero
	ret
.Lfunc_end210:
	.size	_ZNK2kc14impl_arguments9subphylumEi, .Lfunc_end210-_ZNK2kc14impl_arguments9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc28impl_alternative_Alternative9subphylumEi # -- Begin function _ZNK2kc28impl_alternative_Alternative9subphylumEi
	.p2align	5
	.type	_ZNK2kc28impl_alternative_Alternative9subphylumEi,@function
_ZNK2kc28impl_alternative_Alternative9subphylumEi: # @_ZNK2kc28impl_alternative_Alternative9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB211_3
# %bb.1:
	bnez	$a1, .LBB211_4
# %bb.2:
	ld.d	$a0, $a0, 40
	ret
.LBB211_3:
	ld.d	$a0, $a0, 48
	ret
.LBB211_4:
	move	$a0, $zero
	ret
.Lfunc_end211:
	.size	_ZNK2kc28impl_alternative_Alternative9subphylumEi, .Lfunc_end211-_ZNK2kc28impl_alternative_Alternative9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc17impl_alternatives9subphylumEi # -- Begin function _ZNK2kc17impl_alternatives9subphylumEi
	.p2align	5
	.type	_ZNK2kc17impl_alternatives9subphylumEi,@function
_ZNK2kc17impl_alternatives9subphylumEi: # @_ZNK2kc17impl_alternatives9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB212_3
# %bb.1:
	bnez	$a1, .LBB212_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB212_3:
	ld.d	$a0, $a0, 16
	ret
.LBB212_4:
	move	$a0, $zero
	ret
.Lfunc_end212:
	.size	_ZNK2kc17impl_alternatives9subphylumEi, .Lfunc_end212-_ZNK2kc17impl_alternatives9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc43impl_productionblock_PredefinedAlternatives9subphylumEi # -- Begin function _ZNK2kc43impl_productionblock_PredefinedAlternatives9subphylumEi
	.p2align	5
	.type	_ZNK2kc43impl_productionblock_PredefinedAlternatives9subphylumEi,@function
_ZNK2kc43impl_productionblock_PredefinedAlternatives9subphylumEi: # @_ZNK2kc43impl_productionblock_PredefinedAlternatives9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end213:
	.size	_ZNK2kc43impl_productionblock_PredefinedAlternatives9subphylumEi, .Lfunc_end213-_ZNK2kc43impl_productionblock_PredefinedAlternatives9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc40impl_productionblock_NonlistAlternatives9subphylumEi # -- Begin function _ZNK2kc40impl_productionblock_NonlistAlternatives9subphylumEi
	.p2align	5
	.type	_ZNK2kc40impl_productionblock_NonlistAlternatives9subphylumEi,@function
_ZNK2kc40impl_productionblock_NonlistAlternatives9subphylumEi: # @_ZNK2kc40impl_productionblock_NonlistAlternatives9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end214:
	.size	_ZNK2kc40impl_productionblock_NonlistAlternatives9subphylumEi, .Lfunc_end214-_ZNK2kc40impl_productionblock_NonlistAlternatives9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc37impl_productionblock_ListAlternatives9subphylumEi # -- Begin function _ZNK2kc37impl_productionblock_ListAlternatives9subphylumEi
	.p2align	5
	.type	_ZNK2kc37impl_productionblock_ListAlternatives9subphylumEi,@function
_ZNK2kc37impl_productionblock_ListAlternatives9subphylumEi: # @_ZNK2kc37impl_productionblock_ListAlternatives9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB215_3
# %bb.1:
	bnez	$a1, .LBB215_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB215_3:
	ld.d	$a0, $a0, 16
	ret
.LBB215_4:
	move	$a0, $zero
	ret
.Lfunc_end215:
	.size	_ZNK2kc37impl_productionblock_ListAlternatives9subphylumEi, .Lfunc_end215-_ZNK2kc37impl_productionblock_ListAlternatives9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc19impl_storageclasses9subphylumEi # -- Begin function _ZNK2kc19impl_storageclasses9subphylumEi
	.p2align	5
	.type	_ZNK2kc19impl_storageclasses9subphylumEi,@function
_ZNK2kc19impl_storageclasses9subphylumEi: # @_ZNK2kc19impl_storageclasses9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB216_3
# %bb.1:
	bnez	$a1, .LBB216_4
# %bb.2:
	ld.d	$a0, $a0, 16
	ret
.LBB216_3:
	ld.d	$a0, $a0, 24
	ret
.LBB216_4:
	move	$a0, $zero
	ret
.Lfunc_end216:
	.size	_ZNK2kc19impl_storageclasses9subphylumEi, .Lfunc_end216-_ZNK2kc19impl_storageclasses9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc40impl_storageoption_PositiveStorageOption9subphylumEi # -- Begin function _ZNK2kc40impl_storageoption_PositiveStorageOption9subphylumEi
	.p2align	5
	.type	_ZNK2kc40impl_storageoption_PositiveStorageOption9subphylumEi,@function
_ZNK2kc40impl_storageoption_PositiveStorageOption9subphylumEi: # @_ZNK2kc40impl_storageoption_PositiveStorageOption9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end217:
	.size	_ZNK2kc40impl_storageoption_PositiveStorageOption9subphylumEi, .Lfunc_end217-_ZNK2kc40impl_storageoption_PositiveStorageOption9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc40impl_storageoption_NegativeStorageOption9subphylumEi # -- Begin function _ZNK2kc40impl_storageoption_NegativeStorageOption9subphylumEi
	.p2align	5
	.type	_ZNK2kc40impl_storageoption_NegativeStorageOption9subphylumEi,@function
_ZNK2kc40impl_storageoption_NegativeStorageOption9subphylumEi: # @_ZNK2kc40impl_storageoption_NegativeStorageOption9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end218:
	.size	_ZNK2kc40impl_storageoption_NegativeStorageOption9subphylumEi, .Lfunc_end218-_ZNK2kc40impl_storageoption_NegativeStorageOption9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration9subphylumEi # -- Begin function _ZNK2kc40impl_phylumdeclaration_PhylumDeclaration9subphylumEi
	.p2align	5
	.type	_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration9subphylumEi,@function
_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration9subphylumEi: # @_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration9subphylumEi
# %bb.0:
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB219_6
# %bb.1:
	slli.d	$a1, $a1, 2
	pcalau12i	$a2, %pc_hi20(.LJTI219_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI219_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB219_2:
	ld.d	$a0, $a0, 32
	ret
.LBB219_3:
	ld.d	$a0, $a0, 48
	ret
.LBB219_4:
	ld.d	$a0, $a0, 56
	ret
.LBB219_5:
	ld.d	$a0, $a0, 40
	ret
.LBB219_6:
	move	$a0, $zero
	ret
.Lfunc_end219:
	.size	_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration9subphylumEi, .Lfunc_end219-_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration9subphylumEi
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI219_0:
	.word	.LBB219_2-.LJTI219_0
	.word	.LBB219_5-.LJTI219_0
	.word	.LBB219_3-.LJTI219_0
	.word	.LBB219_4-.LJTI219_0
                                        # -- End function
	.text
	.globl	_ZNK2kc16impl_phylumnames9subphylumEi # -- Begin function _ZNK2kc16impl_phylumnames9subphylumEi
	.p2align	5
	.type	_ZNK2kc16impl_phylumnames9subphylumEi,@function
_ZNK2kc16impl_phylumnames9subphylumEi:  # @_ZNK2kc16impl_phylumnames9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB220_3
# %bb.1:
	bnez	$a1, .LBB220_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB220_3:
	ld.d	$a0, $a0, 16
	ret
.LBB220_4:
	move	$a0, $zero
	ret
.Lfunc_end220:
	.size	_ZNK2kc16impl_phylumnames9subphylumEi, .Lfunc_end220-_ZNK2kc16impl_phylumnames9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc23impl_phylumdeclarations9subphylumEi # -- Begin function _ZNK2kc23impl_phylumdeclarations9subphylumEi
	.p2align	5
	.type	_ZNK2kc23impl_phylumdeclarations9subphylumEi,@function
_ZNK2kc23impl_phylumdeclarations9subphylumEi: # @_ZNK2kc23impl_phylumdeclarations9subphylumEi
# %bb.0:
	ori	$a2, $zero, 1
	beq	$a1, $a2, .LBB221_3
# %bb.1:
	bnez	$a1, .LBB221_4
# %bb.2:
	ld.d	$a0, $a0, 8
	ret
.LBB221_3:
	ld.d	$a0, $a0, 16
	ret
.LBB221_4:
	move	$a0, $zero
	ret
.Lfunc_end221:
	.size	_ZNK2kc23impl_phylumdeclarations9subphylumEi, .Lfunc_end221-_ZNK2kc23impl_phylumdeclarations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations9subphylumEi # -- Begin function _ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations9subphylumEi
	.p2align	5
	.type	_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations9subphylumEi,@function
_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations9subphylumEi: # @_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 8
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end222:
	.size	_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations9subphylumEi, .Lfunc_end222-_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc18impl_STRING_String9subphylumEi # -- Begin function _ZNK2kc18impl_STRING_String9subphylumEi
	.p2align	5
	.type	_ZNK2kc18impl_STRING_String9subphylumEi,@function
_ZNK2kc18impl_STRING_String9subphylumEi: # @_ZNK2kc18impl_STRING_String9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end223:
	.size	_ZNK2kc18impl_STRING_String9subphylumEi, .Lfunc_end223-_ZNK2kc18impl_STRING_String9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc12impl_INT_Int9subphylumEi # -- Begin function _ZNK2kc12impl_INT_Int9subphylumEi
	.p2align	5
	.type	_ZNK2kc12impl_INT_Int9subphylumEi,@function
_ZNK2kc12impl_INT_Int9subphylumEi:      # @_ZNK2kc12impl_INT_Int9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 24
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end224:
	.size	_ZNK2kc12impl_INT_Int9subphylumEi, .Lfunc_end224-_ZNK2kc12impl_INT_Int9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc10impl_ID_Id9subphylumEi # -- Begin function _ZNK2kc10impl_ID_Id9subphylumEi
	.p2align	5
	.type	_ZNK2kc10impl_ID_Id9subphylumEi,@function
_ZNK2kc10impl_ID_Id9subphylumEi:        # @_ZNK2kc10impl_ID_Id9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 40
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end225:
	.size	_ZNK2kc10impl_ID_Id9subphylumEi, .Lfunc_end225-_ZNK2kc10impl_ID_Id9subphylumEi
                                        # -- End function
	.globl	_ZNK2kc15impl_uniqID_Str9subphylumEi # -- Begin function _ZNK2kc15impl_uniqID_Str9subphylumEi
	.p2align	5
	.type	_ZNK2kc15impl_uniqID_Str9subphylumEi,@function
_ZNK2kc15impl_uniqID_Str9subphylumEi:   # @_ZNK2kc15impl_uniqID_Str9subphylumEi
# %bb.0:
	ld.d	$a0, $a0, 40
	sltui	$a1, $a1, 1
	maskeqz	$a0, $a0, $a1
	ret
.Lfunc_end226:
	.size	_ZNK2kc15impl_uniqID_Str9subphylumEi, .Lfunc_end226-_ZNK2kc15impl_uniqID_Str9subphylumEi
                                        # -- End function
	.globl	_ZN2kc32impl_bindingidmark_BindingIdMark13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_bindingidmark_BindingIdMark13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_bindingidmark_BindingIdMark13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_bindingidmark_BindingIdMark13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_bindingidmark_BindingIdMark13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB227_2
# %bb.1:
	ret
.LBB227_2:
	beqz	$a2, .LBB227_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc11impl_uniqIDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc11impl_uniqIDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 16
	ret
.LBB227_4:
	move	$a1, $zero
	st.d	$a1, $a0, 16
	ret
.Lfunc_end227:
	.size	_ZN2kc32impl_bindingidmark_BindingIdMark13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end227-_ZN2kc32impl_bindingidmark_BindingIdMark13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_bindingidmarks13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_bindingidmarks13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarks13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_bindingidmarks13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_bindingidmarks13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB228_4
# %bb.1:
	bnez	$a1, .LBB228_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB228_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_bindingidmarkE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_bindingidmarkE)
	b	.LBB228_6
.LBB228_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB228_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_bindingidmarksE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_bindingidmarksE)
.LBB228_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB228_8
.LBB228_7:
	move	$a0, $zero
.LBB228_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB228_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end228:
	.size	_ZN2kc19impl_bindingidmarks13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end228-_ZN2kc19impl_bindingidmarks13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB229_2
# %bb.1:
	ret
.LBB229_2:
	beqz	$a2, .LBB229_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc11impl_uniqIDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc11impl_uniqIDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 16
	ret
.LBB229_4:
	move	$a1, $zero
	st.d	$a1, $a0, 16
	ret
.Lfunc_end229:
	.size	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end229-_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc30impl_countedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc30impl_countedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc30impl_countedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc30impl_countedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB230_4
# %bb.1:
	bnez	$a1, .LBB230_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB230_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc29impl_countedphylumdeclarationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc29impl_countedphylumdeclarationE)
	b	.LBB230_6
.LBB230_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB230_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_countedphylumdeclarationsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc30impl_countedphylumdeclarationsE)
.LBB230_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB230_8
.LBB230_7:
	move	$a0, $zero
.LBB230_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB230_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end230:
	.size	_ZN2kc30impl_countedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end230-_ZN2kc30impl_countedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB231_2
# %bb.1:
	ret
.LBB231_2:
	beqz	$a2, .LBB231_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc11impl_uniqIDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc11impl_uniqIDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 16
	ret
.LBB231_4:
	move	$a1, $zero
	st.d	$a1, $a0, 16
	ret
.Lfunc_end231:
	.size	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end231-_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc28impl_addedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc28impl_addedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc28impl_addedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc28impl_addedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB232_4
# %bb.1:
	bnez	$a1, .LBB232_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB232_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_addedphylumdeclarationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_addedphylumdeclarationE)
	b	.LBB232_6
.LBB232_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB232_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_addedphylumdeclarationsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc28impl_addedphylumdeclarationsE)
.LBB232_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB232_8
.LBB232_7:
	move	$a0, $zero
.LBB232_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB232_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end232:
	.size	_ZN2kc28impl_addedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end232-_ZN2kc28impl_addedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem613set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_problem_Problem613set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem613set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_problem_Problem613set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_problem_Problem613set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 5
	bltu	$a3, $a1, .LBB233_8
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI233_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI233_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB233_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB233_4
	b	.LBB233_6
.LBB233_3:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB233_6
.LBB233_4:                              # %.sink.split.sink.split
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB233_7
.LBB233_5:
	ori	$s0, $zero, 24
	bnez	$a2, .LBB233_4
.LBB233_6:
	move	$a0, $zero
.LBB233_7:                              # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB233_8:
	ret
.LBB233_9:
	ori	$s0, $zero, 32
	bnez	$a2, .LBB233_4
	b	.LBB233_6
.LBB233_10:
	ori	$s0, $zero, 16
	bnez	$a2, .LBB233_4
	b	.LBB233_6
.LBB233_11:
	ori	$s0, $zero, 48
	bnez	$a2, .LBB233_4
	b	.LBB233_6
.Lfunc_end233:
	.size	_ZN2kc21impl_problem_Problem613set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end233-_ZN2kc21impl_problem_Problem613set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI233_0:
	.word	.LBB233_2-.LJTI233_0
	.word	.LBB233_10-.LJTI233_0
	.word	.LBB233_5-.LJTI233_0
	.word	.LBB233_9-.LJTI233_0
	.word	.LBB233_3-.LJTI233_0
	.word	.LBB233_11-.LJTI233_0
                                        # -- End function
	.text
	.globl	_ZN2kc21impl_problem_Problem513set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_problem_Problem513set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem513set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_problem_Problem513set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_problem_Problem513set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 4
	bltu	$a3, $a1, .LBB234_8
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI234_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI234_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB234_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB234_4
	b	.LBB234_6
.LBB234_3:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB234_6
.LBB234_4:                              # %.sink.split.sink.split
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB234_7
.LBB234_5:
	ori	$s0, $zero, 24
	bnez	$a2, .LBB234_4
.LBB234_6:
	move	$a0, $zero
.LBB234_7:                              # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB234_8:
	ret
.LBB234_9:
	ori	$s0, $zero, 32
	bnez	$a2, .LBB234_4
	b	.LBB234_6
.LBB234_10:
	ori	$s0, $zero, 16
	bnez	$a2, .LBB234_4
	b	.LBB234_6
.Lfunc_end234:
	.size	_ZN2kc21impl_problem_Problem513set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end234-_ZN2kc21impl_problem_Problem513set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI234_0:
	.word	.LBB234_2-.LJTI234_0
	.word	.LBB234_10-.LJTI234_0
	.word	.LBB234_5-.LJTI234_0
	.word	.LBB234_9-.LJTI234_0
	.word	.LBB234_3-.LJTI234_0
                                        # -- End function
	.text
	.globl	_ZN2kc21impl_problem_Problem413set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_problem_Problem413set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem413set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_problem_Problem413set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_problem_Problem413set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB235_8
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI235_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI235_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB235_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB235_4
	b	.LBB235_6
.LBB235_3:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB235_6
.LBB235_4:                              # %.sink.split.sink.split
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB235_7
.LBB235_5:
	ori	$s0, $zero, 32
	bnez	$a2, .LBB235_4
.LBB235_6:
	move	$a0, $zero
.LBB235_7:                              # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB235_8:
	ret
.LBB235_9:
	ori	$s0, $zero, 16
	bnez	$a2, .LBB235_4
	b	.LBB235_6
.Lfunc_end235:
	.size	_ZN2kc21impl_problem_Problem413set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end235-_ZN2kc21impl_problem_Problem413set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI235_0:
	.word	.LBB235_2-.LJTI235_0
	.word	.LBB235_9-.LJTI235_0
	.word	.LBB235_3-.LJTI235_0
	.word	.LBB235_5-.LJTI235_0
                                        # -- End function
	.text
	.globl	_ZN2kc25impl_problem_Problem3int113set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc25impl_problem_Problem3int113set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem3int113set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc25impl_problem_Problem3int113set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc25impl_problem_Problem3int113set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 4
	bltu	$a3, $a1, .LBB236_12
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI236_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI236_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB236_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB236_8
	b	.LBB236_10
.LBB236_3:
	ori	$s0, $zero, 40
	bnez	$a2, .LBB236_8
	b	.LBB236_10
.LBB236_4:
	ori	$s0, $zero, 24
	bnez	$a2, .LBB236_8
	b	.LBB236_10
.LBB236_5:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB236_10
# %bb.6:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	b	.LBB236_9
.LBB236_7:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB236_10
.LBB236_8:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
.LBB236_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB236_11
.LBB236_10:
	move	$a0, $zero
.LBB236_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB236_12:
	ret
.Lfunc_end236:
	.size	_ZN2kc25impl_problem_Problem3int113set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end236-_ZN2kc25impl_problem_Problem3int113set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI236_0:
	.word	.LBB236_2-.LJTI236_0
	.word	.LBB236_7-.LJTI236_0
	.word	.LBB236_4-.LJTI236_0
	.word	.LBB236_5-.LJTI236_0
	.word	.LBB236_3-.LJTI236_0
                                        # -- End function
	.text
	.globl	_ZN2kc21impl_problem_Problem313set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_problem_Problem313set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem313set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_problem_Problem313set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_problem_Problem313set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB237_6
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB237_4
# %bb.2:
	bnez	$a1, .LBB237_9
# %bb.3:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB237_5
	b	.LBB237_7
.LBB237_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB237_7
.LBB237_5:                              # %.sink.split.sink.split
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB237_8
.LBB237_6:
	ori	$s0, $zero, 24
	bnez	$a2, .LBB237_5
.LBB237_7:
	move	$a0, $zero
.LBB237_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB237_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end237:
	.size	_ZN2kc21impl_problem_Problem313set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end237-_ZN2kc21impl_problem_Problem313set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem213set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_problem_Problem213set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem213set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_problem_Problem213set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_problem_Problem213set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB238_4
# %bb.1:
	bnez	$a1, .LBB238_7
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB238_5
.LBB238_3:                              # %.sink.split.sink.split
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB238_6
.LBB238_4:
	ori	$s0, $zero, 16
	bnez	$a2, .LBB238_3
.LBB238_5:
	move	$a0, $zero
.LBB238_6:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB238_7:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end238:
	.size	_ZN2kc21impl_problem_Problem213set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end238-_ZN2kc21impl_problem_Problem213set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc37impl_problem_Problem1storageoption1ID13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc37impl_problem_Problem1storageoption1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc37impl_problem_Problem1storageoption1ID13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc37impl_problem_Problem1storageoption1ID13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc37impl_problem_Problem1storageoption1ID13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB239_12
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI239_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI239_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB239_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB239_4
	b	.LBB239_10
.LBB239_3:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB239_10
.LBB239_4:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB239_9
.LBB239_5:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB239_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB239_9
.LBB239_7:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB239_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_storageoptionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_storageoptionE)
.LBB239_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB239_11
.LBB239_10:
	move	$a0, $zero
.LBB239_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB239_12:
	ret
.Lfunc_end239:
	.size	_ZN2kc37impl_problem_Problem1storageoption1ID13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end239-_ZN2kc37impl_problem_Problem1storageoption1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI239_0:
	.word	.LBB239_2-.LJTI239_0
	.word	.LBB239_7-.LJTI239_0
	.word	.LBB239_3-.LJTI239_0
	.word	.LBB239_5-.LJTI239_0
                                        # -- End function
	.text
	.globl	_ZN2kc30impl_problem_Problem1INT1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc30impl_problem_Problem1INT1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc30impl_problem_Problem1INT1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc30impl_problem_Problem1INT1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc30impl_problem_Problem1INT1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 5
	bltu	$a3, $a1, .LBB240_14
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI240_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI240_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB240_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB240_5
	b	.LBB240_12
.LBB240_3:
	ori	$s0, $zero, 40
	bnez	$a2, .LBB240_5
	b	.LBB240_12
.LBB240_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB240_12
.LBB240_5:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB240_11
.LBB240_6:
	ori	$s0, $zero, 32
	bnez	$a2, .LBB240_10
	b	.LBB240_12
.LBB240_7:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB240_12
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc8impl_INTE)
	b	.LBB240_11
.LBB240_9:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB240_12
.LBB240_10:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB240_11:                             # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB240_13
.LBB240_12:
	move	$a0, $zero
.LBB240_13:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB240_14:
	ret
.Lfunc_end240:
	.size	_ZN2kc30impl_problem_Problem1INT1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end240-_ZN2kc30impl_problem_Problem1INT1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI240_0:
	.word	.LBB240_2-.LJTI240_0
	.word	.LBB240_7-.LJTI240_0
	.word	.LBB240_4-.LJTI240_0
	.word	.LBB240_6-.LJTI240_0
	.word	.LBB240_3-.LJTI240_0
	.word	.LBB240_9-.LJTI240_0
                                        # -- End function
	.text
	.globl	_ZN2kc29impl_problem_Problem1ID1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc29impl_problem_Problem1ID1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc29impl_problem_Problem1ID1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc29impl_problem_Problem1ID1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc29impl_problem_Problem1ID1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 5
	bltu	$a3, $a1, .LBB241_12
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI241_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI241_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB241_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB241_5
	b	.LBB241_10
.LBB241_3:
	ori	$s0, $zero, 40
	bnez	$a2, .LBB241_5
	b	.LBB241_10
.LBB241_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB241_10
.LBB241_5:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB241_8
.LBB241_6:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB241_10
.LBB241_7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB241_8:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB241_11
.LBB241_9:
	ori	$s0, $zero, 16
	bnez	$a2, .LBB241_7
.LBB241_10:
	move	$a0, $zero
.LBB241_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB241_12:
	ret
.LBB241_13:
	ori	$s0, $zero, 48
	bnez	$a2, .LBB241_7
	b	.LBB241_10
.Lfunc_end241:
	.size	_ZN2kc29impl_problem_Problem1ID1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end241-_ZN2kc29impl_problem_Problem1ID1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI241_0:
	.word	.LBB241_2-.LJTI241_0
	.word	.LBB241_9-.LJTI241_0
	.word	.LBB241_4-.LJTI241_0
	.word	.LBB241_6-.LJTI241_0
	.word	.LBB241_3-.LJTI241_0
	.word	.LBB241_13-.LJTI241_0
                                        # -- End function
	.text
	.globl	_ZN2kc27impl_problem_Problem1INT1ID13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc27impl_problem_Problem1INT1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc27impl_problem_Problem1INT1ID13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc27impl_problem_Problem1INT1ID13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc27impl_problem_Problem1INT1ID13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB242_12
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI242_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI242_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB242_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB242_4
	b	.LBB242_10
.LBB242_3:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB242_10
.LBB242_4:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB242_9
.LBB242_5:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB242_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB242_9
.LBB242_7:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB242_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc8impl_INTE)
.LBB242_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB242_11
.LBB242_10:
	move	$a0, $zero
.LBB242_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB242_12:
	ret
.Lfunc_end242:
	.size	_ZN2kc27impl_problem_Problem1INT1ID13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end242-_ZN2kc27impl_problem_Problem1INT1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI242_0:
	.word	.LBB242_2-.LJTI242_0
	.word	.LBB242_7-.LJTI242_0
	.word	.LBB242_3-.LJTI242_0
	.word	.LBB242_5-.LJTI242_0
                                        # -- End function
	.text
	.globl	_ZN2kc25impl_problem_Problem1int113set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc25impl_problem_Problem1int113set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem1int113set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc25impl_problem_Problem1int113set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc25impl_problem_Problem1int113set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB243_6
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB243_4
# %bb.2:
	bnez	$a1, .LBB243_11
# %bb.3:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB243_7
	b	.LBB243_9
.LBB243_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB243_9
# %bb.5:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	b	.LBB243_8
.LBB243_6:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB243_9
.LBB243_7:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
.LBB243_8:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB243_10
.LBB243_9:
	move	$a0, $zero
.LBB243_10:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB243_11:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end243:
	.size	_ZN2kc25impl_problem_Problem1int113set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end243-_ZN2kc25impl_problem_Problem1int113set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_problem_Problem1INT13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_problem_Problem1INT13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_problem_Problem1INT13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_problem_Problem1INT13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_problem_Problem1INT13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB244_4
# %bb.1:
	bnez	$a1, .LBB244_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB244_7
# %bb.3:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB244_6
.LBB244_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB244_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc8impl_INTE)
.LBB244_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB244_8
.LBB244_7:
	move	$a0, $zero
.LBB244_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB244_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end244:
	.size	_ZN2kc24impl_problem_Problem1INT13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end244-_ZN2kc24impl_problem_Problem1INT13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc25impl_problem_Problem1t1ID13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc25impl_problem_Problem1t1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem1t1ID13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc25impl_problem_Problem1t1ID13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc25impl_problem_Problem1t1ID13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB245_12
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI245_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI245_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB245_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB245_4
	b	.LBB245_10
.LBB245_3:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB245_10
.LBB245_4:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB245_9
.LBB245_5:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB245_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB245_9
.LBB245_7:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB245_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_IDtypeE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc11impl_IDtypeE)
.LBB245_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB245_11
.LBB245_10:
	move	$a0, $zero
.LBB245_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB245_12:
	ret
.Lfunc_end245:
	.size	_ZN2kc25impl_problem_Problem1t1ID13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end245-_ZN2kc25impl_problem_Problem1t1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI245_0:
	.word	.LBB245_2-.LJTI245_0
	.word	.LBB245_7-.LJTI245_0
	.word	.LBB245_3-.LJTI245_0
	.word	.LBB245_5-.LJTI245_0
                                        # -- End function
	.text
	.globl	_ZN2kc26impl_problem_Problem1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc26impl_problem_Problem1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc26impl_problem_Problem1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc26impl_problem_Problem1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc26impl_problem_Problem1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB246_11
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI246_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI246_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB246_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB246_4
	b	.LBB246_9
.LBB246_3:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB246_9
.LBB246_4:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB246_7
.LBB246_5:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB246_9
.LBB246_6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB246_7:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB246_10
.LBB246_8:
	ori	$s0, $zero, 16
	bnez	$a2, .LBB246_6
.LBB246_9:
	move	$a0, $zero
.LBB246_10:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB246_11:
	ret
.Lfunc_end246:
	.size	_ZN2kc26impl_problem_Problem1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end246-_ZN2kc26impl_problem_Problem1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI246_0:
	.word	.LBB246_2-.LJTI246_0
	.word	.LBB246_8-.LJTI246_0
	.word	.LBB246_3-.LJTI246_0
	.word	.LBB246_5-.LJTI246_0
                                        # -- End function
	.text
	.globl	_ZN2kc23impl_problem_Problem1we13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc23impl_problem_Problem1we13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc23impl_problem_Problem1we13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc23impl_problem_Problem1we13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc23impl_problem_Problem1we13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB247_4
# %bb.1:
	bnez	$a1, .LBB247_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB247_7
# %bb.3:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB247_6
.LBB247_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB247_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_withexpressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_withexpressionE)
.LBB247_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB247_8
.LBB247_7:
	move	$a0, $zero
.LBB247_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB247_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end247:
	.size	_ZN2kc23impl_problem_Problem1we13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end247-_ZN2kc23impl_problem_Problem1we13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_problem_Problem1tID13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_problem_Problem1tID13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_problem_Problem1tID13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_problem_Problem1tID13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_problem_Problem1tID13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB248_4
# %bb.1:
	bnez	$a1, .LBB248_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB248_7
# %bb.3:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB248_6
.LBB248_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB248_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB248_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB248_8
.LBB248_7:
	move	$a0, $zero
.LBB248_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB248_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end248:
	.size	_ZN2kc24impl_problem_Problem1tID13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end248-_ZN2kc24impl_problem_Problem1tID13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc23impl_problem_Problem1ID13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc23impl_problem_Problem1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc23impl_problem_Problem1ID13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc23impl_problem_Problem1ID13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc23impl_problem_Problem1ID13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB249_4
# %bb.1:
	bnez	$a1, .LBB249_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB249_7
# %bb.3:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB249_6
.LBB249_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB249_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB249_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB249_8
.LBB249_7:
	move	$a0, $zero
.LBB249_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB249_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end249:
	.size	_ZN2kc23impl_problem_Problem1ID13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end249-_ZN2kc23impl_problem_Problem1ID13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem113set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_problem_Problem113set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem113set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_problem_Problem113set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_problem_Problem113set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB250_2
# %bb.1:
	ret
.LBB250_2:
	beqz	$a2, .LBB250_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB250_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end250:
	.size	_ZN2kc21impl_problem_Problem113set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end250-_ZN2kc21impl_problem_Problem113set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc18impl_error_Warning13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc18impl_error_Warning13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc18impl_error_Warning13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc18impl_error_Warning13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc18impl_error_Warning13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB251_4
# %bb.1:
	bnez	$a1, .LBB251_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB251_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_filelineE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc13impl_filelineE)
	b	.LBB251_6
.LBB251_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB251_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_problemE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc12impl_problemE)
.LBB251_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB251_8
.LBB251_7:
	move	$a0, $zero
.LBB251_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB251_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end251:
	.size	_ZN2kc18impl_error_Warning13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end251-_ZN2kc18impl_error_Warning13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_error_NonFatal13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_error_NonFatal13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_error_NonFatal13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_error_NonFatal13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_error_NonFatal13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB252_4
# %bb.1:
	bnez	$a1, .LBB252_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB252_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_filelineE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc13impl_filelineE)
	b	.LBB252_6
.LBB252_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB252_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_problemE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc12impl_problemE)
.LBB252_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB252_8
.LBB252_7:
	move	$a0, $zero
.LBB252_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB252_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end252:
	.size	_ZN2kc19impl_error_NonFatal13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end252-_ZN2kc19impl_error_NonFatal13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc16impl_error_Fatal13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc16impl_error_Fatal13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc16impl_error_Fatal13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc16impl_error_Fatal13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc16impl_error_Fatal13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB253_4
# %bb.1:
	bnez	$a1, .LBB253_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB253_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_filelineE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc13impl_filelineE)
	b	.LBB253_6
.LBB253_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB253_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_problemE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc12impl_problemE)
.LBB253_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB253_8
.LBB253_7:
	move	$a0, $zero
.LBB253_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB253_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end253:
	.size	_ZN2kc16impl_error_Fatal13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end253-_ZN2kc16impl_error_Fatal13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_baseclass_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_baseclass_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_baseclass_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_baseclass_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_baseclass_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB254_4
# %bb.1:
	bnez	$a1, .LBB254_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB254_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB254_6
.LBB254_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB254_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_baseclass_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_baseclass_listE)
.LBB254_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB254_8
.LBB254_7:
	move	$a0, $zero
.LBB254_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB254_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end254:
	.size	_ZN2kc19impl_baseclass_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end254-_ZN2kc19impl_baseclass_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc33impl_baseclass_decl_BaseClassDecl13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc33impl_baseclass_decl_BaseClassDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc33impl_baseclass_decl_BaseClassDecl13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc33impl_baseclass_decl_BaseClassDecl13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc33impl_baseclass_decl_BaseClassDecl13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB255_4
# %bb.1:
	bnez	$a1, .LBB255_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB255_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB255_6
.LBB255_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB255_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_baseclass_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_baseclass_listE)
.LBB255_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB255_8
.LBB255_7:
	move	$a0, $zero
.LBB255_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB255_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end255:
	.size	_ZN2kc33impl_baseclass_decl_BaseClassDecl13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end255-_ZN2kc33impl_baseclass_decl_BaseClassDecl13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc27impl_baseclass_declarations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc27impl_baseclass_declarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc27impl_baseclass_declarations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc27impl_baseclass_declarations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB256_4
# %bb.1:
	bnez	$a1, .LBB256_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB256_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_baseclass_declE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_baseclass_declE)
	b	.LBB256_6
.LBB256_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB256_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_baseclass_declarationsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_baseclass_declarationsE)
.LBB256_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB256_8
.LBB256_7:
	move	$a0, $zero
.LBB256_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB256_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end256:
	.size	_ZN2kc27impl_baseclass_declarations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end256-_ZN2kc27impl_baseclass_declarations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc28impl_ac_base_init_AcBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc28impl_ac_base_init_AcBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc28impl_ac_base_init_AcBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc28impl_ac_base_init_AcBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc28impl_ac_base_init_AcBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB257_4
# %bb.1:
	bnez	$a1, .LBB257_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB257_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB257_6
.LBB257_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB257_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_constant_expressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_ac_constant_expressionE)
.LBB257_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB257_8
.LBB257_7:
	move	$a0, $zero
.LBB257_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB257_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end257:
	.size	_ZN2kc28impl_ac_base_init_AcBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end257-_ZN2kc28impl_ac_base_init_AcBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc22impl_ac_base_init_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc22impl_ac_base_init_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc22impl_ac_base_init_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc22impl_ac_base_init_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB258_4
# %bb.1:
	bnez	$a1, .LBB258_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB258_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_ac_base_initE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_ac_base_initE)
	b	.LBB258_6
.LBB258_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB258_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_base_init_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc22impl_ac_base_init_listE)
.LBB258_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB258_8
.LBB258_7:
	move	$a0, $zero
.LBB258_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB258_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end258:
	.size	_ZN2kc22impl_ac_base_init_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end258-_ZN2kc22impl_ac_base_init_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB259_2
# %bb.1:
	ret
.LBB259_2:
	beqz	$a2, .LBB259_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc22impl_ac_base_init_listE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc22impl_ac_base_init_listE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB259_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end259:
	.size	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end259-_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc32impl_ac_constant_expression_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_ac_constant_expression_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_ac_constant_expression_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_ac_constant_expression_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB260_4
# %bb.1:
	bnez	$a1, .LBB260_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB260_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_constant_expressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_ac_constant_expressionE)
	b	.LBB260_6
.LBB260_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB260_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc32impl_ac_constant_expression_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc32impl_ac_constant_expression_listE)
.LBB260_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB260_8
.LBB260_7:
	move	$a0, $zero
.LBB260_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB260_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end260:
	.size	_ZN2kc32impl_ac_constant_expression_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end260-_ZN2kc32impl_ac_constant_expression_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc39impl_ac_constant_expression_AcConstExpr13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc39impl_ac_constant_expression_AcConstExpr13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc39impl_ac_constant_expression_AcConstExpr13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc39impl_ac_constant_expression_AcConstExpr13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc39impl_ac_constant_expression_AcConstExpr13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB261_2
# %bb.1:
	ret
.LBB261_2:
	beqz	$a2, .LBB261_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB261_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end261:
	.size	_ZN2kc39impl_ac_constant_expression_AcConstExpr13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end261-_ZN2kc39impl_ac_constant_expression_AcConstExpr13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB262_2
# %bb.1:
	ret
.LBB262_2:
	beqz	$a2, .LBB262_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc27impl_ac_constant_expressionE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc27impl_ac_constant_expressionE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB262_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end262:
	.size	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end262-_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB263_4
# %bb.1:
	bnez	$a1, .LBB263_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB263_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE)
	b	.LBB263_6
.LBB263_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB263_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_parameter_type_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_ac_parameter_type_listE)
.LBB263_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB263_8
.LBB263_7:
	move	$a0, $zero
.LBB263_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB263_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end263:
	.size	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end263-_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB264_4
# %bb.1:
	bnez	$a1, .LBB264_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB264_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE)
	b	.LBB264_6
.LBB264_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB264_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc34impl_ac_constant_expression_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc34impl_ac_constant_expression_optionE)
.LBB264_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB264_8
.LBB264_7:
	move	$a0, $zero
.LBB264_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB264_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end264:
	.size	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end264-_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB265_2
# %bb.1:
	ret
.LBB265_2:
	beqz	$a2, .LBB265_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc27impl_ac_abstract_declaratorE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc27impl_ac_abstract_declaratorE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB265_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end265:
	.size	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end265-_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB266_2
# %bb.1:
	ret
.LBB266_2:
	beqz	$a2, .LBB266_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc34impl_ac_direct_abstract_declaratorE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc34impl_ac_direct_abstract_declaratorE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB266_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end266:
	.size	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end266-_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB267_4
# %bb.1:
	bnez	$a1, .LBB267_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB267_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_pointer_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc22impl_ac_pointer_optionE)
	b	.LBB267_6
.LBB267_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB267_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc34impl_ac_direct_abstract_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc34impl_ac_direct_abstract_declaratorE)
.LBB267_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB267_8
.LBB267_7:
	move	$a0, $zero
.LBB267_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB267_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end267:
	.size	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end267-_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB268_2
# %bb.1:
	ret
.LBB268_2:
	beqz	$a2, .LBB268_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc15impl_ac_pointerE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc15impl_ac_pointerE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB268_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end268:
	.size	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end268-_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc23impl_ac_identifier_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc23impl_ac_identifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc23impl_ac_identifier_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc23impl_ac_identifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB269_4
# %bb.1:
	bnez	$a1, .LBB269_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB269_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB269_6
.LBB269_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB269_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_ac_identifier_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc23impl_ac_identifier_listE)
.LBB269_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB269_8
.LBB269_7:
	move	$a0, $zero
.LBB269_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB269_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end269:
	.size	_ZN2kc23impl_ac_identifier_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end269-_ZN2kc23impl_ac_identifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB270_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB270_5
# %bb.2:
	bnez	$a1, .LBB270_12
# %bb.3:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB270_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	b	.LBB270_9
.LBB270_5:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB270_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_abstract_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_ac_abstract_declaratorE)
	b	.LBB270_9
.LBB270_7:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB270_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc34impl_ac_constant_expression_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc34impl_ac_constant_expression_optionE)
.LBB270_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB270_11
.LBB270_10:
	move	$a0, $zero
.LBB270_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB270_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end270:
	.size	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end270-_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB271_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB271_5
# %bb.2:
	bnez	$a1, .LBB271_12
# %bb.3:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB271_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	b	.LBB271_9
.LBB271_5:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB271_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_ac_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_ac_declaratorE)
	b	.LBB271_9
.LBB271_7:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB271_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc34impl_ac_constant_expression_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc34impl_ac_constant_expression_optionE)
.LBB271_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB271_11
.LBB271_10:
	move	$a0, $zero
.LBB271_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB271_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end271:
	.size	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end271-_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc22impl_ac_parameter_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc22impl_ac_parameter_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc22impl_ac_parameter_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc22impl_ac_parameter_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB272_4
# %bb.1:
	bnez	$a1, .LBB272_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB272_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc29impl_ac_parameter_declarationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc29impl_ac_parameter_declarationE)
	b	.LBB272_6
.LBB272_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB272_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_parameter_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc22impl_ac_parameter_listE)
.LBB272_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB272_8
.LBB272_7:
	move	$a0, $zero
.LBB272_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB272_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end272:
	.size	_ZN2kc22impl_ac_parameter_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end272-_ZN2kc22impl_ac_parameter_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc41impl_ac_parameter_type_list_AcParList3Dot13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB273_2
# %bb.1:
	ret
.LBB273_2:
	beqz	$a2, .LBB273_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc22impl_ac_parameter_listE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc22impl_ac_parameter_listE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB273_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end273:
	.size	_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end273-_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc37impl_ac_parameter_type_list_AcParList13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc37impl_ac_parameter_type_list_AcParList13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc37impl_ac_parameter_type_list_AcParList13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc37impl_ac_parameter_type_list_AcParList13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc37impl_ac_parameter_type_list_AcParList13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB274_2
# %bb.1:
	ret
.LBB274_2:
	beqz	$a2, .LBB274_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc22impl_ac_parameter_listE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc22impl_ac_parameter_listE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB274_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end274:
	.size	_ZN2kc37impl_ac_parameter_type_list_AcParList13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end274-_ZN2kc37impl_ac_parameter_type_list_AcParList13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc27impl_ac_type_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc27impl_ac_type_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc27impl_ac_type_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc27impl_ac_type_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB275_4
# %bb.1:
	bnez	$a1, .LBB275_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB275_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_type_qualifierE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc22impl_ac_type_qualifierE)
	b	.LBB275_6
.LBB275_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB275_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_type_qualifier_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_ac_type_qualifier_listE)
.LBB275_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB275_8
.LBB275_7:
	move	$a0, $zero
.LBB275_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB275_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end275:
	.size	_ZN2kc27impl_ac_type_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end275-_ZN2kc27impl_ac_type_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc28impl_ac_class_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc28impl_ac_class_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc28impl_ac_class_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc28impl_ac_class_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB276_4
# %bb.1:
	bnez	$a1, .LBB276_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB276_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB276_6
.LBB276_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB276_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_ac_class_qualifier_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc28impl_ac_class_qualifier_listE)
.LBB276_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB276_8
.LBB276_7:
	move	$a0, $zero
.LBB276_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB276_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end276:
	.size	_ZN2kc28impl_ac_class_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end276-_ZN2kc28impl_ac_class_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc33impl_ac_class_qualifier_help_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc33impl_ac_class_qualifier_help_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc33impl_ac_class_qualifier_help_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB277_4
# %bb.1:
	bnez	$a1, .LBB277_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB277_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc25impl_ac_direct_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc25impl_ac_direct_declaratorE)
	b	.LBB277_6
.LBB277_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB277_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
.LBB277_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB277_8
.LBB277_7:
	move	$a0, $zero
.LBB277_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB277_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end277:
	.size	_ZN2kc33impl_ac_class_qualifier_help_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end277-_ZN2kc33impl_ac_class_qualifier_help_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc36impl_ac_operator_name_AcOperatorName13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc36impl_ac_operator_name_AcOperatorName13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc36impl_ac_operator_name_AcOperatorName13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc36impl_ac_operator_name_AcOperatorName13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc36impl_ac_operator_name_AcOperatorName13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB278_2
# %bb.1:
	ret
.LBB278_2:
	beqz	$a2, .LBB278_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB278_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end278:
	.size	_ZN2kc36impl_ac_operator_name_AcOperatorName13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end278-_ZN2kc36impl_ac_operator_name_AcOperatorName13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc29impl_ac_pointer_AcPointerCons13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc29impl_ac_pointer_AcPointerCons13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc29impl_ac_pointer_AcPointerCons13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc29impl_ac_pointer_AcPointerCons13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc29impl_ac_pointer_AcPointerCons13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB279_4
# %bb.1:
	bnez	$a1, .LBB279_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB279_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_type_qualifier_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_ac_type_qualifier_listE)
	b	.LBB279_6
.LBB279_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB279_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc15impl_ac_pointerE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc15impl_ac_pointerE)
.LBB279_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB279_8
.LBB279_7:
	move	$a0, $zero
.LBB279_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB279_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end279:
	.size	_ZN2kc29impl_ac_pointer_AcPointerCons13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end279-_ZN2kc29impl_ac_pointer_AcPointerCons13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc28impl_ac_pointer_AcPointerNil13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc28impl_ac_pointer_AcPointerNil13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc28impl_ac_pointer_AcPointerNil13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc28impl_ac_pointer_AcPointerNil13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc28impl_ac_pointer_AcPointerNil13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB280_2
# %bb.1:
	ret
.LBB280_2:
	beqz	$a2, .LBB280_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc27impl_ac_type_qualifier_listE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc27impl_ac_type_qualifier_listE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB280_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end280:
	.size	_ZN2kc28impl_ac_pointer_AcPointerNil13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end280-_ZN2kc28impl_ac_pointer_AcPointerNil13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc33impl_ac_pointer_option_Yespointer13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc33impl_ac_pointer_option_Yespointer13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc33impl_ac_pointer_option_Yespointer13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc33impl_ac_pointer_option_Yespointer13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc33impl_ac_pointer_option_Yespointer13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB281_2
# %bb.1:
	ret
.LBB281_2:
	beqz	$a2, .LBB281_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc15impl_ac_pointerE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc15impl_ac_pointerE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB281_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end281:
	.size	_ZN2kc33impl_ac_pointer_option_Yespointer13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end281-_ZN2kc33impl_ac_pointer_option_Yespointer13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB282_2
# %bb.1:
	ret
.LBB282_2:
	beqz	$a2, .LBB282_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc21impl_ac_operator_nameE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc21impl_ac_operator_nameE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB282_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end282:
	.size	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end282-_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB283_4
# %bb.1:
	bnez	$a1, .LBB283_7
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB283_5
.LBB283_3:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB283_6
.LBB283_4:
	ori	$s0, $zero, 16
	bnez	$a2, .LBB283_3
.LBB283_5:
	move	$a0, $zero
.LBB283_6:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB283_7:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end283:
	.size	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end283-_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc38impl_ac_direct_declarator_AcMemberDecl13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc38impl_ac_direct_declarator_AcMemberDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc38impl_ac_direct_declarator_AcMemberDecl13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc38impl_ac_direct_declarator_AcMemberDecl13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc38impl_ac_direct_declarator_AcMemberDecl13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB284_6
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB284_4
# %bb.2:
	bnez	$a1, .LBB284_11
# %bb.3:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB284_5
	b	.LBB284_9
.LBB284_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB284_9
.LBB284_5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB284_8
.LBB284_6:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB284_9
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc32impl_ac_constant_expression_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc32impl_ac_constant_expression_listE)
.LBB284_8:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB284_10
.LBB284_9:
	move	$a0, $zero
.LBB284_10:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB284_11:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end284:
	.size	_ZN2kc38impl_ac_direct_declarator_AcMemberDecl13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end284-_ZN2kc38impl_ac_direct_declarator_AcMemberDecl13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB285_13
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI285_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI285_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB285_2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB285_11
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_ac_class_qualifier_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc28impl_ac_class_qualifier_listE)
	b	.LBB285_10
.LBB285_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB285_11
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_parameter_type_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_ac_parameter_type_listE)
	b	.LBB285_10
.LBB285_6:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB285_11
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_type_qualifierE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc22impl_ac_type_qualifierE)
	b	.LBB285_10
.LBB285_8:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB285_11
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc25impl_ac_direct_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc25impl_ac_direct_declaratorE)
.LBB285_10:                             # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB285_12
.LBB285_11:
	move	$a0, $zero
.LBB285_12:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB285_13:
	ret
.Lfunc_end285:
	.size	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end285-_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI285_0:
	.word	.LBB285_2-.LJTI285_0
	.word	.LBB285_8-.LJTI285_0
	.word	.LBB285_4-.LJTI285_0
	.word	.LBB285_6-.LJTI285_0
                                        # -- End function
	.text
	.globl	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB286_4
# %bb.1:
	bnez	$a1, .LBB286_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB286_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc25impl_ac_direct_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc25impl_ac_direct_declaratorE)
	b	.LBB286_6
.LBB286_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB286_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_parameter_type_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_ac_parameter_type_listE)
.LBB286_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB286_8
.LBB286_7:
	move	$a0, $zero
.LBB286_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB286_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end286:
	.size	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end286-_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB287_4
# %bb.1:
	bnez	$a1, .LBB287_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB287_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc25impl_ac_direct_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc25impl_ac_direct_declaratorE)
	b	.LBB287_6
.LBB287_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB287_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc34impl_ac_constant_expression_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc34impl_ac_constant_expression_optionE)
.LBB287_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB287_8
.LBB287_7:
	move	$a0, $zero
.LBB287_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB287_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end287:
	.size	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end287-_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB288_2
# %bb.1:
	ret
.LBB288_2:
	beqz	$a2, .LBB288_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_ac_declaratorE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_ac_declaratorE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB288_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end288:
	.size	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end288-_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc40impl_ac_direct_declarator_AcDirectDeclId13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB289_2
# %bb.1:
	ret
.LBB289_2:
	beqz	$a2, .LBB289_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB289_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end289:
	.size	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end289-_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc31impl_ac_declarator_AcDeclarator13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc31impl_ac_declarator_AcDeclarator13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc31impl_ac_declarator_AcDeclarator13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc31impl_ac_declarator_AcDeclarator13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc31impl_ac_declarator_AcDeclarator13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB290_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB290_5
# %bb.2:
	bnez	$a1, .LBB290_12
# %bb.3:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB290_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_pointer_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc22impl_ac_pointer_optionE)
	b	.LBB290_9
.LBB290_5:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB290_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_ac_ref_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_ac_ref_optionE)
	b	.LBB290_9
.LBB290_7:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB290_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc25impl_ac_direct_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc25impl_ac_direct_declaratorE)
.LBB290_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB290_11
.LBB290_10:
	move	$a0, $zero
.LBB290_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB290_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end290:
	.size	_ZN2kc31impl_ac_declarator_AcDeclarator13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end290-_ZN2kc31impl_ac_declarator_AcDeclarator13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc34impl_ac_init_declarator_AcInitDecl13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc34impl_ac_init_declarator_AcInitDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc34impl_ac_init_declarator_AcInitDecl13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc34impl_ac_init_declarator_AcInitDecl13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc34impl_ac_init_declarator_AcInitDecl13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB291_2
# %bb.1:
	ret
.LBB291_2:
	beqz	$a2, .LBB291_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_ac_declaratorE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_ac_declaratorE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB291_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end291:
	.size	_ZN2kc34impl_ac_init_declarator_AcInitDecl13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end291-_ZN2kc34impl_ac_init_declarator_AcInitDecl13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc28impl_ac_init_declarator_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc28impl_ac_init_declarator_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc28impl_ac_init_declarator_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc28impl_ac_init_declarator_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB292_4
# %bb.1:
	bnez	$a1, .LBB292_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB292_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_ac_init_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc23impl_ac_init_declaratorE)
	b	.LBB292_6
.LBB292_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB292_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_ac_init_declarator_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc28impl_ac_init_declarator_listE)
.LBB292_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB292_8
.LBB292_7:
	move	$a0, $zero
.LBB292_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB292_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end292:
	.size	_ZN2kc28impl_ac_init_declarator_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end292-_ZN2kc28impl_ac_init_declarator_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc33impl_ac_type_specifier_AcTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc33impl_ac_type_specifier_AcTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc33impl_ac_type_specifier_AcTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc33impl_ac_type_specifier_AcTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc33impl_ac_type_specifier_AcTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB293_2
# %bb.1:
	ret
.LBB293_2:
	beqz	$a2, .LBB293_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB293_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end293:
	.size	_ZN2kc33impl_ac_type_specifier_AcTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end293-_ZN2kc33impl_ac_type_specifier_AcTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB294_2
# %bb.1:
	ret
.LBB294_2:
	beqz	$a2, .LBB294_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc22impl_ac_type_qualifierE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc22impl_ac_type_qualifierE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB294_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end294:
	.size	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end294-_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB295_2
# %bb.1:
	ret
.LBB295_2:
	beqz	$a2, .LBB295_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc22impl_ac_type_specifierE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc22impl_ac_type_specifierE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB295_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end295:
	.size	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end295-_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB296_2
# %bb.1:
	ret
.LBB296_2:
	beqz	$a2, .LBB296_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc31impl_ac_storage_class_specifierE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc31impl_ac_storage_class_specifierE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB296_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end296:
	.size	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end296-_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc30impl_ac_declaration_specifiers13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc30impl_ac_declaration_specifiers13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiers13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc30impl_ac_declaration_specifiers13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc30impl_ac_declaration_specifiers13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB297_4
# %bb.1:
	bnez	$a1, .LBB297_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB297_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc29impl_ac_declaration_specifierE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc29impl_ac_declaration_specifierE)
	b	.LBB297_6
.LBB297_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB297_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
.LBB297_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB297_8
.LBB297_7:
	move	$a0, $zero
.LBB297_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB297_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end297:
	.size	_ZN2kc30impl_ac_declaration_specifiers13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end297-_ZN2kc30impl_ac_declaration_specifiers13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_ac_declaration_list13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_ac_declaration_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_list13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_ac_declaration_list13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_ac_declaration_list13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB298_4
# %bb.1:
	bnez	$a1, .LBB298_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB298_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_ac_declarationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_ac_declarationE)
	b	.LBB298_6
.LBB298_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB298_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_ac_declaration_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc24impl_ac_declaration_listE)
.LBB298_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB298_8
.LBB298_7:
	move	$a0, $zero
.LBB298_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB298_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end298:
	.size	_ZN2kc24impl_ac_declaration_list13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end298-_ZN2kc24impl_ac_declaration_list13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc33impl_ac_declaration_AcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc33impl_ac_declaration_AcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc33impl_ac_declaration_AcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc33impl_ac_declaration_AcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc33impl_ac_declaration_AcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB299_4
# %bb.1:
	bnez	$a1, .LBB299_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB299_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	b	.LBB299_6
.LBB299_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB299_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_ac_init_declarator_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc28impl_ac_init_declarator_listE)
.LBB299_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB299_8
.LBB299_7:
	move	$a0, $zero
.LBB299_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB299_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end299:
	.size	_ZN2kc33impl_ac_declaration_AcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end299-_ZN2kc33impl_ac_declaration_AcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB300_6
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB300_4
# %bb.2:
	bnez	$a1, .LBB300_11
# %bb.3:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB300_5
	b	.LBB300_9
.LBB300_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB300_9
.LBB300_5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	b	.LBB300_8
.LBB300_6:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB300_9
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_unparseclauseE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_unparseclauseE)
.LBB300_8:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB300_10
.LBB300_9:
	move	$a0, $zero
.LBB300_10:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB300_11:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end300:
	.size	_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end300-_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc21impl_unparsedeclsinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_unparsedeclsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_unparsedeclsinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_unparsedeclsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB301_4
# %bb.1:
	bnez	$a1, .LBB301_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB301_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_unparsedeclinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_unparsedeclinfoE)
	b	.LBB301_6
.LBB301_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB301_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_unparsedeclsinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc21impl_unparsedeclsinfoE)
.LBB301_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB301_8
.LBB301_7:
	move	$a0, $zero
.LBB301_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB301_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end301:
	.size	_ZN2kc21impl_unparsedeclsinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end301-_ZN2kc21impl_unparsedeclsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc36impl_unparseviewinfo_Unparseviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc36impl_unparseviewinfo_Unparseviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc36impl_unparseviewinfo_Unparseviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc36impl_unparseviewinfo_Unparseviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc36impl_unparseviewinfo_Unparseviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB302_4
# %bb.1:
	bnez	$a1, .LBB302_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB302_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB302_6
.LBB302_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB302_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_unparsedeclsinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc21impl_unparsedeclsinfoE)
.LBB302_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB302_8
.LBB302_7:
	move	$a0, $zero
.LBB302_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB302_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end302:
	.size	_ZN2kc36impl_unparseviewinfo_Unparseviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end302-_ZN2kc36impl_unparseviewinfo_Unparseviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc21impl_unparseviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_unparseviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_unparseviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_unparseviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB303_4
# %bb.1:
	bnez	$a1, .LBB303_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB303_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_unparseviewinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_unparseviewinfoE)
	b	.LBB303_6
.LBB303_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB303_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_unparseviewsinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc21impl_unparseviewsinfoE)
.LBB303_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB303_8
.LBB303_7:
	move	$a0, $zero
.LBB303_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB303_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end303:
	.size	_ZN2kc21impl_unparseviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end303-_ZN2kc21impl_unparseviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB304_4
# %bb.1:
	bnez	$a1, .LBB304_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB304_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB304_6
.LBB304_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB304_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_rewriterulesinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc21impl_rewriterulesinfoE)
.LBB304_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB304_8
.LBB304_7:
	move	$a0, $zero
.LBB304_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB304_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end304:
	.size	_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end304-_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc21impl_rewriteviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_rewriteviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_rewriteviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_rewriteviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB305_4
# %bb.1:
	bnez	$a1, .LBB305_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB305_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_rewriteviewinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_rewriteviewinfoE)
	b	.LBB305_6
.LBB305_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB305_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_rewriteviewsinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc21impl_rewriteviewsinfoE)
.LBB305_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB305_8
.LBB305_7:
	move	$a0, $zero
.LBB305_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB305_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end305:
	.size	_ZN2kc21impl_rewriteviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end305-_ZN2kc21impl_rewriteviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc30impl_withcaseinfo_Withcaseinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc30impl_withcaseinfo_Withcaseinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc30impl_withcaseinfo_Withcaseinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc30impl_withcaseinfo_Withcaseinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc30impl_withcaseinfo_Withcaseinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB306_6
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB306_4
# %bb.2:
	bnez	$a1, .LBB306_11
# %bb.3:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB306_5
	b	.LBB306_9
.LBB306_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB306_9
.LBB306_5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	b	.LBB306_8
.LBB306_6:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB306_9
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
.LBB306_8:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB306_10
.LBB306_9:
	move	$a0, $zero
.LBB306_10:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB306_11:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end306:
	.size	_ZN2kc30impl_withcaseinfo_Withcaseinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end306-_ZN2kc30impl_withcaseinfo_Withcaseinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc18impl_withcasesinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc18impl_withcasesinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc18impl_withcasesinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc18impl_withcasesinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB307_4
# %bb.1:
	bnez	$a1, .LBB307_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB307_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_withcaseinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_withcaseinfoE)
	b	.LBB307_6
.LBB307_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB307_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_withcasesinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_withcasesinfoE)
.LBB307_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB307_8
.LBB307_7:
	move	$a0, $zero
.LBB307_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB307_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end307:
	.size	_ZN2kc18impl_withcasesinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end307-_ZN2kc18impl_withcasesinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB308_6
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB308_4
# %bb.2:
	bnez	$a1, .LBB308_11
# %bb.3:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB308_5
	b	.LBB308_9
.LBB308_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB308_9
.LBB308_5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	b	.LBB308_8
.LBB308_6:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB308_9
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_rewriteclauseE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_rewriteclauseE)
.LBB308_8:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB308_10
.LBB308_9:
	move	$a0, $zero
.LBB308_10:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB308_11:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end308:
	.size	_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end308-_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc21impl_rewriterulesinfo13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_rewriterulesinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfo13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_rewriterulesinfo13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_rewriterulesinfo13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB309_4
# %bb.1:
	bnez	$a1, .LBB309_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB309_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_rewriteruleinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_rewriteruleinfoE)
	b	.LBB309_6
.LBB309_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB309_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_rewriterulesinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc21impl_rewriterulesinfoE)
.LBB309_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB309_8
.LBB309_7:
	move	$a0, $zero
.LBB309_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB309_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end309:
	.size	_ZN2kc21impl_rewriterulesinfo13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end309-_ZN2kc21impl_rewriterulesinfo13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc16impl_argsnumbers13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc16impl_argsnumbers13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc16impl_argsnumbers13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc16impl_argsnumbers13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc16impl_argsnumbers13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB310_4
# %bb.1:
	bnez	$a1, .LBB310_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB310_7
# %bb.3:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	b	.LBB310_6
.LBB310_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB310_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_argsnumbersE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_argsnumbersE)
.LBB310_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB310_8
.LBB310_7:
	move	$a0, $zero
.LBB310_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB310_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end310:
	.size	_ZN2kc16impl_argsnumbers13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end310-_ZN2kc16impl_argsnumbers13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc10impl_paths13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc10impl_paths13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc10impl_paths13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc10impl_paths13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc10impl_paths13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB311_4
# %bb.1:
	bnez	$a1, .LBB311_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB311_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
	b	.LBB311_6
.LBB311_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB311_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_pathsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_pathsE)
.LBB311_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB311_8
.LBB311_7:
	move	$a0, $zero
.LBB311_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB311_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end311:
	.size	_ZN2kc10impl_paths13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end311-_ZN2kc10impl_paths13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc9impl_path13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc9impl_path13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc9impl_path13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc9impl_path13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc9impl_path13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB312_4
# %bb.1:
	bnez	$a1, .LBB312_9
# %bb.2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB312_7
# %bb.3:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	b	.LBB312_6
.LBB312_4:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB312_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
.LBB312_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB312_8
.LBB312_7:
	move	$a0, $zero
.LBB312_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB312_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end312:
	.size	_ZN2kc9impl_path13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end312-_ZN2kc9impl_path13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc44impl_elem_patternrepresentation_PRIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB313_4
# %bb.1:
	bnez	$a1, .LBB313_9
# %bb.2:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB313_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
	b	.LBB313_6
.LBB313_4:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB313_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc8impl_INTE)
.LBB313_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB313_8
.LBB313_7:
	move	$a0, $zero
.LBB313_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB313_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end313:
	.size	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end313-_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PRStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB314_4
# %bb.1:
	bnez	$a1, .LBB314_9
# %bb.2:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB314_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
	b	.LBB314_6
.LBB314_4:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB314_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
.LBB314_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB314_8
.LBB314_7:
	move	$a0, $zero
.LBB314_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB314_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end314:
	.size	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end314-_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc42impl_elem_patternrepresentation_PRWildcard13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc42impl_elem_patternrepresentation_PRWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc42impl_elem_patternrepresentation_PRWildcard13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc42impl_elem_patternrepresentation_PRWildcard13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc42impl_elem_patternrepresentation_PRWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB315_2
# %bb.1:
	ret
.LBB315_2:
	beqz	$a2, .LBB315_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB315_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end315:
	.size	_ZN2kc42impl_elem_patternrepresentation_PRWildcard13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end315-_ZN2kc42impl_elem_patternrepresentation_PRWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB316_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB316_5
# %bb.2:
	bnez	$a1, .LBB316_12
# %bb.3:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB316_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
	b	.LBB316_9
.LBB316_5:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB316_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB316_9
.LBB316_7:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB316_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
.LBB316_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB316_11
.LBB316_10:
	move	$a0, $zero
.LBB316_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB316_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end316:
	.size	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end316-_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PRUserPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB317_2
# %bb.1:
	ret
.LBB317_2:
	beqz	$a2, .LBB317_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB317_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end317:
	.size	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end317-_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc47impl_elem_patternrepresentation_PROperPredicate13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PROperPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PROperPredicate13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc47impl_elem_patternrepresentation_PROperPredicate13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc47impl_elem_patternrepresentation_PROperPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB318_4
# %bb.1:
	bnez	$a1, .LBB318_9
# %bb.2:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB318_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
	b	.LBB318_6
.LBB318_4:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB318_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB318_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB318_8
.LBB318_7:
	move	$a0, $zero
.LBB318_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB318_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end318:
	.size	_ZN2kc47impl_elem_patternrepresentation_PROperPredicate13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end318-_ZN2kc47impl_elem_patternrepresentation_PROperPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc46impl_elem_patternrepresentation_PRVarPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB319_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB319_5
# %bb.2:
	bnez	$a1, .LBB319_12
# %bb.3:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB319_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_pathsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_pathsE)
	b	.LBB319_9
.LBB319_5:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB319_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB319_9
.LBB319_7:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB319_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
.LBB319_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB319_11
.LBB319_10:
	move	$a0, $zero
.LBB319_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB319_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end319:
	.size	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end319-_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc41impl_elem_patternrepresentation_PRBinding13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc41impl_elem_patternrepresentation_PRBinding13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc41impl_elem_patternrepresentation_PRBinding13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc41impl_elem_patternrepresentation_PRBinding13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc41impl_elem_patternrepresentation_PRBinding13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB320_4
# %bb.1:
	bnez	$a1, .LBB320_9
# %bb.2:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB320_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
	b	.LBB320_6
.LBB320_4:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB320_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB320_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB320_8
.LBB320_7:
	move	$a0, $zero
.LBB320_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB320_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end320:
	.size	_ZN2kc41impl_elem_patternrepresentation_PRBinding13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end320-_ZN2kc41impl_elem_patternrepresentation_PRBinding13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc26impl_patternrepresentation13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc26impl_patternrepresentation13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentation13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc26impl_patternrepresentation13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc26impl_patternrepresentation13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB321_4
# %bb.1:
	bnez	$a1, .LBB321_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB321_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc31impl_elem_patternrepresentationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc31impl_elem_patternrepresentationE)
	b	.LBB321_6
.LBB321_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB321_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
.LBB321_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB321_8
.LBB321_7:
	move	$a0, $zero
.LBB321_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB321_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end321:
	.size	_ZN2kc26impl_patternrepresentation13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end321-_ZN2kc26impl_patternrepresentation13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc27impl_patternrepresentations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc27impl_patternrepresentations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc27impl_patternrepresentations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc27impl_patternrepresentations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB322_4
# %bb.1:
	bnez	$a1, .LBB322_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB322_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	b	.LBB322_6
.LBB322_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB322_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_patternrepresentationsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_patternrepresentationsE)
.LBB322_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB322_8
.LBB322_7:
	move	$a0, $zero
.LBB322_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB322_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end322:
	.size	_ZN2kc27impl_patternrepresentations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end322-_ZN2kc27impl_patternrepresentations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc14impl_variables13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc14impl_variables13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc14impl_variables13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc14impl_variables13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc14impl_variables13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB323_4
# %bb.1:
	bnez	$a1, .LBB323_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB323_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB323_6
.LBB323_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB323_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_variablesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_variablesE)
.LBB323_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB323_8
.LBB323_7:
	move	$a0, $zero
.LBB323_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB323_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end323:
	.size	_ZN2kc14impl_variables13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end323-_ZN2kc14impl_variables13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc10impl_phyla13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc10impl_phyla13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc10impl_phyla13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc10impl_phyla13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc10impl_phyla13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB324_4
# %bb.1:
	bnez	$a1, .LBB324_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB324_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB324_6
.LBB324_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB324_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_phylaE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_phylaE)
.LBB324_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB324_8
.LBB324_7:
	move	$a0, $zero
.LBB324_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB324_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end324:
	.size	_ZN2kc10impl_phyla13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end324-_ZN2kc10impl_phyla13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc14impl_operators13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc14impl_operators13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc14impl_operators13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc14impl_operators13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc14impl_operators13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB325_4
# %bb.1:
	bnez	$a1, .LBB325_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB325_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB325_6
.LBB325_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB325_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_operatorsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_operatorsE)
.LBB325_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB325_8
.LBB325_7:
	move	$a0, $zero
.LBB325_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB325_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end325:
	.size	_ZN2kc14impl_operators13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end325-_ZN2kc14impl_operators13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITLanguageName13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc26impl_IDtype_ITLanguageName13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITLanguageName13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc26impl_IDtype_ITLanguageName13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc26impl_IDtype_ITLanguageName13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB326_2
# %bb.1:
	ret
.LBB326_2:
	beqz	$a2, .LBB326_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB326_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end326:
	.size	_ZN2kc26impl_IDtype_ITLanguageName13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end326-_ZN2kc26impl_IDtype_ITLanguageName13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc29impl_IDtype_ITPatternVariable13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc29impl_IDtype_ITPatternVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc29impl_IDtype_ITPatternVariable13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc29impl_IDtype_ITPatternVariable13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc29impl_IDtype_ITPatternVariable13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB327_4
# %bb.1:
	bnez	$a1, .LBB327_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB327_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB327_6
.LBB327_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB327_7
# %bb.5:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
.LBB327_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB327_8
.LBB327_7:
	move	$a0, $zero
.LBB327_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB327_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end327:
	.size	_ZN2kc29impl_IDtype_ITPatternVariable13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end327-_ZN2kc29impl_IDtype_ITPatternVariable13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITUserFunction13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc26impl_IDtype_ITUserFunction13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITUserFunction13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc26impl_IDtype_ITUserFunction13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc26impl_IDtype_ITUserFunction13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB328_2
# %bb.1:
	ret
.LBB328_2:
	beqz	$a2, .LBB328_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc12impl_fnclassE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc12impl_fnclassE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB328_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end328:
	.size	_ZN2kc26impl_IDtype_ITUserFunction13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end328-_ZN2kc26impl_IDtype_ITUserFunction13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITUserOperator13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc26impl_IDtype_ITUserOperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITUserOperator13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc26impl_IDtype_ITUserOperator13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc26impl_IDtype_ITUserOperator13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB329_4
# %bb.1:
	bnez	$a1, .LBB329_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB329_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_alternativeE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_alternativeE)
	b	.LBB329_6
.LBB329_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB329_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB329_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB329_8
.LBB329_7:
	move	$a0, $zero
.LBB329_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB329_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end329:
	.size	_ZN2kc26impl_IDtype_ITUserOperator13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end329-_ZN2kc26impl_IDtype_ITUserOperator13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc32impl_IDtype_ITPredefinedOperator13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_IDtype_ITPredefinedOperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_IDtype_ITPredefinedOperator13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_IDtype_ITPredefinedOperator13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_IDtype_ITPredefinedOperator13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB330_4
# %bb.1:
	bnez	$a1, .LBB330_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB330_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_alternativeE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_alternativeE)
	b	.LBB330_6
.LBB330_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB330_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB330_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB330_8
.LBB330_7:
	move	$a0, $zero
.LBB330_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB330_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end330:
	.size	_ZN2kc32impl_IDtype_ITPredefinedOperator13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end330-_ZN2kc32impl_IDtype_ITPredefinedOperator13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_IDtype_ITUserPhylum13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_IDtype_ITUserPhylum13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_IDtype_ITUserPhylum13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_IDtype_ITUserPhylum13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_IDtype_ITUserPhylum13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB331_2
# %bb.1:
	ret
.LBB331_2:
	beqz	$a2, .LBB331_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc22impl_phylumdeclarationE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc22impl_phylumdeclarationE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB331_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end331:
	.size	_ZN2kc24impl_IDtype_ITUserPhylum13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end331-_ZN2kc24impl_IDtype_ITUserPhylum13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc30impl_IDtype_ITPredefinedPhylum13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc30impl_IDtype_ITPredefinedPhylum13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc30impl_IDtype_ITPredefinedPhylum13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc30impl_IDtype_ITPredefinedPhylum13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc30impl_IDtype_ITPredefinedPhylum13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB332_2
# %bb.1:
	ret
.LBB332_2:
	beqz	$a2, .LBB332_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc22impl_phylumdeclarationE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc22impl_phylumdeclarationE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB332_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end332:
	.size	_ZN2kc30impl_IDtype_ITPredefinedPhylum13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end332-_ZN2kc30impl_IDtype_ITPredefinedPhylum13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc40impl_scopetypefileline_ScopeTypeFileLine13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB333_12
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI333_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI333_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB333_2:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB333_6
	b	.LBB333_10
.LBB333_3:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB333_10
# %bb.4:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	b	.LBB333_9
.LBB333_5:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB333_10
.LBB333_6:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	b	.LBB333_9
.LBB333_7:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB333_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_IDtypeE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc11impl_IDtypeE)
.LBB333_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB333_11
.LBB333_10:
	move	$a0, $zero
.LBB333_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB333_12:
	ret
.Lfunc_end333:
	.size	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end333-_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI333_0:
	.word	.LBB333_2-.LJTI333_0
	.word	.LBB333_7-.LJTI333_0
	.word	.LBB333_3-.LJTI333_0
	.word	.LBB333_5-.LJTI333_0
                                        # -- End function
	.text
	.globl	_ZN2kc27impl_scopetypefilelinestack13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc27impl_scopetypefilelinestack13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestack13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc27impl_scopetypefilelinestack13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc27impl_scopetypefilelinestack13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB334_4
# %bb.1:
	bnez	$a1, .LBB334_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB334_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_scopetypefilelineE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc22impl_scopetypefilelineE)
	b	.LBB334_6
.LBB334_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB334_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_scopetypefilelinestackE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc27impl_scopetypefilelinestackE)
.LBB334_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB334_8
.LBB334_7:
	move	$a0, $zero
.LBB334_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB334_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end334:
	.size	_ZN2kc27impl_scopetypefilelinestack13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end334-_ZN2kc27impl_scopetypefilelinestack13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc18impl_languagenames13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc18impl_languagenames13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc18impl_languagenames13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc18impl_languagenames13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc18impl_languagenames13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB335_4
# %bb.1:
	bnez	$a1, .LBB335_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB335_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB335_6
.LBB335_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB335_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_languagenamesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_languagenamesE)
.LBB335_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB335_8
.LBB335_7:
	move	$a0, $zero
.LBB335_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB335_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end335:
	.size	_ZN2kc18impl_languagenames13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end335-_ZN2kc18impl_languagenames13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc32impl_languageoption_LanguageList13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_languageoption_LanguageList13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_languageoption_LanguageList13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_languageoption_LanguageList13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_languageoption_LanguageList13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB336_2
# %bb.1:
	ret
.LBB336_2:
	beqz	$a2, .LBB336_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_languagenamesE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_languagenamesE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB336_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end336:
	.size	_ZN2kc32impl_languageoption_LanguageList13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end336-_ZN2kc32impl_languageoption_LanguageList13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc31impl_viewnameoption_YesViewname13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc31impl_viewnameoption_YesViewname13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc31impl_viewnameoption_YesViewname13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc31impl_viewnameoption_YesViewname13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc31impl_viewnameoption_YesViewname13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB337_2
# %bb.1:
	ret
.LBB337_2:
	beqz	$a2, .LBB337_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB337_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end337:
	.size	_ZN2kc31impl_viewnameoption_YesViewname13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end337-_ZN2kc31impl_viewnameoption_YesViewname13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc18impl_unpattributes13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc18impl_unpattributes13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc18impl_unpattributes13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc18impl_unpattributes13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc18impl_unpattributes13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB338_4
# %bb.1:
	bnez	$a1, .LBB338_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB338_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB338_6
.LBB338_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB338_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_unpattributesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_unpattributesE)
.LBB338_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB338_8
.LBB338_7:
	move	$a0, $zero
.LBB338_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB338_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end338:
	.size	_ZN2kc18impl_unpattributes13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end338-_ZN2kc18impl_unpattributes13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc33impl_unpsubterm_UnpCastedVariable13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc33impl_unpsubterm_UnpCastedVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc33impl_unpsubterm_UnpCastedVariable13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc33impl_unpsubterm_UnpCastedVariable13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc33impl_unpsubterm_UnpCastedVariable13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB339_4
# %bb.1:
	bnez	$a1, .LBB339_7
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB339_5
.LBB339_3:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB339_6
.LBB339_4:
	ori	$s0, $zero, 16
	bnez	$a2, .LBB339_3
.LBB339_5:
	move	$a0, $zero
.LBB339_6:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB339_7:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end339:
	.size	_ZN2kc33impl_unpsubterm_UnpCastedVariable13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end339-_ZN2kc33impl_unpsubterm_UnpCastedVariable13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc32impl_unpsubterm_UnpDollarvarAttr13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_unpsubterm_UnpDollarvarAttr13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarAttr13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarAttr13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_unpsubterm_UnpDollarvarAttr13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB340_4
# %bb.1:
	bnez	$a1, .LBB340_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB340_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc8impl_INTE)
	b	.LBB340_6
.LBB340_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB340_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_unpattributesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_unpattributesE)
.LBB340_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB340_8
.LBB340_7:
	move	$a0, $zero
.LBB340_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB340_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end340:
	.size	_ZN2kc32impl_unpsubterm_UnpDollarvarAttr13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end340-_ZN2kc32impl_unpsubterm_UnpDollarvarAttr13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc26impl_unpsubterm_UnpSubAttr13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc26impl_unpsubterm_UnpSubAttr13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc26impl_unpsubterm_UnpSubAttr13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc26impl_unpsubterm_UnpSubAttr13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc26impl_unpsubterm_UnpSubAttr13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB341_4
# %bb.1:
	bnez	$a1, .LBB341_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB341_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB341_6
.LBB341_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB341_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_unpattributesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_unpattributesE)
.LBB341_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB341_8
.LBB341_7:
	move	$a0, $zero
.LBB341_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB341_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end341:
	.size	_ZN2kc26impl_unpsubterm_UnpSubAttr13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end341-_ZN2kc26impl_unpsubterm_UnpSubAttr13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc32impl_unpsubterm_UnpDollarvarTerm13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_unpsubterm_UnpDollarvarTerm13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarTerm13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarTerm13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_unpsubterm_UnpDollarvarTerm13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB342_2
# %bb.1:
	ret
.LBB342_2:
	beqz	$a2, .LBB342_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc8impl_INTE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB342_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end342:
	.size	_ZN2kc32impl_unpsubterm_UnpDollarvarTerm13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end342-_ZN2kc32impl_unpsubterm_UnpDollarvarTerm13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc26impl_unpsubterm_UnpSubTerm13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc26impl_unpsubterm_UnpSubTerm13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc26impl_unpsubterm_UnpSubTerm13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc26impl_unpsubterm_UnpSubTerm13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc26impl_unpsubterm_UnpSubTerm13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB343_2
# %bb.1:
	ret
.LBB343_2:
	beqz	$a2, .LBB343_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB343_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end343:
	.size	_ZN2kc26impl_unpsubterm_UnpSubTerm13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end343-_ZN2kc26impl_unpsubterm_UnpSubTerm13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc29impl_unparseitem_UViewVarDecl13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc29impl_unparseitem_UViewVarDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc29impl_unparseitem_UViewVarDecl13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc29impl_unparseitem_UViewVarDecl13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc29impl_unparseitem_UViewVarDecl13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB344_6
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB344_4
# %bb.2:
	bnez	$a1, .LBB344_11
# %bb.3:
	ori	$s0, $zero, 16
	bnez	$a2, .LBB344_5
	b	.LBB344_9
.LBB344_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB344_9
.LBB344_5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB344_8
.LBB344_6:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB344_9
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
.LBB344_8:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB344_10
.LBB344_9:
	move	$a0, $zero
.LBB344_10:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB344_11:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end344:
	.size	_ZN2kc29impl_unparseitem_UViewVarDecl13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end344-_ZN2kc29impl_unparseitem_UViewVarDecl13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_unparseitem_UnpBody13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_unparseitem_UnpBody13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_unparseitem_UnpBody13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_unparseitem_UnpBody13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_unparseitem_UnpBody13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB345_4
# %bb.1:
	bnez	$a1, .LBB345_9
# %bb.2:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB345_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_languageoptionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_languageoptionE)
	b	.LBB345_6
.LBB345_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB345_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_unparseitemsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_unparseitemsE)
.LBB345_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB345_8
.LBB345_7:
	move	$a0, $zero
.LBB345_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB345_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end345:
	.size	_ZN2kc24impl_unparseitem_UnpBody13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end345-_ZN2kc24impl_unparseitem_UnpBody13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc25impl_unparseitem_UnpCtext13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc25impl_unparseitem_UnpCtext13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc25impl_unparseitem_UnpCtext13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc25impl_unparseitem_UnpCtext13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc25impl_unparseitem_UnpCtext13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB346_4
# %bb.1:
	bnez	$a1, .LBB346_9
# %bb.2:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB346_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_languageoptionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_languageoptionE)
	b	.LBB346_6
.LBB346_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB346_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
.LBB346_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB346_8
.LBB346_7:
	move	$a0, $zero
.LBB346_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB346_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end346:
	.size	_ZN2kc25impl_unparseitem_UnpCtext13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end346-_ZN2kc25impl_unparseitem_UnpCtext13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc27impl_unparseitem_UnpSubexpr13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc27impl_unparseitem_UnpSubexpr13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc27impl_unparseitem_UnpSubexpr13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc27impl_unparseitem_UnpSubexpr13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc27impl_unparseitem_UnpSubexpr13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB347_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB347_5
# %bb.2:
	bnez	$a1, .LBB347_12
# %bb.3:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB347_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_languageoptionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_languageoptionE)
	b	.LBB347_9
.LBB347_5:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB347_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc15impl_unpsubtermE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc15impl_unpsubtermE)
	b	.LBB347_9
.LBB347_7:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB347_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_viewnameoptionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_viewnameoptionE)
.LBB347_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB347_11
.LBB347_10:
	move	$a0, $zero
.LBB347_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB347_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end347:
	.size	_ZN2kc27impl_unparseitem_UnpSubexpr13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end347-_ZN2kc27impl_unparseitem_UnpSubexpr13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc23impl_unparseitem_UnpStr13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc23impl_unparseitem_UnpStr13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc23impl_unparseitem_UnpStr13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc23impl_unparseitem_UnpStr13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc23impl_unparseitem_UnpStr13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB348_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB348_5
# %bb.2:
	bnez	$a1, .LBB348_12
# %bb.3:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB348_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_languageoptionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_languageoptionE)
	b	.LBB348_9
.LBB348_5:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB348_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	b	.LBB348_9
.LBB348_7:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB348_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_viewnameoptionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_viewnameoptionE)
.LBB348_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB348_11
.LBB348_10:
	move	$a0, $zero
.LBB348_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB348_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end348:
	.size	_ZN2kc23impl_unparseitem_UnpStr13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end348-_ZN2kc23impl_unparseitem_UnpStr13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc17impl_unparseitems13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc17impl_unparseitems13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc17impl_unparseitems13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc17impl_unparseitems13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc17impl_unparseitems13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB349_4
# %bb.1:
	bnez	$a1, .LBB349_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB349_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_unparseitemE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_unparseitemE)
	b	.LBB349_6
.LBB349_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB349_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_unparseitemsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_unparseitemsE)
.LBB349_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB349_8
.LBB349_7:
	move	$a0, $zero
.LBB349_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB349_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end349:
	.size	_ZN2kc17impl_unparseitems13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end349-_ZN2kc17impl_unparseitems13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc14impl_viewnames13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc14impl_viewnames13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc14impl_viewnames13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc14impl_viewnames13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc14impl_viewnames13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB350_4
# %bb.1:
	bnez	$a1, .LBB350_9
# %bb.2:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB350_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB350_6
.LBB350_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB350_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
.LBB350_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB350_8
.LBB350_7:
	move	$a0, $zero
.LBB350_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB350_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end350:
	.size	_ZN2kc14impl_viewnames13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end350-_ZN2kc14impl_viewnames13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc32impl_unparseclause_UnparseClause13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_unparseclause_UnparseClause13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_unparseclause_UnparseClause13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_unparseclause_UnparseClause13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_unparseclause_UnparseClause13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB351_4
# %bb.1:
	bnez	$a1, .LBB351_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB351_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
	b	.LBB351_6
.LBB351_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB351_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_unparseitemsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_unparseitemsE)
.LBB351_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB351_8
.LBB351_7:
	move	$a0, $zero
.LBB351_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB351_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end351:
	.size	_ZN2kc32impl_unparseclause_UnparseClause13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end351-_ZN2kc32impl_unparseclause_UnparseClause13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_unparseclauses13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_unparseclauses13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_unparseclauses13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_unparseclauses13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_unparseclauses13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB352_4
# %bb.1:
	bnez	$a1, .LBB352_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB352_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_unparseclauseE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_unparseclauseE)
	b	.LBB352_6
.LBB352_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB352_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_unparseclausesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_unparseclausesE)
.LBB352_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB352_8
.LBB352_7:
	move	$a0, $zero
.LBB352_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB352_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end352:
	.size	_ZN2kc19impl_unparseclauses13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end352-_ZN2kc19impl_unparseclauses13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc42impl_unparsedeclaration_UnparseDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc42impl_unparsedeclaration_UnparseDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc42impl_unparsedeclaration_UnparseDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc42impl_unparsedeclaration_UnparseDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc42impl_unparsedeclaration_UnparseDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB353_4
# %bb.1:
	bnez	$a1, .LBB353_9
# %bb.2:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB353_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_outmostpatternsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_outmostpatternsE)
	b	.LBB353_6
.LBB353_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB353_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_unparseclausesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_unparseclausesE)
.LBB353_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB353_8
.LBB353_7:
	move	$a0, $zero
.LBB353_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB353_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end353:
	.size	_ZN2kc42impl_unparsedeclaration_UnparseDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end353-_ZN2kc42impl_unparsedeclaration_UnparseDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_unparsedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_unparsedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_unparsedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_unparsedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB354_4
# %bb.1:
	bnez	$a1, .LBB354_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB354_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_unparsedeclarationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc23impl_unparsedeclarationE)
	b	.LBB354_6
.LBB354_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB354_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_unparsedeclarationsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc24impl_unparsedeclarationsE)
.LBB354_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB354_8
.LBB354_7:
	move	$a0, $zero
.LBB354_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB354_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end354:
	.size	_ZN2kc24impl_unparsedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end354-_ZN2kc24impl_unparsedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc22impl_withcase_Withcase13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc22impl_withcase_Withcase13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc22impl_withcase_Withcase13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc22impl_withcase_Withcase13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc22impl_withcase_Withcase13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB355_4
# %bb.1:
	bnez	$a1, .LBB355_9
# %bb.2:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB355_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
	b	.LBB355_6
.LBB355_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB355_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
.LBB355_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB355_8
.LBB355_7:
	move	$a0, $zero
.LBB355_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB355_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end355:
	.size	_ZN2kc22impl_withcase_Withcase13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end355-_ZN2kc22impl_withcase_Withcase13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc14impl_withcases13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc14impl_withcases13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc14impl_withcases13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc14impl_withcases13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc14impl_withcases13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB356_4
# %bb.1:
	bnez	$a1, .LBB356_9
# %bb.2:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB356_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_withcaseE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc13impl_withcaseE)
	b	.LBB356_6
.LBB356_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB356_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_withcasesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_withcasesE)
.LBB356_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB356_8
.LBB356_7:
	move	$a0, $zero
.LBB356_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB356_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end356:
	.size	_ZN2kc14impl_withcases13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end356-_ZN2kc14impl_withcases13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc33impl_withexpression_WECexpression13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc33impl_withexpression_WECexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc33impl_withexpression_WECexpression13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc33impl_withexpression_WECexpression13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc33impl_withexpression_WECexpression13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB357_2
# %bb.1:
	ret
.LBB357_2:
	beqz	$a2, .LBB357_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB357_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end357:
	.size	_ZN2kc33impl_withexpression_WECexpression13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end357-_ZN2kc33impl_withexpression_WECexpression13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc30impl_withexpression_WEVariable13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc30impl_withexpression_WEVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc30impl_withexpression_WEVariable13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc30impl_withexpression_WEVariable13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc30impl_withexpression_WEVariable13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB358_2
# %bb.1:
	ret
.LBB358_2:
	beqz	$a2, .LBB358_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB358_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end358:
	.size	_ZN2kc30impl_withexpression_WEVariable13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end358-_ZN2kc30impl_withexpression_WEVariable13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc20impl_withexpressions13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc20impl_withexpressions13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc20impl_withexpressions13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc20impl_withexpressions13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc20impl_withexpressions13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB359_4
# %bb.1:
	bnez	$a1, .LBB359_9
# %bb.2:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB359_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_withexpressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_withexpressionE)
	b	.LBB359_6
.LBB359_4:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB359_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
.LBB359_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB359_8
.LBB359_7:
	move	$a0, $zero
.LBB359_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB359_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end359:
	.size	_ZN2kc20impl_withexpressions13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end359-_ZN2kc20impl_withexpressions13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc33impl_contextinfo_InForeachContext13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc33impl_contextinfo_InForeachContext13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc33impl_contextinfo_InForeachContext13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc33impl_contextinfo_InForeachContext13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc33impl_contextinfo_InForeachContext13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB360_2
# %bb.1:
	ret
.LBB360_2:
	beqz	$a2, .LBB360_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB360_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end360:
	.size	_ZN2kc33impl_contextinfo_InForeachContext13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end360-_ZN2kc33impl_contextinfo_InForeachContext13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc31impl_foreach_after_ForeachAfter13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc31impl_foreach_after_ForeachAfter13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc31impl_foreach_after_ForeachAfter13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc31impl_foreach_after_ForeachAfter13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc31impl_foreach_after_ForeachAfter13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB361_13
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI361_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI361_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB361_2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB361_11
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	b	.LBB361_10
.LBB361_4:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB361_11
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
	b	.LBB361_10
.LBB361_6:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB361_11
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
	b	.LBB361_10
.LBB361_8:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB361_11
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_idCexpressionsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_idCexpressionsE)
.LBB361_10:                             # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB361_12
.LBB361_11:
	move	$a0, $zero
.LBB361_12:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB361_13:
	ret
.Lfunc_end361:
	.size	_ZN2kc31impl_foreach_after_ForeachAfter13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end361-_ZN2kc31impl_foreach_after_ForeachAfter13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI361_0:
	.word	.LBB361_2-.LJTI361_0
	.word	.LBB361_8-.LJTI361_0
	.word	.LBB361_4-.LJTI361_0
	.word	.LBB361_6-.LJTI361_0
                                        # -- End function
	.text
	.globl	_ZN2kc35impl_Ctext_elem_CTextWithexpression13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc35impl_Ctext_elem_CTextWithexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc35impl_Ctext_elem_CTextWithexpression13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc35impl_Ctext_elem_CTextWithexpression13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc35impl_Ctext_elem_CTextWithexpression13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB362_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB362_5
# %bb.2:
	bnez	$a1, .LBB362_12
# %bb.3:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB362_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
	b	.LBB362_9
.LBB362_5:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB362_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_withcasesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_withcasesE)
	b	.LBB362_9
.LBB362_7:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB362_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_contextinfoE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_contextinfoE)
.LBB362_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB362_11
.LBB362_10:
	move	$a0, $zero
.LBB362_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB362_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end362:
	.size	_ZN2kc35impl_Ctext_elem_CTextWithexpression13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end362-_ZN2kc35impl_Ctext_elem_CTextWithexpression13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc38impl_Ctext_elem_CTextForeachexpression13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc38impl_Ctext_elem_CTextForeachexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc38impl_Ctext_elem_CTextForeachexpression13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc38impl_Ctext_elem_CTextForeachexpression13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc38impl_Ctext_elem_CTextForeachexpression13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 4
	bltu	$a3, $a1, .LBB363_15
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI363_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI363_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB363_2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB363_13
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	b	.LBB363_12
.LBB363_4:
	ori	$s0, $zero, 56
	beqz	$a2, .LBB363_13
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_foreach_afterE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_foreach_afterE)
	b	.LBB363_12
.LBB363_6:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB363_13
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
	b	.LBB363_12
.LBB363_8:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB363_13
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
	b	.LBB363_12
.LBB363_10:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB363_13
# %bb.11:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_idCexpressionsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_idCexpressionsE)
.LBB363_12:                             # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB363_14
.LBB363_13:
	move	$a0, $zero
.LBB363_14:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB363_15:
	ret
.Lfunc_end363:
	.size	_ZN2kc38impl_Ctext_elem_CTextForeachexpression13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end363-_ZN2kc38impl_Ctext_elem_CTextForeachexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI363_0:
	.word	.LBB363_2-.LJTI363_0
	.word	.LBB363_10-.LJTI363_0
	.word	.LBB363_6-.LJTI363_0
	.word	.LBB363_8-.LJTI363_0
	.word	.LBB363_4-.LJTI363_0
                                        # -- End function
	.text
	.globl	_ZN2kc26impl_Ctext_elem_CTextCbody13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc26impl_Ctext_elem_CTextCbody13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc26impl_Ctext_elem_CTextCbody13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc26impl_Ctext_elem_CTextCbody13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc26impl_Ctext_elem_CTextCbody13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB364_2
# %bb.1:
	ret
.LBB364_2:
	beqz	$a2, .LBB364_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc10impl_CtextE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB364_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end364:
	.size	_ZN2kc26impl_Ctext_elem_CTextCbody13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end364-_ZN2kc26impl_Ctext_elem_CTextCbody13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc34impl_Ctext_elem_CTextCexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB365_2
# %bb.1:
	ret
.LBB365_2:
	beqz	$a2, .LBB365_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB365_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end365:
	.size	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end365-_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc34impl_Ctext_elem_CTextCexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB366_2
# %bb.1:
	ret
.LBB366_2:
	beqz	$a2, .LBB366_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB366_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end366:
	.size	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end366-_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc23impl_Ctext_elem_CTextNl13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc23impl_Ctext_elem_CTextNl13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc23impl_Ctext_elem_CTextNl13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc23impl_Ctext_elem_CTextNl13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc23impl_Ctext_elem_CTextNl13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB367_2
# %bb.1:
	ret
.LBB367_2:
	beqz	$a2, .LBB367_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB367_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end367:
	.size	_ZN2kc23impl_Ctext_elem_CTextNl13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end367-_ZN2kc23impl_Ctext_elem_CTextNl13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc30impl_Ctext_elem_CTextDollarVar13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc30impl_Ctext_elem_CTextDollarVar13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc30impl_Ctext_elem_CTextDollarVar13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc30impl_Ctext_elem_CTextDollarVar13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc30impl_Ctext_elem_CTextDollarVar13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB368_2
# %bb.1:
	ret
.LBB368_2:
	beqz	$a2, .LBB368_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc8impl_INTE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB368_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end368:
	.size	_ZN2kc30impl_Ctext_elem_CTextDollarVar13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end368-_ZN2kc30impl_Ctext_elem_CTextDollarVar13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc25impl_Ctext_elem_CTextLine13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc25impl_Ctext_elem_CTextLine13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc25impl_Ctext_elem_CTextLine13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc25impl_Ctext_elem_CTextLine13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc25impl_Ctext_elem_CTextLine13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB369_2
# %bb.1:
	ret
.LBB369_2:
	beqz	$a2, .LBB369_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB369_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end369:
	.size	_ZN2kc25impl_Ctext_elem_CTextLine13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end369-_ZN2kc25impl_Ctext_elem_CTextLine13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc10impl_Ctext13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc10impl_Ctext13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc10impl_Ctext13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc10impl_Ctext13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc10impl_Ctext13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB370_4
# %bb.1:
	bnez	$a1, .LBB370_9
# %bb.2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB370_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc15impl_Ctext_elemE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc15impl_Ctext_elemE)
	b	.LBB370_6
.LBB370_4:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB370_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
.LBB370_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB370_8
.LBB370_7:
	move	$a0, $zero
.LBB370_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB370_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end370:
	.size	_ZN2kc10impl_Ctext13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end370-_ZN2kc10impl_Ctext13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc21impl_fnclass_StaticFn13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_fnclass_StaticFn13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_fnclass_StaticFn13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_fnclass_StaticFn13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_fnclass_StaticFn13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB371_2
# %bb.1:
	ret
.LBB371_2:
	beqz	$a2, .LBB371_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB371_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end371:
	.size	_ZN2kc21impl_fnclass_StaticFn13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end371-_ZN2kc21impl_fnclass_StaticFn13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc38impl_fndeclaration_AcMemberDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc38impl_fndeclaration_AcMemberDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc38impl_fndeclaration_AcMemberDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc38impl_fndeclaration_AcMemberDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc38impl_fndeclaration_AcMemberDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB372_13
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI372_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI372_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB372_2:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB372_11
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	b	.LBB372_10
.LBB372_4:
	ori	$s0, $zero, 56
	beqz	$a2, .LBB372_11
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc34impl_ac_constant_expression_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc34impl_ac_constant_expression_optionE)
	b	.LBB372_10
.LBB372_6:
	ori	$s0, $zero, 64
	beqz	$a2, .LBB372_11
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_fnclassE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc12impl_fnclassE)
	b	.LBB372_10
.LBB372_8:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB372_11
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_ac_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_ac_declaratorE)
.LBB372_10:                             # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB372_12
.LBB372_11:
	move	$a0, $zero
.LBB372_12:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB372_13:
	ret
.Lfunc_end372:
	.size	_ZN2kc38impl_fndeclaration_AcMemberDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end372-_ZN2kc38impl_fndeclaration_AcMemberDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI372_0:
	.word	.LBB372_2-.LJTI372_0
	.word	.LBB372_8-.LJTI372_0
	.word	.LBB372_4-.LJTI372_0
	.word	.LBB372_6-.LJTI372_0
                                        # -- End function
	.text
	.globl	_ZN2kc34impl_fndeclaration_FnAcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc34impl_fndeclaration_FnAcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc34impl_fndeclaration_FnAcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc34impl_fndeclaration_FnAcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc34impl_fndeclaration_FnAcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 6
	bltu	$a3, $a1, .LBB373_19
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI373_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI373_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB373_2:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB373_17
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	b	.LBB373_16
.LBB373_4:
	ori	$s0, $zero, 72
	beqz	$a2, .LBB373_17
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
	b	.LBB373_16
.LBB373_6:
	ori	$s0, $zero, 56
	beqz	$a2, .LBB373_17
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_ac_declaration_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc24impl_ac_declaration_listE)
	b	.LBB373_16
.LBB373_8:
	ori	$s0, $zero, 64
	beqz	$a2, .LBB373_17
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_ac_opt_base_init_listE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc26impl_ac_opt_base_init_listE)
	b	.LBB373_16
.LBB373_10:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB373_17
# %bb.11:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_ac_declaratorE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_ac_declaratorE)
	b	.LBB373_16
.LBB373_12:
	ori	$s0, $zero, 80
	beqz	$a2, .LBB373_17
# %bb.13:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB373_16
.LBB373_14:
	ori	$s0, $zero, 88
	beqz	$a2, .LBB373_17
# %bb.15:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_fnclassE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc12impl_fnclassE)
.LBB373_16:                             # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB373_18
.LBB373_17:
	move	$a0, $zero
.LBB373_18:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB373_19:
	ret
.Lfunc_end373:
	.size	_ZN2kc34impl_fndeclaration_FnAcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end373-_ZN2kc34impl_fndeclaration_FnAcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI373_0:
	.word	.LBB373_2-.LJTI373_0
	.word	.LBB373_10-.LJTI373_0
	.word	.LBB373_6-.LJTI373_0
	.word	.LBB373_8-.LJTI373_0
	.word	.LBB373_4-.LJTI373_0
	.word	.LBB373_12-.LJTI373_0
	.word	.LBB373_14-.LJTI373_0
                                        # -- End function
	.text
	.globl	_ZN2kc19impl_fndeclarations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_fndeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_fndeclarations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_fndeclarations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_fndeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB374_4
# %bb.1:
	bnez	$a1, .LBB374_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB374_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_fndeclarationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_fndeclarationE)
	b	.LBB374_6
.LBB374_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB374_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_fndeclarationsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_fndeclarationsE)
.LBB374_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB374_8
.LBB374_7:
	move	$a0, $zero
.LBB374_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB374_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end374:
	.size	_ZN2kc19impl_fndeclarations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end374-_ZN2kc19impl_fndeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc18impl_fnfile_FnFile13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc18impl_fnfile_FnFile13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc18impl_fnfile_FnFile13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc18impl_fnfile_FnFile13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc18impl_fnfile_FnFile13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB375_2
# %bb.1:
	ret
.LBB375_2:
	beqz	$a2, .LBB375_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 16
	ret
.LBB375_4:
	move	$a1, $zero
	st.d	$a1, $a0, 16
	ret
.Lfunc_end375:
	.size	_ZN2kc18impl_fnfile_FnFile13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end375-_ZN2kc18impl_fnfile_FnFile13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc12impl_fnfiles13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc12impl_fnfiles13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc12impl_fnfiles13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc12impl_fnfiles13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc12impl_fnfiles13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB376_4
# %bb.1:
	bnez	$a1, .LBB376_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB376_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_fnfileE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc11impl_fnfileE)
	b	.LBB376_6
.LBB376_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB376_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_fnfilesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc12impl_fnfilesE)
.LBB376_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB376_8
.LBB376_7:
	move	$a0, $zero
.LBB376_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB376_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end376:
	.size	_ZN2kc12impl_fnfiles13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end376-_ZN2kc12impl_fnfiles13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc10impl_terms13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc10impl_terms13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc10impl_terms13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc10impl_terms13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc10impl_terms13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB377_4
# %bb.1:
	bnez	$a1, .LBB377_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB377_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_termE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_termE)
	b	.LBB377_6
.LBB377_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB377_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_termsE)
.LBB377_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB377_8
.LBB377_7:
	move	$a0, $zero
.LBB377_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB377_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end377:
	.size	_ZN2kc10impl_terms13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end377-_ZN2kc10impl_terms13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc21impl_term_TIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc21impl_term_TIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc21impl_term_TIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc21impl_term_TIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc21impl_term_TIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB378_2
# %bb.1:
	ret
.LBB378_2:
	beqz	$a2, .LBB378_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc8impl_INTE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB378_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end378:
	.size	_ZN2kc21impl_term_TIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end378-_ZN2kc21impl_term_TIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_term_TStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_term_TStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_term_TStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_term_TStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_term_TStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB379_2
# %bb.1:
	ret
.LBB379_2:
	beqz	$a2, .LBB379_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB379_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end379:
	.size	_ZN2kc24impl_term_TStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end379-_ZN2kc24impl_term_TStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc16impl_term_TCTerm13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc16impl_term_TCTerm13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc16impl_term_TCTerm13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc16impl_term_TCTerm13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc16impl_term_TCTerm13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB380_2
# %bb.1:
	ret
.LBB380_2:
	beqz	$a2, .LBB380_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB380_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end380:
	.size	_ZN2kc16impl_term_TCTerm13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end380-_ZN2kc16impl_term_TCTerm13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc23impl_term_TMemberVarDot13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc23impl_term_TMemberVarDot13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc23impl_term_TMemberVarDot13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc23impl_term_TMemberVarDot13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc23impl_term_TMemberVarDot13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB381_4
# %bb.1:
	bnez	$a1, .LBB381_9
# %bb.2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB381_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_termE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_termE)
	b	.LBB381_6
.LBB381_4:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB381_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB381_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB381_8
.LBB381_7:
	move	$a0, $zero
.LBB381_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB381_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end381:
	.size	_ZN2kc23impl_term_TMemberVarDot13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end381-_ZN2kc23impl_term_TMemberVarDot13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc20impl_term_TMemberVar13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc20impl_term_TMemberVar13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc20impl_term_TMemberVar13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc20impl_term_TMemberVar13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc20impl_term_TMemberVar13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB382_4
# %bb.1:
	bnez	$a1, .LBB382_9
# %bb.2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB382_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_termE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_termE)
	b	.LBB382_6
.LBB382_4:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB382_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB382_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB382_8
.LBB382_7:
	move	$a0, $zero
.LBB382_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB382_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end382:
	.size	_ZN2kc20impl_term_TMemberVar13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end382-_ZN2kc20impl_term_TMemberVar13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc20impl_term_TMethodDot13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc20impl_term_TMethodDot13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc20impl_term_TMethodDot13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc20impl_term_TMethodDot13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc20impl_term_TMethodDot13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB383_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB383_5
# %bb.2:
	bnez	$a1, .LBB383_12
# %bb.3:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB383_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_termE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_termE)
	b	.LBB383_9
.LBB383_5:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB383_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB383_9
.LBB383_7:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB383_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_termsE)
.LBB383_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB383_11
.LBB383_10:
	move	$a0, $zero
.LBB383_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB383_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end383:
	.size	_ZN2kc20impl_term_TMethodDot13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end383-_ZN2kc20impl_term_TMethodDot13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc17impl_term_TMethod13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc17impl_term_TMethod13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc17impl_term_TMethod13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc17impl_term_TMethod13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc17impl_term_TMethod13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB384_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB384_5
# %bb.2:
	bnez	$a1, .LBB384_12
# %bb.3:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB384_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_termE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_termE)
	b	.LBB384_9
.LBB384_5:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB384_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB384_9
.LBB384_7:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB384_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_termsE)
.LBB384_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB384_11
.LBB384_10:
	move	$a0, $zero
.LBB384_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB384_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end384:
	.size	_ZN2kc17impl_term_TMethod13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end384-_ZN2kc17impl_term_TMethod13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_term_TOperator13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_term_TOperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_term_TOperator13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_term_TOperator13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_term_TOperator13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB385_4
# %bb.1:
	bnez	$a1, .LBB385_9
# %bb.2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB385_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB385_6
.LBB385_4:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB385_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_termsE)
.LBB385_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB385_8
.LBB385_7:
	move	$a0, $zero
.LBB385_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB385_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end385:
	.size	_ZN2kc19impl_term_TOperator13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end385-_ZN2kc19impl_term_TOperator13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_term_TVariable13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_term_TVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_term_TVariable13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_term_TVariable13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_term_TVariable13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB386_2
# %bb.1:
	ret
.LBB386_2:
	beqz	$a2, .LBB386_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB386_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end386:
	.size	_ZN2kc19impl_term_TVariable13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end386-_ZN2kc19impl_term_TVariable13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc13impl_patterns13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc13impl_patterns13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc13impl_patterns13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc13impl_patterns13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc13impl_patterns13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB387_4
# %bb.1:
	bnez	$a1, .LBB387_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB387_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_patternE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc12impl_patternE)
	b	.LBB387_6
.LBB387_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB387_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_patternsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc13impl_patternsE)
.LBB387_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB387_8
.LBB387_7:
	move	$a0, $zero
.LBB387_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB387_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end387:
	.size	_ZN2kc13impl_patterns13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end387-_ZN2kc13impl_patterns13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_pattern_PIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_pattern_PIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_pattern_PIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_pattern_PIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_pattern_PIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB388_2
# %bb.1:
	ret
.LBB388_2:
	beqz	$a2, .LBB388_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc8impl_INTE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB388_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end388:
	.size	_ZN2kc24impl_pattern_PIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end388-_ZN2kc24impl_pattern_PIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc27impl_pattern_PStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc27impl_pattern_PStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc27impl_pattern_PStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc27impl_pattern_PStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc27impl_pattern_PStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB389_2
# %bb.1:
	ret
.LBB389_2:
	beqz	$a2, .LBB389_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB389_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end389:
	.size	_ZN2kc27impl_pattern_PStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end389-_ZN2kc27impl_pattern_PStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc29impl_pattern_PNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc29impl_pattern_PNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc29impl_pattern_PNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc29impl_pattern_PNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc29impl_pattern_PNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB390_4
# %bb.1:
	bnez	$a1, .LBB390_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB390_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB390_6
.LBB390_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB390_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_patternE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc12impl_patternE)
.LBB390_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB390_8
.LBB390_7:
	move	$a0, $zero
.LBB390_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB390_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end390:
	.size	_ZN2kc29impl_pattern_PNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end390-_ZN2kc29impl_pattern_PNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc22impl_pattern_POperator13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc22impl_pattern_POperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc22impl_pattern_POperator13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc22impl_pattern_POperator13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc22impl_pattern_POperator13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB391_4
# %bb.1:
	bnez	$a1, .LBB391_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB391_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB391_6
.LBB391_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB391_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_patternsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc13impl_patternsE)
.LBB391_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB391_8
.LBB391_7:
	move	$a0, $zero
.LBB391_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB391_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end391:
	.size	_ZN2kc22impl_pattern_POperator13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end391-_ZN2kc22impl_pattern_POperator13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc22impl_pattern_PVariable13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc22impl_pattern_PVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc22impl_pattern_PVariable13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc22impl_pattern_PVariable13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc22impl_pattern_PVariable13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB392_2
# %bb.1:
	ret
.LBB392_2:
	beqz	$a2, .LBB392_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB392_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end392:
	.size	_ZN2kc22impl_pattern_PVariable13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end392-_ZN2kc22impl_pattern_PVariable13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc29impl_outmostpattern_OPDefault13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc29impl_outmostpattern_OPDefault13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc29impl_outmostpattern_OPDefault13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc29impl_outmostpattern_OPDefault13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc29impl_outmostpattern_OPDefault13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB393_2
# %bb.1:
	ret
.LBB393_2:
	beqz	$a2, .LBB393_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB393_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end393:
	.size	_ZN2kc29impl_outmostpattern_OPDefault13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end393-_ZN2kc29impl_outmostpattern_OPDefault13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc30impl_outmostpattern_OPWildcard13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc30impl_outmostpattern_OPWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc30impl_outmostpattern_OPWildcard13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc30impl_outmostpattern_OPWildcard13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc30impl_outmostpattern_OPWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB394_2
# %bb.1:
	ret
.LBB394_2:
	beqz	$a2, .LBB394_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB394_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end394:
	.size	_ZN2kc30impl_outmostpattern_OPWildcard13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end394-_ZN2kc30impl_outmostpattern_OPWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc37impl_outmostpattern_OPNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc37impl_outmostpattern_OPNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc37impl_outmostpattern_OPNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc37impl_outmostpattern_OPNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc37impl_outmostpattern_OPNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB395_4
# %bb.1:
	bnez	$a1, .LBB395_9
# %bb.2:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB395_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB395_6
.LBB395_4:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB395_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_outmostpatternE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_outmostpatternE)
.LBB395_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB395_8
.LBB395_7:
	move	$a0, $zero
.LBB395_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB395_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end395:
	.size	_ZN2kc37impl_outmostpattern_OPNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end395-_ZN2kc37impl_outmostpattern_OPNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc30impl_outmostpattern_OPOperator13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc30impl_outmostpattern_OPOperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc30impl_outmostpattern_OPOperator13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc30impl_outmostpattern_OPOperator13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc30impl_outmostpattern_OPOperator13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB396_7
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB396_5
# %bb.2:
	bnez	$a1, .LBB396_12
# %bb.3:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB396_10
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB396_9
.LBB396_5:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB396_10
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_patternsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc13impl_patternsE)
	b	.LBB396_9
.LBB396_7:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB396_10
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
.LBB396_9:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB396_11
.LBB396_10:
	move	$a0, $zero
.LBB396_11:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB396_12:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end396:
	.size	_ZN2kc30impl_outmostpattern_OPOperator13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end396-_ZN2kc30impl_outmostpattern_OPOperator13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc38impl_outmostpattern_OPOperatorWildcard13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc38impl_outmostpattern_OPOperatorWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc38impl_outmostpattern_OPOperatorWildcard13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc38impl_outmostpattern_OPOperatorWildcard13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc38impl_outmostpattern_OPOperatorWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB397_4
# %bb.1:
	bnez	$a1, .LBB397_9
# %bb.2:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB397_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB397_6
.LBB397_4:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB397_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
.LBB397_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB397_8
.LBB397_7:
	move	$a0, $zero
.LBB397_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB397_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end397:
	.size	_ZN2kc38impl_outmostpattern_OPOperatorWildcard13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end397-_ZN2kc38impl_outmostpattern_OPOperatorWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc46impl_patternchainitem_PatternchainitemDollarid13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc46impl_patternchainitem_PatternchainitemDollarid13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc46impl_patternchainitem_PatternchainitemDollarid13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc46impl_patternchainitem_PatternchainitemDollarid13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc46impl_patternchainitem_PatternchainitemDollarid13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB398_2
# %bb.1:
	ret
.LBB398_2:
	beqz	$a2, .LBB398_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB398_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end398:
	.size	_ZN2kc46impl_patternchainitem_PatternchainitemDollarid13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end398-_ZN2kc46impl_patternchainitem_PatternchainitemDollarid13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc43impl_patternchainitem_PatternchainitemGroup13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc43impl_patternchainitem_PatternchainitemGroup13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc43impl_patternchainitem_PatternchainitemGroup13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc43impl_patternchainitem_PatternchainitemGroup13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc43impl_patternchainitem_PatternchainitemGroup13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB399_2
# %bb.1:
	ret
.LBB399_2:
	beqz	$a2, .LBB399_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB399_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end399:
	.size	_ZN2kc43impl_patternchainitem_PatternchainitemGroup13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end399-_ZN2kc43impl_patternchainitem_PatternchainitemGroup13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc45impl_patternchainitem_PatternchainitemOutmost13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc45impl_patternchainitem_PatternchainitemOutmost13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc45impl_patternchainitem_PatternchainitemOutmost13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc45impl_patternchainitem_PatternchainitemOutmost13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc45impl_patternchainitem_PatternchainitemOutmost13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB400_2
# %bb.1:
	ret
.LBB400_2:
	beqz	$a2, .LBB400_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc19impl_outmostpatternE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc19impl_outmostpatternE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB400_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end400:
	.size	_ZN2kc45impl_patternchainitem_PatternchainitemOutmost13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end400-_ZN2kc45impl_patternchainitem_PatternchainitemOutmost13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc20impl_outmostpatterns13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc20impl_outmostpatterns13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc20impl_outmostpatterns13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc20impl_outmostpatterns13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc20impl_outmostpatterns13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB401_4
# %bb.1:
	bnez	$a1, .LBB401_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB401_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_outmostpatternE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_outmostpatternE)
	b	.LBB401_6
.LBB401_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB401_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_outmostpatternsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_outmostpatternsE)
.LBB401_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB401_8
.LBB401_7:
	move	$a0, $zero
.LBB401_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB401_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end401:
	.size	_ZN2kc20impl_outmostpatterns13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end401-_ZN2kc20impl_outmostpatterns13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc17impl_patternchain13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc17impl_patternchain13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc17impl_patternchain13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc17impl_patternchain13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc17impl_patternchain13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB402_4
# %bb.1:
	bnez	$a1, .LBB402_9
# %bb.2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB402_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_patternchainitemE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc21impl_patternchainitemE)
	b	.LBB402_6
.LBB402_4:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB402_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_patternchainE)
.LBB402_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB402_8
.LBB402_7:
	move	$a0, $zero
.LBB402_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB402_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end402:
	.size	_ZN2kc17impl_patternchain13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end402-_ZN2kc17impl_patternchain13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc18impl_patternchains13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc18impl_patternchains13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc18impl_patternchains13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc18impl_patternchains13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc18impl_patternchains13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB403_4
# %bb.1:
	bnez	$a1, .LBB403_9
# %bb.2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB403_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	b	.LBB403_6
.LBB403_4:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB403_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
.LBB403_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB403_8
.LBB403_7:
	move	$a0, $zero
.LBB403_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB403_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end403:
	.size	_ZN2kc18impl_patternchains13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end403-_ZN2kc18impl_patternchains13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc32impl_rewriteclause_RewriteClause13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_rewriteclause_RewriteClause13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_rewriteclause_RewriteClause13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_rewriteclause_RewriteClause13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_rewriteclause_RewriteClause13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB404_4
# %bb.1:
	bnez	$a1, .LBB404_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB404_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
	b	.LBB404_6
.LBB404_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB404_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_termE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc9impl_termE)
.LBB404_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB404_8
.LBB404_7:
	move	$a0, $zero
.LBB404_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB404_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end404:
	.size	_ZN2kc32impl_rewriteclause_RewriteClause13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end404-_ZN2kc32impl_rewriteclause_RewriteClause13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_rewriteclauses13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_rewriteclauses13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_rewriteclauses13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_rewriteclauses13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_rewriteclauses13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB405_4
# %bb.1:
	bnez	$a1, .LBB405_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB405_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_rewriteclauseE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_rewriteclauseE)
	b	.LBB405_6
.LBB405_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB405_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_rewriteclausesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_rewriteclausesE)
.LBB405_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB405_8
.LBB405_7:
	move	$a0, $zero
.LBB405_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB405_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end405:
	.size	_ZN2kc19impl_rewriteclauses13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end405-_ZN2kc19impl_rewriteclauses13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc32impl_rwdeclaration_RwDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_rwdeclaration_RwDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_rwdeclaration_RwDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_rwdeclaration_RwDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_rwdeclaration_RwDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB406_4
# %bb.1:
	bnez	$a1, .LBB406_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB406_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_outmostpatternsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_outmostpatternsE)
	b	.LBB406_6
.LBB406_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB406_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_rewriteclausesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_rewriteclausesE)
.LBB406_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB406_8
.LBB406_7:
	move	$a0, $zero
.LBB406_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB406_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end406:
	.size	_ZN2kc32impl_rwdeclaration_RwDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end406-_ZN2kc32impl_rwdeclaration_RwDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_rwdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_rwdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_rwdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_rwdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB407_4
# %bb.1:
	bnez	$a1, .LBB407_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB407_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_rwdeclarationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_rwdeclarationE)
	b	.LBB407_6
.LBB407_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB407_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_rwdeclarationsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_rwdeclarationsE)
.LBB407_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB407_8
.LBB407_7:
	move	$a0, $zero
.LBB407_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB407_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end407:
	.size	_ZN2kc19impl_rwdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end407-_ZN2kc19impl_rwdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc42impl_includedeclaration_IncludeDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc42impl_includedeclaration_IncludeDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc42impl_includedeclaration_IncludeDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc42impl_includedeclaration_IncludeDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc42impl_includedeclaration_IncludeDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB408_2
# %bb.1:
	ret
.LBB408_2:
	beqz	$a2, .LBB408_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB408_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end408:
	.size	_ZN2kc42impl_includedeclaration_IncludeDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end408-_ZN2kc42impl_includedeclaration_IncludeDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_includedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_includedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_includedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_includedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_includedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB409_4
# %bb.1:
	bnez	$a1, .LBB409_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB409_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_includedeclarationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc23impl_includedeclarationE)
	b	.LBB409_6
.LBB409_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB409_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_includedeclarationsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc24impl_includedeclarationsE)
.LBB409_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB409_8
.LBB409_7:
	move	$a0, $zero
.LBB409_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB409_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end409:
	.size	_ZN2kc24impl_includedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end409-_ZN2kc24impl_includedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc28impl_includefile_IncludeFile13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc28impl_includefile_IncludeFile13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc28impl_includefile_IncludeFile13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc28impl_includefile_IncludeFile13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc28impl_includefile_IncludeFile13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB410_2
# %bb.1:
	ret
.LBB410_2:
	beqz	$a2, .LBB410_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 32
	ret
.LBB410_4:
	move	$a1, $zero
	st.d	$a1, $a0, 32
	ret
.Lfunc_end410:
	.size	_ZN2kc28impl_includefile_IncludeFile13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end410-_ZN2kc28impl_includefile_IncludeFile13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc17impl_includefiles13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc17impl_includefiles13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc17impl_includefiles13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc17impl_includefiles13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc17impl_includefiles13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB411_4
# %bb.1:
	bnez	$a1, .LBB411_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB411_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_includefileE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_includefileE)
	b	.LBB411_6
.LBB411_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB411_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_includefilesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_includefilesE)
.LBB411_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB411_8
.LBB411_7:
	move	$a0, $zero
.LBB411_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB411_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end411:
	.size	_ZN2kc17impl_includefiles13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end411-_ZN2kc17impl_includefiles13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc11impl_Ctexts13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc11impl_Ctexts13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc11impl_Ctexts13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc11impl_Ctexts13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc11impl_Ctexts13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB412_4
# %bb.1:
	bnez	$a1, .LBB412_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB412_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
	b	.LBB412_6
.LBB412_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB412_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_CtextsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc11impl_CtextsE)
.LBB412_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB412_8
.LBB412_7:
	move	$a0, $zero
.LBB412_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB412_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end412:
	.size	_ZN2kc11impl_Ctexts13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end412-_ZN2kc11impl_Ctexts13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc32impl_idCexpression_IdCexpression13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc32impl_idCexpression_IdCexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc32impl_idCexpression_IdCexpression13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc32impl_idCexpression_IdCexpression13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc32impl_idCexpression_IdCexpression13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB413_4
# %bb.1:
	bnez	$a1, .LBB413_9
# %bb.2:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB413_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB413_6
.LBB413_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB413_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
.LBB413_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB413_8
.LBB413_7:
	move	$a0, $zero
.LBB413_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB413_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end413:
	.size	_ZN2kc32impl_idCexpression_IdCexpression13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end413-_ZN2kc32impl_idCexpression_IdCexpression13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_idCexpressions13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_idCexpressions13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_idCexpressions13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_idCexpressions13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_idCexpressions13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB414_4
# %bb.1:
	bnez	$a1, .LBB414_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB414_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_idCexpressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_idCexpressionE)
	b	.LBB414_6
.LBB414_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB414_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_idCexpressionsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_idCexpressionsE)
.LBB414_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB414_8
.LBB414_7:
	move	$a0, $zero
.LBB414_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB414_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end414:
	.size	_ZN2kc19impl_idCexpressions13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end414-_ZN2kc19impl_idCexpressions13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB415_2
# %bb.1:
	ret
.LBB415_2:
	beqz	$a2, .LBB415_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB415_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end415:
	.size	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end415-_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc18impl_CexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc18impl_CexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc18impl_CexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB416_4
# %bb.1:
	bnez	$a1, .LBB416_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB416_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_CexpressionSQ_elemE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc23impl_CexpressionSQ_elemE)
	b	.LBB416_6
.LBB416_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB416_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
.LBB416_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB416_8
.LBB416_7:
	move	$a0, $zero
.LBB416_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB416_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end416:
	.size	_ZN2kc18impl_CexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end416-_ZN2kc18impl_CexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB417_2
# %bb.1:
	ret
.LBB417_2:
	beqz	$a2, .LBB417_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB417_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end417:
	.size	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end417-_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc18impl_CexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc18impl_CexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc18impl_CexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB418_4
# %bb.1:
	bnez	$a1, .LBB418_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB418_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_CexpressionDQ_elemE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc23impl_CexpressionDQ_elemE)
	b	.LBB418_6
.LBB418_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB418_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
.LBB418_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB418_8
.LBB418_7:
	move	$a0, $zero
.LBB418_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB418_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end418:
	.size	_ZN2kc18impl_CexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end418-_ZN2kc18impl_CexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc38impl_Cexpression_elem_CExpressionArray13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc38impl_Cexpression_elem_CExpressionArray13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc38impl_Cexpression_elem_CExpressionArray13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc38impl_Cexpression_elem_CExpressionArray13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc38impl_Cexpression_elem_CExpressionArray13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB419_2
# %bb.1:
	ret
.LBB419_2:
	beqz	$a2, .LBB419_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB419_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end419:
	.size	_ZN2kc38impl_Cexpression_elem_CExpressionArray13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end419-_ZN2kc38impl_Cexpression_elem_CExpressionArray13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc37impl_Cexpression_elem_CExpressionPack13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc37impl_Cexpression_elem_CExpressionPack13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPack13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPack13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc37impl_Cexpression_elem_CExpressionPack13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB420_2
# %bb.1:
	ret
.LBB420_2:
	beqz	$a2, .LBB420_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB420_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end420:
	.size	_ZN2kc37impl_Cexpression_elem_CExpressionPack13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end420-_ZN2kc37impl_Cexpression_elem_CExpressionPack13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc35impl_Cexpression_elem_CExpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc35impl_Cexpression_elem_CExpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB421_2
# %bb.1:
	ret
.LBB421_2:
	beqz	$a2, .LBB421_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB421_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end421:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end421-_ZN2kc35impl_Cexpression_elem_CExpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc35impl_Cexpression_elem_CExpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc35impl_Cexpression_elem_CExpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB422_2
# %bb.1:
	ret
.LBB422_2:
	beqz	$a2, .LBB422_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB422_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end422:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end422-_ZN2kc35impl_Cexpression_elem_CExpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc42impl_Cexpression_elem_CExpressionDollarvar13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB423_2
# %bb.1:
	ret
.LBB423_2:
	beqz	$a2, .LBB423_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc8impl_INTE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB423_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end423:
	.size	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end423-_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc37impl_Cexpression_elem_CExpressionPart13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc37impl_Cexpression_elem_CExpressionPart13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPart13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPart13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc37impl_Cexpression_elem_CExpressionPart13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB424_2
# %bb.1:
	ret
.LBB424_2:
	beqz	$a2, .LBB424_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB424_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end424:
	.size	_ZN2kc37impl_Cexpression_elem_CExpressionPart13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end424-_ZN2kc37impl_Cexpression_elem_CExpressionPart13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc16impl_Cexpression13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc16impl_Cexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc16impl_Cexpression13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc16impl_Cexpression13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc16impl_Cexpression13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB425_4
# %bb.1:
	bnez	$a1, .LBB425_9
# %bb.2:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB425_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_Cexpression_elemE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc21impl_Cexpression_elemE)
	b	.LBB425_6
.LBB425_4:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB425_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
.LBB425_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB425_8
.LBB425_7:
	move	$a0, $zero
.LBB425_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB425_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end425:
	.size	_ZN2kc16impl_Cexpression13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end425-_ZN2kc16impl_Cexpression13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB426_2
# %bb.1:
	ret
.LBB426_2:
	beqz	$a2, .LBB426_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB426_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end426:
	.size	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end426-_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc24impl_attribute_Attribute13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc24impl_attribute_Attribute13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc24impl_attribute_Attribute13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc24impl_attribute_Attribute13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc24impl_attribute_Attribute13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 2
	move	$fp, $a0
	beq	$a1, $a3, .LBB427_6
# %bb.1:
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB427_4
# %bb.2:
	bnez	$a1, .LBB427_11
# %bb.3:
	ori	$s0, $zero, 8
	bnez	$a2, .LBB427_5
	b	.LBB427_9
.LBB427_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB427_9
.LBB427_5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB427_8
.LBB427_6:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB427_9
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc36impl_attribute_initialisation_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc36impl_attribute_initialisation_optionE)
.LBB427_8:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB427_10
.LBB427_9:
	move	$a0, $zero
.LBB427_10:                             # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB427_11:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end427:
	.size	_ZN2kc24impl_attribute_Attribute13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end427-_ZN2kc24impl_attribute_Attribute13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc15impl_attributes13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc15impl_attributes13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc15impl_attributes13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc15impl_attributes13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc15impl_attributes13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB428_4
# %bb.1:
	bnez	$a1, .LBB428_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB428_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_attributeE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_attributeE)
	b	.LBB428_6
.LBB428_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB428_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc15impl_attributesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc15impl_attributesE)
.LBB428_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB428_8
.LBB428_7:
	move	$a0, $zero
.LBB428_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB428_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end428:
	.size	_ZN2kc15impl_attributes13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end428-_ZN2kc15impl_attributes13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc29impl_Ccode_option_CcodeOption13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc29impl_Ccode_option_CcodeOption13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc29impl_Ccode_option_CcodeOption13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc29impl_Ccode_option_CcodeOption13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc29impl_Ccode_option_CcodeOption13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB429_4
# %bb.1:
	bnez	$a1, .LBB429_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB429_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc15impl_attributesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc15impl_attributesE)
	b	.LBB429_6
.LBB429_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB429_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_CtextsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc11impl_CtextsE)
.LBB429_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB429_8
.LBB429_7:
	move	$a0, $zero
.LBB429_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB429_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end429:
	.size	_ZN2kc29impl_Ccode_option_CcodeOption13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end429-_ZN2kc29impl_Ccode_option_CcodeOption13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc22impl_argument_Argument13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc22impl_argument_Argument13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc22impl_argument_Argument13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc22impl_argument_Argument13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc22impl_argument_Argument13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB430_4
# %bb.1:
	bnez	$a1, .LBB430_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB430_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB430_6
.LBB430_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB430_7
# %bb.5:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a0, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
.LBB430_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB430_8
.LBB430_7:
	move	$a0, $zero
.LBB430_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB430_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end430:
	.size	_ZN2kc22impl_argument_Argument13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end430-_ZN2kc22impl_argument_Argument13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc14impl_arguments13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc14impl_arguments13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc14impl_arguments13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc14impl_arguments13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc14impl_arguments13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB431_4
# %bb.1:
	bnez	$a1, .LBB431_9
# %bb.2:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB431_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB431_6
.LBB431_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB431_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_argumentsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_argumentsE)
.LBB431_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB431_8
.LBB431_7:
	move	$a0, $zero
.LBB431_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB431_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end431:
	.size	_ZN2kc14impl_arguments13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end431-_ZN2kc14impl_arguments13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc28impl_alternative_Alternative13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc28impl_alternative_Alternative13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc28impl_alternative_Alternative13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc28impl_alternative_Alternative13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc28impl_alternative_Alternative13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB432_4
# %bb.1:
	bnez	$a1, .LBB432_9
# %bb.2:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB432_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB432_6
.LBB432_4:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB432_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_argumentsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc14impl_argumentsE)
.LBB432_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB432_8
.LBB432_7:
	move	$a0, $zero
.LBB432_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB432_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end432:
	.size	_ZN2kc28impl_alternative_Alternative13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end432-_ZN2kc28impl_alternative_Alternative13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc17impl_alternatives13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc17impl_alternatives13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc17impl_alternatives13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc17impl_alternatives13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc17impl_alternatives13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB433_4
# %bb.1:
	bnez	$a1, .LBB433_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB433_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_alternativeE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_alternativeE)
	b	.LBB433_6
.LBB433_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB433_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_alternativesE)
.LBB433_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB433_8
.LBB433_7:
	move	$a0, $zero
.LBB433_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB433_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end433:
	.size	_ZN2kc17impl_alternatives13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end433-_ZN2kc17impl_alternatives13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc43impl_productionblock_PredefinedAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc43impl_productionblock_PredefinedAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc43impl_productionblock_PredefinedAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc43impl_productionblock_PredefinedAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc43impl_productionblock_PredefinedAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB434_2
# %bb.1:
	ret
.LBB434_2:
	beqz	$a2, .LBB434_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc17impl_alternativesE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB434_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end434:
	.size	_ZN2kc43impl_productionblock_PredefinedAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end434-_ZN2kc43impl_productionblock_PredefinedAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc40impl_productionblock_NonlistAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc40impl_productionblock_NonlistAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc40impl_productionblock_NonlistAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc40impl_productionblock_NonlistAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc40impl_productionblock_NonlistAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB435_2
# %bb.1:
	ret
.LBB435_2:
	beqz	$a2, .LBB435_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc17impl_alternativesE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB435_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end435:
	.size	_ZN2kc40impl_productionblock_NonlistAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end435-_ZN2kc40impl_productionblock_NonlistAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc37impl_productionblock_ListAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc37impl_productionblock_ListAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc37impl_productionblock_ListAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc37impl_productionblock_ListAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc37impl_productionblock_ListAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB436_4
# %bb.1:
	bnez	$a1, .LBB436_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB436_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_alternativesE)
	b	.LBB436_6
.LBB436_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB436_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
.LBB436_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB436_8
.LBB436_7:
	move	$a0, $zero
.LBB436_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB436_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end436:
	.size	_ZN2kc37impl_productionblock_ListAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end436-_ZN2kc37impl_productionblock_ListAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc19impl_storageclasses13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc19impl_storageclasses13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc19impl_storageclasses13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc19impl_storageclasses13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc19impl_storageclasses13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB437_4
# %bb.1:
	bnez	$a1, .LBB437_9
# %bb.2:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB437_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB437_6
.LBB437_4:
	ori	$s0, $zero, 24
	beqz	$a2, .LBB437_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_storageclassesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc19impl_storageclassesE)
.LBB437_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB437_8
.LBB437_7:
	move	$a0, $zero
.LBB437_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB437_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end437:
	.size	_ZN2kc19impl_storageclasses13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end437-_ZN2kc19impl_storageclasses13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc40impl_storageoption_PositiveStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc40impl_storageoption_PositiveStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc40impl_storageoption_PositiveStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc40impl_storageoption_PositiveStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc40impl_storageoption_PositiveStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB438_2
# %bb.1:
	ret
.LBB438_2:
	beqz	$a2, .LBB438_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB438_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end438:
	.size	_ZN2kc40impl_storageoption_PositiveStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end438-_ZN2kc40impl_storageoption_PositiveStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc40impl_storageoption_NegativeStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc40impl_storageoption_NegativeStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc40impl_storageoption_NegativeStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc40impl_storageoption_NegativeStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc40impl_storageoption_NegativeStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB439_2
# %bb.1:
	ret
.LBB439_2:
	beqz	$a2, .LBB439_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB439_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end439:
	.size	_ZN2kc40impl_storageoption_NegativeStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end439-_ZN2kc40impl_storageoption_NegativeStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc40impl_phylumdeclaration_PhylumDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc40impl_phylumdeclaration_PhylumDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc40impl_phylumdeclaration_PhylumDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc40impl_phylumdeclaration_PhylumDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc40impl_phylumdeclaration_PhylumDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB440_13
# %bb.1:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a0
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI440_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI440_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB440_2:
	ori	$s0, $zero, 32
	beqz	$a2, .LBB440_11
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB440_10
.LBB440_4:
	ori	$s0, $zero, 48
	beqz	$a2, .LBB440_11
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_productionblockE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc20impl_productionblockE)
	b	.LBB440_10
.LBB440_6:
	ori	$s0, $zero, 56
	beqz	$a2, .LBB440_11
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_Ccode_optionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc17impl_Ccode_optionE)
	b	.LBB440_10
.LBB440_8:
	ori	$s0, $zero, 40
	beqz	$a2, .LBB440_11
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_storageoptionE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc18impl_storageoptionE)
.LBB440_10:                             # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB440_12
.LBB440_11:
	move	$a0, $zero
.LBB440_12:                             # %.sink.split
	stx.d	$a0, $fp, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB440_13:
	ret
.Lfunc_end440:
	.size	_ZN2kc40impl_phylumdeclaration_PhylumDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end440-_ZN2kc40impl_phylumdeclaration_PhylumDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI440_0:
	.word	.LBB440_2-.LJTI440_0
	.word	.LBB440_8-.LJTI440_0
	.word	.LBB440_4-.LJTI440_0
	.word	.LBB440_6-.LJTI440_0
                                        # -- End function
	.text
	.globl	_ZN2kc16impl_phylumnames13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc16impl_phylumnames13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc16impl_phylumnames13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc16impl_phylumnames13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc16impl_phylumnames13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB441_4
# %bb.1:
	bnez	$a1, .LBB441_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB441_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	b	.LBB441_6
.LBB441_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB441_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_phylumnamesE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc16impl_phylumnamesE)
.LBB441_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB441_8
.LBB441_7:
	move	$a0, $zero
.LBB441_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB441_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end441:
	.size	_ZN2kc16impl_phylumnames13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end441-_ZN2kc16impl_phylumnames13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc23impl_phylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc23impl_phylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc23impl_phylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc23impl_phylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	ori	$a3, $zero, 1
	move	$fp, $a0
	beq	$a1, $a3, .LBB442_4
# %bb.1:
	bnez	$a1, .LBB442_9
# %bb.2:
	ori	$s0, $zero, 8
	beqz	$a2, .LBB442_7
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_phylumdeclarationE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc22impl_phylumdeclarationE)
	b	.LBB442_6
.LBB442_4:
	ori	$s0, $zero, 16
	beqz	$a2, .LBB442_7
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_phylumdeclarationsE)
	addi.d	$a3, $a0, %pc_lo12(_ZTIN2kc23impl_phylumdeclarationsE)
.LBB442_6:                              # %.sink.split.sink.split
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	b	.LBB442_8
.LBB442_7:
	move	$a0, $zero
.LBB442_8:                              # %.sink.split
	stx.d	$a0, $fp, $s0
.LBB442_9:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end442:
	.size	_ZN2kc23impl_phylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end442-_ZN2kc23impl_phylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB443_2
# %bb.1:
	ret
.LBB443_2:
	beqz	$a2, .LBB443_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc23impl_phylumdeclarationsE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc23impl_phylumdeclarationsE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 8
	ret
.LBB443_4:
	move	$a1, $zero
	st.d	$a1, $a0, 8
	ret
.Lfunc_end443:
	.size	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end443-_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc18impl_STRING_String13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc18impl_STRING_String13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc18impl_STRING_String13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc18impl_STRING_String13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc18impl_STRING_String13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB444_2
# %bb.1:
	ret
.LBB444_2:
	beqz	$a2, .LBB444_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB444_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end444:
	.size	_ZN2kc18impl_STRING_String13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end444-_ZN2kc18impl_STRING_String13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc12impl_INT_Int13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc12impl_INT_Int13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc12impl_INT_Int13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc12impl_INT_Int13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc12impl_INT_Int13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB445_2
# %bb.1:
	ret
.LBB445_2:
	beqz	$a2, .LBB445_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 24
	ret
.LBB445_4:
	move	$a1, $zero
	st.d	$a1, $a0, 24
	ret
.Lfunc_end445:
	.size	_ZN2kc12impl_INT_Int13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end445-_ZN2kc12impl_INT_Int13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc10impl_ID_Id13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc10impl_ID_Id13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc10impl_ID_Id13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc10impl_ID_Id13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc10impl_ID_Id13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB446_2
# %bb.1:
	ret
.LBB446_2:
	beqz	$a2, .LBB446_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a3, %pc_hi20(_ZTIN2kc11impl_uniqIDE)
	addi.d	$a3, $a3, %pc_lo12(_ZTIN2kc11impl_uniqIDE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 40
	ret
.LBB446_4:
	move	$a1, $zero
	st.d	$a1, $a0, 40
	ret
.Lfunc_end446:
	.size	_ZN2kc10impl_ID_Id13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end446-_ZN2kc10impl_ID_Id13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc15impl_uniqID_Str13set_subphylumEiPNS_20impl_abstract_phylumE # -- Begin function _ZN2kc15impl_uniqID_Str13set_subphylumEiPNS_20impl_abstract_phylumE
	.p2align	5
	.type	_ZN2kc15impl_uniqID_Str13set_subphylumEiPNS_20impl_abstract_phylumE,@function
_ZN2kc15impl_uniqID_Str13set_subphylumEiPNS_20impl_abstract_phylumE: # @_ZN2kc15impl_uniqID_Str13set_subphylumEiPNS_20impl_abstract_phylumE
# %bb.0:
	beqz	$a1, .LBB447_2
# %bb.1:
	ret
.LBB447_2:
	beqz	$a2, .LBB447_4
# %bb.3:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a3, $a1, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$fp, $a0
	move	$a0, $a2
	move	$a2, $a3
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	st.d	$a1, $a0, 40
	ret
.LBB447_4:
	move	$a1, $zero
	st.d	$a1, $a0, 40
	ret
.Lfunc_end447:
	.size	_ZN2kc15impl_uniqID_Str13set_subphylumEiPNS_20impl_abstract_phylumE, .Lfunc_end447-_ZN2kc15impl_uniqID_Str13set_subphylumEiPNS_20impl_abstract_phylumE
                                        # -- End function
	.globl	_ZN2kc15copy_attributesENS_10enum_phylaEPKNS_20impl_abstract_phylumEPS1_ # -- Begin function _ZN2kc15copy_attributesENS_10enum_phylaEPKNS_20impl_abstract_phylumEPS1_
	.p2align	5
	.type	_ZN2kc15copy_attributesENS_10enum_phylaEPKNS_20impl_abstract_phylumEPS1_,@function
_ZN2kc15copy_attributesENS_10enum_phylaEPKNS_20impl_abstract_phylumEPS1_: # @_ZN2kc15copy_attributesENS_10enum_phylaEPKNS_20impl_abstract_phylumEPS1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	addi.d	$a0, $a0, -6
	ori	$a3, $zero, 137
	move	$fp, $a1
	bltu	$a3, $a0, .LBB448_45
# %bb.1:
	move	$s0, $a2
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI448_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI448_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB448_2:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_uniqIDE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc11impl_uniqIDE)
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 8
	st.d	$a1, $a0, 8
	ld.w	$a1, $s3, 16
	vld	$vr0, $s3, 24
	st.w	$a1, $a0, 16
	vst	$vr0, $a0, 24
	b	.LBB448_45
.LBB448_3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_ac_operator_nameE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc21impl_ac_operator_nameE)
	b	.LBB448_38
.LBB448_4:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_bindingidmarkE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc18impl_bindingidmarkE)
	b	.LBB448_40
.LBB448_5:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_fndeclarationE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc18impl_fndeclarationE)
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 8
	ld.w	$a2, $s3, 16
	ld.d	$a3, $s3, 24
	ld.b	$a4, $s3, 32
	st.d	$a1, $a0, 8
	st.w	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.b	$a4, $a0, 32
	b	.LBB448_45
.LBB448_6:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_foreach_afterE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc18impl_foreach_afterE)
	b	.LBB448_38
.LBB448_7:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	b	.LBB448_38
.LBB448_8:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_withcaseE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc13impl_withcaseE)
	b	.LBB448_42
.LBB448_9:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_addedphylumdeclarationE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc27impl_addedphylumdeclarationE)
	b	.LBB448_40
.LBB448_10:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	b	.LBB448_38
.LBB448_11:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_withexpressionE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc19impl_withexpressionE)
	b	.LBB448_15
.LBB448_12:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_includefileE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc16impl_includefileE)
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s3, 8
	st.w	$a1, $a0, 8
	vld	$vr0, $s3, 16
	vst	$vr0, $a0, 16
	b	.LBB448_45
.LBB448_13:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_unparseitemE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc16impl_unparseitemE)
	b	.LBB448_44
.LBB448_14:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
.LBB448_15:
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 8
	ld.w	$a2, $s3, 16
	ld.d	$a3, $s3, 24
	st.d	$a1, $a0, 8
	st.w	$a2, $a0, 16
	st.d	$a3, $a0, 24
	b	.LBB448_45
.LBB448_16:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
	b	.LBB448_38
.LBB448_17:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
	b	.LBB448_38
.LBB448_18:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_filelineE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc13impl_filelineE)
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 8
	ld.w	$a2, $s3, 16
	st.d	$a1, $a0, 8
	st.w	$a2, $a0, 16
	b	.LBB448_45
.LBB448_19:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	vld	$vr0, $s3, 8
	vst	$vr0, $a0, 8
	b	.LBB448_45
.LBB448_20:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	vld	$vr0, $s3, 8
	vst	$vr0, $a0, 8
	ld.w	$a1, $s3, 24
	ld.d	$a2, $s3, 32
	st.w	$a1, $a0, 24
	st.d	$a2, $a0, 32
	b	.LBB448_45
.LBB448_21:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc8impl_INTE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc8impl_INTE)
	b	.LBB448_38
.LBB448_22:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_phylumdeclarationE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc22impl_phylumdeclarationE)
	b	.LBB448_32
.LBB448_23:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_includedeclarationE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc23impl_includedeclarationE)
	b	.LBB448_38
.LBB448_24:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_storageclassesE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc19impl_storageclassesE)
	b	.LBB448_42
.LBB448_25:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_STRINGE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc11impl_STRINGE)
	b	.LBB448_38
.LBB448_26:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_withcasesE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc14impl_withcasesE)
	b	.LBB448_42
.LBB448_27:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_patternchainitemE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc21impl_patternchainitemE)
	b	.LBB448_32
.LBB448_28:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_outmostpatternE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc19impl_outmostpatternE)
	b	.LBB448_32
.LBB448_29:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_alternativeE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc16impl_alternativeE)
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	vld	$vr0, $s3, 8
	vst	$vr0, $a0, 8
	vld	$vr0, $s3, 24
	vst	$vr0, $a0, 24
	b	.LBB448_45
.LBB448_30:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_argumentsE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc14impl_argumentsE)
	b	.LBB448_44
.LBB448_31:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc31impl_elem_patternrepresentationE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc31impl_elem_patternrepresentationE)
.LBB448_32:
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s3, 8
	vld	$vr0, $s3, 16
	st.w	$a1, $a0, 8
	vst	$vr0, $a0, 16
	b	.LBB448_45
.LBB448_33:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_idCexpressionE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc18impl_idCexpressionE)
	b	.LBB448_42
.LBB448_34:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_fnfileE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc11impl_fnfileE)
	b	.LBB448_42
.LBB448_35:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc29impl_countedphylumdeclarationE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc29impl_countedphylumdeclarationE)
	b	.LBB448_44
.LBB448_36:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_termE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc9impl_termE)
	b	.LBB448_38
.LBB448_37:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc15impl_Ctext_elemE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc15impl_Ctext_elemE)
.LBB448_38:
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s3, 8
	ld.d	$a2, $s3, 16
	st.w	$a1, $a0, 8
	st.d	$a2, $a0, 16
	b	.LBB448_45
.LBB448_39:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
.LBB448_40:
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.b	$s3, $a0, 8
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	st.b	$s3, $a0, 8
	b	.LBB448_45
.LBB448_41:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_unparsedeclarationE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc23impl_unparsedeclarationE)
.LBB448_42:
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.d	$s3, $a0, 8
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	st.d	$s3, $a0, 8
	b	.LBB448_45
.LBB448_43:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$s1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_charrunsE)
	addi.d	$s2, $a0, %pc_lo12(_ZTIN2kc13impl_charrunsE)
.LBB448_44:
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.w	$s3, $a0, 8
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	st.w	$s3, $a0, 8
.LBB448_45:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	add.d	$a0, $a1, $a0
	ld.w	$a0, $a0, 32
	bgtz	$a0, .LBB448_47
# %bb.46:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB448_47:
	pcaddu18i	$ra, %call36(_ZN2kc11attributeOfEPNS_20impl_abstract_phylumEi)
	jirl	$ra, $ra, 0
.Lfunc_end448:
	.size	_ZN2kc15copy_attributesENS_10enum_phylaEPKNS_20impl_abstract_phylumEPS1_, .Lfunc_end448-_ZN2kc15copy_attributesENS_10enum_phylaEPKNS_20impl_abstract_phylumEPS1_
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI448_0:
	.word	.LBB448_2-.LJTI448_0
	.word	.LBB448_20-.LJTI448_0
	.word	.LBB448_21-.LJTI448_0
	.word	.LBB448_25-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_22-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_24-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_29-.LJTI448_0
	.word	.LBB448_30-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_10-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_33-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_12-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_23-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_16-.LJTI448_0
	.word	.LBB448_7-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_27-.LJTI448_0
	.word	.LBB448_28-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_36-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_34-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_5-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_17-.LJTI448_0
	.word	.LBB448_37-.LJTI448_0
	.word	.LBB448_6-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_14-.LJTI448_0
	.word	.LBB448_11-.LJTI448_0
	.word	.LBB448_26-.LJTI448_0
	.word	.LBB448_8-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_41-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_39-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_13-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_18-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_31-.LJTI448_0
	.word	.LBB448_19-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_3-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_9-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_35-.LJTI448_0
	.word	.LBB448_43-.LJTI448_0
	.word	.LBB448_45-.LJTI448_0
	.word	.LBB448_4-.LJTI448_0
                                        # -- End function
	.section	.text.unlikely.,"ax",@progbits
	.globl	_ZN2kc11attributeOfEPNS_20impl_abstract_phylumEi # -- Begin function _ZN2kc11attributeOfEPNS_20impl_abstract_phylumEi
	.p2align	5
	.type	_ZN2kc11attributeOfEPNS_20impl_abstract_phylumEi,@function
_ZN2kc11attributeOfEPNS_20impl_abstract_phylumEi: # @_ZN2kc11attributeOfEPNS_20impl_abstract_phylumEi
# %bb.0:
	pcalau12i	$a0, %pc_hi20(.L.str.496)
	addi.d	$a0, $a0, %pc_lo12(.L.str.496)
	pcalau12i	$a1, %pc_hi20(.L.str.499)
	addi.d	$a2, $a1, %pc_lo12(.L.str.499)
	lu12i.w	$a1, 2
	ori	$a1, $a1, 2459
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
.Lfunc_end449:
	.size	_ZN2kc11attributeOfEPNS_20impl_abstract_phylumEi, .Lfunc_end449-_ZN2kc11attributeOfEPNS_20impl_abstract_phylumEi
                                        # -- End function
	.globl	_ZN2kc21kc_no_default_in_withEPKciS1_ # -- Begin function _ZN2kc21kc_no_default_in_withEPKciS1_
	.p2align	5
	.type	_ZN2kc21kc_no_default_in_withEPKciS1_,@function
_ZN2kc21kc_no_default_in_withEPKciS1_:  # @_ZN2kc21kc_no_default_in_withEPKciS1_
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a3, %got_pc_hi20(stdout)
	ld.d	$a3, $a3, %got_pc_lo12(stdout)
	ld.d	$a3, $a3, 0
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	move	$a0, $a3
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.484)
	addi.d	$a1, $a1, %pc_lo12(.L.str.484)
	move	$a2, $s1
	move	$a3, $fp
	move	$a4, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.Lfunc_end450:
	.size	_ZN2kc21kc_no_default_in_withEPKciS1_, .Lfunc_end450-_ZN2kc21kc_no_default_in_withEPKciS1_
                                        # -- End function
	.globl	_ZN2kc22kc_returnless_functionEPKciS1_ # -- Begin function _ZN2kc22kc_returnless_functionEPKciS1_
	.p2align	5
	.type	_ZN2kc22kc_returnless_functionEPKciS1_,@function
_ZN2kc22kc_returnless_functionEPKciS1_: # @_ZN2kc22kc_returnless_functionEPKciS1_
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a3, %got_pc_hi20(stdout)
	ld.d	$a3, $a3, %got_pc_lo12(stdout)
	ld.d	$a3, $a3, 0
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	move	$a0, $a3
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.485)
	addi.d	$a1, $a1, %pc_lo12(.L.str.485)
	move	$a2, $s1
	move	$a3, $fp
	move	$a4, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.Lfunc_end451:
	.size	_ZN2kc22kc_returnless_functionEPKciS1_, .Lfunc_end451-_ZN2kc22kc_returnless_functionEPKciS1_
                                        # -- End function
	.globl	_ZN2kc18kc_assertionFailedEPKci # -- Begin function _ZN2kc18kc_assertionFailedEPKci
	.p2align	5
	.type	_ZN2kc18kc_assertionFailedEPKci,@function
_ZN2kc18kc_assertionFailedEPKci:        # @_ZN2kc18kc_assertionFailedEPKci
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	pcalau12i	$a2, %got_pc_hi20(stdout)
	ld.d	$a2, $a2, %got_pc_lo12(stdout)
	ld.d	$a2, $a2, 0
	move	$fp, $a1
	move	$s0, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.486)
	addi.d	$a1, $a1, %pc_lo12(.L.str.486)
	move	$a2, $s0
	move	$a3, $fp
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.Lfunc_end452:
	.size	_ZN2kc18kc_assertionFailedEPKci, .Lfunc_end452-_ZN2kc18kc_assertionFailedEPKci
                                        # -- End function
	.globl	_ZN2kc24kc_assertionReasonFailedEPKciS1_ # -- Begin function _ZN2kc24kc_assertionReasonFailedEPKciS1_
	.p2align	5
	.type	_ZN2kc24kc_assertionReasonFailedEPKciS1_,@function
_ZN2kc24kc_assertionReasonFailedEPKciS1_: # @_ZN2kc24kc_assertionReasonFailedEPKciS1_
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a3, %got_pc_hi20(stdout)
	ld.d	$a3, $a3, %got_pc_lo12(stdout)
	ld.d	$a3, $a3, 0
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	move	$a0, $a3
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.487)
	addi.d	$a1, $a1, %pc_lo12(.L.str.487)
	move	$a2, $s1
	move	$a3, $s0
	move	$a4, $fp
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.Lfunc_end453:
	.size	_ZN2kc24kc_assertionReasonFailedEPKciS1_, .Lfunc_end453-_ZN2kc24kc_assertionReasonFailedEPKciS1_
                                        # -- End function
	.globl	_ZN2kc25kc_assertionNonNullFailedEPKciS1_ # -- Begin function _ZN2kc25kc_assertionNonNullFailedEPKciS1_
	.p2align	5
	.type	_ZN2kc25kc_assertionNonNullFailedEPKciS1_,@function
_ZN2kc25kc_assertionNonNullFailedEPKciS1_: # @_ZN2kc25kc_assertionNonNullFailedEPKciS1_
# %bb.0:
	addi.d	$sp, $sp, -32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	pcalau12i	$a3, %got_pc_hi20(stdout)
	ld.d	$a3, $a3, %got_pc_lo12(stdout)
	ld.d	$a3, $a3, 0
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	move	$a0, $a3
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.488)
	addi.d	$a1, $a1, %pc_lo12(.L.str.488)
	move	$a2, $s1
	move	$a3, $s0
	move	$a4, $fp
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.Lfunc_end454:
	.size	_ZN2kc25kc_assertionNonNullFailedEPKciS1_, .Lfunc_end454-_ZN2kc25kc_assertionNonNullFailedEPKciS1_
                                        # -- End function
	.globl	_ZN2kc34kc_assertionOperatorInPhylumFailedEiPKcS1_S1_S1_i # -- Begin function _ZN2kc34kc_assertionOperatorInPhylumFailedEiPKcS1_S1_S1_i
	.p2align	5
	.type	_ZN2kc34kc_assertionOperatorInPhylumFailedEiPKcS1_S1_S1_i,@function
_ZN2kc34kc_assertionOperatorInPhylumFailedEiPKcS1_S1_S1_i: # @_ZN2kc34kc_assertionOperatorInPhylumFailedEiPKcS1_S1_S1_i
# %bb.0:
	addi.d	$sp, $sp, -80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	pcalau12i	$a6, %got_pc_hi20(stdout)
	ld.d	$a6, $a6, %got_pc_lo12(stdout)
	ld.d	$a6, $a6, 0
	move	$s2, $a5
	move	$s3, $a4
	move	$s1, $a3
	move	$fp, $a2
	move	$s0, $a1
	move	$s4, $a0
	move	$a0, $a6
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$a0, $a0, 0
	addi.w	$a1, $s4, -339
	addi.w	$a2, $zero, -339
	bltu	$a2, $a1, .LBB455_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(.L.str.489)
	addi.d	$a1, $a1, %pc_lo12(.L.str.489)
	move	$a2, $s3
	move	$a3, $s2
	move	$a4, $s1
	move	$a5, $s0
	move	$a6, $fp
	move	$a7, $s4
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.LBB455_2:
	ori	$a1, $zero, 56
	mul.d	$a1, $s4, $a1
	pcalau12i	$a2, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc13operator_infoE)
	add.d	$a3, $a2, $a1
	ld.wu	$a3, $a3, 20
	ldx.d	$a7, $a2, $a1
	slli.d	$a1, $a3, 4
	alsl.d	$a1, $a3, $a1, 3
	pcalau12i	$a2, %pc_hi20(_ZN2kc11phylum_infoE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc11phylum_infoE)
	ldx.d	$a1, $a2, $a1
	st.d	$a1, $sp, 8
	pcalau12i	$a1, %pc_hi20(.L.str.490)
	addi.d	$a1, $a1, %pc_lo12(.L.str.490)
	st.d	$s4, $sp, 0
	move	$a2, $s3
	move	$a3, $s2
	move	$a4, $s1
	move	$a5, $s0
	move	$a6, $fp
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.Lfunc_end455:
	.size	_ZN2kc34kc_assertionOperatorInPhylumFailedEiPKcS1_S1_S1_i, .Lfunc_end455-_ZN2kc34kc_assertionOperatorInPhylumFailedEiPKcS1_S1_S1_i
                                        # -- End function
	.globl	_ZN2kc19kc_invalid_operatorEPKcNS_10enum_phylaEiS1_NS_14enum_operatorsE # -- Begin function _ZN2kc19kc_invalid_operatorEPKcNS_10enum_phylaEiS1_NS_14enum_operatorsE
	.p2align	5
	.type	_ZN2kc19kc_invalid_operatorEPKcNS_10enum_phylaEiS1_NS_14enum_operatorsE,@function
_ZN2kc19kc_invalid_operatorEPKcNS_10enum_phylaEiS1_NS_14enum_operatorsE: # @_ZN2kc19kc_invalid_operatorEPKcNS_10enum_phylaEiS1_NS_14enum_operatorsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	pcalau12i	$a5, %got_pc_hi20(stdout)
	ld.d	$a5, $a5, %got_pc_lo12(stdout)
	ld.d	$a5, $a5, 0
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$s3, $a0
	move	$a0, $a5
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s4, $a0, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc19phylumname_or_errorENS_10enum_phylaE)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc24kc_operatorname_or_errorENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	move	$a6, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.491)
	addi.d	$a1, $a0, %pc_lo12(.L.str.491)
	move	$a0, $s4
	move	$a2, $s3
	move	$a3, $s2
	move	$a4, $s0
	move	$a5, $s1
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(abort)
	jirl	$ra, $ra, 0
.Lfunc_end456:
	.size	_ZN2kc19kc_invalid_operatorEPKcNS_10enum_phylaEiS1_NS_14enum_operatorsE, .Lfunc_end456-_ZN2kc19kc_invalid_operatorEPKcNS_10enum_phylaEiS1_NS_14enum_operatorsE
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2kc19phylumname_or_errorENS_10enum_phylaE # -- Begin function _ZN2kc19phylumname_or_errorENS_10enum_phylaE
	.p2align	5
	.type	_ZN2kc19phylumname_or_errorENS_10enum_phylaE,@function
_ZN2kc19phylumname_or_errorENS_10enum_phylaE: # @_ZN2kc19phylumname_or_errorENS_10enum_phylaE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.w	$a0, $a0, -144
	addi.w	$a1, $zero, -144
	bltu	$a1, $a0, .LBB457_2
# %bb.1:
	ori	$a0, $zero, 69
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.511)
	addi.d	$a1, $a0, %pc_lo12(.L.str.511)
	move	$a0, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB457_3
.LBB457_2:
	slli.d	$a0, $fp, 4
	alsl.d	$a0, $fp, $a0, 3
	pcalau12i	$a1, %pc_hi20(_ZN2kc11phylum_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc11phylum_infoE)
	ldx.d	$a0, $a1, $a0
.LBB457_3:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end457:
	.size	_ZN2kc19phylumname_or_errorENS_10enum_phylaE, .Lfunc_end457-_ZN2kc19phylumname_or_errorENS_10enum_phylaE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24kc_operatorname_or_errorENS_14enum_operatorsE # -- Begin function _ZN2kc24kc_operatorname_or_errorENS_14enum_operatorsE
	.p2align	5
	.type	_ZN2kc24kc_operatorname_or_errorENS_14enum_operatorsE,@function
_ZN2kc24kc_operatorname_or_errorENS_14enum_operatorsE: # @_ZN2kc24kc_operatorname_or_errorENS_14enum_operatorsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.w	$a0, $a0, -339
	addi.w	$a1, $zero, -339
	bltu	$a1, $a0, .LBB458_2
# %bb.1:
	ori	$a0, $zero, 71
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.512)
	addi.d	$a1, $a0, %pc_lo12(.L.str.512)
	move	$a0, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	b	.LBB458_3
.LBB458_2:
	ori	$a0, $zero, 56
	mul.d	$a0, $fp, $a0
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	ldx.d	$a0, $a1, $a0
.LBB458_3:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end458:
	.size	_ZN2kc24kc_operatorname_or_errorENS_14enum_operatorsE, .Lfunc_end458-_ZN2kc24kc_operatorname_or_errorENS_14enum_operatorsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15impl_real__RealC2Ed     # -- Begin function _ZN2kc15impl_real__RealC2Ed
	.p2align	5
	.type	_ZN2kc15impl_real__RealC2Ed,@function
_ZN2kc15impl_real__RealC2Ed:            # @_ZN2kc15impl_real__RealC2Ed
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc15impl_real__RealE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc15impl_real__RealE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	fst.d	$fa0, $a0, 8
	ret
.Lfunc_end459:
	.size	_ZN2kc15impl_real__RealC2Ed, .Lfunc_end459-_ZN2kc15impl_real__RealC2Ed
                                        # -- End function
	.globl	_ZN2kc17impl_integer__IntC2Ei   # -- Begin function _ZN2kc17impl_integer__IntC2Ei
	.p2align	5
	.type	_ZN2kc17impl_integer__IntC2Ei,@function
_ZN2kc17impl_integer__IntC2Ei:          # @_ZN2kc17impl_integer__IntC2Ei
# %bb.0:
	pcalau12i	$a2, %got_pc_hi20(_ZTVN2kc17impl_integer__IntE)
	ld.d	$a2, $a2, %got_pc_lo12(_ZTVN2kc17impl_integer__IntE)
	addi.d	$a2, $a2, 16
	st.d	$a2, $a0, 0
	st.w	$a1, $a0, 8
	ret
.Lfunc_end460:
	.size	_ZN2kc17impl_integer__IntC2Ei, .Lfunc_end460-_ZN2kc17impl_integer__IntC2Ei
                                        # -- End function
	.globl	_ZN2kc21impl_voidptr__VoidPtrC2EPv # -- Begin function _ZN2kc21impl_voidptr__VoidPtrC2EPv
	.p2align	5
	.type	_ZN2kc21impl_voidptr__VoidPtrC2EPv,@function
_ZN2kc21impl_voidptr__VoidPtrC2EPv:     # @_ZN2kc21impl_voidptr__VoidPtrC2EPv
# %bb.0:
	pcalau12i	$a2, %got_pc_hi20(_ZTVN2kc21impl_voidptr__VoidPtrE)
	ld.d	$a2, $a2, %got_pc_lo12(_ZTVN2kc21impl_voidptr__VoidPtrE)
	addi.d	$a2, $a2, 16
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end461:
	.size	_ZN2kc21impl_voidptr__VoidPtrC2EPv, .Lfunc_end461-_ZN2kc21impl_voidptr__VoidPtrC2EPv
                                        # -- End function
	.globl	_ZN2kc15impl_uniqID_StrC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc15impl_uniqID_StrC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc15impl_uniqID_StrC2EPNS_20impl_casestring__StrE,@function
_ZN2kc15impl_uniqID_StrC2EPNS_20impl_casestring__StrE: # @_ZN2kc15impl_uniqID_StrC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc15impl_uniqID_StrE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc15impl_uniqID_StrE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 40
	ret
.Lfunc_end462:
	.size	_ZN2kc15impl_uniqID_StrC2EPNS_20impl_casestring__StrE, .Lfunc_end462-_ZN2kc15impl_uniqID_StrC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc10impl_ID_IdC2EPNS_11impl_uniqIDE # -- Begin function _ZN2kc10impl_ID_IdC2EPNS_11impl_uniqIDE
	.p2align	5
	.type	_ZN2kc10impl_ID_IdC2EPNS_11impl_uniqIDE,@function
_ZN2kc10impl_ID_IdC2EPNS_11impl_uniqIDE: # @_ZN2kc10impl_ID_IdC2EPNS_11impl_uniqIDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc10impl_ID_IdE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc10impl_ID_IdE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 40
	ret
.Lfunc_end463:
	.size	_ZN2kc10impl_ID_IdC2EPNS_11impl_uniqIDE, .Lfunc_end463-_ZN2kc10impl_ID_IdC2EPNS_11impl_uniqIDE
                                        # -- End function
	.globl	_ZN2kc12impl_INT_IntC2EPNS_17impl_integer__IntE # -- Begin function _ZN2kc12impl_INT_IntC2EPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc12impl_INT_IntC2EPNS_17impl_integer__IntE,@function
_ZN2kc12impl_INT_IntC2EPNS_17impl_integer__IntE: # @_ZN2kc12impl_INT_IntC2EPNS_17impl_integer__IntE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc12impl_INT_IntE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc12impl_INT_IntE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end464:
	.size	_ZN2kc12impl_INT_IntC2EPNS_17impl_integer__IntE, .Lfunc_end464-_ZN2kc12impl_INT_IntC2EPNS_17impl_integer__IntE
                                        # -- End function
	.globl	_ZN2kc18impl_STRING_StringC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc18impl_STRING_StringC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc18impl_STRING_StringC2EPNS_20impl_casestring__StrE,@function
_ZN2kc18impl_STRING_StringC2EPNS_20impl_casestring__StrE: # @_ZN2kc18impl_STRING_StringC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc18impl_STRING_StringE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc18impl_STRING_StringE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end465:
	.size	_ZN2kc18impl_STRING_StringC2EPNS_20impl_casestring__StrE, .Lfunc_end465-_ZN2kc18impl_STRING_StringC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC2EPNS_23impl_phylumdeclarationsE # -- Begin function _ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC2EPNS_23impl_phylumdeclarationsE
	.p2align	5
	.type	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC2EPNS_23impl_phylumdeclarationsE,@function
_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC2EPNS_23impl_phylumdeclarationsE: # @_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC2EPNS_23impl_phylumdeclarationsE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end466:
	.size	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC2EPNS_23impl_phylumdeclarationsE, .Lfunc_end466-_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC2EPNS_23impl_phylumdeclarationsE
                                        # -- End function
	.globl	_ZN2kc23impl_phylumdeclarationsC2EPNS_22impl_phylumdeclarationEPS0_ # -- Begin function _ZN2kc23impl_phylumdeclarationsC2EPNS_22impl_phylumdeclarationEPS0_
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarationsC2EPNS_22impl_phylumdeclarationEPS0_,@function
_ZN2kc23impl_phylumdeclarationsC2EPNS_22impl_phylumdeclarationEPS0_: # @_ZN2kc23impl_phylumdeclarationsC2EPNS_22impl_phylumdeclarationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc23impl_phylumdeclarationsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc23impl_phylumdeclarationsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end467:
	.size	_ZN2kc23impl_phylumdeclarationsC2EPNS_22impl_phylumdeclarationEPS0_, .Lfunc_end467-_ZN2kc23impl_phylumdeclarationsC2EPNS_22impl_phylumdeclarationEPS0_
                                        # -- End function
	.globl	_ZN2kc16impl_phylumnamesC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc16impl_phylumnamesC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc16impl_phylumnamesC2EPNS_7impl_IDEPS0_,@function
_ZN2kc16impl_phylumnamesC2EPNS_7impl_IDEPS0_: # @_ZN2kc16impl_phylumnamesC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end468:
	.size	_ZN2kc16impl_phylumnamesC2EPNS_7impl_IDEPS0_, .Lfunc_end468-_ZN2kc16impl_phylumnamesC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc40impl_phylumdeclaration_PhylumDeclarationC2EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE # -- Begin function _ZN2kc40impl_phylumdeclaration_PhylumDeclarationC2EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE
	.p2align	5
	.type	_ZN2kc40impl_phylumdeclaration_PhylumDeclarationC2EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE,@function
_ZN2kc40impl_phylumdeclaration_PhylumDeclarationC2EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE: # @_ZN2kc40impl_phylumdeclaration_PhylumDeclarationC2EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc40impl_phylumdeclaration_PhylumDeclarationE+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc40impl_phylumdeclaration_PhylumDeclarationE+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	st.d	$a3, $a0, 48
	st.d	$a4, $a0, 56
	ret
.Lfunc_end469:
	.size	_ZN2kc40impl_phylumdeclaration_PhylumDeclarationC2EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE, .Lfunc_end469-_ZN2kc40impl_phylumdeclaration_PhylumDeclarationC2EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE
                                        # -- End function
	.globl	_ZN2kc40impl_storageoption_PositiveStorageOptionC2EPNS_7impl_IDE # -- Begin function _ZN2kc40impl_storageoption_PositiveStorageOptionC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc40impl_storageoption_PositiveStorageOptionC2EPNS_7impl_IDE,@function
_ZN2kc40impl_storageoption_PositiveStorageOptionC2EPNS_7impl_IDE: # @_ZN2kc40impl_storageoption_PositiveStorageOptionC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc40impl_storageoption_PositiveStorageOptionE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc40impl_storageoption_PositiveStorageOptionE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end470:
	.size	_ZN2kc40impl_storageoption_PositiveStorageOptionC2EPNS_7impl_IDE, .Lfunc_end470-_ZN2kc40impl_storageoption_PositiveStorageOptionC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc40impl_storageoption_NegativeStorageOptionC2EPNS_7impl_IDE # -- Begin function _ZN2kc40impl_storageoption_NegativeStorageOptionC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc40impl_storageoption_NegativeStorageOptionC2EPNS_7impl_IDE,@function
_ZN2kc40impl_storageoption_NegativeStorageOptionC2EPNS_7impl_IDE: # @_ZN2kc40impl_storageoption_NegativeStorageOptionC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc40impl_storageoption_NegativeStorageOptionE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc40impl_storageoption_NegativeStorageOptionE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end471:
	.size	_ZN2kc40impl_storageoption_NegativeStorageOptionC2EPNS_7impl_IDE, .Lfunc_end471-_ZN2kc40impl_storageoption_NegativeStorageOptionC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc34impl_storageoption_NoStorageOptionC2Ev # -- Begin function _ZN2kc34impl_storageoption_NoStorageOptionC2Ev
	.p2align	5
	.type	_ZN2kc34impl_storageoption_NoStorageOptionC2Ev,@function
_ZN2kc34impl_storageoption_NoStorageOptionC2Ev: # @_ZN2kc34impl_storageoption_NoStorageOptionC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc34impl_storageoption_NoStorageOptionE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc34impl_storageoption_NoStorageOptionE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end472:
	.size	_ZN2kc34impl_storageoption_NoStorageOptionC2Ev, .Lfunc_end472-_ZN2kc34impl_storageoption_NoStorageOptionC2Ev
                                        # -- End function
	.globl	_ZN2kc19impl_storageclassesC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc19impl_storageclassesC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc19impl_storageclassesC2EPNS_7impl_IDEPS0_,@function
_ZN2kc19impl_storageclassesC2EPNS_7impl_IDEPS0_: # @_ZN2kc19impl_storageclassesC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_storageclassesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_storageclassesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	ret
.Lfunc_end473:
	.size	_ZN2kc19impl_storageclassesC2EPNS_7impl_IDEPS0_, .Lfunc_end473-_ZN2kc19impl_storageclassesC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc43impl_productionblock_PredefinedAlternativesC2EPNS_17impl_alternativesE # -- Begin function _ZN2kc43impl_productionblock_PredefinedAlternativesC2EPNS_17impl_alternativesE
	.p2align	5
	.type	_ZN2kc43impl_productionblock_PredefinedAlternativesC2EPNS_17impl_alternativesE,@function
_ZN2kc43impl_productionblock_PredefinedAlternativesC2EPNS_17impl_alternativesE: # @_ZN2kc43impl_productionblock_PredefinedAlternativesC2EPNS_17impl_alternativesE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc43impl_productionblock_PredefinedAlternativesE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc43impl_productionblock_PredefinedAlternativesE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end474:
	.size	_ZN2kc43impl_productionblock_PredefinedAlternativesC2EPNS_17impl_alternativesE, .Lfunc_end474-_ZN2kc43impl_productionblock_PredefinedAlternativesC2EPNS_17impl_alternativesE
                                        # -- End function
	.globl	_ZN2kc40impl_productionblock_NonlistAlternativesC2EPNS_17impl_alternativesE # -- Begin function _ZN2kc40impl_productionblock_NonlistAlternativesC2EPNS_17impl_alternativesE
	.p2align	5
	.type	_ZN2kc40impl_productionblock_NonlistAlternativesC2EPNS_17impl_alternativesE,@function
_ZN2kc40impl_productionblock_NonlistAlternativesC2EPNS_17impl_alternativesE: # @_ZN2kc40impl_productionblock_NonlistAlternativesC2EPNS_17impl_alternativesE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc40impl_productionblock_NonlistAlternativesE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc40impl_productionblock_NonlistAlternativesE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end475:
	.size	_ZN2kc40impl_productionblock_NonlistAlternativesC2EPNS_17impl_alternativesE, .Lfunc_end475-_ZN2kc40impl_productionblock_NonlistAlternativesC2EPNS_17impl_alternativesE
                                        # -- End function
	.globl	_ZN2kc37impl_productionblock_ListAlternativesC2EPNS_17impl_alternativesEPNS_7impl_IDE # -- Begin function _ZN2kc37impl_productionblock_ListAlternativesC2EPNS_17impl_alternativesEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc37impl_productionblock_ListAlternativesC2EPNS_17impl_alternativesEPNS_7impl_IDE,@function
_ZN2kc37impl_productionblock_ListAlternativesC2EPNS_17impl_alternativesEPNS_7impl_IDE: # @_ZN2kc37impl_productionblock_ListAlternativesC2EPNS_17impl_alternativesEPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc37impl_productionblock_ListAlternativesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc37impl_productionblock_ListAlternativesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end476:
	.size	_ZN2kc37impl_productionblock_ListAlternativesC2EPNS_17impl_alternativesEPNS_7impl_IDE, .Lfunc_end476-_ZN2kc37impl_productionblock_ListAlternativesC2EPNS_17impl_alternativesEPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc41impl_productionblock_EmptyproductionblockC2Ev # -- Begin function _ZN2kc41impl_productionblock_EmptyproductionblockC2Ev
	.p2align	5
	.type	_ZN2kc41impl_productionblock_EmptyproductionblockC2Ev,@function
_ZN2kc41impl_productionblock_EmptyproductionblockC2Ev: # @_ZN2kc41impl_productionblock_EmptyproductionblockC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_productionblock_EmptyproductionblockE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_productionblock_EmptyproductionblockE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end477:
	.size	_ZN2kc41impl_productionblock_EmptyproductionblockC2Ev, .Lfunc_end477-_ZN2kc41impl_productionblock_EmptyproductionblockC2Ev
                                        # -- End function
	.globl	_ZN2kc17impl_alternativesC2EPNS_16impl_alternativeEPS0_ # -- Begin function _ZN2kc17impl_alternativesC2EPNS_16impl_alternativeEPS0_
	.p2align	5
	.type	_ZN2kc17impl_alternativesC2EPNS_16impl_alternativeEPS0_,@function
_ZN2kc17impl_alternativesC2EPNS_16impl_alternativeEPS0_: # @_ZN2kc17impl_alternativesC2EPNS_16impl_alternativeEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc17impl_alternativesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc17impl_alternativesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end478:
	.size	_ZN2kc17impl_alternativesC2EPNS_16impl_alternativeEPS0_, .Lfunc_end478-_ZN2kc17impl_alternativesC2EPNS_16impl_alternativeEPS0_
                                        # -- End function
	.globl	_ZN2kc28impl_alternative_AlternativeC2EPNS_7impl_IDEPNS_14impl_argumentsE # -- Begin function _ZN2kc28impl_alternative_AlternativeC2EPNS_7impl_IDEPNS_14impl_argumentsE
	.p2align	5
	.type	_ZN2kc28impl_alternative_AlternativeC2EPNS_7impl_IDEPNS_14impl_argumentsE,@function
_ZN2kc28impl_alternative_AlternativeC2EPNS_7impl_IDEPNS_14impl_argumentsE: # @_ZN2kc28impl_alternative_AlternativeC2EPNS_7impl_IDEPNS_14impl_argumentsE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc28impl_alternative_AlternativeE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc28impl_alternative_AlternativeE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 40
	st.d	$a2, $a0, 48
	ret
.Lfunc_end479:
	.size	_ZN2kc28impl_alternative_AlternativeC2EPNS_7impl_IDEPNS_14impl_argumentsE, .Lfunc_end479-_ZN2kc28impl_alternative_AlternativeC2EPNS_7impl_IDEPNS_14impl_argumentsE
                                        # -- End function
	.globl	_ZN2kc14impl_argumentsC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc14impl_argumentsC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc14impl_argumentsC2EPNS_7impl_IDEPS0_,@function
_ZN2kc14impl_argumentsC2EPNS_7impl_IDEPS0_: # @_ZN2kc14impl_argumentsC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc14impl_argumentsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc14impl_argumentsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	ret
.Lfunc_end480:
	.size	_ZN2kc14impl_argumentsC2EPNS_7impl_IDEPS0_, .Lfunc_end480-_ZN2kc14impl_argumentsC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc22impl_argument_ArgumentC2EPNS_7impl_IDEPNS_17impl_integer__IntE # -- Begin function _ZN2kc22impl_argument_ArgumentC2EPNS_7impl_IDEPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc22impl_argument_ArgumentC2EPNS_7impl_IDEPNS_17impl_integer__IntE,@function
_ZN2kc22impl_argument_ArgumentC2EPNS_7impl_IDEPNS_17impl_integer__IntE: # @_ZN2kc22impl_argument_ArgumentC2EPNS_7impl_IDEPNS_17impl_integer__IntE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc22impl_argument_ArgumentE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc22impl_argument_ArgumentE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end481:
	.size	_ZN2kc22impl_argument_ArgumentC2EPNS_7impl_IDEPNS_17impl_integer__IntE, .Lfunc_end481-_ZN2kc22impl_argument_ArgumentC2EPNS_7impl_IDEPNS_17impl_integer__IntE
                                        # -- End function
	.globl	_ZN2kc29impl_Ccode_option_CcodeOptionC2EPNS_15impl_attributesEPNS_11impl_CtextsE # -- Begin function _ZN2kc29impl_Ccode_option_CcodeOptionC2EPNS_15impl_attributesEPNS_11impl_CtextsE
	.p2align	5
	.type	_ZN2kc29impl_Ccode_option_CcodeOptionC2EPNS_15impl_attributesEPNS_11impl_CtextsE,@function
_ZN2kc29impl_Ccode_option_CcodeOptionC2EPNS_15impl_attributesEPNS_11impl_CtextsE: # @_ZN2kc29impl_Ccode_option_CcodeOptionC2EPNS_15impl_attributesEPNS_11impl_CtextsE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc29impl_Ccode_option_CcodeOptionE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc29impl_Ccode_option_CcodeOptionE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end482:
	.size	_ZN2kc29impl_Ccode_option_CcodeOptionC2EPNS_15impl_attributesEPNS_11impl_CtextsE, .Lfunc_end482-_ZN2kc29impl_Ccode_option_CcodeOptionC2EPNS_15impl_attributesEPNS_11impl_CtextsE
                                        # -- End function
	.globl	_ZN2kc15impl_attributesC2EPNS_14impl_attributeEPS0_ # -- Begin function _ZN2kc15impl_attributesC2EPNS_14impl_attributeEPS0_
	.p2align	5
	.type	_ZN2kc15impl_attributesC2EPNS_14impl_attributeEPS0_,@function
_ZN2kc15impl_attributesC2EPNS_14impl_attributeEPS0_: # @_ZN2kc15impl_attributesC2EPNS_14impl_attributeEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc15impl_attributesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc15impl_attributesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end483:
	.size	_ZN2kc15impl_attributesC2EPNS_14impl_attributeEPS0_, .Lfunc_end483-_ZN2kc15impl_attributesC2EPNS_14impl_attributeEPS0_
                                        # -- End function
	.globl	_ZN2kc24impl_attribute_AttributeC2EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE # -- Begin function _ZN2kc24impl_attribute_AttributeC2EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE
	.p2align	5
	.type	_ZN2kc24impl_attribute_AttributeC2EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE,@function
_ZN2kc24impl_attribute_AttributeC2EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE: # @_ZN2kc24impl_attribute_AttributeC2EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc24impl_attribute_AttributeE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc24impl_attribute_AttributeE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end484:
	.size	_ZN2kc24impl_attribute_AttributeC2EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE, .Lfunc_end484-_ZN2kc24impl_attribute_AttributeC2EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE
                                        # -- End function
	.globl	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC2EPNS_16impl_CexpressionE # -- Begin function _ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC2EPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC2EPNS_16impl_CexpressionE,@function
_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC2EPNS_16impl_CexpressionE: # @_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC2EPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end485:
	.size	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC2EPNS_16impl_CexpressionE, .Lfunc_end485-_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC2EPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC2Ev # -- Begin function _ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC2Ev
	.p2align	5
	.type	_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC2Ev,@function
_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC2Ev: # @_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc63impl_attribute_initialisation_option_Noattribute_initialisationE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc63impl_attribute_initialisation_option_Noattribute_initialisationE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end486:
	.size	_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC2Ev, .Lfunc_end486-_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC2Ev
                                        # -- End function
	.globl	_ZN2kc16impl_CexpressionC2EPNS_21impl_Cexpression_elemEPS0_ # -- Begin function _ZN2kc16impl_CexpressionC2EPNS_21impl_Cexpression_elemEPS0_
	.p2align	5
	.type	_ZN2kc16impl_CexpressionC2EPNS_21impl_Cexpression_elemEPS0_,@function
_ZN2kc16impl_CexpressionC2EPNS_21impl_Cexpression_elemEPS0_: # @_ZN2kc16impl_CexpressionC2EPNS_21impl_Cexpression_elemEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc16impl_CexpressionE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc16impl_CexpressionE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	ret
.Lfunc_end487:
	.size	_ZN2kc16impl_CexpressionC2EPNS_21impl_Cexpression_elemEPS0_, .Lfunc_end487-_ZN2kc16impl_CexpressionC2EPNS_21impl_Cexpression_elemEPS0_
                                        # -- End function
	.globl	_ZN2kc38impl_Cexpression_elem_CExpressionArrayC2EPNS_16impl_CexpressionE # -- Begin function _ZN2kc38impl_Cexpression_elem_CExpressionArrayC2EPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc38impl_Cexpression_elem_CExpressionArrayC2EPNS_16impl_CexpressionE,@function
_ZN2kc38impl_Cexpression_elem_CExpressionArrayC2EPNS_16impl_CexpressionE: # @_ZN2kc38impl_Cexpression_elem_CExpressionArrayC2EPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end488:
	.size	_ZN2kc38impl_Cexpression_elem_CExpressionArrayC2EPNS_16impl_CexpressionE, .Lfunc_end488-_ZN2kc38impl_Cexpression_elem_CExpressionArrayC2EPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc37impl_Cexpression_elem_CExpressionPackC2EPNS_16impl_CexpressionE # -- Begin function _ZN2kc37impl_Cexpression_elem_CExpressionPackC2EPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPackC2EPNS_16impl_CexpressionE,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPackC2EPNS_16impl_CexpressionE: # @_ZN2kc37impl_Cexpression_elem_CExpressionPackC2EPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end489:
	.size	_ZN2kc37impl_Cexpression_elem_CExpressionPackC2EPNS_16impl_CexpressionE, .Lfunc_end489-_ZN2kc37impl_Cexpression_elem_CExpressionPackC2EPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionSQC2EPNS_18impl_CexpressionSQE # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionSQC2EPNS_18impl_CexpressionSQE
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionSQC2EPNS_18impl_CexpressionSQE,@function
_ZN2kc35impl_Cexpression_elem_CExpressionSQC2EPNS_18impl_CexpressionSQE: # @_ZN2kc35impl_Cexpression_elem_CExpressionSQC2EPNS_18impl_CexpressionSQE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end490:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionSQC2EPNS_18impl_CexpressionSQE, .Lfunc_end490-_ZN2kc35impl_Cexpression_elem_CExpressionSQC2EPNS_18impl_CexpressionSQE
                                        # -- End function
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionDQC2EPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionDQC2EPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionDQC2EPNS_18impl_CexpressionDQE,@function
_ZN2kc35impl_Cexpression_elem_CExpressionDQC2EPNS_18impl_CexpressionDQE: # @_ZN2kc35impl_Cexpression_elem_CExpressionDQC2EPNS_18impl_CexpressionDQE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end491:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionDQC2EPNS_18impl_CexpressionDQE, .Lfunc_end491-_ZN2kc35impl_Cexpression_elem_CExpressionDQC2EPNS_18impl_CexpressionDQE
                                        # -- End function
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionNlC2Ev # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionNlC2Ev
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionNlC2Ev,@function
_ZN2kc35impl_Cexpression_elem_CExpressionNlC2Ev: # @_ZN2kc35impl_Cexpression_elem_CExpressionNlC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc35impl_Cexpression_elem_CExpressionNlE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc35impl_Cexpression_elem_CExpressionNlE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end492:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionNlC2Ev, .Lfunc_end492-_ZN2kc35impl_Cexpression_elem_CExpressionNlC2Ev
                                        # -- End function
	.globl	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC2EPNS_8impl_INTE # -- Begin function _ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC2EPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC2EPNS_8impl_INTE,@function
_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC2EPNS_8impl_INTE: # @_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC2EPNS_8impl_INTE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end493:
	.size	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC2EPNS_8impl_INTE, .Lfunc_end493-_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC2EPNS_8impl_INTE
                                        # -- End function
	.globl	_ZN2kc37impl_Cexpression_elem_CExpressionPartC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc37impl_Cexpression_elem_CExpressionPartC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPartC2EPNS_20impl_casestring__StrE,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPartC2EPNS_20impl_casestring__StrE: # @_ZN2kc37impl_Cexpression_elem_CExpressionPartC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end494:
	.size	_ZN2kc37impl_Cexpression_elem_CExpressionPartC2EPNS_20impl_casestring__StrE, .Lfunc_end494-_ZN2kc37impl_Cexpression_elem_CExpressionPartC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionDQC2EPNS_23impl_CexpressionDQ_elemEPS0_ # -- Begin function _ZN2kc18impl_CexpressionDQC2EPNS_23impl_CexpressionDQ_elemEPS0_
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQC2EPNS_23impl_CexpressionDQ_elemEPS0_,@function
_ZN2kc18impl_CexpressionDQC2EPNS_23impl_CexpressionDQ_elemEPS0_: # @_ZN2kc18impl_CexpressionDQC2EPNS_23impl_CexpressionDQ_elemEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc18impl_CexpressionDQE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc18impl_CexpressionDQE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end495:
	.size	_ZN2kc18impl_CexpressionDQC2EPNS_23impl_CexpressionDQ_elemEPS0_, .Lfunc_end495-_ZN2kc18impl_CexpressionDQC2EPNS_23impl_CexpressionDQ_elemEPS0_
                                        # -- End function
	.globl	_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC2Ev # -- Begin function _ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC2Ev
	.p2align	5
	.type	_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC2Ev,@function
_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC2Ev: # @_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc39impl_CexpressionDQ_elem_CExpressionDQNlE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc39impl_CexpressionDQ_elem_CExpressionDQNlE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end496:
	.size	_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC2Ev, .Lfunc_end496-_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC2Ev
                                        # -- End function
	.globl	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC2EPNS_20impl_casestring__StrE,@function
_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC2EPNS_20impl_casestring__StrE: # @_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end497:
	.size	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC2EPNS_20impl_casestring__StrE, .Lfunc_end497-_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionSQC2EPNS_23impl_CexpressionSQ_elemEPS0_ # -- Begin function _ZN2kc18impl_CexpressionSQC2EPNS_23impl_CexpressionSQ_elemEPS0_
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQC2EPNS_23impl_CexpressionSQ_elemEPS0_,@function
_ZN2kc18impl_CexpressionSQC2EPNS_23impl_CexpressionSQ_elemEPS0_: # @_ZN2kc18impl_CexpressionSQC2EPNS_23impl_CexpressionSQ_elemEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc18impl_CexpressionSQE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc18impl_CexpressionSQE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end498:
	.size	_ZN2kc18impl_CexpressionSQC2EPNS_23impl_CexpressionSQ_elemEPS0_, .Lfunc_end498-_ZN2kc18impl_CexpressionSQC2EPNS_23impl_CexpressionSQ_elemEPS0_
                                        # -- End function
	.globl	_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC2Ev # -- Begin function _ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC2Ev
	.p2align	5
	.type	_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC2Ev,@function
_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC2Ev: # @_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc39impl_CexpressionSQ_elem_CExpressionSQNlE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc39impl_CexpressionSQ_elem_CExpressionSQNlE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end499:
	.size	_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC2Ev, .Lfunc_end499-_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC2Ev
                                        # -- End function
	.globl	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC2EPNS_20impl_casestring__StrE,@function
_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC2EPNS_20impl_casestring__StrE: # @_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end500:
	.size	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC2EPNS_20impl_casestring__StrE, .Lfunc_end500-_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc19impl_idCexpressionsC2EPNS_18impl_idCexpressionEPS0_ # -- Begin function _ZN2kc19impl_idCexpressionsC2EPNS_18impl_idCexpressionEPS0_
	.p2align	5
	.type	_ZN2kc19impl_idCexpressionsC2EPNS_18impl_idCexpressionEPS0_,@function
_ZN2kc19impl_idCexpressionsC2EPNS_18impl_idCexpressionEPS0_: # @_ZN2kc19impl_idCexpressionsC2EPNS_18impl_idCexpressionEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_idCexpressionsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_idCexpressionsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end501:
	.size	_ZN2kc19impl_idCexpressionsC2EPNS_18impl_idCexpressionEPS0_, .Lfunc_end501-_ZN2kc19impl_idCexpressionsC2EPNS_18impl_idCexpressionEPS0_
                                        # -- End function
	.globl	_ZN2kc32impl_idCexpression_IdCexpressionC2EPNS_7impl_IDEPNS_16impl_CexpressionE # -- Begin function _ZN2kc32impl_idCexpression_IdCexpressionC2EPNS_7impl_IDEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc32impl_idCexpression_IdCexpressionC2EPNS_7impl_IDEPNS_16impl_CexpressionE,@function
_ZN2kc32impl_idCexpression_IdCexpressionC2EPNS_7impl_IDEPNS_16impl_CexpressionE: # @_ZN2kc32impl_idCexpression_IdCexpressionC2EPNS_7impl_IDEPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc32impl_idCexpression_IdCexpressionE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc32impl_idCexpression_IdCexpressionE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	ret
.Lfunc_end502:
	.size	_ZN2kc32impl_idCexpression_IdCexpressionC2EPNS_7impl_IDEPNS_16impl_CexpressionE, .Lfunc_end502-_ZN2kc32impl_idCexpression_IdCexpressionC2EPNS_7impl_IDEPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc11impl_CtextsC2EPNS_10impl_CtextEPS0_ # -- Begin function _ZN2kc11impl_CtextsC2EPNS_10impl_CtextEPS0_
	.p2align	5
	.type	_ZN2kc11impl_CtextsC2EPNS_10impl_CtextEPS0_,@function
_ZN2kc11impl_CtextsC2EPNS_10impl_CtextEPS0_: # @_ZN2kc11impl_CtextsC2EPNS_10impl_CtextEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc11impl_CtextsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc11impl_CtextsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end503:
	.size	_ZN2kc11impl_CtextsC2EPNS_10impl_CtextEPS0_, .Lfunc_end503-_ZN2kc11impl_CtextsC2EPNS_10impl_CtextEPS0_
                                        # -- End function
	.globl	_ZN2kc17impl_includefilesC2EPNS_16impl_includefileEPS0_ # -- Begin function _ZN2kc17impl_includefilesC2EPNS_16impl_includefileEPS0_
	.p2align	5
	.type	_ZN2kc17impl_includefilesC2EPNS_16impl_includefileEPS0_,@function
_ZN2kc17impl_includefilesC2EPNS_16impl_includefileEPS0_: # @_ZN2kc17impl_includefilesC2EPNS_16impl_includefileEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc17impl_includefilesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc17impl_includefilesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end504:
	.size	_ZN2kc17impl_includefilesC2EPNS_16impl_includefileEPS0_, .Lfunc_end504-_ZN2kc17impl_includefilesC2EPNS_16impl_includefileEPS0_
                                        # -- End function
	.globl	_ZN2kc28impl_includefile_IncludeFileC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc28impl_includefile_IncludeFileC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc28impl_includefile_IncludeFileC2EPNS_20impl_casestring__StrE,@function
_ZN2kc28impl_includefile_IncludeFileC2EPNS_20impl_casestring__StrE: # @_ZN2kc28impl_includefile_IncludeFileC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc28impl_includefile_IncludeFileE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc28impl_includefile_IncludeFileE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end505:
	.size	_ZN2kc28impl_includefile_IncludeFileC2EPNS_20impl_casestring__StrE, .Lfunc_end505-_ZN2kc28impl_includefile_IncludeFileC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc24impl_includedeclarationsC2EPNS_23impl_includedeclarationEPS0_ # -- Begin function _ZN2kc24impl_includedeclarationsC2EPNS_23impl_includedeclarationEPS0_
	.p2align	5
	.type	_ZN2kc24impl_includedeclarationsC2EPNS_23impl_includedeclarationEPS0_,@function
_ZN2kc24impl_includedeclarationsC2EPNS_23impl_includedeclarationEPS0_: # @_ZN2kc24impl_includedeclarationsC2EPNS_23impl_includedeclarationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc24impl_includedeclarationsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc24impl_includedeclarationsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end506:
	.size	_ZN2kc24impl_includedeclarationsC2EPNS_23impl_includedeclarationEPS0_, .Lfunc_end506-_ZN2kc24impl_includedeclarationsC2EPNS_23impl_includedeclarationEPS0_
                                        # -- End function
	.globl	_ZN2kc42impl_includedeclaration_IncludeDeclarationC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc42impl_includedeclaration_IncludeDeclarationC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc42impl_includedeclaration_IncludeDeclarationC2EPNS_20impl_casestring__StrE,@function
_ZN2kc42impl_includedeclaration_IncludeDeclarationC2EPNS_20impl_casestring__StrE: # @_ZN2kc42impl_includedeclaration_IncludeDeclarationC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc42impl_includedeclaration_IncludeDeclarationE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc42impl_includedeclaration_IncludeDeclarationE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end507:
	.size	_ZN2kc42impl_includedeclaration_IncludeDeclarationC2EPNS_20impl_casestring__StrE, .Lfunc_end507-_ZN2kc42impl_includedeclaration_IncludeDeclarationC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc19impl_rwdeclarationsC2EPNS_18impl_rwdeclarationEPS0_ # -- Begin function _ZN2kc19impl_rwdeclarationsC2EPNS_18impl_rwdeclarationEPS0_
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarationsC2EPNS_18impl_rwdeclarationEPS0_,@function
_ZN2kc19impl_rwdeclarationsC2EPNS_18impl_rwdeclarationEPS0_: # @_ZN2kc19impl_rwdeclarationsC2EPNS_18impl_rwdeclarationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_rwdeclarationsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_rwdeclarationsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end508:
	.size	_ZN2kc19impl_rwdeclarationsC2EPNS_18impl_rwdeclarationEPS0_, .Lfunc_end508-_ZN2kc19impl_rwdeclarationsC2EPNS_18impl_rwdeclarationEPS0_
                                        # -- End function
	.globl	_ZN2kc32impl_rwdeclaration_RwDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE # -- Begin function _ZN2kc32impl_rwdeclaration_RwDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE
	.p2align	5
	.type	_ZN2kc32impl_rwdeclaration_RwDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE,@function
_ZN2kc32impl_rwdeclaration_RwDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE: # @_ZN2kc32impl_rwdeclaration_RwDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc32impl_rwdeclaration_RwDeclarationE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc32impl_rwdeclaration_RwDeclarationE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end509:
	.size	_ZN2kc32impl_rwdeclaration_RwDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE, .Lfunc_end509-_ZN2kc32impl_rwdeclaration_RwDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE
                                        # -- End function
	.globl	_ZN2kc19impl_rewriteclausesC2EPNS_18impl_rewriteclauseEPS0_ # -- Begin function _ZN2kc19impl_rewriteclausesC2EPNS_18impl_rewriteclauseEPS0_
	.p2align	5
	.type	_ZN2kc19impl_rewriteclausesC2EPNS_18impl_rewriteclauseEPS0_,@function
_ZN2kc19impl_rewriteclausesC2EPNS_18impl_rewriteclauseEPS0_: # @_ZN2kc19impl_rewriteclausesC2EPNS_18impl_rewriteclauseEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_rewriteclausesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_rewriteclausesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end510:
	.size	_ZN2kc19impl_rewriteclausesC2EPNS_18impl_rewriteclauseEPS0_, .Lfunc_end510-_ZN2kc19impl_rewriteclausesC2EPNS_18impl_rewriteclauseEPS0_
                                        # -- End function
	.globl	_ZN2kc32impl_rewriteclause_RewriteClauseC2EPNS_14impl_viewnamesEPNS_9impl_termE # -- Begin function _ZN2kc32impl_rewriteclause_RewriteClauseC2EPNS_14impl_viewnamesEPNS_9impl_termE
	.p2align	5
	.type	_ZN2kc32impl_rewriteclause_RewriteClauseC2EPNS_14impl_viewnamesEPNS_9impl_termE,@function
_ZN2kc32impl_rewriteclause_RewriteClauseC2EPNS_14impl_viewnamesEPNS_9impl_termE: # @_ZN2kc32impl_rewriteclause_RewriteClauseC2EPNS_14impl_viewnamesEPNS_9impl_termE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc32impl_rewriteclause_RewriteClauseE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc32impl_rewriteclause_RewriteClauseE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end511:
	.size	_ZN2kc32impl_rewriteclause_RewriteClauseC2EPNS_14impl_viewnamesEPNS_9impl_termE, .Lfunc_end511-_ZN2kc32impl_rewriteclause_RewriteClauseC2EPNS_14impl_viewnamesEPNS_9impl_termE
                                        # -- End function
	.globl	_ZN2kc18impl_patternchainsC2EPNS_17impl_patternchainEPS0_ # -- Begin function _ZN2kc18impl_patternchainsC2EPNS_17impl_patternchainEPS0_
	.p2align	5
	.type	_ZN2kc18impl_patternchainsC2EPNS_17impl_patternchainEPS0_,@function
_ZN2kc18impl_patternchainsC2EPNS_17impl_patternchainEPS0_: # @_ZN2kc18impl_patternchainsC2EPNS_17impl_patternchainEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc18impl_patternchainsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc18impl_patternchainsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	ret
.Lfunc_end512:
	.size	_ZN2kc18impl_patternchainsC2EPNS_17impl_patternchainEPS0_, .Lfunc_end512-_ZN2kc18impl_patternchainsC2EPNS_17impl_patternchainEPS0_
                                        # -- End function
	.globl	_ZN2kc17impl_patternchainC2EPNS_21impl_patternchainitemEPS0_ # -- Begin function _ZN2kc17impl_patternchainC2EPNS_21impl_patternchainitemEPS0_
	.p2align	5
	.type	_ZN2kc17impl_patternchainC2EPNS_21impl_patternchainitemEPS0_,@function
_ZN2kc17impl_patternchainC2EPNS_21impl_patternchainitemEPS0_: # @_ZN2kc17impl_patternchainC2EPNS_21impl_patternchainitemEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc17impl_patternchainE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc17impl_patternchainE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	ret
.Lfunc_end513:
	.size	_ZN2kc17impl_patternchainC2EPNS_21impl_patternchainitemEPS0_, .Lfunc_end513-_ZN2kc17impl_patternchainC2EPNS_21impl_patternchainitemEPS0_
                                        # -- End function
	.globl	_ZN2kc20impl_outmostpatternsC2EPNS_19impl_outmostpatternEPS0_ # -- Begin function _ZN2kc20impl_outmostpatternsC2EPNS_19impl_outmostpatternEPS0_
	.p2align	5
	.type	_ZN2kc20impl_outmostpatternsC2EPNS_19impl_outmostpatternEPS0_,@function
_ZN2kc20impl_outmostpatternsC2EPNS_19impl_outmostpatternEPS0_: # @_ZN2kc20impl_outmostpatternsC2EPNS_19impl_outmostpatternEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc20impl_outmostpatternsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc20impl_outmostpatternsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end514:
	.size	_ZN2kc20impl_outmostpatternsC2EPNS_19impl_outmostpatternEPS0_, .Lfunc_end514-_ZN2kc20impl_outmostpatternsC2EPNS_19impl_outmostpatternEPS0_
                                        # -- End function
	.globl	_ZN2kc46impl_patternchainitem_PatternchainitemDollaridC2EPNS_7impl_IDE # -- Begin function _ZN2kc46impl_patternchainitem_PatternchainitemDollaridC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc46impl_patternchainitem_PatternchainitemDollaridC2EPNS_7impl_IDE,@function
_ZN2kc46impl_patternchainitem_PatternchainitemDollaridC2EPNS_7impl_IDE: # @_ZN2kc46impl_patternchainitem_PatternchainitemDollaridC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc46impl_patternchainitem_PatternchainitemDollaridE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc46impl_patternchainitem_PatternchainitemDollaridE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end515:
	.size	_ZN2kc46impl_patternchainitem_PatternchainitemDollaridC2EPNS_7impl_IDE, .Lfunc_end515-_ZN2kc46impl_patternchainitem_PatternchainitemDollaridC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc43impl_patternchainitem_PatternchainitemGroupC2EPNS_18impl_patternchainsE # -- Begin function _ZN2kc43impl_patternchainitem_PatternchainitemGroupC2EPNS_18impl_patternchainsE
	.p2align	5
	.type	_ZN2kc43impl_patternchainitem_PatternchainitemGroupC2EPNS_18impl_patternchainsE,@function
_ZN2kc43impl_patternchainitem_PatternchainitemGroupC2EPNS_18impl_patternchainsE: # @_ZN2kc43impl_patternchainitem_PatternchainitemGroupC2EPNS_18impl_patternchainsE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc43impl_patternchainitem_PatternchainitemGroupE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc43impl_patternchainitem_PatternchainitemGroupE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end516:
	.size	_ZN2kc43impl_patternchainitem_PatternchainitemGroupC2EPNS_18impl_patternchainsE, .Lfunc_end516-_ZN2kc43impl_patternchainitem_PatternchainitemGroupC2EPNS_18impl_patternchainsE
                                        # -- End function
	.globl	_ZN2kc45impl_patternchainitem_PatternchainitemOutmostC2EPNS_19impl_outmostpatternE # -- Begin function _ZN2kc45impl_patternchainitem_PatternchainitemOutmostC2EPNS_19impl_outmostpatternE
	.p2align	5
	.type	_ZN2kc45impl_patternchainitem_PatternchainitemOutmostC2EPNS_19impl_outmostpatternE,@function
_ZN2kc45impl_patternchainitem_PatternchainitemOutmostC2EPNS_19impl_outmostpatternE: # @_ZN2kc45impl_patternchainitem_PatternchainitemOutmostC2EPNS_19impl_outmostpatternE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc45impl_patternchainitem_PatternchainitemOutmostE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc45impl_patternchainitem_PatternchainitemOutmostE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end517:
	.size	_ZN2kc45impl_patternchainitem_PatternchainitemOutmostC2EPNS_19impl_outmostpatternE, .Lfunc_end517-_ZN2kc45impl_patternchainitem_PatternchainitemOutmostC2EPNS_19impl_outmostpatternE
                                        # -- End function
	.globl	_ZN2kc29impl_outmostpattern_OPDefaultC2EPNS_16impl_CexpressionE # -- Begin function _ZN2kc29impl_outmostpattern_OPDefaultC2EPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc29impl_outmostpattern_OPDefaultC2EPNS_16impl_CexpressionE,@function
_ZN2kc29impl_outmostpattern_OPDefaultC2EPNS_16impl_CexpressionE: # @_ZN2kc29impl_outmostpattern_OPDefaultC2EPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc29impl_outmostpattern_OPDefaultE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc29impl_outmostpattern_OPDefaultE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end518:
	.size	_ZN2kc29impl_outmostpattern_OPDefaultC2EPNS_16impl_CexpressionE, .Lfunc_end518-_ZN2kc29impl_outmostpattern_OPDefaultC2EPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc30impl_outmostpattern_OPWildcardC2EPNS_16impl_CexpressionE # -- Begin function _ZN2kc30impl_outmostpattern_OPWildcardC2EPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc30impl_outmostpattern_OPWildcardC2EPNS_16impl_CexpressionE,@function
_ZN2kc30impl_outmostpattern_OPWildcardC2EPNS_16impl_CexpressionE: # @_ZN2kc30impl_outmostpattern_OPWildcardC2EPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc30impl_outmostpattern_OPWildcardE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc30impl_outmostpattern_OPWildcardE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end519:
	.size	_ZN2kc30impl_outmostpattern_OPWildcardC2EPNS_16impl_CexpressionE, .Lfunc_end519-_ZN2kc30impl_outmostpattern_OPWildcardC2EPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc37impl_outmostpattern_OPNonLeafVariableC2EPNS_7impl_IDEPNS_19impl_outmostpatternE # -- Begin function _ZN2kc37impl_outmostpattern_OPNonLeafVariableC2EPNS_7impl_IDEPNS_19impl_outmostpatternE
	.p2align	5
	.type	_ZN2kc37impl_outmostpattern_OPNonLeafVariableC2EPNS_7impl_IDEPNS_19impl_outmostpatternE,@function
_ZN2kc37impl_outmostpattern_OPNonLeafVariableC2EPNS_7impl_IDEPNS_19impl_outmostpatternE: # @_ZN2kc37impl_outmostpattern_OPNonLeafVariableC2EPNS_7impl_IDEPNS_19impl_outmostpatternE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc37impl_outmostpattern_OPNonLeafVariableE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc37impl_outmostpattern_OPNonLeafVariableE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	ret
.Lfunc_end520:
	.size	_ZN2kc37impl_outmostpattern_OPNonLeafVariableC2EPNS_7impl_IDEPNS_19impl_outmostpatternE, .Lfunc_end520-_ZN2kc37impl_outmostpattern_OPNonLeafVariableC2EPNS_7impl_IDEPNS_19impl_outmostpatternE
                                        # -- End function
	.globl	_ZN2kc30impl_outmostpattern_OPOperatorC2EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE # -- Begin function _ZN2kc30impl_outmostpattern_OPOperatorC2EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc30impl_outmostpattern_OPOperatorC2EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE,@function
_ZN2kc30impl_outmostpattern_OPOperatorC2EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE: # @_ZN2kc30impl_outmostpattern_OPOperatorC2EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc30impl_outmostpattern_OPOperatorE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc30impl_outmostpattern_OPOperatorE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	st.d	$a3, $a0, 48
	ret
.Lfunc_end521:
	.size	_ZN2kc30impl_outmostpattern_OPOperatorC2EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE, .Lfunc_end521-_ZN2kc30impl_outmostpattern_OPOperatorC2EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc38impl_outmostpattern_OPOperatorWildcardC2EPNS_7impl_IDEPNS_16impl_CexpressionE # -- Begin function _ZN2kc38impl_outmostpattern_OPOperatorWildcardC2EPNS_7impl_IDEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc38impl_outmostpattern_OPOperatorWildcardC2EPNS_7impl_IDEPNS_16impl_CexpressionE,@function
_ZN2kc38impl_outmostpattern_OPOperatorWildcardC2EPNS_7impl_IDEPNS_16impl_CexpressionE: # @_ZN2kc38impl_outmostpattern_OPOperatorWildcardC2EPNS_7impl_IDEPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc38impl_outmostpattern_OPOperatorWildcardE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc38impl_outmostpattern_OPOperatorWildcardE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	ret
.Lfunc_end522:
	.size	_ZN2kc38impl_outmostpattern_OPOperatorWildcardC2EPNS_7impl_IDEPNS_16impl_CexpressionE, .Lfunc_end522-_ZN2kc38impl_outmostpattern_OPOperatorWildcardC2EPNS_7impl_IDEPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc24impl_pattern_PIntLiteralC2EPNS_8impl_INTE # -- Begin function _ZN2kc24impl_pattern_PIntLiteralC2EPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc24impl_pattern_PIntLiteralC2EPNS_8impl_INTE,@function
_ZN2kc24impl_pattern_PIntLiteralC2EPNS_8impl_INTE: # @_ZN2kc24impl_pattern_PIntLiteralC2EPNS_8impl_INTE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc24impl_pattern_PIntLiteralE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc24impl_pattern_PIntLiteralE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end523:
	.size	_ZN2kc24impl_pattern_PIntLiteralC2EPNS_8impl_INTE, .Lfunc_end523-_ZN2kc24impl_pattern_PIntLiteralC2EPNS_8impl_INTE
                                        # -- End function
	.globl	_ZN2kc27impl_pattern_PStringLiteralC2EPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc27impl_pattern_PStringLiteralC2EPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc27impl_pattern_PStringLiteralC2EPNS_18impl_CexpressionDQE,@function
_ZN2kc27impl_pattern_PStringLiteralC2EPNS_18impl_CexpressionDQE: # @_ZN2kc27impl_pattern_PStringLiteralC2EPNS_18impl_CexpressionDQE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc27impl_pattern_PStringLiteralE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc27impl_pattern_PStringLiteralE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end524:
	.size	_ZN2kc27impl_pattern_PStringLiteralC2EPNS_18impl_CexpressionDQE, .Lfunc_end524-_ZN2kc27impl_pattern_PStringLiteralC2EPNS_18impl_CexpressionDQE
                                        # -- End function
	.globl	_ZN2kc22impl_pattern_PWildcardC2Ev # -- Begin function _ZN2kc22impl_pattern_PWildcardC2Ev
	.p2align	5
	.type	_ZN2kc22impl_pattern_PWildcardC2Ev,@function
_ZN2kc22impl_pattern_PWildcardC2Ev:     # @_ZN2kc22impl_pattern_PWildcardC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc22impl_pattern_PWildcardE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc22impl_pattern_PWildcardE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end525:
	.size	_ZN2kc22impl_pattern_PWildcardC2Ev, .Lfunc_end525-_ZN2kc22impl_pattern_PWildcardC2Ev
                                        # -- End function
	.globl	_ZN2kc29impl_pattern_PNonLeafVariableC2EPNS_7impl_IDEPNS_12impl_patternE # -- Begin function _ZN2kc29impl_pattern_PNonLeafVariableC2EPNS_7impl_IDEPNS_12impl_patternE
	.p2align	5
	.type	_ZN2kc29impl_pattern_PNonLeafVariableC2EPNS_7impl_IDEPNS_12impl_patternE,@function
_ZN2kc29impl_pattern_PNonLeafVariableC2EPNS_7impl_IDEPNS_12impl_patternE: # @_ZN2kc29impl_pattern_PNonLeafVariableC2EPNS_7impl_IDEPNS_12impl_patternE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc29impl_pattern_PNonLeafVariableE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc29impl_pattern_PNonLeafVariableE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end526:
	.size	_ZN2kc29impl_pattern_PNonLeafVariableC2EPNS_7impl_IDEPNS_12impl_patternE, .Lfunc_end526-_ZN2kc29impl_pattern_PNonLeafVariableC2EPNS_7impl_IDEPNS_12impl_patternE
                                        # -- End function
	.globl	_ZN2kc22impl_pattern_POperatorC2EPNS_7impl_IDEPNS_13impl_patternsE # -- Begin function _ZN2kc22impl_pattern_POperatorC2EPNS_7impl_IDEPNS_13impl_patternsE
	.p2align	5
	.type	_ZN2kc22impl_pattern_POperatorC2EPNS_7impl_IDEPNS_13impl_patternsE,@function
_ZN2kc22impl_pattern_POperatorC2EPNS_7impl_IDEPNS_13impl_patternsE: # @_ZN2kc22impl_pattern_POperatorC2EPNS_7impl_IDEPNS_13impl_patternsE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc22impl_pattern_POperatorE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc22impl_pattern_POperatorE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end527:
	.size	_ZN2kc22impl_pattern_POperatorC2EPNS_7impl_IDEPNS_13impl_patternsE, .Lfunc_end527-_ZN2kc22impl_pattern_POperatorC2EPNS_7impl_IDEPNS_13impl_patternsE
                                        # -- End function
	.globl	_ZN2kc22impl_pattern_PVariableC2EPNS_7impl_IDE # -- Begin function _ZN2kc22impl_pattern_PVariableC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc22impl_pattern_PVariableC2EPNS_7impl_IDE,@function
_ZN2kc22impl_pattern_PVariableC2EPNS_7impl_IDE: # @_ZN2kc22impl_pattern_PVariableC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc22impl_pattern_PVariableE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc22impl_pattern_PVariableE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end528:
	.size	_ZN2kc22impl_pattern_PVariableC2EPNS_7impl_IDE, .Lfunc_end528-_ZN2kc22impl_pattern_PVariableC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc13impl_patternsC2EPNS_12impl_patternEPS0_ # -- Begin function _ZN2kc13impl_patternsC2EPNS_12impl_patternEPS0_
	.p2align	5
	.type	_ZN2kc13impl_patternsC2EPNS_12impl_patternEPS0_,@function
_ZN2kc13impl_patternsC2EPNS_12impl_patternEPS0_: # @_ZN2kc13impl_patternsC2EPNS_12impl_patternEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc13impl_patternsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc13impl_patternsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end529:
	.size	_ZN2kc13impl_patternsC2EPNS_12impl_patternEPS0_, .Lfunc_end529-_ZN2kc13impl_patternsC2EPNS_12impl_patternEPS0_
                                        # -- End function
	.globl	_ZN2kc21impl_term_TIntLiteralC2EPNS_8impl_INTE # -- Begin function _ZN2kc21impl_term_TIntLiteralC2EPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc21impl_term_TIntLiteralC2EPNS_8impl_INTE,@function
_ZN2kc21impl_term_TIntLiteralC2EPNS_8impl_INTE: # @_ZN2kc21impl_term_TIntLiteralC2EPNS_8impl_INTE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc21impl_term_TIntLiteralE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc21impl_term_TIntLiteralE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end530:
	.size	_ZN2kc21impl_term_TIntLiteralC2EPNS_8impl_INTE, .Lfunc_end530-_ZN2kc21impl_term_TIntLiteralC2EPNS_8impl_INTE
                                        # -- End function
	.globl	_ZN2kc24impl_term_TStringLiteralC2EPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc24impl_term_TStringLiteralC2EPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc24impl_term_TStringLiteralC2EPNS_18impl_CexpressionDQE,@function
_ZN2kc24impl_term_TStringLiteralC2EPNS_18impl_CexpressionDQE: # @_ZN2kc24impl_term_TStringLiteralC2EPNS_18impl_CexpressionDQE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc24impl_term_TStringLiteralE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc24impl_term_TStringLiteralE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end531:
	.size	_ZN2kc24impl_term_TStringLiteralC2EPNS_18impl_CexpressionDQE, .Lfunc_end531-_ZN2kc24impl_term_TStringLiteralC2EPNS_18impl_CexpressionDQE
                                        # -- End function
	.globl	_ZN2kc16impl_term_TCTermC2EPNS_18impl_CexpressionSQE # -- Begin function _ZN2kc16impl_term_TCTermC2EPNS_18impl_CexpressionSQE
	.p2align	5
	.type	_ZN2kc16impl_term_TCTermC2EPNS_18impl_CexpressionSQE,@function
_ZN2kc16impl_term_TCTermC2EPNS_18impl_CexpressionSQE: # @_ZN2kc16impl_term_TCTermC2EPNS_18impl_CexpressionSQE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc16impl_term_TCTermE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc16impl_term_TCTermE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end532:
	.size	_ZN2kc16impl_term_TCTermC2EPNS_18impl_CexpressionSQE, .Lfunc_end532-_ZN2kc16impl_term_TCTermC2EPNS_18impl_CexpressionSQE
                                        # -- End function
	.globl	_ZN2kc23impl_term_TMemberVarDotC2EPNS_9impl_termEPNS_7impl_IDE # -- Begin function _ZN2kc23impl_term_TMemberVarDotC2EPNS_9impl_termEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc23impl_term_TMemberVarDotC2EPNS_9impl_termEPNS_7impl_IDE,@function
_ZN2kc23impl_term_TMemberVarDotC2EPNS_9impl_termEPNS_7impl_IDE: # @_ZN2kc23impl_term_TMemberVarDotC2EPNS_9impl_termEPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc23impl_term_TMemberVarDotE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc23impl_term_TMemberVarDotE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	ret
.Lfunc_end533:
	.size	_ZN2kc23impl_term_TMemberVarDotC2EPNS_9impl_termEPNS_7impl_IDE, .Lfunc_end533-_ZN2kc23impl_term_TMemberVarDotC2EPNS_9impl_termEPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc20impl_term_TMemberVarC2EPNS_9impl_termEPNS_7impl_IDE # -- Begin function _ZN2kc20impl_term_TMemberVarC2EPNS_9impl_termEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc20impl_term_TMemberVarC2EPNS_9impl_termEPNS_7impl_IDE,@function
_ZN2kc20impl_term_TMemberVarC2EPNS_9impl_termEPNS_7impl_IDE: # @_ZN2kc20impl_term_TMemberVarC2EPNS_9impl_termEPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc20impl_term_TMemberVarE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc20impl_term_TMemberVarE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	ret
.Lfunc_end534:
	.size	_ZN2kc20impl_term_TMemberVarC2EPNS_9impl_termEPNS_7impl_IDE, .Lfunc_end534-_ZN2kc20impl_term_TMemberVarC2EPNS_9impl_termEPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc20impl_term_TMethodDotC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE # -- Begin function _ZN2kc20impl_term_TMethodDotC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.p2align	5
	.type	_ZN2kc20impl_term_TMethodDotC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE,@function
_ZN2kc20impl_term_TMethodDotC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE: # @_ZN2kc20impl_term_TMethodDotC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc20impl_term_TMethodDotE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc20impl_term_TMethodDotE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	st.d	$a3, $a0, 40
	ret
.Lfunc_end535:
	.size	_ZN2kc20impl_term_TMethodDotC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE, .Lfunc_end535-_ZN2kc20impl_term_TMethodDotC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
                                        # -- End function
	.globl	_ZN2kc17impl_term_TMethodC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE # -- Begin function _ZN2kc17impl_term_TMethodC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.p2align	5
	.type	_ZN2kc17impl_term_TMethodC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE,@function
_ZN2kc17impl_term_TMethodC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE: # @_ZN2kc17impl_term_TMethodC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc17impl_term_TMethodE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc17impl_term_TMethodE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	st.d	$a3, $a0, 40
	ret
.Lfunc_end536:
	.size	_ZN2kc17impl_term_TMethodC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE, .Lfunc_end536-_ZN2kc17impl_term_TMethodC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
                                        # -- End function
	.globl	_ZN2kc19impl_term_TOperatorC2EPNS_7impl_IDEPNS_10impl_termsE # -- Begin function _ZN2kc19impl_term_TOperatorC2EPNS_7impl_IDEPNS_10impl_termsE
	.p2align	5
	.type	_ZN2kc19impl_term_TOperatorC2EPNS_7impl_IDEPNS_10impl_termsE,@function
_ZN2kc19impl_term_TOperatorC2EPNS_7impl_IDEPNS_10impl_termsE: # @_ZN2kc19impl_term_TOperatorC2EPNS_7impl_IDEPNS_10impl_termsE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_term_TOperatorE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_term_TOperatorE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	ret
.Lfunc_end537:
	.size	_ZN2kc19impl_term_TOperatorC2EPNS_7impl_IDEPNS_10impl_termsE, .Lfunc_end537-_ZN2kc19impl_term_TOperatorC2EPNS_7impl_IDEPNS_10impl_termsE
                                        # -- End function
	.globl	_ZN2kc19impl_term_TVariableC2EPNS_7impl_IDE # -- Begin function _ZN2kc19impl_term_TVariableC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc19impl_term_TVariableC2EPNS_7impl_IDE,@function
_ZN2kc19impl_term_TVariableC2EPNS_7impl_IDE: # @_ZN2kc19impl_term_TVariableC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc19impl_term_TVariableE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc19impl_term_TVariableE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end538:
	.size	_ZN2kc19impl_term_TVariableC2EPNS_7impl_IDE, .Lfunc_end538-_ZN2kc19impl_term_TVariableC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc10impl_termsC2EPNS_9impl_termEPS0_ # -- Begin function _ZN2kc10impl_termsC2EPNS_9impl_termEPS0_
	.p2align	5
	.type	_ZN2kc10impl_termsC2EPNS_9impl_termEPS0_,@function
_ZN2kc10impl_termsC2EPNS_9impl_termEPS0_: # @_ZN2kc10impl_termsC2EPNS_9impl_termEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc10impl_termsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc10impl_termsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end539:
	.size	_ZN2kc10impl_termsC2EPNS_9impl_termEPS0_, .Lfunc_end539-_ZN2kc10impl_termsC2EPNS_9impl_termEPS0_
                                        # -- End function
	.globl	_ZN2kc12impl_fnfilesC2EPNS_11impl_fnfileEPS0_ # -- Begin function _ZN2kc12impl_fnfilesC2EPNS_11impl_fnfileEPS0_
	.p2align	5
	.type	_ZN2kc12impl_fnfilesC2EPNS_11impl_fnfileEPS0_,@function
_ZN2kc12impl_fnfilesC2EPNS_11impl_fnfileEPS0_: # @_ZN2kc12impl_fnfilesC2EPNS_11impl_fnfileEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc12impl_fnfilesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc12impl_fnfilesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end540:
	.size	_ZN2kc12impl_fnfilesC2EPNS_11impl_fnfileEPS0_, .Lfunc_end540-_ZN2kc12impl_fnfilesC2EPNS_11impl_fnfileEPS0_
                                        # -- End function
	.globl	_ZN2kc18impl_fnfile_FnFileC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc18impl_fnfile_FnFileC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc18impl_fnfile_FnFileC2EPNS_20impl_casestring__StrE,@function
_ZN2kc18impl_fnfile_FnFileC2EPNS_20impl_casestring__StrE: # @_ZN2kc18impl_fnfile_FnFileC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc18impl_fnfile_FnFileE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc18impl_fnfile_FnFileE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 16
	ret
.Lfunc_end541:
	.size	_ZN2kc18impl_fnfile_FnFileC2EPNS_20impl_casestring__StrE, .Lfunc_end541-_ZN2kc18impl_fnfile_FnFileC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc19impl_fndeclarationsC2EPNS_18impl_fndeclarationEPS0_ # -- Begin function _ZN2kc19impl_fndeclarationsC2EPNS_18impl_fndeclarationEPS0_
	.p2align	5
	.type	_ZN2kc19impl_fndeclarationsC2EPNS_18impl_fndeclarationEPS0_,@function
_ZN2kc19impl_fndeclarationsC2EPNS_18impl_fndeclarationEPS0_: # @_ZN2kc19impl_fndeclarationsC2EPNS_18impl_fndeclarationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end542:
	.size	_ZN2kc19impl_fndeclarationsC2EPNS_18impl_fndeclarationEPS0_, .Lfunc_end542-_ZN2kc19impl_fndeclarationsC2EPNS_18impl_fndeclarationEPS0_
                                        # -- End function
	.globl	_ZN2kc38impl_fndeclaration_AcMemberDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE # -- Begin function _ZN2kc38impl_fndeclaration_AcMemberDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE
	.p2align	5
	.type	_ZN2kc38impl_fndeclaration_AcMemberDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE,@function
_ZN2kc38impl_fndeclaration_AcMemberDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE: # @_ZN2kc38impl_fndeclaration_AcMemberDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc38impl_fndeclaration_AcMemberDeclarationE+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc38impl_fndeclaration_AcMemberDeclarationE+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 40
	st.d	$a2, $a0, 48
	st.d	$a3, $a0, 56
	st.d	$a4, $a0, 64
	ret
.Lfunc_end543:
	.size	_ZN2kc38impl_fndeclaration_AcMemberDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE, .Lfunc_end543-_ZN2kc38impl_fndeclaration_AcMemberDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE
                                        # -- End function
	.globl	_ZN2kc34impl_fndeclaration_FnAcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE # -- Begin function _ZN2kc34impl_fndeclaration_FnAcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE
	.p2align	5
	.type	_ZN2kc34impl_fndeclaration_FnAcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE,@function
_ZN2kc34impl_fndeclaration_FnAcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE: # @_ZN2kc34impl_fndeclaration_FnAcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE
# %bb.0:
	pcalau12i	$t0, %pc_hi20(_ZTVN2kc34impl_fndeclaration_FnAcDeclarationE+16)
	addi.d	$t0, $t0, %pc_lo12(_ZTVN2kc34impl_fndeclaration_FnAcDeclarationE+16)
	st.d	$t0, $a0, 0
	st.d	$a1, $a0, 40
	st.d	$a2, $a0, 48
	st.d	$a3, $a0, 56
	st.d	$a4, $a0, 64
	st.d	$a5, $a0, 72
	st.d	$a6, $a0, 80
	st.d	$a7, $a0, 88
	ret
.Lfunc_end544:
	.size	_ZN2kc34impl_fndeclaration_FnAcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE, .Lfunc_end544-_ZN2kc34impl_fndeclaration_FnAcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE
                                        # -- End function
	.globl	_ZN2kc27impl_fnclass_ConvOperatorFnC2Ev # -- Begin function _ZN2kc27impl_fnclass_ConvOperatorFnC2Ev
	.p2align	5
	.type	_ZN2kc27impl_fnclass_ConvOperatorFnC2Ev,@function
_ZN2kc27impl_fnclass_ConvOperatorFnC2Ev: # @_ZN2kc27impl_fnclass_ConvOperatorFnC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc27impl_fnclass_ConvOperatorFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc27impl_fnclass_ConvOperatorFnE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end545:
	.size	_ZN2kc27impl_fnclass_ConvOperatorFnC2Ev, .Lfunc_end545-_ZN2kc27impl_fnclass_ConvOperatorFnC2Ev
                                        # -- End function
	.globl	_ZN2kc25impl_fnclass_DestructorFnC2Ev # -- Begin function _ZN2kc25impl_fnclass_DestructorFnC2Ev
	.p2align	5
	.type	_ZN2kc25impl_fnclass_DestructorFnC2Ev,@function
_ZN2kc25impl_fnclass_DestructorFnC2Ev:  # @_ZN2kc25impl_fnclass_DestructorFnC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc25impl_fnclass_DestructorFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc25impl_fnclass_DestructorFnE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end546:
	.size	_ZN2kc25impl_fnclass_DestructorFnC2Ev, .Lfunc_end546-_ZN2kc25impl_fnclass_DestructorFnC2Ev
                                        # -- End function
	.globl	_ZN2kc26impl_fnclass_ConstructorFnC2Ev # -- Begin function _ZN2kc26impl_fnclass_ConstructorFnC2Ev
	.p2align	5
	.type	_ZN2kc26impl_fnclass_ConstructorFnC2Ev,@function
_ZN2kc26impl_fnclass_ConstructorFnC2Ev: # @_ZN2kc26impl_fnclass_ConstructorFnC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc26impl_fnclass_ConstructorFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc26impl_fnclass_ConstructorFnE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end547:
	.size	_ZN2kc26impl_fnclass_ConstructorFnC2Ev, .Lfunc_end547-_ZN2kc26impl_fnclass_ConstructorFnC2Ev
                                        # -- End function
	.globl	_ZN2kc21impl_fnclass_MemberFnC2Ev # -- Begin function _ZN2kc21impl_fnclass_MemberFnC2Ev
	.p2align	5
	.type	_ZN2kc21impl_fnclass_MemberFnC2Ev,@function
_ZN2kc21impl_fnclass_MemberFnC2Ev:      # @_ZN2kc21impl_fnclass_MemberFnC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_fnclass_MemberFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_fnclass_MemberFnE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end548:
	.size	_ZN2kc21impl_fnclass_MemberFnC2Ev, .Lfunc_end548-_ZN2kc21impl_fnclass_MemberFnC2Ev
                                        # -- End function
	.globl	_ZN2kc21impl_fnclass_StaticFnC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc21impl_fnclass_StaticFnC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc21impl_fnclass_StaticFnC2EPNS_20impl_casestring__StrE,@function
_ZN2kc21impl_fnclass_StaticFnC2EPNS_20impl_casestring__StrE: # @_ZN2kc21impl_fnclass_StaticFnC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc21impl_fnclass_StaticFnE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc21impl_fnclass_StaticFnE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end549:
	.size	_ZN2kc21impl_fnclass_StaticFnC2EPNS_20impl_casestring__StrE, .Lfunc_end549-_ZN2kc21impl_fnclass_StaticFnC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc21impl_fnclass_GlobalFnC2Ev # -- Begin function _ZN2kc21impl_fnclass_GlobalFnC2Ev
	.p2align	5
	.type	_ZN2kc21impl_fnclass_GlobalFnC2Ev,@function
_ZN2kc21impl_fnclass_GlobalFnC2Ev:      # @_ZN2kc21impl_fnclass_GlobalFnC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_fnclass_GlobalFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_fnclass_GlobalFnE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end550:
	.size	_ZN2kc21impl_fnclass_GlobalFnC2Ev, .Lfunc_end550-_ZN2kc21impl_fnclass_GlobalFnC2Ev
                                        # -- End function
	.globl	_ZN2kc10impl_CtextC2EPNS_15impl_Ctext_elemEPS0_ # -- Begin function _ZN2kc10impl_CtextC2EPNS_15impl_Ctext_elemEPS0_
	.p2align	5
	.type	_ZN2kc10impl_CtextC2EPNS_15impl_Ctext_elemEPS0_,@function
_ZN2kc10impl_CtextC2EPNS_15impl_Ctext_elemEPS0_: # @_ZN2kc10impl_CtextC2EPNS_15impl_Ctext_elemEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc10impl_CtextE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc10impl_CtextE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	ret
.Lfunc_end551:
	.size	_ZN2kc10impl_CtextC2EPNS_15impl_Ctext_elemEPS0_, .Lfunc_end551-_ZN2kc10impl_CtextC2EPNS_15impl_Ctext_elemEPS0_
                                        # -- End function
	.globl	_ZN2kc35impl_Ctext_elem_CTextWithexpressionC2EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE # -- Begin function _ZN2kc35impl_Ctext_elem_CTextWithexpressionC2EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE
	.p2align	5
	.type	_ZN2kc35impl_Ctext_elem_CTextWithexpressionC2EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE,@function
_ZN2kc35impl_Ctext_elem_CTextWithexpressionC2EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE: # @_ZN2kc35impl_Ctext_elem_CTextWithexpressionC2EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc35impl_Ctext_elem_CTextWithexpressionE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc35impl_Ctext_elem_CTextWithexpressionE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	st.d	$a3, $a0, 40
	ret
.Lfunc_end552:
	.size	_ZN2kc35impl_Ctext_elem_CTextWithexpressionC2EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE, .Lfunc_end552-_ZN2kc35impl_Ctext_elem_CTextWithexpressionC2EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE
                                        # -- End function
	.globl	_ZN2kc38impl_Ctext_elem_CTextForeachexpressionC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE # -- Begin function _ZN2kc38impl_Ctext_elem_CTextForeachexpressionC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE
	.p2align	5
	.type	_ZN2kc38impl_Ctext_elem_CTextForeachexpressionC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE,@function
_ZN2kc38impl_Ctext_elem_CTextForeachexpressionC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE: # @_ZN2kc38impl_Ctext_elem_CTextForeachexpressionC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE
# %bb.0:
	pcalau12i	$a6, %pc_hi20(_ZTVN2kc38impl_Ctext_elem_CTextForeachexpressionE+16)
	addi.d	$a6, $a6, %pc_lo12(_ZTVN2kc38impl_Ctext_elem_CTextForeachexpressionE+16)
	st.d	$a6, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	st.d	$a3, $a0, 40
	st.d	$a4, $a0, 48
	st.d	$a5, $a0, 56
	ret
.Lfunc_end553:
	.size	_ZN2kc38impl_Ctext_elem_CTextForeachexpressionC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE, .Lfunc_end553-_ZN2kc38impl_Ctext_elem_CTextForeachexpressionC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE
                                        # -- End function
	.globl	_ZN2kc26impl_Ctext_elem_CTextCbodyC2EPNS_10impl_CtextE # -- Begin function _ZN2kc26impl_Ctext_elem_CTextCbodyC2EPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc26impl_Ctext_elem_CTextCbodyC2EPNS_10impl_CtextE,@function
_ZN2kc26impl_Ctext_elem_CTextCbodyC2EPNS_10impl_CtextE: # @_ZN2kc26impl_Ctext_elem_CTextCbodyC2EPNS_10impl_CtextE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc26impl_Ctext_elem_CTextCbodyE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc26impl_Ctext_elem_CTextCbodyE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end554:
	.size	_ZN2kc26impl_Ctext_elem_CTextCbodyC2EPNS_10impl_CtextE, .Lfunc_end554-_ZN2kc26impl_Ctext_elem_CTextCbodyC2EPNS_10impl_CtextE
                                        # -- End function
	.globl	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQC2EPNS_18impl_CexpressionSQE # -- Begin function _ZN2kc34impl_Ctext_elem_CTextCexpressionSQC2EPNS_18impl_CexpressionSQE
	.p2align	5
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQC2EPNS_18impl_CexpressionSQE,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionSQC2EPNS_18impl_CexpressionSQE: # @_ZN2kc34impl_Ctext_elem_CTextCexpressionSQC2EPNS_18impl_CexpressionSQE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc34impl_Ctext_elem_CTextCexpressionSQE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc34impl_Ctext_elem_CTextCexpressionSQE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end555:
	.size	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQC2EPNS_18impl_CexpressionSQE, .Lfunc_end555-_ZN2kc34impl_Ctext_elem_CTextCexpressionSQC2EPNS_18impl_CexpressionSQE
                                        # -- End function
	.globl	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQC2EPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc34impl_Ctext_elem_CTextCexpressionDQC2EPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQC2EPNS_18impl_CexpressionDQE,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionDQC2EPNS_18impl_CexpressionDQE: # @_ZN2kc34impl_Ctext_elem_CTextCexpressionDQC2EPNS_18impl_CexpressionDQE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc34impl_Ctext_elem_CTextCexpressionDQE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc34impl_Ctext_elem_CTextCexpressionDQE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end556:
	.size	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQC2EPNS_18impl_CexpressionDQE, .Lfunc_end556-_ZN2kc34impl_Ctext_elem_CTextCexpressionDQC2EPNS_18impl_CexpressionDQE
                                        # -- End function
	.globl	_ZN2kc23impl_Ctext_elem_CTextNlC2EPNS_17impl_integer__IntE # -- Begin function _ZN2kc23impl_Ctext_elem_CTextNlC2EPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc23impl_Ctext_elem_CTextNlC2EPNS_17impl_integer__IntE,@function
_ZN2kc23impl_Ctext_elem_CTextNlC2EPNS_17impl_integer__IntE: # @_ZN2kc23impl_Ctext_elem_CTextNlC2EPNS_17impl_integer__IntE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc23impl_Ctext_elem_CTextNlE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc23impl_Ctext_elem_CTextNlE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end557:
	.size	_ZN2kc23impl_Ctext_elem_CTextNlC2EPNS_17impl_integer__IntE, .Lfunc_end557-_ZN2kc23impl_Ctext_elem_CTextNlC2EPNS_17impl_integer__IntE
                                        # -- End function
	.globl	_ZN2kc30impl_Ctext_elem_CTextDollarVarC2EPNS_8impl_INTE # -- Begin function _ZN2kc30impl_Ctext_elem_CTextDollarVarC2EPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc30impl_Ctext_elem_CTextDollarVarC2EPNS_8impl_INTE,@function
_ZN2kc30impl_Ctext_elem_CTextDollarVarC2EPNS_8impl_INTE: # @_ZN2kc30impl_Ctext_elem_CTextDollarVarC2EPNS_8impl_INTE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc30impl_Ctext_elem_CTextDollarVarE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc30impl_Ctext_elem_CTextDollarVarE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end558:
	.size	_ZN2kc30impl_Ctext_elem_CTextDollarVarC2EPNS_8impl_INTE, .Lfunc_end558-_ZN2kc30impl_Ctext_elem_CTextDollarVarC2EPNS_8impl_INTE
                                        # -- End function
	.globl	_ZN2kc25impl_Ctext_elem_CTextLineC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc25impl_Ctext_elem_CTextLineC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc25impl_Ctext_elem_CTextLineC2EPNS_20impl_casestring__StrE,@function
_ZN2kc25impl_Ctext_elem_CTextLineC2EPNS_20impl_casestring__StrE: # @_ZN2kc25impl_Ctext_elem_CTextLineC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc25impl_Ctext_elem_CTextLineE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc25impl_Ctext_elem_CTextLineE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end559:
	.size	_ZN2kc25impl_Ctext_elem_CTextLineC2EPNS_20impl_casestring__StrE, .Lfunc_end559-_ZN2kc25impl_Ctext_elem_CTextLineC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc31impl_foreach_after_ForeachAfterC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE # -- Begin function _ZN2kc31impl_foreach_after_ForeachAfterC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc31impl_foreach_after_ForeachAfterC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE,@function
_ZN2kc31impl_foreach_after_ForeachAfterC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE: # @_ZN2kc31impl_foreach_after_ForeachAfterC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc31impl_foreach_after_ForeachAfterE+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc31impl_foreach_after_ForeachAfterE+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	st.d	$a3, $a0, 40
	st.d	$a4, $a0, 48
	ret
.Lfunc_end560:
	.size	_ZN2kc31impl_foreach_after_ForeachAfterC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE, .Lfunc_end560-_ZN2kc31impl_foreach_after_ForeachAfterC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE
                                        # -- End function
	.globl	_ZN2kc33impl_foreach_after_NoForeachAfterC2Ev # -- Begin function _ZN2kc33impl_foreach_after_NoForeachAfterC2Ev
	.p2align	5
	.type	_ZN2kc33impl_foreach_after_NoForeachAfterC2Ev,@function
_ZN2kc33impl_foreach_after_NoForeachAfterC2Ev: # @_ZN2kc33impl_foreach_after_NoForeachAfterC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_foreach_after_NoForeachAfterE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_foreach_after_NoForeachAfterE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end561:
	.size	_ZN2kc33impl_foreach_after_NoForeachAfterC2Ev, .Lfunc_end561-_ZN2kc33impl_foreach_after_NoForeachAfterC2Ev
                                        # -- End function
	.globl	_ZN2kc36impl_contextinfo_NotInForeachContextC2Ev # -- Begin function _ZN2kc36impl_contextinfo_NotInForeachContextC2Ev
	.p2align	5
	.type	_ZN2kc36impl_contextinfo_NotInForeachContextC2Ev,@function
_ZN2kc36impl_contextinfo_NotInForeachContextC2Ev: # @_ZN2kc36impl_contextinfo_NotInForeachContextC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc36impl_contextinfo_NotInForeachContextE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc36impl_contextinfo_NotInForeachContextE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end562:
	.size	_ZN2kc36impl_contextinfo_NotInForeachContextC2Ev, .Lfunc_end562-_ZN2kc36impl_contextinfo_NotInForeachContextC2Ev
                                        # -- End function
	.globl	_ZN2kc33impl_contextinfo_InForeachContextC2EPNS_17impl_patternchainE # -- Begin function _ZN2kc33impl_contextinfo_InForeachContextC2EPNS_17impl_patternchainE
	.p2align	5
	.type	_ZN2kc33impl_contextinfo_InForeachContextC2EPNS_17impl_patternchainE,@function
_ZN2kc33impl_contextinfo_InForeachContextC2EPNS_17impl_patternchainE: # @_ZN2kc33impl_contextinfo_InForeachContextC2EPNS_17impl_patternchainE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc33impl_contextinfo_InForeachContextE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc33impl_contextinfo_InForeachContextE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end563:
	.size	_ZN2kc33impl_contextinfo_InForeachContextC2EPNS_17impl_patternchainE, .Lfunc_end563-_ZN2kc33impl_contextinfo_InForeachContextC2EPNS_17impl_patternchainE
                                        # -- End function
	.globl	_ZN2kc20impl_withexpressionsC2EPNS_19impl_withexpressionEPS0_ # -- Begin function _ZN2kc20impl_withexpressionsC2EPNS_19impl_withexpressionEPS0_
	.p2align	5
	.type	_ZN2kc20impl_withexpressionsC2EPNS_19impl_withexpressionEPS0_,@function
_ZN2kc20impl_withexpressionsC2EPNS_19impl_withexpressionEPS0_: # @_ZN2kc20impl_withexpressionsC2EPNS_19impl_withexpressionEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc20impl_withexpressionsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc20impl_withexpressionsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	ret
.Lfunc_end564:
	.size	_ZN2kc20impl_withexpressionsC2EPNS_19impl_withexpressionEPS0_, .Lfunc_end564-_ZN2kc20impl_withexpressionsC2EPNS_19impl_withexpressionEPS0_
                                        # -- End function
	.globl	_ZN2kc33impl_withexpression_WECexpressionC2EPNS_16impl_CexpressionE # -- Begin function _ZN2kc33impl_withexpression_WECexpressionC2EPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc33impl_withexpression_WECexpressionC2EPNS_16impl_CexpressionE,@function
_ZN2kc33impl_withexpression_WECexpressionC2EPNS_16impl_CexpressionE: # @_ZN2kc33impl_withexpression_WECexpressionC2EPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc33impl_withexpression_WECexpressionE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc33impl_withexpression_WECexpressionE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end565:
	.size	_ZN2kc33impl_withexpression_WECexpressionC2EPNS_16impl_CexpressionE, .Lfunc_end565-_ZN2kc33impl_withexpression_WECexpressionC2EPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc30impl_withexpression_WEVariableC2EPNS_7impl_IDE # -- Begin function _ZN2kc30impl_withexpression_WEVariableC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc30impl_withexpression_WEVariableC2EPNS_7impl_IDE,@function
_ZN2kc30impl_withexpression_WEVariableC2EPNS_7impl_IDE: # @_ZN2kc30impl_withexpression_WEVariableC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc30impl_withexpression_WEVariableE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc30impl_withexpression_WEVariableE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end566:
	.size	_ZN2kc30impl_withexpression_WEVariableC2EPNS_7impl_IDE, .Lfunc_end566-_ZN2kc30impl_withexpression_WEVariableC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc14impl_withcasesC2EPNS_13impl_withcaseEPS0_ # -- Begin function _ZN2kc14impl_withcasesC2EPNS_13impl_withcaseEPS0_
	.p2align	5
	.type	_ZN2kc14impl_withcasesC2EPNS_13impl_withcaseEPS0_,@function
_ZN2kc14impl_withcasesC2EPNS_13impl_withcaseEPS0_: # @_ZN2kc14impl_withcasesC2EPNS_13impl_withcaseEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc14impl_withcasesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc14impl_withcasesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	ret
.Lfunc_end567:
	.size	_ZN2kc14impl_withcasesC2EPNS_13impl_withcaseEPS0_, .Lfunc_end567-_ZN2kc14impl_withcasesC2EPNS_13impl_withcaseEPS0_
                                        # -- End function
	.globl	_ZN2kc22impl_withcase_WithcaseC2EPNS_18impl_patternchainsEPNS_10impl_CtextE # -- Begin function _ZN2kc22impl_withcase_WithcaseC2EPNS_18impl_patternchainsEPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc22impl_withcase_WithcaseC2EPNS_18impl_patternchainsEPNS_10impl_CtextE,@function
_ZN2kc22impl_withcase_WithcaseC2EPNS_18impl_patternchainsEPNS_10impl_CtextE: # @_ZN2kc22impl_withcase_WithcaseC2EPNS_18impl_patternchainsEPNS_10impl_CtextE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc22impl_withcase_WithcaseE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc22impl_withcase_WithcaseE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	ret
.Lfunc_end568:
	.size	_ZN2kc22impl_withcase_WithcaseC2EPNS_18impl_patternchainsEPNS_10impl_CtextE, .Lfunc_end568-_ZN2kc22impl_withcase_WithcaseC2EPNS_18impl_patternchainsEPNS_10impl_CtextE
                                        # -- End function
	.globl	_ZN2kc24impl_unparsedeclarationsC2EPNS_23impl_unparsedeclarationEPS0_ # -- Begin function _ZN2kc24impl_unparsedeclarationsC2EPNS_23impl_unparsedeclarationEPS0_
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarationsC2EPNS_23impl_unparsedeclarationEPS0_,@function
_ZN2kc24impl_unparsedeclarationsC2EPNS_23impl_unparsedeclarationEPS0_: # @_ZN2kc24impl_unparsedeclarationsC2EPNS_23impl_unparsedeclarationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc24impl_unparsedeclarationsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc24impl_unparsedeclarationsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end569:
	.size	_ZN2kc24impl_unparsedeclarationsC2EPNS_23impl_unparsedeclarationEPS0_, .Lfunc_end569-_ZN2kc24impl_unparsedeclarationsC2EPNS_23impl_unparsedeclarationEPS0_
                                        # -- End function
	.globl	_ZN2kc42impl_unparsedeclaration_UnparseDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE # -- Begin function _ZN2kc42impl_unparsedeclaration_UnparseDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE
	.p2align	5
	.type	_ZN2kc42impl_unparsedeclaration_UnparseDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE,@function
_ZN2kc42impl_unparsedeclaration_UnparseDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE: # @_ZN2kc42impl_unparsedeclaration_UnparseDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	ret
.Lfunc_end570:
	.size	_ZN2kc42impl_unparsedeclaration_UnparseDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE, .Lfunc_end570-_ZN2kc42impl_unparsedeclaration_UnparseDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE
                                        # -- End function
	.globl	_ZN2kc19impl_unparseclausesC2EPNS_18impl_unparseclauseEPS0_ # -- Begin function _ZN2kc19impl_unparseclausesC2EPNS_18impl_unparseclauseEPS0_
	.p2align	5
	.type	_ZN2kc19impl_unparseclausesC2EPNS_18impl_unparseclauseEPS0_,@function
_ZN2kc19impl_unparseclausesC2EPNS_18impl_unparseclauseEPS0_: # @_ZN2kc19impl_unparseclausesC2EPNS_18impl_unparseclauseEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_unparseclausesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_unparseclausesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end571:
	.size	_ZN2kc19impl_unparseclausesC2EPNS_18impl_unparseclauseEPS0_, .Lfunc_end571-_ZN2kc19impl_unparseclausesC2EPNS_18impl_unparseclauseEPS0_
                                        # -- End function
	.globl	_ZN2kc32impl_unparseclause_UnparseClauseC2EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE # -- Begin function _ZN2kc32impl_unparseclause_UnparseClauseC2EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE
	.p2align	5
	.type	_ZN2kc32impl_unparseclause_UnparseClauseC2EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE,@function
_ZN2kc32impl_unparseclause_UnparseClauseC2EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE: # @_ZN2kc32impl_unparseclause_UnparseClauseC2EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc32impl_unparseclause_UnparseClauseE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc32impl_unparseclause_UnparseClauseE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end572:
	.size	_ZN2kc32impl_unparseclause_UnparseClauseC2EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE, .Lfunc_end572-_ZN2kc32impl_unparseclause_UnparseClauseC2EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE
                                        # -- End function
	.globl	_ZN2kc14impl_viewnamesC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc14impl_viewnamesC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc14impl_viewnamesC2EPNS_7impl_IDEPS0_,@function
_ZN2kc14impl_viewnamesC2EPNS_7impl_IDEPS0_: # @_ZN2kc14impl_viewnamesC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc14impl_viewnamesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc14impl_viewnamesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	ret
.Lfunc_end573:
	.size	_ZN2kc14impl_viewnamesC2EPNS_7impl_IDEPS0_, .Lfunc_end573-_ZN2kc14impl_viewnamesC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc17impl_unparseitemsC2EPNS_16impl_unparseitemEPS0_ # -- Begin function _ZN2kc17impl_unparseitemsC2EPNS_16impl_unparseitemEPS0_
	.p2align	5
	.type	_ZN2kc17impl_unparseitemsC2EPNS_16impl_unparseitemEPS0_,@function
_ZN2kc17impl_unparseitemsC2EPNS_16impl_unparseitemEPS0_: # @_ZN2kc17impl_unparseitemsC2EPNS_16impl_unparseitemEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc17impl_unparseitemsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc17impl_unparseitemsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end574:
	.size	_ZN2kc17impl_unparseitemsC2EPNS_16impl_unparseitemEPS0_, .Lfunc_end574-_ZN2kc17impl_unparseitemsC2EPNS_16impl_unparseitemEPS0_
                                        # -- End function
	.globl	_ZN2kc29impl_unparseitem_UViewVarDeclC2EPNS_7impl_IDES2_PNS_16impl_CexpressionE # -- Begin function _ZN2kc29impl_unparseitem_UViewVarDeclC2EPNS_7impl_IDES2_PNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc29impl_unparseitem_UViewVarDeclC2EPNS_7impl_IDES2_PNS_16impl_CexpressionE,@function
_ZN2kc29impl_unparseitem_UViewVarDeclC2EPNS_7impl_IDES2_PNS_16impl_CexpressionE: # @_ZN2kc29impl_unparseitem_UViewVarDeclC2EPNS_7impl_IDES2_PNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc29impl_unparseitem_UViewVarDeclE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc29impl_unparseitem_UViewVarDeclE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	st.d	$a3, $a0, 32
	ret
.Lfunc_end575:
	.size	_ZN2kc29impl_unparseitem_UViewVarDeclC2EPNS_7impl_IDES2_PNS_16impl_CexpressionE, .Lfunc_end575-_ZN2kc29impl_unparseitem_UViewVarDeclC2EPNS_7impl_IDES2_PNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc24impl_unparseitem_UnpBodyC2EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE # -- Begin function _ZN2kc24impl_unparseitem_UnpBodyC2EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE
	.p2align	5
	.type	_ZN2kc24impl_unparseitem_UnpBodyC2EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE,@function
_ZN2kc24impl_unparseitem_UnpBodyC2EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE: # @_ZN2kc24impl_unparseitem_UnpBodyC2EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc24impl_unparseitem_UnpBodyE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc24impl_unparseitem_UnpBodyE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	ret
.Lfunc_end576:
	.size	_ZN2kc24impl_unparseitem_UnpBodyC2EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE, .Lfunc_end576-_ZN2kc24impl_unparseitem_UnpBodyC2EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE
                                        # -- End function
	.globl	_ZN2kc25impl_unparseitem_UnpCtextC2EPNS_19impl_languageoptionEPNS_10impl_CtextE # -- Begin function _ZN2kc25impl_unparseitem_UnpCtextC2EPNS_19impl_languageoptionEPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc25impl_unparseitem_UnpCtextC2EPNS_19impl_languageoptionEPNS_10impl_CtextE,@function
_ZN2kc25impl_unparseitem_UnpCtextC2EPNS_19impl_languageoptionEPNS_10impl_CtextE: # @_ZN2kc25impl_unparseitem_UnpCtextC2EPNS_19impl_languageoptionEPNS_10impl_CtextE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc25impl_unparseitem_UnpCtextE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc25impl_unparseitem_UnpCtextE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	ret
.Lfunc_end577:
	.size	_ZN2kc25impl_unparseitem_UnpCtextC2EPNS_19impl_languageoptionEPNS_10impl_CtextE, .Lfunc_end577-_ZN2kc25impl_unparseitem_UnpCtextC2EPNS_19impl_languageoptionEPNS_10impl_CtextE
                                        # -- End function
	.globl	_ZN2kc27impl_unparseitem_UnpSubexprC2EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE # -- Begin function _ZN2kc27impl_unparseitem_UnpSubexprC2EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE
	.p2align	5
	.type	_ZN2kc27impl_unparseitem_UnpSubexprC2EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE,@function
_ZN2kc27impl_unparseitem_UnpSubexprC2EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE: # @_ZN2kc27impl_unparseitem_UnpSubexprC2EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc27impl_unparseitem_UnpSubexprE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc27impl_unparseitem_UnpSubexprE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	st.d	$a3, $a0, 32
	ret
.Lfunc_end578:
	.size	_ZN2kc27impl_unparseitem_UnpSubexprC2EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE, .Lfunc_end578-_ZN2kc27impl_unparseitem_UnpSubexprC2EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE
                                        # -- End function
	.globl	_ZN2kc23impl_unparseitem_UnpStrC2EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE # -- Begin function _ZN2kc23impl_unparseitem_UnpStrC2EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE
	.p2align	5
	.type	_ZN2kc23impl_unparseitem_UnpStrC2EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE,@function
_ZN2kc23impl_unparseitem_UnpStrC2EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE: # @_ZN2kc23impl_unparseitem_UnpStrC2EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc23impl_unparseitem_UnpStrE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc23impl_unparseitem_UnpStrE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 16
	st.d	$a2, $a0, 24
	st.d	$a3, $a0, 32
	ret
.Lfunc_end579:
	.size	_ZN2kc23impl_unparseitem_UnpStrC2EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE, .Lfunc_end579-_ZN2kc23impl_unparseitem_UnpStrC2EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE
                                        # -- End function
	.globl	_ZN2kc33impl_unpsubterm_UnpCastedVariableC2EPNS_7impl_IDES2_ # -- Begin function _ZN2kc33impl_unpsubterm_UnpCastedVariableC2EPNS_7impl_IDES2_
	.p2align	5
	.type	_ZN2kc33impl_unpsubterm_UnpCastedVariableC2EPNS_7impl_IDES2_,@function
_ZN2kc33impl_unpsubterm_UnpCastedVariableC2EPNS_7impl_IDES2_: # @_ZN2kc33impl_unpsubterm_UnpCastedVariableC2EPNS_7impl_IDES2_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end580:
	.size	_ZN2kc33impl_unpsubterm_UnpCastedVariableC2EPNS_7impl_IDES2_, .Lfunc_end580-_ZN2kc33impl_unpsubterm_UnpCastedVariableC2EPNS_7impl_IDES2_
                                        # -- End function
	.globl	_ZN2kc32impl_unpsubterm_UnpDollarvarAttrC2EPNS_8impl_INTEPNS_18impl_unpattributesE # -- Begin function _ZN2kc32impl_unpsubterm_UnpDollarvarAttrC2EPNS_8impl_INTEPNS_18impl_unpattributesE
	.p2align	5
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarAttrC2EPNS_8impl_INTEPNS_18impl_unpattributesE,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarAttrC2EPNS_8impl_INTEPNS_18impl_unpattributesE: # @_ZN2kc32impl_unpsubterm_UnpDollarvarAttrC2EPNS_8impl_INTEPNS_18impl_unpattributesE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end581:
	.size	_ZN2kc32impl_unpsubterm_UnpDollarvarAttrC2EPNS_8impl_INTEPNS_18impl_unpattributesE, .Lfunc_end581-_ZN2kc32impl_unpsubterm_UnpDollarvarAttrC2EPNS_8impl_INTEPNS_18impl_unpattributesE
                                        # -- End function
	.globl	_ZN2kc26impl_unpsubterm_UnpSubAttrC2EPNS_7impl_IDEPNS_18impl_unpattributesE # -- Begin function _ZN2kc26impl_unpsubterm_UnpSubAttrC2EPNS_7impl_IDEPNS_18impl_unpattributesE
	.p2align	5
	.type	_ZN2kc26impl_unpsubterm_UnpSubAttrC2EPNS_7impl_IDEPNS_18impl_unpattributesE,@function
_ZN2kc26impl_unpsubterm_UnpSubAttrC2EPNS_7impl_IDEPNS_18impl_unpattributesE: # @_ZN2kc26impl_unpsubterm_UnpSubAttrC2EPNS_7impl_IDEPNS_18impl_unpattributesE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc26impl_unpsubterm_UnpSubAttrE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc26impl_unpsubterm_UnpSubAttrE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end582:
	.size	_ZN2kc26impl_unpsubterm_UnpSubAttrC2EPNS_7impl_IDEPNS_18impl_unpattributesE, .Lfunc_end582-_ZN2kc26impl_unpsubterm_UnpSubAttrC2EPNS_7impl_IDEPNS_18impl_unpattributesE
                                        # -- End function
	.globl	_ZN2kc32impl_unpsubterm_UnpDollarvarTermC2EPNS_8impl_INTE # -- Begin function _ZN2kc32impl_unpsubterm_UnpDollarvarTermC2EPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarTermC2EPNS_8impl_INTE,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarTermC2EPNS_8impl_INTE: # @_ZN2kc32impl_unpsubterm_UnpDollarvarTermC2EPNS_8impl_INTE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end583:
	.size	_ZN2kc32impl_unpsubterm_UnpDollarvarTermC2EPNS_8impl_INTE, .Lfunc_end583-_ZN2kc32impl_unpsubterm_UnpDollarvarTermC2EPNS_8impl_INTE
                                        # -- End function
	.globl	_ZN2kc26impl_unpsubterm_UnpSubTermC2EPNS_7impl_IDE # -- Begin function _ZN2kc26impl_unpsubterm_UnpSubTermC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc26impl_unpsubterm_UnpSubTermC2EPNS_7impl_IDE,@function
_ZN2kc26impl_unpsubterm_UnpSubTermC2EPNS_7impl_IDE: # @_ZN2kc26impl_unpsubterm_UnpSubTermC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc26impl_unpsubterm_UnpSubTermE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc26impl_unpsubterm_UnpSubTermE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end584:
	.size	_ZN2kc26impl_unpsubterm_UnpSubTermC2EPNS_7impl_IDE, .Lfunc_end584-_ZN2kc26impl_unpsubterm_UnpSubTermC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc18impl_unpattributesC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc18impl_unpattributesC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc18impl_unpattributesC2EPNS_7impl_IDEPS0_,@function
_ZN2kc18impl_unpattributesC2EPNS_7impl_IDEPS0_: # @_ZN2kc18impl_unpattributesC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc18impl_unpattributesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc18impl_unpattributesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end585:
	.size	_ZN2kc18impl_unpattributesC2EPNS_7impl_IDEPS0_, .Lfunc_end585-_ZN2kc18impl_unpattributesC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc31impl_viewnameoption_YesViewnameC2EPNS_7impl_IDE # -- Begin function _ZN2kc31impl_viewnameoption_YesViewnameC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc31impl_viewnameoption_YesViewnameC2EPNS_7impl_IDE,@function
_ZN2kc31impl_viewnameoption_YesViewnameC2EPNS_7impl_IDE: # @_ZN2kc31impl_viewnameoption_YesViewnameC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc31impl_viewnameoption_YesViewnameE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc31impl_viewnameoption_YesViewnameE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end586:
	.size	_ZN2kc31impl_viewnameoption_YesViewnameC2EPNS_7impl_IDE, .Lfunc_end586-_ZN2kc31impl_viewnameoption_YesViewnameC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc30impl_viewnameoption_NoViewnameC2Ev # -- Begin function _ZN2kc30impl_viewnameoption_NoViewnameC2Ev
	.p2align	5
	.type	_ZN2kc30impl_viewnameoption_NoViewnameC2Ev,@function
_ZN2kc30impl_viewnameoption_NoViewnameC2Ev: # @_ZN2kc30impl_viewnameoption_NoViewnameC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc30impl_viewnameoption_NoViewnameE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc30impl_viewnameoption_NoViewnameE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end587:
	.size	_ZN2kc30impl_viewnameoption_NoViewnameC2Ev, .Lfunc_end587-_ZN2kc30impl_viewnameoption_NoViewnameC2Ev
                                        # -- End function
	.globl	_ZN2kc32impl_languageoption_LanguageListC2EPNS_18impl_languagenamesE # -- Begin function _ZN2kc32impl_languageoption_LanguageListC2EPNS_18impl_languagenamesE
	.p2align	5
	.type	_ZN2kc32impl_languageoption_LanguageListC2EPNS_18impl_languagenamesE,@function
_ZN2kc32impl_languageoption_LanguageListC2EPNS_18impl_languagenamesE: # @_ZN2kc32impl_languageoption_LanguageListC2EPNS_18impl_languagenamesE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc32impl_languageoption_LanguageListE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc32impl_languageoption_LanguageListE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end588:
	.size	_ZN2kc32impl_languageoption_LanguageListC2EPNS_18impl_languagenamesE, .Lfunc_end588-_ZN2kc32impl_languageoption_LanguageListC2EPNS_18impl_languagenamesE
                                        # -- End function
	.globl	_ZN2kc34impl_languageoption_NoLanguagenameC2Ev # -- Begin function _ZN2kc34impl_languageoption_NoLanguagenameC2Ev
	.p2align	5
	.type	_ZN2kc34impl_languageoption_NoLanguagenameC2Ev,@function
_ZN2kc34impl_languageoption_NoLanguagenameC2Ev: # @_ZN2kc34impl_languageoption_NoLanguagenameC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc34impl_languageoption_NoLanguagenameE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc34impl_languageoption_NoLanguagenameE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end589:
	.size	_ZN2kc34impl_languageoption_NoLanguagenameC2Ev, .Lfunc_end589-_ZN2kc34impl_languageoption_NoLanguagenameC2Ev
                                        # -- End function
	.globl	_ZN2kc18impl_languagenamesC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc18impl_languagenamesC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc18impl_languagenamesC2EPNS_7impl_IDEPS0_,@function
_ZN2kc18impl_languagenamesC2EPNS_7impl_IDEPS0_: # @_ZN2kc18impl_languagenamesC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc18impl_languagenamesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc18impl_languagenamesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end590:
	.size	_ZN2kc18impl_languagenamesC2EPNS_7impl_IDEPS0_, .Lfunc_end590-_ZN2kc18impl_languagenamesC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc27impl_fileline_PosNoFileLineC2Ev # -- Begin function _ZN2kc27impl_fileline_PosNoFileLineC2Ev
	.p2align	5
	.type	_ZN2kc27impl_fileline_PosNoFileLineC2Ev,@function
_ZN2kc27impl_fileline_PosNoFileLineC2Ev: # @_ZN2kc27impl_fileline_PosNoFileLineC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc27impl_fileline_PosNoFileLineE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc27impl_fileline_PosNoFileLineE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end591:
	.size	_ZN2kc27impl_fileline_PosNoFileLineC2Ev, .Lfunc_end591-_ZN2kc27impl_fileline_PosNoFileLineC2Ev
                                        # -- End function
	.globl	_ZN2kc24impl_fileline_NoFileLineC2Ev # -- Begin function _ZN2kc24impl_fileline_NoFileLineC2Ev
	.p2align	5
	.type	_ZN2kc24impl_fileline_NoFileLineC2Ev,@function
_ZN2kc24impl_fileline_NoFileLineC2Ev:   # @_ZN2kc24impl_fileline_NoFileLineC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc24impl_fileline_NoFileLineE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc24impl_fileline_NoFileLineE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end592:
	.size	_ZN2kc24impl_fileline_NoFileLineC2Ev, .Lfunc_end592-_ZN2kc24impl_fileline_NoFileLineC2Ev
                                        # -- End function
	.globl	_ZN2kc27impl_scopetypefilelinestackC2EPNS_22impl_scopetypefilelineEPS0_ # -- Begin function _ZN2kc27impl_scopetypefilelinestackC2EPNS_22impl_scopetypefilelineEPS0_
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestackC2EPNS_22impl_scopetypefilelineEPS0_,@function
_ZN2kc27impl_scopetypefilelinestackC2EPNS_22impl_scopetypefilelineEPS0_: # @_ZN2kc27impl_scopetypefilelinestackC2EPNS_22impl_scopetypefilelineEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end593:
	.size	_ZN2kc27impl_scopetypefilelinestackC2EPNS_22impl_scopetypefilelineEPS0_, .Lfunc_end593-_ZN2kc27impl_scopetypefilelinestackC2EPNS_22impl_scopetypefilelineEPS0_
                                        # -- End function
	.globl	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC2EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_ # -- Begin function _ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC2EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_
	.p2align	5
	.type	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC2EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_,@function
_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC2EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_: # @_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC2EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	ret
.Lfunc_end594:
	.size	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC2EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_, .Lfunc_end594-_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC2EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITLanguageNameC2EPNS_17impl_integer__IntE # -- Begin function _ZN2kc26impl_IDtype_ITLanguageNameC2EPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITLanguageNameC2EPNS_17impl_integer__IntE,@function
_ZN2kc26impl_IDtype_ITLanguageNameC2EPNS_17impl_integer__IntE: # @_ZN2kc26impl_IDtype_ITLanguageNameC2EPNS_17impl_integer__IntE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc26impl_IDtype_ITLanguageNameE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc26impl_IDtype_ITLanguageNameE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end595:
	.size	_ZN2kc26impl_IDtype_ITLanguageNameC2EPNS_17impl_integer__IntE, .Lfunc_end595-_ZN2kc26impl_IDtype_ITLanguageNameC2EPNS_17impl_integer__IntE
                                        # -- End function
	.globl	_ZN2kc29impl_IDtype_ITPatternVariableC2EPNS_7impl_IDEPNS_17impl_integer__IntE # -- Begin function _ZN2kc29impl_IDtype_ITPatternVariableC2EPNS_7impl_IDEPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc29impl_IDtype_ITPatternVariableC2EPNS_7impl_IDEPNS_17impl_integer__IntE,@function
_ZN2kc29impl_IDtype_ITPatternVariableC2EPNS_7impl_IDEPNS_17impl_integer__IntE: # @_ZN2kc29impl_IDtype_ITPatternVariableC2EPNS_7impl_IDEPNS_17impl_integer__IntE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc29impl_IDtype_ITPatternVariableE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc29impl_IDtype_ITPatternVariableE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end596:
	.size	_ZN2kc29impl_IDtype_ITPatternVariableC2EPNS_7impl_IDEPNS_17impl_integer__IntE, .Lfunc_end596-_ZN2kc29impl_IDtype_ITPatternVariableC2EPNS_7impl_IDEPNS_17impl_integer__IntE
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITUserFunctionC2EPNS_12impl_fnclassE # -- Begin function _ZN2kc26impl_IDtype_ITUserFunctionC2EPNS_12impl_fnclassE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITUserFunctionC2EPNS_12impl_fnclassE,@function
_ZN2kc26impl_IDtype_ITUserFunctionC2EPNS_12impl_fnclassE: # @_ZN2kc26impl_IDtype_ITUserFunctionC2EPNS_12impl_fnclassE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc26impl_IDtype_ITUserFunctionE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc26impl_IDtype_ITUserFunctionE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end597:
	.size	_ZN2kc26impl_IDtype_ITUserFunctionC2EPNS_12impl_fnclassE, .Lfunc_end597-_ZN2kc26impl_IDtype_ITUserFunctionC2EPNS_12impl_fnclassE
                                        # -- End function
	.globl	_ZN2kc23impl_IDtype_ITUserRViewC2Ev # -- Begin function _ZN2kc23impl_IDtype_ITUserRViewC2Ev
	.p2align	5
	.type	_ZN2kc23impl_IDtype_ITUserRViewC2Ev,@function
_ZN2kc23impl_IDtype_ITUserRViewC2Ev:    # @_ZN2kc23impl_IDtype_ITUserRViewC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc23impl_IDtype_ITUserRViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc23impl_IDtype_ITUserRViewE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end598:
	.size	_ZN2kc23impl_IDtype_ITUserRViewC2Ev, .Lfunc_end598-_ZN2kc23impl_IDtype_ITUserRViewC2Ev
                                        # -- End function
	.globl	_ZN2kc29impl_IDtype_ITPredefinedRViewC2Ev # -- Begin function _ZN2kc29impl_IDtype_ITPredefinedRViewC2Ev
	.p2align	5
	.type	_ZN2kc29impl_IDtype_ITPredefinedRViewC2Ev,@function
_ZN2kc29impl_IDtype_ITPredefinedRViewC2Ev: # @_ZN2kc29impl_IDtype_ITPredefinedRViewC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc29impl_IDtype_ITPredefinedRViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc29impl_IDtype_ITPredefinedRViewE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end599:
	.size	_ZN2kc29impl_IDtype_ITPredefinedRViewC2Ev, .Lfunc_end599-_ZN2kc29impl_IDtype_ITPredefinedRViewC2Ev
                                        # -- End function
	.globl	_ZN2kc22impl_IDtype_ITUViewVarC2Ev # -- Begin function _ZN2kc22impl_IDtype_ITUViewVarC2Ev
	.p2align	5
	.type	_ZN2kc22impl_IDtype_ITUViewVarC2Ev,@function
_ZN2kc22impl_IDtype_ITUViewVarC2Ev:     # @_ZN2kc22impl_IDtype_ITUViewVarC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc22impl_IDtype_ITUViewVarE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc22impl_IDtype_ITUViewVarE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end600:
	.size	_ZN2kc22impl_IDtype_ITUViewVarC2Ev, .Lfunc_end600-_ZN2kc22impl_IDtype_ITUViewVarC2Ev
                                        # -- End function
	.globl	_ZN2kc23impl_IDtype_ITUserUViewC2Ev # -- Begin function _ZN2kc23impl_IDtype_ITUserUViewC2Ev
	.p2align	5
	.type	_ZN2kc23impl_IDtype_ITUserUViewC2Ev,@function
_ZN2kc23impl_IDtype_ITUserUViewC2Ev:    # @_ZN2kc23impl_IDtype_ITUserUViewC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc23impl_IDtype_ITUserUViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc23impl_IDtype_ITUserUViewE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end601:
	.size	_ZN2kc23impl_IDtype_ITUserUViewC2Ev, .Lfunc_end601-_ZN2kc23impl_IDtype_ITUserUViewC2Ev
                                        # -- End function
	.globl	_ZN2kc29impl_IDtype_ITPredefinedUViewC2Ev # -- Begin function _ZN2kc29impl_IDtype_ITPredefinedUViewC2Ev
	.p2align	5
	.type	_ZN2kc29impl_IDtype_ITPredefinedUViewC2Ev,@function
_ZN2kc29impl_IDtype_ITPredefinedUViewC2Ev: # @_ZN2kc29impl_IDtype_ITPredefinedUViewC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc29impl_IDtype_ITPredefinedUViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc29impl_IDtype_ITPredefinedUViewE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end602:
	.size	_ZN2kc29impl_IDtype_ITPredefinedUViewC2Ev, .Lfunc_end602-_ZN2kc29impl_IDtype_ITPredefinedUViewC2Ev
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITStorageClassC2Ev # -- Begin function _ZN2kc26impl_IDtype_ITStorageClassC2Ev
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITStorageClassC2Ev,@function
_ZN2kc26impl_IDtype_ITStorageClassC2Ev: # @_ZN2kc26impl_IDtype_ITStorageClassC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc26impl_IDtype_ITStorageClassE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc26impl_IDtype_ITStorageClassE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end603:
	.size	_ZN2kc26impl_IDtype_ITStorageClassC2Ev, .Lfunc_end603-_ZN2kc26impl_IDtype_ITStorageClassC2Ev
                                        # -- End function
	.globl	_ZN2kc36impl_IDtype_ITPredefinedStorageClassC2Ev # -- Begin function _ZN2kc36impl_IDtype_ITPredefinedStorageClassC2Ev
	.p2align	5
	.type	_ZN2kc36impl_IDtype_ITPredefinedStorageClassC2Ev,@function
_ZN2kc36impl_IDtype_ITPredefinedStorageClassC2Ev: # @_ZN2kc36impl_IDtype_ITPredefinedStorageClassC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc36impl_IDtype_ITPredefinedStorageClassE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc36impl_IDtype_ITPredefinedStorageClassE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end604:
	.size	_ZN2kc36impl_IDtype_ITPredefinedStorageClassC2Ev, .Lfunc_end604-_ZN2kc36impl_IDtype_ITPredefinedStorageClassC2Ev
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITUserOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE # -- Begin function _ZN2kc26impl_IDtype_ITUserOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITUserOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE,@function
_ZN2kc26impl_IDtype_ITUserOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE: # @_ZN2kc26impl_IDtype_ITUserOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc26impl_IDtype_ITUserOperatorE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc26impl_IDtype_ITUserOperatorE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end605:
	.size	_ZN2kc26impl_IDtype_ITUserOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE, .Lfunc_end605-_ZN2kc26impl_IDtype_ITUserOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc32impl_IDtype_ITPredefinedOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE # -- Begin function _ZN2kc32impl_IDtype_ITPredefinedOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc32impl_IDtype_ITPredefinedOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE,@function
_ZN2kc32impl_IDtype_ITPredefinedOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE: # @_ZN2kc32impl_IDtype_ITPredefinedOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end606:
	.size	_ZN2kc32impl_IDtype_ITPredefinedOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE, .Lfunc_end606-_ZN2kc32impl_IDtype_ITPredefinedOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc24impl_IDtype_ITUserPhylumC2EPNS_22impl_phylumdeclarationE # -- Begin function _ZN2kc24impl_IDtype_ITUserPhylumC2EPNS_22impl_phylumdeclarationE
	.p2align	5
	.type	_ZN2kc24impl_IDtype_ITUserPhylumC2EPNS_22impl_phylumdeclarationE,@function
_ZN2kc24impl_IDtype_ITUserPhylumC2EPNS_22impl_phylumdeclarationE: # @_ZN2kc24impl_IDtype_ITUserPhylumC2EPNS_22impl_phylumdeclarationE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc24impl_IDtype_ITUserPhylumE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc24impl_IDtype_ITUserPhylumE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end607:
	.size	_ZN2kc24impl_IDtype_ITUserPhylumC2EPNS_22impl_phylumdeclarationE, .Lfunc_end607-_ZN2kc24impl_IDtype_ITUserPhylumC2EPNS_22impl_phylumdeclarationE
                                        # -- End function
	.globl	_ZN2kc30impl_IDtype_ITPredefinedPhylumC2EPNS_22impl_phylumdeclarationE # -- Begin function _ZN2kc30impl_IDtype_ITPredefinedPhylumC2EPNS_22impl_phylumdeclarationE
	.p2align	5
	.type	_ZN2kc30impl_IDtype_ITPredefinedPhylumC2EPNS_22impl_phylumdeclarationE,@function
_ZN2kc30impl_IDtype_ITPredefinedPhylumC2EPNS_22impl_phylumdeclarationE: # @_ZN2kc30impl_IDtype_ITPredefinedPhylumC2EPNS_22impl_phylumdeclarationE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end608:
	.size	_ZN2kc30impl_IDtype_ITPredefinedPhylumC2EPNS_22impl_phylumdeclarationE, .Lfunc_end608-_ZN2kc30impl_IDtype_ITPredefinedPhylumC2EPNS_22impl_phylumdeclarationE
                                        # -- End function
	.globl	_ZN2kc21impl_IDtype_ITUnknownC2Ev # -- Begin function _ZN2kc21impl_IDtype_ITUnknownC2Ev
	.p2align	5
	.type	_ZN2kc21impl_IDtype_ITUnknownC2Ev,@function
_ZN2kc21impl_IDtype_ITUnknownC2Ev:      # @_ZN2kc21impl_IDtype_ITUnknownC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_IDtype_ITUnknownE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_IDtype_ITUnknownE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end609:
	.size	_ZN2kc21impl_IDtype_ITUnknownC2Ev, .Lfunc_end609-_ZN2kc21impl_IDtype_ITUnknownC2Ev
                                        # -- End function
	.globl	_ZN2kc14impl_operatorsC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc14impl_operatorsC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc14impl_operatorsC2EPNS_7impl_IDEPS0_,@function
_ZN2kc14impl_operatorsC2EPNS_7impl_IDEPS0_: # @_ZN2kc14impl_operatorsC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc14impl_operatorsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc14impl_operatorsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end610:
	.size	_ZN2kc14impl_operatorsC2EPNS_7impl_IDEPS0_, .Lfunc_end610-_ZN2kc14impl_operatorsC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc10impl_phylaC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc10impl_phylaC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc10impl_phylaC2EPNS_7impl_IDEPS0_,@function
_ZN2kc10impl_phylaC2EPNS_7impl_IDEPS0_: # @_ZN2kc10impl_phylaC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc10impl_phylaE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc10impl_phylaE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end611:
	.size	_ZN2kc10impl_phylaC2EPNS_7impl_IDEPS0_, .Lfunc_end611-_ZN2kc10impl_phylaC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc14impl_variablesC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc14impl_variablesC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc14impl_variablesC2EPNS_7impl_IDEPS0_,@function
_ZN2kc14impl_variablesC2EPNS_7impl_IDEPS0_: # @_ZN2kc14impl_variablesC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc14impl_variablesE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc14impl_variablesE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end612:
	.size	_ZN2kc14impl_variablesC2EPNS_7impl_IDEPS0_, .Lfunc_end612-_ZN2kc14impl_variablesC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc33impl_dollarvarstatus_DVDisallowedC2Ev # -- Begin function _ZN2kc33impl_dollarvarstatus_DVDisallowedC2Ev
	.p2align	5
	.type	_ZN2kc33impl_dollarvarstatus_DVDisallowedC2Ev,@function
_ZN2kc33impl_dollarvarstatus_DVDisallowedC2Ev: # @_ZN2kc33impl_dollarvarstatus_DVDisallowedC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_dollarvarstatus_DVDisallowedE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_dollarvarstatus_DVDisallowedE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end613:
	.size	_ZN2kc33impl_dollarvarstatus_DVDisallowedC2Ev, .Lfunc_end613-_ZN2kc33impl_dollarvarstatus_DVDisallowedC2Ev
                                        # -- End function
	.globl	_ZN2kc30impl_dollarvarstatus_DVAllowedC2Ev # -- Begin function _ZN2kc30impl_dollarvarstatus_DVAllowedC2Ev
	.p2align	5
	.type	_ZN2kc30impl_dollarvarstatus_DVAllowedC2Ev,@function
_ZN2kc30impl_dollarvarstatus_DVAllowedC2Ev: # @_ZN2kc30impl_dollarvarstatus_DVAllowedC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc30impl_dollarvarstatus_DVAllowedE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc30impl_dollarvarstatus_DVAllowedE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end614:
	.size	_ZN2kc30impl_dollarvarstatus_DVAllowedC2Ev, .Lfunc_end614-_ZN2kc30impl_dollarvarstatus_DVAllowedC2Ev
                                        # -- End function
	.globl	_ZN2kc19impl_tribool_BiggerC2Ev # -- Begin function _ZN2kc19impl_tribool_BiggerC2Ev
	.p2align	5
	.type	_ZN2kc19impl_tribool_BiggerC2Ev,@function
_ZN2kc19impl_tribool_BiggerC2Ev:        # @_ZN2kc19impl_tribool_BiggerC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc19impl_tribool_BiggerE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc19impl_tribool_BiggerE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end615:
	.size	_ZN2kc19impl_tribool_BiggerC2Ev, .Lfunc_end615-_ZN2kc19impl_tribool_BiggerC2Ev
                                        # -- End function
	.globl	_ZN2kc20impl_tribool_SmallerC2Ev # -- Begin function _ZN2kc20impl_tribool_SmallerC2Ev
	.p2align	5
	.type	_ZN2kc20impl_tribool_SmallerC2Ev,@function
_ZN2kc20impl_tribool_SmallerC2Ev:       # @_ZN2kc20impl_tribool_SmallerC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc20impl_tribool_SmallerE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc20impl_tribool_SmallerE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end616:
	.size	_ZN2kc20impl_tribool_SmallerC2Ev, .Lfunc_end616-_ZN2kc20impl_tribool_SmallerC2Ev
                                        # -- End function
	.globl	_ZN2kc18impl_tribool_EqualC2Ev  # -- Begin function _ZN2kc18impl_tribool_EqualC2Ev
	.p2align	5
	.type	_ZN2kc18impl_tribool_EqualC2Ev,@function
_ZN2kc18impl_tribool_EqualC2Ev:         # @_ZN2kc18impl_tribool_EqualC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc18impl_tribool_EqualE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc18impl_tribool_EqualE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end617:
	.size	_ZN2kc18impl_tribool_EqualC2Ev, .Lfunc_end617-_ZN2kc18impl_tribool_EqualC2Ev
                                        # -- End function
	.globl	_ZN2kc27impl_patternrepresentationsC2EPNS_26impl_patternrepresentationEPS0_ # -- Begin function _ZN2kc27impl_patternrepresentationsC2EPNS_26impl_patternrepresentationEPS0_
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentationsC2EPNS_26impl_patternrepresentationEPS0_,@function
_ZN2kc27impl_patternrepresentationsC2EPNS_26impl_patternrepresentationEPS0_: # @_ZN2kc27impl_patternrepresentationsC2EPNS_26impl_patternrepresentationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc27impl_patternrepresentationsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc27impl_patternrepresentationsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end618:
	.size	_ZN2kc27impl_patternrepresentationsC2EPNS_26impl_patternrepresentationEPS0_, .Lfunc_end618-_ZN2kc27impl_patternrepresentationsC2EPNS_26impl_patternrepresentationEPS0_
                                        # -- End function
	.globl	_ZN2kc26impl_patternrepresentationC2EPNS_31impl_elem_patternrepresentationEPS0_ # -- Begin function _ZN2kc26impl_patternrepresentationC2EPNS_31impl_elem_patternrepresentationEPS0_
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentationC2EPNS_31impl_elem_patternrepresentationEPS0_,@function
_ZN2kc26impl_patternrepresentationC2EPNS_31impl_elem_patternrepresentationEPS0_: # @_ZN2kc26impl_patternrepresentationC2EPNS_31impl_elem_patternrepresentationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc26impl_patternrepresentationE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc26impl_patternrepresentationE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end619:
	.size	_ZN2kc26impl_patternrepresentationC2EPNS_31impl_elem_patternrepresentationEPS0_, .Lfunc_end619-_ZN2kc26impl_patternrepresentationC2EPNS_31impl_elem_patternrepresentationEPS0_
                                        # -- End function
	.globl	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC2EPNS_9impl_pathEPNS_8impl_INTE # -- Begin function _ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC2EPNS_9impl_pathEPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC2EPNS_9impl_pathEPNS_8impl_INTE,@function
_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC2EPNS_9impl_pathEPNS_8impl_INTE: # @_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC2EPNS_9impl_pathEPNS_8impl_INTE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc44impl_elem_patternrepresentation_PRIntLiteralE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc44impl_elem_patternrepresentation_PRIntLiteralE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	ret
.Lfunc_end620:
	.size	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC2EPNS_9impl_pathEPNS_8impl_INTE, .Lfunc_end620-_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC2EPNS_9impl_pathEPNS_8impl_INTE
                                        # -- End function
	.globl	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC2EPNS_9impl_pathEPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC2EPNS_9impl_pathEPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC2EPNS_9impl_pathEPNS_18impl_CexpressionDQE,@function
_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC2EPNS_9impl_pathEPNS_18impl_CexpressionDQE: # @_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC2EPNS_9impl_pathEPNS_18impl_CexpressionDQE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc47impl_elem_patternrepresentation_PRStringLiteralE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc47impl_elem_patternrepresentation_PRStringLiteralE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	ret
.Lfunc_end621:
	.size	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC2EPNS_9impl_pathEPNS_18impl_CexpressionDQE, .Lfunc_end621-_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC2EPNS_9impl_pathEPNS_18impl_CexpressionDQE
                                        # -- End function
	.globl	_ZN2kc41impl_elem_patternrepresentation_PRDefaultC2Ev # -- Begin function _ZN2kc41impl_elem_patternrepresentation_PRDefaultC2Ev
	.p2align	5
	.type	_ZN2kc41impl_elem_patternrepresentation_PRDefaultC2Ev,@function
_ZN2kc41impl_elem_patternrepresentation_PRDefaultC2Ev: # @_ZN2kc41impl_elem_patternrepresentation_PRDefaultC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_elem_patternrepresentation_PRDefaultE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_elem_patternrepresentation_PRDefaultE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end622:
	.size	_ZN2kc41impl_elem_patternrepresentation_PRDefaultC2Ev, .Lfunc_end622-_ZN2kc41impl_elem_patternrepresentation_PRDefaultC2Ev
                                        # -- End function
	.globl	_ZN2kc42impl_elem_patternrepresentation_PRWildcardC2EPNS_9impl_pathE # -- Begin function _ZN2kc42impl_elem_patternrepresentation_PRWildcardC2EPNS_9impl_pathE
	.p2align	5
	.type	_ZN2kc42impl_elem_patternrepresentation_PRWildcardC2EPNS_9impl_pathE,@function
_ZN2kc42impl_elem_patternrepresentation_PRWildcardC2EPNS_9impl_pathE: # @_ZN2kc42impl_elem_patternrepresentation_PRWildcardC2EPNS_9impl_pathE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc42impl_elem_patternrepresentation_PRWildcardE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc42impl_elem_patternrepresentation_PRWildcardE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end623:
	.size	_ZN2kc42impl_elem_patternrepresentation_PRWildcardC2EPNS_9impl_pathE, .Lfunc_end623-_ZN2kc42impl_elem_patternrepresentation_PRWildcardC2EPNS_9impl_pathE
                                        # -- End function
	.globl	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC2EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE # -- Begin function _ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC2EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.p2align	5
	.type	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC2EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE,@function
_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC2EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE: # @_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC2EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	st.d	$a3, $a0, 48
	ret
.Lfunc_end624:
	.size	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC2EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE, .Lfunc_end624-_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC2EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE
                                        # -- End function
	.globl	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC2EPNS_16impl_CexpressionE # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC2EPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC2EPNS_16impl_CexpressionE,@function
_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC2EPNS_16impl_CexpressionE: # @_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC2EPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc47impl_elem_patternrepresentation_PRUserPredicateE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc47impl_elem_patternrepresentation_PRUserPredicateE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 32
	ret
.Lfunc_end625:
	.size	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC2EPNS_16impl_CexpressionE, .Lfunc_end625-_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC2EPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc47impl_elem_patternrepresentation_PROperPredicateC2EPNS_9impl_pathEPNS_7impl_IDE # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PROperPredicateC2EPNS_9impl_pathEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PROperPredicateC2EPNS_9impl_pathEPNS_7impl_IDE,@function
_ZN2kc47impl_elem_patternrepresentation_PROperPredicateC2EPNS_9impl_pathEPNS_7impl_IDE: # @_ZN2kc47impl_elem_patternrepresentation_PROperPredicateC2EPNS_9impl_pathEPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc47impl_elem_patternrepresentation_PROperPredicateE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc47impl_elem_patternrepresentation_PROperPredicateE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	ret
.Lfunc_end626:
	.size	_ZN2kc47impl_elem_patternrepresentation_PROperPredicateC2EPNS_9impl_pathEPNS_7impl_IDE, .Lfunc_end626-_ZN2kc47impl_elem_patternrepresentation_PROperPredicateC2EPNS_9impl_pathEPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC2EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE # -- Begin function _ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC2EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.p2align	5
	.type	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC2EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE,@function
_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC2EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE: # @_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC2EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc46impl_elem_patternrepresentation_PRVarPredicateE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc46impl_elem_patternrepresentation_PRVarPredicateE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	st.d	$a3, $a0, 48
	ret
.Lfunc_end627:
	.size	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC2EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE, .Lfunc_end627-_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC2EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE
                                        # -- End function
	.globl	_ZN2kc41impl_elem_patternrepresentation_PRBindingC2EPNS_9impl_pathEPNS_7impl_IDE # -- Begin function _ZN2kc41impl_elem_patternrepresentation_PRBindingC2EPNS_9impl_pathEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc41impl_elem_patternrepresentation_PRBindingC2EPNS_9impl_pathEPNS_7impl_IDE,@function
_ZN2kc41impl_elem_patternrepresentation_PRBindingC2EPNS_9impl_pathEPNS_7impl_IDE: # @_ZN2kc41impl_elem_patternrepresentation_PRBindingC2EPNS_9impl_pathEPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc41impl_elem_patternrepresentation_PRBindingE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc41impl_elem_patternrepresentation_PRBindingE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 32
	st.d	$a2, $a0, 40
	ret
.Lfunc_end628:
	.size	_ZN2kc41impl_elem_patternrepresentation_PRBindingC2EPNS_9impl_pathEPNS_7impl_IDE, .Lfunc_end628-_ZN2kc41impl_elem_patternrepresentation_PRBindingC2EPNS_9impl_pathEPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc9impl_pathC2EPNS_17impl_integer__IntEPS0_ # -- Begin function _ZN2kc9impl_pathC2EPNS_17impl_integer__IntEPS0_
	.p2align	5
	.type	_ZN2kc9impl_pathC2EPNS_17impl_integer__IntEPS0_,@function
_ZN2kc9impl_pathC2EPNS_17impl_integer__IntEPS0_: # @_ZN2kc9impl_pathC2EPNS_17impl_integer__IntEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc9impl_pathE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc9impl_pathE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 24
	st.d	$a2, $a0, 32
	ret
.Lfunc_end629:
	.size	_ZN2kc9impl_pathC2EPNS_17impl_integer__IntEPS0_, .Lfunc_end629-_ZN2kc9impl_pathC2EPNS_17impl_integer__IntEPS0_
                                        # -- End function
	.globl	_ZN2kc10impl_pathsC2EPNS_9impl_pathEPS0_ # -- Begin function _ZN2kc10impl_pathsC2EPNS_9impl_pathEPS0_
	.p2align	5
	.type	_ZN2kc10impl_pathsC2EPNS_9impl_pathEPS0_,@function
_ZN2kc10impl_pathsC2EPNS_9impl_pathEPS0_: # @_ZN2kc10impl_pathsC2EPNS_9impl_pathEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc10impl_pathsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc10impl_pathsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end630:
	.size	_ZN2kc10impl_pathsC2EPNS_9impl_pathEPS0_, .Lfunc_end630-_ZN2kc10impl_pathsC2EPNS_9impl_pathEPS0_
                                        # -- End function
	.globl	_ZN2kc16impl_argsnumbersC2EPNS_17impl_integer__IntEPS0_ # -- Begin function _ZN2kc16impl_argsnumbersC2EPNS_17impl_integer__IntEPS0_
	.p2align	5
	.type	_ZN2kc16impl_argsnumbersC2EPNS_17impl_integer__IntEPS0_,@function
_ZN2kc16impl_argsnumbersC2EPNS_17impl_integer__IntEPS0_: # @_ZN2kc16impl_argsnumbersC2EPNS_17impl_integer__IntEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc16impl_argsnumbersE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc16impl_argsnumbersE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end631:
	.size	_ZN2kc16impl_argsnumbersC2EPNS_17impl_integer__IntEPS0_, .Lfunc_end631-_ZN2kc16impl_argsnumbersC2EPNS_17impl_integer__IntEPS0_
                                        # -- End function
	.globl	_ZN2kc21impl_rewriterulesinfoC2EPNS_20impl_rewriteruleinfoEPS0_ # -- Begin function _ZN2kc21impl_rewriterulesinfoC2EPNS_20impl_rewriteruleinfoEPS0_
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfoC2EPNS_20impl_rewriteruleinfoEPS0_,@function
_ZN2kc21impl_rewriterulesinfoC2EPNS_20impl_rewriteruleinfoEPS0_: # @_ZN2kc21impl_rewriterulesinfoC2EPNS_20impl_rewriteruleinfoEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc21impl_rewriterulesinfoE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc21impl_rewriterulesinfoE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end632:
	.size	_ZN2kc21impl_rewriterulesinfoC2EPNS_20impl_rewriteruleinfoEPS0_, .Lfunc_end632-_ZN2kc21impl_rewriterulesinfoC2EPNS_20impl_rewriteruleinfoEPS0_
                                        # -- End function
	.globl	_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE # -- Begin function _ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE
	.p2align	5
	.type	_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE,@function
_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE: # @_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end633:
	.size	_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE, .Lfunc_end633-_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE
                                        # -- End function
	.globl	_ZN2kc18impl_withcasesinfoC2EPNS_17impl_withcaseinfoEPS0_ # -- Begin function _ZN2kc18impl_withcasesinfoC2EPNS_17impl_withcaseinfoEPS0_
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfoC2EPNS_17impl_withcaseinfoEPS0_,@function
_ZN2kc18impl_withcasesinfoC2EPNS_17impl_withcaseinfoEPS0_: # @_ZN2kc18impl_withcasesinfoC2EPNS_17impl_withcaseinfoEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc18impl_withcasesinfoE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc18impl_withcasesinfoE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end634:
	.size	_ZN2kc18impl_withcasesinfoC2EPNS_17impl_withcaseinfoEPS0_, .Lfunc_end634-_ZN2kc18impl_withcasesinfoC2EPNS_17impl_withcaseinfoEPS0_
                                        # -- End function
	.globl	_ZN2kc30impl_withcaseinfo_WithcaseinfoC2EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE # -- Begin function _ZN2kc30impl_withcaseinfo_WithcaseinfoC2EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc30impl_withcaseinfo_WithcaseinfoC2EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE,@function
_ZN2kc30impl_withcaseinfo_WithcaseinfoC2EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE: # @_ZN2kc30impl_withcaseinfo_WithcaseinfoC2EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end635:
	.size	_ZN2kc30impl_withcaseinfo_WithcaseinfoC2EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE, .Lfunc_end635-_ZN2kc30impl_withcaseinfo_WithcaseinfoC2EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE
                                        # -- End function
	.globl	_ZN2kc21impl_rewriteviewsinfoC2EPNS_20impl_rewriteviewinfoEPS0_ # -- Begin function _ZN2kc21impl_rewriteviewsinfoC2EPNS_20impl_rewriteviewinfoEPS0_
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfoC2EPNS_20impl_rewriteviewinfoEPS0_,@function
_ZN2kc21impl_rewriteviewsinfoC2EPNS_20impl_rewriteviewinfoEPS0_: # @_ZN2kc21impl_rewriteviewsinfoC2EPNS_20impl_rewriteviewinfoEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end636:
	.size	_ZN2kc21impl_rewriteviewsinfoC2EPNS_20impl_rewriteviewinfoEPS0_, .Lfunc_end636-_ZN2kc21impl_rewriteviewsinfoC2EPNS_20impl_rewriteviewinfoEPS0_
                                        # -- End function
	.globl	_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC2EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE # -- Begin function _ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC2EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE
	.p2align	5
	.type	_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC2EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE,@function
_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC2EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE: # @_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC2EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end637:
	.size	_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC2EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE, .Lfunc_end637-_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC2EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE
                                        # -- End function
	.globl	_ZN2kc21impl_unparseviewsinfoC2EPNS_20impl_unparseviewinfoEPS0_ # -- Begin function _ZN2kc21impl_unparseviewsinfoC2EPNS_20impl_unparseviewinfoEPS0_
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfoC2EPNS_20impl_unparseviewinfoEPS0_,@function
_ZN2kc21impl_unparseviewsinfoC2EPNS_20impl_unparseviewinfoEPS0_: # @_ZN2kc21impl_unparseviewsinfoC2EPNS_20impl_unparseviewinfoEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc21impl_unparseviewsinfoE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc21impl_unparseviewsinfoE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end638:
	.size	_ZN2kc21impl_unparseviewsinfoC2EPNS_20impl_unparseviewinfoEPS0_, .Lfunc_end638-_ZN2kc21impl_unparseviewsinfoC2EPNS_20impl_unparseviewinfoEPS0_
                                        # -- End function
	.globl	_ZN2kc36impl_unparseviewinfo_UnparseviewinfoC2EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE # -- Begin function _ZN2kc36impl_unparseviewinfo_UnparseviewinfoC2EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE
	.p2align	5
	.type	_ZN2kc36impl_unparseviewinfo_UnparseviewinfoC2EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE,@function
_ZN2kc36impl_unparseviewinfo_UnparseviewinfoC2EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE: # @_ZN2kc36impl_unparseviewinfo_UnparseviewinfoC2EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end639:
	.size	_ZN2kc36impl_unparseviewinfo_UnparseviewinfoC2EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE, .Lfunc_end639-_ZN2kc36impl_unparseviewinfo_UnparseviewinfoC2EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE
                                        # -- End function
	.globl	_ZN2kc21impl_unparsedeclsinfoC2EPNS_20impl_unparsedeclinfoEPS0_ # -- Begin function _ZN2kc21impl_unparsedeclsinfoC2EPNS_20impl_unparsedeclinfoEPS0_
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfoC2EPNS_20impl_unparsedeclinfoEPS0_,@function
_ZN2kc21impl_unparsedeclsinfoC2EPNS_20impl_unparsedeclinfoEPS0_: # @_ZN2kc21impl_unparsedeclsinfoC2EPNS_20impl_unparsedeclinfoEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end640:
	.size	_ZN2kc21impl_unparsedeclsinfoC2EPNS_20impl_unparsedeclinfoEPS0_, .Lfunc_end640-_ZN2kc21impl_unparsedeclsinfoC2EPNS_20impl_unparsedeclinfoEPS0_
                                        # -- End function
	.globl	_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE # -- Begin function _ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE
	.p2align	5
	.type	_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE,@function
_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE: # @_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end641:
	.size	_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE, .Lfunc_end641-_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE
                                        # -- End function
	.globl	_ZN2kc33impl_ac_declaration_AcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE # -- Begin function _ZN2kc33impl_ac_declaration_AcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE
	.p2align	5
	.type	_ZN2kc33impl_ac_declaration_AcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE,@function
_ZN2kc33impl_ac_declaration_AcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE: # @_ZN2kc33impl_ac_declaration_AcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc33impl_ac_declaration_AcDeclarationE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc33impl_ac_declaration_AcDeclarationE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end642:
	.size	_ZN2kc33impl_ac_declaration_AcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE, .Lfunc_end642-_ZN2kc33impl_ac_declaration_AcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE
                                        # -- End function
	.globl	_ZN2kc24impl_ac_declaration_listC2EPNS_19impl_ac_declarationEPS0_ # -- Begin function _ZN2kc24impl_ac_declaration_listC2EPNS_19impl_ac_declarationEPS0_
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_listC2EPNS_19impl_ac_declarationEPS0_,@function
_ZN2kc24impl_ac_declaration_listC2EPNS_19impl_ac_declarationEPS0_: # @_ZN2kc24impl_ac_declaration_listC2EPNS_19impl_ac_declarationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc24impl_ac_declaration_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc24impl_ac_declaration_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end643:
	.size	_ZN2kc24impl_ac_declaration_listC2EPNS_19impl_ac_declarationEPS0_, .Lfunc_end643-_ZN2kc24impl_ac_declaration_listC2EPNS_19impl_ac_declarationEPS0_
                                        # -- End function
	.globl	_ZN2kc30impl_ac_declaration_specifiersC2EPNS_29impl_ac_declaration_specifierEPS0_ # -- Begin function _ZN2kc30impl_ac_declaration_specifiersC2EPNS_29impl_ac_declaration_specifierEPS0_
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiersC2EPNS_29impl_ac_declaration_specifierEPS0_,@function
_ZN2kc30impl_ac_declaration_specifiersC2EPNS_29impl_ac_declaration_specifierEPS0_: # @_ZN2kc30impl_ac_declaration_specifiersC2EPNS_29impl_ac_declaration_specifierEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end644:
	.size	_ZN2kc30impl_ac_declaration_specifiersC2EPNS_29impl_ac_declaration_specifierEPS0_, .Lfunc_end644-_ZN2kc30impl_ac_declaration_specifiersC2EPNS_29impl_ac_declaration_specifierEPS0_
                                        # -- End function
	.globl	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC2EPNS_22impl_ac_type_qualifierE # -- Begin function _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC2EPNS_22impl_ac_type_qualifierE
	.p2align	5
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC2EPNS_22impl_ac_type_qualifierE,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC2EPNS_22impl_ac_type_qualifierE: # @_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC2EPNS_22impl_ac_type_qualifierE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end645:
	.size	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC2EPNS_22impl_ac_type_qualifierE, .Lfunc_end645-_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC2EPNS_22impl_ac_type_qualifierE
                                        # -- End function
	.globl	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC2EPNS_22impl_ac_type_specifierE # -- Begin function _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC2EPNS_22impl_ac_type_specifierE
	.p2align	5
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC2EPNS_22impl_ac_type_specifierE,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC2EPNS_22impl_ac_type_specifierE: # @_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC2EPNS_22impl_ac_type_specifierE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end646:
	.size	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC2EPNS_22impl_ac_type_specifierE, .Lfunc_end646-_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC2EPNS_22impl_ac_type_specifierE
                                        # -- End function
	.globl	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC2EPNS_31impl_ac_storage_class_specifierE # -- Begin function _ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC2EPNS_31impl_ac_storage_class_specifierE
	.p2align	5
	.type	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC2EPNS_31impl_ac_storage_class_specifierE,@function
_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC2EPNS_31impl_ac_storage_class_specifierE: # @_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC2EPNS_31impl_ac_storage_class_specifierE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end647:
	.size	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC2EPNS_31impl_ac_storage_class_specifierE, .Lfunc_end647-_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC2EPNS_31impl_ac_storage_class_specifierE
                                        # -- End function
	.globl	_ZN2kc41impl_ac_storage_class_specifier_AcVirtualC2Ev # -- Begin function _ZN2kc41impl_ac_storage_class_specifier_AcVirtualC2Ev
	.p2align	5
	.type	_ZN2kc41impl_ac_storage_class_specifier_AcVirtualC2Ev,@function
_ZN2kc41impl_ac_storage_class_specifier_AcVirtualC2Ev: # @_ZN2kc41impl_ac_storage_class_specifier_AcVirtualC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_ac_storage_class_specifier_AcVirtualE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_ac_storage_class_specifier_AcVirtualE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end648:
	.size	_ZN2kc41impl_ac_storage_class_specifier_AcVirtualC2Ev, .Lfunc_end648-_ZN2kc41impl_ac_storage_class_specifier_AcVirtualC2Ev
                                        # -- End function
	.globl	_ZN2kc41impl_ac_storage_class_specifier_AcTypedefC2Ev # -- Begin function _ZN2kc41impl_ac_storage_class_specifier_AcTypedefC2Ev
	.p2align	5
	.type	_ZN2kc41impl_ac_storage_class_specifier_AcTypedefC2Ev,@function
_ZN2kc41impl_ac_storage_class_specifier_AcTypedefC2Ev: # @_ZN2kc41impl_ac_storage_class_specifier_AcTypedefC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_ac_storage_class_specifier_AcTypedefE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_ac_storage_class_specifier_AcTypedefE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end649:
	.size	_ZN2kc41impl_ac_storage_class_specifier_AcTypedefC2Ev, .Lfunc_end649-_ZN2kc41impl_ac_storage_class_specifier_AcTypedefC2Ev
                                        # -- End function
	.globl	_ZN2kc40impl_ac_storage_class_specifier_AcExternC2Ev # -- Begin function _ZN2kc40impl_ac_storage_class_specifier_AcExternC2Ev
	.p2align	5
	.type	_ZN2kc40impl_ac_storage_class_specifier_AcExternC2Ev,@function
_ZN2kc40impl_ac_storage_class_specifier_AcExternC2Ev: # @_ZN2kc40impl_ac_storage_class_specifier_AcExternC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc40impl_ac_storage_class_specifier_AcExternE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc40impl_ac_storage_class_specifier_AcExternE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end650:
	.size	_ZN2kc40impl_ac_storage_class_specifier_AcExternC2Ev, .Lfunc_end650-_ZN2kc40impl_ac_storage_class_specifier_AcExternC2Ev
                                        # -- End function
	.globl	_ZN2kc40impl_ac_storage_class_specifier_AcStaticC2Ev # -- Begin function _ZN2kc40impl_ac_storage_class_specifier_AcStaticC2Ev
	.p2align	5
	.type	_ZN2kc40impl_ac_storage_class_specifier_AcStaticC2Ev,@function
_ZN2kc40impl_ac_storage_class_specifier_AcStaticC2Ev: # @_ZN2kc40impl_ac_storage_class_specifier_AcStaticC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc40impl_ac_storage_class_specifier_AcStaticE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc40impl_ac_storage_class_specifier_AcStaticE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end651:
	.size	_ZN2kc40impl_ac_storage_class_specifier_AcStaticC2Ev, .Lfunc_end651-_ZN2kc40impl_ac_storage_class_specifier_AcStaticC2Ev
                                        # -- End function
	.globl	_ZN2kc42impl_ac_storage_class_specifier_AcRegisterC2Ev # -- Begin function _ZN2kc42impl_ac_storage_class_specifier_AcRegisterC2Ev
	.p2align	5
	.type	_ZN2kc42impl_ac_storage_class_specifier_AcRegisterC2Ev,@function
_ZN2kc42impl_ac_storage_class_specifier_AcRegisterC2Ev: # @_ZN2kc42impl_ac_storage_class_specifier_AcRegisterC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc42impl_ac_storage_class_specifier_AcRegisterE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc42impl_ac_storage_class_specifier_AcRegisterE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end652:
	.size	_ZN2kc42impl_ac_storage_class_specifier_AcRegisterC2Ev, .Lfunc_end652-_ZN2kc42impl_ac_storage_class_specifier_AcRegisterC2Ev
                                        # -- End function
	.globl	_ZN2kc38impl_ac_storage_class_specifier_AcAutoC2Ev # -- Begin function _ZN2kc38impl_ac_storage_class_specifier_AcAutoC2Ev
	.p2align	5
	.type	_ZN2kc38impl_ac_storage_class_specifier_AcAutoC2Ev,@function
_ZN2kc38impl_ac_storage_class_specifier_AcAutoC2Ev: # @_ZN2kc38impl_ac_storage_class_specifier_AcAutoC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc38impl_ac_storage_class_specifier_AcAutoE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc38impl_ac_storage_class_specifier_AcAutoE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end653:
	.size	_ZN2kc38impl_ac_storage_class_specifier_AcAutoC2Ev, .Lfunc_end653-_ZN2kc38impl_ac_storage_class_specifier_AcAutoC2Ev
                                        # -- End function
	.globl	_ZN2kc33impl_ac_type_specifier_AcTypeSpecC2EPNS_7impl_IDE # -- Begin function _ZN2kc33impl_ac_type_specifier_AcTypeSpecC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc33impl_ac_type_specifier_AcTypeSpecC2EPNS_7impl_IDE,@function
_ZN2kc33impl_ac_type_specifier_AcTypeSpecC2EPNS_7impl_IDE: # @_ZN2kc33impl_ac_type_specifier_AcTypeSpecC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end654:
	.size	_ZN2kc33impl_ac_type_specifier_AcTypeSpecC2EPNS_7impl_IDE, .Lfunc_end654-_ZN2kc33impl_ac_type_specifier_AcTypeSpecC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc36impl_ac_type_qualifier_AcNoQualifierC2Ev # -- Begin function _ZN2kc36impl_ac_type_qualifier_AcNoQualifierC2Ev
	.p2align	5
	.type	_ZN2kc36impl_ac_type_qualifier_AcNoQualifierC2Ev,@function
_ZN2kc36impl_ac_type_qualifier_AcNoQualifierC2Ev: # @_ZN2kc36impl_ac_type_qualifier_AcNoQualifierC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc36impl_ac_type_qualifier_AcNoQualifierE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc36impl_ac_type_qualifier_AcNoQualifierE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end655:
	.size	_ZN2kc36impl_ac_type_qualifier_AcNoQualifierC2Ev, .Lfunc_end655-_ZN2kc36impl_ac_type_qualifier_AcNoQualifierC2Ev
                                        # -- End function
	.globl	_ZN2kc33impl_ac_type_qualifier_AcUnsignedC2Ev # -- Begin function _ZN2kc33impl_ac_type_qualifier_AcUnsignedC2Ev
	.p2align	5
	.type	_ZN2kc33impl_ac_type_qualifier_AcUnsignedC2Ev,@function
_ZN2kc33impl_ac_type_qualifier_AcUnsignedC2Ev: # @_ZN2kc33impl_ac_type_qualifier_AcUnsignedC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_ac_type_qualifier_AcUnsignedE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_ac_type_qualifier_AcUnsignedE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end656:
	.size	_ZN2kc33impl_ac_type_qualifier_AcUnsignedC2Ev, .Lfunc_end656-_ZN2kc33impl_ac_type_qualifier_AcUnsignedC2Ev
                                        # -- End function
	.globl	_ZN2kc33impl_ac_type_qualifier_AcVolatileC2Ev # -- Begin function _ZN2kc33impl_ac_type_qualifier_AcVolatileC2Ev
	.p2align	5
	.type	_ZN2kc33impl_ac_type_qualifier_AcVolatileC2Ev,@function
_ZN2kc33impl_ac_type_qualifier_AcVolatileC2Ev: # @_ZN2kc33impl_ac_type_qualifier_AcVolatileC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_ac_type_qualifier_AcVolatileE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_ac_type_qualifier_AcVolatileE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end657:
	.size	_ZN2kc33impl_ac_type_qualifier_AcVolatileC2Ev, .Lfunc_end657-_ZN2kc33impl_ac_type_qualifier_AcVolatileC2Ev
                                        # -- End function
	.globl	_ZN2kc30impl_ac_type_qualifier_AcConstC2Ev # -- Begin function _ZN2kc30impl_ac_type_qualifier_AcConstC2Ev
	.p2align	5
	.type	_ZN2kc30impl_ac_type_qualifier_AcConstC2Ev,@function
_ZN2kc30impl_ac_type_qualifier_AcConstC2Ev: # @_ZN2kc30impl_ac_type_qualifier_AcConstC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc30impl_ac_type_qualifier_AcConstE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc30impl_ac_type_qualifier_AcConstE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end658:
	.size	_ZN2kc30impl_ac_type_qualifier_AcConstC2Ev, .Lfunc_end658-_ZN2kc30impl_ac_type_qualifier_AcConstC2Ev
                                        # -- End function
	.globl	_ZN2kc28impl_ac_init_declarator_listC2EPNS_23impl_ac_init_declaratorEPS0_ # -- Begin function _ZN2kc28impl_ac_init_declarator_listC2EPNS_23impl_ac_init_declaratorEPS0_
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_listC2EPNS_23impl_ac_init_declaratorEPS0_,@function
_ZN2kc28impl_ac_init_declarator_listC2EPNS_23impl_ac_init_declaratorEPS0_: # @_ZN2kc28impl_ac_init_declarator_listC2EPNS_23impl_ac_init_declaratorEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end659:
	.size	_ZN2kc28impl_ac_init_declarator_listC2EPNS_23impl_ac_init_declaratorEPS0_, .Lfunc_end659-_ZN2kc28impl_ac_init_declarator_listC2EPNS_23impl_ac_init_declaratorEPS0_
                                        # -- End function
	.globl	_ZN2kc34impl_ac_init_declarator_AcInitDeclC2EPNS_18impl_ac_declaratorE # -- Begin function _ZN2kc34impl_ac_init_declarator_AcInitDeclC2EPNS_18impl_ac_declaratorE
	.p2align	5
	.type	_ZN2kc34impl_ac_init_declarator_AcInitDeclC2EPNS_18impl_ac_declaratorE,@function
_ZN2kc34impl_ac_init_declarator_AcInitDeclC2EPNS_18impl_ac_declaratorE: # @_ZN2kc34impl_ac_init_declarator_AcInitDeclC2EPNS_18impl_ac_declaratorE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end660:
	.size	_ZN2kc34impl_ac_init_declarator_AcInitDeclC2EPNS_18impl_ac_declaratorE, .Lfunc_end660-_ZN2kc34impl_ac_init_declarator_AcInitDeclC2EPNS_18impl_ac_declaratorE
                                        # -- End function
	.globl	_ZN2kc31impl_ac_declarator_AcDeclaratorC2EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE # -- Begin function _ZN2kc31impl_ac_declarator_AcDeclaratorC2EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE
	.p2align	5
	.type	_ZN2kc31impl_ac_declarator_AcDeclaratorC2EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE,@function
_ZN2kc31impl_ac_declarator_AcDeclaratorC2EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE: # @_ZN2kc31impl_ac_declarator_AcDeclaratorC2EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc31impl_ac_declarator_AcDeclaratorE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc31impl_ac_declarator_AcDeclaratorE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end661:
	.size	_ZN2kc31impl_ac_declarator_AcDeclaratorC2EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE, .Lfunc_end661-_ZN2kc31impl_ac_declarator_AcDeclaratorC2EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE
                                        # -- End function
	.globl	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC2EPNS_21impl_ac_operator_nameE # -- Begin function _ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC2EPNS_21impl_ac_operator_nameE
	.p2align	5
	.type	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC2EPNS_21impl_ac_operator_nameE,@function
_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC2EPNS_21impl_ac_operator_nameE: # @_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC2EPNS_21impl_ac_operator_nameE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end662:
	.size	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC2EPNS_21impl_ac_operator_nameE, .Lfunc_end662-_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC2EPNS_21impl_ac_operator_nameE
                                        # -- End function
	.globl	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC2EPNS_7impl_IDES2_ # -- Begin function _ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC2EPNS_7impl_IDES2_
	.p2align	5
	.type	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC2EPNS_7impl_IDES2_,@function
_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC2EPNS_7impl_IDES2_: # @_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC2EPNS_7impl_IDES2_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end663:
	.size	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC2EPNS_7impl_IDES2_, .Lfunc_end663-_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC2EPNS_7impl_IDES2_
                                        # -- End function
	.globl	_ZN2kc38impl_ac_direct_declarator_AcMemberDeclC2EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE # -- Begin function _ZN2kc38impl_ac_direct_declarator_AcMemberDeclC2EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE
	.p2align	5
	.type	_ZN2kc38impl_ac_direct_declarator_AcMemberDeclC2EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE,@function
_ZN2kc38impl_ac_direct_declarator_AcMemberDeclC2EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE: # @_ZN2kc38impl_ac_direct_declarator_AcMemberDeclC2EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end664:
	.size	_ZN2kc38impl_ac_direct_declarator_AcMemberDeclC2EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE, .Lfunc_end664-_ZN2kc38impl_ac_direct_declarator_AcMemberDeclC2EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE
                                        # -- End function
	.globl	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC2EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE # -- Begin function _ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC2EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE
	.p2align	5
	.type	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC2EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE,@function
_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC2EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE: # @_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC2EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	ret
.Lfunc_end665:
	.size	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC2EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE, .Lfunc_end665-_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC2EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE
                                        # -- End function
	.globl	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC2EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE # -- Begin function _ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC2EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE
	.p2align	5
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC2EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC2EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE: # @_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC2EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end666:
	.size	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC2EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE, .Lfunc_end666-_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC2EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE
                                        # -- End function
	.globl	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC2EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE # -- Begin function _ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC2EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE
	.p2align	5
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC2EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC2EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE: # @_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC2EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end667:
	.size	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC2EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE, .Lfunc_end667-_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC2EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE
                                        # -- End function
	.globl	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC2EPNS_18impl_ac_declaratorE # -- Begin function _ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC2EPNS_18impl_ac_declaratorE
	.p2align	5
	.type	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC2EPNS_18impl_ac_declaratorE,@function
_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC2EPNS_18impl_ac_declaratorE: # @_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC2EPNS_18impl_ac_declaratorE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end668:
	.size	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC2EPNS_18impl_ac_declaratorE, .Lfunc_end668-_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC2EPNS_18impl_ac_declaratorE
                                        # -- End function
	.globl	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC2EPNS_7impl_IDE # -- Begin function _ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC2EPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC2EPNS_7impl_IDE,@function
_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC2EPNS_7impl_IDE: # @_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC2EPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end669:
	.size	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC2EPNS_7impl_IDE, .Lfunc_end669-_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC2EPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc33impl_ac_pointer_option_YespointerC2EPNS_15impl_ac_pointerE # -- Begin function _ZN2kc33impl_ac_pointer_option_YespointerC2EPNS_15impl_ac_pointerE
	.p2align	5
	.type	_ZN2kc33impl_ac_pointer_option_YespointerC2EPNS_15impl_ac_pointerE,@function
_ZN2kc33impl_ac_pointer_option_YespointerC2EPNS_15impl_ac_pointerE: # @_ZN2kc33impl_ac_pointer_option_YespointerC2EPNS_15impl_ac_pointerE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc33impl_ac_pointer_option_YespointerE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc33impl_ac_pointer_option_YespointerE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end670:
	.size	_ZN2kc33impl_ac_pointer_option_YespointerC2EPNS_15impl_ac_pointerE, .Lfunc_end670-_ZN2kc33impl_ac_pointer_option_YespointerC2EPNS_15impl_ac_pointerE
                                        # -- End function
	.globl	_ZN2kc32impl_ac_pointer_option_NopointerC2Ev # -- Begin function _ZN2kc32impl_ac_pointer_option_NopointerC2Ev
	.p2align	5
	.type	_ZN2kc32impl_ac_pointer_option_NopointerC2Ev,@function
_ZN2kc32impl_ac_pointer_option_NopointerC2Ev: # @_ZN2kc32impl_ac_pointer_option_NopointerC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc32impl_ac_pointer_option_NopointerE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc32impl_ac_pointer_option_NopointerE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end671:
	.size	_ZN2kc32impl_ac_pointer_option_NopointerC2Ev, .Lfunc_end671-_ZN2kc32impl_ac_pointer_option_NopointerC2Ev
                                        # -- End function
	.globl	_ZN2kc29impl_ac_pointer_AcPointerConsC2EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE # -- Begin function _ZN2kc29impl_ac_pointer_AcPointerConsC2EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE
	.p2align	5
	.type	_ZN2kc29impl_ac_pointer_AcPointerConsC2EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE,@function
_ZN2kc29impl_ac_pointer_AcPointerConsC2EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE: # @_ZN2kc29impl_ac_pointer_AcPointerConsC2EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc29impl_ac_pointer_AcPointerConsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc29impl_ac_pointer_AcPointerConsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end672:
	.size	_ZN2kc29impl_ac_pointer_AcPointerConsC2EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE, .Lfunc_end672-_ZN2kc29impl_ac_pointer_AcPointerConsC2EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE
                                        # -- End function
	.globl	_ZN2kc28impl_ac_pointer_AcPointerNilC2EPNS_27impl_ac_type_qualifier_listE # -- Begin function _ZN2kc28impl_ac_pointer_AcPointerNilC2EPNS_27impl_ac_type_qualifier_listE
	.p2align	5
	.type	_ZN2kc28impl_ac_pointer_AcPointerNilC2EPNS_27impl_ac_type_qualifier_listE,@function
_ZN2kc28impl_ac_pointer_AcPointerNilC2EPNS_27impl_ac_type_qualifier_listE: # @_ZN2kc28impl_ac_pointer_AcPointerNilC2EPNS_27impl_ac_type_qualifier_listE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc28impl_ac_pointer_AcPointerNilE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc28impl_ac_pointer_AcPointerNilE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end673:
	.size	_ZN2kc28impl_ac_pointer_AcPointerNilC2EPNS_27impl_ac_type_qualifier_listE, .Lfunc_end673-_ZN2kc28impl_ac_pointer_AcPointerNilC2EPNS_27impl_ac_type_qualifier_listE
                                        # -- End function
	.globl	_ZN2kc24impl_ac_ref_option_AcRefC2Ev # -- Begin function _ZN2kc24impl_ac_ref_option_AcRefC2Ev
	.p2align	5
	.type	_ZN2kc24impl_ac_ref_option_AcRefC2Ev,@function
_ZN2kc24impl_ac_ref_option_AcRefC2Ev:   # @_ZN2kc24impl_ac_ref_option_AcRefC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc24impl_ac_ref_option_AcRefE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc24impl_ac_ref_option_AcRefE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end674:
	.size	_ZN2kc24impl_ac_ref_option_AcRefC2Ev, .Lfunc_end674-_ZN2kc24impl_ac_ref_option_AcRefC2Ev
                                        # -- End function
	.globl	_ZN2kc26impl_ac_ref_option_AcNoRefC2Ev # -- Begin function _ZN2kc26impl_ac_ref_option_AcNoRefC2Ev
	.p2align	5
	.type	_ZN2kc26impl_ac_ref_option_AcNoRefC2Ev,@function
_ZN2kc26impl_ac_ref_option_AcNoRefC2Ev: # @_ZN2kc26impl_ac_ref_option_AcNoRefC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc26impl_ac_ref_option_AcNoRefE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc26impl_ac_ref_option_AcNoRefE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end675:
	.size	_ZN2kc26impl_ac_ref_option_AcNoRefC2Ev, .Lfunc_end675-_ZN2kc26impl_ac_ref_option_AcNoRefC2Ev
                                        # -- End function
	.globl	_ZN2kc36impl_ac_operator_name_AcOperatorNameC2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc36impl_ac_operator_name_AcOperatorNameC2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc36impl_ac_operator_name_AcOperatorNameC2EPNS_20impl_casestring__StrE,@function
_ZN2kc36impl_ac_operator_name_AcOperatorNameC2EPNS_20impl_casestring__StrE: # @_ZN2kc36impl_ac_operator_name_AcOperatorNameC2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc36impl_ac_operator_name_AcOperatorNameE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc36impl_ac_operator_name_AcOperatorNameE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 24
	ret
.Lfunc_end676:
	.size	_ZN2kc36impl_ac_operator_name_AcOperatorNameC2EPNS_20impl_casestring__StrE, .Lfunc_end676-_ZN2kc36impl_ac_operator_name_AcOperatorNameC2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc33impl_ac_class_qualifier_help_listC2EPNS_25impl_ac_direct_declaratorEPS0_ # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_listC2EPNS_25impl_ac_direct_declaratorEPS0_
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_listC2EPNS_25impl_ac_direct_declaratorEPS0_,@function
_ZN2kc33impl_ac_class_qualifier_help_listC2EPNS_25impl_ac_direct_declaratorEPS0_: # @_ZN2kc33impl_ac_class_qualifier_help_listC2EPNS_25impl_ac_direct_declaratorEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end677:
	.size	_ZN2kc33impl_ac_class_qualifier_help_listC2EPNS_25impl_ac_direct_declaratorEPS0_, .Lfunc_end677-_ZN2kc33impl_ac_class_qualifier_help_listC2EPNS_25impl_ac_direct_declaratorEPS0_
                                        # -- End function
	.globl	_ZN2kc28impl_ac_class_qualifier_listC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc28impl_ac_class_qualifier_listC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_listC2EPNS_7impl_IDEPS0_,@function
_ZN2kc28impl_ac_class_qualifier_listC2EPNS_7impl_IDEPS0_: # @_ZN2kc28impl_ac_class_qualifier_listC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end678:
	.size	_ZN2kc28impl_ac_class_qualifier_listC2EPNS_7impl_IDEPS0_, .Lfunc_end678-_ZN2kc28impl_ac_class_qualifier_listC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc27impl_ac_type_qualifier_listC2EPNS_22impl_ac_type_qualifierEPS0_ # -- Begin function _ZN2kc27impl_ac_type_qualifier_listC2EPNS_22impl_ac_type_qualifierEPS0_
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_listC2EPNS_22impl_ac_type_qualifierEPS0_,@function
_ZN2kc27impl_ac_type_qualifier_listC2EPNS_22impl_ac_type_qualifierEPS0_: # @_ZN2kc27impl_ac_type_qualifier_listC2EPNS_22impl_ac_type_qualifierEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end679:
	.size	_ZN2kc27impl_ac_type_qualifier_listC2EPNS_22impl_ac_type_qualifierEPS0_, .Lfunc_end679-_ZN2kc27impl_ac_type_qualifier_listC2EPNS_22impl_ac_type_qualifierEPS0_
                                        # -- End function
	.globl	_ZN2kc41impl_ac_parameter_type_list_AcParList3DotC2EPNS_22impl_ac_parameter_listE # -- Begin function _ZN2kc41impl_ac_parameter_type_list_AcParList3DotC2EPNS_22impl_ac_parameter_listE
	.p2align	5
	.type	_ZN2kc41impl_ac_parameter_type_list_AcParList3DotC2EPNS_22impl_ac_parameter_listE,@function
_ZN2kc41impl_ac_parameter_type_list_AcParList3DotC2EPNS_22impl_ac_parameter_listE: # @_ZN2kc41impl_ac_parameter_type_list_AcParList3DotC2EPNS_22impl_ac_parameter_listE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end680:
	.size	_ZN2kc41impl_ac_parameter_type_list_AcParList3DotC2EPNS_22impl_ac_parameter_listE, .Lfunc_end680-_ZN2kc41impl_ac_parameter_type_list_AcParList3DotC2EPNS_22impl_ac_parameter_listE
                                        # -- End function
	.globl	_ZN2kc37impl_ac_parameter_type_list_AcParListC2EPNS_22impl_ac_parameter_listE # -- Begin function _ZN2kc37impl_ac_parameter_type_list_AcParListC2EPNS_22impl_ac_parameter_listE
	.p2align	5
	.type	_ZN2kc37impl_ac_parameter_type_list_AcParListC2EPNS_22impl_ac_parameter_listE,@function
_ZN2kc37impl_ac_parameter_type_list_AcParListC2EPNS_22impl_ac_parameter_listE: # @_ZN2kc37impl_ac_parameter_type_list_AcParListC2EPNS_22impl_ac_parameter_listE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc37impl_ac_parameter_type_list_AcParListE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc37impl_ac_parameter_type_list_AcParListE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end681:
	.size	_ZN2kc37impl_ac_parameter_type_list_AcParListC2EPNS_22impl_ac_parameter_listE, .Lfunc_end681-_ZN2kc37impl_ac_parameter_type_list_AcParListC2EPNS_22impl_ac_parameter_listE
                                        # -- End function
	.globl	_ZN2kc22impl_ac_parameter_listC2EPNS_29impl_ac_parameter_declarationEPS0_ # -- Begin function _ZN2kc22impl_ac_parameter_listC2EPNS_29impl_ac_parameter_declarationEPS0_
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_listC2EPNS_29impl_ac_parameter_declarationEPS0_,@function
_ZN2kc22impl_ac_parameter_listC2EPNS_29impl_ac_parameter_declarationEPS0_: # @_ZN2kc22impl_ac_parameter_listC2EPNS_29impl_ac_parameter_declarationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc22impl_ac_parameter_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc22impl_ac_parameter_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end682:
	.size	_ZN2kc22impl_ac_parameter_listC2EPNS_29impl_ac_parameter_declarationEPS0_, .Lfunc_end682-_ZN2kc22impl_ac_parameter_listC2EPNS_29impl_ac_parameter_declarationEPS0_
                                        # -- End function
	.globl	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC2EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE # -- Begin function _ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC2EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE
	.p2align	5
	.type	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC2EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC2EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE: # @_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC2EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end683:
	.size	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC2EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE, .Lfunc_end683-_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC2EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE
                                        # -- End function
	.globl	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE # -- Begin function _ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE
	.p2align	5
	.type	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE: # @_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end684:
	.size	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE, .Lfunc_end684-_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE
                                        # -- End function
	.globl	_ZN2kc23impl_ac_identifier_listC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc23impl_ac_identifier_listC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_listC2EPNS_7impl_IDEPS0_,@function
_ZN2kc23impl_ac_identifier_listC2EPNS_7impl_IDEPS0_: # @_ZN2kc23impl_ac_identifier_listC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc23impl_ac_identifier_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc23impl_ac_identifier_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end685:
	.size	_ZN2kc23impl_ac_identifier_listC2EPNS_7impl_IDEPS0_, .Lfunc_end685-_ZN2kc23impl_ac_identifier_listC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC2EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE # -- Begin function _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC2EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE
	.p2align	5
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC2EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC2EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE: # @_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC2EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end686:
	.size	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC2EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE, .Lfunc_end686-_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC2EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE
                                        # -- End function
	.globl	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC2EPNS_15impl_ac_pointerE # -- Begin function _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC2EPNS_15impl_ac_pointerE
	.p2align	5
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC2EPNS_15impl_ac_pointerE,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC2EPNS_15impl_ac_pointerE: # @_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC2EPNS_15impl_ac_pointerE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end687:
	.size	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC2EPNS_15impl_ac_pointerE, .Lfunc_end687-_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC2EPNS_15impl_ac_pointerE
                                        # -- End function
	.globl	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC2EPNS_34impl_ac_direct_abstract_declaratorE # -- Begin function _ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC2EPNS_34impl_ac_direct_abstract_declaratorE
	.p2align	5
	.type	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC2EPNS_34impl_ac_direct_abstract_declaratorE,@function
_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC2EPNS_34impl_ac_direct_abstract_declaratorE: # @_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC2EPNS_34impl_ac_direct_abstract_declaratorE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end688:
	.size	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC2EPNS_34impl_ac_direct_abstract_declaratorE, .Lfunc_end688-_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC2EPNS_34impl_ac_direct_abstract_declaratorE
                                        # -- End function
	.globl	_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC2Ev # -- Begin function _ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC2Ev
	.p2align	5
	.type	_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC2Ev,@function
_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC2Ev: # @_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end689:
	.size	_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC2Ev, .Lfunc_end689-_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC2Ev
                                        # -- End function
	.globl	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE # -- Begin function _ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE
	.p2align	5
	.type	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE,@function
_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE: # @_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end690:
	.size	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE, .Lfunc_end690-_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE
                                        # -- End function
	.globl	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE # -- Begin function _ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE
	.p2align	5
	.type	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE: # @_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end691:
	.size	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE, .Lfunc_end691-_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE
                                        # -- End function
	.globl	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC2EPNS_27impl_ac_abstract_declaratorE # -- Begin function _ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC2EPNS_27impl_ac_abstract_declaratorE
	.p2align	5
	.type	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC2EPNS_27impl_ac_abstract_declaratorE,@function
_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC2EPNS_27impl_ac_abstract_declaratorE: # @_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC2EPNS_27impl_ac_abstract_declaratorE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end692:
	.size	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC2EPNS_27impl_ac_abstract_declaratorE, .Lfunc_end692-_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC2EPNS_27impl_ac_abstract_declaratorE
                                        # -- End function
	.globl	_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC2Ev # -- Begin function _ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC2Ev
	.p2align	5
	.type	_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC2Ev,@function
_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC2Ev: # @_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc59impl_ac_constant_expression_option_Noac_constant_expressionE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc59impl_ac_constant_expression_option_Noac_constant_expressionE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end693:
	.size	_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC2Ev, .Lfunc_end693-_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC2Ev
                                        # -- End function
	.globl	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC2EPNS_27impl_ac_constant_expressionE # -- Begin function _ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC2EPNS_27impl_ac_constant_expressionE
	.p2align	5
	.type	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC2EPNS_27impl_ac_constant_expressionE,@function
_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC2EPNS_27impl_ac_constant_expressionE: # @_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC2EPNS_27impl_ac_constant_expressionE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end694:
	.size	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC2EPNS_27impl_ac_constant_expressionE, .Lfunc_end694-_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC2EPNS_27impl_ac_constant_expressionE
                                        # -- End function
	.globl	_ZN2kc39impl_ac_constant_expression_AcConstExprC2EPNS_16impl_CexpressionE # -- Begin function _ZN2kc39impl_ac_constant_expression_AcConstExprC2EPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc39impl_ac_constant_expression_AcConstExprC2EPNS_16impl_CexpressionE,@function
_ZN2kc39impl_ac_constant_expression_AcConstExprC2EPNS_16impl_CexpressionE: # @_ZN2kc39impl_ac_constant_expression_AcConstExprC2EPNS_16impl_CexpressionE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc39impl_ac_constant_expression_AcConstExprE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc39impl_ac_constant_expression_AcConstExprE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end695:
	.size	_ZN2kc39impl_ac_constant_expression_AcConstExprC2EPNS_16impl_CexpressionE, .Lfunc_end695-_ZN2kc39impl_ac_constant_expression_AcConstExprC2EPNS_16impl_CexpressionE
                                        # -- End function
	.globl	_ZN2kc32impl_ac_constant_expression_listC2EPNS_27impl_ac_constant_expressionEPS0_ # -- Begin function _ZN2kc32impl_ac_constant_expression_listC2EPNS_27impl_ac_constant_expressionEPS0_
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_listC2EPNS_27impl_ac_constant_expressionEPS0_,@function
_ZN2kc32impl_ac_constant_expression_listC2EPNS_27impl_ac_constant_expressionEPS0_: # @_ZN2kc32impl_ac_constant_expression_listC2EPNS_27impl_ac_constant_expressionEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end696:
	.size	_ZN2kc32impl_ac_constant_expression_listC2EPNS_27impl_ac_constant_expressionEPS0_, .Lfunc_end696-_ZN2kc32impl_ac_constant_expression_listC2EPNS_27impl_ac_constant_expressionEPS0_
                                        # -- End function
	.globl	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC2EPNS_22impl_ac_base_init_listE # -- Begin function _ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC2EPNS_22impl_ac_base_init_listE
	.p2align	5
	.type	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC2EPNS_22impl_ac_base_init_listE,@function
_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC2EPNS_22impl_ac_base_init_listE: # @_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC2EPNS_22impl_ac_base_init_listE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end697:
	.size	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC2EPNS_22impl_ac_base_init_listE, .Lfunc_end697-_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC2EPNS_22impl_ac_base_init_listE
                                        # -- End function
	.globl	_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC2Ev # -- Begin function _ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC2Ev
	.p2align	5
	.type	_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC2Ev,@function
_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC2Ev: # @_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc39impl_ac_opt_base_init_list_AcNoBaseInitE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc39impl_ac_opt_base_init_list_AcNoBaseInitE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end698:
	.size	_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC2Ev, .Lfunc_end698-_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC2Ev
                                        # -- End function
	.globl	_ZN2kc22impl_ac_base_init_listC2EPNS_17impl_ac_base_initEPS0_ # -- Begin function _ZN2kc22impl_ac_base_init_listC2EPNS_17impl_ac_base_initEPS0_
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_listC2EPNS_17impl_ac_base_initEPS0_,@function
_ZN2kc22impl_ac_base_init_listC2EPNS_17impl_ac_base_initEPS0_: # @_ZN2kc22impl_ac_base_init_listC2EPNS_17impl_ac_base_initEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc22impl_ac_base_init_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc22impl_ac_base_init_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end699:
	.size	_ZN2kc22impl_ac_base_init_listC2EPNS_17impl_ac_base_initEPS0_, .Lfunc_end699-_ZN2kc22impl_ac_base_init_listC2EPNS_17impl_ac_base_initEPS0_
                                        # -- End function
	.globl	_ZN2kc28impl_ac_base_init_AcBaseInitC2EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE # -- Begin function _ZN2kc28impl_ac_base_init_AcBaseInitC2EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE
	.p2align	5
	.type	_ZN2kc28impl_ac_base_init_AcBaseInitC2EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE,@function
_ZN2kc28impl_ac_base_init_AcBaseInitC2EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE: # @_ZN2kc28impl_ac_base_init_AcBaseInitC2EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc28impl_ac_base_init_AcBaseInitE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc28impl_ac_base_init_AcBaseInitE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end700:
	.size	_ZN2kc28impl_ac_base_init_AcBaseInitC2EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE, .Lfunc_end700-_ZN2kc28impl_ac_base_init_AcBaseInitC2EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE
                                        # -- End function
	.globl	_ZN2kc27impl_baseclass_declarationsC2EPNS_19impl_baseclass_declEPS0_ # -- Begin function _ZN2kc27impl_baseclass_declarationsC2EPNS_19impl_baseclass_declEPS0_
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarationsC2EPNS_19impl_baseclass_declEPS0_,@function
_ZN2kc27impl_baseclass_declarationsC2EPNS_19impl_baseclass_declEPS0_: # @_ZN2kc27impl_baseclass_declarationsC2EPNS_19impl_baseclass_declEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc27impl_baseclass_declarationsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc27impl_baseclass_declarationsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end701:
	.size	_ZN2kc27impl_baseclass_declarationsC2EPNS_19impl_baseclass_declEPS0_, .Lfunc_end701-_ZN2kc27impl_baseclass_declarationsC2EPNS_19impl_baseclass_declEPS0_
                                        # -- End function
	.globl	_ZN2kc33impl_baseclass_decl_BaseClassDeclC2EPNS_7impl_IDEPNS_19impl_baseclass_listE # -- Begin function _ZN2kc33impl_baseclass_decl_BaseClassDeclC2EPNS_7impl_IDEPNS_19impl_baseclass_listE
	.p2align	5
	.type	_ZN2kc33impl_baseclass_decl_BaseClassDeclC2EPNS_7impl_IDEPNS_19impl_baseclass_listE,@function
_ZN2kc33impl_baseclass_decl_BaseClassDeclC2EPNS_7impl_IDEPNS_19impl_baseclass_listE: # @_ZN2kc33impl_baseclass_decl_BaseClassDeclC2EPNS_7impl_IDEPNS_19impl_baseclass_listE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end702:
	.size	_ZN2kc33impl_baseclass_decl_BaseClassDeclC2EPNS_7impl_IDEPNS_19impl_baseclass_listE, .Lfunc_end702-_ZN2kc33impl_baseclass_decl_BaseClassDeclC2EPNS_7impl_IDEPNS_19impl_baseclass_listE
                                        # -- End function
	.globl	_ZN2kc19impl_baseclass_listC2EPNS_7impl_IDEPS0_ # -- Begin function _ZN2kc19impl_baseclass_listC2EPNS_7impl_IDEPS0_
	.p2align	5
	.type	_ZN2kc19impl_baseclass_listC2EPNS_7impl_IDEPS0_,@function
_ZN2kc19impl_baseclass_listC2EPNS_7impl_IDEPS0_: # @_ZN2kc19impl_baseclass_listC2EPNS_7impl_IDEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_baseclass_listE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_baseclass_listE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end703:
	.size	_ZN2kc19impl_baseclass_listC2EPNS_7impl_IDEPS0_, .Lfunc_end703-_ZN2kc19impl_baseclass_listC2EPNS_7impl_IDEPS0_
                                        # -- End function
	.globl	_ZN2kc18impl_error_WarningC2EPNS_13impl_filelineEPNS_12impl_problemE # -- Begin function _ZN2kc18impl_error_WarningC2EPNS_13impl_filelineEPNS_12impl_problemE
	.p2align	5
	.type	_ZN2kc18impl_error_WarningC2EPNS_13impl_filelineEPNS_12impl_problemE,@function
_ZN2kc18impl_error_WarningC2EPNS_13impl_filelineEPNS_12impl_problemE: # @_ZN2kc18impl_error_WarningC2EPNS_13impl_filelineEPNS_12impl_problemE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc18impl_error_WarningE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc18impl_error_WarningE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end704:
	.size	_ZN2kc18impl_error_WarningC2EPNS_13impl_filelineEPNS_12impl_problemE, .Lfunc_end704-_ZN2kc18impl_error_WarningC2EPNS_13impl_filelineEPNS_12impl_problemE
                                        # -- End function
	.globl	_ZN2kc19impl_error_NonFatalC2EPNS_13impl_filelineEPNS_12impl_problemE # -- Begin function _ZN2kc19impl_error_NonFatalC2EPNS_13impl_filelineEPNS_12impl_problemE
	.p2align	5
	.type	_ZN2kc19impl_error_NonFatalC2EPNS_13impl_filelineEPNS_12impl_problemE,@function
_ZN2kc19impl_error_NonFatalC2EPNS_13impl_filelineEPNS_12impl_problemE: # @_ZN2kc19impl_error_NonFatalC2EPNS_13impl_filelineEPNS_12impl_problemE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_error_NonFatalE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_error_NonFatalE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end705:
	.size	_ZN2kc19impl_error_NonFatalC2EPNS_13impl_filelineEPNS_12impl_problemE, .Lfunc_end705-_ZN2kc19impl_error_NonFatalC2EPNS_13impl_filelineEPNS_12impl_problemE
                                        # -- End function
	.globl	_ZN2kc16impl_error_FatalC2EPNS_13impl_filelineEPNS_12impl_problemE # -- Begin function _ZN2kc16impl_error_FatalC2EPNS_13impl_filelineEPNS_12impl_problemE
	.p2align	5
	.type	_ZN2kc16impl_error_FatalC2EPNS_13impl_filelineEPNS_12impl_problemE,@function
_ZN2kc16impl_error_FatalC2EPNS_13impl_filelineEPNS_12impl_problemE: # @_ZN2kc16impl_error_FatalC2EPNS_13impl_filelineEPNS_12impl_problemE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc16impl_error_FatalE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc16impl_error_FatalE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end706:
	.size	_ZN2kc16impl_error_FatalC2EPNS_13impl_filelineEPNS_12impl_problemE, .Lfunc_end706-_ZN2kc16impl_error_FatalC2EPNS_13impl_filelineEPNS_12impl_problemE
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem6C2EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_ # -- Begin function _ZN2kc21impl_problem_Problem6C2EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem6C2EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_,@function
_ZN2kc21impl_problem_Problem6C2EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_: # @_ZN2kc21impl_problem_Problem6C2EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_
# %bb.0:
	pcalau12i	$a7, %pc_hi20(_ZTVN2kc21impl_problem_Problem6E+16)
	addi.d	$a7, $a7, %pc_lo12(_ZTVN2kc21impl_problem_Problem6E+16)
	st.d	$a7, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	st.d	$a5, $a0, 40
	st.d	$a6, $a0, 48
	ret
.Lfunc_end707:
	.size	_ZN2kc21impl_problem_Problem6C2EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_, .Lfunc_end707-_ZN2kc21impl_problem_Problem6C2EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem5C2EPNS_20impl_casestring__StrES2_S2_S2_S2_ # -- Begin function _ZN2kc21impl_problem_Problem5C2EPNS_20impl_casestring__StrES2_S2_S2_S2_
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem5C2EPNS_20impl_casestring__StrES2_S2_S2_S2_,@function
_ZN2kc21impl_problem_Problem5C2EPNS_20impl_casestring__StrES2_S2_S2_S2_: # @_ZN2kc21impl_problem_Problem5C2EPNS_20impl_casestring__StrES2_S2_S2_S2_
# %bb.0:
	pcalau12i	$a6, %pc_hi20(_ZTVN2kc21impl_problem_Problem5E+16)
	addi.d	$a6, $a6, %pc_lo12(_ZTVN2kc21impl_problem_Problem5E+16)
	st.d	$a6, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	st.d	$a5, $a0, 40
	ret
.Lfunc_end708:
	.size	_ZN2kc21impl_problem_Problem5C2EPNS_20impl_casestring__StrES2_S2_S2_S2_, .Lfunc_end708-_ZN2kc21impl_problem_Problem5C2EPNS_20impl_casestring__StrES2_S2_S2_S2_
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem4C2EPNS_20impl_casestring__StrES2_S2_S2_ # -- Begin function _ZN2kc21impl_problem_Problem4C2EPNS_20impl_casestring__StrES2_S2_S2_
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem4C2EPNS_20impl_casestring__StrES2_S2_S2_,@function
_ZN2kc21impl_problem_Problem4C2EPNS_20impl_casestring__StrES2_S2_S2_: # @_ZN2kc21impl_problem_Problem4C2EPNS_20impl_casestring__StrES2_S2_S2_
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc21impl_problem_Problem4E+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc21impl_problem_Problem4E+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	ret
.Lfunc_end709:
	.size	_ZN2kc21impl_problem_Problem4C2EPNS_20impl_casestring__StrES2_S2_S2_, .Lfunc_end709-_ZN2kc21impl_problem_Problem4C2EPNS_20impl_casestring__StrES2_S2_S2_
                                        # -- End function
	.globl	_ZN2kc25impl_problem_Problem3int1C2EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_ # -- Begin function _ZN2kc25impl_problem_Problem3int1C2EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem3int1C2EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_,@function
_ZN2kc25impl_problem_Problem3int1C2EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_: # @_ZN2kc25impl_problem_Problem3int1C2EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_
# %bb.0:
	pcalau12i	$a6, %pc_hi20(_ZTVN2kc25impl_problem_Problem3int1E+16)
	addi.d	$a6, $a6, %pc_lo12(_ZTVN2kc25impl_problem_Problem3int1E+16)
	st.d	$a6, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	st.d	$a5, $a0, 40
	ret
.Lfunc_end710:
	.size	_ZN2kc25impl_problem_Problem3int1C2EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_, .Lfunc_end710-_ZN2kc25impl_problem_Problem3int1C2EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem3C2EPNS_20impl_casestring__StrES2_S2_ # -- Begin function _ZN2kc21impl_problem_Problem3C2EPNS_20impl_casestring__StrES2_S2_
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem3C2EPNS_20impl_casestring__StrES2_S2_,@function
_ZN2kc21impl_problem_Problem3C2EPNS_20impl_casestring__StrES2_S2_: # @_ZN2kc21impl_problem_Problem3C2EPNS_20impl_casestring__StrES2_S2_
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc21impl_problem_Problem3E+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc21impl_problem_Problem3E+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end711:
	.size	_ZN2kc21impl_problem_Problem3C2EPNS_20impl_casestring__StrES2_S2_, .Lfunc_end711-_ZN2kc21impl_problem_Problem3C2EPNS_20impl_casestring__StrES2_S2_
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem2C2EPNS_20impl_casestring__StrES2_ # -- Begin function _ZN2kc21impl_problem_Problem2C2EPNS_20impl_casestring__StrES2_
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem2C2EPNS_20impl_casestring__StrES2_,@function
_ZN2kc21impl_problem_Problem2C2EPNS_20impl_casestring__StrES2_: # @_ZN2kc21impl_problem_Problem2C2EPNS_20impl_casestring__StrES2_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc21impl_problem_Problem2E+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc21impl_problem_Problem2E+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end712:
	.size	_ZN2kc21impl_problem_Problem2C2EPNS_20impl_casestring__StrES2_, .Lfunc_end712-_ZN2kc21impl_problem_Problem2C2EPNS_20impl_casestring__StrES2_
                                        # -- End function
	.globl	_ZN2kc37impl_problem_Problem1storageoption1IDC2EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE # -- Begin function _ZN2kc37impl_problem_Problem1storageoption1IDC2EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc37impl_problem_Problem1storageoption1IDC2EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE,@function
_ZN2kc37impl_problem_Problem1storageoption1IDC2EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE: # @_ZN2kc37impl_problem_Problem1storageoption1IDC2EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc37impl_problem_Problem1storageoption1IDE+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc37impl_problem_Problem1storageoption1IDE+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	ret
.Lfunc_end713:
	.size	_ZN2kc37impl_problem_Problem1storageoption1IDC2EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE, .Lfunc_end713-_ZN2kc37impl_problem_Problem1storageoption1IDC2EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc30impl_problem_Problem1INT1ID1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_ # -- Begin function _ZN2kc30impl_problem_Problem1INT1ID1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_
	.p2align	5
	.type	_ZN2kc30impl_problem_Problem1INT1ID1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_,@function
_ZN2kc30impl_problem_Problem1INT1ID1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_: # @_ZN2kc30impl_problem_Problem1INT1ID1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_
# %bb.0:
	pcalau12i	$a7, %pc_hi20(_ZTVN2kc30impl_problem_Problem1INT1ID1IDE+16)
	addi.d	$a7, $a7, %pc_lo12(_ZTVN2kc30impl_problem_Problem1INT1ID1IDE+16)
	st.d	$a7, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	st.d	$a5, $a0, 40
	st.d	$a6, $a0, 48
	ret
.Lfunc_end714:
	.size	_ZN2kc30impl_problem_Problem1INT1ID1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_, .Lfunc_end714-_ZN2kc30impl_problem_Problem1INT1ID1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_
                                        # -- End function
	.globl	_ZN2kc29impl_problem_Problem1ID1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_ # -- Begin function _ZN2kc29impl_problem_Problem1ID1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_
	.p2align	5
	.type	_ZN2kc29impl_problem_Problem1ID1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_,@function
_ZN2kc29impl_problem_Problem1ID1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_: # @_ZN2kc29impl_problem_Problem1ID1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_
# %bb.0:
	pcalau12i	$a7, %pc_hi20(_ZTVN2kc29impl_problem_Problem1ID1ID1IDE+16)
	addi.d	$a7, $a7, %pc_lo12(_ZTVN2kc29impl_problem_Problem1ID1ID1IDE+16)
	st.d	$a7, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	st.d	$a5, $a0, 40
	st.d	$a6, $a0, 48
	ret
.Lfunc_end715:
	.size	_ZN2kc29impl_problem_Problem1ID1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_, .Lfunc_end715-_ZN2kc29impl_problem_Problem1ID1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_
                                        # -- End function
	.globl	_ZN2kc27impl_problem_Problem1INT1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE # -- Begin function _ZN2kc27impl_problem_Problem1INT1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc27impl_problem_Problem1INT1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE,@function
_ZN2kc27impl_problem_Problem1INT1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE: # @_ZN2kc27impl_problem_Problem1INT1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc27impl_problem_Problem1INT1IDE+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc27impl_problem_Problem1INT1IDE+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	ret
.Lfunc_end716:
	.size	_ZN2kc27impl_problem_Problem1INT1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE, .Lfunc_end716-_ZN2kc27impl_problem_Problem1INT1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc25impl_problem_Problem1int1C2EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_ # -- Begin function _ZN2kc25impl_problem_Problem1int1C2EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem1int1C2EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_,@function
_ZN2kc25impl_problem_Problem1int1C2EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_: # @_ZN2kc25impl_problem_Problem1int1C2EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_
# %bb.0:
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc25impl_problem_Problem1int1E+16)
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc25impl_problem_Problem1int1E+16)
	st.d	$a4, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	ret
.Lfunc_end717:
	.size	_ZN2kc25impl_problem_Problem1int1C2EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_, .Lfunc_end717-_ZN2kc25impl_problem_Problem1int1C2EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_
                                        # -- End function
	.globl	_ZN2kc24impl_problem_Problem1INTC2EPNS_20impl_casestring__StrEPNS_8impl_INTE # -- Begin function _ZN2kc24impl_problem_Problem1INTC2EPNS_20impl_casestring__StrEPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc24impl_problem_Problem1INTC2EPNS_20impl_casestring__StrEPNS_8impl_INTE,@function
_ZN2kc24impl_problem_Problem1INTC2EPNS_20impl_casestring__StrEPNS_8impl_INTE: # @_ZN2kc24impl_problem_Problem1INTC2EPNS_20impl_casestring__StrEPNS_8impl_INTE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc24impl_problem_Problem1INTE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc24impl_problem_Problem1INTE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end718:
	.size	_ZN2kc24impl_problem_Problem1INTC2EPNS_20impl_casestring__StrEPNS_8impl_INTE, .Lfunc_end718-_ZN2kc24impl_problem_Problem1INTC2EPNS_20impl_casestring__StrEPNS_8impl_INTE
                                        # -- End function
	.globl	_ZN2kc25impl_problem_Problem1t1IDC2EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE # -- Begin function _ZN2kc25impl_problem_Problem1t1IDC2EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem1t1IDC2EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE,@function
_ZN2kc25impl_problem_Problem1t1IDC2EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE: # @_ZN2kc25impl_problem_Problem1t1IDC2EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc25impl_problem_Problem1t1IDE+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc25impl_problem_Problem1t1IDE+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	ret
.Lfunc_end719:
	.size	_ZN2kc25impl_problem_Problem1t1IDC2EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE, .Lfunc_end719-_ZN2kc25impl_problem_Problem1t1IDC2EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc26impl_problem_Problem1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_ # -- Begin function _ZN2kc26impl_problem_Problem1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_
	.p2align	5
	.type	_ZN2kc26impl_problem_Problem1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_,@function
_ZN2kc26impl_problem_Problem1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_: # @_ZN2kc26impl_problem_Problem1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_
# %bb.0:
	pcalau12i	$a5, %pc_hi20(_ZTVN2kc26impl_problem_Problem1ID1IDE+16)
	addi.d	$a5, $a5, %pc_lo12(_ZTVN2kc26impl_problem_Problem1ID1IDE+16)
	st.d	$a5, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	st.d	$a3, $a0, 24
	st.d	$a4, $a0, 32
	ret
.Lfunc_end720:
	.size	_ZN2kc26impl_problem_Problem1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_, .Lfunc_end720-_ZN2kc26impl_problem_Problem1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_
                                        # -- End function
	.globl	_ZN2kc23impl_problem_Problem1weC2EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE # -- Begin function _ZN2kc23impl_problem_Problem1weC2EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE
	.p2align	5
	.type	_ZN2kc23impl_problem_Problem1weC2EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE,@function
_ZN2kc23impl_problem_Problem1weC2EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE: # @_ZN2kc23impl_problem_Problem1weC2EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc23impl_problem_Problem1weE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc23impl_problem_Problem1weE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end721:
	.size	_ZN2kc23impl_problem_Problem1weC2EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE, .Lfunc_end721-_ZN2kc23impl_problem_Problem1weC2EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE
                                        # -- End function
	.globl	_ZN2kc24impl_problem_Problem1tIDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE # -- Begin function _ZN2kc24impl_problem_Problem1tIDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc24impl_problem_Problem1tIDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE,@function
_ZN2kc24impl_problem_Problem1tIDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE: # @_ZN2kc24impl_problem_Problem1tIDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc24impl_problem_Problem1tIDE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc24impl_problem_Problem1tIDE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end722:
	.size	_ZN2kc24impl_problem_Problem1tIDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE, .Lfunc_end722-_ZN2kc24impl_problem_Problem1tIDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc23impl_problem_Problem1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE # -- Begin function _ZN2kc23impl_problem_Problem1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc23impl_problem_Problem1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE,@function
_ZN2kc23impl_problem_Problem1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE: # @_ZN2kc23impl_problem_Problem1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc23impl_problem_Problem1IDE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc23impl_problem_Problem1IDE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end723:
	.size	_ZN2kc23impl_problem_Problem1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE, .Lfunc_end723-_ZN2kc23impl_problem_Problem1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem1C2EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc21impl_problem_Problem1C2EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem1C2EPNS_20impl_casestring__StrE,@function
_ZN2kc21impl_problem_Problem1C2EPNS_20impl_casestring__StrE: # @_ZN2kc21impl_problem_Problem1C2EPNS_20impl_casestring__StrE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc21impl_problem_Problem1E+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc21impl_problem_Problem1E+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 8
	ret
.Lfunc_end724:
	.size	_ZN2kc21impl_problem_Problem1C2EPNS_20impl_casestring__StrE, .Lfunc_end724-_ZN2kc21impl_problem_Problem1C2EPNS_20impl_casestring__StrE
                                        # -- End function
	.globl	_ZN2kc28impl_addedphylumdeclarationsC2EPNS_27impl_addedphylumdeclarationEPS0_ # -- Begin function _ZN2kc28impl_addedphylumdeclarationsC2EPNS_27impl_addedphylumdeclarationEPS0_
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarationsC2EPNS_27impl_addedphylumdeclarationEPS0_,@function
_ZN2kc28impl_addedphylumdeclarationsC2EPNS_27impl_addedphylumdeclarationEPS0_: # @_ZN2kc28impl_addedphylumdeclarationsC2EPNS_27impl_addedphylumdeclarationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end725:
	.size	_ZN2kc28impl_addedphylumdeclarationsC2EPNS_27impl_addedphylumdeclarationEPS0_, .Lfunc_end725-_ZN2kc28impl_addedphylumdeclarationsC2EPNS_27impl_addedphylumdeclarationEPS0_
                                        # -- End function
	.globl	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC2EPNS_11impl_uniqIDE # -- Begin function _ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC2EPNS_11impl_uniqIDE
	.p2align	5
	.type	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC2EPNS_11impl_uniqIDE,@function
_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC2EPNS_11impl_uniqIDE: # @_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC2EPNS_11impl_uniqIDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 16
	ret
.Lfunc_end726:
	.size	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC2EPNS_11impl_uniqIDE, .Lfunc_end726-_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC2EPNS_11impl_uniqIDE
                                        # -- End function
	.globl	_ZN2kc30impl_countedphylumdeclarationsC2EPNS_29impl_countedphylumdeclarationEPS0_ # -- Begin function _ZN2kc30impl_countedphylumdeclarationsC2EPNS_29impl_countedphylumdeclarationEPS0_
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarationsC2EPNS_29impl_countedphylumdeclarationEPS0_,@function
_ZN2kc30impl_countedphylumdeclarationsC2EPNS_29impl_countedphylumdeclarationEPS0_: # @_ZN2kc30impl_countedphylumdeclarationsC2EPNS_29impl_countedphylumdeclarationEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end727:
	.size	_ZN2kc30impl_countedphylumdeclarationsC2EPNS_29impl_countedphylumdeclarationEPS0_, .Lfunc_end727-_ZN2kc30impl_countedphylumdeclarationsC2EPNS_29impl_countedphylumdeclarationEPS0_
                                        # -- End function
	.globl	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC2EPNS_11impl_uniqIDE # -- Begin function _ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC2EPNS_11impl_uniqIDE
	.p2align	5
	.type	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC2EPNS_11impl_uniqIDE,@function
_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC2EPNS_11impl_uniqIDE: # @_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC2EPNS_11impl_uniqIDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 16
	ret
.Lfunc_end728:
	.size	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC2EPNS_11impl_uniqIDE, .Lfunc_end728-_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC2EPNS_11impl_uniqIDE
                                        # -- End function
	.globl	_ZN2kc19impl_charruns_StarsC2Ev # -- Begin function _ZN2kc19impl_charruns_StarsC2Ev
	.p2align	5
	.type	_ZN2kc19impl_charruns_StarsC2Ev,@function
_ZN2kc19impl_charruns_StarsC2Ev:        # @_ZN2kc19impl_charruns_StarsC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc19impl_charruns_StarsE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc19impl_charruns_StarsE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end729:
	.size	_ZN2kc19impl_charruns_StarsC2Ev, .Lfunc_end729-_ZN2kc19impl_charruns_StarsC2Ev
                                        # -- End function
	.globl	_ZN2kc28impl_charruns_QuotedNewlinesC2Ev # -- Begin function _ZN2kc28impl_charruns_QuotedNewlinesC2Ev
	.p2align	5
	.type	_ZN2kc28impl_charruns_QuotedNewlinesC2Ev,@function
_ZN2kc28impl_charruns_QuotedNewlinesC2Ev: # @_ZN2kc28impl_charruns_QuotedNewlinesC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc28impl_charruns_QuotedNewlinesE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc28impl_charruns_QuotedNewlinesE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end730:
	.size	_ZN2kc28impl_charruns_QuotedNewlinesC2Ev, .Lfunc_end730-_ZN2kc28impl_charruns_QuotedNewlinesC2Ev
                                        # -- End function
	.globl	_ZN2kc22impl_charruns_NewlinesC2Ev # -- Begin function _ZN2kc22impl_charruns_NewlinesC2Ev
	.p2align	5
	.type	_ZN2kc22impl_charruns_NewlinesC2Ev,@function
_ZN2kc22impl_charruns_NewlinesC2Ev:     # @_ZN2kc22impl_charruns_NewlinesC2Ev
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc22impl_charruns_NewlinesE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc22impl_charruns_NewlinesE)
	addi.d	$a1, $a1, 16
	st.d	$a1, $a0, 0
	ret
.Lfunc_end731:
	.size	_ZN2kc22impl_charruns_NewlinesC2Ev, .Lfunc_end731-_ZN2kc22impl_charruns_NewlinesC2Ev
                                        # -- End function
	.globl	_ZN2kc19impl_bindingidmarksC2EPNS_18impl_bindingidmarkEPS0_ # -- Begin function _ZN2kc19impl_bindingidmarksC2EPNS_18impl_bindingidmarkEPS0_
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarksC2EPNS_18impl_bindingidmarkEPS0_,@function
_ZN2kc19impl_bindingidmarksC2EPNS_18impl_bindingidmarkEPS0_: # @_ZN2kc19impl_bindingidmarksC2EPNS_18impl_bindingidmarkEPS0_
# %bb.0:
	pcalau12i	$a3, %pc_hi20(_ZTVN2kc19impl_bindingidmarksE+16)
	addi.d	$a3, $a3, %pc_lo12(_ZTVN2kc19impl_bindingidmarksE+16)
	st.d	$a3, $a0, 0
	st.d	$a1, $a0, 8
	st.d	$a2, $a0, 16
	ret
.Lfunc_end732:
	.size	_ZN2kc19impl_bindingidmarksC2EPNS_18impl_bindingidmarkEPS0_, .Lfunc_end732-_ZN2kc19impl_bindingidmarksC2EPNS_18impl_bindingidmarkEPS0_
                                        # -- End function
	.globl	_ZN2kc32impl_bindingidmark_BindingIdMarkC2EPNS_11impl_uniqIDE # -- Begin function _ZN2kc32impl_bindingidmark_BindingIdMarkC2EPNS_11impl_uniqIDE
	.p2align	5
	.type	_ZN2kc32impl_bindingidmark_BindingIdMarkC2EPNS_11impl_uniqIDE,@function
_ZN2kc32impl_bindingidmark_BindingIdMarkC2EPNS_11impl_uniqIDE: # @_ZN2kc32impl_bindingidmark_BindingIdMarkC2EPNS_11impl_uniqIDE
# %bb.0:
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc32impl_bindingidmark_BindingIdMarkE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc32impl_bindingidmark_BindingIdMarkE+16)
	st.d	$a2, $a0, 0
	st.d	$a1, $a0, 16
	ret
.Lfunc_end733:
	.size	_ZN2kc32impl_bindingidmark_BindingIdMarkC2EPNS_11impl_uniqIDE, .Lfunc_end733-_ZN2kc32impl_bindingidmark_BindingIdMarkC2EPNS_11impl_uniqIDE
                                        # -- End function
	.section	.text._ZN2kc18hashtable_struct_tD2Ev,"axG",@progbits,_ZN2kc18hashtable_struct_tD2Ev,comdat
	.weak	_ZN2kc18hashtable_struct_tD2Ev  # -- Begin function _ZN2kc18hashtable_struct_tD2Ev
	.p2align	5
	.type	_ZN2kc18hashtable_struct_tD2Ev,@function
_ZN2kc18hashtable_struct_tD2Ev:         # @_ZN2kc18hashtable_struct_tD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.d	$s0, $a0, 288
	addi.d	$s1, $a0, 288
	beq	$s0, $s1, .LBB734_2
	.p2align	4, , 16
.LBB734_1:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s0, 0
	addi.d	$a0, $s0, 16
	pcaddu18i	$ra, %call36(_ZN2kc15hashtable_levelD2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 304
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s2
	bne	$s2, $s1, .LBB734_1
.LBB734_2:                              # %_ZNSt7__cxx1110_List_baseIN2kc15hashtable_levelESaIS2_EED2Ev.exit
	move	$a0, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc15hashtable_levelD2Ev)
	jr	$t8
.Lfunc_end734:
	.size	_ZN2kc18hashtable_struct_tD2Ev, .Lfunc_end734-_ZN2kc18hashtable_struct_tD2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZNK2kc20impl_abstract_phylum11phylum_nameEv # -- Begin function _ZNK2kc20impl_abstract_phylum11phylum_nameEv
	.p2align	5
	.type	_ZNK2kc20impl_abstract_phylum11phylum_nameEv,@function
_ZNK2kc20impl_abstract_phylum11phylum_nameEv: # @_ZNK2kc20impl_abstract_phylum11phylum_nameEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	add.d	$a0, $a1, $a0
	ld.wu	$a0, $a0, 20
	slli.d	$a1, $a0, 4
	alsl.d	$a0, $a0, $a1, 3
	pcalau12i	$a1, %pc_hi20(_ZN2kc11phylum_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc11phylum_infoE)
	ldx.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end735:
	.size	_ZNK2kc20impl_abstract_phylum11phylum_nameEv, .Lfunc_end735-_ZNK2kc20impl_abstract_phylum11phylum_nameEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc20impl_abstract_phylum7op_nameEv # -- Begin function _ZNK2kc20impl_abstract_phylum7op_nameEv
	.p2align	5
	.type	_ZNK2kc20impl_abstract_phylum7op_nameEv,@function
_ZNK2kc20impl_abstract_phylum7op_nameEv: # @_ZNK2kc20impl_abstract_phylum7op_nameEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	ldx.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end736:
	.size	_ZNK2kc20impl_abstract_phylum7op_nameEv, .Lfunc_end736-_ZNK2kc20impl_abstract_phylum7op_nameEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12mkcasestringEPKci       # -- Begin function _ZN2kc12mkcasestringEPKci
	.p2align	5
	.type	_ZN2kc12mkcasestringEPKci,@function
_ZN2kc12mkcasestringEPKci:              # @_ZN2kc12mkcasestringEPKci
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc20impl_casestring__StrE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc20impl_casestring__StrE)
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	st.d	$s1, $fp, 8
	bltz	$s0, .LBB737_2
# %bb.1:
	addi.w	$a0, $s0, 1
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(strncpy)
	jirl	$ra, $ra, 0
	stx.b	$zero, $s2, $s0
	st.d	$s2, $fp, 8
.LBB737_2:
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	ld.d	$a1, $a0, 288
	ld.bu	$a2, $a0, 321
	ld.d	$a3, $a0, 312
	addi.d	$a4, $a0, 288
	xor	$a1, $a1, $a4
	sltu	$a1, $zero, $a1
	addi.d	$a3, $a3, 16
	masknez	$a4, $a0, $a1
	maskeqz	$a1, $a3, $a1
	or	$a1, $a1, $a4
	maskeqz	$a1, $a1, $a2
	masknez	$a0, $a0, $a2
	or	$a0, $a1, $a0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	beq	$a0, $fp, .LBB737_5
# %bb.3:
	move	$s2, $a0
	ori	$a0, $zero, 64
	bgez	$s0, .LBB737_8
# %bb.4:
	move	$s0, $zero
	b	.LBB737_7
.LBB737_5:
	addi.w	$a1, $zero, -1
	ori	$a0, $zero, 48
	move	$s2, $fp
	blt	$a1, $s0, .LBB737_8
# %bb.6:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	slli.d	$a0, $a0, 32
	ori	$a1, $zero, 0
	lu32i.d	$a1, 1
	add.d	$a0, $a0, $a1
	srai.d	$a0, $a0, 32
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	move	$s0, $a0
	addi.w	$s1, $s1, 0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(strncpy)
	jirl	$ra, $ra, 0
	stx.b	$zero, $s0, $s1
	ori	$a0, $zero, 48
	move	$s2, $fp
.LBB737_7:                              # %.sink.split
	st.d	$s0, $fp, 8
.LBB737_8:
	ld.d	$a1, $fp, 0
	ldx.d	$a1, $a1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $s2
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end737:
	.size	_ZN2kc12mkcasestringEPKci, .Lfunc_end737-_ZN2kc12mkcasestringEPKci
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14mknocasestringEPKci     # -- Begin function _ZN2kc14mknocasestringEPKci
	.p2align	5
	.type	_ZN2kc14mknocasestringEPKci,@function
_ZN2kc14mknocasestringEPKci:            # @_ZN2kc14mknocasestringEPKci
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc27impl_nocasestring_NoCaseStrE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc27impl_nocasestring_NoCaseStrE)
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	st.d	$s1, $fp, 8
	bltz	$s0, .LBB738_7
# %bb.1:
	addi.w	$a0, $s0, 1
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	beqz	$s0, .LBB738_5
# %bb.2:                                # %.lr.ph.i
	bstrpick.d	$s3, $s0, 31, 0
	move	$s4, $s1
	move	$s5, $s2
	move	$s6, $s3
	.p2align	4, , 16
.LBB738_3:                              # =>This Inner Loop Header: Depth=1
	ld.bu	$a0, $s4, 0
	beqz	$a0, .LBB738_6
# %bb.4:                                #   in Loop: Header=BB738_3 Depth=1
	ext.w.b	$a0, $a0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s5, 0
	addi.d	$s6, $s6, -1
	addi.d	$s5, $s5, 1
	addi.d	$s4, $s4, 1
	bnez	$s6, .LBB738_3
	b	.LBB738_6
.LBB738_5:
	move	$s3, $zero
.LBB738_6:                              # %_ZN2kc27impl_nocasestring_NoCaseStr8make_ownEi.exit
	stx.b	$zero, $s2, $s3
	st.d	$s2, $fp, 8
.LBB738_7:
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB738_16
# %bb.8:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB738_16
# %bb.9:
	ld.d	$a0, $a0, 312
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 64
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$s2, $a0, 32
	bne	$s2, $fp, .LBB738_17
.LBB738_10:
	addi.w	$a1, $zero, -1
	ori	$a0, $zero, 48
	move	$s2, $fp
	blt	$a1, $s0, .LBB738_20
# %bb.11:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	addi.w	$s3, $a0, 0
	slli.d	$s2, $a0, 32
	ori	$a0, $zero, 0
	lu32i.d	$a0, 1
	add.d	$a0, $s2, $a0
	srai.d	$a0, $a0, 32
	pcaddu18i	$ra, %call36(_Znam)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 1
	move	$s0, $a0
	blt	$s3, $a1, .LBB738_15
# %bb.12:                               # %.lr.ph.i21
	ld.d	$s3, $fp, 8
	bstrpick.d	$s1, $s1, 30, 0
	move	$s4, $s0
	.p2align	4, , 16
.LBB738_13:                             # =>This Inner Loop Header: Depth=1
	ld.bu	$a0, $s3, 0
	beqz	$a0, .LBB738_15
# %bb.14:                               #   in Loop: Header=BB738_13 Depth=1
	ext.w.b	$a0, $a0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s4, 0
	addi.d	$s1, $s1, -1
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, 1
	bnez	$s1, .LBB738_13
.LBB738_15:                             # %_ZN2kc27impl_nocasestring_NoCaseStr8make_ownEi.exit27
	srai.d	$a0, $s2, 32
	stx.b	$zero, $s0, $a0
	ori	$a0, $zero, 48
	move	$s2, $fp
	b	.LBB738_19
.LBB738_16:
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 48
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$s2, $a0, 32
	beq	$s2, $fp, .LBB738_10
.LBB738_17:
	ori	$a0, $zero, 64
	bgez	$s0, .LBB738_20
# %bb.18:
	move	$s0, $zero
.LBB738_19:                             # %.sink.split
	st.d	$s0, $fp, 8
.LBB738_20:
	ld.d	$a1, $fp, 0
	ldx.d	$a1, $a1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $s2
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end738:
	.size	_ZN2kc14mknocasestringEPKci, .Lfunc_end738-_ZN2kc14mknocasestringEPKci
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9mkintegerEi              # -- Begin function _ZN2kc9mkintegerEi
	.p2align	5
	.type	_ZN2kc9mkintegerEi,@function
_ZN2kc9mkintegerEi:                     # @_ZN2kc9mkintegerEi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc17impl_integer__IntE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc17impl_integer__IntE)
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, 16
	st.d	$a1, $s0, 0
	st.w	$fp, $s0, 8
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	xor	$a0, $a0, $s0
	sltui	$a0, $a0, 1
	ld.d	$a1, $s0, 0
	ori	$a2, $zero, 64
	masknez	$a2, $a2, $a0
	ori	$a3, $zero, 48
	maskeqz	$a0, $a3, $a0
	or	$a0, $a0, $a2
	ldx.d	$a1, $a1, $a0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	move	$a0, $fp
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end739:
	.size	_ZN2kc9mkintegerEi, .Lfunc_end739-_ZN2kc9mkintegerEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_,"axG",@progbits,_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_,comdat
	.weak	_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_ # -- Begin function _ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_
	.p2align	5
	.type	_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_,@function
_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_: # @_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a0
	ld.bu	$a0, $a0, 321
	ori	$a2, $zero, 1
	move	$fp, $a1
	bne	$a0, $a2, .LBB740_11
# %bb.1:
	ld.d	$a0, $s0, 288
	addi.d	$a1, $s0, 288
	beq	$a0, $a1, .LBB740_11
# %bb.2:
	ld.d	$s4, $s0, 312
	ld.d	$a3, $s4, 128
	addi.d	$s0, $s4, 120
	move	$s1, $s0
	beqz	$a3, .LBB740_6
# %bb.3:                                # %.lr.ph.i.i.i.i
	ld.w	$a0, $fp, 8
	ori	$a2, $zero, 24
	ori	$a4, $zero, 16
	.p2align	4, , 16
.LBB740_4:                              # =>This Inner Loop Header: Depth=1
	move	$s1, $a3
	ld.d	$a1, $a3, 32
	ld.w	$a1, $a1, 8
	slt	$a3, $a0, $a1
	masknez	$a5, $a2, $a3
	maskeqz	$a3, $a4, $a3
	or	$a3, $a3, $a5
	ldx.d	$a3, $s1, $a3
	bnez	$a3, .LBB740_4
# %bb.5:                                # %._crit_edge.i.i.i.i
	move	$s3, $s1
	bge	$a0, $a1, .LBB740_8
.LBB740_6:                              # %._crit_edge.thread.i.i.i.i
	ld.d	$a0, $s4, 136
	beq	$s1, $a0, .LBB740_9
# %bb.7:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	ld.d	$a0, $a0, 32
	ld.w	$a1, $a0, 8
	ld.w	$a0, $fp, 8
.LBB740_8:
	bge	$a1, $a0, .LBB740_24
.LBB740_9:                              # %select.unfold.i.i.i
	beq	$s1, $s0, .LBB740_22
# %bb.10:
	ld.d	$a0, $s1, 32
	ld.w	$a1, $fp, 8
	ld.w	$a0, $a0, 8
	slt	$s2, $a1, $a0
	b	.LBB740_23
.LBB740_11:
	ld.d	$a3, $s0, 112
	addi.d	$s1, $s0, 104
	move	$s2, $s1
	beqz	$a3, .LBB740_15
# %bb.12:                               # %.lr.ph.i.i.i
	ld.w	$a0, $fp, 8
	ori	$a2, $zero, 24
	ori	$a4, $zero, 16
	.p2align	4, , 16
.LBB740_13:                             # =>This Inner Loop Header: Depth=1
	move	$s2, $a3
	ld.d	$a1, $a3, 32
	ld.w	$a1, $a1, 8
	slt	$a3, $a0, $a1
	masknez	$a5, $a2, $a3
	maskeqz	$a3, $a4, $a3
	or	$a3, $a3, $a5
	ldx.d	$a3, $s2, $a3
	bnez	$a3, .LBB740_13
# %bb.14:                               # %._crit_edge.i.i.i
	move	$s3, $s2
	bge	$a0, $a1, .LBB740_17
.LBB740_15:                             # %._crit_edge.thread.i.i.i
	ld.d	$a0, $s0, 120
	beq	$s2, $a0, .LBB740_18
# %bb.16:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	ld.d	$a0, $a0, 32
	ld.w	$a1, $a0, 8
	ld.w	$a0, $fp, 8
.LBB740_17:
	bge	$a1, $a0, .LBB740_24
.LBB740_18:                             # %select.unfold.i.i
	beq	$s2, $s1, .LBB740_20
# %bb.19:
	ld.d	$a0, $s2, 32
	ld.w	$a1, $fp, 8
	ld.w	$a0, $a0, 8
	slt	$s4, $a1, $a0
	b	.LBB740_21
.LBB740_20:
	ori	$s4, $zero, 1
.LBB740_21:                             # %_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_.exit.i.i
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$fp, $a0, 32
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s2
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 136
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 136
	b	.LBB740_24
.LBB740_22:
	ori	$s2, $zero, 1
.LBB740_23:                             # %_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_.exit.i.i.i
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$fp, $a0, 32
	move	$a0, $s2
	move	$a1, $s3
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 152
	addi.d	$a0, $a0, 1
	st.d	$a0, $s4, 152
.LBB740_24:                             # %_ZN2kc15hashtable_stack12check_insertIPNS_17impl_integer__IntEEET_S4_.exit
	ld.d	$a0, $s3, 32
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end740:
	.size	_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_, .Lfunc_end740-_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2kc6mkrealEd                 # -- Begin function _ZN2kc6mkrealEd
	.p2align	5
	.type	_ZN2kc6mkrealEd,@function
_ZN2kc6mkrealEd:                        # @_ZN2kc6mkrealEd
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	fst.d	$fs0, $sp, 0                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 56, -32
	fmov.d	$fs0, $fa0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc15impl_real__RealE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc15impl_real__RealE)
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, 16
	st.d	$a1, $fp, 0
	fst.d	$fs0, $fp, 8
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	xor	$a0, $a0, $fp
	sltui	$a0, $a0, 1
	ld.d	$a1, $fp, 0
	ori	$a2, $zero, 64
	masknez	$a2, $a2, $a0
	ori	$a3, $zero, 48
	maskeqz	$a0, $a3, $a0
	or	$a0, $a0, $a2
	ldx.d	$a1, $a1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $s0
	fld.d	$fs0, $sp, 0                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end741:
	.size	_ZN2kc6mkrealEd, .Lfunc_end741-_ZN2kc6mkrealEd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_,"axG",@progbits,_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_,comdat
	.weak	_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_ # -- Begin function _ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_
	.p2align	5
	.type	_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_,@function
_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_: # @_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a0
	ld.bu	$a0, $a0, 321
	ori	$a2, $zero, 1
	move	$fp, $a1
	bne	$a0, $a2, .LBB742_11
# %bb.1:
	ld.d	$a0, $s0, 288
	addi.d	$a1, $s0, 288
	beq	$a0, $a1, .LBB742_11
# %bb.2:
	ld.d	$s4, $s0, 312
	ld.d	$a2, $s4, 176
	addi.d	$s0, $s4, 168
	move	$s1, $s0
	beqz	$a2, .LBB742_6
# %bb.3:                                # %.lr.ph.i.i.i.i
	fld.d	$fa0, $fp, 8
	ori	$a0, $zero, 24
	ori	$a1, $zero, 16
	.p2align	4, , 16
.LBB742_4:                              # =>This Inner Loop Header: Depth=1
	move	$s1, $a2
	ld.d	$a2, $a2, 32
	fld.d	$fa1, $a2, 8
	fcmp.clt.d	$fcc0, $fa0, $fa1
	movcf2gr	$a2, $fcc0
	masknez	$a3, $a0, $a2
	maskeqz	$a2, $a1, $a2
	or	$a2, $a2, $a3
	ldx.d	$a2, $s1, $a2
	bnez	$a2, .LBB742_4
# %bb.5:                                # %._crit_edge.i.i.i.i
	fcmp.cule.d	$fcc0, $fa1, $fa0
	move	$s3, $s1
	bcnez	$fcc0, .LBB742_8
.LBB742_6:                              # %._crit_edge.thread.i.i.i.i
	ld.d	$a0, $s4, 184
	beq	$s1, $a0, .LBB742_9
# %bb.7:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	ld.d	$a0, $a0, 32
	fld.d	$fa1, $a0, 8
	fld.d	$fa0, $fp, 8
.LBB742_8:
	fcmp.cule.d	$fcc0, $fa0, $fa1
	bcnez	$fcc0, .LBB742_24
.LBB742_9:
	beq	$s1, $s0, .LBB742_22
# %bb.10:
	ld.d	$a0, $s1, 32
	fld.d	$fa0, $fp, 8
	fld.d	$fa1, $a0, 8
	fcmp.clt.d	$fcc0, $fa0, $fa1
	movcf2gr	$s2, $fcc0
	b	.LBB742_23
.LBB742_11:
	ld.d	$a2, $s0, 160
	addi.d	$s1, $s0, 152
	move	$s2, $s1
	beqz	$a2, .LBB742_15
# %bb.12:                               # %.lr.ph.i.i.i
	fld.d	$fa0, $fp, 8
	ori	$a0, $zero, 24
	ori	$a1, $zero, 16
	.p2align	4, , 16
.LBB742_13:                             # =>This Inner Loop Header: Depth=1
	move	$s2, $a2
	ld.d	$a2, $a2, 32
	fld.d	$fa1, $a2, 8
	fcmp.clt.d	$fcc0, $fa0, $fa1
	movcf2gr	$a2, $fcc0
	masknez	$a3, $a0, $a2
	maskeqz	$a2, $a1, $a2
	or	$a2, $a2, $a3
	ldx.d	$a2, $s2, $a2
	bnez	$a2, .LBB742_13
# %bb.14:                               # %._crit_edge.i.i.i
	fcmp.cule.d	$fcc0, $fa1, $fa0
	move	$s3, $s2
	bcnez	$fcc0, .LBB742_17
.LBB742_15:                             # %._crit_edge.thread.i.i.i
	ld.d	$a0, $s0, 168
	beq	$s2, $a0, .LBB742_18
# %bb.16:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	ld.d	$a0, $a0, 32
	fld.d	$fa1, $a0, 8
	fld.d	$fa0, $fp, 8
.LBB742_17:
	fcmp.cule.d	$fcc0, $fa0, $fa1
	bcnez	$fcc0, .LBB742_24
.LBB742_18:
	beq	$s2, $s1, .LBB742_20
# %bb.19:
	ld.d	$a0, $s2, 32
	fld.d	$fa0, $fp, 8
	fld.d	$fa1, $a0, 8
	fcmp.clt.d	$fcc0, $fa0, $fa1
	movcf2gr	$s4, $fcc0
	b	.LBB742_21
.LBB742_20:
	ori	$s4, $zero, 1
.LBB742_21:                             # %_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_.exit.i.i
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$fp, $a0, 32
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s2
	move	$a3, $s1
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 184
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 184
	b	.LBB742_24
.LBB742_22:
	ori	$s2, $zero, 1
.LBB742_23:                             # %_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_.exit.i.i.i
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$fp, $a0, 32
	move	$a0, $s2
	move	$a1, $s3
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 200
	addi.d	$a0, $a0, 1
	st.d	$a0, $s4, 200
.LBB742_24:                             # %_ZN2kc15hashtable_stack12check_insertIPNS_15impl_real__RealEEET_S4_.exit
	ld.d	$a0, $s3, 32
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end742:
	.size	_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_, .Lfunc_end742-_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2kc9mkvoidptrEPv             # -- Begin function _ZN2kc9mkvoidptrEPv
	.p2align	5
	.type	_ZN2kc9mkvoidptrEPv,@function
_ZN2kc9mkvoidptrEPv:                    # @_ZN2kc9mkvoidptrEPv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$s0, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_voidptr__VoidPtrE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_voidptr__VoidPtrE)
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, 16
	st.d	$a1, $fp, 0
	st.d	$s0, $fp, 8
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB743_3
# %bb.1:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB743_3
# %bb.2:
	ld.d	$a0, $a0, 312
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 208
	b	.LBB743_4
.LBB743_3:
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 192
.LBB743_4:                              # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_21impl_voidptr__VoidPtrEEET_S4_.exit
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$s0, $a0, 32
	xor	$a0, $s0, $fp
	sltui	$a0, $a0, 1
	ld.d	$a1, $fp, 0
	ori	$a2, $zero, 64
	masknez	$a2, $a2, $a0
	ori	$a3, $zero, 48
	maskeqz	$a0, $a3, $a0
	or	$a0, $a0, $a2
	ldx.d	$a1, $a1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end743:
	.size	_ZN2kc9mkvoidptrEPv, .Lfunc_end743-_ZN2kc9mkvoidptrEPv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc3StrEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc3StrEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc3StrEPNS_20impl_casestring__StrE,@function
_ZN2kc3StrEPNS_20impl_casestring__StrE: # @_ZN2kc3StrEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$s0, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc15impl_uniqID_StrE+16)
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc15impl_uniqID_StrE+16)
	st.d	$a1, $fp, 0
	st.d	$s0, $fp, 40
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB744_4
# %bb.1:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB744_4
# %bb.2:
	ld.d	$a0, $a0, 312
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB744_5
.LBB744_3:
	move	$s0, $zero
	b	.LBB744_6
.LBB744_4:
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 240
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB744_3
.LBB744_5:                              # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_11impl_uniqIDEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc11impl_uniqIDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc11impl_uniqIDE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	beq	$a0, $fp, .LBB744_7
.LBB744_6:                              # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_11impl_uniqIDEEET_S4_.exit.thread
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 64
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$fp, $s0
	b	.LBB744_8
.LBB744_7:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 48
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_IDtype_ITUnknownE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_IDtype_ITUnknownE)
	ld.d	$a2, $a1, 64
	move	$s0, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $s0, 0
	move	$a0, $s0
	jirl	$ra, $a2, 0
	st.d	$s0, $fp, 8
	st.w	$zero, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 24
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	st.d	$a0, $fp, 32
.LBB744_8:
	move	$a0, $fp
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end744:
	.size	_ZN2kc3StrEPNS_20impl_casestring__StrE, .Lfunc_end744-_ZN2kc3StrEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc2IdEPNS_11impl_uniqIDE    # -- Begin function _ZN2kc2IdEPNS_11impl_uniqIDE
	.p2align	5
	.type	_ZN2kc2IdEPNS_11impl_uniqIDE,@function
_ZN2kc2IdEPNS_11impl_uniqIDE:           # @_ZN2kc2IdEPNS_11impl_uniqIDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_ID_IdE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc10impl_ID_IdE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 40
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_IDtype_ITUnknownE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_IDtype_ITUnknownE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	st.d	$fp, $s0, 8
	st.d	$zero, $s0, 16
	st.w	$zero, $s0, 24
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 32
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end745:
	.size	_ZN2kc2IdEPNS_11impl_uniqIDE, .Lfunc_end745-_ZN2kc2IdEPNS_11impl_uniqIDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc3IntEPNS_17impl_integer__IntE # -- Begin function _ZN2kc3IntEPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc3IntEPNS_17impl_integer__IntE,@function
_ZN2kc3IntEPNS_17impl_integer__IntE:    # @_ZN2kc3IntEPNS_17impl_integer__IntE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc12impl_INT_IntE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc12impl_INT_IntE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end746:
	.size	_ZN2kc3IntEPNS_17impl_integer__IntE, .Lfunc_end746-_ZN2kc3IntEPNS_17impl_integer__IntE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6StringEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc6StringEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc6StringEPNS_20impl_casestring__StrE,@function
_ZN2kc6StringEPNS_20impl_casestring__StrE: # @_ZN2kc6StringEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_STRING_StringE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc18impl_STRING_StringE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end747:
	.size	_ZN2kc6StringEPNS_20impl_casestring__StrE, .Lfunc_end747-_ZN2kc6StringEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18PhylumDeclarationsEPNS_23impl_phylumdeclarationsE # -- Begin function _ZN2kc18PhylumDeclarationsEPNS_23impl_phylumdeclarationsE
	.p2align	5
	.type	_ZN2kc18PhylumDeclarationsEPNS_23impl_phylumdeclarationsE,@function
_ZN2kc18PhylumDeclarationsEPNS_23impl_phylumdeclarationsE: # @_ZN2kc18PhylumDeclarationsEPNS_23impl_phylumdeclarationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end748:
	.size	_ZN2kc18PhylumDeclarationsEPNS_23impl_phylumdeclarationsE, .Lfunc_end748-_ZN2kc18PhylumDeclarationsEPNS_23impl_phylumdeclarationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21NilphylumdeclarationsEv # -- Begin function _ZN2kc21NilphylumdeclarationsEv
	.p2align	5
	.type	_ZN2kc21NilphylumdeclarationsEv,@function
_ZN2kc21NilphylumdeclarationsEv:        # @_ZN2kc21NilphylumdeclarationsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_phylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_phylumdeclarationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end749:
	.size	_ZN2kc21NilphylumdeclarationsEv, .Lfunc_end749-_ZN2kc21NilphylumdeclarationsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22ConsphylumdeclarationsEPNS_22impl_phylumdeclarationEPNS_23impl_phylumdeclarationsE # -- Begin function _ZN2kc22ConsphylumdeclarationsEPNS_22impl_phylumdeclarationEPNS_23impl_phylumdeclarationsE
	.p2align	5
	.type	_ZN2kc22ConsphylumdeclarationsEPNS_22impl_phylumdeclarationEPNS_23impl_phylumdeclarationsE,@function
_ZN2kc22ConsphylumdeclarationsEPNS_22impl_phylumdeclarationEPNS_23impl_phylumdeclarationsE: # @_ZN2kc22ConsphylumdeclarationsEPNS_22impl_phylumdeclarationEPNS_23impl_phylumdeclarationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_phylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_phylumdeclarationsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end750:
	.size	_ZN2kc22ConsphylumdeclarationsEPNS_22impl_phylumdeclarationEPNS_23impl_phylumdeclarationsE, .Lfunc_end750-_ZN2kc22ConsphylumdeclarationsEPNS_22impl_phylumdeclarationEPNS_23impl_phylumdeclarationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14NilphylumnamesEv        # -- Begin function _ZN2kc14NilphylumnamesEv
	.p2align	5
	.type	_ZN2kc14NilphylumnamesEv,@function
_ZN2kc14NilphylumnamesEv:               # @_ZN2kc14NilphylumnamesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end751:
	.size	_ZN2kc14NilphylumnamesEv, .Lfunc_end751-_ZN2kc14NilphylumnamesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15ConsphylumnamesEPNS_7impl_IDEPNS_16impl_phylumnamesE # -- Begin function _ZN2kc15ConsphylumnamesEPNS_7impl_IDEPNS_16impl_phylumnamesE
	.p2align	5
	.type	_ZN2kc15ConsphylumnamesEPNS_7impl_IDEPNS_16impl_phylumnamesE,@function
_ZN2kc15ConsphylumnamesEPNS_7impl_IDEPNS_16impl_phylumnamesE: # @_ZN2kc15ConsphylumnamesEPNS_7impl_IDEPNS_16impl_phylumnamesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end752:
	.size	_ZN2kc15ConsphylumnamesEPNS_7impl_IDEPNS_16impl_phylumnamesE, .Lfunc_end752-_ZN2kc15ConsphylumnamesEPNS_7impl_IDEPNS_16impl_phylumnamesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17PhylumDeclarationEPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE # -- Begin function _ZN2kc17PhylumDeclarationEPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE
	.p2align	5
	.type	_ZN2kc17PhylumDeclarationEPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE,@function
_ZN2kc17PhylumDeclarationEPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE: # @_ZN2kc17PhylumDeclarationEPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 64
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc40impl_phylumdeclaration_PhylumDeclarationE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc40impl_phylumdeclaration_PhylumDeclarationE+16)
	st.d	$a0, $s3, 0
	st.d	$s2, $s3, 32
	st.d	$s1, $s3, 40
	st.d	$s0, $s3, 48
	st.d	$fp, $s3, 56
	st.w	$zero, $s3, 8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vst	$vr0, $a0, 8
	st.d	$a0, $s3, 16
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_baseclass_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_baseclass_listE+16)
	st.d	$a1, $a0, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 8
	st.d	$a0, $s3, 24
	move	$a0, $s3
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end753:
	.size	_ZN2kc17PhylumDeclarationEPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE, .Lfunc_end753-_ZN2kc17PhylumDeclarationEPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15NoStorageOptionEv       # -- Begin function _ZN2kc15NoStorageOptionEv
	.p2align	5
	.type	_ZN2kc15NoStorageOptionEv,@function
_ZN2kc15NoStorageOptionEv:              # @_ZN2kc15NoStorageOptionEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc34impl_storageoption_NoStorageOptionE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc34impl_storageoption_NoStorageOptionE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end754:
	.size	_ZN2kc15NoStorageOptionEv, .Lfunc_end754-_ZN2kc15NoStorageOptionEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21NegativeStorageOptionEPNS_7impl_IDE # -- Begin function _ZN2kc21NegativeStorageOptionEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc21NegativeStorageOptionEPNS_7impl_IDE,@function
_ZN2kc21NegativeStorageOptionEPNS_7impl_IDE: # @_ZN2kc21NegativeStorageOptionEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_storageoption_NegativeStorageOptionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_storageoption_NegativeStorageOptionE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end755:
	.size	_ZN2kc21NegativeStorageOptionEPNS_7impl_IDE, .Lfunc_end755-_ZN2kc21NegativeStorageOptionEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21PositiveStorageOptionEPNS_7impl_IDE # -- Begin function _ZN2kc21PositiveStorageOptionEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc21PositiveStorageOptionEPNS_7impl_IDE,@function
_ZN2kc21PositiveStorageOptionEPNS_7impl_IDE: # @_ZN2kc21PositiveStorageOptionEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_storageoption_PositiveStorageOptionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_storageoption_PositiveStorageOptionE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end756:
	.size	_ZN2kc21PositiveStorageOptionEPNS_7impl_IDE, .Lfunc_end756-_ZN2kc21PositiveStorageOptionEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17NilstorageclassesEv     # -- Begin function _ZN2kc17NilstorageclassesEv
	.p2align	5
	.type	_ZN2kc17NilstorageclassesEv,@function
_ZN2kc17NilstorageclassesEv:            # @_ZN2kc17NilstorageclassesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_storageclassesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_storageclassesE+16)
	st.d	$a0, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vst	$vr0, $fp, 16
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	st.d	$a1, $a0, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 8
	st.d	$a0, $fp, 8
	move	$a0, $fp
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end757:
	.size	_ZN2kc17NilstorageclassesEv, .Lfunc_end757-_ZN2kc17NilstorageclassesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18ConsstorageclassesEPNS_7impl_IDEPNS_19impl_storageclassesE # -- Begin function _ZN2kc18ConsstorageclassesEPNS_7impl_IDEPNS_19impl_storageclassesE
	.p2align	5
	.type	_ZN2kc18ConsstorageclassesEPNS_7impl_IDEPNS_19impl_storageclassesE,@function
_ZN2kc18ConsstorageclassesEPNS_7impl_IDEPNS_19impl_storageclassesE: # @_ZN2kc18ConsstorageclassesEPNS_7impl_IDEPNS_19impl_storageclassesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_storageclassesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_storageclassesE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 16
	st.d	$fp, $s1, 24
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	st.d	$a0, $s1, 8
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end758:
	.size	_ZN2kc18ConsstorageclassesEPNS_7impl_IDEPNS_19impl_storageclassesE, .Lfunc_end758-_ZN2kc18ConsstorageclassesEPNS_7impl_IDEPNS_19impl_storageclassesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20EmptyproductionblockEv  # -- Begin function _ZN2kc20EmptyproductionblockEv
	.p2align	5
	.type	_ZN2kc20EmptyproductionblockEv,@function
_ZN2kc20EmptyproductionblockEv:         # @_ZN2kc20EmptyproductionblockEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_productionblock_EmptyproductionblockE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_productionblock_EmptyproductionblockE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end759:
	.size	_ZN2kc20EmptyproductionblockEv, .Lfunc_end759-_ZN2kc20EmptyproductionblockEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16ListAlternativesEPNS_17impl_alternativesEPNS_7impl_IDE # -- Begin function _ZN2kc16ListAlternativesEPNS_17impl_alternativesEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc16ListAlternativesEPNS_17impl_alternativesEPNS_7impl_IDE,@function
_ZN2kc16ListAlternativesEPNS_17impl_alternativesEPNS_7impl_IDE: # @_ZN2kc16ListAlternativesEPNS_17impl_alternativesEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_productionblock_ListAlternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_productionblock_ListAlternativesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end760:
	.size	_ZN2kc16ListAlternativesEPNS_17impl_alternativesEPNS_7impl_IDE, .Lfunc_end760-_ZN2kc16ListAlternativesEPNS_17impl_alternativesEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19NonlistAlternativesEPNS_17impl_alternativesE # -- Begin function _ZN2kc19NonlistAlternativesEPNS_17impl_alternativesE
	.p2align	5
	.type	_ZN2kc19NonlistAlternativesEPNS_17impl_alternativesE,@function
_ZN2kc19NonlistAlternativesEPNS_17impl_alternativesE: # @_ZN2kc19NonlistAlternativesEPNS_17impl_alternativesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_productionblock_NonlistAlternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_productionblock_NonlistAlternativesE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end761:
	.size	_ZN2kc19NonlistAlternativesEPNS_17impl_alternativesE, .Lfunc_end761-_ZN2kc19NonlistAlternativesEPNS_17impl_alternativesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22PredefinedAlternativesEPNS_17impl_alternativesE # -- Begin function _ZN2kc22PredefinedAlternativesEPNS_17impl_alternativesE
	.p2align	5
	.type	_ZN2kc22PredefinedAlternativesEPNS_17impl_alternativesE,@function
_ZN2kc22PredefinedAlternativesEPNS_17impl_alternativesE: # @_ZN2kc22PredefinedAlternativesEPNS_17impl_alternativesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc43impl_productionblock_PredefinedAlternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc43impl_productionblock_PredefinedAlternativesE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end762:
	.size	_ZN2kc22PredefinedAlternativesEPNS_17impl_alternativesE, .Lfunc_end762-_ZN2kc22PredefinedAlternativesEPNS_17impl_alternativesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15NilalternativesEv       # -- Begin function _ZN2kc15NilalternativesEv
	.p2align	5
	.type	_ZN2kc15NilalternativesEv,@function
_ZN2kc15NilalternativesEv:              # @_ZN2kc15NilalternativesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_alternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_alternativesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end763:
	.size	_ZN2kc15NilalternativesEv, .Lfunc_end763-_ZN2kc15NilalternativesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16ConsalternativesEPNS_16impl_alternativeEPNS_17impl_alternativesE # -- Begin function _ZN2kc16ConsalternativesEPNS_16impl_alternativeEPNS_17impl_alternativesE
	.p2align	5
	.type	_ZN2kc16ConsalternativesEPNS_16impl_alternativeEPNS_17impl_alternativesE,@function
_ZN2kc16ConsalternativesEPNS_16impl_alternativeEPNS_17impl_alternativesE: # @_ZN2kc16ConsalternativesEPNS_16impl_alternativeEPNS_17impl_alternativesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_alternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_alternativesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end764:
	.size	_ZN2kc16ConsalternativesEPNS_16impl_alternativeEPNS_17impl_alternativesE, .Lfunc_end764-_ZN2kc16ConsalternativesEPNS_16impl_alternativeEPNS_17impl_alternativesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11AlternativeEPNS_7impl_IDEPNS_14impl_argumentsE # -- Begin function _ZN2kc11AlternativeEPNS_7impl_IDEPNS_14impl_argumentsE
	.p2align	5
	.type	_ZN2kc11AlternativeEPNS_7impl_IDEPNS_14impl_argumentsE,@function
_ZN2kc11AlternativeEPNS_7impl_IDEPNS_14impl_argumentsE: # @_ZN2kc11AlternativeEPNS_7impl_IDEPNS_14impl_argumentsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 56
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc28impl_alternative_AlternativeE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc28impl_alternative_AlternativeE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 40
	st.d	$fp, $s1, 48
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_rewriterulesinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_rewriterulesinfoE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vst	$vr0, $a0, 8
	st.d	$a0, $s1, 8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	st.d	$a1, $a0, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 8
	st.d	$a0, $s1, 16
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	st.d	$a1, $a0, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 8
	st.d	$a0, $s1, 24
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_baseclass_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_baseclass_listE+16)
	st.d	$a1, $a0, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 8
	st.d	$a0, $s1, 32
	move	$a0, $s1
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end765:
	.size	_ZN2kc11AlternativeEPNS_7impl_IDEPNS_14impl_argumentsE, .Lfunc_end765-_ZN2kc11AlternativeEPNS_7impl_IDEPNS_14impl_argumentsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12NilargumentsEv          # -- Begin function _ZN2kc12NilargumentsEv
	.p2align	5
	.type	_ZN2kc12NilargumentsEv,@function
_ZN2kc12NilargumentsEv:                 # @_ZN2kc12NilargumentsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_argumentsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_argumentsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end766:
	.size	_ZN2kc12NilargumentsEv, .Lfunc_end766-_ZN2kc12NilargumentsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13ConsargumentsEPNS_7impl_IDEPNS_14impl_argumentsE # -- Begin function _ZN2kc13ConsargumentsEPNS_7impl_IDEPNS_14impl_argumentsE
	.p2align	5
	.type	_ZN2kc13ConsargumentsEPNS_7impl_IDEPNS_14impl_argumentsE,@function
_ZN2kc13ConsargumentsEPNS_7impl_IDEPNS_14impl_argumentsE: # @_ZN2kc13ConsargumentsEPNS_7impl_IDEPNS_14impl_argumentsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_argumentsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_argumentsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end767:
	.size	_ZN2kc13ConsargumentsEPNS_7impl_IDEPNS_14impl_argumentsE, .Lfunc_end767-_ZN2kc13ConsargumentsEPNS_7impl_IDEPNS_14impl_argumentsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8ArgumentEPNS_7impl_IDEPNS_17impl_integer__IntE # -- Begin function _ZN2kc8ArgumentEPNS_7impl_IDEPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc8ArgumentEPNS_7impl_IDEPNS_17impl_integer__IntE,@function
_ZN2kc8ArgumentEPNS_7impl_IDEPNS_17impl_integer__IntE: # @_ZN2kc8ArgumentEPNS_7impl_IDEPNS_17impl_integer__IntE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_argument_ArgumentE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_argument_ArgumentE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end768:
	.size	_ZN2kc8ArgumentEPNS_7impl_IDEPNS_17impl_integer__IntE, .Lfunc_end768-_ZN2kc8ArgumentEPNS_7impl_IDEPNS_17impl_integer__IntE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11CcodeOptionEPNS_15impl_attributesEPNS_11impl_CtextsE # -- Begin function _ZN2kc11CcodeOptionEPNS_15impl_attributesEPNS_11impl_CtextsE
	.p2align	5
	.type	_ZN2kc11CcodeOptionEPNS_15impl_attributesEPNS_11impl_CtextsE,@function
_ZN2kc11CcodeOptionEPNS_15impl_attributesEPNS_11impl_CtextsE: # @_ZN2kc11CcodeOptionEPNS_15impl_attributesEPNS_11impl_CtextsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_Ccode_option_CcodeOptionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_Ccode_option_CcodeOptionE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end769:
	.size	_ZN2kc11CcodeOptionEPNS_15impl_attributesEPNS_11impl_CtextsE, .Lfunc_end769-_ZN2kc11CcodeOptionEPNS_15impl_attributesEPNS_11impl_CtextsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13NilattributesEv         # -- Begin function _ZN2kc13NilattributesEv
	.p2align	5
	.type	_ZN2kc13NilattributesEv,@function
_ZN2kc13NilattributesEv:                # @_ZN2kc13NilattributesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc15impl_attributesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc15impl_attributesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end770:
	.size	_ZN2kc13NilattributesEv, .Lfunc_end770-_ZN2kc13NilattributesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14ConsattributesEPNS_14impl_attributeEPNS_15impl_attributesE # -- Begin function _ZN2kc14ConsattributesEPNS_14impl_attributeEPNS_15impl_attributesE
	.p2align	5
	.type	_ZN2kc14ConsattributesEPNS_14impl_attributeEPNS_15impl_attributesE,@function
_ZN2kc14ConsattributesEPNS_14impl_attributeEPNS_15impl_attributesE: # @_ZN2kc14ConsattributesEPNS_14impl_attributeEPNS_15impl_attributesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc15impl_attributesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc15impl_attributesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end771:
	.size	_ZN2kc14ConsattributesEPNS_14impl_attributeEPNS_15impl_attributesE, .Lfunc_end771-_ZN2kc14ConsattributesEPNS_14impl_attributeEPNS_15impl_attributesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9AttributeEPNS_7impl_IDES1_PNS_36impl_attribute_initialisation_optionE # -- Begin function _ZN2kc9AttributeEPNS_7impl_IDES1_PNS_36impl_attribute_initialisation_optionE
	.p2align	5
	.type	_ZN2kc9AttributeEPNS_7impl_IDES1_PNS_36impl_attribute_initialisation_optionE,@function
_ZN2kc9AttributeEPNS_7impl_IDES1_PNS_36impl_attribute_initialisation_optionE: # @_ZN2kc9AttributeEPNS_7impl_IDES1_PNS_36impl_attribute_initialisation_optionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_attribute_AttributeE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_attribute_AttributeE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end772:
	.size	_ZN2kc9AttributeEPNS_7impl_IDES1_PNS_36impl_attribute_initialisation_optionE, .Lfunc_end772-_ZN2kc9AttributeEPNS_7impl_IDES1_PNS_36impl_attribute_initialisation_optionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26Noattribute_initialisationEv # -- Begin function _ZN2kc26Noattribute_initialisationEv
	.p2align	5
	.type	_ZN2kc26Noattribute_initialisationEv,@function
_ZN2kc26Noattribute_initialisationEv:   # @_ZN2kc26Noattribute_initialisationEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc63impl_attribute_initialisation_option_Noattribute_initialisationE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc63impl_attribute_initialisation_option_Noattribute_initialisationE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end773:
	.size	_ZN2kc26Noattribute_initialisationEv, .Lfunc_end773-_ZN2kc26Noattribute_initialisationEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27Yesattribute_initialisationEPNS_16impl_CexpressionE # -- Begin function _ZN2kc27Yesattribute_initialisationEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc27Yesattribute_initialisationEPNS_16impl_CexpressionE,@function
_ZN2kc27Yesattribute_initialisationEPNS_16impl_CexpressionE: # @_ZN2kc27Yesattribute_initialisationEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end774:
	.size	_ZN2kc27Yesattribute_initialisationEPNS_16impl_CexpressionE, .Lfunc_end774-_ZN2kc27Yesattribute_initialisationEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14NilCexpressionEv        # -- Begin function _ZN2kc14NilCexpressionEv
	.p2align	5
	.type	_ZN2kc14NilCexpressionEv,@function
_ZN2kc14NilCexpressionEv:               # @_ZN2kc14NilCexpressionEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc16impl_CexpressionE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc16impl_CexpressionE+16)
	st.d	$a0, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 24
	st.w	$zero, $fp, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 16
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end775:
	.size	_ZN2kc14NilCexpressionEv, .Lfunc_end775-_ZN2kc14NilCexpressionEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15ConsCexpressionEPNS_21impl_Cexpression_elemEPNS_16impl_CexpressionE # -- Begin function _ZN2kc15ConsCexpressionEPNS_21impl_Cexpression_elemEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc15ConsCexpressionEPNS_21impl_Cexpression_elemEPNS_16impl_CexpressionE,@function
_ZN2kc15ConsCexpressionEPNS_21impl_Cexpression_elemEPNS_16impl_CexpressionE: # @_ZN2kc15ConsCexpressionEPNS_21impl_Cexpression_elemEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc16impl_CexpressionE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc16impl_CexpressionE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 24
	st.d	$fp, $s1, 32
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end776:
	.size	_ZN2kc15ConsCexpressionEPNS_21impl_Cexpression_elemEPNS_16impl_CexpressionE, .Lfunc_end776-_ZN2kc15ConsCexpressionEPNS_21impl_Cexpression_elemEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15CExpressionPartEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc15CExpressionPartEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc15CExpressionPartEPNS_20impl_casestring__StrE,@function
_ZN2kc15CExpressionPartEPNS_20impl_casestring__StrE: # @_ZN2kc15CExpressionPartEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end777:
	.size	_ZN2kc15CExpressionPartEPNS_20impl_casestring__StrE, .Lfunc_end777-_ZN2kc15CExpressionPartEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20CExpressionDollarvarEPNS_8impl_INTE # -- Begin function _ZN2kc20CExpressionDollarvarEPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc20CExpressionDollarvarEPNS_8impl_INTE,@function
_ZN2kc20CExpressionDollarvarEPNS_8impl_INTE: # @_ZN2kc20CExpressionDollarvarEPNS_8impl_INTE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end778:
	.size	_ZN2kc20CExpressionDollarvarEPNS_8impl_INTE, .Lfunc_end778-_ZN2kc20CExpressionDollarvarEPNS_8impl_INTE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13CExpressionNlEv         # -- Begin function _ZN2kc13CExpressionNlEv
	.p2align	5
	.type	_ZN2kc13CExpressionNlEv,@function
_ZN2kc13CExpressionNlEv:                # @_ZN2kc13CExpressionNlEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc35impl_Cexpression_elem_CExpressionNlE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc35impl_Cexpression_elem_CExpressionNlE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end779:
	.size	_ZN2kc13CExpressionNlEv, .Lfunc_end779-_ZN2kc13CExpressionNlEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13CExpressionDQEPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc13CExpressionDQEPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc13CExpressionDQEPNS_18impl_CexpressionDQE,@function
_ZN2kc13CExpressionDQEPNS_18impl_CexpressionDQE: # @_ZN2kc13CExpressionDQEPNS_18impl_CexpressionDQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end780:
	.size	_ZN2kc13CExpressionDQEPNS_18impl_CexpressionDQE, .Lfunc_end780-_ZN2kc13CExpressionDQEPNS_18impl_CexpressionDQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13CExpressionSQEPNS_18impl_CexpressionSQE # -- Begin function _ZN2kc13CExpressionSQEPNS_18impl_CexpressionSQE
	.p2align	5
	.type	_ZN2kc13CExpressionSQEPNS_18impl_CexpressionSQE,@function
_ZN2kc13CExpressionSQEPNS_18impl_CexpressionSQE: # @_ZN2kc13CExpressionSQEPNS_18impl_CexpressionSQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end781:
	.size	_ZN2kc13CExpressionSQEPNS_18impl_CexpressionSQE, .Lfunc_end781-_ZN2kc13CExpressionSQEPNS_18impl_CexpressionSQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15CExpressionPackEPNS_16impl_CexpressionE # -- Begin function _ZN2kc15CExpressionPackEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc15CExpressionPackEPNS_16impl_CexpressionE,@function
_ZN2kc15CExpressionPackEPNS_16impl_CexpressionE: # @_ZN2kc15CExpressionPackEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end782:
	.size	_ZN2kc15CExpressionPackEPNS_16impl_CexpressionE, .Lfunc_end782-_ZN2kc15CExpressionPackEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16CExpressionArrayEPNS_16impl_CexpressionE # -- Begin function _ZN2kc16CExpressionArrayEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc16CExpressionArrayEPNS_16impl_CexpressionE,@function
_ZN2kc16CExpressionArrayEPNS_16impl_CexpressionE: # @_ZN2kc16CExpressionArrayEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end783:
	.size	_ZN2kc16CExpressionArrayEPNS_16impl_CexpressionE, .Lfunc_end783-_ZN2kc16CExpressionArrayEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16NilCexpressionDQEv      # -- Begin function _ZN2kc16NilCexpressionDQEv
	.p2align	5
	.type	_ZN2kc16NilCexpressionDQEv,@function
_ZN2kc16NilCexpressionDQEv:             # @_ZN2kc16NilCexpressionDQEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_CexpressionDQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_CexpressionDQE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end784:
	.size	_ZN2kc16NilCexpressionDQEv, .Lfunc_end784-_ZN2kc16NilCexpressionDQEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ConsCexpressionDQEPNS_23impl_CexpressionDQ_elemEPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc17ConsCexpressionDQEPNS_23impl_CexpressionDQ_elemEPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc17ConsCexpressionDQEPNS_23impl_CexpressionDQ_elemEPNS_18impl_CexpressionDQE,@function
_ZN2kc17ConsCexpressionDQEPNS_23impl_CexpressionDQ_elemEPNS_18impl_CexpressionDQE: # @_ZN2kc17ConsCexpressionDQEPNS_23impl_CexpressionDQ_elemEPNS_18impl_CexpressionDQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_CexpressionDQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_CexpressionDQE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end785:
	.size	_ZN2kc17ConsCexpressionDQEPNS_23impl_CexpressionDQ_elemEPNS_18impl_CexpressionDQE, .Lfunc_end785-_ZN2kc17ConsCexpressionDQEPNS_23impl_CexpressionDQ_elemEPNS_18impl_CexpressionDQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17CExpressionDQPartEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc17CExpressionDQPartEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc17CExpressionDQPartEPNS_20impl_casestring__StrE,@function
_ZN2kc17CExpressionDQPartEPNS_20impl_casestring__StrE: # @_ZN2kc17CExpressionDQPartEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end786:
	.size	_ZN2kc17CExpressionDQPartEPNS_20impl_casestring__StrE, .Lfunc_end786-_ZN2kc17CExpressionDQPartEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15CExpressionDQNlEv       # -- Begin function _ZN2kc15CExpressionDQNlEv
	.p2align	5
	.type	_ZN2kc15CExpressionDQNlEv,@function
_ZN2kc15CExpressionDQNlEv:              # @_ZN2kc15CExpressionDQNlEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc39impl_CexpressionDQ_elem_CExpressionDQNlE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc39impl_CexpressionDQ_elem_CExpressionDQNlE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end787:
	.size	_ZN2kc15CExpressionDQNlEv, .Lfunc_end787-_ZN2kc15CExpressionDQNlEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16NilCexpressionSQEv      # -- Begin function _ZN2kc16NilCexpressionSQEv
	.p2align	5
	.type	_ZN2kc16NilCexpressionSQEv,@function
_ZN2kc16NilCexpressionSQEv:             # @_ZN2kc16NilCexpressionSQEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_CexpressionSQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_CexpressionSQE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end788:
	.size	_ZN2kc16NilCexpressionSQEv, .Lfunc_end788-_ZN2kc16NilCexpressionSQEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ConsCexpressionSQEPNS_23impl_CexpressionSQ_elemEPNS_18impl_CexpressionSQE # -- Begin function _ZN2kc17ConsCexpressionSQEPNS_23impl_CexpressionSQ_elemEPNS_18impl_CexpressionSQE
	.p2align	5
	.type	_ZN2kc17ConsCexpressionSQEPNS_23impl_CexpressionSQ_elemEPNS_18impl_CexpressionSQE,@function
_ZN2kc17ConsCexpressionSQEPNS_23impl_CexpressionSQ_elemEPNS_18impl_CexpressionSQE: # @_ZN2kc17ConsCexpressionSQEPNS_23impl_CexpressionSQ_elemEPNS_18impl_CexpressionSQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_CexpressionSQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_CexpressionSQE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end789:
	.size	_ZN2kc17ConsCexpressionSQEPNS_23impl_CexpressionSQ_elemEPNS_18impl_CexpressionSQE, .Lfunc_end789-_ZN2kc17ConsCexpressionSQEPNS_23impl_CexpressionSQ_elemEPNS_18impl_CexpressionSQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17CExpressionSQPartEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc17CExpressionSQPartEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc17CExpressionSQPartEPNS_20impl_casestring__StrE,@function
_ZN2kc17CExpressionSQPartEPNS_20impl_casestring__StrE: # @_ZN2kc17CExpressionSQPartEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end790:
	.size	_ZN2kc17CExpressionSQPartEPNS_20impl_casestring__StrE, .Lfunc_end790-_ZN2kc17CExpressionSQPartEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15CExpressionSQNlEv       # -- Begin function _ZN2kc15CExpressionSQNlEv
	.p2align	5
	.type	_ZN2kc15CExpressionSQNlEv,@function
_ZN2kc15CExpressionSQNlEv:              # @_ZN2kc15CExpressionSQNlEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc39impl_CexpressionSQ_elem_CExpressionSQNlE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc39impl_CexpressionSQ_elem_CExpressionSQNlE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end791:
	.size	_ZN2kc15CExpressionSQNlEv, .Lfunc_end791-_ZN2kc15CExpressionSQNlEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17NilidCexpressionsEv     # -- Begin function _ZN2kc17NilidCexpressionsEv
	.p2align	5
	.type	_ZN2kc17NilidCexpressionsEv,@function
_ZN2kc17NilidCexpressionsEv:            # @_ZN2kc17NilidCexpressionsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_idCexpressionsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_idCexpressionsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end792:
	.size	_ZN2kc17NilidCexpressionsEv, .Lfunc_end792-_ZN2kc17NilidCexpressionsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18ConsidCexpressionsEPNS_18impl_idCexpressionEPNS_19impl_idCexpressionsE # -- Begin function _ZN2kc18ConsidCexpressionsEPNS_18impl_idCexpressionEPNS_19impl_idCexpressionsE
	.p2align	5
	.type	_ZN2kc18ConsidCexpressionsEPNS_18impl_idCexpressionEPNS_19impl_idCexpressionsE,@function
_ZN2kc18ConsidCexpressionsEPNS_18impl_idCexpressionEPNS_19impl_idCexpressionsE: # @_ZN2kc18ConsidCexpressionsEPNS_18impl_idCexpressionEPNS_19impl_idCexpressionsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_idCexpressionsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_idCexpressionsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end793:
	.size	_ZN2kc18ConsidCexpressionsEPNS_18impl_idCexpressionEPNS_19impl_idCexpressionsE, .Lfunc_end793-_ZN2kc18ConsidCexpressionsEPNS_18impl_idCexpressionEPNS_19impl_idCexpressionsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13IdCexpressionEPNS_7impl_IDEPNS_16impl_CexpressionE # -- Begin function _ZN2kc13IdCexpressionEPNS_7impl_IDEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc13IdCexpressionEPNS_7impl_IDEPNS_16impl_CexpressionE,@function
_ZN2kc13IdCexpressionEPNS_7impl_IDEPNS_16impl_CexpressionE: # @_ZN2kc13IdCexpressionEPNS_7impl_IDEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc32impl_idCexpression_IdCexpressionE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc32impl_idCexpression_IdCexpressionE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 16
	st.d	$fp, $s1, 24
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end794:
	.size	_ZN2kc13IdCexpressionEPNS_7impl_IDEPNS_16impl_CexpressionE, .Lfunc_end794-_ZN2kc13IdCexpressionEPNS_7impl_IDEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9NilCtextsEv              # -- Begin function _ZN2kc9NilCtextsEv
	.p2align	5
	.type	_ZN2kc9NilCtextsEv,@function
_ZN2kc9NilCtextsEv:                     # @_ZN2kc9NilCtextsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc11impl_CtextsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc11impl_CtextsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end795:
	.size	_ZN2kc9NilCtextsEv, .Lfunc_end795-_ZN2kc9NilCtextsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10ConsCtextsEPNS_10impl_CtextEPNS_11impl_CtextsE # -- Begin function _ZN2kc10ConsCtextsEPNS_10impl_CtextEPNS_11impl_CtextsE
	.p2align	5
	.type	_ZN2kc10ConsCtextsEPNS_10impl_CtextEPNS_11impl_CtextsE,@function
_ZN2kc10ConsCtextsEPNS_10impl_CtextEPNS_11impl_CtextsE: # @_ZN2kc10ConsCtextsEPNS_10impl_CtextEPNS_11impl_CtextsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc11impl_CtextsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc11impl_CtextsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end796:
	.size	_ZN2kc10ConsCtextsEPNS_10impl_CtextEPNS_11impl_CtextsE, .Lfunc_end796-_ZN2kc10ConsCtextsEPNS_10impl_CtextEPNS_11impl_CtextsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15NilincludefilesEv       # -- Begin function _ZN2kc15NilincludefilesEv
	.p2align	5
	.type	_ZN2kc15NilincludefilesEv,@function
_ZN2kc15NilincludefilesEv:              # @_ZN2kc15NilincludefilesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_includefilesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_includefilesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end797:
	.size	_ZN2kc15NilincludefilesEv, .Lfunc_end797-_ZN2kc15NilincludefilesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16ConsincludefilesEPNS_16impl_includefileEPNS_17impl_includefilesE # -- Begin function _ZN2kc16ConsincludefilesEPNS_16impl_includefileEPNS_17impl_includefilesE
	.p2align	5
	.type	_ZN2kc16ConsincludefilesEPNS_16impl_includefileEPNS_17impl_includefilesE,@function
_ZN2kc16ConsincludefilesEPNS_16impl_includefileEPNS_17impl_includefilesE: # @_ZN2kc16ConsincludefilesEPNS_16impl_includefileEPNS_17impl_includefilesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_includefilesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_includefilesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end798:
	.size	_ZN2kc16ConsincludefilesEPNS_16impl_includefileEPNS_17impl_includefilesE, .Lfunc_end798-_ZN2kc16ConsincludefilesEPNS_16impl_includefileEPNS_17impl_includefilesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11IncludeFileEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc11IncludeFileEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc11IncludeFileEPNS_20impl_casestring__StrE,@function
_ZN2kc11IncludeFileEPNS_20impl_casestring__StrE: # @_ZN2kc11IncludeFileEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_includefile_IncludeFileE+16)
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_includefile_IncludeFileE+16)
	st.d	$a1, $fp, 0
	st.d	$s0, $fp, 32
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB799_4
# %bb.1:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB799_4
# %bb.2:
	ld.d	$a0, $a0, 312
	st.d	$fp, $sp, 24
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 24
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB799_5
.LBB799_3:
	move	$s0, $zero
	b	.LBB799_6
.LBB799_4:
	st.d	$fp, $sp, 24
	addi.d	$a0, $a0, 240
	addi.d	$a1, $sp, 24
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB799_3
.LBB799_5:                              # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_16impl_includefileEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_includefileE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_includefileE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	beq	$a0, $fp, .LBB799_7
.LBB799_6:                              # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_16impl_includefileEEET_S4_.exit.thread
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 64
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$fp, $s0
	b	.LBB799_11
.LBB799_7:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 48
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_includedeclarationsE+16)
	addi.d	$s0, $a1, %pc_lo12(_ZTVN2kc24impl_includedeclarationsE+16)
	st.d	$s0, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vst	$vr0, $a0, 8
	st.d	$a0, $fp, 16
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(Theincludefiles)
	ld.d	$s1, $a1, %got_pc_lo12(Theincludefiles)
	ld.d	$s2, $s1, 0
	st.d	$s0, $a0, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 8
	st.d	$a0, $fp, 24
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_includefilesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc17impl_includefilesE+16)
	st.d	$s3, $s0, 0
	addi.d	$a0, $s0, 8
	beqz	$s2, .LBB799_9
# %bb.8:
	st.d	$fp, $a0, 0
	move	$a0, $s0
	move	$s0, $s2
	b	.LBB799_10
.LBB799_9:
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$s3, $a0, 0
	st.d	$fp, $a0, 8
.LBB799_10:                             # %_ZN2kc12_GLOBAL__N_125kc_initialize_includefileEPNS_16impl_includefileE.exit
	st.d	$s0, $a0, 16
	st.d	$a0, $s1, 0
.LBB799_11:
	move	$a0, $fp
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end799:
	.size	_ZN2kc11IncludeFileEPNS_20impl_casestring__StrE, .Lfunc_end799-_ZN2kc11IncludeFileEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22NilincludedeclarationsEv # -- Begin function _ZN2kc22NilincludedeclarationsEv
	.p2align	5
	.type	_ZN2kc22NilincludedeclarationsEv,@function
_ZN2kc22NilincludedeclarationsEv:       # @_ZN2kc22NilincludedeclarationsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_includedeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_includedeclarationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end800:
	.size	_ZN2kc22NilincludedeclarationsEv, .Lfunc_end800-_ZN2kc22NilincludedeclarationsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23ConsincludedeclarationsEPNS_23impl_includedeclarationEPNS_24impl_includedeclarationsE # -- Begin function _ZN2kc23ConsincludedeclarationsEPNS_23impl_includedeclarationEPNS_24impl_includedeclarationsE
	.p2align	5
	.type	_ZN2kc23ConsincludedeclarationsEPNS_23impl_includedeclarationEPNS_24impl_includedeclarationsE,@function
_ZN2kc23ConsincludedeclarationsEPNS_23impl_includedeclarationEPNS_24impl_includedeclarationsE: # @_ZN2kc23ConsincludedeclarationsEPNS_23impl_includedeclarationEPNS_24impl_includedeclarationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_includedeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_includedeclarationsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end801:
	.size	_ZN2kc23ConsincludedeclarationsEPNS_23impl_includedeclarationEPNS_24impl_includedeclarationsE, .Lfunc_end801-_ZN2kc23ConsincludedeclarationsEPNS_23impl_includedeclarationEPNS_24impl_includedeclarationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18IncludeDeclarationEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc18IncludeDeclarationEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc18IncludeDeclarationEPNS_20impl_casestring__StrE,@function
_ZN2kc18IncludeDeclarationEPNS_20impl_casestring__StrE: # @_ZN2kc18IncludeDeclarationEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc42impl_includedeclaration_IncludeDeclarationE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc42impl_includedeclaration_IncludeDeclarationE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end802:
	.size	_ZN2kc18IncludeDeclarationEPNS_20impl_casestring__StrE, .Lfunc_end802-_ZN2kc18IncludeDeclarationEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17NilrwdeclarationsEv     # -- Begin function _ZN2kc17NilrwdeclarationsEv
	.p2align	5
	.type	_ZN2kc17NilrwdeclarationsEv,@function
_ZN2kc17NilrwdeclarationsEv:            # @_ZN2kc17NilrwdeclarationsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_rwdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_rwdeclarationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end803:
	.size	_ZN2kc17NilrwdeclarationsEv, .Lfunc_end803-_ZN2kc17NilrwdeclarationsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18ConsrwdeclarationsEPNS_18impl_rwdeclarationEPNS_19impl_rwdeclarationsE # -- Begin function _ZN2kc18ConsrwdeclarationsEPNS_18impl_rwdeclarationEPNS_19impl_rwdeclarationsE
	.p2align	5
	.type	_ZN2kc18ConsrwdeclarationsEPNS_18impl_rwdeclarationEPNS_19impl_rwdeclarationsE,@function
_ZN2kc18ConsrwdeclarationsEPNS_18impl_rwdeclarationEPNS_19impl_rwdeclarationsE: # @_ZN2kc18ConsrwdeclarationsEPNS_18impl_rwdeclarationEPNS_19impl_rwdeclarationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_rwdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_rwdeclarationsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end804:
	.size	_ZN2kc18ConsrwdeclarationsEPNS_18impl_rwdeclarationEPNS_19impl_rwdeclarationsE, .Lfunc_end804-_ZN2kc18ConsrwdeclarationsEPNS_18impl_rwdeclarationEPNS_19impl_rwdeclarationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13RwDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE # -- Begin function _ZN2kc13RwDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE
	.p2align	5
	.type	_ZN2kc13RwDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE,@function
_ZN2kc13RwDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE: # @_ZN2kc13RwDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_rwdeclaration_RwDeclarationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_rwdeclaration_RwDeclarationE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end805:
	.size	_ZN2kc13RwDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE, .Lfunc_end805-_ZN2kc13RwDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17NilrewriteclausesEv     # -- Begin function _ZN2kc17NilrewriteclausesEv
	.p2align	5
	.type	_ZN2kc17NilrewriteclausesEv,@function
_ZN2kc17NilrewriteclausesEv:            # @_ZN2kc17NilrewriteclausesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_rewriteclausesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_rewriteclausesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end806:
	.size	_ZN2kc17NilrewriteclausesEv, .Lfunc_end806-_ZN2kc17NilrewriteclausesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18ConsrewriteclausesEPNS_18impl_rewriteclauseEPNS_19impl_rewriteclausesE # -- Begin function _ZN2kc18ConsrewriteclausesEPNS_18impl_rewriteclauseEPNS_19impl_rewriteclausesE
	.p2align	5
	.type	_ZN2kc18ConsrewriteclausesEPNS_18impl_rewriteclauseEPNS_19impl_rewriteclausesE,@function
_ZN2kc18ConsrewriteclausesEPNS_18impl_rewriteclauseEPNS_19impl_rewriteclausesE: # @_ZN2kc18ConsrewriteclausesEPNS_18impl_rewriteclauseEPNS_19impl_rewriteclausesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_rewriteclausesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_rewriteclausesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end807:
	.size	_ZN2kc18ConsrewriteclausesEPNS_18impl_rewriteclauseEPNS_19impl_rewriteclausesE, .Lfunc_end807-_ZN2kc18ConsrewriteclausesEPNS_18impl_rewriteclauseEPNS_19impl_rewriteclausesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13RewriteClauseEPNS_14impl_viewnamesEPNS_9impl_termE # -- Begin function _ZN2kc13RewriteClauseEPNS_14impl_viewnamesEPNS_9impl_termE
	.p2align	5
	.type	_ZN2kc13RewriteClauseEPNS_14impl_viewnamesEPNS_9impl_termE,@function
_ZN2kc13RewriteClauseEPNS_14impl_viewnamesEPNS_9impl_termE: # @_ZN2kc13RewriteClauseEPNS_14impl_viewnamesEPNS_9impl_termE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_rewriteclause_RewriteClauseE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_rewriteclause_RewriteClauseE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end808:
	.size	_ZN2kc13RewriteClauseEPNS_14impl_viewnamesEPNS_9impl_termE, .Lfunc_end808-_ZN2kc13RewriteClauseEPNS_14impl_viewnamesEPNS_9impl_termE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16NilpatternchainsEv      # -- Begin function _ZN2kc16NilpatternchainsEv
	.p2align	5
	.type	_ZN2kc16NilpatternchainsEv,@function
_ZN2kc16NilpatternchainsEv:             # @_ZN2kc16NilpatternchainsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_patternchainsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc18impl_patternchainsE+16)
	st.d	$a0, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 24
	st.w	$zero, $fp, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 16
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end809:
	.size	_ZN2kc16NilpatternchainsEv, .Lfunc_end809-_ZN2kc16NilpatternchainsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ConspatternchainsEPNS_17impl_patternchainEPNS_18impl_patternchainsE # -- Begin function _ZN2kc17ConspatternchainsEPNS_17impl_patternchainEPNS_18impl_patternchainsE
	.p2align	5
	.type	_ZN2kc17ConspatternchainsEPNS_17impl_patternchainEPNS_18impl_patternchainsE,@function
_ZN2kc17ConspatternchainsEPNS_17impl_patternchainEPNS_18impl_patternchainsE: # @_ZN2kc17ConspatternchainsEPNS_17impl_patternchainEPNS_18impl_patternchainsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_patternchainsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc18impl_patternchainsE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 24
	st.d	$fp, $s1, 32
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end810:
	.size	_ZN2kc17ConspatternchainsEPNS_17impl_patternchainEPNS_18impl_patternchainsE, .Lfunc_end810-_ZN2kc17ConspatternchainsEPNS_17impl_patternchainEPNS_18impl_patternchainsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15NilpatternchainEv       # -- Begin function _ZN2kc15NilpatternchainEv
	.p2align	5
	.type	_ZN2kc15NilpatternchainEv,@function
_ZN2kc15NilpatternchainEv:              # @_ZN2kc15NilpatternchainEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_patternchainE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc17impl_patternchainE+16)
	st.d	$a0, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 24
	st.w	$zero, $fp, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 16
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end811:
	.size	_ZN2kc15NilpatternchainEv, .Lfunc_end811-_ZN2kc15NilpatternchainEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16ConspatternchainEPNS_21impl_patternchainitemEPNS_17impl_patternchainE # -- Begin function _ZN2kc16ConspatternchainEPNS_21impl_patternchainitemEPNS_17impl_patternchainE
	.p2align	5
	.type	_ZN2kc16ConspatternchainEPNS_21impl_patternchainitemEPNS_17impl_patternchainE,@function
_ZN2kc16ConspatternchainEPNS_21impl_patternchainitemEPNS_17impl_patternchainE: # @_ZN2kc16ConspatternchainEPNS_21impl_patternchainitemEPNS_17impl_patternchainE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_patternchainE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc17impl_patternchainE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 24
	st.d	$fp, $s1, 32
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end812:
	.size	_ZN2kc16ConspatternchainEPNS_21impl_patternchainitemEPNS_17impl_patternchainE, .Lfunc_end812-_ZN2kc16ConspatternchainEPNS_21impl_patternchainitemEPNS_17impl_patternchainE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18NiloutmostpatternsEv    # -- Begin function _ZN2kc18NiloutmostpatternsEv
	.p2align	5
	.type	_ZN2kc18NiloutmostpatternsEv,@function
_ZN2kc18NiloutmostpatternsEv:           # @_ZN2kc18NiloutmostpatternsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc20impl_outmostpatternsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc20impl_outmostpatternsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end813:
	.size	_ZN2kc18NiloutmostpatternsEv, .Lfunc_end813-_ZN2kc18NiloutmostpatternsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19ConsoutmostpatternsEPNS_19impl_outmostpatternEPNS_20impl_outmostpatternsE # -- Begin function _ZN2kc19ConsoutmostpatternsEPNS_19impl_outmostpatternEPNS_20impl_outmostpatternsE
	.p2align	5
	.type	_ZN2kc19ConsoutmostpatternsEPNS_19impl_outmostpatternEPNS_20impl_outmostpatternsE,@function
_ZN2kc19ConsoutmostpatternsEPNS_19impl_outmostpatternEPNS_20impl_outmostpatternsE: # @_ZN2kc19ConsoutmostpatternsEPNS_19impl_outmostpatternEPNS_20impl_outmostpatternsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc20impl_outmostpatternsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc20impl_outmostpatternsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end814:
	.size	_ZN2kc19ConsoutmostpatternsEPNS_19impl_outmostpatternEPNS_20impl_outmostpatternsE, .Lfunc_end814-_ZN2kc19ConsoutmostpatternsEPNS_19impl_outmostpatternEPNS_20impl_outmostpatternsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23PatternchainitemOutmostEPNS_19impl_outmostpatternE # -- Begin function _ZN2kc23PatternchainitemOutmostEPNS_19impl_outmostpatternE
	.p2align	5
	.type	_ZN2kc23PatternchainitemOutmostEPNS_19impl_outmostpatternE,@function
_ZN2kc23PatternchainitemOutmostEPNS_19impl_outmostpatternE: # @_ZN2kc23PatternchainitemOutmostEPNS_19impl_outmostpatternE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc45impl_patternchainitem_PatternchainitemOutmostE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc45impl_patternchainitem_PatternchainitemOutmostE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 32
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 24
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end815:
	.size	_ZN2kc23PatternchainitemOutmostEPNS_19impl_outmostpatternE, .Lfunc_end815-_ZN2kc23PatternchainitemOutmostEPNS_19impl_outmostpatternE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21PatternchainitemGroupEPNS_18impl_patternchainsE # -- Begin function _ZN2kc21PatternchainitemGroupEPNS_18impl_patternchainsE
	.p2align	5
	.type	_ZN2kc21PatternchainitemGroupEPNS_18impl_patternchainsE,@function
_ZN2kc21PatternchainitemGroupEPNS_18impl_patternchainsE: # @_ZN2kc21PatternchainitemGroupEPNS_18impl_patternchainsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc43impl_patternchainitem_PatternchainitemGroupE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc43impl_patternchainitem_PatternchainitemGroupE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 32
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 24
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end816:
	.size	_ZN2kc21PatternchainitemGroupEPNS_18impl_patternchainsE, .Lfunc_end816-_ZN2kc21PatternchainitemGroupEPNS_18impl_patternchainsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24PatternchainitemDollaridEPNS_7impl_IDE # -- Begin function _ZN2kc24PatternchainitemDollaridEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc24PatternchainitemDollaridEPNS_7impl_IDE,@function
_ZN2kc24PatternchainitemDollaridEPNS_7impl_IDE: # @_ZN2kc24PatternchainitemDollaridEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc46impl_patternchainitem_PatternchainitemDollaridE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc46impl_patternchainitem_PatternchainitemDollaridE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 32
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 24
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end817:
	.size	_ZN2kc24PatternchainitemDollaridEPNS_7impl_IDE, .Lfunc_end817-_ZN2kc24PatternchainitemDollaridEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18OPOperatorWildcardEPNS_7impl_IDEPNS_16impl_CexpressionE # -- Begin function _ZN2kc18OPOperatorWildcardEPNS_7impl_IDEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc18OPOperatorWildcardEPNS_7impl_IDEPNS_16impl_CexpressionE,@function
_ZN2kc18OPOperatorWildcardEPNS_7impl_IDEPNS_16impl_CexpressionE: # @_ZN2kc18OPOperatorWildcardEPNS_7impl_IDEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc38impl_outmostpattern_OPOperatorWildcardE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc38impl_outmostpattern_OPOperatorWildcardE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 32
	st.d	$fp, $s1, 40
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 24
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end818:
	.size	_ZN2kc18OPOperatorWildcardEPNS_7impl_IDEPNS_16impl_CexpressionE, .Lfunc_end818-_ZN2kc18OPOperatorWildcardEPNS_7impl_IDEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10OPOperatorEPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE # -- Begin function _ZN2kc10OPOperatorEPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc10OPOperatorEPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE,@function
_ZN2kc10OPOperatorEPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE: # @_ZN2kc10OPOperatorEPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 56
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc30impl_outmostpattern_OPOperatorE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc30impl_outmostpattern_OPOperatorE+16)
	st.d	$a0, $s2, 0
	st.d	$s1, $s2, 32
	st.d	$s0, $s2, 40
	st.d	$fp, $s2, 48
	st.w	$zero, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 24
	move	$a0, $s2
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end819:
	.size	_ZN2kc10OPOperatorEPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE, .Lfunc_end819-_ZN2kc10OPOperatorEPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17OPNonLeafVariableEPNS_7impl_IDEPNS_19impl_outmostpatternE # -- Begin function _ZN2kc17OPNonLeafVariableEPNS_7impl_IDEPNS_19impl_outmostpatternE
	.p2align	5
	.type	_ZN2kc17OPNonLeafVariableEPNS_7impl_IDEPNS_19impl_outmostpatternE,@function
_ZN2kc17OPNonLeafVariableEPNS_7impl_IDEPNS_19impl_outmostpatternE: # @_ZN2kc17OPNonLeafVariableEPNS_7impl_IDEPNS_19impl_outmostpatternE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc37impl_outmostpattern_OPNonLeafVariableE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc37impl_outmostpattern_OPNonLeafVariableE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 32
	st.d	$fp, $s1, 40
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 24
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end820:
	.size	_ZN2kc17OPNonLeafVariableEPNS_7impl_IDEPNS_19impl_outmostpatternE, .Lfunc_end820-_ZN2kc17OPNonLeafVariableEPNS_7impl_IDEPNS_19impl_outmostpatternE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10OPWildcardEPNS_16impl_CexpressionE # -- Begin function _ZN2kc10OPWildcardEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc10OPWildcardEPNS_16impl_CexpressionE,@function
_ZN2kc10OPWildcardEPNS_16impl_CexpressionE: # @_ZN2kc10OPWildcardEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc30impl_outmostpattern_OPWildcardE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc30impl_outmostpattern_OPWildcardE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 32
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 24
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end821:
	.size	_ZN2kc10OPWildcardEPNS_16impl_CexpressionE, .Lfunc_end821-_ZN2kc10OPWildcardEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9OPDefaultEPNS_16impl_CexpressionE # -- Begin function _ZN2kc9OPDefaultEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc9OPDefaultEPNS_16impl_CexpressionE,@function
_ZN2kc9OPDefaultEPNS_16impl_CexpressionE: # @_ZN2kc9OPDefaultEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc29impl_outmostpattern_OPDefaultE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc29impl_outmostpattern_OPDefaultE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 32
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 24
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end822:
	.size	_ZN2kc9OPDefaultEPNS_16impl_CexpressionE, .Lfunc_end822-_ZN2kc9OPDefaultEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9PVariableEPNS_7impl_IDE  # -- Begin function _ZN2kc9PVariableEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc9PVariableEPNS_7impl_IDE,@function
_ZN2kc9PVariableEPNS_7impl_IDE:         # @_ZN2kc9PVariableEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_pattern_PVariableE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_pattern_PVariableE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end823:
	.size	_ZN2kc9PVariableEPNS_7impl_IDE, .Lfunc_end823-_ZN2kc9PVariableEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9POperatorEPNS_7impl_IDEPNS_13impl_patternsE # -- Begin function _ZN2kc9POperatorEPNS_7impl_IDEPNS_13impl_patternsE
	.p2align	5
	.type	_ZN2kc9POperatorEPNS_7impl_IDEPNS_13impl_patternsE,@function
_ZN2kc9POperatorEPNS_7impl_IDEPNS_13impl_patternsE: # @_ZN2kc9POperatorEPNS_7impl_IDEPNS_13impl_patternsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_pattern_POperatorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_pattern_POperatorE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end824:
	.size	_ZN2kc9POperatorEPNS_7impl_IDEPNS_13impl_patternsE, .Lfunc_end824-_ZN2kc9POperatorEPNS_7impl_IDEPNS_13impl_patternsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16PNonLeafVariableEPNS_7impl_IDEPNS_12impl_patternE # -- Begin function _ZN2kc16PNonLeafVariableEPNS_7impl_IDEPNS_12impl_patternE
	.p2align	5
	.type	_ZN2kc16PNonLeafVariableEPNS_7impl_IDEPNS_12impl_patternE,@function
_ZN2kc16PNonLeafVariableEPNS_7impl_IDEPNS_12impl_patternE: # @_ZN2kc16PNonLeafVariableEPNS_7impl_IDEPNS_12impl_patternE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_pattern_PNonLeafVariableE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_pattern_PNonLeafVariableE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end825:
	.size	_ZN2kc16PNonLeafVariableEPNS_7impl_IDEPNS_12impl_patternE, .Lfunc_end825-_ZN2kc16PNonLeafVariableEPNS_7impl_IDEPNS_12impl_patternE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9PWildcardEv              # -- Begin function _ZN2kc9PWildcardEv
	.p2align	5
	.type	_ZN2kc9PWildcardEv,@function
_ZN2kc9PWildcardEv:                     # @_ZN2kc9PWildcardEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc22impl_pattern_PWildcardE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc22impl_pattern_PWildcardE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end826:
	.size	_ZN2kc9PWildcardEv, .Lfunc_end826-_ZN2kc9PWildcardEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14PStringLiteralEPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc14PStringLiteralEPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc14PStringLiteralEPNS_18impl_CexpressionDQE,@function
_ZN2kc14PStringLiteralEPNS_18impl_CexpressionDQE: # @_ZN2kc14PStringLiteralEPNS_18impl_CexpressionDQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_pattern_PStringLiteralE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_pattern_PStringLiteralE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end827:
	.size	_ZN2kc14PStringLiteralEPNS_18impl_CexpressionDQE, .Lfunc_end827-_ZN2kc14PStringLiteralEPNS_18impl_CexpressionDQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11PIntLiteralEPNS_8impl_INTE # -- Begin function _ZN2kc11PIntLiteralEPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc11PIntLiteralEPNS_8impl_INTE,@function
_ZN2kc11PIntLiteralEPNS_8impl_INTE:     # @_ZN2kc11PIntLiteralEPNS_8impl_INTE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_pattern_PIntLiteralE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_pattern_PIntLiteralE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end828:
	.size	_ZN2kc11PIntLiteralEPNS_8impl_INTE, .Lfunc_end828-_ZN2kc11PIntLiteralEPNS_8impl_INTE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11NilpatternsEv           # -- Begin function _ZN2kc11NilpatternsEv
	.p2align	5
	.type	_ZN2kc11NilpatternsEv,@function
_ZN2kc11NilpatternsEv:                  # @_ZN2kc11NilpatternsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc13impl_patternsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc13impl_patternsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end829:
	.size	_ZN2kc11NilpatternsEv, .Lfunc_end829-_ZN2kc11NilpatternsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12ConspatternsEPNS_12impl_patternEPNS_13impl_patternsE # -- Begin function _ZN2kc12ConspatternsEPNS_12impl_patternEPNS_13impl_patternsE
	.p2align	5
	.type	_ZN2kc12ConspatternsEPNS_12impl_patternEPNS_13impl_patternsE,@function
_ZN2kc12ConspatternsEPNS_12impl_patternEPNS_13impl_patternsE: # @_ZN2kc12ConspatternsEPNS_12impl_patternEPNS_13impl_patternsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc13impl_patternsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc13impl_patternsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end830:
	.size	_ZN2kc12ConspatternsEPNS_12impl_patternEPNS_13impl_patternsE, .Lfunc_end830-_ZN2kc12ConspatternsEPNS_12impl_patternEPNS_13impl_patternsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9TVariableEPNS_7impl_IDE  # -- Begin function _ZN2kc9TVariableEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc9TVariableEPNS_7impl_IDE,@function
_ZN2kc9TVariableEPNS_7impl_IDE:         # @_ZN2kc9TVariableEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_term_TVariableE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_term_TVariableE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end831:
	.size	_ZN2kc9TVariableEPNS_7impl_IDE, .Lfunc_end831-_ZN2kc9TVariableEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9TOperatorEPNS_7impl_IDEPNS_10impl_termsE # -- Begin function _ZN2kc9TOperatorEPNS_7impl_IDEPNS_10impl_termsE
	.p2align	5
	.type	_ZN2kc9TOperatorEPNS_7impl_IDEPNS_10impl_termsE,@function
_ZN2kc9TOperatorEPNS_7impl_IDEPNS_10impl_termsE: # @_ZN2kc9TOperatorEPNS_7impl_IDEPNS_10impl_termsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_term_TOperatorE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_term_TOperatorE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 24
	st.d	$fp, $s1, 32
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end832:
	.size	_ZN2kc9TOperatorEPNS_7impl_IDEPNS_10impl_termsE, .Lfunc_end832-_ZN2kc9TOperatorEPNS_7impl_IDEPNS_10impl_termsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7TMethodEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE # -- Begin function _ZN2kc7TMethodEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.p2align	5
	.type	_ZN2kc7TMethodEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE,@function
_ZN2kc7TMethodEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE: # @_ZN2kc7TMethodEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_term_TMethodE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc17impl_term_TMethodE+16)
	st.d	$a0, $s2, 0
	st.d	$s1, $s2, 24
	st.d	$s0, $s2, 32
	st.d	$fp, $s2, 40
	st.w	$zero, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 16
	move	$a0, $s2
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end833:
	.size	_ZN2kc7TMethodEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE, .Lfunc_end833-_ZN2kc7TMethodEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10TMethodDotEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE # -- Begin function _ZN2kc10TMethodDotEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.p2align	5
	.type	_ZN2kc10TMethodDotEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE,@function
_ZN2kc10TMethodDotEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE: # @_ZN2kc10TMethodDotEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc20impl_term_TMethodDotE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc20impl_term_TMethodDotE+16)
	st.d	$a0, $s2, 0
	st.d	$s1, $s2, 24
	st.d	$s0, $s2, 32
	st.d	$fp, $s2, 40
	st.w	$zero, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 16
	move	$a0, $s2
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end834:
	.size	_ZN2kc10TMethodDotEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE, .Lfunc_end834-_ZN2kc10TMethodDotEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10TMemberVarEPNS_9impl_termEPNS_7impl_IDE # -- Begin function _ZN2kc10TMemberVarEPNS_9impl_termEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc10TMemberVarEPNS_9impl_termEPNS_7impl_IDE,@function
_ZN2kc10TMemberVarEPNS_9impl_termEPNS_7impl_IDE: # @_ZN2kc10TMemberVarEPNS_9impl_termEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc20impl_term_TMemberVarE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc20impl_term_TMemberVarE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 24
	st.d	$fp, $s1, 32
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end835:
	.size	_ZN2kc10TMemberVarEPNS_9impl_termEPNS_7impl_IDE, .Lfunc_end835-_ZN2kc10TMemberVarEPNS_9impl_termEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13TMemberVarDotEPNS_9impl_termEPNS_7impl_IDE # -- Begin function _ZN2kc13TMemberVarDotEPNS_9impl_termEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc13TMemberVarDotEPNS_9impl_termEPNS_7impl_IDE,@function
_ZN2kc13TMemberVarDotEPNS_9impl_termEPNS_7impl_IDE: # @_ZN2kc13TMemberVarDotEPNS_9impl_termEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc23impl_term_TMemberVarDotE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc23impl_term_TMemberVarDotE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 24
	st.d	$fp, $s1, 32
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end836:
	.size	_ZN2kc13TMemberVarDotEPNS_9impl_termEPNS_7impl_IDE, .Lfunc_end836-_ZN2kc13TMemberVarDotEPNS_9impl_termEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6TCTermEPNS_18impl_CexpressionSQE # -- Begin function _ZN2kc6TCTermEPNS_18impl_CexpressionSQE
	.p2align	5
	.type	_ZN2kc6TCTermEPNS_18impl_CexpressionSQE,@function
_ZN2kc6TCTermEPNS_18impl_CexpressionSQE: # @_ZN2kc6TCTermEPNS_18impl_CexpressionSQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc16impl_term_TCTermE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc16impl_term_TCTermE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end837:
	.size	_ZN2kc6TCTermEPNS_18impl_CexpressionSQE, .Lfunc_end837-_ZN2kc6TCTermEPNS_18impl_CexpressionSQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14TStringLiteralEPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc14TStringLiteralEPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc14TStringLiteralEPNS_18impl_CexpressionDQE,@function
_ZN2kc14TStringLiteralEPNS_18impl_CexpressionDQE: # @_ZN2kc14TStringLiteralEPNS_18impl_CexpressionDQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc24impl_term_TStringLiteralE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc24impl_term_TStringLiteralE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end838:
	.size	_ZN2kc14TStringLiteralEPNS_18impl_CexpressionDQE, .Lfunc_end838-_ZN2kc14TStringLiteralEPNS_18impl_CexpressionDQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11TIntLiteralEPNS_8impl_INTE # -- Begin function _ZN2kc11TIntLiteralEPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc11TIntLiteralEPNS_8impl_INTE,@function
_ZN2kc11TIntLiteralEPNS_8impl_INTE:     # @_ZN2kc11TIntLiteralEPNS_8impl_INTE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc21impl_term_TIntLiteralE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc21impl_term_TIntLiteralE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end839:
	.size	_ZN2kc11TIntLiteralEPNS_8impl_INTE, .Lfunc_end839-_ZN2kc11TIntLiteralEPNS_8impl_INTE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8NiltermsEv               # -- Begin function _ZN2kc8NiltermsEv
	.p2align	5
	.type	_ZN2kc8NiltermsEv,@function
_ZN2kc8NiltermsEv:                      # @_ZN2kc8NiltermsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_termsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_termsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end840:
	.size	_ZN2kc8NiltermsEv, .Lfunc_end840-_ZN2kc8NiltermsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9ConstermsEPNS_9impl_termEPNS_10impl_termsE # -- Begin function _ZN2kc9ConstermsEPNS_9impl_termEPNS_10impl_termsE
	.p2align	5
	.type	_ZN2kc9ConstermsEPNS_9impl_termEPNS_10impl_termsE,@function
_ZN2kc9ConstermsEPNS_9impl_termEPNS_10impl_termsE: # @_ZN2kc9ConstermsEPNS_9impl_termEPNS_10impl_termsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_termsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_termsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end841:
	.size	_ZN2kc9ConstermsEPNS_9impl_termEPNS_10impl_termsE, .Lfunc_end841-_ZN2kc9ConstermsEPNS_9impl_termEPNS_10impl_termsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10NilfnfilesEv            # -- Begin function _ZN2kc10NilfnfilesEv
	.p2align	5
	.type	_ZN2kc10NilfnfilesEv,@function
_ZN2kc10NilfnfilesEv:                   # @_ZN2kc10NilfnfilesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc12impl_fnfilesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc12impl_fnfilesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end842:
	.size	_ZN2kc10NilfnfilesEv, .Lfunc_end842-_ZN2kc10NilfnfilesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11ConsfnfilesEPNS_11impl_fnfileEPNS_12impl_fnfilesE # -- Begin function _ZN2kc11ConsfnfilesEPNS_11impl_fnfileEPNS_12impl_fnfilesE
	.p2align	5
	.type	_ZN2kc11ConsfnfilesEPNS_11impl_fnfileEPNS_12impl_fnfilesE,@function
_ZN2kc11ConsfnfilesEPNS_11impl_fnfileEPNS_12impl_fnfilesE: # @_ZN2kc11ConsfnfilesEPNS_11impl_fnfileEPNS_12impl_fnfilesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc12impl_fnfilesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc12impl_fnfilesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end843:
	.size	_ZN2kc11ConsfnfilesEPNS_11impl_fnfileEPNS_12impl_fnfilesE, .Lfunc_end843-_ZN2kc11ConsfnfilesEPNS_11impl_fnfileEPNS_12impl_fnfilesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6FnFileEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc6FnFileEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc6FnFileEPNS_20impl_casestring__StrE,@function
_ZN2kc6FnFileEPNS_20impl_casestring__StrE: # @_ZN2kc6FnFileEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_fnfile_FnFileE+16)
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_fnfile_FnFileE+16)
	st.d	$a1, $fp, 0
	st.d	$s0, $fp, 16
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB844_4
# %bb.1:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB844_4
# %bb.2:
	ld.d	$a0, $a0, 312
	st.d	$fp, $sp, 24
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 24
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB844_5
.LBB844_3:
	move	$s0, $zero
	b	.LBB844_6
.LBB844_4:
	st.d	$fp, $sp, 24
	addi.d	$a0, $a0, 240
	addi.d	$a1, $sp, 24
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB844_3
.LBB844_5:                              # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_11impl_fnfileEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc11impl_fnfileE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc11impl_fnfileE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	beq	$a0, $fp, .LBB844_7
.LBB844_6:                              # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_11impl_fnfileEEET_S4_.exit.thread
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 64
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$fp, $s0
	b	.LBB844_11
.LBB844_7:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 48
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(Thefnfiles)
	ld.d	$s1, $a1, %got_pc_lo12(Thefnfiles)
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	st.d	$a1, $a0, 0
	ld.d	$s2, $s1, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vst	$vr0, $a0, 8
	st.d	$a0, $fp, 8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc12impl_fnfilesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc12impl_fnfilesE+16)
	st.d	$s3, $s0, 0
	addi.d	$a0, $s0, 8
	beqz	$s2, .LBB844_9
# %bb.8:
	st.d	$fp, $a0, 0
	move	$a0, $s0
	move	$s0, $s2
	b	.LBB844_10
.LBB844_9:
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$s3, $a0, 0
	st.d	$fp, $a0, 8
.LBB844_10:                             # %_ZN2kc12_GLOBAL__N_120kc_initialize_fnfileEPNS_11impl_fnfileE.exit
	st.d	$s0, $a0, 16
	st.d	$a0, $s1, 0
.LBB844_11:
	move	$a0, $fp
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end844:
	.size	_ZN2kc6FnFileEPNS_20impl_casestring__StrE, .Lfunc_end844-_ZN2kc6FnFileEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17NilfndeclarationsEv     # -- Begin function _ZN2kc17NilfndeclarationsEv
	.p2align	5
	.type	_ZN2kc17NilfndeclarationsEv,@function
_ZN2kc17NilfndeclarationsEv:            # @_ZN2kc17NilfndeclarationsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end845:
	.size	_ZN2kc17NilfndeclarationsEv, .Lfunc_end845-_ZN2kc17NilfndeclarationsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE # -- Begin function _ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE
	.p2align	5
	.type	_ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE,@function
_ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE: # @_ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end846:
	.size	_ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE, .Lfunc_end846-_ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15FnAcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE # -- Begin function _ZN2kc15FnAcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE
	.p2align	5
	.type	_ZN2kc15FnAcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE,@function
_ZN2kc15FnAcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE: # @_ZN2kc15FnAcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE
	.cfi_startproc
# %bb.0:                                # %_ZN2kc12_GLOBAL__N_127kc_initialize_fndeclarationEPNS_18impl_fndeclarationE.exit
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a6
	move	$s0, $a5
	move	$s1, $a4
	move	$s2, $a3
	move	$s3, $a2
	move	$s4, $a1
	move	$s5, $a0
	ori	$a0, $zero, 96
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s6, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc34impl_fndeclaration_FnAcDeclarationE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc34impl_fndeclaration_FnAcDeclarationE+16)
	st.d	$a0, $s6, 0
	st.d	$s5, $s6, 40
	st.d	$s4, $s6, 48
	st.d	$s3, $s6, 56
	st.d	$s2, $s6, 64
	st.d	$s1, $s6, 72
	st.d	$s0, $s6, 80
	st.d	$fp, $s6, 88
	st.w	$zero, $s6, 16
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s6, 24
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2kc31sort_extend_parameter_type_listEPNS_24impl_ac_declaration_listEPNS_18impl_ac_declaratorE)
	jirl	$ra, $ra, 0
	st.d	$a0, $s6, 8
	move	$a0, $s6
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end847:
	.size	_ZN2kc15FnAcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE, .Lfunc_end847-_ZN2kc15FnAcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19AcMemberDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE # -- Begin function _ZN2kc19AcMemberDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE
	.p2align	5
	.type	_ZN2kc19AcMemberDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE,@function
_ZN2kc19AcMemberDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE: # @_ZN2kc19AcMemberDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE
	.cfi_startproc
# %bb.0:                                # %_ZN2kc12_GLOBAL__N_127kc_initialize_fndeclarationEPNS_18impl_fndeclarationE.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 72
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc38impl_fndeclaration_AcMemberDeclarationE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc38impl_fndeclaration_AcMemberDeclarationE+16)
	st.d	$a0, $s3, 0
	st.d	$s2, $s3, 40
	st.d	$s1, $s3, 48
	st.d	$s0, $s3, 56
	st.d	$fp, $s3, 64
	st.w	$zero, $s3, 16
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s3, 24
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc22impl_ac_parameter_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc22impl_ac_parameter_listE+16)
	st.d	$a0, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 8
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_ac_parameter_type_list_AcParListE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_ac_parameter_type_list_AcParListE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	st.d	$a0, $s3, 8
	move	$a0, $s3
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end848:
	.size	_ZN2kc19AcMemberDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE, .Lfunc_end848-_ZN2kc19AcMemberDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8GlobalFnEv               # -- Begin function _ZN2kc8GlobalFnEv
	.p2align	5
	.type	_ZN2kc8GlobalFnEv,@function
_ZN2kc8GlobalFnEv:                      # @_ZN2kc8GlobalFnEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_fnclass_GlobalFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_fnclass_GlobalFnE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end849:
	.size	_ZN2kc8GlobalFnEv, .Lfunc_end849-_ZN2kc8GlobalFnEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8StaticFnEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc8StaticFnEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc8StaticFnEPNS_20impl_casestring__StrE,@function
_ZN2kc8StaticFnEPNS_20impl_casestring__StrE: # @_ZN2kc8StaticFnEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_fnclass_StaticFnE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_fnclass_StaticFnE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end850:
	.size	_ZN2kc8StaticFnEPNS_20impl_casestring__StrE, .Lfunc_end850-_ZN2kc8StaticFnEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8MemberFnEv               # -- Begin function _ZN2kc8MemberFnEv
	.p2align	5
	.type	_ZN2kc8MemberFnEv,@function
_ZN2kc8MemberFnEv:                      # @_ZN2kc8MemberFnEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_fnclass_MemberFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_fnclass_MemberFnE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end851:
	.size	_ZN2kc8MemberFnEv, .Lfunc_end851-_ZN2kc8MemberFnEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13ConstructorFnEv         # -- Begin function _ZN2kc13ConstructorFnEv
	.p2align	5
	.type	_ZN2kc13ConstructorFnEv,@function
_ZN2kc13ConstructorFnEv:                # @_ZN2kc13ConstructorFnEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc26impl_fnclass_ConstructorFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc26impl_fnclass_ConstructorFnE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end852:
	.size	_ZN2kc13ConstructorFnEv, .Lfunc_end852-_ZN2kc13ConstructorFnEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12DestructorFnEv          # -- Begin function _ZN2kc12DestructorFnEv
	.p2align	5
	.type	_ZN2kc12DestructorFnEv,@function
_ZN2kc12DestructorFnEv:                 # @_ZN2kc12DestructorFnEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc25impl_fnclass_DestructorFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc25impl_fnclass_DestructorFnE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end853:
	.size	_ZN2kc12DestructorFnEv, .Lfunc_end853-_ZN2kc12DestructorFnEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14ConvOperatorFnEv        # -- Begin function _ZN2kc14ConvOperatorFnEv
	.p2align	5
	.type	_ZN2kc14ConvOperatorFnEv,@function
_ZN2kc14ConvOperatorFnEv:               # @_ZN2kc14ConvOperatorFnEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc27impl_fnclass_ConvOperatorFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc27impl_fnclass_ConvOperatorFnE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end854:
	.size	_ZN2kc14ConvOperatorFnEv, .Lfunc_end854-_ZN2kc14ConvOperatorFnEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8NilCtextEv               # -- Begin function _ZN2kc8NilCtextEv
	.p2align	5
	.type	_ZN2kc8NilCtextEv,@function
_ZN2kc8NilCtextEv:                      # @_ZN2kc8NilCtextEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_CtextE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc10impl_CtextE+16)
	st.d	$a0, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 24
	st.w	$zero, $fp, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 16
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end855:
	.size	_ZN2kc8NilCtextEv, .Lfunc_end855-_ZN2kc8NilCtextEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9ConsCtextEPNS_15impl_Ctext_elemEPNS_10impl_CtextE # -- Begin function _ZN2kc9ConsCtextEPNS_15impl_Ctext_elemEPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc9ConsCtextEPNS_15impl_Ctext_elemEPNS_10impl_CtextE,@function
_ZN2kc9ConsCtextEPNS_15impl_Ctext_elemEPNS_10impl_CtextE: # @_ZN2kc9ConsCtextEPNS_15impl_Ctext_elemEPNS_10impl_CtextE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_CtextE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc10impl_CtextE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 24
	st.d	$fp, $s1, 32
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end856:
	.size	_ZN2kc9ConsCtextEPNS_15impl_Ctext_elemEPNS_10impl_CtextE, .Lfunc_end856-_ZN2kc9ConsCtextEPNS_15impl_Ctext_elemEPNS_10impl_CtextE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9CTextLineEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc9CTextLineEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc9CTextLineEPNS_20impl_casestring__StrE,@function
_ZN2kc9CTextLineEPNS_20impl_casestring__StrE: # @_ZN2kc9CTextLineEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc25impl_Ctext_elem_CTextLineE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc25impl_Ctext_elem_CTextLineE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end857:
	.size	_ZN2kc9CTextLineEPNS_20impl_casestring__StrE, .Lfunc_end857-_ZN2kc9CTextLineEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14CTextDollarVarEPNS_8impl_INTE # -- Begin function _ZN2kc14CTextDollarVarEPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc14CTextDollarVarEPNS_8impl_INTE,@function
_ZN2kc14CTextDollarVarEPNS_8impl_INTE:  # @_ZN2kc14CTextDollarVarEPNS_8impl_INTE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc30impl_Ctext_elem_CTextDollarVarE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc30impl_Ctext_elem_CTextDollarVarE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end858:
	.size	_ZN2kc14CTextDollarVarEPNS_8impl_INTE, .Lfunc_end858-_ZN2kc14CTextDollarVarEPNS_8impl_INTE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7CTextNlEPNS_17impl_integer__IntE # -- Begin function _ZN2kc7CTextNlEPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc7CTextNlEPNS_17impl_integer__IntE,@function
_ZN2kc7CTextNlEPNS_17impl_integer__IntE: # @_ZN2kc7CTextNlEPNS_17impl_integer__IntE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc23impl_Ctext_elem_CTextNlE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc23impl_Ctext_elem_CTextNlE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end859:
	.size	_ZN2kc7CTextNlEPNS_17impl_integer__IntE, .Lfunc_end859-_ZN2kc7CTextNlEPNS_17impl_integer__IntE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18CTextCexpressionDQEPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc18CTextCexpressionDQEPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc18CTextCexpressionDQEPNS_18impl_CexpressionDQE,@function
_ZN2kc18CTextCexpressionDQEPNS_18impl_CexpressionDQE: # @_ZN2kc18CTextCexpressionDQEPNS_18impl_CexpressionDQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc34impl_Ctext_elem_CTextCexpressionDQE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc34impl_Ctext_elem_CTextCexpressionDQE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end860:
	.size	_ZN2kc18CTextCexpressionDQEPNS_18impl_CexpressionDQE, .Lfunc_end860-_ZN2kc18CTextCexpressionDQEPNS_18impl_CexpressionDQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18CTextCexpressionSQEPNS_18impl_CexpressionSQE # -- Begin function _ZN2kc18CTextCexpressionSQEPNS_18impl_CexpressionSQE
	.p2align	5
	.type	_ZN2kc18CTextCexpressionSQEPNS_18impl_CexpressionSQE,@function
_ZN2kc18CTextCexpressionSQEPNS_18impl_CexpressionSQE: # @_ZN2kc18CTextCexpressionSQEPNS_18impl_CexpressionSQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc34impl_Ctext_elem_CTextCexpressionSQE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc34impl_Ctext_elem_CTextCexpressionSQE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end861:
	.size	_ZN2kc18CTextCexpressionSQEPNS_18impl_CexpressionSQE, .Lfunc_end861-_ZN2kc18CTextCexpressionSQEPNS_18impl_CexpressionSQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10CTextCbodyEPNS_10impl_CtextE # -- Begin function _ZN2kc10CTextCbodyEPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc10CTextCbodyEPNS_10impl_CtextE,@function
_ZN2kc10CTextCbodyEPNS_10impl_CtextE:   # @_ZN2kc10CTextCbodyEPNS_10impl_CtextE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc26impl_Ctext_elem_CTextCbodyE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc26impl_Ctext_elem_CTextCbodyE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end862:
	.size	_ZN2kc10CTextCbodyEPNS_10impl_CtextE, .Lfunc_end862-_ZN2kc10CTextCbodyEPNS_10impl_CtextE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22CTextForeachexpressionEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE # -- Begin function _ZN2kc22CTextForeachexpressionEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE
	.p2align	5
	.type	_ZN2kc22CTextForeachexpressionEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE,@function
_ZN2kc22CTextForeachexpressionEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE: # @_ZN2kc22CTextForeachexpressionEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$s3, $a0
	ori	$a0, $zero, 64
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc38impl_Ctext_elem_CTextForeachexpressionE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc38impl_Ctext_elem_CTextForeachexpressionE+16)
	st.d	$a0, $s4, 0
	st.d	$s3, $s4, 24
	st.d	$s2, $s4, 32
	st.d	$s1, $s4, 40
	st.d	$s0, $s4, 48
	st.d	$fp, $s4, 56
	st.w	$zero, $s4, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s4, 16
	move	$a0, $s4
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end863:
	.size	_ZN2kc22CTextForeachexpressionEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE, .Lfunc_end863-_ZN2kc22CTextForeachexpressionEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19CTextWithexpressionEPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE # -- Begin function _ZN2kc19CTextWithexpressionEPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE
	.p2align	5
	.type	_ZN2kc19CTextWithexpressionEPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE,@function
_ZN2kc19CTextWithexpressionEPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE: # @_ZN2kc19CTextWithexpressionEPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc35impl_Ctext_elem_CTextWithexpressionE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc35impl_Ctext_elem_CTextWithexpressionE+16)
	st.d	$a0, $s2, 0
	st.d	$s1, $s2, 24
	st.d	$s0, $s2, 32
	st.d	$fp, $s2, 40
	st.w	$zero, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 16
	move	$a0, $s2
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end864:
	.size	_ZN2kc19CTextWithexpressionEPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE, .Lfunc_end864-_ZN2kc19CTextWithexpressionEPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14NoForeachAfterEv        # -- Begin function _ZN2kc14NoForeachAfterEv
	.p2align	5
	.type	_ZN2kc14NoForeachAfterEv,@function
_ZN2kc14NoForeachAfterEv:               # @_ZN2kc14NoForeachAfterEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_foreach_after_NoForeachAfterE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_foreach_after_NoForeachAfterE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	st.w	$zero, $fp, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 16
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end865:
	.size	_ZN2kc14NoForeachAfterEv, .Lfunc_end865-_ZN2kc14NoForeachAfterEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12ForeachAfterEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE # -- Begin function _ZN2kc12ForeachAfterEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc12ForeachAfterEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE,@function
_ZN2kc12ForeachAfterEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE: # @_ZN2kc12ForeachAfterEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 56
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc31impl_foreach_after_ForeachAfterE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc31impl_foreach_after_ForeachAfterE+16)
	st.d	$a0, $s3, 0
	st.d	$s2, $s3, 24
	st.d	$s1, $s3, 32
	st.d	$s0, $s3, 40
	st.d	$fp, $s3, 48
	st.w	$zero, $s3, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s3, 16
	move	$a0, $s3
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end866:
	.size	_ZN2kc12ForeachAfterEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE, .Lfunc_end866-_ZN2kc12ForeachAfterEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16InForeachContextEPNS_17impl_patternchainE # -- Begin function _ZN2kc16InForeachContextEPNS_17impl_patternchainE
	.p2align	5
	.type	_ZN2kc16InForeachContextEPNS_17impl_patternchainE,@function
_ZN2kc16InForeachContextEPNS_17impl_patternchainE: # @_ZN2kc16InForeachContextEPNS_17impl_patternchainE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_contextinfo_InForeachContextE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_contextinfo_InForeachContextE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end867:
	.size	_ZN2kc16InForeachContextEPNS_17impl_patternchainE, .Lfunc_end867-_ZN2kc16InForeachContextEPNS_17impl_patternchainE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19NotInForeachContextEv   # -- Begin function _ZN2kc19NotInForeachContextEv
	.p2align	5
	.type	_ZN2kc19NotInForeachContextEv,@function
_ZN2kc19NotInForeachContextEv:          # @_ZN2kc19NotInForeachContextEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc36impl_contextinfo_NotInForeachContextE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc36impl_contextinfo_NotInForeachContextE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end868:
	.size	_ZN2kc19NotInForeachContextEv, .Lfunc_end868-_ZN2kc19NotInForeachContextEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18NilwithexpressionsEv    # -- Begin function _ZN2kc18NilwithexpressionsEv
	.p2align	5
	.type	_ZN2kc18NilwithexpressionsEv,@function
_ZN2kc18NilwithexpressionsEv:           # @_ZN2kc18NilwithexpressionsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc20impl_withexpressionsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc20impl_withexpressionsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 32
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE)
	jr	$t8
.Lfunc_end869:
	.size	_ZN2kc18NilwithexpressionsEv, .Lfunc_end869-_ZN2kc18NilwithexpressionsEv
	.cfi_endproc
                                        # -- End function
	.p2align	5                               # -- Begin function _ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE
	.type	_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE,@function
_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE: # @_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	st.d	$zero, $a0, 8
	st.w	$zero, $a0, 16
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 24
	ld.d	$a1, $a1, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 132
	bne	$a0, $a1, .LBB870_2
# %bb.1:
	ld.d	$s0, $fp, 32
	ld.d	$a0, $fp, 40
	ld.d	$s1, $s0, 8
	ld.d	$s2, $a0, 8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	ld.w	$a1, $s0, 16
	ld.d	$a2, $s0, 24
	st.d	$s2, $a0, 16
	st.d	$a0, $fp, 8
	st.w	$a1, $fp, 16
	st.d	$a2, $fp, 24
	b	.LBB870_4
.LBB870_2:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 131
	bne	$a0, $a1, .LBB870_5
# %bb.3:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	st.d	$a0, $fp, 8
.LBB870_4:
	move	$a0, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB870_5:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	pcalau12i	$a1, %pc_hi20(.L.str.496)
	addi.d	$a2, $a1, %pc_lo12(.L.str.496)
	lu12i.w	$a1, 1
	ori	$a1, $a1, 2070
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
.Lfunc_end870:
	.size	_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE, .Lfunc_end870-_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19ConswithexpressionsEPNS_19impl_withexpressionEPNS_20impl_withexpressionsE # -- Begin function _ZN2kc19ConswithexpressionsEPNS_19impl_withexpressionEPNS_20impl_withexpressionsE
	.p2align	5
	.type	_ZN2kc19ConswithexpressionsEPNS_19impl_withexpressionEPNS_20impl_withexpressionsE,@function
_ZN2kc19ConswithexpressionsEPNS_19impl_withexpressionEPNS_20impl_withexpressionsE: # @_ZN2kc19ConswithexpressionsEPNS_19impl_withexpressionEPNS_20impl_withexpressionsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc20impl_withexpressionsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc20impl_withexpressionsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 32
	st.d	$fp, $a0, 40
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE)
	jr	$t8
.Lfunc_end871:
	.size	_ZN2kc19ConswithexpressionsEPNS_19impl_withexpressionEPNS_20impl_withexpressionsE, .Lfunc_end871-_ZN2kc19ConswithexpressionsEPNS_19impl_withexpressionEPNS_20impl_withexpressionsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10WEVariableEPNS_7impl_IDE # -- Begin function _ZN2kc10WEVariableEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc10WEVariableEPNS_7impl_IDE,@function
_ZN2kc10WEVariableEPNS_7impl_IDE:       # @_ZN2kc10WEVariableEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:                                # %_ZN2kc12_GLOBAL__N_128kc_initialize_withexpressionEPNS_19impl_withexpressionE.exit
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc30impl_withexpression_WEVariableE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc30impl_withexpression_WEVariableE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 32
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 24
	ld.d	$a1, $fp, 32
	st.w	$a0, $s0, 16
	st.d	$a1, $s0, 24
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end872:
	.size	_ZN2kc10WEVariableEPNS_7impl_IDE, .Lfunc_end872-_ZN2kc10WEVariableEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13WECexpressionEPNS_16impl_CexpressionE # -- Begin function _ZN2kc13WECexpressionEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc13WECexpressionEPNS_16impl_CexpressionE,@function
_ZN2kc13WECexpressionEPNS_16impl_CexpressionE: # @_ZN2kc13WECexpressionEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:                                # %_ZN2kc12_GLOBAL__N_128kc_initialize_withexpressionEPNS_19impl_withexpressionE.exit
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc33impl_withexpression_WECexpressionE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc33impl_withexpression_WECexpressionE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 32
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.w	$a0, $fp, 8
	ld.d	$a1, $fp, 16
	st.w	$a0, $s0, 16
	st.d	$a1, $s0, 24
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end873:
	.size	_ZN2kc13WECexpressionEPNS_16impl_CexpressionE, .Lfunc_end873-_ZN2kc13WECexpressionEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12NilwithcasesEv          # -- Begin function _ZN2kc12NilwithcasesEv
	.p2align	5
	.type	_ZN2kc12NilwithcasesEv,@function
_ZN2kc12NilwithcasesEv:                 # @_ZN2kc12NilwithcasesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_withcasesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_withcasesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end874:
	.size	_ZN2kc12NilwithcasesEv, .Lfunc_end874-_ZN2kc12NilwithcasesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13ConswithcasesEPNS_13impl_withcaseEPNS_14impl_withcasesE # -- Begin function _ZN2kc13ConswithcasesEPNS_13impl_withcaseEPNS_14impl_withcasesE
	.p2align	5
	.type	_ZN2kc13ConswithcasesEPNS_13impl_withcaseEPNS_14impl_withcasesE,@function
_ZN2kc13ConswithcasesEPNS_13impl_withcaseEPNS_14impl_withcasesE: # @_ZN2kc13ConswithcasesEPNS_13impl_withcaseEPNS_14impl_withcasesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_withcasesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_withcasesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end875:
	.size	_ZN2kc13ConswithcasesEPNS_13impl_withcaseEPNS_14impl_withcasesE, .Lfunc_end875-_ZN2kc13ConswithcasesEPNS_13impl_withcaseEPNS_14impl_withcasesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8WithcaseEPNS_18impl_patternchainsEPNS_10impl_CtextE # -- Begin function _ZN2kc8WithcaseEPNS_18impl_patternchainsEPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc8WithcaseEPNS_18impl_patternchainsEPNS_10impl_CtextE,@function
_ZN2kc8WithcaseEPNS_18impl_patternchainsEPNS_10impl_CtextE: # @_ZN2kc8WithcaseEPNS_18impl_patternchainsEPNS_10impl_CtextE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_withcase_WithcaseE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_withcase_WithcaseE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end876:
	.size	_ZN2kc8WithcaseEPNS_18impl_patternchainsEPNS_10impl_CtextE, .Lfunc_end876-_ZN2kc8WithcaseEPNS_18impl_patternchainsEPNS_10impl_CtextE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22NilunparsedeclarationsEv # -- Begin function _ZN2kc22NilunparsedeclarationsEv
	.p2align	5
	.type	_ZN2kc22NilunparsedeclarationsEv,@function
_ZN2kc22NilunparsedeclarationsEv:       # @_ZN2kc22NilunparsedeclarationsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_unparsedeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_unparsedeclarationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end877:
	.size	_ZN2kc22NilunparsedeclarationsEv, .Lfunc_end877-_ZN2kc22NilunparsedeclarationsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23ConsunparsedeclarationsEPNS_23impl_unparsedeclarationEPNS_24impl_unparsedeclarationsE # -- Begin function _ZN2kc23ConsunparsedeclarationsEPNS_23impl_unparsedeclarationEPNS_24impl_unparsedeclarationsE
	.p2align	5
	.type	_ZN2kc23ConsunparsedeclarationsEPNS_23impl_unparsedeclarationEPNS_24impl_unparsedeclarationsE,@function
_ZN2kc23ConsunparsedeclarationsEPNS_23impl_unparsedeclarationEPNS_24impl_unparsedeclarationsE: # @_ZN2kc23ConsunparsedeclarationsEPNS_23impl_unparsedeclarationEPNS_24impl_unparsedeclarationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_unparsedeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_unparsedeclarationsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end878:
	.size	_ZN2kc23ConsunparsedeclarationsEPNS_23impl_unparsedeclarationEPNS_24impl_unparsedeclarationsE, .Lfunc_end878-_ZN2kc23ConsunparsedeclarationsEPNS_23impl_unparsedeclarationEPNS_24impl_unparsedeclarationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18UnparseDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE # -- Begin function _ZN2kc18UnparseDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE
	.p2align	5
	.type	_ZN2kc18UnparseDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE,@function
_ZN2kc18UnparseDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE: # @_ZN2kc18UnparseDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end879:
	.size	_ZN2kc18UnparseDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE, .Lfunc_end879-_ZN2kc18UnparseDeclarationEPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17NilunparseclausesEv     # -- Begin function _ZN2kc17NilunparseclausesEv
	.p2align	5
	.type	_ZN2kc17NilunparseclausesEv,@function
_ZN2kc17NilunparseclausesEv:            # @_ZN2kc17NilunparseclausesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_unparseclausesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_unparseclausesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end880:
	.size	_ZN2kc17NilunparseclausesEv, .Lfunc_end880-_ZN2kc17NilunparseclausesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18ConsunparseclausesEPNS_18impl_unparseclauseEPNS_19impl_unparseclausesE # -- Begin function _ZN2kc18ConsunparseclausesEPNS_18impl_unparseclauseEPNS_19impl_unparseclausesE
	.p2align	5
	.type	_ZN2kc18ConsunparseclausesEPNS_18impl_unparseclauseEPNS_19impl_unparseclausesE,@function
_ZN2kc18ConsunparseclausesEPNS_18impl_unparseclauseEPNS_19impl_unparseclausesE: # @_ZN2kc18ConsunparseclausesEPNS_18impl_unparseclauseEPNS_19impl_unparseclausesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_unparseclausesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_unparseclausesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end881:
	.size	_ZN2kc18ConsunparseclausesEPNS_18impl_unparseclauseEPNS_19impl_unparseclausesE, .Lfunc_end881-_ZN2kc18ConsunparseclausesEPNS_18impl_unparseclauseEPNS_19impl_unparseclausesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13UnparseClauseEPNS_14impl_viewnamesEPNS_17impl_unparseitemsE # -- Begin function _ZN2kc13UnparseClauseEPNS_14impl_viewnamesEPNS_17impl_unparseitemsE
	.p2align	5
	.type	_ZN2kc13UnparseClauseEPNS_14impl_viewnamesEPNS_17impl_unparseitemsE,@function
_ZN2kc13UnparseClauseEPNS_14impl_viewnamesEPNS_17impl_unparseitemsE: # @_ZN2kc13UnparseClauseEPNS_14impl_viewnamesEPNS_17impl_unparseitemsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_unparseclause_UnparseClauseE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_unparseclause_UnparseClauseE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end882:
	.size	_ZN2kc13UnparseClauseEPNS_14impl_viewnamesEPNS_17impl_unparseitemsE, .Lfunc_end882-_ZN2kc13UnparseClauseEPNS_14impl_viewnamesEPNS_17impl_unparseitemsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12NilviewnamesEv          # -- Begin function _ZN2kc12NilviewnamesEv
	.p2align	5
	.type	_ZN2kc12NilviewnamesEv,@function
_ZN2kc12NilviewnamesEv:                 # @_ZN2kc12NilviewnamesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_viewnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_viewnamesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	st.b	$zero, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end883:
	.size	_ZN2kc12NilviewnamesEv, .Lfunc_end883-_ZN2kc12NilviewnamesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13ConsviewnamesEPNS_7impl_IDEPNS_14impl_viewnamesE # -- Begin function _ZN2kc13ConsviewnamesEPNS_7impl_IDEPNS_14impl_viewnamesE
	.p2align	5
	.type	_ZN2kc13ConsviewnamesEPNS_7impl_IDEPNS_14impl_viewnamesE,@function
_ZN2kc13ConsviewnamesEPNS_7impl_IDEPNS_14impl_viewnamesE: # @_ZN2kc13ConsviewnamesEPNS_7impl_IDEPNS_14impl_viewnamesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_viewnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_viewnamesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	st.b	$zero, $a0, 8
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end884:
	.size	_ZN2kc13ConsviewnamesEPNS_7impl_IDEPNS_14impl_viewnamesE, .Lfunc_end884-_ZN2kc13ConsviewnamesEPNS_7impl_IDEPNS_14impl_viewnamesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15NilunparseitemsEv       # -- Begin function _ZN2kc15NilunparseitemsEv
	.p2align	5
	.type	_ZN2kc15NilunparseitemsEv,@function
_ZN2kc15NilunparseitemsEv:              # @_ZN2kc15NilunparseitemsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_unparseitemsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_unparseitemsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end885:
	.size	_ZN2kc15NilunparseitemsEv, .Lfunc_end885-_ZN2kc15NilunparseitemsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16ConsunparseitemsEPNS_16impl_unparseitemEPNS_17impl_unparseitemsE # -- Begin function _ZN2kc16ConsunparseitemsEPNS_16impl_unparseitemEPNS_17impl_unparseitemsE
	.p2align	5
	.type	_ZN2kc16ConsunparseitemsEPNS_16impl_unparseitemEPNS_17impl_unparseitemsE,@function
_ZN2kc16ConsunparseitemsEPNS_16impl_unparseitemEPNS_17impl_unparseitemsE: # @_ZN2kc16ConsunparseitemsEPNS_16impl_unparseitemEPNS_17impl_unparseitemsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_unparseitemsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_unparseitemsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end886:
	.size	_ZN2kc16ConsunparseitemsEPNS_16impl_unparseitemEPNS_17impl_unparseitemsE, .Lfunc_end886-_ZN2kc16ConsunparseitemsEPNS_16impl_unparseitemEPNS_17impl_unparseitemsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6UnpStrEPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE # -- Begin function _ZN2kc6UnpStrEPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE
	.p2align	5
	.type	_ZN2kc6UnpStrEPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE,@function
_ZN2kc6UnpStrEPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE: # @_ZN2kc6UnpStrEPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_unparseitem_UnpStrE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_unparseitem_UnpStrE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	st.w	$zero, $a0, 8
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end887:
	.size	_ZN2kc6UnpStrEPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE, .Lfunc_end887-_ZN2kc6UnpStrEPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10UnpSubexprEPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE # -- Begin function _ZN2kc10UnpSubexprEPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE
	.p2align	5
	.type	_ZN2kc10UnpSubexprEPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE,@function
_ZN2kc10UnpSubexprEPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE: # @_ZN2kc10UnpSubexprEPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_unparseitem_UnpSubexprE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_unparseitem_UnpSubexprE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	st.w	$zero, $a0, 8
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end888:
	.size	_ZN2kc10UnpSubexprEPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE, .Lfunc_end888-_ZN2kc10UnpSubexprEPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8UnpCtextEPNS_19impl_languageoptionEPNS_10impl_CtextE # -- Begin function _ZN2kc8UnpCtextEPNS_19impl_languageoptionEPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc8UnpCtextEPNS_19impl_languageoptionEPNS_10impl_CtextE,@function
_ZN2kc8UnpCtextEPNS_19impl_languageoptionEPNS_10impl_CtextE: # @_ZN2kc8UnpCtextEPNS_19impl_languageoptionEPNS_10impl_CtextE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc25impl_unparseitem_UnpCtextE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc25impl_unparseitem_UnpCtextE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	st.w	$zero, $a0, 8
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end889:
	.size	_ZN2kc8UnpCtextEPNS_19impl_languageoptionEPNS_10impl_CtextE, .Lfunc_end889-_ZN2kc8UnpCtextEPNS_19impl_languageoptionEPNS_10impl_CtextE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7UnpBodyEPNS_19impl_languageoptionEPNS_17impl_unparseitemsE # -- Begin function _ZN2kc7UnpBodyEPNS_19impl_languageoptionEPNS_17impl_unparseitemsE
	.p2align	5
	.type	_ZN2kc7UnpBodyEPNS_19impl_languageoptionEPNS_17impl_unparseitemsE,@function
_ZN2kc7UnpBodyEPNS_19impl_languageoptionEPNS_17impl_unparseitemsE: # @_ZN2kc7UnpBodyEPNS_19impl_languageoptionEPNS_17impl_unparseitemsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_unparseitem_UnpBodyE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_unparseitem_UnpBodyE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	st.w	$zero, $a0, 8
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end890:
	.size	_ZN2kc7UnpBodyEPNS_19impl_languageoptionEPNS_17impl_unparseitemsE, .Lfunc_end890-_ZN2kc7UnpBodyEPNS_19impl_languageoptionEPNS_17impl_unparseitemsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12UViewVarDeclEPNS_7impl_IDES1_PNS_16impl_CexpressionE # -- Begin function _ZN2kc12UViewVarDeclEPNS_7impl_IDES1_PNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc12UViewVarDeclEPNS_7impl_IDES1_PNS_16impl_CexpressionE,@function
_ZN2kc12UViewVarDeclEPNS_7impl_IDES1_PNS_16impl_CexpressionE: # @_ZN2kc12UViewVarDeclEPNS_7impl_IDES1_PNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_unparseitem_UViewVarDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_unparseitem_UViewVarDeclE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	st.w	$zero, $a0, 8
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end891:
	.size	_ZN2kc12UViewVarDeclEPNS_7impl_IDES1_PNS_16impl_CexpressionE, .Lfunc_end891-_ZN2kc12UViewVarDeclEPNS_7impl_IDES1_PNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10UnpSubTermEPNS_7impl_IDE # -- Begin function _ZN2kc10UnpSubTermEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc10UnpSubTermEPNS_7impl_IDE,@function
_ZN2kc10UnpSubTermEPNS_7impl_IDE:       # @_ZN2kc10UnpSubTermEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_unpsubterm_UnpSubTermE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_unpsubterm_UnpSubTermE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end892:
	.size	_ZN2kc10UnpSubTermEPNS_7impl_IDE, .Lfunc_end892-_ZN2kc10UnpSubTermEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16UnpDollarvarTermEPNS_8impl_INTE # -- Begin function _ZN2kc16UnpDollarvarTermEPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc16UnpDollarvarTermEPNS_8impl_INTE,@function
_ZN2kc16UnpDollarvarTermEPNS_8impl_INTE: # @_ZN2kc16UnpDollarvarTermEPNS_8impl_INTE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end893:
	.size	_ZN2kc16UnpDollarvarTermEPNS_8impl_INTE, .Lfunc_end893-_ZN2kc16UnpDollarvarTermEPNS_8impl_INTE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10UnpSubAttrEPNS_7impl_IDEPNS_18impl_unpattributesE # -- Begin function _ZN2kc10UnpSubAttrEPNS_7impl_IDEPNS_18impl_unpattributesE
	.p2align	5
	.type	_ZN2kc10UnpSubAttrEPNS_7impl_IDEPNS_18impl_unpattributesE,@function
_ZN2kc10UnpSubAttrEPNS_7impl_IDEPNS_18impl_unpattributesE: # @_ZN2kc10UnpSubAttrEPNS_7impl_IDEPNS_18impl_unpattributesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_unpsubterm_UnpSubAttrE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_unpsubterm_UnpSubAttrE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end894:
	.size	_ZN2kc10UnpSubAttrEPNS_7impl_IDEPNS_18impl_unpattributesE, .Lfunc_end894-_ZN2kc10UnpSubAttrEPNS_7impl_IDEPNS_18impl_unpattributesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16UnpDollarvarAttrEPNS_8impl_INTEPNS_18impl_unpattributesE # -- Begin function _ZN2kc16UnpDollarvarAttrEPNS_8impl_INTEPNS_18impl_unpattributesE
	.p2align	5
	.type	_ZN2kc16UnpDollarvarAttrEPNS_8impl_INTEPNS_18impl_unpattributesE,@function
_ZN2kc16UnpDollarvarAttrEPNS_8impl_INTEPNS_18impl_unpattributesE: # @_ZN2kc16UnpDollarvarAttrEPNS_8impl_INTEPNS_18impl_unpattributesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end895:
	.size	_ZN2kc16UnpDollarvarAttrEPNS_8impl_INTEPNS_18impl_unpattributesE, .Lfunc_end895-_ZN2kc16UnpDollarvarAttrEPNS_8impl_INTEPNS_18impl_unpattributesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17UnpCastedVariableEPNS_7impl_IDES1_ # -- Begin function _ZN2kc17UnpCastedVariableEPNS_7impl_IDES1_
	.p2align	5
	.type	_ZN2kc17UnpCastedVariableEPNS_7impl_IDES1_,@function
_ZN2kc17UnpCastedVariableEPNS_7impl_IDES1_: # @_ZN2kc17UnpCastedVariableEPNS_7impl_IDES1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end896:
	.size	_ZN2kc17UnpCastedVariableEPNS_7impl_IDES1_, .Lfunc_end896-_ZN2kc17UnpCastedVariableEPNS_7impl_IDES1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16NilunpattributesEv      # -- Begin function _ZN2kc16NilunpattributesEv
	.p2align	5
	.type	_ZN2kc16NilunpattributesEv,@function
_ZN2kc16NilunpattributesEv:             # @_ZN2kc16NilunpattributesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_unpattributesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_unpattributesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end897:
	.size	_ZN2kc16NilunpattributesEv, .Lfunc_end897-_ZN2kc16NilunpattributesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ConsunpattributesEPNS_7impl_IDEPNS_18impl_unpattributesE # -- Begin function _ZN2kc17ConsunpattributesEPNS_7impl_IDEPNS_18impl_unpattributesE
	.p2align	5
	.type	_ZN2kc17ConsunpattributesEPNS_7impl_IDEPNS_18impl_unpattributesE,@function
_ZN2kc17ConsunpattributesEPNS_7impl_IDEPNS_18impl_unpattributesE: # @_ZN2kc17ConsunpattributesEPNS_7impl_IDEPNS_18impl_unpattributesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_unpattributesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_unpattributesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end898:
	.size	_ZN2kc17ConsunpattributesEPNS_7impl_IDEPNS_18impl_unpattributesE, .Lfunc_end898-_ZN2kc17ConsunpattributesEPNS_7impl_IDEPNS_18impl_unpattributesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10NoViewnameEv            # -- Begin function _ZN2kc10NoViewnameEv
	.p2align	5
	.type	_ZN2kc10NoViewnameEv,@function
_ZN2kc10NoViewnameEv:                   # @_ZN2kc10NoViewnameEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc30impl_viewnameoption_NoViewnameE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc30impl_viewnameoption_NoViewnameE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end899:
	.size	_ZN2kc10NoViewnameEv, .Lfunc_end899-_ZN2kc10NoViewnameEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11YesViewnameEPNS_7impl_IDE # -- Begin function _ZN2kc11YesViewnameEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc11YesViewnameEPNS_7impl_IDE,@function
_ZN2kc11YesViewnameEPNS_7impl_IDE:      # @_ZN2kc11YesViewnameEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc31impl_viewnameoption_YesViewnameE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc31impl_viewnameoption_YesViewnameE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end900:
	.size	_ZN2kc11YesViewnameEPNS_7impl_IDE, .Lfunc_end900-_ZN2kc11YesViewnameEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14NoLanguagenameEv        # -- Begin function _ZN2kc14NoLanguagenameEv
	.p2align	5
	.type	_ZN2kc14NoLanguagenameEv,@function
_ZN2kc14NoLanguagenameEv:               # @_ZN2kc14NoLanguagenameEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc34impl_languageoption_NoLanguagenameE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc34impl_languageoption_NoLanguagenameE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end901:
	.size	_ZN2kc14NoLanguagenameEv, .Lfunc_end901-_ZN2kc14NoLanguagenameEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12LanguageListEPNS_18impl_languagenamesE # -- Begin function _ZN2kc12LanguageListEPNS_18impl_languagenamesE
	.p2align	5
	.type	_ZN2kc12LanguageListEPNS_18impl_languagenamesE,@function
_ZN2kc12LanguageListEPNS_18impl_languagenamesE: # @_ZN2kc12LanguageListEPNS_18impl_languagenamesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_languageoption_LanguageListE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_languageoption_LanguageListE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end902:
	.size	_ZN2kc12LanguageListEPNS_18impl_languagenamesE, .Lfunc_end902-_ZN2kc12LanguageListEPNS_18impl_languagenamesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16NillanguagenamesEv      # -- Begin function _ZN2kc16NillanguagenamesEv
	.p2align	5
	.type	_ZN2kc16NillanguagenamesEv,@function
_ZN2kc16NillanguagenamesEv:             # @_ZN2kc16NillanguagenamesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_languagenamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_languagenamesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end903:
	.size	_ZN2kc16NillanguagenamesEv, .Lfunc_end903-_ZN2kc16NillanguagenamesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ConslanguagenamesEPNS_7impl_IDEPNS_18impl_languagenamesE # -- Begin function _ZN2kc17ConslanguagenamesEPNS_7impl_IDEPNS_18impl_languagenamesE
	.p2align	5
	.type	_ZN2kc17ConslanguagenamesEPNS_7impl_IDEPNS_18impl_languagenamesE,@function
_ZN2kc17ConslanguagenamesEPNS_7impl_IDEPNS_18impl_languagenamesE: # @_ZN2kc17ConslanguagenamesEPNS_7impl_IDEPNS_18impl_languagenamesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_languagenamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_languagenamesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end904:
	.size	_ZN2kc17ConslanguagenamesEPNS_7impl_IDEPNS_18impl_languagenamesE, .Lfunc_end904-_ZN2kc17ConslanguagenamesEPNS_7impl_IDEPNS_18impl_languagenamesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8FileLineEPNS_20impl_casestring__StrEi # -- Begin function _ZN2kc8FileLineEPNS_20impl_casestring__StrEi
	.p2align	5
	.type	_ZN2kc8FileLineEPNS_20impl_casestring__StrEi,@function
_ZN2kc8FileLineEPNS_20impl_casestring__StrEi: # @_ZN2kc8FileLineEPNS_20impl_casestring__StrEi
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.Ltmp0:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2kc22impl_fileline_FileLineC1EPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
.Ltmp1:
# %bb.1:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 48
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB905_2:
.Ltmp2:
	move	$s0, $a0
	ori	$a1, $zero, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end905:
	.size	_ZN2kc8FileLineEPNS_20impl_casestring__StrEi, .Lfunc_end905-_ZN2kc8FileLineEPNS_20impl_casestring__StrEi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table905:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    # >> Call Site 1 <<
	.uleb128 .Ltmp0-.Lfunc_begin0           #   Call between .Lfunc_begin0 and .Ltmp0
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp1-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp1
	.uleb128 .Ltmp2-.Lfunc_begin0           #     jumps to .Ltmp2
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1-.Lfunc_begin0           # >> Call Site 3 <<
	.uleb128 .Lfunc_end905-.Ltmp1           #   Call between .Ltmp1 and .Lfunc_end905
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end0:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2kc10NoFileLineEv            # -- Begin function _ZN2kc10NoFileLineEv
	.p2align	5
	.type	_ZN2kc10NoFileLineEv,@function
_ZN2kc10NoFileLineEv:                   # @_ZN2kc10NoFileLineEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc24impl_fileline_NoFileLineE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc24impl_fileline_NoFileLineE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end906:
	.size	_ZN2kc10NoFileLineEv, .Lfunc_end906-_ZN2kc10NoFileLineEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13PosNoFileLineEv         # -- Begin function _ZN2kc13PosNoFileLineEv
	.p2align	5
	.type	_ZN2kc13PosNoFileLineEv,@function
_ZN2kc13PosNoFileLineEv:                # @_ZN2kc13PosNoFileLineEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc27impl_fileline_PosNoFileLineE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc27impl_fileline_PosNoFileLineE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end907:
	.size	_ZN2kc13PosNoFileLineEv, .Lfunc_end907-_ZN2kc13PosNoFileLineEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25NilscopetypefilelinestackEv # -- Begin function _ZN2kc25NilscopetypefilelinestackEv
	.p2align	5
	.type	_ZN2kc25NilscopetypefilelinestackEv,@function
_ZN2kc25NilscopetypefilelinestackEv:    # @_ZN2kc25NilscopetypefilelinestackEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end908:
	.size	_ZN2kc25NilscopetypefilelinestackEv, .Lfunc_end908-_ZN2kc25NilscopetypefilelinestackEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26ConsscopetypefilelinestackEPNS_22impl_scopetypefilelineEPNS_27impl_scopetypefilelinestackE # -- Begin function _ZN2kc26ConsscopetypefilelinestackEPNS_22impl_scopetypefilelineEPNS_27impl_scopetypefilelinestackE
	.p2align	5
	.type	_ZN2kc26ConsscopetypefilelinestackEPNS_22impl_scopetypefilelineEPNS_27impl_scopetypefilelinestackE,@function
_ZN2kc26ConsscopetypefilelinestackEPNS_22impl_scopetypefilelineEPNS_27impl_scopetypefilelinestackE: # @_ZN2kc26ConsscopetypefilelinestackEPNS_22impl_scopetypefilelineEPNS_27impl_scopetypefilelinestackE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end909:
	.size	_ZN2kc26ConsscopetypefilelinestackEPNS_22impl_scopetypefilelineEPNS_27impl_scopetypefilelinestackE, .Lfunc_end909-_ZN2kc26ConsscopetypefilelinestackEPNS_22impl_scopetypefilelineEPNS_27impl_scopetypefilelinestackE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ScopeTypeFileLineEPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES1_ # -- Begin function _ZN2kc17ScopeTypeFileLineEPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES1_
	.p2align	5
	.type	_ZN2kc17ScopeTypeFileLineEPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES1_,@function
_ZN2kc17ScopeTypeFileLineEPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES1_: # @_ZN2kc17ScopeTypeFileLineEPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE+16)
	st.d	$a1, $a0, 0
	st.d	$s2, $a0, 8
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end910:
	.size	_ZN2kc17ScopeTypeFileLineEPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES1_, .Lfunc_end910-_ZN2kc17ScopeTypeFileLineEPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9ITUnknownEv              # -- Begin function _ZN2kc9ITUnknownEv
	.p2align	5
	.type	_ZN2kc9ITUnknownEv,@function
_ZN2kc9ITUnknownEv:                     # @_ZN2kc9ITUnknownEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_IDtype_ITUnknownE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_IDtype_ITUnknownE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end911:
	.size	_ZN2kc9ITUnknownEv, .Lfunc_end911-_ZN2kc9ITUnknownEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18ITPredefinedPhylumEPNS_22impl_phylumdeclarationE # -- Begin function _ZN2kc18ITPredefinedPhylumEPNS_22impl_phylumdeclarationE
	.p2align	5
	.type	_ZN2kc18ITPredefinedPhylumEPNS_22impl_phylumdeclarationE,@function
_ZN2kc18ITPredefinedPhylumEPNS_22impl_phylumdeclarationE: # @_ZN2kc18ITPredefinedPhylumEPNS_22impl_phylumdeclarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end912:
	.size	_ZN2kc18ITPredefinedPhylumEPNS_22impl_phylumdeclarationE, .Lfunc_end912-_ZN2kc18ITPredefinedPhylumEPNS_22impl_phylumdeclarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12ITUserPhylumEPNS_22impl_phylumdeclarationE # -- Begin function _ZN2kc12ITUserPhylumEPNS_22impl_phylumdeclarationE
	.p2align	5
	.type	_ZN2kc12ITUserPhylumEPNS_22impl_phylumdeclarationE,@function
_ZN2kc12ITUserPhylumEPNS_22impl_phylumdeclarationE: # @_ZN2kc12ITUserPhylumEPNS_22impl_phylumdeclarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_IDtype_ITUserPhylumE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_IDtype_ITUserPhylumE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end913:
	.size	_ZN2kc12ITUserPhylumEPNS_22impl_phylumdeclarationE, .Lfunc_end913-_ZN2kc12ITUserPhylumEPNS_22impl_phylumdeclarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20ITPredefinedOperatorEPNS_16impl_alternativeEPNS_7impl_IDE # -- Begin function _ZN2kc20ITPredefinedOperatorEPNS_16impl_alternativeEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc20ITPredefinedOperatorEPNS_16impl_alternativeEPNS_7impl_IDE,@function
_ZN2kc20ITPredefinedOperatorEPNS_16impl_alternativeEPNS_7impl_IDE: # @_ZN2kc20ITPredefinedOperatorEPNS_16impl_alternativeEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end914:
	.size	_ZN2kc20ITPredefinedOperatorEPNS_16impl_alternativeEPNS_7impl_IDE, .Lfunc_end914-_ZN2kc20ITPredefinedOperatorEPNS_16impl_alternativeEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14ITUserOperatorEPNS_16impl_alternativeEPNS_7impl_IDE # -- Begin function _ZN2kc14ITUserOperatorEPNS_16impl_alternativeEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc14ITUserOperatorEPNS_16impl_alternativeEPNS_7impl_IDE,@function
_ZN2kc14ITUserOperatorEPNS_16impl_alternativeEPNS_7impl_IDE: # @_ZN2kc14ITUserOperatorEPNS_16impl_alternativeEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_IDtype_ITUserOperatorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_IDtype_ITUserOperatorE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end915:
	.size	_ZN2kc14ITUserOperatorEPNS_16impl_alternativeEPNS_7impl_IDE, .Lfunc_end915-_ZN2kc14ITUserOperatorEPNS_16impl_alternativeEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24ITPredefinedStorageClassEv # -- Begin function _ZN2kc24ITPredefinedStorageClassEv
	.p2align	5
	.type	_ZN2kc24ITPredefinedStorageClassEv,@function
_ZN2kc24ITPredefinedStorageClassEv:     # @_ZN2kc24ITPredefinedStorageClassEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc36impl_IDtype_ITPredefinedStorageClassE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc36impl_IDtype_ITPredefinedStorageClassE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end916:
	.size	_ZN2kc24ITPredefinedStorageClassEv, .Lfunc_end916-_ZN2kc24ITPredefinedStorageClassEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14ITStorageClassEv        # -- Begin function _ZN2kc14ITStorageClassEv
	.p2align	5
	.type	_ZN2kc14ITStorageClassEv,@function
_ZN2kc14ITStorageClassEv:               # @_ZN2kc14ITStorageClassEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc26impl_IDtype_ITStorageClassE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc26impl_IDtype_ITStorageClassE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end917:
	.size	_ZN2kc14ITStorageClassEv, .Lfunc_end917-_ZN2kc14ITStorageClassEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ITPredefinedUViewEv     # -- Begin function _ZN2kc17ITPredefinedUViewEv
	.p2align	5
	.type	_ZN2kc17ITPredefinedUViewEv,@function
_ZN2kc17ITPredefinedUViewEv:            # @_ZN2kc17ITPredefinedUViewEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc29impl_IDtype_ITPredefinedUViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc29impl_IDtype_ITPredefinedUViewE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end918:
	.size	_ZN2kc17ITPredefinedUViewEv, .Lfunc_end918-_ZN2kc17ITPredefinedUViewEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11ITUserUViewEv           # -- Begin function _ZN2kc11ITUserUViewEv
	.p2align	5
	.type	_ZN2kc11ITUserUViewEv,@function
_ZN2kc11ITUserUViewEv:                  # @_ZN2kc11ITUserUViewEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc23impl_IDtype_ITUserUViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc23impl_IDtype_ITUserUViewE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end919:
	.size	_ZN2kc11ITUserUViewEv, .Lfunc_end919-_ZN2kc11ITUserUViewEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10ITUViewVarEv            # -- Begin function _ZN2kc10ITUViewVarEv
	.p2align	5
	.type	_ZN2kc10ITUViewVarEv,@function
_ZN2kc10ITUViewVarEv:                   # @_ZN2kc10ITUViewVarEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc22impl_IDtype_ITUViewVarE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc22impl_IDtype_ITUViewVarE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end920:
	.size	_ZN2kc10ITUViewVarEv, .Lfunc_end920-_ZN2kc10ITUViewVarEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ITPredefinedRViewEv     # -- Begin function _ZN2kc17ITPredefinedRViewEv
	.p2align	5
	.type	_ZN2kc17ITPredefinedRViewEv,@function
_ZN2kc17ITPredefinedRViewEv:            # @_ZN2kc17ITPredefinedRViewEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc29impl_IDtype_ITPredefinedRViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc29impl_IDtype_ITPredefinedRViewE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end921:
	.size	_ZN2kc17ITPredefinedRViewEv, .Lfunc_end921-_ZN2kc17ITPredefinedRViewEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11ITUserRViewEv           # -- Begin function _ZN2kc11ITUserRViewEv
	.p2align	5
	.type	_ZN2kc11ITUserRViewEv,@function
_ZN2kc11ITUserRViewEv:                  # @_ZN2kc11ITUserRViewEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc23impl_IDtype_ITUserRViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc23impl_IDtype_ITUserRViewE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end922:
	.size	_ZN2kc11ITUserRViewEv, .Lfunc_end922-_ZN2kc11ITUserRViewEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14ITUserFunctionEPNS_12impl_fnclassE # -- Begin function _ZN2kc14ITUserFunctionEPNS_12impl_fnclassE
	.p2align	5
	.type	_ZN2kc14ITUserFunctionEPNS_12impl_fnclassE,@function
_ZN2kc14ITUserFunctionEPNS_12impl_fnclassE: # @_ZN2kc14ITUserFunctionEPNS_12impl_fnclassE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_IDtype_ITUserFunctionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_IDtype_ITUserFunctionE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end923:
	.size	_ZN2kc14ITUserFunctionEPNS_12impl_fnclassE, .Lfunc_end923-_ZN2kc14ITUserFunctionEPNS_12impl_fnclassE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE # -- Begin function _ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE,@function
_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE: # @_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_IDtype_ITPatternVariableE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_IDtype_ITPatternVariableE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end924:
	.size	_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE, .Lfunc_end924-_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14ITLanguageNameEPNS_17impl_integer__IntE # -- Begin function _ZN2kc14ITLanguageNameEPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc14ITLanguageNameEPNS_17impl_integer__IntE,@function
_ZN2kc14ITLanguageNameEPNS_17impl_integer__IntE: # @_ZN2kc14ITLanguageNameEPNS_17impl_integer__IntE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_IDtype_ITLanguageNameE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_IDtype_ITLanguageNameE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end925:
	.size	_ZN2kc14ITLanguageNameEPNS_17impl_integer__IntE, .Lfunc_end925-_ZN2kc14ITLanguageNameEPNS_17impl_integer__IntE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12NiloperatorsEv          # -- Begin function _ZN2kc12NiloperatorsEv
	.p2align	5
	.type	_ZN2kc12NiloperatorsEv,@function
_ZN2kc12NiloperatorsEv:                 # @_ZN2kc12NiloperatorsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_operatorsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_operatorsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end926:
	.size	_ZN2kc12NiloperatorsEv, .Lfunc_end926-_ZN2kc12NiloperatorsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE # -- Begin function _ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE
	.p2align	5
	.type	_ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE,@function
_ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE: # @_ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_operatorsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_operatorsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end927:
	.size	_ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE, .Lfunc_end927-_ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8NilphylaEv               # -- Begin function _ZN2kc8NilphylaEv
	.p2align	5
	.type	_ZN2kc8NilphylaEv,@function
_ZN2kc8NilphylaEv:                      # @_ZN2kc8NilphylaEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_phylaE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_phylaE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end928:
	.size	_ZN2kc8NilphylaEv, .Lfunc_end928-_ZN2kc8NilphylaEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9ConsphylaEPNS_7impl_IDEPNS_10impl_phylaE # -- Begin function _ZN2kc9ConsphylaEPNS_7impl_IDEPNS_10impl_phylaE
	.p2align	5
	.type	_ZN2kc9ConsphylaEPNS_7impl_IDEPNS_10impl_phylaE,@function
_ZN2kc9ConsphylaEPNS_7impl_IDEPNS_10impl_phylaE: # @_ZN2kc9ConsphylaEPNS_7impl_IDEPNS_10impl_phylaE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_phylaE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_phylaE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end929:
	.size	_ZN2kc9ConsphylaEPNS_7impl_IDEPNS_10impl_phylaE, .Lfunc_end929-_ZN2kc9ConsphylaEPNS_7impl_IDEPNS_10impl_phylaE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12NilvariablesEv          # -- Begin function _ZN2kc12NilvariablesEv
	.p2align	5
	.type	_ZN2kc12NilvariablesEv,@function
_ZN2kc12NilvariablesEv:                 # @_ZN2kc12NilvariablesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_variablesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_variablesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end930:
	.size	_ZN2kc12NilvariablesEv, .Lfunc_end930-_ZN2kc12NilvariablesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE # -- Begin function _ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE
	.p2align	5
	.type	_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE,@function
_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE: # @_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_variablesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_variablesE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end931:
	.size	_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE, .Lfunc_end931-_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9DVAllowedEv              # -- Begin function _ZN2kc9DVAllowedEv
	.p2align	5
	.type	_ZN2kc9DVAllowedEv,@function
_ZN2kc9DVAllowedEv:                     # @_ZN2kc9DVAllowedEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc30impl_dollarvarstatus_DVAllowedE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc30impl_dollarvarstatus_DVAllowedE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end932:
	.size	_ZN2kc9DVAllowedEv, .Lfunc_end932-_ZN2kc9DVAllowedEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12DVDisallowedEv          # -- Begin function _ZN2kc12DVDisallowedEv
	.p2align	5
	.type	_ZN2kc12DVDisallowedEv,@function
_ZN2kc12DVDisallowedEv:                 # @_ZN2kc12DVDisallowedEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_dollarvarstatus_DVDisallowedE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_dollarvarstatus_DVDisallowedE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end933:
	.size	_ZN2kc12DVDisallowedEv, .Lfunc_end933-_ZN2kc12DVDisallowedEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc5EqualEv                  # -- Begin function _ZN2kc5EqualEv
	.p2align	5
	.type	_ZN2kc5EqualEv,@function
_ZN2kc5EqualEv:                         # @_ZN2kc5EqualEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc18impl_tribool_EqualE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc18impl_tribool_EqualE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end934:
	.size	_ZN2kc5EqualEv, .Lfunc_end934-_ZN2kc5EqualEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7SmallerEv                # -- Begin function _ZN2kc7SmallerEv
	.p2align	5
	.type	_ZN2kc7SmallerEv,@function
_ZN2kc7SmallerEv:                       # @_ZN2kc7SmallerEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc20impl_tribool_SmallerE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc20impl_tribool_SmallerE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end935:
	.size	_ZN2kc7SmallerEv, .Lfunc_end935-_ZN2kc7SmallerEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6BiggerEv                 # -- Begin function _ZN2kc6BiggerEv
	.p2align	5
	.type	_ZN2kc6BiggerEv,@function
_ZN2kc6BiggerEv:                        # @_ZN2kc6BiggerEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc19impl_tribool_BiggerE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc19impl_tribool_BiggerE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end936:
	.size	_ZN2kc6BiggerEv, .Lfunc_end936-_ZN2kc6BiggerEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25NilpatternrepresentationsEv # -- Begin function _ZN2kc25NilpatternrepresentationsEv
	.p2align	5
	.type	_ZN2kc25NilpatternrepresentationsEv,@function
_ZN2kc25NilpatternrepresentationsEv:    # @_ZN2kc25NilpatternrepresentationsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_patternrepresentationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_patternrepresentationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end937:
	.size	_ZN2kc25NilpatternrepresentationsEv, .Lfunc_end937-_ZN2kc25NilpatternrepresentationsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26ConspatternrepresentationsEPNS_26impl_patternrepresentationEPNS_27impl_patternrepresentationsE # -- Begin function _ZN2kc26ConspatternrepresentationsEPNS_26impl_patternrepresentationEPNS_27impl_patternrepresentationsE
	.p2align	5
	.type	_ZN2kc26ConspatternrepresentationsEPNS_26impl_patternrepresentationEPNS_27impl_patternrepresentationsE,@function
_ZN2kc26ConspatternrepresentationsEPNS_26impl_patternrepresentationEPNS_27impl_patternrepresentationsE: # @_ZN2kc26ConspatternrepresentationsEPNS_26impl_patternrepresentationEPNS_27impl_patternrepresentationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_patternrepresentationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_patternrepresentationsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end938:
	.size	_ZN2kc26ConspatternrepresentationsEPNS_26impl_patternrepresentationEPNS_27impl_patternrepresentationsE, .Lfunc_end938-_ZN2kc26ConspatternrepresentationsEPNS_26impl_patternrepresentationEPNS_27impl_patternrepresentationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24NilpatternrepresentationEv # -- Begin function _ZN2kc24NilpatternrepresentationEv
	.p2align	5
	.type	_ZN2kc24NilpatternrepresentationEv,@function
_ZN2kc24NilpatternrepresentationEv:     # @_ZN2kc24NilpatternrepresentationEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_patternrepresentationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_patternrepresentationE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end939:
	.size	_ZN2kc24NilpatternrepresentationEv, .Lfunc_end939-_ZN2kc24NilpatternrepresentationEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25ConspatternrepresentationEPNS_31impl_elem_patternrepresentationEPNS_26impl_patternrepresentationE # -- Begin function _ZN2kc25ConspatternrepresentationEPNS_31impl_elem_patternrepresentationEPNS_26impl_patternrepresentationE
	.p2align	5
	.type	_ZN2kc25ConspatternrepresentationEPNS_31impl_elem_patternrepresentationEPNS_26impl_patternrepresentationE,@function
_ZN2kc25ConspatternrepresentationEPNS_31impl_elem_patternrepresentationEPNS_26impl_patternrepresentationE: # @_ZN2kc25ConspatternrepresentationEPNS_31impl_elem_patternrepresentationEPNS_26impl_patternrepresentationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_patternrepresentationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_patternrepresentationE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end940:
	.size	_ZN2kc25ConspatternrepresentationEPNS_31impl_elem_patternrepresentationEPNS_26impl_patternrepresentationE, .Lfunc_end940-_ZN2kc25ConspatternrepresentationEPNS_31impl_elem_patternrepresentationEPNS_26impl_patternrepresentationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9PRBindingEPNS_9impl_pathEPNS_7impl_IDE # -- Begin function _ZN2kc9PRBindingEPNS_9impl_pathEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc9PRBindingEPNS_9impl_pathEPNS_7impl_IDE,@function
_ZN2kc9PRBindingEPNS_9impl_pathEPNS_7impl_IDE: # @_ZN2kc9PRBindingEPNS_9impl_pathEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc41impl_elem_patternrepresentation_PRBindingE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc41impl_elem_patternrepresentation_PRBindingE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 32
	st.d	$fp, $s1, 40
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 24
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end941:
	.size	_ZN2kc9PRBindingEPNS_9impl_pathEPNS_7impl_IDE, .Lfunc_end941-_ZN2kc9PRBindingEPNS_9impl_pathEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14PRVarPredicateEPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE # -- Begin function _ZN2kc14PRVarPredicateEPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.p2align	5
	.type	_ZN2kc14PRVarPredicateEPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE,@function
_ZN2kc14PRVarPredicateEPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE: # @_ZN2kc14PRVarPredicateEPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 56
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc46impl_elem_patternrepresentation_PRVarPredicateE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc46impl_elem_patternrepresentation_PRVarPredicateE+16)
	st.d	$a0, $s2, 0
	st.d	$s1, $s2, 32
	st.d	$s0, $s2, 40
	st.d	$fp, $s2, 48
	st.w	$zero, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 24
	move	$a0, $s2
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end942:
	.size	_ZN2kc14PRVarPredicateEPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE, .Lfunc_end942-_ZN2kc14PRVarPredicateEPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15PROperPredicateEPNS_9impl_pathEPNS_7impl_IDE # -- Begin function _ZN2kc15PROperPredicateEPNS_9impl_pathEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc15PROperPredicateEPNS_9impl_pathEPNS_7impl_IDE,@function
_ZN2kc15PROperPredicateEPNS_9impl_pathEPNS_7impl_IDE: # @_ZN2kc15PROperPredicateEPNS_9impl_pathEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc47impl_elem_patternrepresentation_PROperPredicateE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc47impl_elem_patternrepresentation_PROperPredicateE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 32
	st.d	$fp, $s1, 40
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 24
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end943:
	.size	_ZN2kc15PROperPredicateEPNS_9impl_pathEPNS_7impl_IDE, .Lfunc_end943-_ZN2kc15PROperPredicateEPNS_9impl_pathEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15PRUserPredicateEPNS_16impl_CexpressionE # -- Begin function _ZN2kc15PRUserPredicateEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc15PRUserPredicateEPNS_16impl_CexpressionE,@function
_ZN2kc15PRUserPredicateEPNS_16impl_CexpressionE: # @_ZN2kc15PRUserPredicateEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc47impl_elem_patternrepresentation_PRUserPredicateE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc47impl_elem_patternrepresentation_PRUserPredicateE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 32
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 24
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end944:
	.size	_ZN2kc15PRUserPredicateEPNS_16impl_CexpressionE, .Lfunc_end944-_ZN2kc15PRUserPredicateEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16PRNonLeafBindingEPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE # -- Begin function _ZN2kc16PRNonLeafBindingEPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.p2align	5
	.type	_ZN2kc16PRNonLeafBindingEPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE,@function
_ZN2kc16PRNonLeafBindingEPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE: # @_ZN2kc16PRNonLeafBindingEPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 56
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE+16)
	st.d	$a0, $s2, 0
	st.d	$s1, $s2, 32
	st.d	$s0, $s2, 40
	st.d	$fp, $s2, 48
	st.w	$zero, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s2, 24
	move	$a0, $s2
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end945:
	.size	_ZN2kc16PRNonLeafBindingEPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE, .Lfunc_end945-_ZN2kc16PRNonLeafBindingEPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10PRWildcardEPNS_9impl_pathE # -- Begin function _ZN2kc10PRWildcardEPNS_9impl_pathE
	.p2align	5
	.type	_ZN2kc10PRWildcardEPNS_9impl_pathE,@function
_ZN2kc10PRWildcardEPNS_9impl_pathE:     # @_ZN2kc10PRWildcardEPNS_9impl_pathE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc42impl_elem_patternrepresentation_PRWildcardE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc42impl_elem_patternrepresentation_PRWildcardE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 32
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 24
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end946:
	.size	_ZN2kc10PRWildcardEPNS_9impl_pathE, .Lfunc_end946-_ZN2kc10PRWildcardEPNS_9impl_pathE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9PRDefaultEv              # -- Begin function _ZN2kc9PRDefaultEv
	.p2align	5
	.type	_ZN2kc9PRDefaultEv,@function
_ZN2kc9PRDefaultEv:                     # @_ZN2kc9PRDefaultEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_elem_patternrepresentation_PRDefaultE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_elem_patternrepresentation_PRDefaultE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	st.w	$zero, $fp, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 24
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end947:
	.size	_ZN2kc9PRDefaultEv, .Lfunc_end947-_ZN2kc9PRDefaultEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15PRStringLiteralEPNS_9impl_pathEPNS_18impl_CexpressionDQE # -- Begin function _ZN2kc15PRStringLiteralEPNS_9impl_pathEPNS_18impl_CexpressionDQE
	.p2align	5
	.type	_ZN2kc15PRStringLiteralEPNS_9impl_pathEPNS_18impl_CexpressionDQE,@function
_ZN2kc15PRStringLiteralEPNS_9impl_pathEPNS_18impl_CexpressionDQE: # @_ZN2kc15PRStringLiteralEPNS_9impl_pathEPNS_18impl_CexpressionDQE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc47impl_elem_patternrepresentation_PRStringLiteralE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc47impl_elem_patternrepresentation_PRStringLiteralE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 32
	st.d	$fp, $s1, 40
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 24
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end948:
	.size	_ZN2kc15PRStringLiteralEPNS_9impl_pathEPNS_18impl_CexpressionDQE, .Lfunc_end948-_ZN2kc15PRStringLiteralEPNS_9impl_pathEPNS_18impl_CexpressionDQE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12PRIntLiteralEPNS_9impl_pathEPNS_8impl_INTE # -- Begin function _ZN2kc12PRIntLiteralEPNS_9impl_pathEPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc12PRIntLiteralEPNS_9impl_pathEPNS_8impl_INTE,@function
_ZN2kc12PRIntLiteralEPNS_9impl_pathEPNS_8impl_INTE: # @_ZN2kc12PRIntLiteralEPNS_9impl_pathEPNS_8impl_INTE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc44impl_elem_patternrepresentation_PRIntLiteralE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc44impl_elem_patternrepresentation_PRIntLiteralE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 32
	st.d	$fp, $s1, 40
	st.w	$zero, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 24
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end949:
	.size	_ZN2kc12PRIntLiteralEPNS_9impl_pathEPNS_8impl_INTE, .Lfunc_end949-_ZN2kc12PRIntLiteralEPNS_9impl_pathEPNS_8impl_INTE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7NilpathEv                # -- Begin function _ZN2kc7NilpathEv
	.p2align	5
	.type	_ZN2kc7NilpathEv,@function
_ZN2kc7NilpathEv:                       # @_ZN2kc7NilpathEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc9impl_pathE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc9impl_pathE+16)
	st.d	$a0, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 24
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 16
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end950:
	.size	_ZN2kc7NilpathEv, .Lfunc_end950-_ZN2kc7NilpathEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8ConspathEPNS_17impl_integer__IntEPNS_9impl_pathE # -- Begin function _ZN2kc8ConspathEPNS_17impl_integer__IntEPNS_9impl_pathE
	.p2align	5
	.type	_ZN2kc8ConspathEPNS_17impl_integer__IntEPNS_9impl_pathE,@function
_ZN2kc8ConspathEPNS_17impl_integer__IntEPNS_9impl_pathE: # @_ZN2kc8ConspathEPNS_17impl_integer__IntEPNS_9impl_pathE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc9impl_pathE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc9impl_pathE+16)
	st.d	$a0, $s1, 0
	st.d	$s0, $s1, 24
	st.d	$fp, $s1, 32
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 16
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end951:
	.size	_ZN2kc8ConspathEPNS_17impl_integer__IntEPNS_9impl_pathE, .Lfunc_end951-_ZN2kc8ConspathEPNS_17impl_integer__IntEPNS_9impl_pathE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8NilpathsEv               # -- Begin function _ZN2kc8NilpathsEv
	.p2align	5
	.type	_ZN2kc8NilpathsEv,@function
_ZN2kc8NilpathsEv:                      # @_ZN2kc8NilpathsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_pathsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_pathsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end952:
	.size	_ZN2kc8NilpathsEv, .Lfunc_end952-_ZN2kc8NilpathsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9ConspathsEPNS_9impl_pathEPNS_10impl_pathsE # -- Begin function _ZN2kc9ConspathsEPNS_9impl_pathEPNS_10impl_pathsE
	.p2align	5
	.type	_ZN2kc9ConspathsEPNS_9impl_pathEPNS_10impl_pathsE,@function
_ZN2kc9ConspathsEPNS_9impl_pathEPNS_10impl_pathsE: # @_ZN2kc9ConspathsEPNS_9impl_pathEPNS_10impl_pathsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_pathsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_pathsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end953:
	.size	_ZN2kc9ConspathsEPNS_9impl_pathEPNS_10impl_pathsE, .Lfunc_end953-_ZN2kc9ConspathsEPNS_9impl_pathEPNS_10impl_pathsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14NilargsnumbersEv        # -- Begin function _ZN2kc14NilargsnumbersEv
	.p2align	5
	.type	_ZN2kc14NilargsnumbersEv,@function
_ZN2kc14NilargsnumbersEv:               # @_ZN2kc14NilargsnumbersEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_argsnumbersE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_argsnumbersE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end954:
	.size	_ZN2kc14NilargsnumbersEv, .Lfunc_end954-_ZN2kc14NilargsnumbersEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15ConsargsnumbersEPNS_17impl_integer__IntEPNS_16impl_argsnumbersE # -- Begin function _ZN2kc15ConsargsnumbersEPNS_17impl_integer__IntEPNS_16impl_argsnumbersE
	.p2align	5
	.type	_ZN2kc15ConsargsnumbersEPNS_17impl_integer__IntEPNS_16impl_argsnumbersE,@function
_ZN2kc15ConsargsnumbersEPNS_17impl_integer__IntEPNS_16impl_argsnumbersE: # @_ZN2kc15ConsargsnumbersEPNS_17impl_integer__IntEPNS_16impl_argsnumbersE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_argsnumbersE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_argsnumbersE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end955:
	.size	_ZN2kc15ConsargsnumbersEPNS_17impl_integer__IntEPNS_16impl_argsnumbersE, .Lfunc_end955-_ZN2kc15ConsargsnumbersEPNS_17impl_integer__IntEPNS_16impl_argsnumbersE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19NilrewriterulesinfoEv   # -- Begin function _ZN2kc19NilrewriterulesinfoEv
	.p2align	5
	.type	_ZN2kc19NilrewriterulesinfoEv,@function
_ZN2kc19NilrewriterulesinfoEv:          # @_ZN2kc19NilrewriterulesinfoEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_rewriterulesinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_rewriterulesinfoE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end956:
	.size	_ZN2kc19NilrewriterulesinfoEv, .Lfunc_end956-_ZN2kc19NilrewriterulesinfoEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20ConsrewriterulesinfoEPNS_20impl_rewriteruleinfoEPNS_21impl_rewriterulesinfoE # -- Begin function _ZN2kc20ConsrewriterulesinfoEPNS_20impl_rewriteruleinfoEPNS_21impl_rewriterulesinfoE
	.p2align	5
	.type	_ZN2kc20ConsrewriterulesinfoEPNS_20impl_rewriteruleinfoEPNS_21impl_rewriterulesinfoE,@function
_ZN2kc20ConsrewriterulesinfoEPNS_20impl_rewriteruleinfoEPNS_21impl_rewriterulesinfoE: # @_ZN2kc20ConsrewriterulesinfoEPNS_20impl_rewriteruleinfoEPNS_21impl_rewriterulesinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_rewriterulesinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_rewriterulesinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end957:
	.size	_ZN2kc20ConsrewriterulesinfoEPNS_20impl_rewriteruleinfoEPNS_21impl_rewriterulesinfoE, .Lfunc_end957-_ZN2kc20ConsrewriterulesinfoEPNS_20impl_rewriteruleinfoEPNS_21impl_rewriterulesinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15RewriteruleinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_rewriteclauseE # -- Begin function _ZN2kc15RewriteruleinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_rewriteclauseE
	.p2align	5
	.type	_ZN2kc15RewriteruleinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_rewriteclauseE,@function
_ZN2kc15RewriteruleinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_rewriteclauseE: # @_ZN2kc15RewriteruleinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_rewriteclauseE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end958:
	.size	_ZN2kc15RewriteruleinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_rewriteclauseE, .Lfunc_end958-_ZN2kc15RewriteruleinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_rewriteclauseE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16NilwithcasesinfoEv      # -- Begin function _ZN2kc16NilwithcasesinfoEv
	.p2align	5
	.type	_ZN2kc16NilwithcasesinfoEv,@function
_ZN2kc16NilwithcasesinfoEv:             # @_ZN2kc16NilwithcasesinfoEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_withcasesinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_withcasesinfoE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end959:
	.size	_ZN2kc16NilwithcasesinfoEv, .Lfunc_end959-_ZN2kc16NilwithcasesinfoEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17ConswithcasesinfoEPNS_17impl_withcaseinfoEPNS_18impl_withcasesinfoE # -- Begin function _ZN2kc17ConswithcasesinfoEPNS_17impl_withcaseinfoEPNS_18impl_withcasesinfoE
	.p2align	5
	.type	_ZN2kc17ConswithcasesinfoEPNS_17impl_withcaseinfoEPNS_18impl_withcasesinfoE,@function
_ZN2kc17ConswithcasesinfoEPNS_17impl_withcaseinfoEPNS_18impl_withcasesinfoE: # @_ZN2kc17ConswithcasesinfoEPNS_17impl_withcaseinfoEPNS_18impl_withcasesinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_withcasesinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_withcasesinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end960:
	.size	_ZN2kc17ConswithcasesinfoEPNS_17impl_withcaseinfoEPNS_18impl_withcasesinfoE, .Lfunc_end960-_ZN2kc17ConswithcasesinfoEPNS_17impl_withcaseinfoEPNS_18impl_withcasesinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12WithcaseinfoEPNS_26impl_patternrepresentationES1_PNS_10impl_CtextE # -- Begin function _ZN2kc12WithcaseinfoEPNS_26impl_patternrepresentationES1_PNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc12WithcaseinfoEPNS_26impl_patternrepresentationES1_PNS_10impl_CtextE,@function
_ZN2kc12WithcaseinfoEPNS_26impl_patternrepresentationES1_PNS_10impl_CtextE: # @_ZN2kc12WithcaseinfoEPNS_26impl_patternrepresentationES1_PNS_10impl_CtextE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end961:
	.size	_ZN2kc12WithcaseinfoEPNS_26impl_patternrepresentationES1_PNS_10impl_CtextE, .Lfunc_end961-_ZN2kc12WithcaseinfoEPNS_26impl_patternrepresentationES1_PNS_10impl_CtextE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19NilrewriteviewsinfoEv   # -- Begin function _ZN2kc19NilrewriteviewsinfoEv
	.p2align	5
	.type	_ZN2kc19NilrewriteviewsinfoEv,@function
_ZN2kc19NilrewriteviewsinfoEv:          # @_ZN2kc19NilrewriteviewsinfoEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end962:
	.size	_ZN2kc19NilrewriteviewsinfoEv, .Lfunc_end962-_ZN2kc19NilrewriteviewsinfoEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20ConsrewriteviewsinfoEPNS_20impl_rewriteviewinfoEPNS_21impl_rewriteviewsinfoE # -- Begin function _ZN2kc20ConsrewriteviewsinfoEPNS_20impl_rewriteviewinfoEPNS_21impl_rewriteviewsinfoE
	.p2align	5
	.type	_ZN2kc20ConsrewriteviewsinfoEPNS_20impl_rewriteviewinfoEPNS_21impl_rewriteviewsinfoE,@function
_ZN2kc20ConsrewriteviewsinfoEPNS_20impl_rewriteviewinfoEPNS_21impl_rewriteviewsinfoE: # @_ZN2kc20ConsrewriteviewsinfoEPNS_20impl_rewriteviewinfoEPNS_21impl_rewriteviewsinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end963:
	.size	_ZN2kc20ConsrewriteviewsinfoEPNS_20impl_rewriteviewinfoEPNS_21impl_rewriteviewsinfoE, .Lfunc_end963-_ZN2kc20ConsrewriteviewsinfoEPNS_20impl_rewriteviewinfoEPNS_21impl_rewriteviewsinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15RewriteviewinfoEPNS_7impl_IDEPNS_21impl_rewriterulesinfoE # -- Begin function _ZN2kc15RewriteviewinfoEPNS_7impl_IDEPNS_21impl_rewriterulesinfoE
	.p2align	5
	.type	_ZN2kc15RewriteviewinfoEPNS_7impl_IDEPNS_21impl_rewriterulesinfoE,@function
_ZN2kc15RewriteviewinfoEPNS_7impl_IDEPNS_21impl_rewriterulesinfoE: # @_ZN2kc15RewriteviewinfoEPNS_7impl_IDEPNS_21impl_rewriterulesinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end964:
	.size	_ZN2kc15RewriteviewinfoEPNS_7impl_IDEPNS_21impl_rewriterulesinfoE, .Lfunc_end964-_ZN2kc15RewriteviewinfoEPNS_7impl_IDEPNS_21impl_rewriterulesinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19NilunparseviewsinfoEv   # -- Begin function _ZN2kc19NilunparseviewsinfoEv
	.p2align	5
	.type	_ZN2kc19NilunparseviewsinfoEv,@function
_ZN2kc19NilunparseviewsinfoEv:          # @_ZN2kc19NilunparseviewsinfoEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_unparseviewsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_unparseviewsinfoE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end965:
	.size	_ZN2kc19NilunparseviewsinfoEv, .Lfunc_end965-_ZN2kc19NilunparseviewsinfoEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20ConsunparseviewsinfoEPNS_20impl_unparseviewinfoEPNS_21impl_unparseviewsinfoE # -- Begin function _ZN2kc20ConsunparseviewsinfoEPNS_20impl_unparseviewinfoEPNS_21impl_unparseviewsinfoE
	.p2align	5
	.type	_ZN2kc20ConsunparseviewsinfoEPNS_20impl_unparseviewinfoEPNS_21impl_unparseviewsinfoE,@function
_ZN2kc20ConsunparseviewsinfoEPNS_20impl_unparseviewinfoEPNS_21impl_unparseviewsinfoE: # @_ZN2kc20ConsunparseviewsinfoEPNS_20impl_unparseviewinfoEPNS_21impl_unparseviewsinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_unparseviewsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_unparseviewsinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end966:
	.size	_ZN2kc20ConsunparseviewsinfoEPNS_20impl_unparseviewinfoEPNS_21impl_unparseviewsinfoE, .Lfunc_end966-_ZN2kc20ConsunparseviewsinfoEPNS_20impl_unparseviewinfoEPNS_21impl_unparseviewsinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15UnparseviewinfoEPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE # -- Begin function _ZN2kc15UnparseviewinfoEPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE
	.p2align	5
	.type	_ZN2kc15UnparseviewinfoEPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE,@function
_ZN2kc15UnparseviewinfoEPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE: # @_ZN2kc15UnparseviewinfoEPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end967:
	.size	_ZN2kc15UnparseviewinfoEPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE, .Lfunc_end967-_ZN2kc15UnparseviewinfoEPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19NilunparsedeclsinfoEv   # -- Begin function _ZN2kc19NilunparsedeclsinfoEv
	.p2align	5
	.type	_ZN2kc19NilunparsedeclsinfoEv,@function
_ZN2kc19NilunparsedeclsinfoEv:          # @_ZN2kc19NilunparsedeclsinfoEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end968:
	.size	_ZN2kc19NilunparsedeclsinfoEv, .Lfunc_end968-_ZN2kc19NilunparsedeclsinfoEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20ConsunparsedeclsinfoEPNS_20impl_unparsedeclinfoEPNS_21impl_unparsedeclsinfoE # -- Begin function _ZN2kc20ConsunparsedeclsinfoEPNS_20impl_unparsedeclinfoEPNS_21impl_unparsedeclsinfoE
	.p2align	5
	.type	_ZN2kc20ConsunparsedeclsinfoEPNS_20impl_unparsedeclinfoEPNS_21impl_unparsedeclsinfoE,@function
_ZN2kc20ConsunparsedeclsinfoEPNS_20impl_unparsedeclinfoEPNS_21impl_unparsedeclsinfoE: # @_ZN2kc20ConsunparsedeclsinfoEPNS_20impl_unparsedeclinfoEPNS_21impl_unparsedeclsinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end969:
	.size	_ZN2kc20ConsunparsedeclsinfoEPNS_20impl_unparsedeclinfoEPNS_21impl_unparsedeclsinfoE, .Lfunc_end969-_ZN2kc20ConsunparsedeclsinfoEPNS_20impl_unparsedeclinfoEPNS_21impl_unparsedeclsinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15UnparsedeclinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_unparseclauseE # -- Begin function _ZN2kc15UnparsedeclinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_unparseclauseE
	.p2align	5
	.type	_ZN2kc15UnparsedeclinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_unparseclauseE,@function
_ZN2kc15UnparsedeclinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_unparseclauseE: # @_ZN2kc15UnparsedeclinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_unparseclauseE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end970:
	.size	_ZN2kc15UnparsedeclinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_unparseclauseE, .Lfunc_end970-_ZN2kc15UnparsedeclinfoEPNS_26impl_patternrepresentationES1_PNS_18impl_unparseclauseE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13AcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE # -- Begin function _ZN2kc13AcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE
	.p2align	5
	.type	_ZN2kc13AcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE,@function
_ZN2kc13AcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE: # @_ZN2kc13AcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_declaration_AcDeclarationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_declaration_AcDeclarationE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end971:
	.size	_ZN2kc13AcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE, .Lfunc_end971-_ZN2kc13AcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22Nilac_declaration_listEv # -- Begin function _ZN2kc22Nilac_declaration_listEv
	.p2align	5
	.type	_ZN2kc22Nilac_declaration_listEv,@function
_ZN2kc22Nilac_declaration_listEv:       # @_ZN2kc22Nilac_declaration_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_ac_declaration_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_ac_declaration_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end972:
	.size	_ZN2kc22Nilac_declaration_listEv, .Lfunc_end972-_ZN2kc22Nilac_declaration_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23Consac_declaration_listEPNS_19impl_ac_declarationEPNS_24impl_ac_declaration_listE # -- Begin function _ZN2kc23Consac_declaration_listEPNS_19impl_ac_declarationEPNS_24impl_ac_declaration_listE
	.p2align	5
	.type	_ZN2kc23Consac_declaration_listEPNS_19impl_ac_declarationEPNS_24impl_ac_declaration_listE,@function
_ZN2kc23Consac_declaration_listEPNS_19impl_ac_declarationEPNS_24impl_ac_declaration_listE: # @_ZN2kc23Consac_declaration_listEPNS_19impl_ac_declarationEPNS_24impl_ac_declaration_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_ac_declaration_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_ac_declaration_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end973:
	.size	_ZN2kc23Consac_declaration_listEPNS_19impl_ac_declarationEPNS_24impl_ac_declaration_listE, .Lfunc_end973-_ZN2kc23Consac_declaration_listEPNS_19impl_ac_declarationEPNS_24impl_ac_declaration_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28Nilac_declaration_specifiersEv # -- Begin function _ZN2kc28Nilac_declaration_specifiersEv
	.p2align	5
	.type	_ZN2kc28Nilac_declaration_specifiersEv,@function
_ZN2kc28Nilac_declaration_specifiersEv: # @_ZN2kc28Nilac_declaration_specifiersEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end974:
	.size	_ZN2kc28Nilac_declaration_specifiersEv, .Lfunc_end974-_ZN2kc28Nilac_declaration_specifiersEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc29Consac_declaration_specifiersEPNS_29impl_ac_declaration_specifierEPNS_30impl_ac_declaration_specifiersE # -- Begin function _ZN2kc29Consac_declaration_specifiersEPNS_29impl_ac_declaration_specifierEPNS_30impl_ac_declaration_specifiersE
	.p2align	5
	.type	_ZN2kc29Consac_declaration_specifiersEPNS_29impl_ac_declaration_specifierEPNS_30impl_ac_declaration_specifiersE,@function
_ZN2kc29Consac_declaration_specifiersEPNS_29impl_ac_declaration_specifierEPNS_30impl_ac_declaration_specifiersE: # @_ZN2kc29Consac_declaration_specifiersEPNS_29impl_ac_declaration_specifierEPNS_30impl_ac_declaration_specifiersE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end975:
	.size	_ZN2kc29Consac_declaration_specifiersEPNS_29impl_ac_declaration_specifierEPNS_30impl_ac_declaration_specifiersE, .Lfunc_end975-_ZN2kc29Consac_declaration_specifiersEPNS_29impl_ac_declaration_specifierEPNS_30impl_ac_declaration_specifiersE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21AcDeclSpecStorageSpecEPNS_31impl_ac_storage_class_specifierE # -- Begin function _ZN2kc21AcDeclSpecStorageSpecEPNS_31impl_ac_storage_class_specifierE
	.p2align	5
	.type	_ZN2kc21AcDeclSpecStorageSpecEPNS_31impl_ac_storage_class_specifierE,@function
_ZN2kc21AcDeclSpecStorageSpecEPNS_31impl_ac_storage_class_specifierE: # @_ZN2kc21AcDeclSpecStorageSpecEPNS_31impl_ac_storage_class_specifierE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end976:
	.size	_ZN2kc21AcDeclSpecStorageSpecEPNS_31impl_ac_storage_class_specifierE, .Lfunc_end976-_ZN2kc21AcDeclSpecStorageSpecEPNS_31impl_ac_storage_class_specifierE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18AcDeclSpecTypeSpecEPNS_22impl_ac_type_specifierE # -- Begin function _ZN2kc18AcDeclSpecTypeSpecEPNS_22impl_ac_type_specifierE
	.p2align	5
	.type	_ZN2kc18AcDeclSpecTypeSpecEPNS_22impl_ac_type_specifierE,@function
_ZN2kc18AcDeclSpecTypeSpecEPNS_22impl_ac_type_specifierE: # @_ZN2kc18AcDeclSpecTypeSpecEPNS_22impl_ac_type_specifierE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end977:
	.size	_ZN2kc18AcDeclSpecTypeSpecEPNS_22impl_ac_type_specifierE, .Lfunc_end977-_ZN2kc18AcDeclSpecTypeSpecEPNS_22impl_ac_type_specifierE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18AcDeclSpecTypeQualEPNS_22impl_ac_type_qualifierE # -- Begin function _ZN2kc18AcDeclSpecTypeQualEPNS_22impl_ac_type_qualifierE
	.p2align	5
	.type	_ZN2kc18AcDeclSpecTypeQualEPNS_22impl_ac_type_qualifierE,@function
_ZN2kc18AcDeclSpecTypeQualEPNS_22impl_ac_type_qualifierE: # @_ZN2kc18AcDeclSpecTypeQualEPNS_22impl_ac_type_qualifierE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end978:
	.size	_ZN2kc18AcDeclSpecTypeQualEPNS_22impl_ac_type_qualifierE, .Lfunc_end978-_ZN2kc18AcDeclSpecTypeQualEPNS_22impl_ac_type_qualifierE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6AcAutoEv                 # -- Begin function _ZN2kc6AcAutoEv
	.p2align	5
	.type	_ZN2kc6AcAutoEv,@function
_ZN2kc6AcAutoEv:                        # @_ZN2kc6AcAutoEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc38impl_ac_storage_class_specifier_AcAutoE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc38impl_ac_storage_class_specifier_AcAutoE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end979:
	.size	_ZN2kc6AcAutoEv, .Lfunc_end979-_ZN2kc6AcAutoEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10AcRegisterEv            # -- Begin function _ZN2kc10AcRegisterEv
	.p2align	5
	.type	_ZN2kc10AcRegisterEv,@function
_ZN2kc10AcRegisterEv:                   # @_ZN2kc10AcRegisterEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc42impl_ac_storage_class_specifier_AcRegisterE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc42impl_ac_storage_class_specifier_AcRegisterE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end980:
	.size	_ZN2kc10AcRegisterEv, .Lfunc_end980-_ZN2kc10AcRegisterEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8AcStaticEv               # -- Begin function _ZN2kc8AcStaticEv
	.p2align	5
	.type	_ZN2kc8AcStaticEv,@function
_ZN2kc8AcStaticEv:                      # @_ZN2kc8AcStaticEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc40impl_ac_storage_class_specifier_AcStaticE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc40impl_ac_storage_class_specifier_AcStaticE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end981:
	.size	_ZN2kc8AcStaticEv, .Lfunc_end981-_ZN2kc8AcStaticEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8AcExternEv               # -- Begin function _ZN2kc8AcExternEv
	.p2align	5
	.type	_ZN2kc8AcExternEv,@function
_ZN2kc8AcExternEv:                      # @_ZN2kc8AcExternEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc40impl_ac_storage_class_specifier_AcExternE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc40impl_ac_storage_class_specifier_AcExternE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end982:
	.size	_ZN2kc8AcExternEv, .Lfunc_end982-_ZN2kc8AcExternEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9AcTypedefEv              # -- Begin function _ZN2kc9AcTypedefEv
	.p2align	5
	.type	_ZN2kc9AcTypedefEv,@function
_ZN2kc9AcTypedefEv:                     # @_ZN2kc9AcTypedefEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_ac_storage_class_specifier_AcTypedefE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_ac_storage_class_specifier_AcTypedefE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end983:
	.size	_ZN2kc9AcTypedefEv, .Lfunc_end983-_ZN2kc9AcTypedefEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9AcVirtualEv              # -- Begin function _ZN2kc9AcVirtualEv
	.p2align	5
	.type	_ZN2kc9AcVirtualEv,@function
_ZN2kc9AcVirtualEv:                     # @_ZN2kc9AcVirtualEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_ac_storage_class_specifier_AcVirtualE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_ac_storage_class_specifier_AcVirtualE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end984:
	.size	_ZN2kc9AcVirtualEv, .Lfunc_end984-_ZN2kc9AcVirtualEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10AcTypeSpecEPNS_7impl_IDE # -- Begin function _ZN2kc10AcTypeSpecEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc10AcTypeSpecEPNS_7impl_IDE,@function
_ZN2kc10AcTypeSpecEPNS_7impl_IDE:       # @_ZN2kc10AcTypeSpecEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end985:
	.size	_ZN2kc10AcTypeSpecEPNS_7impl_IDE, .Lfunc_end985-_ZN2kc10AcTypeSpecEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7AcConstEv                # -- Begin function _ZN2kc7AcConstEv
	.p2align	5
	.type	_ZN2kc7AcConstEv,@function
_ZN2kc7AcConstEv:                       # @_ZN2kc7AcConstEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc30impl_ac_type_qualifier_AcConstE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc30impl_ac_type_qualifier_AcConstE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end986:
	.size	_ZN2kc7AcConstEv, .Lfunc_end986-_ZN2kc7AcConstEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10AcVolatileEv            # -- Begin function _ZN2kc10AcVolatileEv
	.p2align	5
	.type	_ZN2kc10AcVolatileEv,@function
_ZN2kc10AcVolatileEv:                   # @_ZN2kc10AcVolatileEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_ac_type_qualifier_AcVolatileE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_ac_type_qualifier_AcVolatileE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end987:
	.size	_ZN2kc10AcVolatileEv, .Lfunc_end987-_ZN2kc10AcVolatileEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10AcUnsignedEv            # -- Begin function _ZN2kc10AcUnsignedEv
	.p2align	5
	.type	_ZN2kc10AcUnsignedEv,@function
_ZN2kc10AcUnsignedEv:                   # @_ZN2kc10AcUnsignedEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_ac_type_qualifier_AcUnsignedE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_ac_type_qualifier_AcUnsignedE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end988:
	.size	_ZN2kc10AcUnsignedEv, .Lfunc_end988-_ZN2kc10AcUnsignedEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13AcNoQualifierEv         # -- Begin function _ZN2kc13AcNoQualifierEv
	.p2align	5
	.type	_ZN2kc13AcNoQualifierEv,@function
_ZN2kc13AcNoQualifierEv:                # @_ZN2kc13AcNoQualifierEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc36impl_ac_type_qualifier_AcNoQualifierE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc36impl_ac_type_qualifier_AcNoQualifierE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end989:
	.size	_ZN2kc13AcNoQualifierEv, .Lfunc_end989-_ZN2kc13AcNoQualifierEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26Nilac_init_declarator_listEv # -- Begin function _ZN2kc26Nilac_init_declarator_listEv
	.p2align	5
	.type	_ZN2kc26Nilac_init_declarator_listEv,@function
_ZN2kc26Nilac_init_declarator_listEv:   # @_ZN2kc26Nilac_init_declarator_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end990:
	.size	_ZN2kc26Nilac_init_declarator_listEv, .Lfunc_end990-_ZN2kc26Nilac_init_declarator_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27Consac_init_declarator_listEPNS_23impl_ac_init_declaratorEPNS_28impl_ac_init_declarator_listE # -- Begin function _ZN2kc27Consac_init_declarator_listEPNS_23impl_ac_init_declaratorEPNS_28impl_ac_init_declarator_listE
	.p2align	5
	.type	_ZN2kc27Consac_init_declarator_listEPNS_23impl_ac_init_declaratorEPNS_28impl_ac_init_declarator_listE,@function
_ZN2kc27Consac_init_declarator_listEPNS_23impl_ac_init_declaratorEPNS_28impl_ac_init_declarator_listE: # @_ZN2kc27Consac_init_declarator_listEPNS_23impl_ac_init_declaratorEPNS_28impl_ac_init_declarator_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end991:
	.size	_ZN2kc27Consac_init_declarator_listEPNS_23impl_ac_init_declaratorEPNS_28impl_ac_init_declarator_listE, .Lfunc_end991-_ZN2kc27Consac_init_declarator_listEPNS_23impl_ac_init_declaratorEPNS_28impl_ac_init_declarator_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10AcInitDeclEPNS_18impl_ac_declaratorE # -- Begin function _ZN2kc10AcInitDeclEPNS_18impl_ac_declaratorE
	.p2align	5
	.type	_ZN2kc10AcInitDeclEPNS_18impl_ac_declaratorE,@function
_ZN2kc10AcInitDeclEPNS_18impl_ac_declaratorE: # @_ZN2kc10AcInitDeclEPNS_18impl_ac_declaratorE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end992:
	.size	_ZN2kc10AcInitDeclEPNS_18impl_ac_declaratorE, .Lfunc_end992-_ZN2kc10AcInitDeclEPNS_18impl_ac_declaratorE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12AcDeclaratorEPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE # -- Begin function _ZN2kc12AcDeclaratorEPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE
	.p2align	5
	.type	_ZN2kc12AcDeclaratorEPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE,@function
_ZN2kc12AcDeclaratorEPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE: # @_ZN2kc12AcDeclaratorEPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc31impl_ac_declarator_AcDeclaratorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc31impl_ac_declarator_AcDeclaratorE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end993:
	.size	_ZN2kc12AcDeclaratorEPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE, .Lfunc_end993-_ZN2kc12AcDeclaratorEPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14AcDirectDeclIdEPNS_7impl_IDE # -- Begin function _ZN2kc14AcDirectDeclIdEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc14AcDirectDeclIdEPNS_7impl_IDE,@function
_ZN2kc14AcDirectDeclIdEPNS_7impl_IDE:   # @_ZN2kc14AcDirectDeclIdEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end994:
	.size	_ZN2kc14AcDirectDeclIdEPNS_7impl_IDE, .Lfunc_end994-_ZN2kc14AcDirectDeclIdEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16AcDirectDeclPackEPNS_18impl_ac_declaratorE # -- Begin function _ZN2kc16AcDirectDeclPackEPNS_18impl_ac_declaratorE
	.p2align	5
	.type	_ZN2kc16AcDirectDeclPackEPNS_18impl_ac_declaratorE,@function
_ZN2kc16AcDirectDeclPackEPNS_18impl_ac_declaratorE: # @_ZN2kc16AcDirectDeclPackEPNS_18impl_ac_declaratorE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end995:
	.size	_ZN2kc16AcDirectDeclPackEPNS_18impl_ac_declaratorE, .Lfunc_end995-_ZN2kc16AcDirectDeclPackEPNS_18impl_ac_declaratorE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17AcDirectDeclArrayEPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE # -- Begin function _ZN2kc17AcDirectDeclArrayEPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE
	.p2align	5
	.type	_ZN2kc17AcDirectDeclArrayEPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc17AcDirectDeclArrayEPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE: # @_ZN2kc17AcDirectDeclArrayEPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end996:
	.size	_ZN2kc17AcDirectDeclArrayEPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE, .Lfunc_end996-_ZN2kc17AcDirectDeclArrayEPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17AcDirectDeclProtoEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE # -- Begin function _ZN2kc17AcDirectDeclProtoEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE
	.p2align	5
	.type	_ZN2kc17AcDirectDeclProtoEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE,@function
_ZN2kc17AcDirectDeclProtoEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE: # @_ZN2kc17AcDirectDeclProtoEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end997:
	.size	_ZN2kc17AcDirectDeclProtoEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE, .Lfunc_end997-_ZN2kc17AcDirectDeclProtoEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20AcQualifiedDeclProtoEPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE # -- Begin function _ZN2kc20AcQualifiedDeclProtoEPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE
	.p2align	5
	.type	_ZN2kc20AcQualifiedDeclProtoEPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE,@function
_ZN2kc20AcQualifiedDeclProtoEPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE: # @_ZN2kc20AcQualifiedDeclProtoEPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE+16)
	st.d	$a1, $a0, 0
	st.d	$s2, $a0, 8
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end998:
	.size	_ZN2kc20AcQualifiedDeclProtoEPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE, .Lfunc_end998-_ZN2kc20AcQualifiedDeclProtoEPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12AcMemberDeclEPNS_7impl_IDES1_PNS_32impl_ac_constant_expression_listE # -- Begin function _ZN2kc12AcMemberDeclEPNS_7impl_IDES1_PNS_32impl_ac_constant_expression_listE
	.p2align	5
	.type	_ZN2kc12AcMemberDeclEPNS_7impl_IDES1_PNS_32impl_ac_constant_expression_listE,@function
_ZN2kc12AcMemberDeclEPNS_7impl_IDES1_PNS_32impl_ac_constant_expression_listE: # @_ZN2kc12AcMemberDeclEPNS_7impl_IDES1_PNS_32impl_ac_constant_expression_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end999:
	.size	_ZN2kc12AcMemberDeclEPNS_7impl_IDES1_PNS_32impl_ac_constant_expression_listE, .Lfunc_end999-_ZN2kc12AcMemberDeclEPNS_7impl_IDES1_PNS_32impl_ac_constant_expression_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18AcConvOperatorDeclEPNS_7impl_IDES1_ # -- Begin function _ZN2kc18AcConvOperatorDeclEPNS_7impl_IDES1_
	.p2align	5
	.type	_ZN2kc18AcConvOperatorDeclEPNS_7impl_IDES1_,@function
_ZN2kc18AcConvOperatorDeclEPNS_7impl_IDES1_: # @_ZN2kc18AcConvOperatorDeclEPNS_7impl_IDES1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1000:
	.size	_ZN2kc18AcConvOperatorDeclEPNS_7impl_IDES1_, .Lfunc_end1000-_ZN2kc18AcConvOperatorDeclEPNS_7impl_IDES1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16AcOperatorDeclIdEPNS_21impl_ac_operator_nameE # -- Begin function _ZN2kc16AcOperatorDeclIdEPNS_21impl_ac_operator_nameE
	.p2align	5
	.type	_ZN2kc16AcOperatorDeclIdEPNS_21impl_ac_operator_nameE,@function
_ZN2kc16AcOperatorDeclIdEPNS_21impl_ac_operator_nameE: # @_ZN2kc16AcOperatorDeclIdEPNS_21impl_ac_operator_nameE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1001:
	.size	_ZN2kc16AcOperatorDeclIdEPNS_21impl_ac_operator_nameE, .Lfunc_end1001-_ZN2kc16AcOperatorDeclIdEPNS_21impl_ac_operator_nameE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9NopointerEv              # -- Begin function _ZN2kc9NopointerEv
	.p2align	5
	.type	_ZN2kc9NopointerEv,@function
_ZN2kc9NopointerEv:                     # @_ZN2kc9NopointerEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc32impl_ac_pointer_option_NopointerE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc32impl_ac_pointer_option_NopointerE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1002:
	.size	_ZN2kc9NopointerEv, .Lfunc_end1002-_ZN2kc9NopointerEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10YespointerEPNS_15impl_ac_pointerE # -- Begin function _ZN2kc10YespointerEPNS_15impl_ac_pointerE
	.p2align	5
	.type	_ZN2kc10YespointerEPNS_15impl_ac_pointerE,@function
_ZN2kc10YespointerEPNS_15impl_ac_pointerE: # @_ZN2kc10YespointerEPNS_15impl_ac_pointerE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_pointer_option_YespointerE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_pointer_option_YespointerE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1003:
	.size	_ZN2kc10YespointerEPNS_15impl_ac_pointerE, .Lfunc_end1003-_ZN2kc10YespointerEPNS_15impl_ac_pointerE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12AcPointerNilEPNS_27impl_ac_type_qualifier_listE # -- Begin function _ZN2kc12AcPointerNilEPNS_27impl_ac_type_qualifier_listE
	.p2align	5
	.type	_ZN2kc12AcPointerNilEPNS_27impl_ac_type_qualifier_listE,@function
_ZN2kc12AcPointerNilEPNS_27impl_ac_type_qualifier_listE: # @_ZN2kc12AcPointerNilEPNS_27impl_ac_type_qualifier_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_pointer_AcPointerNilE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_pointer_AcPointerNilE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1004:
	.size	_ZN2kc12AcPointerNilEPNS_27impl_ac_type_qualifier_listE, .Lfunc_end1004-_ZN2kc12AcPointerNilEPNS_27impl_ac_type_qualifier_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13AcPointerConsEPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE # -- Begin function _ZN2kc13AcPointerConsEPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE
	.p2align	5
	.type	_ZN2kc13AcPointerConsEPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE,@function
_ZN2kc13AcPointerConsEPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE: # @_ZN2kc13AcPointerConsEPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_ac_pointer_AcPointerConsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_ac_pointer_AcPointerConsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1005:
	.size	_ZN2kc13AcPointerConsEPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE, .Lfunc_end1005-_ZN2kc13AcPointerConsEPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7AcNoRefEv                # -- Begin function _ZN2kc7AcNoRefEv
	.p2align	5
	.type	_ZN2kc7AcNoRefEv,@function
_ZN2kc7AcNoRefEv:                       # @_ZN2kc7AcNoRefEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc26impl_ac_ref_option_AcNoRefE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc26impl_ac_ref_option_AcNoRefE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1006:
	.size	_ZN2kc7AcNoRefEv, .Lfunc_end1006-_ZN2kc7AcNoRefEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc5AcRefEv                  # -- Begin function _ZN2kc5AcRefEv
	.p2align	5
	.type	_ZN2kc5AcRefEv,@function
_ZN2kc5AcRefEv:                         # @_ZN2kc5AcRefEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc24impl_ac_ref_option_AcRefE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc24impl_ac_ref_option_AcRefE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1007:
	.size	_ZN2kc5AcRefEv, .Lfunc_end1007-_ZN2kc5AcRefEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14AcOperatorNameEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc14AcOperatorNameEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc14AcOperatorNameEPNS_20impl_casestring__StrE,@function
_ZN2kc14AcOperatorNameEPNS_20impl_casestring__StrE: # @_ZN2kc14AcOperatorNameEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc36impl_ac_operator_name_AcOperatorNameE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc36impl_ac_operator_name_AcOperatorNameE+16)
	st.d	$a0, $s0, 0
	st.d	$fp, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 16
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1008:
	.size	_ZN2kc14AcOperatorNameEPNS_20impl_casestring__StrE, .Lfunc_end1008-_ZN2kc14AcOperatorNameEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc31Nilac_class_qualifier_help_listEv # -- Begin function _ZN2kc31Nilac_class_qualifier_help_listEv
	.p2align	5
	.type	_ZN2kc31Nilac_class_qualifier_help_listEv,@function
_ZN2kc31Nilac_class_qualifier_help_listEv: # @_ZN2kc31Nilac_class_qualifier_help_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1009:
	.size	_ZN2kc31Nilac_class_qualifier_help_listEv, .Lfunc_end1009-_ZN2kc31Nilac_class_qualifier_help_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32Consac_class_qualifier_help_listEPNS_25impl_ac_direct_declaratorEPNS_33impl_ac_class_qualifier_help_listE # -- Begin function _ZN2kc32Consac_class_qualifier_help_listEPNS_25impl_ac_direct_declaratorEPNS_33impl_ac_class_qualifier_help_listE
	.p2align	5
	.type	_ZN2kc32Consac_class_qualifier_help_listEPNS_25impl_ac_direct_declaratorEPNS_33impl_ac_class_qualifier_help_listE,@function
_ZN2kc32Consac_class_qualifier_help_listEPNS_25impl_ac_direct_declaratorEPNS_33impl_ac_class_qualifier_help_listE: # @_ZN2kc32Consac_class_qualifier_help_listEPNS_25impl_ac_direct_declaratorEPNS_33impl_ac_class_qualifier_help_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1010:
	.size	_ZN2kc32Consac_class_qualifier_help_listEPNS_25impl_ac_direct_declaratorEPNS_33impl_ac_class_qualifier_help_listE, .Lfunc_end1010-_ZN2kc32Consac_class_qualifier_help_listEPNS_25impl_ac_direct_declaratorEPNS_33impl_ac_class_qualifier_help_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26Nilac_class_qualifier_listEv # -- Begin function _ZN2kc26Nilac_class_qualifier_listEv
	.p2align	5
	.type	_ZN2kc26Nilac_class_qualifier_listEv,@function
_ZN2kc26Nilac_class_qualifier_listEv:   # @_ZN2kc26Nilac_class_qualifier_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1011:
	.size	_ZN2kc26Nilac_class_qualifier_listEv, .Lfunc_end1011-_ZN2kc26Nilac_class_qualifier_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27Consac_class_qualifier_listEPNS_7impl_IDEPNS_28impl_ac_class_qualifier_listE # -- Begin function _ZN2kc27Consac_class_qualifier_listEPNS_7impl_IDEPNS_28impl_ac_class_qualifier_listE
	.p2align	5
	.type	_ZN2kc27Consac_class_qualifier_listEPNS_7impl_IDEPNS_28impl_ac_class_qualifier_listE,@function
_ZN2kc27Consac_class_qualifier_listEPNS_7impl_IDEPNS_28impl_ac_class_qualifier_listE: # @_ZN2kc27Consac_class_qualifier_listEPNS_7impl_IDEPNS_28impl_ac_class_qualifier_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1012:
	.size	_ZN2kc27Consac_class_qualifier_listEPNS_7impl_IDEPNS_28impl_ac_class_qualifier_listE, .Lfunc_end1012-_ZN2kc27Consac_class_qualifier_listEPNS_7impl_IDEPNS_28impl_ac_class_qualifier_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25Nilac_type_qualifier_listEv # -- Begin function _ZN2kc25Nilac_type_qualifier_listEv
	.p2align	5
	.type	_ZN2kc25Nilac_type_qualifier_listEv,@function
_ZN2kc25Nilac_type_qualifier_listEv:    # @_ZN2kc25Nilac_type_qualifier_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1013:
	.size	_ZN2kc25Nilac_type_qualifier_listEv, .Lfunc_end1013-_ZN2kc25Nilac_type_qualifier_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26Consac_type_qualifier_listEPNS_22impl_ac_type_qualifierEPNS_27impl_ac_type_qualifier_listE # -- Begin function _ZN2kc26Consac_type_qualifier_listEPNS_22impl_ac_type_qualifierEPNS_27impl_ac_type_qualifier_listE
	.p2align	5
	.type	_ZN2kc26Consac_type_qualifier_listEPNS_22impl_ac_type_qualifierEPNS_27impl_ac_type_qualifier_listE,@function
_ZN2kc26Consac_type_qualifier_listEPNS_22impl_ac_type_qualifierEPNS_27impl_ac_type_qualifier_listE: # @_ZN2kc26Consac_type_qualifier_listEPNS_22impl_ac_type_qualifierEPNS_27impl_ac_type_qualifier_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1014:
	.size	_ZN2kc26Consac_type_qualifier_listEPNS_22impl_ac_type_qualifierEPNS_27impl_ac_type_qualifier_listE, .Lfunc_end1014-_ZN2kc26Consac_type_qualifier_listEPNS_22impl_ac_type_qualifierEPNS_27impl_ac_type_qualifier_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9AcParListEPNS_22impl_ac_parameter_listE # -- Begin function _ZN2kc9AcParListEPNS_22impl_ac_parameter_listE
	.p2align	5
	.type	_ZN2kc9AcParListEPNS_22impl_ac_parameter_listE,@function
_ZN2kc9AcParListEPNS_22impl_ac_parameter_listE: # @_ZN2kc9AcParListEPNS_22impl_ac_parameter_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_ac_parameter_type_list_AcParListE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_ac_parameter_type_list_AcParListE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1015:
	.size	_ZN2kc9AcParListEPNS_22impl_ac_parameter_listE, .Lfunc_end1015-_ZN2kc9AcParListEPNS_22impl_ac_parameter_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13AcParList3DotEPNS_22impl_ac_parameter_listE # -- Begin function _ZN2kc13AcParList3DotEPNS_22impl_ac_parameter_listE
	.p2align	5
	.type	_ZN2kc13AcParList3DotEPNS_22impl_ac_parameter_listE,@function
_ZN2kc13AcParList3DotEPNS_22impl_ac_parameter_listE: # @_ZN2kc13AcParList3DotEPNS_22impl_ac_parameter_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1016:
	.size	_ZN2kc13AcParList3DotEPNS_22impl_ac_parameter_listE, .Lfunc_end1016-_ZN2kc13AcParList3DotEPNS_22impl_ac_parameter_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20Nilac_parameter_listEv  # -- Begin function _ZN2kc20Nilac_parameter_listEv
	.p2align	5
	.type	_ZN2kc20Nilac_parameter_listEv,@function
_ZN2kc20Nilac_parameter_listEv:         # @_ZN2kc20Nilac_parameter_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_ac_parameter_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_ac_parameter_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1017:
	.size	_ZN2kc20Nilac_parameter_listEv, .Lfunc_end1017-_ZN2kc20Nilac_parameter_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21Consac_parameter_listEPNS_29impl_ac_parameter_declarationEPNS_22impl_ac_parameter_listE # -- Begin function _ZN2kc21Consac_parameter_listEPNS_29impl_ac_parameter_declarationEPNS_22impl_ac_parameter_listE
	.p2align	5
	.type	_ZN2kc21Consac_parameter_listEPNS_29impl_ac_parameter_declarationEPNS_22impl_ac_parameter_listE,@function
_ZN2kc21Consac_parameter_listEPNS_29impl_ac_parameter_declarationEPNS_22impl_ac_parameter_listE: # @_ZN2kc21Consac_parameter_listEPNS_29impl_ac_parameter_declarationEPNS_22impl_ac_parameter_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_ac_parameter_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_ac_parameter_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1018:
	.size	_ZN2kc21Consac_parameter_listEPNS_29impl_ac_parameter_declarationEPNS_22impl_ac_parameter_listE, .Lfunc_end1018-_ZN2kc21Consac_parameter_listEPNS_29impl_ac_parameter_declarationEPNS_22impl_ac_parameter_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13AcParDeclDeclEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE # -- Begin function _ZN2kc13AcParDeclDeclEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE
	.p2align	5
	.type	_ZN2kc13AcParDeclDeclEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc13AcParDeclDeclEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE: # @_ZN2kc13AcParDeclDeclEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1019:
	.size	_ZN2kc13AcParDeclDeclEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE, .Lfunc_end1019-_ZN2kc13AcParDeclDeclEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16AcParDeclAbsdeclEPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE # -- Begin function _ZN2kc16AcParDeclAbsdeclEPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE
	.p2align	5
	.type	_ZN2kc16AcParDeclAbsdeclEPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc16AcParDeclAbsdeclEPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE: # @_ZN2kc16AcParDeclAbsdeclEPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1020:
	.size	_ZN2kc16AcParDeclAbsdeclEPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE, .Lfunc_end1020-_ZN2kc16AcParDeclAbsdeclEPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21Nilac_identifier_listEv # -- Begin function _ZN2kc21Nilac_identifier_listEv
	.p2align	5
	.type	_ZN2kc21Nilac_identifier_listEv,@function
_ZN2kc21Nilac_identifier_listEv:        # @_ZN2kc21Nilac_identifier_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_ac_identifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_ac_identifier_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1021:
	.size	_ZN2kc21Nilac_identifier_listEv, .Lfunc_end1021-_ZN2kc21Nilac_identifier_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22Consac_identifier_listEPNS_7impl_IDEPNS_23impl_ac_identifier_listE # -- Begin function _ZN2kc22Consac_identifier_listEPNS_7impl_IDEPNS_23impl_ac_identifier_listE
	.p2align	5
	.type	_ZN2kc22Consac_identifier_listEPNS_7impl_IDEPNS_23impl_ac_identifier_listE,@function
_ZN2kc22Consac_identifier_listEPNS_7impl_IDEPNS_23impl_ac_identifier_listE: # @_ZN2kc22Consac_identifier_listEPNS_7impl_IDEPNS_23impl_ac_identifier_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_ac_identifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_ac_identifier_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1022:
	.size	_ZN2kc22Consac_identifier_listEPNS_7impl_IDEPNS_23impl_ac_identifier_listE, .Lfunc_end1022-_ZN2kc22Consac_identifier_listEPNS_7impl_IDEPNS_23impl_ac_identifier_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16AcAbsdeclPointerEPNS_15impl_ac_pointerE # -- Begin function _ZN2kc16AcAbsdeclPointerEPNS_15impl_ac_pointerE
	.p2align	5
	.type	_ZN2kc16AcAbsdeclPointerEPNS_15impl_ac_pointerE,@function
_ZN2kc16AcAbsdeclPointerEPNS_15impl_ac_pointerE: # @_ZN2kc16AcAbsdeclPointerEPNS_15impl_ac_pointerE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1023:
	.size	_ZN2kc16AcAbsdeclPointerEPNS_15impl_ac_pointerE, .Lfunc_end1023-_ZN2kc16AcAbsdeclPointerEPNS_15impl_ac_pointerE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16AcAbsdeclDirdeclEPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE # -- Begin function _ZN2kc16AcAbsdeclDirdeclEPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE
	.p2align	5
	.type	_ZN2kc16AcAbsdeclDirdeclEPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE,@function
_ZN2kc16AcAbsdeclDirdeclEPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE: # @_ZN2kc16AcAbsdeclDirdeclEPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1024:
	.size	_ZN2kc16AcAbsdeclDirdeclEPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE, .Lfunc_end1024-_ZN2kc16AcAbsdeclDirdeclEPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc31Noac_direct_abstract_declaratorEv # -- Begin function _ZN2kc31Noac_direct_abstract_declaratorEv
	.p2align	5
	.type	_ZN2kc31Noac_direct_abstract_declaratorEv,@function
_ZN2kc31Noac_direct_abstract_declaratorEv: # @_ZN2kc31Noac_direct_abstract_declaratorEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1025:
	.size	_ZN2kc31Noac_direct_abstract_declaratorEv, .Lfunc_end1025-_ZN2kc31Noac_direct_abstract_declaratorEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32Yesac_direct_abstract_declaratorEPNS_34impl_ac_direct_abstract_declaratorE # -- Begin function _ZN2kc32Yesac_direct_abstract_declaratorEPNS_34impl_ac_direct_abstract_declaratorE
	.p2align	5
	.type	_ZN2kc32Yesac_direct_abstract_declaratorEPNS_34impl_ac_direct_abstract_declaratorE,@function
_ZN2kc32Yesac_direct_abstract_declaratorEPNS_34impl_ac_direct_abstract_declaratorE: # @_ZN2kc32Yesac_direct_abstract_declaratorEPNS_34impl_ac_direct_abstract_declaratorE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1026:
	.size	_ZN2kc32Yesac_direct_abstract_declaratorEPNS_34impl_ac_direct_abstract_declaratorE, .Lfunc_end1026-_ZN2kc32Yesac_direct_abstract_declaratorEPNS_34impl_ac_direct_abstract_declaratorE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16AcDirAbsdeclPackEPNS_27impl_ac_abstract_declaratorE # -- Begin function _ZN2kc16AcDirAbsdeclPackEPNS_27impl_ac_abstract_declaratorE
	.p2align	5
	.type	_ZN2kc16AcDirAbsdeclPackEPNS_27impl_ac_abstract_declaratorE,@function
_ZN2kc16AcDirAbsdeclPackEPNS_27impl_ac_abstract_declaratorE: # @_ZN2kc16AcDirAbsdeclPackEPNS_27impl_ac_abstract_declaratorE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1027:
	.size	_ZN2kc16AcDirAbsdeclPackEPNS_27impl_ac_abstract_declaratorE, .Lfunc_end1027-_ZN2kc16AcDirAbsdeclPackEPNS_27impl_ac_abstract_declaratorE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17AcDirAbsdeclArrayEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE # -- Begin function _ZN2kc17AcDirAbsdeclArrayEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE
	.p2align	5
	.type	_ZN2kc17AcDirAbsdeclArrayEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc17AcDirAbsdeclArrayEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE: # @_ZN2kc17AcDirAbsdeclArrayEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1028:
	.size	_ZN2kc17AcDirAbsdeclArrayEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE, .Lfunc_end1028-_ZN2kc17AcDirAbsdeclArrayEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14AcDirAbsdeclFnEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE # -- Begin function _ZN2kc14AcDirAbsdeclFnEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE
	.p2align	5
	.type	_ZN2kc14AcDirAbsdeclFnEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE,@function
_ZN2kc14AcDirAbsdeclFnEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE: # @_ZN2kc14AcDirAbsdeclFnEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1029:
	.size	_ZN2kc14AcDirAbsdeclFnEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE, .Lfunc_end1029-_ZN2kc14AcDirAbsdeclFnEPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25Yesac_constant_expressionEPNS_27impl_ac_constant_expressionE # -- Begin function _ZN2kc25Yesac_constant_expressionEPNS_27impl_ac_constant_expressionE
	.p2align	5
	.type	_ZN2kc25Yesac_constant_expressionEPNS_27impl_ac_constant_expressionE,@function
_ZN2kc25Yesac_constant_expressionEPNS_27impl_ac_constant_expressionE: # @_ZN2kc25Yesac_constant_expressionEPNS_27impl_ac_constant_expressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1030:
	.size	_ZN2kc25Yesac_constant_expressionEPNS_27impl_ac_constant_expressionE, .Lfunc_end1030-_ZN2kc25Yesac_constant_expressionEPNS_27impl_ac_constant_expressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24Noac_constant_expressionEv # -- Begin function _ZN2kc24Noac_constant_expressionEv
	.p2align	5
	.type	_ZN2kc24Noac_constant_expressionEv,@function
_ZN2kc24Noac_constant_expressionEv:     # @_ZN2kc24Noac_constant_expressionEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc59impl_ac_constant_expression_option_Noac_constant_expressionE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc59impl_ac_constant_expression_option_Noac_constant_expressionE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1031:
	.size	_ZN2kc24Noac_constant_expressionEv, .Lfunc_end1031-_ZN2kc24Noac_constant_expressionEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11AcConstExprEPNS_16impl_CexpressionE # -- Begin function _ZN2kc11AcConstExprEPNS_16impl_CexpressionE
	.p2align	5
	.type	_ZN2kc11AcConstExprEPNS_16impl_CexpressionE,@function
_ZN2kc11AcConstExprEPNS_16impl_CexpressionE: # @_ZN2kc11AcConstExprEPNS_16impl_CexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc39impl_ac_constant_expression_AcConstExprE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc39impl_ac_constant_expression_AcConstExprE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1032:
	.size	_ZN2kc11AcConstExprEPNS_16impl_CexpressionE, .Lfunc_end1032-_ZN2kc11AcConstExprEPNS_16impl_CexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30Nilac_constant_expression_listEv # -- Begin function _ZN2kc30Nilac_constant_expression_listEv
	.p2align	5
	.type	_ZN2kc30Nilac_constant_expression_listEv,@function
_ZN2kc30Nilac_constant_expression_listEv: # @_ZN2kc30Nilac_constant_expression_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1033:
	.size	_ZN2kc30Nilac_constant_expression_listEv, .Lfunc_end1033-_ZN2kc30Nilac_constant_expression_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc31Consac_constant_expression_listEPNS_27impl_ac_constant_expressionEPNS_32impl_ac_constant_expression_listE # -- Begin function _ZN2kc31Consac_constant_expression_listEPNS_27impl_ac_constant_expressionEPNS_32impl_ac_constant_expression_listE
	.p2align	5
	.type	_ZN2kc31Consac_constant_expression_listEPNS_27impl_ac_constant_expressionEPNS_32impl_ac_constant_expression_listE,@function
_ZN2kc31Consac_constant_expression_listEPNS_27impl_ac_constant_expressionEPNS_32impl_ac_constant_expression_listE: # @_ZN2kc31Consac_constant_expression_listEPNS_27impl_ac_constant_expressionEPNS_32impl_ac_constant_expression_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1034:
	.size	_ZN2kc31Consac_constant_expression_listEPNS_27impl_ac_constant_expressionEPNS_32impl_ac_constant_expression_listE, .Lfunc_end1034-_ZN2kc31Consac_constant_expression_listEPNS_27impl_ac_constant_expressionEPNS_32impl_ac_constant_expression_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12AcNoBaseInitEv          # -- Begin function _ZN2kc12AcNoBaseInitEv
	.p2align	5
	.type	_ZN2kc12AcNoBaseInitEv,@function
_ZN2kc12AcNoBaseInitEv:                 # @_ZN2kc12AcNoBaseInitEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc39impl_ac_opt_base_init_list_AcNoBaseInitE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc39impl_ac_opt_base_init_list_AcNoBaseInitE)
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1035:
	.size	_ZN2kc12AcNoBaseInitEv, .Lfunc_end1035-_ZN2kc12AcNoBaseInitEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13AcYesBaseInitEPNS_22impl_ac_base_init_listE # -- Begin function _ZN2kc13AcYesBaseInitEPNS_22impl_ac_base_init_listE
	.p2align	5
	.type	_ZN2kc13AcYesBaseInitEPNS_22impl_ac_base_init_listE,@function
_ZN2kc13AcYesBaseInitEPNS_22impl_ac_base_init_listE: # @_ZN2kc13AcYesBaseInitEPNS_22impl_ac_base_init_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1036:
	.size	_ZN2kc13AcYesBaseInitEPNS_22impl_ac_base_init_listE, .Lfunc_end1036-_ZN2kc13AcYesBaseInitEPNS_22impl_ac_base_init_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20Nilac_base_init_listEv  # -- Begin function _ZN2kc20Nilac_base_init_listEv
	.p2align	5
	.type	_ZN2kc20Nilac_base_init_listEv,@function
_ZN2kc20Nilac_base_init_listEv:         # @_ZN2kc20Nilac_base_init_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_ac_base_init_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_ac_base_init_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1037:
	.size	_ZN2kc20Nilac_base_init_listEv, .Lfunc_end1037-_ZN2kc20Nilac_base_init_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21Consac_base_init_listEPNS_17impl_ac_base_initEPNS_22impl_ac_base_init_listE # -- Begin function _ZN2kc21Consac_base_init_listEPNS_17impl_ac_base_initEPNS_22impl_ac_base_init_listE
	.p2align	5
	.type	_ZN2kc21Consac_base_init_listEPNS_17impl_ac_base_initEPNS_22impl_ac_base_init_listE,@function
_ZN2kc21Consac_base_init_listEPNS_17impl_ac_base_initEPNS_22impl_ac_base_init_listE: # @_ZN2kc21Consac_base_init_listEPNS_17impl_ac_base_initEPNS_22impl_ac_base_init_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_ac_base_init_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_ac_base_init_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1038:
	.size	_ZN2kc21Consac_base_init_listEPNS_17impl_ac_base_initEPNS_22impl_ac_base_init_listE, .Lfunc_end1038-_ZN2kc21Consac_base_init_listEPNS_17impl_ac_base_initEPNS_22impl_ac_base_init_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10AcBaseInitEPNS_7impl_IDEPNS_27impl_ac_constant_expressionE # -- Begin function _ZN2kc10AcBaseInitEPNS_7impl_IDEPNS_27impl_ac_constant_expressionE
	.p2align	5
	.type	_ZN2kc10AcBaseInitEPNS_7impl_IDEPNS_27impl_ac_constant_expressionE,@function
_ZN2kc10AcBaseInitEPNS_7impl_IDEPNS_27impl_ac_constant_expressionE: # @_ZN2kc10AcBaseInitEPNS_7impl_IDEPNS_27impl_ac_constant_expressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_base_init_AcBaseInitE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_base_init_AcBaseInitE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1039:
	.size	_ZN2kc10AcBaseInitEPNS_7impl_IDEPNS_27impl_ac_constant_expressionE, .Lfunc_end1039-_ZN2kc10AcBaseInitEPNS_7impl_IDEPNS_27impl_ac_constant_expressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25Nilbaseclass_declarationsEv # -- Begin function _ZN2kc25Nilbaseclass_declarationsEv
	.p2align	5
	.type	_ZN2kc25Nilbaseclass_declarationsEv,@function
_ZN2kc25Nilbaseclass_declarationsEv:    # @_ZN2kc25Nilbaseclass_declarationsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_baseclass_declarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_baseclass_declarationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1040:
	.size	_ZN2kc25Nilbaseclass_declarationsEv, .Lfunc_end1040-_ZN2kc25Nilbaseclass_declarationsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26Consbaseclass_declarationsEPNS_19impl_baseclass_declEPNS_27impl_baseclass_declarationsE # -- Begin function _ZN2kc26Consbaseclass_declarationsEPNS_19impl_baseclass_declEPNS_27impl_baseclass_declarationsE
	.p2align	5
	.type	_ZN2kc26Consbaseclass_declarationsEPNS_19impl_baseclass_declEPNS_27impl_baseclass_declarationsE,@function
_ZN2kc26Consbaseclass_declarationsEPNS_19impl_baseclass_declEPNS_27impl_baseclass_declarationsE: # @_ZN2kc26Consbaseclass_declarationsEPNS_19impl_baseclass_declEPNS_27impl_baseclass_declarationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_baseclass_declarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_baseclass_declarationsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1041:
	.size	_ZN2kc26Consbaseclass_declarationsEPNS_19impl_baseclass_declEPNS_27impl_baseclass_declarationsE, .Lfunc_end1041-_ZN2kc26Consbaseclass_declarationsEPNS_19impl_baseclass_declEPNS_27impl_baseclass_declarationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13BaseClassDeclEPNS_7impl_IDEPNS_19impl_baseclass_listE # -- Begin function _ZN2kc13BaseClassDeclEPNS_7impl_IDEPNS_19impl_baseclass_listE
	.p2align	5
	.type	_ZN2kc13BaseClassDeclEPNS_7impl_IDEPNS_19impl_baseclass_listE,@function
_ZN2kc13BaseClassDeclEPNS_7impl_IDEPNS_19impl_baseclass_listE: # @_ZN2kc13BaseClassDeclEPNS_7impl_IDEPNS_19impl_baseclass_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1042:
	.size	_ZN2kc13BaseClassDeclEPNS_7impl_IDEPNS_19impl_baseclass_listE, .Lfunc_end1042-_ZN2kc13BaseClassDeclEPNS_7impl_IDEPNS_19impl_baseclass_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17Nilbaseclass_listEv     # -- Begin function _ZN2kc17Nilbaseclass_listEv
	.p2align	5
	.type	_ZN2kc17Nilbaseclass_listEv,@function
_ZN2kc17Nilbaseclass_listEv:            # @_ZN2kc17Nilbaseclass_listEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_baseclass_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_baseclass_listE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1043:
	.size	_ZN2kc17Nilbaseclass_listEv, .Lfunc_end1043-_ZN2kc17Nilbaseclass_listEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18Consbaseclass_listEPNS_7impl_IDEPNS_19impl_baseclass_listE # -- Begin function _ZN2kc18Consbaseclass_listEPNS_7impl_IDEPNS_19impl_baseclass_listE
	.p2align	5
	.type	_ZN2kc18Consbaseclass_listEPNS_7impl_IDEPNS_19impl_baseclass_listE,@function
_ZN2kc18Consbaseclass_listEPNS_7impl_IDEPNS_19impl_baseclass_listE: # @_ZN2kc18Consbaseclass_listEPNS_7impl_IDEPNS_19impl_baseclass_listE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_baseclass_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_baseclass_listE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1044:
	.size	_ZN2kc18Consbaseclass_listEPNS_7impl_IDEPNS_19impl_baseclass_listE, .Lfunc_end1044-_ZN2kc18Consbaseclass_listEPNS_7impl_IDEPNS_19impl_baseclass_listE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE # -- Begin function _ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE
	.p2align	5
	.type	_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE,@function
_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE: # @_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_error_FatalE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_error_FatalE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1045:
	.size	_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE, .Lfunc_end1045-_ZN2kc5FatalEPNS_13impl_filelineEPNS_12impl_problemE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE # -- Begin function _ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE
	.p2align	5
	.type	_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE,@function
_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE: # @_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_error_NonFatalE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_error_NonFatalE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1046:
	.size	_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE, .Lfunc_end1046-_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE # -- Begin function _ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE
	.p2align	5
	.type	_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE,@function
_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE: # @_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_error_WarningE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_error_WarningE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1047:
	.size	_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE, .Lfunc_end1047-_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8Problem1EPNS_20impl_casestring__StrE # -- Begin function _ZN2kc8Problem1EPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc8Problem1EPNS_20impl_casestring__StrE,@function
_ZN2kc8Problem1EPNS_20impl_casestring__StrE: # @_ZN2kc8Problem1EPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem1E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem1E+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1048:
	.size	_ZN2kc8Problem1EPNS_20impl_casestring__StrE, .Lfunc_end1048-_ZN2kc8Problem1EPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10Problem1IDEPNS_20impl_casestring__StrEPNS_7impl_IDE # -- Begin function _ZN2kc10Problem1IDEPNS_20impl_casestring__StrEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc10Problem1IDEPNS_20impl_casestring__StrEPNS_7impl_IDE,@function
_ZN2kc10Problem1IDEPNS_20impl_casestring__StrEPNS_7impl_IDE: # @_ZN2kc10Problem1IDEPNS_20impl_casestring__StrEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_problem_Problem1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_problem_Problem1IDE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1049:
	.size	_ZN2kc10Problem1IDEPNS_20impl_casestring__StrEPNS_7impl_IDE, .Lfunc_end1049-_ZN2kc10Problem1IDEPNS_20impl_casestring__StrEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11Problem1tIDEPNS_20impl_casestring__StrEPNS_7impl_IDE # -- Begin function _ZN2kc11Problem1tIDEPNS_20impl_casestring__StrEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc11Problem1tIDEPNS_20impl_casestring__StrEPNS_7impl_IDE,@function
_ZN2kc11Problem1tIDEPNS_20impl_casestring__StrEPNS_7impl_IDE: # @_ZN2kc11Problem1tIDEPNS_20impl_casestring__StrEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_problem_Problem1tIDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_problem_Problem1tIDE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1050:
	.size	_ZN2kc11Problem1tIDEPNS_20impl_casestring__StrEPNS_7impl_IDE, .Lfunc_end1050-_ZN2kc11Problem1tIDEPNS_20impl_casestring__StrEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10Problem1weEPNS_20impl_casestring__StrEPNS_19impl_withexpressionE # -- Begin function _ZN2kc10Problem1weEPNS_20impl_casestring__StrEPNS_19impl_withexpressionE
	.p2align	5
	.type	_ZN2kc10Problem1weEPNS_20impl_casestring__StrEPNS_19impl_withexpressionE,@function
_ZN2kc10Problem1weEPNS_20impl_casestring__StrEPNS_19impl_withexpressionE: # @_ZN2kc10Problem1weEPNS_20impl_casestring__StrEPNS_19impl_withexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_problem_Problem1weE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_problem_Problem1weE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1051:
	.size	_ZN2kc10Problem1weEPNS_20impl_casestring__StrEPNS_19impl_withexpressionE, .Lfunc_end1051-_ZN2kc10Problem1weEPNS_20impl_casestring__StrEPNS_19impl_withexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13Problem1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_ # -- Begin function _ZN2kc13Problem1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_
	.p2align	5
	.type	_ZN2kc13Problem1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_,@function
_ZN2kc13Problem1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_: # @_ZN2kc13Problem1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_problem_Problem1ID1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_problem_Problem1ID1IDE+16)
	st.d	$a1, $a0, 0
	st.d	$s2, $a0, 8
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1052:
	.size	_ZN2kc13Problem1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_, .Lfunc_end1052-_ZN2kc13Problem1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12Problem1t1IDEPNS_20impl_casestring__StrEPNS_11impl_IDtypeES1_PNS_7impl_IDE # -- Begin function _ZN2kc12Problem1t1IDEPNS_20impl_casestring__StrEPNS_11impl_IDtypeES1_PNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc12Problem1t1IDEPNS_20impl_casestring__StrEPNS_11impl_IDtypeES1_PNS_7impl_IDE,@function
_ZN2kc12Problem1t1IDEPNS_20impl_casestring__StrEPNS_11impl_IDtypeES1_PNS_7impl_IDE: # @_ZN2kc12Problem1t1IDEPNS_20impl_casestring__StrEPNS_11impl_IDtypeES1_PNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc25impl_problem_Problem1t1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc25impl_problem_Problem1t1IDE+16)
	st.d	$a1, $a0, 0
	st.d	$s2, $a0, 8
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1053:
	.size	_ZN2kc12Problem1t1IDEPNS_20impl_casestring__StrEPNS_11impl_IDtypeES1_PNS_7impl_IDE, .Lfunc_end1053-_ZN2kc12Problem1t1IDEPNS_20impl_casestring__StrEPNS_11impl_IDtypeES1_PNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11Problem1INTEPNS_20impl_casestring__StrEPNS_8impl_INTE # -- Begin function _ZN2kc11Problem1INTEPNS_20impl_casestring__StrEPNS_8impl_INTE
	.p2align	5
	.type	_ZN2kc11Problem1INTEPNS_20impl_casestring__StrEPNS_8impl_INTE,@function
_ZN2kc11Problem1INTEPNS_20impl_casestring__StrEPNS_8impl_INTE: # @_ZN2kc11Problem1INTEPNS_20impl_casestring__StrEPNS_8impl_INTE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_problem_Problem1INTE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_problem_Problem1INTE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1054:
	.size	_ZN2kc11Problem1INTEPNS_20impl_casestring__StrEPNS_8impl_INTE, .Lfunc_end1054-_ZN2kc11Problem1INTEPNS_20impl_casestring__StrEPNS_8impl_INTE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12Problem1int1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES1_ # -- Begin function _ZN2kc12Problem1int1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES1_
	.p2align	5
	.type	_ZN2kc12Problem1int1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES1_,@function
_ZN2kc12Problem1int1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES1_: # @_ZN2kc12Problem1int1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc25impl_problem_Problem1int1E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc25impl_problem_Problem1int1E+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1055:
	.size	_ZN2kc12Problem1int1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES1_, .Lfunc_end1055-_ZN2kc12Problem1int1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14Problem1INT1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDE # -- Begin function _ZN2kc14Problem1INT1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc14Problem1INT1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDE,@function
_ZN2kc14Problem1INT1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDE: # @_ZN2kc14Problem1INT1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_problem_Problem1INT1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_problem_Problem1INT1IDE+16)
	st.d	$a1, $a0, 0
	st.d	$s2, $a0, 8
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1056:
	.size	_ZN2kc14Problem1INT1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDE, .Lfunc_end1056-_ZN2kc14Problem1INT1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16Problem1ID1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_S1_S3_ # -- Begin function _ZN2kc16Problem1ID1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_S1_S3_
	.p2align	5
	.type	_ZN2kc16Problem1ID1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_S1_S3_,@function
_ZN2kc16Problem1ID1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_S1_S3_: # @_ZN2kc16Problem1ID1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_S1_S3_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a5
	move	$s0, $a4
	move	$s1, $a3
	move	$s2, $a2
	move	$s3, $a1
	move	$s4, $a0
	ori	$a0, $zero, 56
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_problem_Problem1ID1ID1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_problem_Problem1ID1ID1IDE+16)
	st.d	$a1, $a0, 0
	st.d	$s4, $a0, 8
	st.d	$s3, $a0, 16
	st.d	$s2, $a0, 24
	st.d	$s1, $a0, 32
	st.d	$s0, $a0, 40
	st.d	$fp, $a0, 48
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end1057:
	.size	_ZN2kc16Problem1ID1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_S1_S3_, .Lfunc_end1057-_ZN2kc16Problem1ID1ID1IDEPNS_20impl_casestring__StrEPNS_7impl_IDES1_S3_S1_S3_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17Problem1INT1ID1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDES1_S5_ # -- Begin function _ZN2kc17Problem1INT1ID1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDES1_S5_
	.p2align	5
	.type	_ZN2kc17Problem1INT1ID1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDES1_S5_,@function
_ZN2kc17Problem1INT1ID1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDES1_S5_: # @_ZN2kc17Problem1INT1ID1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDES1_S5_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a5
	move	$s0, $a4
	move	$s1, $a3
	move	$s2, $a2
	move	$s3, $a1
	move	$s4, $a0
	ori	$a0, $zero, 56
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_problem_Problem1INT1ID1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_problem_Problem1INT1ID1IDE+16)
	st.d	$a1, $a0, 0
	st.d	$s4, $a0, 8
	st.d	$s3, $a0, 16
	st.d	$s2, $a0, 24
	st.d	$s1, $a0, 32
	st.d	$s0, $a0, 40
	st.d	$fp, $a0, 48
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end1058:
	.size	_ZN2kc17Problem1INT1ID1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDES1_S5_, .Lfunc_end1058-_ZN2kc17Problem1INT1ID1IDEPNS_20impl_casestring__StrEPNS_8impl_INTES1_PNS_7impl_IDES1_S5_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24Problem1storageoption1IDEPNS_20impl_casestring__StrEPNS_18impl_storageoptionES1_PNS_7impl_IDE # -- Begin function _ZN2kc24Problem1storageoption1IDEPNS_20impl_casestring__StrEPNS_18impl_storageoptionES1_PNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc24Problem1storageoption1IDEPNS_20impl_casestring__StrEPNS_18impl_storageoptionES1_PNS_7impl_IDE,@function
_ZN2kc24Problem1storageoption1IDEPNS_20impl_casestring__StrEPNS_18impl_storageoptionES1_PNS_7impl_IDE: # @_ZN2kc24Problem1storageoption1IDEPNS_20impl_casestring__StrEPNS_18impl_storageoptionES1_PNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_problem_Problem1storageoption1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_problem_Problem1storageoption1IDE+16)
	st.d	$a1, $a0, 0
	st.d	$s2, $a0, 8
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1059:
	.size	_ZN2kc24Problem1storageoption1IDEPNS_20impl_casestring__StrEPNS_18impl_storageoptionES1_PNS_7impl_IDE, .Lfunc_end1059-_ZN2kc24Problem1storageoption1IDEPNS_20impl_casestring__StrEPNS_18impl_storageoptionES1_PNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8Problem2EPNS_20impl_casestring__StrES1_ # -- Begin function _ZN2kc8Problem2EPNS_20impl_casestring__StrES1_
	.p2align	5
	.type	_ZN2kc8Problem2EPNS_20impl_casestring__StrES1_,@function
_ZN2kc8Problem2EPNS_20impl_casestring__StrES1_: # @_ZN2kc8Problem2EPNS_20impl_casestring__StrES1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem2E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem2E+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1060:
	.size	_ZN2kc8Problem2EPNS_20impl_casestring__StrES1_, .Lfunc_end1060-_ZN2kc8Problem2EPNS_20impl_casestring__StrES1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8Problem3EPNS_20impl_casestring__StrES1_S1_ # -- Begin function _ZN2kc8Problem3EPNS_20impl_casestring__StrES1_S1_
	.p2align	5
	.type	_ZN2kc8Problem3EPNS_20impl_casestring__StrES1_S1_,@function
_ZN2kc8Problem3EPNS_20impl_casestring__StrES1_S1_: # @_ZN2kc8Problem3EPNS_20impl_casestring__StrES1_S1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem3E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem3E+16)
	st.d	$a1, $a0, 0
	st.d	$s1, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$fp, $a0, 24
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1061:
	.size	_ZN2kc8Problem3EPNS_20impl_casestring__StrES1_S1_, .Lfunc_end1061-_ZN2kc8Problem3EPNS_20impl_casestring__StrES1_S1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12Problem3int1EPNS_20impl_casestring__StrES1_S1_PNS_17impl_integer__IntES1_ # -- Begin function _ZN2kc12Problem3int1EPNS_20impl_casestring__StrES1_S1_PNS_17impl_integer__IntES1_
	.p2align	5
	.type	_ZN2kc12Problem3int1EPNS_20impl_casestring__StrES1_S1_PNS_17impl_integer__IntES1_,@function
_ZN2kc12Problem3int1EPNS_20impl_casestring__StrES1_S1_PNS_17impl_integer__IntES1_: # @_ZN2kc12Problem3int1EPNS_20impl_casestring__StrES1_S1_PNS_17impl_integer__IntES1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$s3, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc25impl_problem_Problem3int1E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc25impl_problem_Problem3int1E+16)
	st.d	$a1, $a0, 0
	st.d	$s3, $a0, 8
	st.d	$s2, $a0, 16
	st.d	$s1, $a0, 24
	st.d	$s0, $a0, 32
	st.d	$fp, $a0, 40
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1062:
	.size	_ZN2kc12Problem3int1EPNS_20impl_casestring__StrES1_S1_PNS_17impl_integer__IntES1_, .Lfunc_end1062-_ZN2kc12Problem3int1EPNS_20impl_casestring__StrES1_S1_PNS_17impl_integer__IntES1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8Problem4EPNS_20impl_casestring__StrES1_S1_S1_ # -- Begin function _ZN2kc8Problem4EPNS_20impl_casestring__StrES1_S1_S1_
	.p2align	5
	.type	_ZN2kc8Problem4EPNS_20impl_casestring__StrES1_S1_S1_,@function
_ZN2kc8Problem4EPNS_20impl_casestring__StrES1_S1_S1_: # @_ZN2kc8Problem4EPNS_20impl_casestring__StrES1_S1_S1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem4E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem4E+16)
	st.d	$a1, $a0, 0
	st.d	$s2, $a0, 8
	st.d	$s1, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$fp, $a0, 32
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1063:
	.size	_ZN2kc8Problem4EPNS_20impl_casestring__StrES1_S1_S1_, .Lfunc_end1063-_ZN2kc8Problem4EPNS_20impl_casestring__StrES1_S1_S1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8Problem5EPNS_20impl_casestring__StrES1_S1_S1_S1_ # -- Begin function _ZN2kc8Problem5EPNS_20impl_casestring__StrES1_S1_S1_S1_
	.p2align	5
	.type	_ZN2kc8Problem5EPNS_20impl_casestring__StrES1_S1_S1_S1_,@function
_ZN2kc8Problem5EPNS_20impl_casestring__StrES1_S1_S1_S1_: # @_ZN2kc8Problem5EPNS_20impl_casestring__StrES1_S1_S1_S1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$s2, $a1
	move	$s3, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem5E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem5E+16)
	st.d	$a1, $a0, 0
	st.d	$s3, $a0, 8
	st.d	$s2, $a0, 16
	st.d	$s1, $a0, 24
	st.d	$s0, $a0, 32
	st.d	$fp, $a0, 40
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1064:
	.size	_ZN2kc8Problem5EPNS_20impl_casestring__StrES1_S1_S1_S1_, .Lfunc_end1064-_ZN2kc8Problem5EPNS_20impl_casestring__StrES1_S1_S1_S1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8Problem6EPNS_20impl_casestring__StrES1_S1_S1_S1_S1_ # -- Begin function _ZN2kc8Problem6EPNS_20impl_casestring__StrES1_S1_S1_S1_S1_
	.p2align	5
	.type	_ZN2kc8Problem6EPNS_20impl_casestring__StrES1_S1_S1_S1_S1_,@function
_ZN2kc8Problem6EPNS_20impl_casestring__StrES1_S1_S1_S1_S1_: # @_ZN2kc8Problem6EPNS_20impl_casestring__StrES1_S1_S1_S1_S1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a5
	move	$s0, $a4
	move	$s1, $a3
	move	$s2, $a2
	move	$s3, $a1
	move	$s4, $a0
	ori	$a0, $zero, 56
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem6E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem6E+16)
	st.d	$a1, $a0, 0
	st.d	$s4, $a0, 8
	st.d	$s3, $a0, 16
	st.d	$s2, $a0, 24
	st.d	$s1, $a0, 32
	st.d	$s0, $a0, 40
	st.d	$fp, $a0, 48
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end1065:
	.size	_ZN2kc8Problem6EPNS_20impl_casestring__StrES1_S1_S1_S1_S1_, .Lfunc_end1065-_ZN2kc8Problem6EPNS_20impl_casestring__StrES1_S1_S1_S1_S1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26NiladdedphylumdeclarationsEv # -- Begin function _ZN2kc26NiladdedphylumdeclarationsEv
	.p2align	5
	.type	_ZN2kc26NiladdedphylumdeclarationsEv,@function
_ZN2kc26NiladdedphylumdeclarationsEv:   # @_ZN2kc26NiladdedphylumdeclarationsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1066:
	.size	_ZN2kc26NiladdedphylumdeclarationsEv, .Lfunc_end1066-_ZN2kc26NiladdedphylumdeclarationsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27ConsaddedphylumdeclarationsEPNS_27impl_addedphylumdeclarationEPNS_28impl_addedphylumdeclarationsE # -- Begin function _ZN2kc27ConsaddedphylumdeclarationsEPNS_27impl_addedphylumdeclarationEPNS_28impl_addedphylumdeclarationsE
	.p2align	5
	.type	_ZN2kc27ConsaddedphylumdeclarationsEPNS_27impl_addedphylumdeclarationEPNS_28impl_addedphylumdeclarationsE,@function
_ZN2kc27ConsaddedphylumdeclarationsEPNS_27impl_addedphylumdeclarationEPNS_28impl_addedphylumdeclarationsE: # @_ZN2kc27ConsaddedphylumdeclarationsEPNS_27impl_addedphylumdeclarationEPNS_28impl_addedphylumdeclarationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1067:
	.size	_ZN2kc27ConsaddedphylumdeclarationsEPNS_27impl_addedphylumdeclarationEPNS_28impl_addedphylumdeclarationsE, .Lfunc_end1067-_ZN2kc27ConsaddedphylumdeclarationsEPNS_27impl_addedphylumdeclarationEPNS_28impl_addedphylumdeclarationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22AddedPhylumdeclarationEPNS_11impl_uniqIDE # -- Begin function _ZN2kc22AddedPhylumdeclarationEPNS_11impl_uniqIDE
	.p2align	5
	.type	_ZN2kc22AddedPhylumdeclarationEPNS_11impl_uniqIDE,@function
_ZN2kc22AddedPhylumdeclarationEPNS_11impl_uniqIDE: # @_ZN2kc22AddedPhylumdeclarationEPNS_11impl_uniqIDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(pl_addedphylumdeclarations)
	ld.d	$s1, $a1, %got_pc_lo12(pl_addedphylumdeclarations)
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE+16)
	ld.d	$s2, $s1, 0
	st.d	$a0, $fp, 0
	st.d	$s0, $fp, 16
	st.b	$zero, $fp, 8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	st.d	$s3, $s0, 0
	addi.d	$a0, $s0, 8
	beqz	$s2, .LBB1068_2
# %bb.1:
	st.d	$fp, $a0, 0
	move	$a0, $s0
	move	$s0, $s2
	b	.LBB1068_3
.LBB1068_2:
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$s3, $a0, 0
	st.d	$fp, $a0, 8
.LBB1068_3:                             # %_ZN2kc12_GLOBAL__N_136kc_initialize_addedphylumdeclarationEPNS_27impl_addedphylumdeclarationE.exit
	st.d	$s0, $a0, 16
	st.d	$a0, $s1, 0
	move	$a0, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1068:
	.size	_ZN2kc22AddedPhylumdeclarationEPNS_11impl_uniqIDE, .Lfunc_end1068-_ZN2kc22AddedPhylumdeclarationEPNS_11impl_uniqIDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28NilcountedphylumdeclarationsEv # -- Begin function _ZN2kc28NilcountedphylumdeclarationsEv
	.p2align	5
	.type	_ZN2kc28NilcountedphylumdeclarationsEv,@function
_ZN2kc28NilcountedphylumdeclarationsEv: # @_ZN2kc28NilcountedphylumdeclarationsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1069:
	.size	_ZN2kc28NilcountedphylumdeclarationsEv, .Lfunc_end1069-_ZN2kc28NilcountedphylumdeclarationsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc29ConscountedphylumdeclarationsEPNS_29impl_countedphylumdeclarationEPNS_30impl_countedphylumdeclarationsE # -- Begin function _ZN2kc29ConscountedphylumdeclarationsEPNS_29impl_countedphylumdeclarationEPNS_30impl_countedphylumdeclarationsE
	.p2align	5
	.type	_ZN2kc29ConscountedphylumdeclarationsEPNS_29impl_countedphylumdeclarationEPNS_30impl_countedphylumdeclarationsE,@function
_ZN2kc29ConscountedphylumdeclarationsEPNS_29impl_countedphylumdeclarationEPNS_30impl_countedphylumdeclarationsE: # @_ZN2kc29ConscountedphylumdeclarationsEPNS_29impl_countedphylumdeclarationEPNS_30impl_countedphylumdeclarationsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	st.d	$a1, $a0, 0
	st.d	$s0, $a0, 8
	st.d	$fp, $a0, 16
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1070:
	.size	_ZN2kc29ConscountedphylumdeclarationsEPNS_29impl_countedphylumdeclarationEPNS_30impl_countedphylumdeclarationsE, .Lfunc_end1070-_ZN2kc29ConscountedphylumdeclarationsEPNS_29impl_countedphylumdeclarationEPNS_30impl_countedphylumdeclarationsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24CountedPhylumdeclarationEPNS_11impl_uniqIDE # -- Begin function _ZN2kc24CountedPhylumdeclarationEPNS_11impl_uniqIDE
	.p2align	5
	.type	_ZN2kc24CountedPhylumdeclarationEPNS_11impl_uniqIDE,@function
_ZN2kc24CountedPhylumdeclarationEPNS_11impl_uniqIDE: # @_ZN2kc24CountedPhylumdeclarationEPNS_11impl_uniqIDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE+16)
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE+16)
	st.d	$a1, $fp, 0
	st.d	$s0, $fp, 16
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB1071_4
# %bb.1:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB1071_4
# %bb.2:
	ld.d	$a0, $a0, 312
	st.d	$fp, $sp, 8
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB1071_5
.LBB1071_3:
	move	$s0, $zero
	b	.LBB1071_6
.LBB1071_4:
	st.d	$fp, $sp, 8
	addi.d	$a0, $a0, 240
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB1071_3
.LBB1071_5:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_29impl_countedphylumdeclarationEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc29impl_countedphylumdeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc29impl_countedphylumdeclarationE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	beq	$a0, $fp, .LBB1071_7
.LBB1071_6:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_29impl_countedphylumdeclarationEEET_S4_.exit.thread
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 64
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$fp, $s0
	b	.LBB1071_11
.LBB1071_7:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 48
	move	$a0, $fp
	jirl	$ra, $a1, 0
	pcalau12i	$a0, %got_pc_hi20(pl_countedphylumdeclarations)
	ld.d	$s1, $a0, %got_pc_lo12(pl_countedphylumdeclarations)
	ld.d	$s2, $s1, 0
	st.w	$zero, $fp, 8
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	st.d	$s3, $s0, 0
	addi.d	$a0, $s0, 8
	beqz	$s2, .LBB1071_9
# %bb.8:
	st.d	$fp, $a0, 0
	move	$a0, $s0
	move	$s0, $s2
	b	.LBB1071_10
.LBB1071_9:
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$s3, $a0, 0
	st.d	$fp, $a0, 8
.LBB1071_10:                            # %_ZN2kc12_GLOBAL__N_138kc_initialize_countedphylumdeclarationEPNS_29impl_countedphylumdeclarationE.exit
	st.d	$s0, $a0, 16
	st.d	$a0, $s1, 0
.LBB1071_11:
	move	$a0, $fp
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end1071:
	.size	_ZN2kc24CountedPhylumdeclarationEPNS_11impl_uniqIDE, .Lfunc_end1071-_ZN2kc24CountedPhylumdeclarationEPNS_11impl_uniqIDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc8NewlinesEv               # -- Begin function _ZN2kc8NewlinesEv
	.p2align	5
	.type	_ZN2kc8NewlinesEv,@function
_ZN2kc8NewlinesEv:                      # @_ZN2kc8NewlinesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc22impl_charruns_NewlinesE)
	ld.d	$a2, $a1, %got_pc_lo12(_ZTVN2kc22impl_charruns_NewlinesE)
	pcalau12i	$a1, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a1, $a1, %pc_lo12(_ZN2kc10hashtablesE+8)
	move	$fp, $a0
	addi.d	$a0, $a2, 16
	st.d	$a0, $fp, 0
	ld.bu	$a0, $a1, 321
	ori	$a2, $zero, 1
	bne	$a0, $a2, .LBB1072_4
# %bb.1:
	ld.d	$a0, $a1, 288
	addi.d	$a2, $a1, 288
	beq	$a0, $a2, .LBB1072_4
# %bb.2:
	ld.d	$a0, $a1, 312
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB1072_5
.LBB1072_3:
	move	$s0, $zero
	ori	$a0, $zero, 64
	b	.LBB1072_6
.LBB1072_4:
	st.d	$fp, $sp, 0
	addi.d	$a0, $a1, 240
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB1072_3
.LBB1072_5:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_13impl_charrunsEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc13impl_charrunsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc13impl_charrunsE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	xor	$a0, $a0, $fp
	sltui	$a0, $a0, 1
	ori	$a1, $zero, 64
	masknez	$a1, $a1, $a0
	ori	$a2, $zero, 48
	maskeqz	$a0, $a2, $a0
	or	$a0, $a0, $a1
.LBB1072_6:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_13impl_charrunsEEET_S4_.exit.thread
	ld.d	$a1, $fp, 0
	ldx.d	$a1, $a1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1072:
	.size	_ZN2kc8NewlinesEv, .Lfunc_end1072-_ZN2kc8NewlinesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14QuotedNewlinesEv        # -- Begin function _ZN2kc14QuotedNewlinesEv
	.p2align	5
	.type	_ZN2kc14QuotedNewlinesEv,@function
_ZN2kc14QuotedNewlinesEv:               # @_ZN2kc14QuotedNewlinesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc28impl_charruns_QuotedNewlinesE)
	ld.d	$a2, $a1, %got_pc_lo12(_ZTVN2kc28impl_charruns_QuotedNewlinesE)
	pcalau12i	$a1, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a1, $a1, %pc_lo12(_ZN2kc10hashtablesE+8)
	move	$fp, $a0
	addi.d	$a0, $a2, 16
	st.d	$a0, $fp, 0
	ld.bu	$a0, $a1, 321
	ori	$a2, $zero, 1
	bne	$a0, $a2, .LBB1073_4
# %bb.1:
	ld.d	$a0, $a1, 288
	addi.d	$a2, $a1, 288
	beq	$a0, $a2, .LBB1073_4
# %bb.2:
	ld.d	$a0, $a1, 312
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB1073_5
.LBB1073_3:
	move	$s0, $zero
	ori	$a0, $zero, 64
	b	.LBB1073_6
.LBB1073_4:
	st.d	$fp, $sp, 0
	addi.d	$a0, $a1, 240
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB1073_3
.LBB1073_5:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_13impl_charrunsEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc13impl_charrunsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc13impl_charrunsE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	xor	$a0, $a0, $fp
	sltui	$a0, $a0, 1
	ori	$a1, $zero, 64
	masknez	$a1, $a1, $a0
	ori	$a2, $zero, 48
	maskeqz	$a0, $a2, $a0
	or	$a0, $a0, $a1
.LBB1073_6:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_13impl_charrunsEEET_S4_.exit.thread
	ld.d	$a1, $fp, 0
	ldx.d	$a1, $a1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1073:
	.size	_ZN2kc14QuotedNewlinesEv, .Lfunc_end1073-_ZN2kc14QuotedNewlinesEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc5StarsEv                  # -- Begin function _ZN2kc5StarsEv
	.p2align	5
	.type	_ZN2kc5StarsEv,@function
_ZN2kc5StarsEv:                         # @_ZN2kc5StarsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc19impl_charruns_StarsE)
	ld.d	$a2, $a1, %got_pc_lo12(_ZTVN2kc19impl_charruns_StarsE)
	pcalau12i	$a1, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a1, $a1, %pc_lo12(_ZN2kc10hashtablesE+8)
	move	$fp, $a0
	addi.d	$a0, $a2, 16
	st.d	$a0, $fp, 0
	ld.bu	$a0, $a1, 321
	ori	$a2, $zero, 1
	bne	$a0, $a2, .LBB1074_4
# %bb.1:
	ld.d	$a0, $a1, 288
	addi.d	$a2, $a1, 288
	beq	$a0, $a2, .LBB1074_4
# %bb.2:
	ld.d	$a0, $a1, 312
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB1074_5
.LBB1074_3:
	move	$s0, $zero
	ori	$a0, $zero, 64
	b	.LBB1074_6
.LBB1074_4:
	st.d	$fp, $sp, 0
	addi.d	$a0, $a1, 240
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB1074_3
.LBB1074_5:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_13impl_charrunsEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc13impl_charrunsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc13impl_charrunsE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	xor	$a0, $a0, $fp
	sltui	$a0, $a0, 1
	ori	$a1, $zero, 64
	masknez	$a1, $a1, $a0
	ori	$a2, $zero, 48
	maskeqz	$a0, $a2, $a0
	or	$a0, $a0, $a1
.LBB1074_6:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_13impl_charrunsEEET_S4_.exit.thread
	ld.d	$a1, $fp, 0
	ldx.d	$a1, $a1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1074:
	.size	_ZN2kc5StarsEv, .Lfunc_end1074-_ZN2kc5StarsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17NilbindingidmarksEv     # -- Begin function _ZN2kc17NilbindingidmarksEv
	.p2align	5
	.type	_ZN2kc17NilbindingidmarksEv,@function
_ZN2kc17NilbindingidmarksEv:            # @_ZN2kc17NilbindingidmarksEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_bindingidmarksE+16)
	addi.d	$a1, $a0, %pc_lo12(_ZTVN2kc19impl_bindingidmarksE+16)
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	st.d	$a1, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 8
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB1075_4
# %bb.1:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB1075_4
# %bb.2:
	ld.d	$a0, $a0, 312
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB1075_5
.LBB1075_3:
	move	$s0, $zero
	ori	$a0, $zero, 64
	b	.LBB1075_6
.LBB1075_4:
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 240
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB1075_3
.LBB1075_5:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_19impl_bindingidmarksEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_bindingidmarksE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_bindingidmarksE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	xor	$a0, $a0, $fp
	sltui	$a0, $a0, 1
	ori	$a1, $zero, 64
	masknez	$a1, $a1, $a0
	ori	$a2, $zero, 48
	maskeqz	$a0, $a2, $a0
	or	$a0, $a0, $a1
.LBB1075_6:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_19impl_bindingidmarksEEET_S4_.exit.thread
	ld.d	$a1, $fp, 0
	ldx.d	$a1, $a1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1075:
	.size	_ZN2kc17NilbindingidmarksEv, .Lfunc_end1075-_ZN2kc17NilbindingidmarksEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE # -- Begin function _ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE
	.p2align	5
	.type	_ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE,@function
_ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE: # @_ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$s1, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_bindingidmarksE+16)
	addi.d	$a1, $a0, %pc_lo12(_ZTVN2kc19impl_bindingidmarksE+16)
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	st.d	$a1, $fp, 0
	st.d	$s1, $fp, 8
	st.d	$s0, $fp, 16
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB1076_4
# %bb.1:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB1076_4
# %bb.2:
	ld.d	$a0, $a0, 312
	st.d	$fp, $sp, 8
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB1076_5
.LBB1076_3:
	move	$s0, $zero
	ori	$a0, $zero, 64
	b	.LBB1076_6
.LBB1076_4:
	st.d	$fp, $sp, 8
	addi.d	$a0, $a0, 240
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB1076_3
.LBB1076_5:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_19impl_bindingidmarksEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_bindingidmarksE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_bindingidmarksE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	xor	$a0, $a0, $fp
	sltui	$a0, $a0, 1
	ori	$a1, $zero, 64
	masknez	$a1, $a1, $a0
	ori	$a2, $zero, 48
	maskeqz	$a0, $a2, $a0
	or	$a0, $a0, $a1
.LBB1076_6:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_19impl_bindingidmarksEEET_S4_.exit.thread
	ld.d	$a1, $fp, 0
	ldx.d	$a1, $a1, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a0, $s0
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1076:
	.size	_ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE, .Lfunc_end1076-_ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13BindingIdMarkEPNS_11impl_uniqIDE # -- Begin function _ZN2kc13BindingIdMarkEPNS_11impl_uniqIDE
	.p2align	5
	.type	_ZN2kc13BindingIdMarkEPNS_11impl_uniqIDE,@function
_ZN2kc13BindingIdMarkEPNS_11impl_uniqIDE: # @_ZN2kc13BindingIdMarkEPNS_11impl_uniqIDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$s0, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_bindingidmark_BindingIdMarkE+16)
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_bindingidmark_BindingIdMarkE+16)
	st.d	$a1, $fp, 0
	st.d	$s0, $fp, 16
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB1077_4
# %bb.1:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB1077_4
# %bb.2:
	ld.d	$a0, $a0, 312
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 256
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	bnez	$a0, .LBB1077_5
.LBB1077_3:
	move	$s0, $zero
	b	.LBB1077_6
.LBB1077_4:
	st.d	$fp, $sp, 0
	addi.d	$a0, $a0, 240
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB1077_3
.LBB1077_5:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_18impl_bindingidmarkEEET_S4_.exit
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_bindingidmarkE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_bindingidmarkE)
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	beq	$a0, $fp, .LBB1077_7
.LBB1077_6:                             # %_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_18impl_bindingidmarkEEET_S4_.exit.thread
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 64
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$fp, $s0
	b	.LBB1077_10
.LBB1077_7:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 48
	move	$a0, $fp
	jirl	$ra, $a1, 0
	pcalau12i	$a0, %got_pc_hi20(Thebindingidmarks)
	ld.d	$s0, $a0, %got_pc_lo12(Thebindingidmarks)
	ld.d	$a1, $s0, 0
	st.b	$zero, $fp, 8
	bnez	$a1, .LBB1077_9
# %bb.8:
	pcaddu18i	$ra, %call36(_ZN2kc17NilbindingidmarksEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
.LBB1077_9:                             # %_ZN2kc12_GLOBAL__N_127kc_initialize_bindingidmarkEPNS_18impl_bindingidmarkE.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 0
.LBB1077_10:
	move	$a0, $fp
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1077:
	.size	_ZN2kc13BindingIdMarkEPNS_11impl_uniqIDE, .Lfunc_end1077-_ZN2kc13BindingIdMarkEPNS_11impl_uniqIDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_ # -- Begin function _ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_
	.p2align	5
	.type	_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_,@function
_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_: # @_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	addi.d	$a0, $a0, -1
	ori	$t0, $zero, 337
	bltu	$t0, $a0, .LBB1078_349
# %bb.1:
	move	$fp, $a1
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI1078_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI1078_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB1078_2:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jr	$t8
.LBB1078_3:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_Ccode_option_CcodeOptionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_Ccode_option_CcodeOptionE+16)
	b	.LBB1078_345
.LBB1078_4:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE+16)
	b	.LBB1078_343
.LBB1078_5:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc17OPNonLeafVariableEPNS_7impl_IDEPNS_19impl_outmostpatternE)
	jr	$t8
.LBB1078_6:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc9OPDefaultEPNS_16impl_CexpressionE)
	jr	$t8
.LBB1078_7:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_includedeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_includedeclarationsE+16)
	b	.LBB1078_339
.LBB1078_8:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc11impl_CtextsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc11impl_CtextsE+16)
	b	.LBB1078_345
.LBB1078_9:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_pattern_PNonLeafVariableE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_pattern_PNonLeafVariableE+16)
	b	.LBB1078_345
.LBB1078_10:
	ori	$a0, $zero, 32
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_argumentsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_argumentsE+16)
	b	.LBB1078_267
.LBB1078_11:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_rwdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_rwdeclarationsE+16)
	b	.LBB1078_339
.LBB1078_12:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE+16)
	b	.LBB1078_343
.LBB1078_13:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc13TMemberVarDotEPNS_9impl_termEPNS_7impl_IDE)
	jr	$t8
.LBB1078_14:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_rewriteclause_RewriteClauseE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_rewriteclause_RewriteClauseE+16)
	b	.LBB1078_345
.LBB1078_15:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc6TCTermEPNS_18impl_CexpressionSQE)
	jr	$t8
.LBB1078_16:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc11TIntLiteralEPNS_8impl_INTE)
	jr	$t8
.LBB1078_17:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc27impl_fnclass_ConvOperatorFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc27impl_fnclass_ConvOperatorFnE)
	b	.LBB1078_309
.LBB1078_18:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc18ConsstorageclassesEPNS_7impl_IDEPNS_19impl_storageclassesE)
	jr	$t8
.LBB1078_19:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc12impl_fnfilesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc12impl_fnfilesE+16)
	b	.LBB1078_345
.LBB1078_20:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_pattern_PStringLiteralE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_pattern_PStringLiteralE+16)
	b	.LBB1078_343
.LBB1078_21:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE+16)
	b	.LBB1078_343
.LBB1078_22:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc25impl_fnclass_DestructorFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc25impl_fnclass_DestructorFnE)
	b	.LBB1078_309
.LBB1078_23:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc9ConsCtextEPNS_15impl_Ctext_elemEPNS_10impl_CtextE)
	jr	$t8
.LBB1078_24:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_unparseitem_UnpSubexprE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_unparseitem_UnpSubexprE+16)
	b	.LBB1078_96
.LBB1078_25:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc18OPOperatorWildcardEPNS_7impl_IDEPNS_16impl_CexpressionE)
	jr	$t8
.LBB1078_26:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_pattern_POperatorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_pattern_POperatorE+16)
	b	.LBB1078_345
.LBB1078_27:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc16NilpatternchainsEv)
	jr	$t8
.LBB1078_28:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_unpattributesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_unpattributesE+16)
	b	.LBB1078_339
.LBB1078_29:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_contextinfo_InForeachContextE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_contextinfo_InForeachContextE+16)
	b	.LBB1078_343
.LBB1078_30:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc21PatternchainitemGroupEPNS_18impl_patternchainsE)
	jr	$t8
.LBB1078_31:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	move	$a3, $a4
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc12ForeachAfterEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE)
	jr	$t8
.LBB1078_32:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc18NilwithexpressionsEv)
	jr	$t8
.LBB1078_33:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_CexpressionDQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_CexpressionDQE+16)
	b	.LBB1078_339
.LBB1078_34:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc15impl_attributesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc15impl_attributesE+16)
	b	.LBB1078_339
.LBB1078_35:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_IDtype_ITUnknownE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_IDtype_ITUnknownE)
	b	.LBB1078_309
.LBB1078_36:
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_withcasesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_withcasesE+16)
	b	.LBB1078_262
.LBB1078_37:
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_viewnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_viewnamesE+16)
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	st.b	$zero, $a0, 8
	b	.LBB1078_346
.LBB1078_38:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE+16)
	b	.LBB1078_343
.LBB1078_39:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc20impl_outmostpatternsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc20impl_outmostpatternsE+16)
	b	.LBB1078_339
.LBB1078_40:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_unparseitemsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_unparseitemsE+16)
	b	.LBB1078_345
.LBB1078_41:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc22impl_pattern_PWildcardE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc22impl_pattern_PWildcardE)
	b	.LBB1078_309
.LBB1078_42:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_languageoption_LanguageListE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_languageoption_LanguageListE+16)
	b	.LBB1078_343
.LBB1078_43:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc10PRWildcardEPNS_9impl_pathE)
	jr	$t8
.LBB1078_44:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_argsnumbersE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_argsnumbersE+16)
	b	.LBB1078_339
.LBB1078_45:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc15NilpatternchainEv)
	jr	$t8
.LBB1078_46:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE+16)
	b	.LBB1078_345
.LBB1078_47:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc22impl_IDtype_ITUViewVarE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc22impl_IDtype_ITUViewVarE)
	b	.LBB1078_309
.LBB1078_48:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc16PRNonLeafBindingEPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE)
	jr	$t8
.LBB1078_49:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc13impl_patternsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc13impl_patternsE+16)
	b	.LBB1078_345
.LBB1078_50:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc26impl_fnclass_ConstructorFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc26impl_fnclass_ConstructorFnE)
	b	.LBB1078_309
.LBB1078_51:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE+16)
	b	.LBB1078_343
.LBB1078_52:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE+16)
	b	.LBB1078_343
.LBB1078_53:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc8NilCtextEv)
	jr	$t8
.LBB1078_54:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_unpattributesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_unpattributesE+16)
	b	.LBB1078_345
.LBB1078_55:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_phylaE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_phylaE+16)
	b	.LBB1078_339
.LBB1078_56:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_variablesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_variablesE+16)
	b	.LBB1078_339
.LBB1078_57:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE+16)
	b	.LBB1078_345
.LBB1078_58:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_patternrepresentationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_patternrepresentationE+16)
	b	.LBB1078_339
.LBB1078_59:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_unparseitem_UViewVarDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_unparseitem_UViewVarDeclE+16)
	b	.LBB1078_96
.LBB1078_60:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_argsnumbersE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_argsnumbersE+16)
	b	.LBB1078_345
.LBB1078_61:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_includedeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_includedeclarationsE+16)
	b	.LBB1078_345
.LBB1078_62:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	b	.LBB1078_339
.LBB1078_63:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc31impl_ac_declarator_AcDeclaratorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc31impl_ac_declarator_AcDeclaratorE+16)
	b	.LBB1078_254
.LBB1078_64:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_unpsubterm_UnpSubAttrE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_unpsubterm_UnpSubAttrE+16)
	b	.LBB1078_345
.LBB1078_65:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc26impl_IDtype_ITStorageClassE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc26impl_IDtype_ITStorageClassE)
	b	.LBB1078_309
.LBB1078_66:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	b	.LBB1078_339
.LBB1078_67:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_patternrepresentationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_patternrepresentationE+16)
	b	.LBB1078_345
.LBB1078_68:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE+16)
	b	.LBB1078_196
.LBB1078_69:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_storageoption_NegativeStorageOptionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_storageoption_NegativeStorageOptionE+16)
	b	.LBB1078_343
.LBB1078_70:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE+16)
	b	.LBB1078_343
.LBB1078_71:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc30impl_ac_type_qualifier_AcConstE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc30impl_ac_type_qualifier_AcConstE)
	b	.LBB1078_309
.LBB1078_72:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_declaration_AcDeclarationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_declaration_AcDeclarationE+16)
	b	.LBB1078_345
.LBB1078_73:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	move	$a3, $a4
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc19AcMemberDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE)
	jr	$t8
.LBB1078_74:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc16ConspatternchainEPNS_21impl_patternchainitemEPNS_17impl_patternchainE)
	jr	$t8
.LBB1078_75:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_alternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_alternativesE+16)
	b	.LBB1078_339
.LBB1078_76:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc14NoForeachAfterEv)
	jr	$t8
.LBB1078_77:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc29impl_IDtype_ITPredefinedUViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc29impl_IDtype_ITPredefinedUViewE)
	b	.LBB1078_309
.LBB1078_78:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc19CTextWithexpressionEPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE)
	jr	$t8
.LBB1078_79:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc29impl_IDtype_ITPredefinedRViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc29impl_IDtype_ITPredefinedRViewE)
	b	.LBB1078_309
.LBB1078_80:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE+16)
	b	.LBB1078_343
.LBB1078_81:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE+16)
	b	.LBB1078_196
.LBB1078_82:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_rewriterulesinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_rewriterulesinfoE+16)
	b	.LBB1078_345
.LBB1078_83:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc40impl_ac_storage_class_specifier_AcStaticE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc40impl_ac_storage_class_specifier_AcStaticE)
	b	.LBB1078_309
.LBB1078_84:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_ac_declaration_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_ac_declaration_listE+16)
	b	.LBB1078_339
.LBB1078_85:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_rewriteclausesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_rewriteclausesE+16)
	b	.LBB1078_339
.LBB1078_86:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc24impl_ac_ref_option_AcRefE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc24impl_ac_ref_option_AcRefE)
	b	.LBB1078_309
.LBB1078_87:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc23impl_IDtype_ITUserRViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc23impl_IDtype_ITUserRViewE)
	b	.LBB1078_309
.LBB1078_88:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	b	.LBB1078_345
.LBB1078_89:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE+16)
	b	.LBB1078_345
.LBB1078_90:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_IDtype_ITLanguageNameE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_IDtype_ITLanguageNameE+16)
	b	.LBB1078_343
.LBB1078_91:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE+16)
	b	.LBB1078_343
.LBB1078_92:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_ac_storage_class_specifier_AcVirtualE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_ac_storage_class_specifier_AcVirtualE)
	b	.LBB1078_309
.LBB1078_93:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc17ConspatternchainsEPNS_17impl_patternchainEPNS_18impl_patternchainsE)
	jr	$t8
.LBB1078_94:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE+16)
	b	.LBB1078_343
.LBB1078_95:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_unparseitem_UnpStrE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_unparseitem_UnpStrE+16)
.LBB1078_96:
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 16
	st.d	$s0, $a0, 24
	st.d	$s1, $a0, 32
	st.w	$zero, $a0, 8
	b	.LBB1078_346
.LBB1078_97:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc31impl_viewnameoption_YesViewnameE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc31impl_viewnameoption_YesViewnameE+16)
	b	.LBB1078_343
.LBB1078_98:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc36impl_ac_type_qualifier_AcNoQualifierE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc36impl_ac_type_qualifier_AcNoQualifierE)
	b	.LBB1078_309
.LBB1078_99:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc10WEVariableEPNS_7impl_IDE)
	jr	$t8
.LBB1078_100:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	b	.LBB1078_345
.LBB1078_101:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	b	.LBB1078_345
.LBB1078_102:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_fnclass_GlobalFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_fnclass_GlobalFnE)
	b	.LBB1078_309
.LBB1078_103:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc63impl_attribute_initialisation_option_Noattribute_initialisationE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc63impl_attribute_initialisation_option_Noattribute_initialisationE)
	b	.LBB1078_309
.LBB1078_104:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc18CTextCexpressionSQEPNS_18impl_CexpressionSQE)
	jr	$t8
.LBB1078_105:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc36impl_IDtype_ITPredefinedStorageClassE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc36impl_IDtype_ITPredefinedStorageClassE)
	b	.LBB1078_309
.LBB1078_106:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc27impl_fileline_PosNoFileLineE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc27impl_fileline_PosNoFileLineE)
	b	.LBB1078_309
.LBB1078_107:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_operatorsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_operatorsE+16)
	b	.LBB1078_339
.LBB1078_108:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	b	.LBB1078_345
.LBB1078_109:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	move	$a3, $a4
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc17PhylumDeclarationEPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE)
	jr	$t8
.LBB1078_110:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc18impl_tribool_EqualE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc18impl_tribool_EqualE)
	b	.LBB1078_309
.LBB1078_111:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	b	.LBB1078_345
.LBB1078_112:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE+16)
	b	.LBB1078_345
.LBB1078_113:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	b	.LBB1078_339
.LBB1078_114:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE+16)
	b	.LBB1078_345
.LBB1078_115:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc26impl_ac_ref_option_AcNoRefE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc26impl_ac_ref_option_AcNoRefE)
	b	.LBB1078_309
.LBB1078_116:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_baseclass_declarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_baseclass_declarationsE+16)
	b	.LBB1078_339
.LBB1078_117:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE+16)
	b	.LBB1078_345
.LBB1078_118:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE+16)
	b	.LBB1078_254
.LBB1078_119:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE+16)
	b	.LBB1078_343
.LBB1078_120:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_ac_identifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_ac_identifier_listE+16)
	b	.LBB1078_339
.LBB1078_121:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc32impl_ac_pointer_option_NopointerE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc32impl_ac_pointer_option_NopointerE)
	b	.LBB1078_309
.LBB1078_122:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE+16)
	b	.LBB1078_345
.LBB1078_123:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_baseclass_declarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_baseclass_declarationsE+16)
	b	.LBB1078_345
.LBB1078_124:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_patternrepresentationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_patternrepresentationsE+16)
	b	.LBB1078_345
.LBB1078_125:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc35impl_Cexpression_elem_CExpressionNlE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc35impl_Cexpression_elem_CExpressionNlE)
	b	.LBB1078_309
.LBB1078_126:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_phylaE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_phylaE+16)
	b	.LBB1078_345
.LBB1078_127:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc14AcOperatorNameEPNS_20impl_casestring__StrE)
	jr	$t8
.LBB1078_128:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_problem_Problem1tIDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_problem_Problem1tIDE+16)
	b	.LBB1078_345
.LBB1078_129:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_baseclass_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_baseclass_listE+16)
	b	.LBB1078_339
.LBB1078_130:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc14PRVarPredicateEPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE)
	jr	$t8
.LBB1078_131:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc9PRDefaultEv)
	jr	$t8
.LBB1078_132:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem3E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem3E+16)
	b	.LBB1078_254
.LBB1078_133:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	b	.LBB1078_345
.LBB1078_134:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_termsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_termsE+16)
	b	.LBB1078_345
.LBB1078_135:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	b	.LBB1078_339
.LBB1078_136:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem4E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem4E+16)
	b	.LBB1078_196
.LBB1078_137:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_baseclass_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_baseclass_listE+16)
	b	.LBB1078_345
.LBB1078_138:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc34impl_languageoption_NoLanguagenameE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc34impl_languageoption_NoLanguagenameE)
	b	.LBB1078_309
.LBB1078_139:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_attribute_AttributeE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_attribute_AttributeE+16)
	b	.LBB1078_254
.LBB1078_140:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE+16)
	b	.LBB1078_345
.LBB1078_141:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_withcasesinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_withcasesinfoE+16)
	b	.LBB1078_345
.LBB1078_142:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc13WECexpressionEPNS_16impl_CexpressionE)
	jr	$t8
.LBB1078_143:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc10OPWildcardEPNS_16impl_CexpressionE)
	jr	$t8
.LBB1078_144:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	b	.LBB1078_345
.LBB1078_145:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE+16)
	b	.LBB1078_254
.LBB1078_146:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc15PRStringLiteralEPNS_9impl_pathEPNS_18impl_CexpressionDQE)
	jr	$t8
.LBB1078_147:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE+16)
	b	.LBB1078_343
.LBB1078_148:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	b	.LBB1078_339
.LBB1078_149:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_rewriterulesinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_rewriterulesinfoE+16)
	b	.LBB1078_339
.LBB1078_150:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_includefilesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_includefilesE+16)
	b	.LBB1078_345
.LBB1078_151:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE+16)
	b	.LBB1078_345
.LBB1078_152:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE+16)
	b	.LBB1078_345
.LBB1078_153:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc14QuotedNewlinesEv)
	jr	$t8
.LBB1078_154:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_ac_base_init_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_ac_base_init_listE+16)
	b	.LBB1078_339
.LBB1078_155:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc7NilpathEv)
	jr	$t8
.LBB1078_156:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_ac_parameter_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_ac_parameter_listE+16)
	b	.LBB1078_339
.LBB1078_157:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	b	.LBB1078_339
.LBB1078_158:
	ori	$a0, $zero, 56
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	move	$s3, $a5
	move	$s4, $a6
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem6E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem6E+16)
	b	.LBB1078_222
.LBB1078_159:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_unpsubterm_UnpSubTermE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_unpsubterm_UnpSubTermE+16)
	b	.LBB1078_343
.LBB1078_160:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc22AddedPhylumdeclarationEPNS_11impl_uniqIDE)
	jr	$t8
.LBB1078_161:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	b	.LBB1078_345
.LBB1078_162:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc14NilCexpressionEv)
	jr	$t8
.LBB1078_163:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc18CTextCexpressionDQEPNS_18impl_CexpressionDQE)
	jr	$t8
.LBB1078_164:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_problem_Problem1ID1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_problem_Problem1ID1IDE+16)
	b	.LBB1078_196
.LBB1078_165:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_unparseclausesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_unparseclausesE+16)
	b	.LBB1078_339
.LBB1078_166:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc25impl_problem_Problem1t1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc25impl_problem_Problem1t1IDE+16)
	b	.LBB1078_196
.LBB1078_167:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc17NilbindingidmarksEv)
	jr	$t8
.LBB1078_168:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_IDtype_ITPatternVariableE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_IDtype_ITPatternVariableE+16)
	b	.LBB1078_345
.LBB1078_169:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_operatorsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_operatorsE+16)
	b	.LBB1078_345
.LBB1078_170:
	ori	$a0, $zero, 48
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	move	$s3, $a5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc25impl_problem_Problem3int1E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc25impl_problem_Problem3int1E+16)
	b	.LBB1078_193
.LBB1078_171:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_pathsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_pathsE+16)
	b	.LBB1078_339
.LBB1078_172:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	b	.LBB1078_345
.LBB1078_173:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc5StarsEv)
	jr	$t8
.LBB1078_174:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	b	.LBB1078_345
.LBB1078_175:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc6FnFileEPNS_20impl_casestring__StrE)
	jr	$t8
.LBB1078_176:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE)
	jr	$t8
.LBB1078_177:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc13BindingIdMarkEPNS_11impl_uniqIDE)
	jr	$t8
.LBB1078_178:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc3IntEPNS_17impl_integer__IntE)
	jr	$t8
.LBB1078_179:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE+16)
	b	.LBB1078_343
.LBB1078_180:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc38impl_ac_storage_class_specifier_AcAutoE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc38impl_ac_storage_class_specifier_AcAutoE)
	b	.LBB1078_309
.LBB1078_181:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_error_NonFatalE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_error_NonFatalE+16)
	b	.LBB1078_345
.LBB1078_182:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem2E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem2E+16)
	b	.LBB1078_345
.LBB1078_183:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_ac_storage_class_specifier_AcTypedefE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_ac_storage_class_specifier_AcTypedefE)
	b	.LBB1078_309
.LBB1078_184:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE+16)
	b	.LBB1078_343
.LBB1078_185:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE+16)
	b	.LBB1078_343
.LBB1078_186:
	ori	$a0, $zero, 56
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	move	$s3, $a5
	move	$s4, $a6
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_problem_Problem1ID1ID1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_problem_Problem1ID1ID1IDE+16)
	b	.LBB1078_222
.LBB1078_187:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE+16)
	b	.LBB1078_343
.LBB1078_188:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc8NewlinesEv)
	jr	$t8
.LBB1078_189:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	b	.LBB1078_345
.LBB1078_190:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_ac_parameter_type_list_AcParListE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_ac_parameter_type_list_AcParListE+16)
	b	.LBB1078_343
.LBB1078_191:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_problem_Problem1INT1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_problem_Problem1INT1IDE+16)
	b	.LBB1078_196
.LBB1078_192:
	ori	$a0, $zero, 48
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	move	$s3, $a5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem5E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem5E+16)
.LBB1078_193:
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$s1, $a0, 24
	st.d	$s2, $a0, 32
	st.d	$s3, $a0, 40
	b	.LBB1078_346
.LBB1078_194:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc24CountedPhylumdeclarationEPNS_11impl_uniqIDE)
	jr	$t8
.LBB1078_195:
	ori	$a0, $zero, 40
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_problem_Problem1storageoption1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_problem_Problem1storageoption1IDE+16)
.LBB1078_196:
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$s1, $a0, 24
	st.d	$s2, $a0, 32
	b	.LBB1078_346
.LBB1078_197:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	b	.LBB1078_345
.LBB1078_198:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	b	.LBB1078_339
.LBB1078_199:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_error_WarningE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_error_WarningE+16)
	b	.LBB1078_345
.LBB1078_200:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_error_FatalE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_error_FatalE+16)
	b	.LBB1078_345
.LBB1078_201:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc10OPOperatorEPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE)
	jr	$t8
.LBB1078_202:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_fnclass_MemberFnE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_fnclass_MemberFnE)
	b	.LBB1078_309
.LBB1078_203:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_pattern_PVariableE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_pattern_PVariableE+16)
	b	.LBB1078_343
.LBB1078_204:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	b	.LBB1078_339
.LBB1078_205:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc10CTextCbodyEPNS_10impl_CtextE)
	jr	$t8
.LBB1078_206:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc24impl_fileline_NoFileLineE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc24impl_fileline_NoFileLineE)
	b	.LBB1078_309
.LBB1078_207:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc39impl_CexpressionDQ_elem_CExpressionDQNlE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc39impl_CexpressionDQ_elem_CExpressionDQNlE)
	b	.LBB1078_309
.LBB1078_208:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc39impl_ac_constant_expression_AcConstExprE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc39impl_ac_constant_expression_AcConstExprE+16)
	b	.LBB1078_343
.LBB1078_209:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_languagenamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_languagenamesE+16)
	b	.LBB1078_345
.LBB1078_210:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_dollarvarstatus_DVDisallowedE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_dollarvarstatus_DVDisallowedE)
	b	.LBB1078_309
.LBB1078_211:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc8ConspathEPNS_17impl_integer__IntEPNS_9impl_pathE)
	jr	$t8
.LBB1078_212:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc12PRIntLiteralEPNS_9impl_pathEPNS_8impl_INTE)
	jr	$t8
.LBB1078_213:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE+16)
	b	.LBB1078_343
.LBB1078_214:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc25impl_problem_Problem1int1E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc25impl_problem_Problem1int1E+16)
	b	.LBB1078_254
.LBB1078_215:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	b	.LBB1078_345
.LBB1078_216:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	b	.LBB1078_339
.LBB1078_217:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE+16)
	b	.LBB1078_254
.LBB1078_218:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_unparseviewsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_unparseviewsinfoE+16)
	b	.LBB1078_339
.LBB1078_219:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_withcasesinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_withcasesinfoE+16)
	b	.LBB1078_339
.LBB1078_220:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_ac_base_init_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_ac_base_init_listE+16)
	b	.LBB1078_345
.LBB1078_221:
	ori	$a0, $zero, 56
	move	$s0, $a2
	move	$s1, $a3
	move	$s2, $a4
	move	$s3, $a5
	move	$s4, $a6
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_problem_Problem1INT1ID1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_problem_Problem1INT1ID1IDE+16)
.LBB1078_222:
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$s1, $a0, 24
	st.d	$s2, $a0, 32
	st.d	$s3, $a0, 40
	st.d	$s4, $a0, 48
	b	.LBB1078_346
.LBB1078_223:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE+16)
	b	.LBB1078_254
.LBB1078_224:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc39impl_ac_opt_base_init_list_AcNoBaseInitE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc39impl_ac_opt_base_init_list_AcNoBaseInitE)
	b	.LBB1078_309
.LBB1078_225:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_ac_parameter_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_ac_parameter_listE+16)
	b	.LBB1078_345
.LBB1078_226:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_problem_Problem1INTE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_problem_Problem1INTE+16)
	b	.LBB1078_345
.LBB1078_227:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_problem_Problem1IDE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_problem_Problem1IDE+16)
	b	.LBB1078_345
.LBB1078_228:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_problem_Problem1E+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_problem_Problem1E+16)
	b	.LBB1078_343
.LBB1078_229:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE+16)
	b	.LBB1078_254
.LBB1078_230:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_base_init_AcBaseInitE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_base_init_AcBaseInitE+16)
	b	.LBB1078_345
.LBB1078_231:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_problem_Problem1weE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_problem_Problem1weE+16)
	b	.LBB1078_345
.LBB1078_232:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc20impl_outmostpatternsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc20impl_outmostpatternsE+16)
	b	.LBB1078_345
.LBB1078_233:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE+16)
	b	.LBB1078_343
.LBB1078_234:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_CexpressionDQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_CexpressionDQE+16)
	b	.LBB1078_345
.LBB1078_235:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc30impl_dollarvarstatus_DVAllowedE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc30impl_dollarvarstatus_DVAllowedE)
	b	.LBB1078_309
.LBB1078_236:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_unparseviewsinfoE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_unparseviewsinfoE+16)
	b	.LBB1078_345
.LBB1078_237:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc9PRBindingEPNS_9impl_pathEPNS_7impl_IDE)
	jr	$t8
.LBB1078_238:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc29impl_ac_pointer_AcPointerConsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc29impl_ac_pointer_AcPointerConsE+16)
	b	.LBB1078_345
.LBB1078_239:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_ac_identifier_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_ac_identifier_listE+16)
	b	.LBB1078_345
.LBB1078_240:
	ori	$a0, $zero, 32
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE+16)
	b	.LBB1078_267
.LBB1078_241:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc39impl_CexpressionSQ_elem_CExpressionSQNlE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc39impl_CexpressionSQ_elem_CExpressionSQNlE)
	b	.LBB1078_309
.LBB1078_242:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_languagenamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_languagenamesE+16)
	b	.LBB1078_339
.LBB1078_243:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_pathsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_pathsE+16)
	b	.LBB1078_345
.LBB1078_244:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorE)
	b	.LBB1078_309
.LBB1078_245:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc59impl_ac_constant_expression_option_Noac_constant_expressionE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc59impl_ac_constant_expression_option_Noac_constant_expressionE)
	b	.LBB1078_309
.LBB1078_246:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_pointer_AcPointerNilE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_pointer_AcPointerNilE+16)
	b	.LBB1078_343
.LBB1078_247:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc20impl_tribool_SmallerE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc20impl_tribool_SmallerE)
	b	.LBB1078_309
.LBB1078_248:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	b	.LBB1078_339
.LBB1078_249:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_pointer_option_YespointerE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_pointer_option_YespointerE+16)
	b	.LBB1078_343
.LBB1078_250:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_ac_declaration_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_ac_declaration_listE+16)
	b	.LBB1078_345
.LBB1078_251:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE+16)
	b	.LBB1078_343
.LBB1078_252:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	b	.LBB1078_339
.LBB1078_253:
	ori	$a0, $zero, 32
	move	$s0, $a2
	move	$s1, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE+16)
.LBB1078_254:
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	st.d	$s0, $a0, 16
	st.d	$s1, $a0, 24
	b	.LBB1078_346
.LBB1078_255:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE+16)
	b	.LBB1078_343
.LBB1078_256:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc19ConswithexpressionsEPNS_19impl_withexpressionEPNS_20impl_withexpressionsE)
	jr	$t8
.LBB1078_257:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	b	.LBB1078_339
.LBB1078_258:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_IDtype_ITUserFunctionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_IDtype_ITUserFunctionE+16)
	b	.LBB1078_343
.LBB1078_259:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc40impl_ac_storage_class_specifier_AcExternE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc40impl_ac_storage_class_specifier_AcExternE)
	b	.LBB1078_309
.LBB1078_260:
	ori	$a0, $zero, 32
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_withcase_WithcaseE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_withcase_WithcaseE+16)
	b	.LBB1078_267
.LBB1078_261:
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_argumentsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_argumentsE+16)
.LBB1078_262:
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 16
	b	.LBB1078_346
.LBB1078_263:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_rewriteclausesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_rewriteclausesE+16)
	b	.LBB1078_345
.LBB1078_264:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE+16)
	b	.LBB1078_343
.LBB1078_265:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_alternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_alternativesE+16)
	b	.LBB1078_345
.LBB1078_266:
	ori	$a0, $zero, 32
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_withcasesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_withcasesE+16)
.LBB1078_267:
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 16
	st.d	$s0, $a0, 24
	b	.LBB1078_346
.LBB1078_268:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc15PROperPredicateEPNS_9impl_pathEPNS_7impl_IDE)
	jr	$t8
.LBB1078_269:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_idCexpressionsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_idCexpressionsE+16)
	b	.LBB1078_345
.LBB1078_270:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_ac_type_qualifier_AcVolatileE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_ac_type_qualifier_AcVolatileE)
	b	.LBB1078_309
.LBB1078_271:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc33impl_ac_type_qualifier_AcUnsignedE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc33impl_ac_type_qualifier_AcUnsignedE)
	b	.LBB1078_309
.LBB1078_272:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc19impl_tribool_BiggerE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc19impl_tribool_BiggerE)
	b	.LBB1078_309
.LBB1078_273:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_unparseclause_UnparseClauseE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_unparseclause_UnparseClauseE+16)
	b	.LBB1078_345
.LBB1078_274:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_unparseclausesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_unparseclausesE+16)
	b	.LBB1078_345
.LBB1078_275:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE+16)
	b	.LBB1078_343
.LBB1078_276:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_variablesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_variablesE+16)
	b	.LBB1078_345
.LBB1078_277:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc42impl_ac_storage_class_specifier_AcRegisterE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc42impl_ac_storage_class_specifier_AcRegisterE)
	b	.LBB1078_309
.LBB1078_278:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_unparsedeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_unparsedeclarationsE+16)
	b	.LBB1078_345
.LBB1078_279:
	move	$a0, $zero
	move	$a1, $zero
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jr	$t8
.LBB1078_280:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc26impl_IDtype_ITUserOperatorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc26impl_IDtype_ITUserOperatorE+16)
	b	.LBB1078_345
.LBB1078_281:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_unparsedeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_unparsedeclarationsE+16)
	b	.LBB1078_339
.LBB1078_282:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc15ConsCexpressionEPNS_21impl_Cexpression_elemEPNS_16impl_CexpressionE)
	jr	$t8
.LBB1078_283:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc15PRUserPredicateEPNS_16impl_CexpressionE)
	jr	$t8
.LBB1078_284:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE+16)
	b	.LBB1078_343
.LBB1078_285:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	b	.LBB1078_339
.LBB1078_286:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_unparseitemsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_unparseitemsE+16)
	b	.LBB1078_339
.LBB1078_287:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc14TStringLiteralEPNS_18impl_CexpressionDQE)
	jr	$t8
.LBB1078_288:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE+16)
	b	.LBB1078_345
.LBB1078_289:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc34impl_storageoption_NoStorageOptionE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc34impl_storageoption_NoStorageOptionE)
	b	.LBB1078_309
.LBB1078_290:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc30impl_viewnameoption_NoViewnameE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc30impl_viewnameoption_NoViewnameE)
	b	.LBB1078_309
.LBB1078_291:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc10TMethodDotEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE)
	jr	$t8
.LBB1078_292:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc13impl_patternsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc13impl_patternsE+16)
	b	.LBB1078_339
.LBB1078_293:
	ori	$a0, $zero, 32
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc25impl_unparseitem_UnpCtextE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc25impl_unparseitem_UnpCtextE+16)
	b	.LBB1078_298
.LBB1078_294:
	ori	$a0, $zero, 32
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc14impl_viewnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc14impl_viewnamesE+16)
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 16
	st.d	$s0, $a0, 24
	st.b	$zero, $a0, 8
	b	.LBB1078_346
.LBB1078_295:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc11impl_CtextsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc11impl_CtextsE+16)
	b	.LBB1078_339
.LBB1078_296:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc12impl_fnfilesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc12impl_fnfilesE+16)
	b	.LBB1078_339
.LBB1078_297:
	ori	$a0, $zero, 32
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_unparseitem_UnpBodyE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_unparseitem_UnpBodyE+16)
.LBB1078_298:
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 16
	st.d	$s0, $a0, 24
	st.w	$zero, $a0, 8
	b	.LBB1078_346
.LBB1078_299:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	move	$a3, $a4
	move	$a4, $a5
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc22CTextForeachexpressionEPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE)
	jr	$t8
.LBB1078_300:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc27impl_patternrepresentationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc27impl_patternrepresentationsE+16)
	b	.LBB1078_339
.LBB1078_301:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc9CTextLineEPNS_20impl_casestring__StrE)
	jr	$t8
.LBB1078_302:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_storageoption_PositiveStorageOptionE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_storageoption_PositiveStorageOptionE+16)
	b	.LBB1078_343
.LBB1078_303:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_IDtype_ITUserPhylumE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_IDtype_ITUserPhylumE+16)
	b	.LBB1078_343
.LBB1078_304:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc6StringEPNS_20impl_casestring__StrE)
	jr	$t8
.LBB1078_305:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc23impl_IDtype_ITUserUViewE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc23impl_IDtype_ITUserUViewE)
	b	.LBB1078_309
.LBB1078_306:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc41impl_productionblock_EmptyproductionblockE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc41impl_productionblock_EmptyproductionblockE)
	b	.LBB1078_309
.LBB1078_307:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_CexpressionSQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_CexpressionSQE+16)
	b	.LBB1078_339
.LBB1078_308:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc36impl_contextinfo_NotInForeachContextE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc36impl_contextinfo_NotInForeachContextE)
.LBB1078_309:
	ld.d	$a2, $a1, 64
	move	$fp, $a0
	addi.d	$a0, $a1, 16
	st.d	$a0, $fp, 0
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a0, $fp
	b	.LBB1078_346
.LBB1078_310:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc9TVariableEPNS_7impl_IDE)
	jr	$t8
.LBB1078_311:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE+16)
	b	.LBB1078_345
.LBB1078_312:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc24impl_pattern_PIntLiteralE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc24impl_pattern_PIntLiteralE+16)
	b	.LBB1078_343
.LBB1078_313:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE+16)
	b	.LBB1078_343
.LBB1078_314:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_phylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_phylumdeclarationsE+16)
	b	.LBB1078_339
.LBB1078_315:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jr	$t8
.LBB1078_316:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc22impl_argument_ArgumentE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc22impl_argument_ArgumentE+16)
	b	.LBB1078_345
.LBB1078_317:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc21impl_fnclass_StaticFnE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc21impl_fnclass_StaticFnE+16)
	b	.LBB1078_343
.LBB1078_318:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc11IncludeFileEPNS_20impl_casestring__StrE)
	jr	$t8
.LBB1078_319:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc10TMemberVarEPNS_9impl_termEPNS_7impl_IDE)
	jr	$t8
.LBB1078_320:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc14CTextDollarVarEPNS_8impl_INTE)
	jr	$t8
.LBB1078_321:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc7CTextNlEPNS_17impl_integer__IntE)
	jr	$t8
.LBB1078_322:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc9TOperatorEPNS_7impl_IDEPNS_10impl_termsE)
	jr	$t8
.LBB1078_323:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc23impl_phylumdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc23impl_phylumdeclarationsE+16)
	b	.LBB1078_345
.LBB1078_324:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE+16)
	b	.LBB1078_343
.LBB1078_325:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_idCexpressionsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_idCexpressionsE+16)
	b	.LBB1078_339
.LBB1078_326:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	move	$a3, $a4
	move	$a4, $a5
	move	$a5, $a6
	move	$a6, $a7
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc15FnAcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE)
	jr	$t8
.LBB1078_327:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc10impl_termsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc10impl_termsE+16)
	b	.LBB1078_339
.LBB1078_328:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc40impl_productionblock_NonlistAlternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc40impl_productionblock_NonlistAlternativesE+16)
	b	.LBB1078_343
.LBB1078_329:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc37impl_productionblock_ListAlternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc37impl_productionblock_ListAlternativesE+16)
	b	.LBB1078_345
.LBB1078_330:
	move	$a0, $fp
	move	$a1, $a2
	move	$a2, $a3
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc7TMethodEPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE)
	jr	$t8
.LBB1078_331:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE+16)
	b	.LBB1078_343
.LBB1078_332:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc18IncludeDeclarationEPNS_20impl_casestring__StrE)
	jr	$t8
.LBB1078_333:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc23PatternchainitemOutmostEPNS_19impl_outmostpatternE)
	jr	$t8
.LBB1078_334:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc13IdCexpressionEPNS_7impl_IDEPNS_16impl_CexpressionE)
	jr	$t8
.LBB1078_335:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc32impl_rwdeclaration_RwDeclarationE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc32impl_rwdeclaration_RwDeclarationE+16)
	b	.LBB1078_345
.LBB1078_336:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc19impl_rwdeclarationsE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc19impl_rwdeclarationsE+16)
	b	.LBB1078_345
.LBB1078_337:
	move	$a0, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc24PatternchainitemDollaridEPNS_7impl_IDE)
	jr	$t8
.LBB1078_338:
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc17impl_includefilesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc17impl_includefilesE+16)
.LBB1078_339:
	st.d	$a1, $a0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 8
	b	.LBB1078_346
.LBB1078_340:
	move	$a0, $fp
	move	$a1, $a2
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc11AlternativeEPNS_7impl_IDEPNS_14impl_argumentsE)
	jr	$t8
.LBB1078_341:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc15impl_attributesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc15impl_attributesE+16)
	b	.LBB1078_345
.LBB1078_342:
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc43impl_productionblock_PredefinedAlternativesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc43impl_productionblock_PredefinedAlternativesE+16)
.LBB1078_343:
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	b	.LBB1078_346
.LBB1078_344:
	ori	$a0, $zero, 24
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc18impl_CexpressionSQE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc18impl_CexpressionSQE+16)
.LBB1078_345:
	st.d	$a1, $a0, 0
	st.d	$fp, $a0, 8
	st.d	$s0, $a0, 16
.LBB1078_346:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB1078_347:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc17NilstorageclassesEv)
	jr	$t8
.LBB1078_348:
	pcalau12i	$a0, %pc_hi20(.L.str.496)
	addi.d	$a0, $a0, %pc_lo12(.L.str.496)
	pcalau12i	$a1, %pc_hi20(.L.str.497)
	addi.d	$a2, $a1, %pc_lo12(.L.str.497)
	lu12i.w	$a1, 2
	ori	$a1, $a1, 1783
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
.LBB1078_349:
	pcalau12i	$a0, %pc_hi20(.L.str.496)
	addi.d	$a0, $a0, %pc_lo12(.L.str.496)
	pcalau12i	$a1, %pc_hi20(.L.str.498)
	addi.d	$a2, $a1, %pc_lo12(.L.str.498)
	lu12i.w	$a1, 2
	ori	$a1, $a1, 2451
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
.Lfunc_end1078:
	.size	_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_, .Lfunc_end1078-_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI1078_0:
	.word	.LBB1078_348-.LJTI1078_0
	.word	.LBB1078_348-.LJTI1078_0
	.word	.LBB1078_348-.LJTI1078_0
	.word	.LBB1078_348-.LJTI1078_0
	.word	.LBB1078_348-.LJTI1078_0
	.word	.LBB1078_2-.LJTI1078_0
	.word	.LBB1078_315-.LJTI1078_0
	.word	.LBB1078_178-.LJTI1078_0
	.word	.LBB1078_304-.LJTI1078_0
	.word	.LBB1078_91-.LJTI1078_0
	.word	.LBB1078_314-.LJTI1078_0
	.word	.LBB1078_323-.LJTI1078_0
	.word	.LBB1078_285-.LJTI1078_0
	.word	.LBB1078_144-.LJTI1078_0
	.word	.LBB1078_109-.LJTI1078_0
	.word	.LBB1078_289-.LJTI1078_0
	.word	.LBB1078_69-.LJTI1078_0
	.word	.LBB1078_302-.LJTI1078_0
	.word	.LBB1078_347-.LJTI1078_0
	.word	.LBB1078_18-.LJTI1078_0
	.word	.LBB1078_306-.LJTI1078_0
	.word	.LBB1078_329-.LJTI1078_0
	.word	.LBB1078_328-.LJTI1078_0
	.word	.LBB1078_342-.LJTI1078_0
	.word	.LBB1078_75-.LJTI1078_0
	.word	.LBB1078_265-.LJTI1078_0
	.word	.LBB1078_340-.LJTI1078_0
	.word	.LBB1078_261-.LJTI1078_0
	.word	.LBB1078_10-.LJTI1078_0
	.word	.LBB1078_316-.LJTI1078_0
	.word	.LBB1078_3-.LJTI1078_0
	.word	.LBB1078_34-.LJTI1078_0
	.word	.LBB1078_341-.LJTI1078_0
	.word	.LBB1078_139-.LJTI1078_0
	.word	.LBB1078_103-.LJTI1078_0
	.word	.LBB1078_38-.LJTI1078_0
	.word	.LBB1078_162-.LJTI1078_0
	.word	.LBB1078_282-.LJTI1078_0
	.word	.LBB1078_51-.LJTI1078_0
	.word	.LBB1078_4-.LJTI1078_0
	.word	.LBB1078_125-.LJTI1078_0
	.word	.LBB1078_21-.LJTI1078_0
	.word	.LBB1078_324-.LJTI1078_0
	.word	.LBB1078_12-.LJTI1078_0
	.word	.LBB1078_275-.LJTI1078_0
	.word	.LBB1078_33-.LJTI1078_0
	.word	.LBB1078_234-.LJTI1078_0
	.word	.LBB1078_80-.LJTI1078_0
	.word	.LBB1078_207-.LJTI1078_0
	.word	.LBB1078_307-.LJTI1078_0
	.word	.LBB1078_344-.LJTI1078_0
	.word	.LBB1078_331-.LJTI1078_0
	.word	.LBB1078_241-.LJTI1078_0
	.word	.LBB1078_325-.LJTI1078_0
	.word	.LBB1078_269-.LJTI1078_0
	.word	.LBB1078_334-.LJTI1078_0
	.word	.LBB1078_295-.LJTI1078_0
	.word	.LBB1078_8-.LJTI1078_0
	.word	.LBB1078_338-.LJTI1078_0
	.word	.LBB1078_150-.LJTI1078_0
	.word	.LBB1078_318-.LJTI1078_0
	.word	.LBB1078_7-.LJTI1078_0
	.word	.LBB1078_61-.LJTI1078_0
	.word	.LBB1078_332-.LJTI1078_0
	.word	.LBB1078_11-.LJTI1078_0
	.word	.LBB1078_336-.LJTI1078_0
	.word	.LBB1078_335-.LJTI1078_0
	.word	.LBB1078_85-.LJTI1078_0
	.word	.LBB1078_263-.LJTI1078_0
	.word	.LBB1078_14-.LJTI1078_0
	.word	.LBB1078_27-.LJTI1078_0
	.word	.LBB1078_93-.LJTI1078_0
	.word	.LBB1078_45-.LJTI1078_0
	.word	.LBB1078_74-.LJTI1078_0
	.word	.LBB1078_39-.LJTI1078_0
	.word	.LBB1078_232-.LJTI1078_0
	.word	.LBB1078_333-.LJTI1078_0
	.word	.LBB1078_30-.LJTI1078_0
	.word	.LBB1078_337-.LJTI1078_0
	.word	.LBB1078_25-.LJTI1078_0
	.word	.LBB1078_201-.LJTI1078_0
	.word	.LBB1078_5-.LJTI1078_0
	.word	.LBB1078_143-.LJTI1078_0
	.word	.LBB1078_6-.LJTI1078_0
	.word	.LBB1078_203-.LJTI1078_0
	.word	.LBB1078_26-.LJTI1078_0
	.word	.LBB1078_9-.LJTI1078_0
	.word	.LBB1078_41-.LJTI1078_0
	.word	.LBB1078_20-.LJTI1078_0
	.word	.LBB1078_312-.LJTI1078_0
	.word	.LBB1078_292-.LJTI1078_0
	.word	.LBB1078_49-.LJTI1078_0
	.word	.LBB1078_310-.LJTI1078_0
	.word	.LBB1078_322-.LJTI1078_0
	.word	.LBB1078_330-.LJTI1078_0
	.word	.LBB1078_291-.LJTI1078_0
	.word	.LBB1078_319-.LJTI1078_0
	.word	.LBB1078_13-.LJTI1078_0
	.word	.LBB1078_15-.LJTI1078_0
	.word	.LBB1078_287-.LJTI1078_0
	.word	.LBB1078_16-.LJTI1078_0
	.word	.LBB1078_327-.LJTI1078_0
	.word	.LBB1078_134-.LJTI1078_0
	.word	.LBB1078_296-.LJTI1078_0
	.word	.LBB1078_19-.LJTI1078_0
	.word	.LBB1078_175-.LJTI1078_0
	.word	.LBB1078_204-.LJTI1078_0
	.word	.LBB1078_161-.LJTI1078_0
	.word	.LBB1078_326-.LJTI1078_0
	.word	.LBB1078_73-.LJTI1078_0
	.word	.LBB1078_102-.LJTI1078_0
	.word	.LBB1078_317-.LJTI1078_0
	.word	.LBB1078_202-.LJTI1078_0
	.word	.LBB1078_50-.LJTI1078_0
	.word	.LBB1078_22-.LJTI1078_0
	.word	.LBB1078_17-.LJTI1078_0
	.word	.LBB1078_53-.LJTI1078_0
	.word	.LBB1078_23-.LJTI1078_0
	.word	.LBB1078_301-.LJTI1078_0
	.word	.LBB1078_320-.LJTI1078_0
	.word	.LBB1078_321-.LJTI1078_0
	.word	.LBB1078_163-.LJTI1078_0
	.word	.LBB1078_104-.LJTI1078_0
	.word	.LBB1078_205-.LJTI1078_0
	.word	.LBB1078_299-.LJTI1078_0
	.word	.LBB1078_78-.LJTI1078_0
	.word	.LBB1078_76-.LJTI1078_0
	.word	.LBB1078_31-.LJTI1078_0
	.word	.LBB1078_29-.LJTI1078_0
	.word	.LBB1078_308-.LJTI1078_0
	.word	.LBB1078_32-.LJTI1078_0
	.word	.LBB1078_256-.LJTI1078_0
	.word	.LBB1078_99-.LJTI1078_0
	.word	.LBB1078_142-.LJTI1078_0
	.word	.LBB1078_36-.LJTI1078_0
	.word	.LBB1078_266-.LJTI1078_0
	.word	.LBB1078_260-.LJTI1078_0
	.word	.LBB1078_281-.LJTI1078_0
	.word	.LBB1078_278-.LJTI1078_0
	.word	.LBB1078_240-.LJTI1078_0
	.word	.LBB1078_165-.LJTI1078_0
	.word	.LBB1078_274-.LJTI1078_0
	.word	.LBB1078_273-.LJTI1078_0
	.word	.LBB1078_37-.LJTI1078_0
	.word	.LBB1078_294-.LJTI1078_0
	.word	.LBB1078_286-.LJTI1078_0
	.word	.LBB1078_40-.LJTI1078_0
	.word	.LBB1078_95-.LJTI1078_0
	.word	.LBB1078_24-.LJTI1078_0
	.word	.LBB1078_293-.LJTI1078_0
	.word	.LBB1078_297-.LJTI1078_0
	.word	.LBB1078_59-.LJTI1078_0
	.word	.LBB1078_159-.LJTI1078_0
	.word	.LBB1078_52-.LJTI1078_0
	.word	.LBB1078_64-.LJTI1078_0
	.word	.LBB1078_288-.LJTI1078_0
	.word	.LBB1078_46-.LJTI1078_0
	.word	.LBB1078_28-.LJTI1078_0
	.word	.LBB1078_54-.LJTI1078_0
	.word	.LBB1078_290-.LJTI1078_0
	.word	.LBB1078_97-.LJTI1078_0
	.word	.LBB1078_138-.LJTI1078_0
	.word	.LBB1078_42-.LJTI1078_0
	.word	.LBB1078_242-.LJTI1078_0
	.word	.LBB1078_209-.LJTI1078_0
	.word	.LBB1078_279-.LJTI1078_0
	.word	.LBB1078_206-.LJTI1078_0
	.word	.LBB1078_106-.LJTI1078_0
	.word	.LBB1078_62-.LJTI1078_0
	.word	.LBB1078_88-.LJTI1078_0
	.word	.LBB1078_68-.LJTI1078_0
	.word	.LBB1078_35-.LJTI1078_0
	.word	.LBB1078_313-.LJTI1078_0
	.word	.LBB1078_303-.LJTI1078_0
	.word	.LBB1078_311-.LJTI1078_0
	.word	.LBB1078_280-.LJTI1078_0
	.word	.LBB1078_105-.LJTI1078_0
	.word	.LBB1078_65-.LJTI1078_0
	.word	.LBB1078_77-.LJTI1078_0
	.word	.LBB1078_305-.LJTI1078_0
	.word	.LBB1078_47-.LJTI1078_0
	.word	.LBB1078_79-.LJTI1078_0
	.word	.LBB1078_87-.LJTI1078_0
	.word	.LBB1078_258-.LJTI1078_0
	.word	.LBB1078_168-.LJTI1078_0
	.word	.LBB1078_90-.LJTI1078_0
	.word	.LBB1078_107-.LJTI1078_0
	.word	.LBB1078_169-.LJTI1078_0
	.word	.LBB1078_55-.LJTI1078_0
	.word	.LBB1078_126-.LJTI1078_0
	.word	.LBB1078_56-.LJTI1078_0
	.word	.LBB1078_276-.LJTI1078_0
	.word	.LBB1078_235-.LJTI1078_0
	.word	.LBB1078_210-.LJTI1078_0
	.word	.LBB1078_110-.LJTI1078_0
	.word	.LBB1078_247-.LJTI1078_0
	.word	.LBB1078_272-.LJTI1078_0
	.word	.LBB1078_300-.LJTI1078_0
	.word	.LBB1078_124-.LJTI1078_0
	.word	.LBB1078_58-.LJTI1078_0
	.word	.LBB1078_67-.LJTI1078_0
	.word	.LBB1078_237-.LJTI1078_0
	.word	.LBB1078_130-.LJTI1078_0
	.word	.LBB1078_268-.LJTI1078_0
	.word	.LBB1078_283-.LJTI1078_0
	.word	.LBB1078_48-.LJTI1078_0
	.word	.LBB1078_43-.LJTI1078_0
	.word	.LBB1078_131-.LJTI1078_0
	.word	.LBB1078_146-.LJTI1078_0
	.word	.LBB1078_212-.LJTI1078_0
	.word	.LBB1078_155-.LJTI1078_0
	.word	.LBB1078_211-.LJTI1078_0
	.word	.LBB1078_171-.LJTI1078_0
	.word	.LBB1078_243-.LJTI1078_0
	.word	.LBB1078_44-.LJTI1078_0
	.word	.LBB1078_60-.LJTI1078_0
	.word	.LBB1078_149-.LJTI1078_0
	.word	.LBB1078_82-.LJTI1078_0
	.word	.LBB1078_217-.LJTI1078_0
	.word	.LBB1078_219-.LJTI1078_0
	.word	.LBB1078_141-.LJTI1078_0
	.word	.LBB1078_229-.LJTI1078_0
	.word	.LBB1078_216-.LJTI1078_0
	.word	.LBB1078_108-.LJTI1078_0
	.word	.LBB1078_112-.LJTI1078_0
	.word	.LBB1078_218-.LJTI1078_0
	.word	.LBB1078_236-.LJTI1078_0
	.word	.LBB1078_57-.LJTI1078_0
	.word	.LBB1078_66-.LJTI1078_0
	.word	.LBB1078_111-.LJTI1078_0
	.word	.LBB1078_118-.LJTI1078_0
	.word	.LBB1078_72-.LJTI1078_0
	.word	.LBB1078_84-.LJTI1078_0
	.word	.LBB1078_250-.LJTI1078_0
	.word	.LBB1078_252-.LJTI1078_0
	.word	.LBB1078_101-.LJTI1078_0
	.word	.LBB1078_255-.LJTI1078_0
	.word	.LBB1078_264-.LJTI1078_0
	.word	.LBB1078_284-.LJTI1078_0
	.word	.LBB1078_180-.LJTI1078_0
	.word	.LBB1078_277-.LJTI1078_0
	.word	.LBB1078_83-.LJTI1078_0
	.word	.LBB1078_259-.LJTI1078_0
	.word	.LBB1078_183-.LJTI1078_0
	.word	.LBB1078_92-.LJTI1078_0
	.word	.LBB1078_179-.LJTI1078_0
	.word	.LBB1078_71-.LJTI1078_0
	.word	.LBB1078_270-.LJTI1078_0
	.word	.LBB1078_271-.LJTI1078_0
	.word	.LBB1078_98-.LJTI1078_0
	.word	.LBB1078_248-.LJTI1078_0
	.word	.LBB1078_215-.LJTI1078_0
	.word	.LBB1078_213-.LJTI1078_0
	.word	.LBB1078_63-.LJTI1078_0
	.word	.LBB1078_70-.LJTI1078_0
	.word	.LBB1078_147-.LJTI1078_0
	.word	.LBB1078_151-.LJTI1078_0
	.word	.LBB1078_114-.LJTI1078_0
	.word	.LBB1078_81-.LJTI1078_0
	.word	.LBB1078_253-.LJTI1078_0
	.word	.LBB1078_89-.LJTI1078_0
	.word	.LBB1078_185-.LJTI1078_0
	.word	.LBB1078_121-.LJTI1078_0
	.word	.LBB1078_249-.LJTI1078_0
	.word	.LBB1078_246-.LJTI1078_0
	.word	.LBB1078_238-.LJTI1078_0
	.word	.LBB1078_115-.LJTI1078_0
	.word	.LBB1078_86-.LJTI1078_0
	.word	.LBB1078_127-.LJTI1078_0
	.word	.LBB1078_257-.LJTI1078_0
	.word	.LBB1078_133-.LJTI1078_0
	.word	.LBB1078_113-.LJTI1078_0
	.word	.LBB1078_189-.LJTI1078_0
	.word	.LBB1078_157-.LJTI1078_0
	.word	.LBB1078_172-.LJTI1078_0
	.word	.LBB1078_190-.LJTI1078_0
	.word	.LBB1078_187-.LJTI1078_0
	.word	.LBB1078_156-.LJTI1078_0
	.word	.LBB1078_225-.LJTI1078_0
	.word	.LBB1078_145-.LJTI1078_0
	.word	.LBB1078_223-.LJTI1078_0
	.word	.LBB1078_120-.LJTI1078_0
	.word	.LBB1078_239-.LJTI1078_0
	.word	.LBB1078_233-.LJTI1078_0
	.word	.LBB1078_117-.LJTI1078_0
	.word	.LBB1078_244-.LJTI1078_0
	.word	.LBB1078_251-.LJTI1078_0
	.word	.LBB1078_94-.LJTI1078_0
	.word	.LBB1078_152-.LJTI1078_0
	.word	.LBB1078_140-.LJTI1078_0
	.word	.LBB1078_119-.LJTI1078_0
	.word	.LBB1078_245-.LJTI1078_0
	.word	.LBB1078_208-.LJTI1078_0
	.word	.LBB1078_135-.LJTI1078_0
	.word	.LBB1078_100-.LJTI1078_0
	.word	.LBB1078_224-.LJTI1078_0
	.word	.LBB1078_184-.LJTI1078_0
	.word	.LBB1078_154-.LJTI1078_0
	.word	.LBB1078_220-.LJTI1078_0
	.word	.LBB1078_230-.LJTI1078_0
	.word	.LBB1078_116-.LJTI1078_0
	.word	.LBB1078_123-.LJTI1078_0
	.word	.LBB1078_122-.LJTI1078_0
	.word	.LBB1078_129-.LJTI1078_0
	.word	.LBB1078_137-.LJTI1078_0
	.word	.LBB1078_200-.LJTI1078_0
	.word	.LBB1078_181-.LJTI1078_0
	.word	.LBB1078_199-.LJTI1078_0
	.word	.LBB1078_228-.LJTI1078_0
	.word	.LBB1078_227-.LJTI1078_0
	.word	.LBB1078_128-.LJTI1078_0
	.word	.LBB1078_231-.LJTI1078_0
	.word	.LBB1078_164-.LJTI1078_0
	.word	.LBB1078_166-.LJTI1078_0
	.word	.LBB1078_226-.LJTI1078_0
	.word	.LBB1078_214-.LJTI1078_0
	.word	.LBB1078_191-.LJTI1078_0
	.word	.LBB1078_186-.LJTI1078_0
	.word	.LBB1078_221-.LJTI1078_0
	.word	.LBB1078_195-.LJTI1078_0
	.word	.LBB1078_182-.LJTI1078_0
	.word	.LBB1078_132-.LJTI1078_0
	.word	.LBB1078_170-.LJTI1078_0
	.word	.LBB1078_136-.LJTI1078_0
	.word	.LBB1078_192-.LJTI1078_0
	.word	.LBB1078_158-.LJTI1078_0
	.word	.LBB1078_148-.LJTI1078_0
	.word	.LBB1078_197-.LJTI1078_0
	.word	.LBB1078_160-.LJTI1078_0
	.word	.LBB1078_198-.LJTI1078_0
	.word	.LBB1078_174-.LJTI1078_0
	.word	.LBB1078_194-.LJTI1078_0
	.word	.LBB1078_188-.LJTI1078_0
	.word	.LBB1078_153-.LJTI1078_0
	.word	.LBB1078_173-.LJTI1078_0
	.word	.LBB1078_167-.LJTI1078_0
	.word	.LBB1078_176-.LJTI1078_0
	.word	.LBB1078_177-.LJTI1078_0
                                        # -- End function
	.text
	.globl	_ZNK2kc20impl_abstract_phylum9subphylumEi # -- Begin function _ZNK2kc20impl_abstract_phylum9subphylumEi
	.p2align	5
	.type	_ZNK2kc20impl_abstract_phylum9subphylumEi,@function
_ZNK2kc20impl_abstract_phylum9subphylumEi: # @_ZNK2kc20impl_abstract_phylum9subphylumEi
# %bb.0:
	move	$a0, $zero
	ret
.Lfunc_end1079:
	.size	_ZNK2kc20impl_abstract_phylum9subphylumEi, .Lfunc_end1079-_ZNK2kc20impl_abstract_phylum9subphylumEi
                                        # -- End function
	.globl	_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_ # -- Begin function _ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_,@function
_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_: # @_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_
# %bb.0:
	ret
.Lfunc_end1080:
	.size	_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_, .Lfunc_end1080-_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_
                                        # -- End function
	.globl	_ZN2kc20impl_abstract_phylum4freeEb # -- Begin function _ZN2kc20impl_abstract_phylum4freeEb
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum4freeEb,@function
_ZN2kc20impl_abstract_phylum4freeEb:    # @_ZN2kc20impl_abstract_phylum4freeEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 0
	move	$s0, $a1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	add.d	$a0, $a1, $a0
	ld.wu	$a0, $a0, 20
	slli.d	$a1, $a0, 4
	alsl.d	$a0, $a0, $a1, 3
	pcalau12i	$a1, %pc_hi20(_ZN2kc11phylum_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc11phylum_infoE)
	add.d	$a0, $a1, $a0
	ld.w	$a0, $a0, 16
	beqz	$a0, .LBB1081_2
# %bb.1:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1081_2:
	beqz	$s0, .LBB1081_6
# %bb.3:                                # %.preheader
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1081_6
# %bb.4:                                # %.lr.ph.preheader
	ori	$s0, $zero, 1
	.p2align	4, , 16
.LBB1081_5:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ori	$a1, $zero, 1
	pcaddu18i	$ra, %call36(_ZN2kc20impl_abstract_phylum4freeEb)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $s0
	jirl	$ra, $a2, 0
	addi.w	$s0, $s0, 1
	bnez	$a0, .LBB1081_5
.LBB1081_6:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 64
	move	$a0, $fp
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a1
.Lfunc_end1081:
	.size	_ZN2kc20impl_abstract_phylum4freeEb, .Lfunc_end1081-_ZN2kc20impl_abstract_phylum4freeEb
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc20impl_abstract_phylum2eqEPKS0_ # -- Begin function _ZNK2kc20impl_abstract_phylum2eqEPKS0_
	.p2align	5
	.type	_ZNK2kc20impl_abstract_phylum2eqEPKS0_,@function
_ZNK2kc20impl_abstract_phylum2eqEPKS0_: # @_ZNK2kc20impl_abstract_phylum2eqEPKS0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ori	$s1, $zero, 1
	beq	$a0, $a1, .LBB1082_5
# %bb.1:
	move	$fp, $a1
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ld.d	$a1, $fp, 0
	ld.d	$a1, $a1, 0
	move	$s2, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bne	$s2, $a0, .LBB1082_4
# %bb.2:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	add.d	$a0, $a1, $a0
	ld.wu	$a0, $a0, 20
	slli.d	$a1, $a0, 4
	alsl.d	$a0, $a0, $a1, 3
	pcalau12i	$a1, %pc_hi20(_ZN2kc11phylum_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc11phylum_infoE)
	add.d	$a0, $a1, $a0
	ld.w	$a0, $a0, 16
	beqz	$a0, .LBB1082_6
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZN2kc26kc_storageclass_still_uniqE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc26kc_storageclass_still_uniqE)
	ldx.bu	$a0, $a1, $a0
	beqz	$a0, .LBB1082_6
.LBB1082_4:
	move	$s1, $zero
.LBB1082_5:                             # %.critedge
	move	$a0, $s1
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB1082_6:
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1082_5
# %bb.7:                                # %.lr.ph.preheader
	move	$s3, $a0
	move	$s2, $zero
	.p2align	4, , 16
.LBB1082_8:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $s2
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	beqz	$a0, .LBB1082_5
# %bb.9:                                #   in Loop: Header=BB1082_8 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	addi.w	$s2, $s2, 1
	move	$a0, $s0
	move	$a1, $s2
	jirl	$ra, $a2, 0
	move	$s3, $a0
	bnez	$a0, .LBB1082_8
	b	.LBB1082_5
.Lfunc_end1082:
	.size	_ZNK2kc20impl_abstract_phylum2eqEPKS0_, .Lfunc_end1082-_ZNK2kc20impl_abstract_phylum2eqEPKS0_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE # -- Begin function _ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE,@function
_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE: # @_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	pcalau12i	$a2, %got_pc_hi20(stdout)
	ld.d	$a2, $a2, %got_pc_lo12(stdout)
	ld.d	$a2, $a2, 0
	move	$s0, $a0
	sltui	$a0, $a1, 1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $a2, $a0
	or	$fp, $a0, $a1
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	move	$a0, $s0
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$s3, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	beqz	$a0, .LBB1083_2
# %bb.1:
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1083_5
.LBB1083_2:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$s4, $zero, 56
	mul.d	$a0, $a0, $s4
	add.d	$a0, $s3, $a0
	ld.w	$a0, $a0, 20
	addi.d	$a0, $a0, -1
	ori	$a1, $zero, 4
	bltu	$a1, $a0, .LBB1083_16
# %bb.3:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI1083_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI1083_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB1083_4:
	pcalau12i	$a0, %pc_hi20(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$a2, $a0, %pc_lo12(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$a3, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str.504)
	addi.d	$a1, $a0, %pc_lo12(.L.str.504)
	b	.LBB1083_14
.LBB1083_5:
	ld.d	$a0, $s0, 0
	pcalau12i	$a1, %pc_hi20(_ZN2kcL14kc_indentationB5cxx11E)
	addi.d	$s1, $a1, %pc_lo12(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$s2, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	ldx.d	$a3, $s3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.504)
	addi.d	$a1, $a0, %pc_lo12(.L.str.504)
	move	$a0, $fp
	move	$a2, $s2
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 8
	srli.d	$a0, $a0, 1
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	beq	$a0, $a1, .LBB1083_77
# %bb.6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit
	pcalau12i	$a0, %pc_hi20(.L.str.502)
	addi.d	$a1, $a0, %pc_lo12(.L.str.502)
	ori	$a2, $zero, 2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 8
	addi.d	$a1, $a0, -2
	addi.d	$s4, $sp, 24
	st.d	$s4, $sp, 8
	ld.d	$s2, $s1, 0
	sltu	$a2, $a1, $a0
	masknez	$a0, $a0, $a2
	maskeqz	$a1, $a1, $a2
	or	$s3, $a1, $a0
	ori	$a1, $zero, 16
	st.d	$s3, $sp, 40
	move	$a0, $s4
	bltu	$s3, $a1, .LBB1083_8
# %bb.7:                                # %.noexc10.i.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB1083_8:                             # %._crit_edge.i.i.i
	beqz	$s3, .LBB1083_27
# %bb.9:                                # %._crit_edge.i.i.i
	ori	$a1, $zero, 1
	bne	$s3, $a1, .LBB1083_26
# %bb.10:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB1083_27
.LBB1083_11:
	pcalau12i	$a0, %pc_hi20(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$a2, $a0, %pc_lo12(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$a3, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str.503)
	addi.d	$a1, $a0, %pc_lo12(.L.str.503)
	b	.LBB1083_14
.LBB1083_12:
	pcalau12i	$a0, %pc_hi20(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$a2, $a0, %pc_lo12(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$a3, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str.506)
	addi.d	$a1, $a0, %pc_lo12(.L.str.506)
	b	.LBB1083_14
.LBB1083_13:
	pcalau12i	$a0, %pc_hi20(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$a2, $a0, %pc_lo12(_ZN2kcL14kc_indentationB5cxx11E)
	ld.w	$a3, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str.505)
	addi.d	$a1, $a0, %pc_lo12(.L.str.505)
.LBB1083_14:
	move	$a0, $fp
.LBB1083_15:
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	pcaddu18i	$t8, %call36(fprintf)
	jr	$t8
.LBB1083_16:
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	ld.d	$a1, $s0, 0
	pcalau12i	$a2, %pc_hi20(_ZN2kcL14kc_indentationB5cxx11E)
	addi.d	$s5, $a2, %pc_lo12(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$s1, $s5, 0
	ld.d	$a1, $a1, 0
	move	$s2, $a0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	mul.d	$a0, $a0, $s4
	ldx.d	$a3, $s3, $a0
	beqz	$s2, .LBB1083_54
# %bb.17:
	pcalau12i	$a0, %pc_hi20(.L.str.517)
	addi.d	$a1, $a0, %pc_lo12(.L.str.517)
	move	$a0, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 8
	srli.d	$a0, $a0, 1
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	beq	$a0, $a1, .LBB1083_77
# %bb.18:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit39
	pcalau12i	$a0, %pc_hi20(_ZN2kcL14kc_indentationB5cxx11E)
	addi.d	$s1, $a0, %pc_lo12(_ZN2kcL14kc_indentationB5cxx11E)
	pcalau12i	$a0, %pc_hi20(.L.str.507)
	addi.d	$a1, $a0, %pc_lo12(.L.str.507)
	ori	$a2, $zero, 2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1083_21
# %bb.19:                               # %.lr.ph.preheader
	ori	$s2, $zero, 1
	.p2align	4, , 16
.LBB1083_20:                            # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $s2
	jirl	$ra, $a2, 0
	addi.w	$s2, $s2, 1
	bnez	$a0, .LBB1083_20
.LBB1083_21:                            # %._crit_edge
	ld.d	$a0, $s1, 8
	addi.d	$a1, $a0, -2
	addi.d	$s3, $sp, 24
	st.d	$s3, $sp, 8
	ld.d	$s0, $s1, 0
	sltu	$a2, $a1, $a0
	masknez	$a0, $a0, $a2
	maskeqz	$a1, $a1, $a2
	or	$s2, $a1, $a0
	ori	$a1, $zero, 16
	st.d	$s2, $sp, 40
	move	$a0, $s3
	bltu	$s2, $a1, .LBB1083_23
# %bb.22:                               # %.noexc10.i.i42
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB1083_23:                            # %._crit_edge.i.i.i41
	beqz	$s2, .LBB1083_61
# %bb.24:                               # %._crit_edge.i.i.i41
	ori	$a1, $zero, 1
	bne	$s2, $a1, .LBB1083_60
# %bb.25:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB1083_61
.LBB1083_26:
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1083_27:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s1, 0
	addi.d	$s2, $s1, 16
	beq	$a0, $s2, .LBB1083_31
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 8
	beq	$a1, $s4, .LBB1083_40
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	vld	$vr0, $sp, 16
	ld.d	$a2, $s1, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
	beqz	$a0, .LBB1083_33
# %bb.30:
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s4, .LBB1083_34
	b	.LBB1083_35
.LBB1083_31:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 8
	beq	$a1, $s4, .LBB1083_40
# %bb.32:                               # %.thread.i
	vld	$vr0, $sp, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
.LBB1083_33:
	st.d	$s4, $sp, 8
	move	$a0, $s4
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s4, .LBB1083_35
.LBB1083_34:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1083_35:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list11fprint_listEP8_IO_FILE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 8
	addi.d	$a1, $a0, -2
	addi.d	$s3, $sp, 24
	st.d	$s3, $sp, 8
	ld.d	$fp, $s1, 0
	sltu	$a2, $a1, $a0
	masknez	$a0, $a0, $a2
	maskeqz	$a1, $a1, $a2
	or	$s0, $a1, $a0
	ori	$a1, $zero, 16
	st.d	$s0, $sp, 40
	move	$a0, $s3
	bltu	$s0, $a1, .LBB1083_37
# %bb.36:                               # %.noexc10.i.i26
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB1083_37:                            # %._crit_edge.i.i.i25
	beqz	$s0, .LBB1083_44
# %bb.38:                               # %._crit_edge.i.i.i25
	ori	$a1, $zero, 1
	bne	$s0, $a1, .LBB1083_43
# %bb.39:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB1083_44
.LBB1083_40:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB1083_56
# %bb.41:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB1083_55
# %bb.42:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB1083_56
.LBB1083_43:
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1083_44:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit27
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s1, 0
	beq	$a0, $s2, .LBB1083_48
# %bb.45:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i28
	ld.d	$a1, $sp, 8
	beq	$a1, $s3, .LBB1083_51
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i29
	vld	$vr0, $sp, 16
	ld.d	$a2, $s1, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
	beqz	$a0, .LBB1083_50
# %bb.47:
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s3, .LBB1083_59
	b	.LBB1083_76
.LBB1083_48:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i33
	ld.d	$a1, $sp, 8
	beq	$a1, $s3, .LBB1083_51
# %bb.49:                               # %.thread.i34
	vld	$vr0, $sp, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
.LBB1083_50:
	st.d	$s3, $sp, 8
	move	$a0, $s3
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s3, .LBB1083_59
	b	.LBB1083_76
.LBB1083_51:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB1083_58
# %bb.52:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB1083_57
# %bb.53:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB1083_58
.LBB1083_54:
	pcalau12i	$a0, %pc_hi20(.L.str.516)
	addi.d	$a1, $a0, %pc_lo12(.L.str.516)
	move	$a0, $fp
	move	$a2, $s1
	b	.LBB1083_15
.LBB1083_55:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1083_56:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $s1, 0
	st.d	$a0, $s1, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s4, .LBB1083_34
	b	.LBB1083_35
.LBB1083_57:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1083_58:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i31
	ld.d	$a0, $sp, 16
	ld.d	$a1, $s1, 0
	st.d	$a0, $s1, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s3, .LBB1083_76
.LBB1083_59:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB1083_76
.LBB1083_60:
	move	$a1, $s0
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1083_61:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit43
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s1, 0
	addi.d	$a1, $s1, 16
	beq	$a0, $a1, .LBB1083_65
# %bb.62:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i44
	ld.d	$a1, $sp, 8
	beq	$a1, $s3, .LBB1083_68
# %bb.63:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i45
	vld	$vr0, $sp, 16
	ld.d	$a2, $s1, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
	beqz	$a0, .LBB1083_67
# %bb.64:
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
	b	.LBB1083_73
.LBB1083_65:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i49
	ld.d	$a1, $sp, 8
	beq	$a1, $s3, .LBB1083_68
# %bb.66:                               # %.thread.i50
	vld	$vr0, $sp, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
.LBB1083_67:
	st.d	$s3, $sp, 8
	move	$a0, $s3
	b	.LBB1083_73
.LBB1083_68:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB1083_72
# %bb.69:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB1083_71
# %bb.70:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB1083_72
.LBB1083_71:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1083_72:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i47
	ld.d	$a0, $sp, 16
	ld.d	$a1, $s1, 0
	st.d	$a0, $s1, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
.LBB1083_73:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit51
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s3, .LBB1083_75
# %bb.74:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i52
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1083_75:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit54
	ld.d	$a2, $s1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.518)
	addi.d	$a1, $a0, %pc_lo12(.L.str.518)
	move	$a0, $fp
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
.LBB1083_76:
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB1083_77:
	pcalau12i	$a0, %pc_hi20(.L.str.521)
	addi.d	$a0, $a0, %pc_lo12(.L.str.521)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end1083:
	.size	_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE, .Lfunc_end1083-_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI1083_0:
	.word	.LBB1083_4-.LJTI1083_0
	.word	.LBB1083_4-.LJTI1083_0
	.word	.LBB1083_12-.LJTI1083_0
	.word	.LBB1083_13-.LJTI1083_0
	.word	.LBB1083_11-.LJTI1083_0
                                        # -- End function
	.text
	.globl	_ZN2kc18impl_abstract_list11fprint_listEP8_IO_FILE # -- Begin function _ZN2kc18impl_abstract_list11fprint_listEP8_IO_FILE
	.p2align	5
	.type	_ZN2kc18impl_abstract_list11fprint_listEP8_IO_FILE,@function
_ZN2kc18impl_abstract_list11fprint_listEP8_IO_FILE: # @_ZN2kc18impl_abstract_list11fprint_listEP8_IO_FILE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	pcalau12i	$a2, %got_pc_hi20(stdout)
	ld.d	$a2, $a2, %got_pc_lo12(stdout)
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a2, 0
	sltui	$a3, $a1, 1
	ld.d	$a4, $a0, 88
	masknez	$a0, $a1, $a3
	maskeqz	$a1, $a2, $a3
	or	$fp, $a1, $a0
	move	$a0, $s0
	jirl	$ra, $a4, 0
	pcalau12i	$a1, %pc_hi20(_ZN2kcL14kc_indentationB5cxx11E)
	addi.d	$s1, $a1, %pc_lo12(_ZN2kcL14kc_indentationB5cxx11E)
	ld.d	$a1, $s1, 8
	bstrins.d	$a1, $zero, 0, 0
	addi.w	$a2, $zero, -2
	beqz	$a0, .LBB1084_3
# %bb.1:
	lu52i.d	$a0, $a2, 1023
	beq	$a1, $a0, .LBB1084_44
# %bb.2:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit
	pcalau12i	$a0, %pc_hi20(.L.str.508)
	addi.d	$a1, $a0, %pc_lo12(.L.str.508)
	ori	$a2, $zero, 2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$s1, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	ldx.d	$a3, $a1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.516)
	addi.d	$a1, $a0, %pc_lo12(.L.str.516)
	move	$a0, $fp
	move	$a2, $s1
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	pcaddu18i	$t8, %call36(fprintf)
	jr	$t8
.LBB1084_3:
	lu52i.d	$a0, $a2, 1023
	beq	$a1, $a0, .LBB1084_44
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit7
	pcalau12i	$a0, %pc_hi20(.L.str.509)
	addi.d	$a1, $a0, %pc_lo12(.L.str.509)
	ori	$a2, $zero, 2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$s2, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a1, $zero, 56
	mul.d	$a0, $a0, $a1
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	ldx.d	$a3, $a1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.504)
	addi.d	$a1, $a0, %pc_lo12(.L.str.504)
	move	$a0, $fp
	move	$a2, $s2
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 8
	addi.d	$a1, $a0, -2
	addi.d	$s5, $sp, 24
	st.d	$s5, $sp, 8
	ld.d	$s2, $s1, 0
	sltu	$a2, $a1, $a0
	masknez	$a0, $a0, $a2
	maskeqz	$a1, $a1, $a2
	or	$s3, $a1, $a0
	ori	$a1, $zero, 16
	st.d	$s3, $sp, 40
	move	$a0, $s5
	bltu	$s3, $a1, .LBB1084_6
# %bb.5:                                # %.noexc10.i.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB1084_6:                             # %._crit_edge.i.i.i
	beqz	$s3, .LBB1084_10
# %bb.7:                                # %._crit_edge.i.i.i
	ori	$a1, $zero, 1
	bne	$s3, $a1, .LBB1084_9
# %bb.8:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB1084_10
.LBB1084_9:
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1084_10:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s1, 0
	addi.d	$s4, $s1, 16
	beq	$a0, $s4, .LBB1084_14
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 8
	beq	$a1, $s5, .LBB1084_24
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	vld	$vr0, $sp, 16
	ld.d	$a2, $s1, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
	beqz	$a0, .LBB1084_16
# %bb.13:
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s5, .LBB1084_17
	b	.LBB1084_18
.LBB1084_14:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 8
	beq	$a1, $s5, .LBB1084_24
# %bb.15:                               # %.thread.i
	vld	$vr0, $sp, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
.LBB1084_16:
	st.d	$s5, $sp, 8
	move	$a0, $s5
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s5, .LBB1084_18
.LBB1084_17:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1084_18:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $s1, 8
	srli.d	$a0, $a0, 1
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 511
	beq	$a0, $a1, .LBB1084_44
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit8
	pcalau12i	$a0, %pc_hi20(.L.str.502)
	addi.d	$a1, $a0, %pc_lo12(.L.str.502)
	ori	$a2, $zero, 2
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 8
	addi.d	$a1, $a0, -2
	addi.d	$s5, $sp, 24
	st.d	$s5, $sp, 8
	ld.d	$s2, $s1, 0
	sltu	$a2, $a1, $a0
	masknez	$a0, $a0, $a2
	maskeqz	$a1, $a1, $a2
	or	$s3, $a1, $a0
	ori	$a1, $zero, 16
	st.d	$s3, $sp, 40
	move	$a0, $s5
	bltu	$s3, $a1, .LBB1084_21
# %bb.20:                               # %.noexc10.i.i11
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB1084_21:                            # %._crit_edge.i.i.i10
	beqz	$s3, .LBB1084_28
# %bb.22:                               # %._crit_edge.i.i.i10
	ori	$a1, $zero, 1
	bne	$s3, $a1, .LBB1084_27
# %bb.23:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB1084_28
.LBB1084_24:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB1084_41
# %bb.25:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB1084_40
# %bb.26:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB1084_41
.LBB1084_27:
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1084_28:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit12
	ld.d	$a0, $sp, 40
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s1, 0
	beq	$a0, $s4, .LBB1084_32
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i13
	ld.d	$a1, $sp, 8
	beq	$a1, $s5, .LBB1084_37
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i14
	vld	$vr0, $sp, 16
	ld.d	$a2, $s1, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
	beqz	$a0, .LBB1084_34
# %bb.31:
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s5, .LBB1084_35
	b	.LBB1084_36
.LBB1084_32:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i18
	ld.d	$a1, $sp, 8
	beq	$a1, $s5, .LBB1084_37
# %bb.33:                               # %.thread.i19
	vld	$vr0, $sp, 16
	st.d	$a1, $s1, 0
	vst	$vr0, $s1, 8
.LBB1084_34:
	st.d	$s5, $sp, 8
	move	$a0, $s5
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s5, .LBB1084_36
.LBB1084_35:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB1084_36:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit23
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list11fprint_listEP8_IO_FILE)
	jirl	$ra, $ra, 0
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB1084_37:
	ld.d	$a2, $sp, 16
	beqz	$a2, .LBB1084_43
# %bb.38:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB1084_42
# %bb.39:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB1084_43
.LBB1084_40:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1084_41:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $s1, 0
	st.d	$a0, $s1, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s5, .LBB1084_17
	b	.LBB1084_18
.LBB1084_42:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB1084_43:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i16
	ld.d	$a0, $sp, 16
	ld.d	$a1, $s1, 0
	st.d	$a0, $s1, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s5, .LBB1084_35
	b	.LBB1084_36
.LBB1084_44:
	pcalau12i	$a0, %pc_hi20(.L.str.521)
	addi.d	$a0, $a0, %pc_lo12(.L.str.521)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end1084:
	.size	_ZN2kc18impl_abstract_list11fprint_listEP8_IO_FILE, .Lfunc_end1084-_ZN2kc18impl_abstract_list11fprint_listEP8_IO_FILE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_abstract_phylum5printEv # -- Begin function _ZN2kc20impl_abstract_phylum5printEv
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum5printEv,@function
_ZN2kc20impl_abstract_phylum5printEv:   # @_ZN2kc20impl_abstract_phylum5printEv
	.cfi_startproc
# %bb.0:
	pcalau12i	$a1, %got_pc_hi20(stdout)
	ld.d	$a1, $a1, %got_pc_lo12(stdout)
	ld.d	$a1, $a1, 0
	pcaddu18i	$t8, %call36(_ZN2kc20impl_abstract_phylum6fprintEP8_IO_FILE)
	jr	$t8
.Lfunc_end1085:
	.size	_ZN2kc20impl_abstract_phylum5printEv, .Lfunc_end1085-_ZN2kc20impl_abstract_phylum5printEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_abstract_list6lengthEv # -- Begin function _ZNK2kc18impl_abstract_list6lengthEv
	.p2align	5
	.type	_ZNK2kc18impl_abstract_list6lengthEv,@function
_ZNK2kc18impl_abstract_list6lengthEv:   # @_ZNK2kc18impl_abstract_list6lengthEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	addi.d	$fp, $zero, -1
	.p2align	4, , 16
.LBB1086_1:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	jirl	$ra, $a2, 0
	addi.w	$fp, $fp, 1
	bnez	$a0, .LBB1086_1
# %bb.2:
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1086:
	.size	_ZNK2kc18impl_abstract_list6lengthEv, .Lfunc_end1086-_ZNK2kc18impl_abstract_list6lengthEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_abstract_list8freelistEv # -- Begin function _ZN2kc18impl_abstract_list8freelistEv
	.p2align	5
	.type	_ZN2kc18impl_abstract_list8freelistEv,@function
_ZN2kc18impl_abstract_list8freelistEv:  # @_ZN2kc18impl_abstract_list8freelistEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$s1, $zero, 56
	pcalau12i	$a0, %pc_hi20(_ZN2kc13operator_infoE)
	addi.d	$s2, $a0, %pc_lo12(_ZN2kc13operator_infoE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc11phylum_infoE)
	addi.d	$s3, $a0, %pc_lo12(_ZN2kc11phylum_infoE)
	b	.LBB1087_2
	.p2align	4, , 16
.LBB1087_1:                             # %_ZN2kc20impl_abstract_phylum4freeEb.exit
                                        #   in Loop: Header=BB1087_2 Depth=1
	move	$fp, $s0
	beqz	$s0, .LBB1087_4
.LBB1087_2:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	ld.d	$a1, $fp, 0
	ld.d	$a1, $a1, 0
	move	$s0, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	mul.d	$a0, $a0, $s1
	add.d	$a0, $s2, $a0
	ld.wu	$a0, $a0, 20
	slli.d	$a1, $a0, 4
	alsl.d	$a0, $a0, $a1, 3
	add.d	$a0, $s3, $a0
	ld.w	$a0, $a0, 16
	bnez	$a0, .LBB1087_1
# %bb.3:                                #   in Loop: Header=BB1087_2 Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 64
	move	$a0, $fp
	jirl	$ra, $a1, 0
	b	.LBB1087_1
.LBB1087_4:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1087:
	.size	_ZN2kc18impl_abstract_list8freelistEv, .Lfunc_end1087-_ZN2kc18impl_abstract_list8freelistEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE # -- Begin function _ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE
	.p2align	5
	.type	_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE,@function
_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE: # @_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 8
	move	$fp, $a2
	move	$s0, $a1
	ori	$a1, $zero, 1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB1088_2
# %bb.1:
	move	$s2, $a0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s1
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s1, $a0
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	move	$a0, $fp
	move	$a1, $s1
	move	$a3, $zero
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	move	$a7, $zero
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_)
	jr	$t8
.LBB1088_2:                             # %common.ret8
	move	$a0, $s0
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1088:
	.size	_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE, .Lfunc_end1088-_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_abstract_list10do_reverseEPKNS_20impl_abstract_phylumENS_14enum_operatorsE # -- Begin function _ZNK2kc18impl_abstract_list10do_reverseEPKNS_20impl_abstract_phylumENS_14enum_operatorsE
	.p2align	5
	.type	_ZNK2kc18impl_abstract_list10do_reverseEPKNS_20impl_abstract_phylumENS_14enum_operatorsE,@function
_ZNK2kc18impl_abstract_list10do_reverseEPKNS_20impl_abstract_phylumENS_14enum_operatorsE: # @_ZNK2kc18impl_abstract_list10do_reverseEPKNS_20impl_abstract_phylumENS_14enum_operatorsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 8
	move	$fp, $a2
	move	$s1, $a1
	ori	$a1, $zero, 1
	move	$a0, $s0
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB1089_2
	.p2align	4, , 16
.LBB1089_1:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $fp
	move	$a2, $s1
	move	$a3, $zero
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	move	$a7, $zero
	pcaddu18i	$ra, %call36(_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a2, $a1, 8
	move	$s1, $a0
	ori	$a1, $zero, 1
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $s0
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1089_1
.LBB1089_2:                             # %._crit_edge
	move	$a0, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1089:
	.size	_ZNK2kc18impl_abstract_list10do_reverseEPKNS_20impl_abstract_phylumENS_14enum_operatorsE, .Lfunc_end1089-_ZNK2kc18impl_abstract_list10do_reverseEPKNS_20impl_abstract_phylumENS_14enum_operatorsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_abstract_list4lastEv # -- Begin function _ZNK2kc18impl_abstract_list4lastEv
	.p2align	5
	.type	_ZNK2kc18impl_abstract_list4lastEv,@function
_ZNK2kc18impl_abstract_list4lastEv:     # @_ZNK2kc18impl_abstract_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1090_3
	.p2align	4, , 16
.LBB1090_1:                             # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1090_1
# %bb.2:
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a2
.LBB1090_3:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1090:
	.size	_ZNK2kc18impl_abstract_list4lastEv, .Lfunc_end1090-_ZNK2kc18impl_abstract_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE # -- Begin function _ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE
	.p2align	5
	.type	_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE,@function
_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE: # @_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 8
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	move	$a1, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB1091_2
# %bb.1:
	move	$s2, $a0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $s1
	jirl	$ra, $a2, 0
	move	$s1, $a0
	move	$a0, $s2
	jirl	$ra, $s0, 0
	move	$s2, $a0
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	move	$a0, $fp
	move	$a1, $s2
	move	$a3, $zero
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	move	$a7, $zero
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_)
	jr	$t8
.LBB1091_2:                             # %common.ret9
	move	$a0, $s1
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1091:
	.size	_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE, .Lfunc_end1091-_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE # -- Begin function _ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE
	.p2align	5
	.type	_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE,@function
_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE: # @_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	.p2align	4, , 16
.LBB1092_1:                             # %tailrecurse
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s1
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1092_4
# %bb.2:                                #   in Loop: Header=BB1092_1 Depth=1
	move	$s2, $a0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $s1
	jirl	$ra, $a2, 0
	move	$s1, $a0
	move	$a0, $s2
	jirl	$ra, $s0, 0
	beqz	$a0, .LBB1092_1
# %bb.3:
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	move	$a0, $fp
	move	$a1, $s2
	move	$a3, $zero
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	move	$a7, $zero
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_)
	jr	$t8
.LBB1092_4:                             # %common.ret33
	move	$a0, $s1
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1092:
	.size	_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE, .Lfunc_end1092-_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_abstract_list9do_appendEPNS_20impl_abstract_phylumEPS0_ # -- Begin function _ZN2kc18impl_abstract_list9do_appendEPNS_20impl_abstract_phylumEPS0_
	.p2align	5
	.type	_ZN2kc18impl_abstract_list9do_appendEPNS_20impl_abstract_phylumEPS0_,@function
_ZN2kc18impl_abstract_list9do_appendEPNS_20impl_abstract_phylumEPS0_: # @_ZN2kc18impl_abstract_list9do_appendEPNS_20impl_abstract_phylumEPS0_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB1093_2
	.p2align	4, , 16
.LBB1093_1:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1093_1
.LBB1093_2:                             # %._crit_edge
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1093:
	.size	_ZN2kc18impl_abstract_list9do_appendEPNS_20impl_abstract_phylumEPS0_, .Lfunc_end1093-_ZN2kc18impl_abstract_list9do_appendEPNS_20impl_abstract_phylumEPS0_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE # -- Begin function _ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE
	.p2align	5
	.type	_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE,@function
_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE: # @_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a4, $a0, 8
	move	$fp, $a3
	move	$s0, $a2
	move	$s2, $a1
	move	$a0, $s1
	move	$a1, $zero
	jirl	$ra, $a4, 0
	beqz	$a0, .LBB1094_4
# %bb.1:
	move	$s3, $a0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s2
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1094_3
# %bb.2:
	move	$s4, $a0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $s1
	jirl	$ra, $a2, 0
	ld.d	$a1, $s2, 0
	ld.d	$a2, $a1, 8
	move	$s1, $a0
	ori	$a1, $zero, 1
	move	$a0, $s2
	jirl	$ra, $a2, 0
	move	$s2, $a0
	move	$a0, $s3
	move	$a1, $s4
	jirl	$ra, $s0, 0
	move	$s3, $a0
	move	$a0, $s1
	move	$a1, $s2
	move	$a2, $s0
	move	$a3, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	move	$a0, $fp
	move	$a1, $s3
	move	$a3, $zero
	move	$a4, $zero
	move	$a5, $zero
	move	$a6, $zero
	move	$a7, $zero
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_)
	jr	$t8
.LBB1094_3:
	move	$s1, $zero
.LBB1094_4:                             # %common.ret18
	move	$a0, $s1
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end1094:
	.size	_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE, .Lfunc_end1094-_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E # -- Begin function _ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E,@function
_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E: # @_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 8
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	move	$fp, $a1
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB1095_2
# %bb.1:
	move	$s1, $a0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $fp
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a2
.LBB1095_2:                             # %common.ret10
	move	$a0, $fp
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end1095:
	.size	_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E, .Lfunc_end1095-_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_23impl_phylumdeclarationsES2_ # -- Begin function _ZN2kc6concatEPKNS_23impl_phylumdeclarationsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_23impl_phylumdeclarationsES2_,@function
_ZN2kc6concatEPKNS_23impl_phylumdeclarationsES2_: # @_ZN2kc6concatEPKNS_23impl_phylumdeclarationsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 12
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1096_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_phylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_phylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1096_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1096:
	.size	_ZN2kc6concatEPKNS_23impl_phylumdeclarationsES2_, .Lfunc_end1096-_ZN2kc6concatEPKNS_23impl_phylumdeclarationsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc23impl_phylumdeclarations7reverseEv # -- Begin function _ZNK2kc23impl_phylumdeclarations7reverseEv
	.p2align	5
	.type	_ZNK2kc23impl_phylumdeclarations7reverseEv,@function
_ZNK2kc23impl_phylumdeclarations7reverseEv: # @_ZNK2kc23impl_phylumdeclarations7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc23impl_phylumdeclarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc23impl_phylumdeclarationsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1097_2
	.p2align	4, , 16
.LBB1097_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1097_1
	b	.LBB1097_3
.LBB1097_2:
	move	$s1, $s0
.LBB1097_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_phylumdeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc23impl_phylumdeclarationsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1097:
	.size	_ZNK2kc23impl_phylumdeclarations7reverseEv, .Lfunc_end1097-_ZNK2kc23impl_phylumdeclarations7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc23impl_phylumdeclarations4lastEv # -- Begin function _ZNK2kc23impl_phylumdeclarations4lastEv
	.p2align	5
	.type	_ZNK2kc23impl_phylumdeclarations4lastEv,@function
_ZNK2kc23impl_phylumdeclarations4lastEv: # @_ZNK2kc23impl_phylumdeclarations4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1098_5
	.p2align	4, , 16
.LBB1098_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1098_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1098_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_phylumdeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_phylumdeclarationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1098_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1098_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1098:
	.size	_ZNK2kc23impl_phylumdeclarations4lastEv, .Lfunc_end1098-_ZNK2kc23impl_phylumdeclarations4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc23impl_phylumdeclarations6is_nilEv # -- Begin function _ZNK2kc23impl_phylumdeclarations6is_nilEv
	.p2align	5
	.type	_ZNK2kc23impl_phylumdeclarations6is_nilEv,@function
_ZNK2kc23impl_phylumdeclarations6is_nilEv: # @_ZNK2kc23impl_phylumdeclarations6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1099:
	.size	_ZNK2kc23impl_phylumdeclarations6is_nilEv, .Lfunc_end1099-_ZNK2kc23impl_phylumdeclarations6is_nilEv
                                        # -- End function
	.globl	_ZN2kc23impl_phylumdeclarations3mapEPFPNS_22impl_phylumdeclarationES2_E # -- Begin function _ZN2kc23impl_phylumdeclarations3mapEPFPNS_22impl_phylumdeclarationES2_E
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarations3mapEPFPNS_22impl_phylumdeclarationES2_E,@function
_ZN2kc23impl_phylumdeclarations3mapEPFPNS_22impl_phylumdeclarationES2_E: # @_ZN2kc23impl_phylumdeclarations3mapEPFPNS_22impl_phylumdeclarationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 12
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1100_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_phylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_phylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1100_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1100:
	.size	_ZN2kc23impl_phylumdeclarations3mapEPFPNS_22impl_phylumdeclarationES2_E, .Lfunc_end1100-_ZN2kc23impl_phylumdeclarations3mapEPFPNS_22impl_phylumdeclarationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_phylumdeclarations6filterEPFbPNS_22impl_phylumdeclarationEE # -- Begin function _ZN2kc23impl_phylumdeclarations6filterEPFbPNS_22impl_phylumdeclarationEE
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarations6filterEPFbPNS_22impl_phylumdeclarationEE,@function
_ZN2kc23impl_phylumdeclarations6filterEPFbPNS_22impl_phylumdeclarationEE: # @_ZN2kc23impl_phylumdeclarations6filterEPFbPNS_22impl_phylumdeclarationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 12
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1101_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_phylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_phylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1101_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1101:
	.size	_ZN2kc23impl_phylumdeclarations6filterEPFbPNS_22impl_phylumdeclarationEE, .Lfunc_end1101-_ZN2kc23impl_phylumdeclarations6filterEPFbPNS_22impl_phylumdeclarationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_phylumdeclarations6appendEPNS_22impl_phylumdeclarationE # -- Begin function _ZN2kc23impl_phylumdeclarations6appendEPNS_22impl_phylumdeclarationE
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarations6appendEPNS_22impl_phylumdeclarationE,@function
_ZN2kc23impl_phylumdeclarations6appendEPNS_22impl_phylumdeclarationE: # @_ZN2kc23impl_phylumdeclarations6appendEPNS_22impl_phylumdeclarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc23impl_phylumdeclarationsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc23impl_phylumdeclarationsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1102_2
	.p2align	4, , 16
.LBB1102_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1102_1
.LBB1102_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_phylumdeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc23impl_phylumdeclarationsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1102:
	.size	_ZN2kc23impl_phylumdeclarations6appendEPNS_22impl_phylumdeclarationE, .Lfunc_end1102-_ZN2kc23impl_phylumdeclarations6appendEPNS_22impl_phylumdeclarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_phylumdeclarations5mergeEPS0_PFPNS_22impl_phylumdeclarationES3_S3_E # -- Begin function _ZN2kc23impl_phylumdeclarations5mergeEPS0_PFPNS_22impl_phylumdeclarationES3_S3_E
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarations5mergeEPS0_PFPNS_22impl_phylumdeclarationES3_S3_E,@function
_ZN2kc23impl_phylumdeclarations5mergeEPS0_PFPNS_22impl_phylumdeclarationES3_S3_E: # @_ZN2kc23impl_phylumdeclarations5mergeEPS0_PFPNS_22impl_phylumdeclarationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 12
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1103_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_phylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_phylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1103_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1103:
	.size	_ZN2kc23impl_phylumdeclarations5mergeEPS0_PFPNS_22impl_phylumdeclarationES3_S3_E, .Lfunc_end1103-_ZN2kc23impl_phylumdeclarations5mergeEPS0_PFPNS_22impl_phylumdeclarationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_phylumdeclarations6reduceEPNS_22impl_phylumdeclarationEPFS2_S2_S2_E # -- Begin function _ZN2kc23impl_phylumdeclarations6reduceEPNS_22impl_phylumdeclarationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarations6reduceEPNS_22impl_phylumdeclarationEPFS2_S2_S2_E,@function
_ZN2kc23impl_phylumdeclarations6reduceEPNS_22impl_phylumdeclarationEPFS2_S2_S2_E: # @_ZN2kc23impl_phylumdeclarations6reduceEPNS_22impl_phylumdeclarationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1104_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_phylumdeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_phylumdeclarationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1104_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1104:
	.size	_ZN2kc23impl_phylumdeclarations6reduceEPNS_22impl_phylumdeclarationEPFS2_S2_S2_E, .Lfunc_end1104-_ZN2kc23impl_phylumdeclarations6reduceEPNS_22impl_phylumdeclarationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_16impl_phylumnamesES2_ # -- Begin function _ZN2kc6concatEPKNS_16impl_phylumnamesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_16impl_phylumnamesES2_,@function
_ZN2kc6concatEPKNS_16impl_phylumnamesES2_: # @_ZN2kc6concatEPKNS_16impl_phylumnamesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 14
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1105_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_phylumnamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_phylumnamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1105_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1105:
	.size	_ZN2kc6concatEPKNS_16impl_phylumnamesES2_, .Lfunc_end1105-_ZN2kc6concatEPKNS_16impl_phylumnamesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc16impl_phylumnames7reverseEv # -- Begin function _ZNK2kc16impl_phylumnames7reverseEv
	.p2align	5
	.type	_ZNK2kc16impl_phylumnames7reverseEv,@function
_ZNK2kc16impl_phylumnames7reverseEv:    # @_ZNK2kc16impl_phylumnames7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1106_2
	.p2align	4, , 16
.LBB1106_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1106_1
	b	.LBB1106_3
.LBB1106_2:
	move	$s1, $s0
.LBB1106_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_phylumnamesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc16impl_phylumnamesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1106:
	.size	_ZNK2kc16impl_phylumnames7reverseEv, .Lfunc_end1106-_ZNK2kc16impl_phylumnames7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc16impl_phylumnames4lastEv # -- Begin function _ZNK2kc16impl_phylumnames4lastEv
	.p2align	5
	.type	_ZNK2kc16impl_phylumnames4lastEv,@function
_ZNK2kc16impl_phylumnames4lastEv:       # @_ZNK2kc16impl_phylumnames4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1107_5
	.p2align	4, , 16
.LBB1107_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1107_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1107_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1107_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1107_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1107:
	.size	_ZNK2kc16impl_phylumnames4lastEv, .Lfunc_end1107-_ZNK2kc16impl_phylumnames4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc16impl_phylumnames6is_nilEv # -- Begin function _ZNK2kc16impl_phylumnames6is_nilEv
	.p2align	5
	.type	_ZNK2kc16impl_phylumnames6is_nilEv,@function
_ZNK2kc16impl_phylumnames6is_nilEv:     # @_ZNK2kc16impl_phylumnames6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1108:
	.size	_ZNK2kc16impl_phylumnames6is_nilEv, .Lfunc_end1108-_ZNK2kc16impl_phylumnames6is_nilEv
                                        # -- End function
	.globl	_ZN2kc16impl_phylumnames3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc16impl_phylumnames3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc16impl_phylumnames3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc16impl_phylumnames3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc16impl_phylumnames3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 14
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1109_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_phylumnamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_phylumnamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1109_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1109:
	.size	_ZN2kc16impl_phylumnames3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1109-_ZN2kc16impl_phylumnames3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_phylumnames6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc16impl_phylumnames6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc16impl_phylumnames6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc16impl_phylumnames6filterEPFbPNS_7impl_IDEE: # @_ZN2kc16impl_phylumnames6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 14
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1110_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_phylumnamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_phylumnamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1110_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1110:
	.size	_ZN2kc16impl_phylumnames6filterEPFbPNS_7impl_IDEE, .Lfunc_end1110-_ZN2kc16impl_phylumnames6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_phylumnames6appendEPNS_7impl_IDE # -- Begin function _ZN2kc16impl_phylumnames6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc16impl_phylumnames6appendEPNS_7impl_IDE,@function
_ZN2kc16impl_phylumnames6appendEPNS_7impl_IDE: # @_ZN2kc16impl_phylumnames6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1111_2
	.p2align	4, , 16
.LBB1111_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1111_1
.LBB1111_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_phylumnamesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc16impl_phylumnamesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1111:
	.size	_ZN2kc16impl_phylumnames6appendEPNS_7impl_IDE, .Lfunc_end1111-_ZN2kc16impl_phylumnames6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_phylumnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc16impl_phylumnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc16impl_phylumnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc16impl_phylumnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc16impl_phylumnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 14
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1112_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_phylumnamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_phylumnamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1112_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1112:
	.size	_ZN2kc16impl_phylumnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1112-_ZN2kc16impl_phylumnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_phylumnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc16impl_phylumnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc16impl_phylumnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc16impl_phylumnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc16impl_phylumnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1113_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1113_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1113:
	.size	_ZN2kc16impl_phylumnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1113-_ZN2kc16impl_phylumnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_19impl_storageclassesES2_ # -- Begin function _ZN2kc6concatEPKNS_19impl_storageclassesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_19impl_storageclassesES2_,@function
_ZN2kc6concatEPKNS_19impl_storageclassesES2_: # @_ZN2kc6concatEPKNS_19impl_storageclassesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 20
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1114_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_storageclassesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_storageclassesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1114_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1114:
	.size	_ZN2kc6concatEPKNS_19impl_storageclassesES2_, .Lfunc_end1114-_ZN2kc6concatEPKNS_19impl_storageclassesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_storageclasses7reverseEv # -- Begin function _ZNK2kc19impl_storageclasses7reverseEv
	.p2align	5
	.type	_ZNK2kc19impl_storageclasses7reverseEv,@function
_ZNK2kc19impl_storageclasses7reverseEv: # @_ZNK2kc19impl_storageclasses7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_storageclassesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc19impl_storageclassesE+16)
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vst	$vr0, $s0, 16
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$s4, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	ld.d	$a1, $fp, 0
	st.d	$s4, $a0, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 8
	st.d	$a0, $s0, 8
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1115_2
	.p2align	4, , 16
.LBB1115_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	st.d	$s2, $a0, 16
	st.d	$s0, $a0, 24
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$s4, $a0, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 8
	ld.d	$a1, $fp, 0
	st.d	$a0, $s1, 8
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1115_1
	b	.LBB1115_3
.LBB1115_2:
	move	$s1, $s0
.LBB1115_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_storageclassesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_storageclassesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1115:
	.size	_ZNK2kc19impl_storageclasses7reverseEv, .Lfunc_end1115-_ZNK2kc19impl_storageclasses7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_storageclasses4lastEv # -- Begin function _ZNK2kc19impl_storageclasses4lastEv
	.p2align	5
	.type	_ZNK2kc19impl_storageclasses4lastEv,@function
_ZNK2kc19impl_storageclasses4lastEv:    # @_ZNK2kc19impl_storageclasses4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1116_5
	.p2align	4, , 16
.LBB1116_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1116_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1116_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1116_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1116_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1116:
	.size	_ZNK2kc19impl_storageclasses4lastEv, .Lfunc_end1116-_ZNK2kc19impl_storageclasses4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_storageclasses6is_nilEv # -- Begin function _ZNK2kc19impl_storageclasses6is_nilEv
	.p2align	5
	.type	_ZNK2kc19impl_storageclasses6is_nilEv,@function
_ZNK2kc19impl_storageclasses6is_nilEv:  # @_ZNK2kc19impl_storageclasses6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 16
	ld.d	$a0, $a0, 24
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1117:
	.size	_ZNK2kc19impl_storageclasses6is_nilEv, .Lfunc_end1117-_ZNK2kc19impl_storageclasses6is_nilEv
                                        # -- End function
	.globl	_ZN2kc19impl_storageclasses3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc19impl_storageclasses3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc19impl_storageclasses3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc19impl_storageclasses3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc19impl_storageclasses3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 20
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1118_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_storageclassesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_storageclassesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1118_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1118:
	.size	_ZN2kc19impl_storageclasses3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1118-_ZN2kc19impl_storageclasses3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_storageclasses6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc19impl_storageclasses6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc19impl_storageclasses6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc19impl_storageclasses6filterEPFbPNS_7impl_IDEE: # @_ZN2kc19impl_storageclasses6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 20
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1119_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_storageclassesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_storageclassesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1119_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1119:
	.size	_ZN2kc19impl_storageclasses6filterEPFbPNS_7impl_IDEE, .Lfunc_end1119-_ZN2kc19impl_storageclasses6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_storageclasses6appendEPNS_7impl_IDE # -- Begin function _ZN2kc19impl_storageclasses6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc19impl_storageclasses6appendEPNS_7impl_IDE,@function
_ZN2kc19impl_storageclasses6appendEPNS_7impl_IDE: # @_ZN2kc19impl_storageclasses6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_storageclassesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_storageclassesE+16)
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vst	$vr0, $s0, 16
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZTVN2kc16impl_phylumnamesE+16)
	addi.d	$a1, $a1, %pc_lo12(_ZTVN2kc16impl_phylumnamesE+16)
	ld.d	$a2, $fp, 0
	st.d	$a1, $a0, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $a0, 8
	st.d	$a0, $s0, 8
	ld.d	$a1, $a2, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1120_2
	.p2align	4, , 16
.LBB1120_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1120_1
.LBB1120_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_storageclassesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_storageclassesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1120:
	.size	_ZN2kc19impl_storageclasses6appendEPNS_7impl_IDE, .Lfunc_end1120-_ZN2kc19impl_storageclasses6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_storageclasses5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc19impl_storageclasses5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc19impl_storageclasses5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc19impl_storageclasses5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc19impl_storageclasses5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 20
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1121_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_storageclassesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_storageclassesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1121_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1121:
	.size	_ZN2kc19impl_storageclasses5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1121-_ZN2kc19impl_storageclasses5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_storageclasses6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc19impl_storageclasses6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc19impl_storageclasses6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc19impl_storageclasses6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc19impl_storageclasses6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1122_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1122_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1122:
	.size	_ZN2kc19impl_storageclasses6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1122-_ZN2kc19impl_storageclasses6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_17impl_alternativesES2_ # -- Begin function _ZN2kc6concatEPKNS_17impl_alternativesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_17impl_alternativesES2_,@function
_ZN2kc6concatEPKNS_17impl_alternativesES2_: # @_ZN2kc6concatEPKNS_17impl_alternativesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 26
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1123_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_alternativesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1123_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1123:
	.size	_ZN2kc6concatEPKNS_17impl_alternativesES2_, .Lfunc_end1123-_ZN2kc6concatEPKNS_17impl_alternativesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_alternatives7reverseEv # -- Begin function _ZNK2kc17impl_alternatives7reverseEv
	.p2align	5
	.type	_ZNK2kc17impl_alternatives7reverseEv,@function
_ZNK2kc17impl_alternatives7reverseEv:   # @_ZNK2kc17impl_alternatives7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_alternativesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc17impl_alternativesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1124_2
	.p2align	4, , 16
.LBB1124_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1124_1
	b	.LBB1124_3
.LBB1124_2:
	move	$s1, $s0
.LBB1124_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc17impl_alternativesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1124:
	.size	_ZNK2kc17impl_alternatives7reverseEv, .Lfunc_end1124-_ZNK2kc17impl_alternatives7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_alternatives4lastEv # -- Begin function _ZNK2kc17impl_alternatives4lastEv
	.p2align	5
	.type	_ZNK2kc17impl_alternatives4lastEv,@function
_ZNK2kc17impl_alternatives4lastEv:      # @_ZNK2kc17impl_alternatives4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1125_5
	.p2align	4, , 16
.LBB1125_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1125_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1125_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_alternativeE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_alternativeE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1125_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1125_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1125:
	.size	_ZNK2kc17impl_alternatives4lastEv, .Lfunc_end1125-_ZNK2kc17impl_alternatives4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_alternatives6is_nilEv # -- Begin function _ZNK2kc17impl_alternatives6is_nilEv
	.p2align	5
	.type	_ZNK2kc17impl_alternatives6is_nilEv,@function
_ZNK2kc17impl_alternatives6is_nilEv:    # @_ZNK2kc17impl_alternatives6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1126:
	.size	_ZNK2kc17impl_alternatives6is_nilEv, .Lfunc_end1126-_ZNK2kc17impl_alternatives6is_nilEv
                                        # -- End function
	.globl	_ZN2kc17impl_alternatives3mapEPFPNS_16impl_alternativeES2_E # -- Begin function _ZN2kc17impl_alternatives3mapEPFPNS_16impl_alternativeES2_E
	.p2align	5
	.type	_ZN2kc17impl_alternatives3mapEPFPNS_16impl_alternativeES2_E,@function
_ZN2kc17impl_alternatives3mapEPFPNS_16impl_alternativeES2_E: # @_ZN2kc17impl_alternatives3mapEPFPNS_16impl_alternativeES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 26
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1127_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_alternativesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1127_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1127:
	.size	_ZN2kc17impl_alternatives3mapEPFPNS_16impl_alternativeES2_E, .Lfunc_end1127-_ZN2kc17impl_alternatives3mapEPFPNS_16impl_alternativeES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_alternatives6filterEPFbPNS_16impl_alternativeEE # -- Begin function _ZN2kc17impl_alternatives6filterEPFbPNS_16impl_alternativeEE
	.p2align	5
	.type	_ZN2kc17impl_alternatives6filterEPFbPNS_16impl_alternativeEE,@function
_ZN2kc17impl_alternatives6filterEPFbPNS_16impl_alternativeEE: # @_ZN2kc17impl_alternatives6filterEPFbPNS_16impl_alternativeEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 26
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1128_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_alternativesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1128_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1128:
	.size	_ZN2kc17impl_alternatives6filterEPFbPNS_16impl_alternativeEE, .Lfunc_end1128-_ZN2kc17impl_alternatives6filterEPFbPNS_16impl_alternativeEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_alternatives6appendEPNS_16impl_alternativeE # -- Begin function _ZN2kc17impl_alternatives6appendEPNS_16impl_alternativeE
	.p2align	5
	.type	_ZN2kc17impl_alternatives6appendEPNS_16impl_alternativeE,@function
_ZN2kc17impl_alternatives6appendEPNS_16impl_alternativeE: # @_ZN2kc17impl_alternatives6appendEPNS_16impl_alternativeE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_alternativesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc17impl_alternativesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1129_2
	.p2align	4, , 16
.LBB1129_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1129_1
.LBB1129_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc17impl_alternativesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1129:
	.size	_ZN2kc17impl_alternatives6appendEPNS_16impl_alternativeE, .Lfunc_end1129-_ZN2kc17impl_alternatives6appendEPNS_16impl_alternativeE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_alternatives5mergeEPS0_PFPNS_16impl_alternativeES3_S3_E # -- Begin function _ZN2kc17impl_alternatives5mergeEPS0_PFPNS_16impl_alternativeES3_S3_E
	.p2align	5
	.type	_ZN2kc17impl_alternatives5mergeEPS0_PFPNS_16impl_alternativeES3_S3_E,@function
_ZN2kc17impl_alternatives5mergeEPS0_PFPNS_16impl_alternativeES3_S3_E: # @_ZN2kc17impl_alternatives5mergeEPS0_PFPNS_16impl_alternativeES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 26
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1130_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_alternativesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_alternativesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1130_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1130:
	.size	_ZN2kc17impl_alternatives5mergeEPS0_PFPNS_16impl_alternativeES3_S3_E, .Lfunc_end1130-_ZN2kc17impl_alternatives5mergeEPS0_PFPNS_16impl_alternativeES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_alternatives6reduceEPNS_16impl_alternativeEPFS2_S2_S2_E # -- Begin function _ZN2kc17impl_alternatives6reduceEPNS_16impl_alternativeEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc17impl_alternatives6reduceEPNS_16impl_alternativeEPFS2_S2_S2_E,@function
_ZN2kc17impl_alternatives6reduceEPNS_16impl_alternativeEPFS2_S2_S2_E: # @_ZN2kc17impl_alternatives6reduceEPNS_16impl_alternativeEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1131_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_alternativeE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_alternativeE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1131_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1131:
	.size	_ZN2kc17impl_alternatives6reduceEPNS_16impl_alternativeEPFS2_S2_S2_E, .Lfunc_end1131-_ZN2kc17impl_alternatives6reduceEPNS_16impl_alternativeEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_14impl_argumentsES2_ # -- Begin function _ZN2kc6concatEPKNS_14impl_argumentsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_14impl_argumentsES2_,@function
_ZN2kc6concatEPKNS_14impl_argumentsES2_: # @_ZN2kc6concatEPKNS_14impl_argumentsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 29
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1132_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_argumentsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_argumentsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1132_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1132:
	.size	_ZN2kc6concatEPKNS_14impl_argumentsES2_, .Lfunc_end1132-_ZN2kc6concatEPKNS_14impl_argumentsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_arguments7reverseEv # -- Begin function _ZNK2kc14impl_arguments7reverseEv
	.p2align	5
	.type	_ZNK2kc14impl_arguments7reverseEv,@function
_ZNK2kc14impl_arguments7reverseEv:      # @_ZNK2kc14impl_arguments7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_argumentsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc14impl_argumentsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1133_2
	.p2align	4, , 16
.LBB1133_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 16
	st.d	$s0, $s1, 24
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1133_1
	b	.LBB1133_3
.LBB1133_2:
	move	$s1, $s0
.LBB1133_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_argumentsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_argumentsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1133:
	.size	_ZNK2kc14impl_arguments7reverseEv, .Lfunc_end1133-_ZNK2kc14impl_arguments7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_arguments4lastEv  # -- Begin function _ZNK2kc14impl_arguments4lastEv
	.p2align	5
	.type	_ZNK2kc14impl_arguments4lastEv,@function
_ZNK2kc14impl_arguments4lastEv:         # @_ZNK2kc14impl_arguments4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1134_5
	.p2align	4, , 16
.LBB1134_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1134_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1134_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1134_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1134_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1134:
	.size	_ZNK2kc14impl_arguments4lastEv, .Lfunc_end1134-_ZNK2kc14impl_arguments4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_arguments6is_nilEv # -- Begin function _ZNK2kc14impl_arguments6is_nilEv
	.p2align	5
	.type	_ZNK2kc14impl_arguments6is_nilEv,@function
_ZNK2kc14impl_arguments6is_nilEv:       # @_ZNK2kc14impl_arguments6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 16
	ld.d	$a0, $a0, 24
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1135:
	.size	_ZNK2kc14impl_arguments6is_nilEv, .Lfunc_end1135-_ZNK2kc14impl_arguments6is_nilEv
                                        # -- End function
	.globl	_ZN2kc14impl_arguments3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc14impl_arguments3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc14impl_arguments3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc14impl_arguments3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc14impl_arguments3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 29
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1136_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_argumentsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_argumentsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1136_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1136:
	.size	_ZN2kc14impl_arguments3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1136-_ZN2kc14impl_arguments3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_arguments6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc14impl_arguments6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc14impl_arguments6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc14impl_arguments6filterEPFbPNS_7impl_IDEE: # @_ZN2kc14impl_arguments6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 29
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1137_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_argumentsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_argumentsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1137_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1137:
	.size	_ZN2kc14impl_arguments6filterEPFbPNS_7impl_IDEE, .Lfunc_end1137-_ZN2kc14impl_arguments6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_arguments6appendEPNS_7impl_IDE # -- Begin function _ZN2kc14impl_arguments6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc14impl_arguments6appendEPNS_7impl_IDE,@function
_ZN2kc14impl_arguments6appendEPNS_7impl_IDE: # @_ZN2kc14impl_arguments6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_argumentsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc14impl_argumentsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 16
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1138_2
	.p2align	4, , 16
.LBB1138_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1138_1
.LBB1138_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_argumentsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_argumentsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1138:
	.size	_ZN2kc14impl_arguments6appendEPNS_7impl_IDE, .Lfunc_end1138-_ZN2kc14impl_arguments6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_arguments5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc14impl_arguments5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc14impl_arguments5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc14impl_arguments5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc14impl_arguments5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 29
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1139_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_argumentsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_argumentsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1139_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1139:
	.size	_ZN2kc14impl_arguments5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1139-_ZN2kc14impl_arguments5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_arguments6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc14impl_arguments6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc14impl_arguments6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc14impl_arguments6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc14impl_arguments6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1140_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1140_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1140:
	.size	_ZN2kc14impl_arguments6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1140-_ZN2kc14impl_arguments6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_15impl_attributesES2_ # -- Begin function _ZN2kc6concatEPKNS_15impl_attributesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_15impl_attributesES2_,@function
_ZN2kc6concatEPKNS_15impl_attributesES2_: # @_ZN2kc6concatEPKNS_15impl_attributesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 33
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1141_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc15impl_attributesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc15impl_attributesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1141_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1141:
	.size	_ZN2kc6concatEPKNS_15impl_attributesES2_, .Lfunc_end1141-_ZN2kc6concatEPKNS_15impl_attributesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc15impl_attributes7reverseEv # -- Begin function _ZNK2kc15impl_attributes7reverseEv
	.p2align	5
	.type	_ZNK2kc15impl_attributes7reverseEv,@function
_ZNK2kc15impl_attributes7reverseEv:     # @_ZNK2kc15impl_attributes7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc15impl_attributesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc15impl_attributesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1142_2
	.p2align	4, , 16
.LBB1142_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1142_1
	b	.LBB1142_3
.LBB1142_2:
	move	$s1, $s0
.LBB1142_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc15impl_attributesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc15impl_attributesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1142:
	.size	_ZNK2kc15impl_attributes7reverseEv, .Lfunc_end1142-_ZNK2kc15impl_attributes7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc15impl_attributes4lastEv # -- Begin function _ZNK2kc15impl_attributes4lastEv
	.p2align	5
	.type	_ZNK2kc15impl_attributes4lastEv,@function
_ZNK2kc15impl_attributes4lastEv:        # @_ZNK2kc15impl_attributes4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1143_5
	.p2align	4, , 16
.LBB1143_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1143_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1143_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_attributeE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_attributeE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1143_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1143_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1143:
	.size	_ZNK2kc15impl_attributes4lastEv, .Lfunc_end1143-_ZNK2kc15impl_attributes4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc15impl_attributes6is_nilEv # -- Begin function _ZNK2kc15impl_attributes6is_nilEv
	.p2align	5
	.type	_ZNK2kc15impl_attributes6is_nilEv,@function
_ZNK2kc15impl_attributes6is_nilEv:      # @_ZNK2kc15impl_attributes6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1144:
	.size	_ZNK2kc15impl_attributes6is_nilEv, .Lfunc_end1144-_ZNK2kc15impl_attributes6is_nilEv
                                        # -- End function
	.globl	_ZN2kc15impl_attributes3mapEPFPNS_14impl_attributeES2_E # -- Begin function _ZN2kc15impl_attributes3mapEPFPNS_14impl_attributeES2_E
	.p2align	5
	.type	_ZN2kc15impl_attributes3mapEPFPNS_14impl_attributeES2_E,@function
_ZN2kc15impl_attributes3mapEPFPNS_14impl_attributeES2_E: # @_ZN2kc15impl_attributes3mapEPFPNS_14impl_attributeES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 33
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1145_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc15impl_attributesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc15impl_attributesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1145_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1145:
	.size	_ZN2kc15impl_attributes3mapEPFPNS_14impl_attributeES2_E, .Lfunc_end1145-_ZN2kc15impl_attributes3mapEPFPNS_14impl_attributeES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15impl_attributes6filterEPFbPNS_14impl_attributeEE # -- Begin function _ZN2kc15impl_attributes6filterEPFbPNS_14impl_attributeEE
	.p2align	5
	.type	_ZN2kc15impl_attributes6filterEPFbPNS_14impl_attributeEE,@function
_ZN2kc15impl_attributes6filterEPFbPNS_14impl_attributeEE: # @_ZN2kc15impl_attributes6filterEPFbPNS_14impl_attributeEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 33
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1146_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc15impl_attributesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc15impl_attributesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1146_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1146:
	.size	_ZN2kc15impl_attributes6filterEPFbPNS_14impl_attributeEE, .Lfunc_end1146-_ZN2kc15impl_attributes6filterEPFbPNS_14impl_attributeEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15impl_attributes6appendEPNS_14impl_attributeE # -- Begin function _ZN2kc15impl_attributes6appendEPNS_14impl_attributeE
	.p2align	5
	.type	_ZN2kc15impl_attributes6appendEPNS_14impl_attributeE,@function
_ZN2kc15impl_attributes6appendEPNS_14impl_attributeE: # @_ZN2kc15impl_attributes6appendEPNS_14impl_attributeE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc15impl_attributesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc15impl_attributesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1147_2
	.p2align	4, , 16
.LBB1147_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1147_1
.LBB1147_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc15impl_attributesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc15impl_attributesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1147:
	.size	_ZN2kc15impl_attributes6appendEPNS_14impl_attributeE, .Lfunc_end1147-_ZN2kc15impl_attributes6appendEPNS_14impl_attributeE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15impl_attributes5mergeEPS0_PFPNS_14impl_attributeES3_S3_E # -- Begin function _ZN2kc15impl_attributes5mergeEPS0_PFPNS_14impl_attributeES3_S3_E
	.p2align	5
	.type	_ZN2kc15impl_attributes5mergeEPS0_PFPNS_14impl_attributeES3_S3_E,@function
_ZN2kc15impl_attributes5mergeEPS0_PFPNS_14impl_attributeES3_S3_E: # @_ZN2kc15impl_attributes5mergeEPS0_PFPNS_14impl_attributeES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 33
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1148_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc15impl_attributesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc15impl_attributesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1148_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1148:
	.size	_ZN2kc15impl_attributes5mergeEPS0_PFPNS_14impl_attributeES3_S3_E, .Lfunc_end1148-_ZN2kc15impl_attributes5mergeEPS0_PFPNS_14impl_attributeES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15impl_attributes6reduceEPNS_14impl_attributeEPFS2_S2_S2_E # -- Begin function _ZN2kc15impl_attributes6reduceEPNS_14impl_attributeEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc15impl_attributes6reduceEPNS_14impl_attributeEPFS2_S2_S2_E,@function
_ZN2kc15impl_attributes6reduceEPNS_14impl_attributeEPFS2_S2_S2_E: # @_ZN2kc15impl_attributes6reduceEPNS_14impl_attributeEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1149_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_attributeE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_attributeE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1149_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1149:
	.size	_ZN2kc15impl_attributes6reduceEPNS_14impl_attributeEPFS2_S2_S2_E, .Lfunc_end1149-_ZN2kc15impl_attributes6reduceEPNS_14impl_attributeEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_16impl_CexpressionES2_ # -- Begin function _ZN2kc6concatEPKNS_16impl_CexpressionES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_16impl_CexpressionES2_,@function
_ZN2kc6concatEPKNS_16impl_CexpressionES2_: # @_ZN2kc6concatEPKNS_16impl_CexpressionES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 38
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1150_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1150_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1150:
	.size	_ZN2kc6concatEPKNS_16impl_CexpressionES2_, .Lfunc_end1150-_ZN2kc6concatEPKNS_16impl_CexpressionES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc16impl_Cexpression7reverseEv # -- Begin function _ZNK2kc16impl_Cexpression7reverseEv
	.p2align	5
	.type	_ZNK2kc16impl_Cexpression7reverseEv,@function
_ZNK2kc16impl_Cexpression7reverseEv:    # @_ZNK2kc16impl_Cexpression7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc16impl_CexpressionE+16)
	addi.d	$s5, $a0, %pc_lo12(_ZTVN2kc16impl_CexpressionE+16)
	st.d	$s5, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1151_3
# %bb.1:                                # %.lr.ph.i.preheader
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$s1, $a0, %pc_lo12(.L.str)
	addi.w	$s2, $zero, -1
	.p2align	4, , 16
.LBB1151_2:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s4, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$s5, $a0, 0
	st.d	$s4, $a0, 24
	st.d	$s0, $a0, 32
	st.w	$zero, $a0, 8
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s3, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s3
	bnez	$a0, .LBB1151_2
	b	.LBB1151_4
.LBB1151_3:
	move	$s3, $s0
.LBB1151_4:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$a0, $s3
	move	$a3, $zero
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1151:
	.size	_ZNK2kc16impl_Cexpression7reverseEv, .Lfunc_end1151-_ZNK2kc16impl_Cexpression7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc16impl_Cexpression4lastEv # -- Begin function _ZNK2kc16impl_Cexpression4lastEv
	.p2align	5
	.type	_ZNK2kc16impl_Cexpression4lastEv,@function
_ZNK2kc16impl_Cexpression4lastEv:       # @_ZNK2kc16impl_Cexpression4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1152_5
	.p2align	4, , 16
.LBB1152_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1152_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1152_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_Cexpression_elemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_Cexpression_elemE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1152_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1152_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1152:
	.size	_ZNK2kc16impl_Cexpression4lastEv, .Lfunc_end1152-_ZNK2kc16impl_Cexpression4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc16impl_Cexpression6is_nilEv # -- Begin function _ZNK2kc16impl_Cexpression6is_nilEv
	.p2align	5
	.type	_ZNK2kc16impl_Cexpression6is_nilEv,@function
_ZNK2kc16impl_Cexpression6is_nilEv:     # @_ZNK2kc16impl_Cexpression6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 32
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1153:
	.size	_ZNK2kc16impl_Cexpression6is_nilEv, .Lfunc_end1153-_ZNK2kc16impl_Cexpression6is_nilEv
                                        # -- End function
	.globl	_ZN2kc16impl_Cexpression3mapEPFPNS_21impl_Cexpression_elemES2_E # -- Begin function _ZN2kc16impl_Cexpression3mapEPFPNS_21impl_Cexpression_elemES2_E
	.p2align	5
	.type	_ZN2kc16impl_Cexpression3mapEPFPNS_21impl_Cexpression_elemES2_E,@function
_ZN2kc16impl_Cexpression3mapEPFPNS_21impl_Cexpression_elemES2_E: # @_ZN2kc16impl_Cexpression3mapEPFPNS_21impl_Cexpression_elemES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 38
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1154_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1154_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1154:
	.size	_ZN2kc16impl_Cexpression3mapEPFPNS_21impl_Cexpression_elemES2_E, .Lfunc_end1154-_ZN2kc16impl_Cexpression3mapEPFPNS_21impl_Cexpression_elemES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_Cexpression6filterEPFbPNS_21impl_Cexpression_elemEE # -- Begin function _ZN2kc16impl_Cexpression6filterEPFbPNS_21impl_Cexpression_elemEE
	.p2align	5
	.type	_ZN2kc16impl_Cexpression6filterEPFbPNS_21impl_Cexpression_elemEE,@function
_ZN2kc16impl_Cexpression6filterEPFbPNS_21impl_Cexpression_elemEE: # @_ZN2kc16impl_Cexpression6filterEPFbPNS_21impl_Cexpression_elemEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 38
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1155_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1155_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1155:
	.size	_ZN2kc16impl_Cexpression6filterEPFbPNS_21impl_Cexpression_elemEE, .Lfunc_end1155-_ZN2kc16impl_Cexpression6filterEPFbPNS_21impl_Cexpression_elemEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_Cexpression6appendEPNS_21impl_Cexpression_elemE # -- Begin function _ZN2kc16impl_Cexpression6appendEPNS_21impl_Cexpression_elemE
	.p2align	5
	.type	_ZN2kc16impl_Cexpression6appendEPNS_21impl_Cexpression_elemE,@function
_ZN2kc16impl_Cexpression6appendEPNS_21impl_Cexpression_elemE: # @_ZN2kc16impl_Cexpression6appendEPNS_21impl_Cexpression_elemE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc16impl_CexpressionE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc16impl_CexpressionE+16)
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1156_2
	.p2align	4, , 16
.LBB1156_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1156_1
.LBB1156_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1156:
	.size	_ZN2kc16impl_Cexpression6appendEPNS_21impl_Cexpression_elemE, .Lfunc_end1156-_ZN2kc16impl_Cexpression6appendEPNS_21impl_Cexpression_elemE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_Cexpression5mergeEPS0_PFPNS_21impl_Cexpression_elemES3_S3_E # -- Begin function _ZN2kc16impl_Cexpression5mergeEPS0_PFPNS_21impl_Cexpression_elemES3_S3_E
	.p2align	5
	.type	_ZN2kc16impl_Cexpression5mergeEPS0_PFPNS_21impl_Cexpression_elemES3_S3_E,@function
_ZN2kc16impl_Cexpression5mergeEPS0_PFPNS_21impl_Cexpression_elemES3_S3_E: # @_ZN2kc16impl_Cexpression5mergeEPS0_PFPNS_21impl_Cexpression_elemES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 38
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1157_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_CexpressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_CexpressionE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1157_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1157:
	.size	_ZN2kc16impl_Cexpression5mergeEPS0_PFPNS_21impl_Cexpression_elemES3_S3_E, .Lfunc_end1157-_ZN2kc16impl_Cexpression5mergeEPS0_PFPNS_21impl_Cexpression_elemES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_Cexpression6reduceEPNS_21impl_Cexpression_elemEPFS2_S2_S2_E # -- Begin function _ZN2kc16impl_Cexpression6reduceEPNS_21impl_Cexpression_elemEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc16impl_Cexpression6reduceEPNS_21impl_Cexpression_elemEPFS2_S2_S2_E,@function
_ZN2kc16impl_Cexpression6reduceEPNS_21impl_Cexpression_elemEPFS2_S2_S2_E: # @_ZN2kc16impl_Cexpression6reduceEPNS_21impl_Cexpression_elemEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1158_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_Cexpression_elemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_Cexpression_elemE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1158_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1158:
	.size	_ZN2kc16impl_Cexpression6reduceEPNS_21impl_Cexpression_elemEPFS2_S2_S2_E, .Lfunc_end1158-_ZN2kc16impl_Cexpression6reduceEPNS_21impl_Cexpression_elemEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_18impl_CexpressionDQES2_ # -- Begin function _ZN2kc6concatEPKNS_18impl_CexpressionDQES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_18impl_CexpressionDQES2_,@function
_ZN2kc6concatEPKNS_18impl_CexpressionDQES2_: # @_ZN2kc6concatEPKNS_18impl_CexpressionDQES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 47
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1159_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1159_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1159:
	.size	_ZN2kc6concatEPKNS_18impl_CexpressionDQES2_, .Lfunc_end1159-_ZN2kc6concatEPKNS_18impl_CexpressionDQES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_CexpressionDQ7reverseEv # -- Begin function _ZNK2kc18impl_CexpressionDQ7reverseEv
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionDQ7reverseEv,@function
_ZNK2kc18impl_CexpressionDQ7reverseEv:  # @_ZNK2kc18impl_CexpressionDQ7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_CexpressionDQE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc18impl_CexpressionDQE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1160_2
	.p2align	4, , 16
.LBB1160_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1160_1
	b	.LBB1160_3
.LBB1160_2:
	move	$s1, $s0
.LBB1160_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1160:
	.size	_ZNK2kc18impl_CexpressionDQ7reverseEv, .Lfunc_end1160-_ZNK2kc18impl_CexpressionDQ7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_CexpressionDQ4lastEv # -- Begin function _ZNK2kc18impl_CexpressionDQ4lastEv
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionDQ4lastEv,@function
_ZNK2kc18impl_CexpressionDQ4lastEv:     # @_ZNK2kc18impl_CexpressionDQ4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1161_5
	.p2align	4, , 16
.LBB1161_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1161_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1161_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_CexpressionDQ_elemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_CexpressionDQ_elemE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1161_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1161_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1161:
	.size	_ZNK2kc18impl_CexpressionDQ4lastEv, .Lfunc_end1161-_ZNK2kc18impl_CexpressionDQ4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_CexpressionDQ6is_nilEv # -- Begin function _ZNK2kc18impl_CexpressionDQ6is_nilEv
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionDQ6is_nilEv,@function
_ZNK2kc18impl_CexpressionDQ6is_nilEv:   # @_ZNK2kc18impl_CexpressionDQ6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1162:
	.size	_ZNK2kc18impl_CexpressionDQ6is_nilEv, .Lfunc_end1162-_ZNK2kc18impl_CexpressionDQ6is_nilEv
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionDQ3mapEPFPNS_23impl_CexpressionDQ_elemES2_E # -- Begin function _ZN2kc18impl_CexpressionDQ3mapEPFPNS_23impl_CexpressionDQ_elemES2_E
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQ3mapEPFPNS_23impl_CexpressionDQ_elemES2_E,@function
_ZN2kc18impl_CexpressionDQ3mapEPFPNS_23impl_CexpressionDQ_elemES2_E: # @_ZN2kc18impl_CexpressionDQ3mapEPFPNS_23impl_CexpressionDQ_elemES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 47
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1163_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1163_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1163:
	.size	_ZN2kc18impl_CexpressionDQ3mapEPFPNS_23impl_CexpressionDQ_elemES2_E, .Lfunc_end1163-_ZN2kc18impl_CexpressionDQ3mapEPFPNS_23impl_CexpressionDQ_elemES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionDQ6filterEPFbPNS_23impl_CexpressionDQ_elemEE # -- Begin function _ZN2kc18impl_CexpressionDQ6filterEPFbPNS_23impl_CexpressionDQ_elemEE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQ6filterEPFbPNS_23impl_CexpressionDQ_elemEE,@function
_ZN2kc18impl_CexpressionDQ6filterEPFbPNS_23impl_CexpressionDQ_elemEE: # @_ZN2kc18impl_CexpressionDQ6filterEPFbPNS_23impl_CexpressionDQ_elemEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 47
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1164_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1164_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1164:
	.size	_ZN2kc18impl_CexpressionDQ6filterEPFbPNS_23impl_CexpressionDQ_elemEE, .Lfunc_end1164-_ZN2kc18impl_CexpressionDQ6filterEPFbPNS_23impl_CexpressionDQ_elemEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionDQ6appendEPNS_23impl_CexpressionDQ_elemE # -- Begin function _ZN2kc18impl_CexpressionDQ6appendEPNS_23impl_CexpressionDQ_elemE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQ6appendEPNS_23impl_CexpressionDQ_elemE,@function
_ZN2kc18impl_CexpressionDQ6appendEPNS_23impl_CexpressionDQ_elemE: # @_ZN2kc18impl_CexpressionDQ6appendEPNS_23impl_CexpressionDQ_elemE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_CexpressionDQE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc18impl_CexpressionDQE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1165_2
	.p2align	4, , 16
.LBB1165_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1165_1
.LBB1165_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1165:
	.size	_ZN2kc18impl_CexpressionDQ6appendEPNS_23impl_CexpressionDQ_elemE, .Lfunc_end1165-_ZN2kc18impl_CexpressionDQ6appendEPNS_23impl_CexpressionDQ_elemE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionDQ5mergeEPS0_PFPNS_23impl_CexpressionDQ_elemES3_S3_E # -- Begin function _ZN2kc18impl_CexpressionDQ5mergeEPS0_PFPNS_23impl_CexpressionDQ_elemES3_S3_E
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQ5mergeEPS0_PFPNS_23impl_CexpressionDQ_elemES3_S3_E,@function
_ZN2kc18impl_CexpressionDQ5mergeEPS0_PFPNS_23impl_CexpressionDQ_elemES3_S3_E: # @_ZN2kc18impl_CexpressionDQ5mergeEPS0_PFPNS_23impl_CexpressionDQ_elemES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 47
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1166_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_CexpressionDQE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_CexpressionDQE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1166_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1166:
	.size	_ZN2kc18impl_CexpressionDQ5mergeEPS0_PFPNS_23impl_CexpressionDQ_elemES3_S3_E, .Lfunc_end1166-_ZN2kc18impl_CexpressionDQ5mergeEPS0_PFPNS_23impl_CexpressionDQ_elemES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionDQ6reduceEPNS_23impl_CexpressionDQ_elemEPFS2_S2_S2_E # -- Begin function _ZN2kc18impl_CexpressionDQ6reduceEPNS_23impl_CexpressionDQ_elemEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQ6reduceEPNS_23impl_CexpressionDQ_elemEPFS2_S2_S2_E,@function
_ZN2kc18impl_CexpressionDQ6reduceEPNS_23impl_CexpressionDQ_elemEPFS2_S2_S2_E: # @_ZN2kc18impl_CexpressionDQ6reduceEPNS_23impl_CexpressionDQ_elemEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1167_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_CexpressionDQ_elemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_CexpressionDQ_elemE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1167_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1167:
	.size	_ZN2kc18impl_CexpressionDQ6reduceEPNS_23impl_CexpressionDQ_elemEPFS2_S2_S2_E, .Lfunc_end1167-_ZN2kc18impl_CexpressionDQ6reduceEPNS_23impl_CexpressionDQ_elemEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_18impl_CexpressionSQES2_ # -- Begin function _ZN2kc6concatEPKNS_18impl_CexpressionSQES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_18impl_CexpressionSQES2_,@function
_ZN2kc6concatEPKNS_18impl_CexpressionSQES2_: # @_ZN2kc6concatEPKNS_18impl_CexpressionSQES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 51
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1168_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1168_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1168:
	.size	_ZN2kc6concatEPKNS_18impl_CexpressionSQES2_, .Lfunc_end1168-_ZN2kc6concatEPKNS_18impl_CexpressionSQES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_CexpressionSQ7reverseEv # -- Begin function _ZNK2kc18impl_CexpressionSQ7reverseEv
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionSQ7reverseEv,@function
_ZNK2kc18impl_CexpressionSQ7reverseEv:  # @_ZNK2kc18impl_CexpressionSQ7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_CexpressionSQE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc18impl_CexpressionSQE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1169_2
	.p2align	4, , 16
.LBB1169_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1169_1
	b	.LBB1169_3
.LBB1169_2:
	move	$s1, $s0
.LBB1169_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1169:
	.size	_ZNK2kc18impl_CexpressionSQ7reverseEv, .Lfunc_end1169-_ZNK2kc18impl_CexpressionSQ7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_CexpressionSQ4lastEv # -- Begin function _ZNK2kc18impl_CexpressionSQ4lastEv
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionSQ4lastEv,@function
_ZNK2kc18impl_CexpressionSQ4lastEv:     # @_ZNK2kc18impl_CexpressionSQ4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1170_5
	.p2align	4, , 16
.LBB1170_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1170_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1170_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_CexpressionSQ_elemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_CexpressionSQ_elemE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1170_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1170_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1170:
	.size	_ZNK2kc18impl_CexpressionSQ4lastEv, .Lfunc_end1170-_ZNK2kc18impl_CexpressionSQ4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_CexpressionSQ6is_nilEv # -- Begin function _ZNK2kc18impl_CexpressionSQ6is_nilEv
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionSQ6is_nilEv,@function
_ZNK2kc18impl_CexpressionSQ6is_nilEv:   # @_ZNK2kc18impl_CexpressionSQ6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1171:
	.size	_ZNK2kc18impl_CexpressionSQ6is_nilEv, .Lfunc_end1171-_ZNK2kc18impl_CexpressionSQ6is_nilEv
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionSQ3mapEPFPNS_23impl_CexpressionSQ_elemES2_E # -- Begin function _ZN2kc18impl_CexpressionSQ3mapEPFPNS_23impl_CexpressionSQ_elemES2_E
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQ3mapEPFPNS_23impl_CexpressionSQ_elemES2_E,@function
_ZN2kc18impl_CexpressionSQ3mapEPFPNS_23impl_CexpressionSQ_elemES2_E: # @_ZN2kc18impl_CexpressionSQ3mapEPFPNS_23impl_CexpressionSQ_elemES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 51
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1172_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1172_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1172:
	.size	_ZN2kc18impl_CexpressionSQ3mapEPFPNS_23impl_CexpressionSQ_elemES2_E, .Lfunc_end1172-_ZN2kc18impl_CexpressionSQ3mapEPFPNS_23impl_CexpressionSQ_elemES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionSQ6filterEPFbPNS_23impl_CexpressionSQ_elemEE # -- Begin function _ZN2kc18impl_CexpressionSQ6filterEPFbPNS_23impl_CexpressionSQ_elemEE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQ6filterEPFbPNS_23impl_CexpressionSQ_elemEE,@function
_ZN2kc18impl_CexpressionSQ6filterEPFbPNS_23impl_CexpressionSQ_elemEE: # @_ZN2kc18impl_CexpressionSQ6filterEPFbPNS_23impl_CexpressionSQ_elemEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 51
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1173_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1173_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1173:
	.size	_ZN2kc18impl_CexpressionSQ6filterEPFbPNS_23impl_CexpressionSQ_elemEE, .Lfunc_end1173-_ZN2kc18impl_CexpressionSQ6filterEPFbPNS_23impl_CexpressionSQ_elemEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionSQ6appendEPNS_23impl_CexpressionSQ_elemE # -- Begin function _ZN2kc18impl_CexpressionSQ6appendEPNS_23impl_CexpressionSQ_elemE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQ6appendEPNS_23impl_CexpressionSQ_elemE,@function
_ZN2kc18impl_CexpressionSQ6appendEPNS_23impl_CexpressionSQ_elemE: # @_ZN2kc18impl_CexpressionSQ6appendEPNS_23impl_CexpressionSQ_elemE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_CexpressionSQE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc18impl_CexpressionSQE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1174_2
	.p2align	4, , 16
.LBB1174_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1174_1
.LBB1174_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1174:
	.size	_ZN2kc18impl_CexpressionSQ6appendEPNS_23impl_CexpressionSQ_elemE, .Lfunc_end1174-_ZN2kc18impl_CexpressionSQ6appendEPNS_23impl_CexpressionSQ_elemE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionSQ5mergeEPS0_PFPNS_23impl_CexpressionSQ_elemES3_S3_E # -- Begin function _ZN2kc18impl_CexpressionSQ5mergeEPS0_PFPNS_23impl_CexpressionSQ_elemES3_S3_E
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQ5mergeEPS0_PFPNS_23impl_CexpressionSQ_elemES3_S3_E,@function
_ZN2kc18impl_CexpressionSQ5mergeEPS0_PFPNS_23impl_CexpressionSQ_elemES3_S3_E: # @_ZN2kc18impl_CexpressionSQ5mergeEPS0_PFPNS_23impl_CexpressionSQ_elemES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 51
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1175_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_CexpressionSQE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_CexpressionSQE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1175_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1175:
	.size	_ZN2kc18impl_CexpressionSQ5mergeEPS0_PFPNS_23impl_CexpressionSQ_elemES3_S3_E, .Lfunc_end1175-_ZN2kc18impl_CexpressionSQ5mergeEPS0_PFPNS_23impl_CexpressionSQ_elemES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionSQ6reduceEPNS_23impl_CexpressionSQ_elemEPFS2_S2_S2_E # -- Begin function _ZN2kc18impl_CexpressionSQ6reduceEPNS_23impl_CexpressionSQ_elemEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQ6reduceEPNS_23impl_CexpressionSQ_elemEPFS2_S2_S2_E,@function
_ZN2kc18impl_CexpressionSQ6reduceEPNS_23impl_CexpressionSQ_elemEPFS2_S2_S2_E: # @_ZN2kc18impl_CexpressionSQ6reduceEPNS_23impl_CexpressionSQ_elemEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1176_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_CexpressionSQ_elemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_CexpressionSQ_elemE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1176_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1176:
	.size	_ZN2kc18impl_CexpressionSQ6reduceEPNS_23impl_CexpressionSQ_elemEPFS2_S2_S2_E, .Lfunc_end1176-_ZN2kc18impl_CexpressionSQ6reduceEPNS_23impl_CexpressionSQ_elemEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_19impl_idCexpressionsES2_ # -- Begin function _ZN2kc6concatEPKNS_19impl_idCexpressionsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_19impl_idCexpressionsES2_,@function
_ZN2kc6concatEPKNS_19impl_idCexpressionsES2_: # @_ZN2kc6concatEPKNS_19impl_idCexpressionsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 55
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1177_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_idCexpressionsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_idCexpressionsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1177_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1177:
	.size	_ZN2kc6concatEPKNS_19impl_idCexpressionsES2_, .Lfunc_end1177-_ZN2kc6concatEPKNS_19impl_idCexpressionsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_idCexpressions7reverseEv # -- Begin function _ZNK2kc19impl_idCexpressions7reverseEv
	.p2align	5
	.type	_ZNK2kc19impl_idCexpressions7reverseEv,@function
_ZNK2kc19impl_idCexpressions7reverseEv: # @_ZNK2kc19impl_idCexpressions7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_idCexpressionsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc19impl_idCexpressionsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1178_2
	.p2align	4, , 16
.LBB1178_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1178_1
	b	.LBB1178_3
.LBB1178_2:
	move	$s1, $s0
.LBB1178_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_idCexpressionsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_idCexpressionsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1178:
	.size	_ZNK2kc19impl_idCexpressions7reverseEv, .Lfunc_end1178-_ZNK2kc19impl_idCexpressions7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_idCexpressions4lastEv # -- Begin function _ZNK2kc19impl_idCexpressions4lastEv
	.p2align	5
	.type	_ZNK2kc19impl_idCexpressions4lastEv,@function
_ZNK2kc19impl_idCexpressions4lastEv:    # @_ZNK2kc19impl_idCexpressions4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1179_5
	.p2align	4, , 16
.LBB1179_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1179_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1179_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_idCexpressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_idCexpressionE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1179_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1179_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1179:
	.size	_ZNK2kc19impl_idCexpressions4lastEv, .Lfunc_end1179-_ZNK2kc19impl_idCexpressions4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_idCexpressions6is_nilEv # -- Begin function _ZNK2kc19impl_idCexpressions6is_nilEv
	.p2align	5
	.type	_ZNK2kc19impl_idCexpressions6is_nilEv,@function
_ZNK2kc19impl_idCexpressions6is_nilEv:  # @_ZNK2kc19impl_idCexpressions6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1180:
	.size	_ZNK2kc19impl_idCexpressions6is_nilEv, .Lfunc_end1180-_ZNK2kc19impl_idCexpressions6is_nilEv
                                        # -- End function
	.globl	_ZN2kc19impl_idCexpressions3mapEPFPNS_18impl_idCexpressionES2_E # -- Begin function _ZN2kc19impl_idCexpressions3mapEPFPNS_18impl_idCexpressionES2_E
	.p2align	5
	.type	_ZN2kc19impl_idCexpressions3mapEPFPNS_18impl_idCexpressionES2_E,@function
_ZN2kc19impl_idCexpressions3mapEPFPNS_18impl_idCexpressionES2_E: # @_ZN2kc19impl_idCexpressions3mapEPFPNS_18impl_idCexpressionES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 55
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1181_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_idCexpressionsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_idCexpressionsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1181_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1181:
	.size	_ZN2kc19impl_idCexpressions3mapEPFPNS_18impl_idCexpressionES2_E, .Lfunc_end1181-_ZN2kc19impl_idCexpressions3mapEPFPNS_18impl_idCexpressionES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_idCexpressions6filterEPFbPNS_18impl_idCexpressionEE # -- Begin function _ZN2kc19impl_idCexpressions6filterEPFbPNS_18impl_idCexpressionEE
	.p2align	5
	.type	_ZN2kc19impl_idCexpressions6filterEPFbPNS_18impl_idCexpressionEE,@function
_ZN2kc19impl_idCexpressions6filterEPFbPNS_18impl_idCexpressionEE: # @_ZN2kc19impl_idCexpressions6filterEPFbPNS_18impl_idCexpressionEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 55
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1182_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_idCexpressionsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_idCexpressionsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1182_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1182:
	.size	_ZN2kc19impl_idCexpressions6filterEPFbPNS_18impl_idCexpressionEE, .Lfunc_end1182-_ZN2kc19impl_idCexpressions6filterEPFbPNS_18impl_idCexpressionEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_idCexpressions6appendEPNS_18impl_idCexpressionE # -- Begin function _ZN2kc19impl_idCexpressions6appendEPNS_18impl_idCexpressionE
	.p2align	5
	.type	_ZN2kc19impl_idCexpressions6appendEPNS_18impl_idCexpressionE,@function
_ZN2kc19impl_idCexpressions6appendEPNS_18impl_idCexpressionE: # @_ZN2kc19impl_idCexpressions6appendEPNS_18impl_idCexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_idCexpressionsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_idCexpressionsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1183_2
	.p2align	4, , 16
.LBB1183_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1183_1
.LBB1183_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_idCexpressionsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_idCexpressionsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1183:
	.size	_ZN2kc19impl_idCexpressions6appendEPNS_18impl_idCexpressionE, .Lfunc_end1183-_ZN2kc19impl_idCexpressions6appendEPNS_18impl_idCexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_idCexpressions5mergeEPS0_PFPNS_18impl_idCexpressionES3_S3_E # -- Begin function _ZN2kc19impl_idCexpressions5mergeEPS0_PFPNS_18impl_idCexpressionES3_S3_E
	.p2align	5
	.type	_ZN2kc19impl_idCexpressions5mergeEPS0_PFPNS_18impl_idCexpressionES3_S3_E,@function
_ZN2kc19impl_idCexpressions5mergeEPS0_PFPNS_18impl_idCexpressionES3_S3_E: # @_ZN2kc19impl_idCexpressions5mergeEPS0_PFPNS_18impl_idCexpressionES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 55
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1184_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_idCexpressionsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_idCexpressionsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1184_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1184:
	.size	_ZN2kc19impl_idCexpressions5mergeEPS0_PFPNS_18impl_idCexpressionES3_S3_E, .Lfunc_end1184-_ZN2kc19impl_idCexpressions5mergeEPS0_PFPNS_18impl_idCexpressionES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_idCexpressions6reduceEPNS_18impl_idCexpressionEPFS2_S2_S2_E # -- Begin function _ZN2kc19impl_idCexpressions6reduceEPNS_18impl_idCexpressionEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc19impl_idCexpressions6reduceEPNS_18impl_idCexpressionEPFS2_S2_S2_E,@function
_ZN2kc19impl_idCexpressions6reduceEPNS_18impl_idCexpressionEPFS2_S2_S2_E: # @_ZN2kc19impl_idCexpressions6reduceEPNS_18impl_idCexpressionEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1185_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_idCexpressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_idCexpressionE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1185_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1185:
	.size	_ZN2kc19impl_idCexpressions6reduceEPNS_18impl_idCexpressionEPFS2_S2_S2_E, .Lfunc_end1185-_ZN2kc19impl_idCexpressions6reduceEPNS_18impl_idCexpressionEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_11impl_CtextsES2_ # -- Begin function _ZN2kc6concatEPKNS_11impl_CtextsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_11impl_CtextsES2_,@function
_ZN2kc6concatEPKNS_11impl_CtextsES2_:   # @_ZN2kc6concatEPKNS_11impl_CtextsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 58
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1186_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc11impl_CtextsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc11impl_CtextsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1186_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1186:
	.size	_ZN2kc6concatEPKNS_11impl_CtextsES2_, .Lfunc_end1186-_ZN2kc6concatEPKNS_11impl_CtextsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc11impl_Ctexts7reverseEv  # -- Begin function _ZNK2kc11impl_Ctexts7reverseEv
	.p2align	5
	.type	_ZNK2kc11impl_Ctexts7reverseEv,@function
_ZNK2kc11impl_Ctexts7reverseEv:         # @_ZNK2kc11impl_Ctexts7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc11impl_CtextsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc11impl_CtextsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1187_2
	.p2align	4, , 16
.LBB1187_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1187_1
	b	.LBB1187_3
.LBB1187_2:
	move	$s1, $s0
.LBB1187_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_CtextsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc11impl_CtextsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1187:
	.size	_ZNK2kc11impl_Ctexts7reverseEv, .Lfunc_end1187-_ZNK2kc11impl_Ctexts7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc11impl_Ctexts4lastEv     # -- Begin function _ZNK2kc11impl_Ctexts4lastEv
	.p2align	5
	.type	_ZNK2kc11impl_Ctexts4lastEv,@function
_ZNK2kc11impl_Ctexts4lastEv:            # @_ZNK2kc11impl_Ctexts4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1188_5
	.p2align	4, , 16
.LBB1188_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1188_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1188_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_CtextE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1188_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1188_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1188:
	.size	_ZNK2kc11impl_Ctexts4lastEv, .Lfunc_end1188-_ZNK2kc11impl_Ctexts4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc11impl_Ctexts6is_nilEv   # -- Begin function _ZNK2kc11impl_Ctexts6is_nilEv
	.p2align	5
	.type	_ZNK2kc11impl_Ctexts6is_nilEv,@function
_ZNK2kc11impl_Ctexts6is_nilEv:          # @_ZNK2kc11impl_Ctexts6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1189:
	.size	_ZNK2kc11impl_Ctexts6is_nilEv, .Lfunc_end1189-_ZNK2kc11impl_Ctexts6is_nilEv
                                        # -- End function
	.globl	_ZN2kc11impl_Ctexts3mapEPFPNS_10impl_CtextES2_E # -- Begin function _ZN2kc11impl_Ctexts3mapEPFPNS_10impl_CtextES2_E
	.p2align	5
	.type	_ZN2kc11impl_Ctexts3mapEPFPNS_10impl_CtextES2_E,@function
_ZN2kc11impl_Ctexts3mapEPFPNS_10impl_CtextES2_E: # @_ZN2kc11impl_Ctexts3mapEPFPNS_10impl_CtextES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 58
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1190_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc11impl_CtextsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc11impl_CtextsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1190_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1190:
	.size	_ZN2kc11impl_Ctexts3mapEPFPNS_10impl_CtextES2_E, .Lfunc_end1190-_ZN2kc11impl_Ctexts3mapEPFPNS_10impl_CtextES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11impl_Ctexts6filterEPFbPNS_10impl_CtextEE # -- Begin function _ZN2kc11impl_Ctexts6filterEPFbPNS_10impl_CtextEE
	.p2align	5
	.type	_ZN2kc11impl_Ctexts6filterEPFbPNS_10impl_CtextEE,@function
_ZN2kc11impl_Ctexts6filterEPFbPNS_10impl_CtextEE: # @_ZN2kc11impl_Ctexts6filterEPFbPNS_10impl_CtextEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 58
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1191_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc11impl_CtextsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc11impl_CtextsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1191_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1191:
	.size	_ZN2kc11impl_Ctexts6filterEPFbPNS_10impl_CtextEE, .Lfunc_end1191-_ZN2kc11impl_Ctexts6filterEPFbPNS_10impl_CtextEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11impl_Ctexts6appendEPNS_10impl_CtextE # -- Begin function _ZN2kc11impl_Ctexts6appendEPNS_10impl_CtextE
	.p2align	5
	.type	_ZN2kc11impl_Ctexts6appendEPNS_10impl_CtextE,@function
_ZN2kc11impl_Ctexts6appendEPNS_10impl_CtextE: # @_ZN2kc11impl_Ctexts6appendEPNS_10impl_CtextE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc11impl_CtextsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc11impl_CtextsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1192_2
	.p2align	4, , 16
.LBB1192_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1192_1
.LBB1192_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc11impl_CtextsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc11impl_CtextsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1192:
	.size	_ZN2kc11impl_Ctexts6appendEPNS_10impl_CtextE, .Lfunc_end1192-_ZN2kc11impl_Ctexts6appendEPNS_10impl_CtextE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11impl_Ctexts5mergeEPS0_PFPNS_10impl_CtextES3_S3_E # -- Begin function _ZN2kc11impl_Ctexts5mergeEPS0_PFPNS_10impl_CtextES3_S3_E
	.p2align	5
	.type	_ZN2kc11impl_Ctexts5mergeEPS0_PFPNS_10impl_CtextES3_S3_E,@function
_ZN2kc11impl_Ctexts5mergeEPS0_PFPNS_10impl_CtextES3_S3_E: # @_ZN2kc11impl_Ctexts5mergeEPS0_PFPNS_10impl_CtextES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 58
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1193_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc11impl_CtextsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc11impl_CtextsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1193_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1193:
	.size	_ZN2kc11impl_Ctexts5mergeEPS0_PFPNS_10impl_CtextES3_S3_E, .Lfunc_end1193-_ZN2kc11impl_Ctexts5mergeEPS0_PFPNS_10impl_CtextES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11impl_Ctexts6reduceEPNS_10impl_CtextEPFS2_S2_S2_E # -- Begin function _ZN2kc11impl_Ctexts6reduceEPNS_10impl_CtextEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc11impl_Ctexts6reduceEPNS_10impl_CtextEPFS2_S2_S2_E,@function
_ZN2kc11impl_Ctexts6reduceEPNS_10impl_CtextEPFS2_S2_S2_E: # @_ZN2kc11impl_Ctexts6reduceEPNS_10impl_CtextEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1194_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_CtextE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1194_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1194:
	.size	_ZN2kc11impl_Ctexts6reduceEPNS_10impl_CtextEPFS2_S2_S2_E, .Lfunc_end1194-_ZN2kc11impl_Ctexts6reduceEPNS_10impl_CtextEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_17impl_includefilesES2_ # -- Begin function _ZN2kc6concatEPKNS_17impl_includefilesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_17impl_includefilesES2_,@function
_ZN2kc6concatEPKNS_17impl_includefilesES2_: # @_ZN2kc6concatEPKNS_17impl_includefilesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 60
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1195_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_includefilesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_includefilesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1195_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1195:
	.size	_ZN2kc6concatEPKNS_17impl_includefilesES2_, .Lfunc_end1195-_ZN2kc6concatEPKNS_17impl_includefilesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_includefiles7reverseEv # -- Begin function _ZNK2kc17impl_includefiles7reverseEv
	.p2align	5
	.type	_ZNK2kc17impl_includefiles7reverseEv,@function
_ZNK2kc17impl_includefiles7reverseEv:   # @_ZNK2kc17impl_includefiles7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_includefilesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc17impl_includefilesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1196_2
	.p2align	4, , 16
.LBB1196_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1196_1
	b	.LBB1196_3
.LBB1196_2:
	move	$s1, $s0
.LBB1196_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_includefilesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc17impl_includefilesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1196:
	.size	_ZNK2kc17impl_includefiles7reverseEv, .Lfunc_end1196-_ZNK2kc17impl_includefiles7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_includefiles4lastEv # -- Begin function _ZNK2kc17impl_includefiles4lastEv
	.p2align	5
	.type	_ZNK2kc17impl_includefiles4lastEv,@function
_ZNK2kc17impl_includefiles4lastEv:      # @_ZNK2kc17impl_includefiles4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1197_5
	.p2align	4, , 16
.LBB1197_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1197_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1197_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_includefileE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_includefileE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1197_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1197_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1197:
	.size	_ZNK2kc17impl_includefiles4lastEv, .Lfunc_end1197-_ZNK2kc17impl_includefiles4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_includefiles6is_nilEv # -- Begin function _ZNK2kc17impl_includefiles6is_nilEv
	.p2align	5
	.type	_ZNK2kc17impl_includefiles6is_nilEv,@function
_ZNK2kc17impl_includefiles6is_nilEv:    # @_ZNK2kc17impl_includefiles6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1198:
	.size	_ZNK2kc17impl_includefiles6is_nilEv, .Lfunc_end1198-_ZNK2kc17impl_includefiles6is_nilEv
                                        # -- End function
	.globl	_ZN2kc17impl_includefiles3mapEPFPNS_16impl_includefileES2_E # -- Begin function _ZN2kc17impl_includefiles3mapEPFPNS_16impl_includefileES2_E
	.p2align	5
	.type	_ZN2kc17impl_includefiles3mapEPFPNS_16impl_includefileES2_E,@function
_ZN2kc17impl_includefiles3mapEPFPNS_16impl_includefileES2_E: # @_ZN2kc17impl_includefiles3mapEPFPNS_16impl_includefileES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 60
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1199_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_includefilesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_includefilesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1199_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1199:
	.size	_ZN2kc17impl_includefiles3mapEPFPNS_16impl_includefileES2_E, .Lfunc_end1199-_ZN2kc17impl_includefiles3mapEPFPNS_16impl_includefileES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_includefiles6filterEPFbPNS_16impl_includefileEE # -- Begin function _ZN2kc17impl_includefiles6filterEPFbPNS_16impl_includefileEE
	.p2align	5
	.type	_ZN2kc17impl_includefiles6filterEPFbPNS_16impl_includefileEE,@function
_ZN2kc17impl_includefiles6filterEPFbPNS_16impl_includefileEE: # @_ZN2kc17impl_includefiles6filterEPFbPNS_16impl_includefileEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 60
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1200_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_includefilesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_includefilesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1200_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1200:
	.size	_ZN2kc17impl_includefiles6filterEPFbPNS_16impl_includefileEE, .Lfunc_end1200-_ZN2kc17impl_includefiles6filterEPFbPNS_16impl_includefileEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_includefiles6appendEPNS_16impl_includefileE # -- Begin function _ZN2kc17impl_includefiles6appendEPNS_16impl_includefileE
	.p2align	5
	.type	_ZN2kc17impl_includefiles6appendEPNS_16impl_includefileE,@function
_ZN2kc17impl_includefiles6appendEPNS_16impl_includefileE: # @_ZN2kc17impl_includefiles6appendEPNS_16impl_includefileE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_includefilesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc17impl_includefilesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1201_2
	.p2align	4, , 16
.LBB1201_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1201_1
.LBB1201_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_includefilesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc17impl_includefilesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1201:
	.size	_ZN2kc17impl_includefiles6appendEPNS_16impl_includefileE, .Lfunc_end1201-_ZN2kc17impl_includefiles6appendEPNS_16impl_includefileE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_includefiles5mergeEPS0_PFPNS_16impl_includefileES3_S3_E # -- Begin function _ZN2kc17impl_includefiles5mergeEPS0_PFPNS_16impl_includefileES3_S3_E
	.p2align	5
	.type	_ZN2kc17impl_includefiles5mergeEPS0_PFPNS_16impl_includefileES3_S3_E,@function
_ZN2kc17impl_includefiles5mergeEPS0_PFPNS_16impl_includefileES3_S3_E: # @_ZN2kc17impl_includefiles5mergeEPS0_PFPNS_16impl_includefileES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 60
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1202_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_includefilesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_includefilesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1202_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1202:
	.size	_ZN2kc17impl_includefiles5mergeEPS0_PFPNS_16impl_includefileES3_S3_E, .Lfunc_end1202-_ZN2kc17impl_includefiles5mergeEPS0_PFPNS_16impl_includefileES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_includefiles6reduceEPNS_16impl_includefileEPFS2_S2_S2_E # -- Begin function _ZN2kc17impl_includefiles6reduceEPNS_16impl_includefileEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc17impl_includefiles6reduceEPNS_16impl_includefileEPFS2_S2_S2_E,@function
_ZN2kc17impl_includefiles6reduceEPNS_16impl_includefileEPFS2_S2_S2_E: # @_ZN2kc17impl_includefiles6reduceEPNS_16impl_includefileEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1203_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_includefileE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_includefileE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1203_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1203:
	.size	_ZN2kc17impl_includefiles6reduceEPNS_16impl_includefileEPFS2_S2_S2_E, .Lfunc_end1203-_ZN2kc17impl_includefiles6reduceEPNS_16impl_includefileEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_24impl_includedeclarationsES2_ # -- Begin function _ZN2kc6concatEPKNS_24impl_includedeclarationsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_24impl_includedeclarationsES2_,@function
_ZN2kc6concatEPKNS_24impl_includedeclarationsES2_: # @_ZN2kc6concatEPKNS_24impl_includedeclarationsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 63
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1204_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_includedeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_includedeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1204_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1204:
	.size	_ZN2kc6concatEPKNS_24impl_includedeclarationsES2_, .Lfunc_end1204-_ZN2kc6concatEPKNS_24impl_includedeclarationsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc24impl_includedeclarations7reverseEv # -- Begin function _ZNK2kc24impl_includedeclarations7reverseEv
	.p2align	5
	.type	_ZNK2kc24impl_includedeclarations7reverseEv,@function
_ZNK2kc24impl_includedeclarations7reverseEv: # @_ZNK2kc24impl_includedeclarations7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc24impl_includedeclarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc24impl_includedeclarationsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1205_2
	.p2align	4, , 16
.LBB1205_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1205_1
	b	.LBB1205_3
.LBB1205_2:
	move	$s1, $s0
.LBB1205_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_includedeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc24impl_includedeclarationsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1205:
	.size	_ZNK2kc24impl_includedeclarations7reverseEv, .Lfunc_end1205-_ZNK2kc24impl_includedeclarations7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc24impl_includedeclarations4lastEv # -- Begin function _ZNK2kc24impl_includedeclarations4lastEv
	.p2align	5
	.type	_ZNK2kc24impl_includedeclarations4lastEv,@function
_ZNK2kc24impl_includedeclarations4lastEv: # @_ZNK2kc24impl_includedeclarations4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1206_5
	.p2align	4, , 16
.LBB1206_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1206_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1206_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_includedeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_includedeclarationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1206_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1206_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1206:
	.size	_ZNK2kc24impl_includedeclarations4lastEv, .Lfunc_end1206-_ZNK2kc24impl_includedeclarations4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc24impl_includedeclarations6is_nilEv # -- Begin function _ZNK2kc24impl_includedeclarations6is_nilEv
	.p2align	5
	.type	_ZNK2kc24impl_includedeclarations6is_nilEv,@function
_ZNK2kc24impl_includedeclarations6is_nilEv: # @_ZNK2kc24impl_includedeclarations6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1207:
	.size	_ZNK2kc24impl_includedeclarations6is_nilEv, .Lfunc_end1207-_ZNK2kc24impl_includedeclarations6is_nilEv
                                        # -- End function
	.globl	_ZN2kc24impl_includedeclarations3mapEPFPNS_23impl_includedeclarationES2_E # -- Begin function _ZN2kc24impl_includedeclarations3mapEPFPNS_23impl_includedeclarationES2_E
	.p2align	5
	.type	_ZN2kc24impl_includedeclarations3mapEPFPNS_23impl_includedeclarationES2_E,@function
_ZN2kc24impl_includedeclarations3mapEPFPNS_23impl_includedeclarationES2_E: # @_ZN2kc24impl_includedeclarations3mapEPFPNS_23impl_includedeclarationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 63
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1208_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_includedeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_includedeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1208_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1208:
	.size	_ZN2kc24impl_includedeclarations3mapEPFPNS_23impl_includedeclarationES2_E, .Lfunc_end1208-_ZN2kc24impl_includedeclarations3mapEPFPNS_23impl_includedeclarationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_includedeclarations6filterEPFbPNS_23impl_includedeclarationEE # -- Begin function _ZN2kc24impl_includedeclarations6filterEPFbPNS_23impl_includedeclarationEE
	.p2align	5
	.type	_ZN2kc24impl_includedeclarations6filterEPFbPNS_23impl_includedeclarationEE,@function
_ZN2kc24impl_includedeclarations6filterEPFbPNS_23impl_includedeclarationEE: # @_ZN2kc24impl_includedeclarations6filterEPFbPNS_23impl_includedeclarationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 63
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1209_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_includedeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_includedeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1209_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1209:
	.size	_ZN2kc24impl_includedeclarations6filterEPFbPNS_23impl_includedeclarationEE, .Lfunc_end1209-_ZN2kc24impl_includedeclarations6filterEPFbPNS_23impl_includedeclarationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_includedeclarations6appendEPNS_23impl_includedeclarationE # -- Begin function _ZN2kc24impl_includedeclarations6appendEPNS_23impl_includedeclarationE
	.p2align	5
	.type	_ZN2kc24impl_includedeclarations6appendEPNS_23impl_includedeclarationE,@function
_ZN2kc24impl_includedeclarations6appendEPNS_23impl_includedeclarationE: # @_ZN2kc24impl_includedeclarations6appendEPNS_23impl_includedeclarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc24impl_includedeclarationsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc24impl_includedeclarationsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1210_2
	.p2align	4, , 16
.LBB1210_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1210_1
.LBB1210_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_includedeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc24impl_includedeclarationsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1210:
	.size	_ZN2kc24impl_includedeclarations6appendEPNS_23impl_includedeclarationE, .Lfunc_end1210-_ZN2kc24impl_includedeclarations6appendEPNS_23impl_includedeclarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_includedeclarations5mergeEPS0_PFPNS_23impl_includedeclarationES3_S3_E # -- Begin function _ZN2kc24impl_includedeclarations5mergeEPS0_PFPNS_23impl_includedeclarationES3_S3_E
	.p2align	5
	.type	_ZN2kc24impl_includedeclarations5mergeEPS0_PFPNS_23impl_includedeclarationES3_S3_E,@function
_ZN2kc24impl_includedeclarations5mergeEPS0_PFPNS_23impl_includedeclarationES3_S3_E: # @_ZN2kc24impl_includedeclarations5mergeEPS0_PFPNS_23impl_includedeclarationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 63
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1211_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_includedeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_includedeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1211_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1211:
	.size	_ZN2kc24impl_includedeclarations5mergeEPS0_PFPNS_23impl_includedeclarationES3_S3_E, .Lfunc_end1211-_ZN2kc24impl_includedeclarations5mergeEPS0_PFPNS_23impl_includedeclarationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_includedeclarations6reduceEPNS_23impl_includedeclarationEPFS2_S2_S2_E # -- Begin function _ZN2kc24impl_includedeclarations6reduceEPNS_23impl_includedeclarationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc24impl_includedeclarations6reduceEPNS_23impl_includedeclarationEPFS2_S2_S2_E,@function
_ZN2kc24impl_includedeclarations6reduceEPNS_23impl_includedeclarationEPFS2_S2_S2_E: # @_ZN2kc24impl_includedeclarations6reduceEPNS_23impl_includedeclarationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1212_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_includedeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_includedeclarationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1212_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1212:
	.size	_ZN2kc24impl_includedeclarations6reduceEPNS_23impl_includedeclarationEPFS2_S2_S2_E, .Lfunc_end1212-_ZN2kc24impl_includedeclarations6reduceEPNS_23impl_includedeclarationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_19impl_rwdeclarationsES2_ # -- Begin function _ZN2kc6concatEPKNS_19impl_rwdeclarationsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_19impl_rwdeclarationsES2_,@function
_ZN2kc6concatEPKNS_19impl_rwdeclarationsES2_: # @_ZN2kc6concatEPKNS_19impl_rwdeclarationsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 66
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1213_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_rwdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_rwdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1213_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1213:
	.size	_ZN2kc6concatEPKNS_19impl_rwdeclarationsES2_, .Lfunc_end1213-_ZN2kc6concatEPKNS_19impl_rwdeclarationsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_rwdeclarations7reverseEv # -- Begin function _ZNK2kc19impl_rwdeclarations7reverseEv
	.p2align	5
	.type	_ZNK2kc19impl_rwdeclarations7reverseEv,@function
_ZNK2kc19impl_rwdeclarations7reverseEv: # @_ZNK2kc19impl_rwdeclarations7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_rwdeclarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc19impl_rwdeclarationsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1214_2
	.p2align	4, , 16
.LBB1214_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1214_1
	b	.LBB1214_3
.LBB1214_2:
	move	$s1, $s0
.LBB1214_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_rwdeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_rwdeclarationsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1214:
	.size	_ZNK2kc19impl_rwdeclarations7reverseEv, .Lfunc_end1214-_ZNK2kc19impl_rwdeclarations7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_rwdeclarations4lastEv # -- Begin function _ZNK2kc19impl_rwdeclarations4lastEv
	.p2align	5
	.type	_ZNK2kc19impl_rwdeclarations4lastEv,@function
_ZNK2kc19impl_rwdeclarations4lastEv:    # @_ZNK2kc19impl_rwdeclarations4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1215_5
	.p2align	4, , 16
.LBB1215_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1215_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1215_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_rwdeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_rwdeclarationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1215_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1215_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1215:
	.size	_ZNK2kc19impl_rwdeclarations4lastEv, .Lfunc_end1215-_ZNK2kc19impl_rwdeclarations4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_rwdeclarations6is_nilEv # -- Begin function _ZNK2kc19impl_rwdeclarations6is_nilEv
	.p2align	5
	.type	_ZNK2kc19impl_rwdeclarations6is_nilEv,@function
_ZNK2kc19impl_rwdeclarations6is_nilEv:  # @_ZNK2kc19impl_rwdeclarations6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1216:
	.size	_ZNK2kc19impl_rwdeclarations6is_nilEv, .Lfunc_end1216-_ZNK2kc19impl_rwdeclarations6is_nilEv
                                        # -- End function
	.globl	_ZN2kc19impl_rwdeclarations3mapEPFPNS_18impl_rwdeclarationES2_E # -- Begin function _ZN2kc19impl_rwdeclarations3mapEPFPNS_18impl_rwdeclarationES2_E
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarations3mapEPFPNS_18impl_rwdeclarationES2_E,@function
_ZN2kc19impl_rwdeclarations3mapEPFPNS_18impl_rwdeclarationES2_E: # @_ZN2kc19impl_rwdeclarations3mapEPFPNS_18impl_rwdeclarationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 66
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1217_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_rwdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_rwdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1217_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1217:
	.size	_ZN2kc19impl_rwdeclarations3mapEPFPNS_18impl_rwdeclarationES2_E, .Lfunc_end1217-_ZN2kc19impl_rwdeclarations3mapEPFPNS_18impl_rwdeclarationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rwdeclarations6filterEPFbPNS_18impl_rwdeclarationEE # -- Begin function _ZN2kc19impl_rwdeclarations6filterEPFbPNS_18impl_rwdeclarationEE
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarations6filterEPFbPNS_18impl_rwdeclarationEE,@function
_ZN2kc19impl_rwdeclarations6filterEPFbPNS_18impl_rwdeclarationEE: # @_ZN2kc19impl_rwdeclarations6filterEPFbPNS_18impl_rwdeclarationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 66
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1218_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_rwdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_rwdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1218_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1218:
	.size	_ZN2kc19impl_rwdeclarations6filterEPFbPNS_18impl_rwdeclarationEE, .Lfunc_end1218-_ZN2kc19impl_rwdeclarations6filterEPFbPNS_18impl_rwdeclarationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rwdeclarations6appendEPNS_18impl_rwdeclarationE # -- Begin function _ZN2kc19impl_rwdeclarations6appendEPNS_18impl_rwdeclarationE
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarations6appendEPNS_18impl_rwdeclarationE,@function
_ZN2kc19impl_rwdeclarations6appendEPNS_18impl_rwdeclarationE: # @_ZN2kc19impl_rwdeclarations6appendEPNS_18impl_rwdeclarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_rwdeclarationsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_rwdeclarationsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1219_2
	.p2align	4, , 16
.LBB1219_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1219_1
.LBB1219_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_rwdeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_rwdeclarationsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1219:
	.size	_ZN2kc19impl_rwdeclarations6appendEPNS_18impl_rwdeclarationE, .Lfunc_end1219-_ZN2kc19impl_rwdeclarations6appendEPNS_18impl_rwdeclarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rwdeclarations5mergeEPS0_PFPNS_18impl_rwdeclarationES3_S3_E # -- Begin function _ZN2kc19impl_rwdeclarations5mergeEPS0_PFPNS_18impl_rwdeclarationES3_S3_E
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarations5mergeEPS0_PFPNS_18impl_rwdeclarationES3_S3_E,@function
_ZN2kc19impl_rwdeclarations5mergeEPS0_PFPNS_18impl_rwdeclarationES3_S3_E: # @_ZN2kc19impl_rwdeclarations5mergeEPS0_PFPNS_18impl_rwdeclarationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 66
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1220_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_rwdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_rwdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1220_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1220:
	.size	_ZN2kc19impl_rwdeclarations5mergeEPS0_PFPNS_18impl_rwdeclarationES3_S3_E, .Lfunc_end1220-_ZN2kc19impl_rwdeclarations5mergeEPS0_PFPNS_18impl_rwdeclarationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rwdeclarations6reduceEPNS_18impl_rwdeclarationEPFS2_S2_S2_E # -- Begin function _ZN2kc19impl_rwdeclarations6reduceEPNS_18impl_rwdeclarationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarations6reduceEPNS_18impl_rwdeclarationEPFS2_S2_S2_E,@function
_ZN2kc19impl_rwdeclarations6reduceEPNS_18impl_rwdeclarationEPFS2_S2_S2_E: # @_ZN2kc19impl_rwdeclarations6reduceEPNS_18impl_rwdeclarationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1221_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_rwdeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_rwdeclarationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1221_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1221:
	.size	_ZN2kc19impl_rwdeclarations6reduceEPNS_18impl_rwdeclarationEPFS2_S2_S2_E, .Lfunc_end1221-_ZN2kc19impl_rwdeclarations6reduceEPNS_18impl_rwdeclarationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_19impl_rewriteclausesES2_ # -- Begin function _ZN2kc6concatEPKNS_19impl_rewriteclausesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_19impl_rewriteclausesES2_,@function
_ZN2kc6concatEPKNS_19impl_rewriteclausesES2_: # @_ZN2kc6concatEPKNS_19impl_rewriteclausesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 69
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1222_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_rewriteclausesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_rewriteclausesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1222_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1222:
	.size	_ZN2kc6concatEPKNS_19impl_rewriteclausesES2_, .Lfunc_end1222-_ZN2kc6concatEPKNS_19impl_rewriteclausesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_rewriteclauses7reverseEv # -- Begin function _ZNK2kc19impl_rewriteclauses7reverseEv
	.p2align	5
	.type	_ZNK2kc19impl_rewriteclauses7reverseEv,@function
_ZNK2kc19impl_rewriteclauses7reverseEv: # @_ZNK2kc19impl_rewriteclauses7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_rewriteclausesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc19impl_rewriteclausesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1223_2
	.p2align	4, , 16
.LBB1223_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1223_1
	b	.LBB1223_3
.LBB1223_2:
	move	$s1, $s0
.LBB1223_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_rewriteclausesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_rewriteclausesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1223:
	.size	_ZNK2kc19impl_rewriteclauses7reverseEv, .Lfunc_end1223-_ZNK2kc19impl_rewriteclauses7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_rewriteclauses4lastEv # -- Begin function _ZNK2kc19impl_rewriteclauses4lastEv
	.p2align	5
	.type	_ZNK2kc19impl_rewriteclauses4lastEv,@function
_ZNK2kc19impl_rewriteclauses4lastEv:    # @_ZNK2kc19impl_rewriteclauses4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1224_5
	.p2align	4, , 16
.LBB1224_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1224_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1224_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_rewriteclauseE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_rewriteclauseE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1224_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1224_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1224:
	.size	_ZNK2kc19impl_rewriteclauses4lastEv, .Lfunc_end1224-_ZNK2kc19impl_rewriteclauses4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_rewriteclauses6is_nilEv # -- Begin function _ZNK2kc19impl_rewriteclauses6is_nilEv
	.p2align	5
	.type	_ZNK2kc19impl_rewriteclauses6is_nilEv,@function
_ZNK2kc19impl_rewriteclauses6is_nilEv:  # @_ZNK2kc19impl_rewriteclauses6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1225:
	.size	_ZNK2kc19impl_rewriteclauses6is_nilEv, .Lfunc_end1225-_ZNK2kc19impl_rewriteclauses6is_nilEv
                                        # -- End function
	.globl	_ZN2kc19impl_rewriteclauses3mapEPFPNS_18impl_rewriteclauseES2_E # -- Begin function _ZN2kc19impl_rewriteclauses3mapEPFPNS_18impl_rewriteclauseES2_E
	.p2align	5
	.type	_ZN2kc19impl_rewriteclauses3mapEPFPNS_18impl_rewriteclauseES2_E,@function
_ZN2kc19impl_rewriteclauses3mapEPFPNS_18impl_rewriteclauseES2_E: # @_ZN2kc19impl_rewriteclauses3mapEPFPNS_18impl_rewriteclauseES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 69
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1226_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_rewriteclausesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_rewriteclausesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1226_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1226:
	.size	_ZN2kc19impl_rewriteclauses3mapEPFPNS_18impl_rewriteclauseES2_E, .Lfunc_end1226-_ZN2kc19impl_rewriteclauses3mapEPFPNS_18impl_rewriteclauseES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rewriteclauses6filterEPFbPNS_18impl_rewriteclauseEE # -- Begin function _ZN2kc19impl_rewriteclauses6filterEPFbPNS_18impl_rewriteclauseEE
	.p2align	5
	.type	_ZN2kc19impl_rewriteclauses6filterEPFbPNS_18impl_rewriteclauseEE,@function
_ZN2kc19impl_rewriteclauses6filterEPFbPNS_18impl_rewriteclauseEE: # @_ZN2kc19impl_rewriteclauses6filterEPFbPNS_18impl_rewriteclauseEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 69
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1227_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_rewriteclausesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_rewriteclausesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1227_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1227:
	.size	_ZN2kc19impl_rewriteclauses6filterEPFbPNS_18impl_rewriteclauseEE, .Lfunc_end1227-_ZN2kc19impl_rewriteclauses6filterEPFbPNS_18impl_rewriteclauseEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rewriteclauses6appendEPNS_18impl_rewriteclauseE # -- Begin function _ZN2kc19impl_rewriteclauses6appendEPNS_18impl_rewriteclauseE
	.p2align	5
	.type	_ZN2kc19impl_rewriteclauses6appendEPNS_18impl_rewriteclauseE,@function
_ZN2kc19impl_rewriteclauses6appendEPNS_18impl_rewriteclauseE: # @_ZN2kc19impl_rewriteclauses6appendEPNS_18impl_rewriteclauseE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_rewriteclausesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_rewriteclausesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1228_2
	.p2align	4, , 16
.LBB1228_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1228_1
.LBB1228_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_rewriteclausesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_rewriteclausesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1228:
	.size	_ZN2kc19impl_rewriteclauses6appendEPNS_18impl_rewriteclauseE, .Lfunc_end1228-_ZN2kc19impl_rewriteclauses6appendEPNS_18impl_rewriteclauseE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rewriteclauses5mergeEPS0_PFPNS_18impl_rewriteclauseES3_S3_E # -- Begin function _ZN2kc19impl_rewriteclauses5mergeEPS0_PFPNS_18impl_rewriteclauseES3_S3_E
	.p2align	5
	.type	_ZN2kc19impl_rewriteclauses5mergeEPS0_PFPNS_18impl_rewriteclauseES3_S3_E,@function
_ZN2kc19impl_rewriteclauses5mergeEPS0_PFPNS_18impl_rewriteclauseES3_S3_E: # @_ZN2kc19impl_rewriteclauses5mergeEPS0_PFPNS_18impl_rewriteclauseES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 69
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1229_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_rewriteclausesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_rewriteclausesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1229_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1229:
	.size	_ZN2kc19impl_rewriteclauses5mergeEPS0_PFPNS_18impl_rewriteclauseES3_S3_E, .Lfunc_end1229-_ZN2kc19impl_rewriteclauses5mergeEPS0_PFPNS_18impl_rewriteclauseES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rewriteclauses6reduceEPNS_18impl_rewriteclauseEPFS2_S2_S2_E # -- Begin function _ZN2kc19impl_rewriteclauses6reduceEPNS_18impl_rewriteclauseEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc19impl_rewriteclauses6reduceEPNS_18impl_rewriteclauseEPFS2_S2_S2_E,@function
_ZN2kc19impl_rewriteclauses6reduceEPNS_18impl_rewriteclauseEPFS2_S2_S2_E: # @_ZN2kc19impl_rewriteclauses6reduceEPNS_18impl_rewriteclauseEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1230_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_rewriteclauseE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_rewriteclauseE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1230_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1230:
	.size	_ZN2kc19impl_rewriteclauses6reduceEPNS_18impl_rewriteclauseEPFS2_S2_S2_E, .Lfunc_end1230-_ZN2kc19impl_rewriteclauses6reduceEPNS_18impl_rewriteclauseEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_18impl_patternchainsES2_ # -- Begin function _ZN2kc6concatEPKNS_18impl_patternchainsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_18impl_patternchainsES2_,@function
_ZN2kc6concatEPKNS_18impl_patternchainsES2_: # @_ZN2kc6concatEPKNS_18impl_patternchainsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 72
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1231_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1231_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1231:
	.size	_ZN2kc6concatEPKNS_18impl_patternchainsES2_, .Lfunc_end1231-_ZN2kc6concatEPKNS_18impl_patternchainsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_patternchains7reverseEv # -- Begin function _ZNK2kc18impl_patternchains7reverseEv
	.p2align	5
	.type	_ZNK2kc18impl_patternchains7reverseEv,@function
_ZNK2kc18impl_patternchains7reverseEv:  # @_ZNK2kc18impl_patternchains7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_patternchainsE+16)
	addi.d	$s5, $a0, %pc_lo12(_ZTVN2kc18impl_patternchainsE+16)
	st.d	$s5, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1232_3
# %bb.1:                                # %.lr.ph.i.preheader
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$s1, $a0, %pc_lo12(.L.str)
	addi.w	$s2, $zero, -1
	.p2align	4, , 16
.LBB1232_2:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s4, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$s5, $a0, 0
	st.d	$s4, $a0, 24
	st.d	$s0, $a0, 32
	st.w	$zero, $a0, 8
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s3, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s3
	bnez	$a0, .LBB1232_2
	b	.LBB1232_4
.LBB1232_3:
	move	$s3, $s0
.LBB1232_4:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
	move	$a0, $s3
	move	$a3, $zero
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1232:
	.size	_ZNK2kc18impl_patternchains7reverseEv, .Lfunc_end1232-_ZNK2kc18impl_patternchains7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_patternchains4lastEv # -- Begin function _ZNK2kc18impl_patternchains4lastEv
	.p2align	5
	.type	_ZNK2kc18impl_patternchains4lastEv,@function
_ZNK2kc18impl_patternchains4lastEv:     # @_ZNK2kc18impl_patternchains4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1233_5
	.p2align	4, , 16
.LBB1233_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1233_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1233_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1233_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1233_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1233:
	.size	_ZNK2kc18impl_patternchains4lastEv, .Lfunc_end1233-_ZNK2kc18impl_patternchains4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_patternchains6is_nilEv # -- Begin function _ZNK2kc18impl_patternchains6is_nilEv
	.p2align	5
	.type	_ZNK2kc18impl_patternchains6is_nilEv,@function
_ZNK2kc18impl_patternchains6is_nilEv:   # @_ZNK2kc18impl_patternchains6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 32
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1234:
	.size	_ZNK2kc18impl_patternchains6is_nilEv, .Lfunc_end1234-_ZNK2kc18impl_patternchains6is_nilEv
                                        # -- End function
	.globl	_ZN2kc18impl_patternchains3mapEPFPNS_17impl_patternchainES2_E # -- Begin function _ZN2kc18impl_patternchains3mapEPFPNS_17impl_patternchainES2_E
	.p2align	5
	.type	_ZN2kc18impl_patternchains3mapEPFPNS_17impl_patternchainES2_E,@function
_ZN2kc18impl_patternchains3mapEPFPNS_17impl_patternchainES2_E: # @_ZN2kc18impl_patternchains3mapEPFPNS_17impl_patternchainES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 72
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1235_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1235_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1235:
	.size	_ZN2kc18impl_patternchains3mapEPFPNS_17impl_patternchainES2_E, .Lfunc_end1235-_ZN2kc18impl_patternchains3mapEPFPNS_17impl_patternchainES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_patternchains6filterEPFbPNS_17impl_patternchainEE # -- Begin function _ZN2kc18impl_patternchains6filterEPFbPNS_17impl_patternchainEE
	.p2align	5
	.type	_ZN2kc18impl_patternchains6filterEPFbPNS_17impl_patternchainEE,@function
_ZN2kc18impl_patternchains6filterEPFbPNS_17impl_patternchainEE: # @_ZN2kc18impl_patternchains6filterEPFbPNS_17impl_patternchainEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 72
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1236_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1236_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1236:
	.size	_ZN2kc18impl_patternchains6filterEPFbPNS_17impl_patternchainEE, .Lfunc_end1236-_ZN2kc18impl_patternchains6filterEPFbPNS_17impl_patternchainEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_patternchains6appendEPNS_17impl_patternchainE # -- Begin function _ZN2kc18impl_patternchains6appendEPNS_17impl_patternchainE
	.p2align	5
	.type	_ZN2kc18impl_patternchains6appendEPNS_17impl_patternchainE,@function
_ZN2kc18impl_patternchains6appendEPNS_17impl_patternchainE: # @_ZN2kc18impl_patternchains6appendEPNS_17impl_patternchainE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_patternchainsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc18impl_patternchainsE+16)
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1237_2
	.p2align	4, , 16
.LBB1237_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1237_1
.LBB1237_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1237:
	.size	_ZN2kc18impl_patternchains6appendEPNS_17impl_patternchainE, .Lfunc_end1237-_ZN2kc18impl_patternchains6appendEPNS_17impl_patternchainE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_patternchains5mergeEPS0_PFPNS_17impl_patternchainES3_S3_E # -- Begin function _ZN2kc18impl_patternchains5mergeEPS0_PFPNS_17impl_patternchainES3_S3_E
	.p2align	5
	.type	_ZN2kc18impl_patternchains5mergeEPS0_PFPNS_17impl_patternchainES3_S3_E,@function
_ZN2kc18impl_patternchains5mergeEPS0_PFPNS_17impl_patternchainES3_S3_E: # @_ZN2kc18impl_patternchains5mergeEPS0_PFPNS_17impl_patternchainES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 72
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1238_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_patternchainsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_patternchainsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1238_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1238:
	.size	_ZN2kc18impl_patternchains5mergeEPS0_PFPNS_17impl_patternchainES3_S3_E, .Lfunc_end1238-_ZN2kc18impl_patternchains5mergeEPS0_PFPNS_17impl_patternchainES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_patternchains6reduceEPNS_17impl_patternchainEPFS2_S2_S2_E # -- Begin function _ZN2kc18impl_patternchains6reduceEPNS_17impl_patternchainEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc18impl_patternchains6reduceEPNS_17impl_patternchainEPFS2_S2_S2_E,@function
_ZN2kc18impl_patternchains6reduceEPNS_17impl_patternchainEPFS2_S2_S2_E: # @_ZN2kc18impl_patternchains6reduceEPNS_17impl_patternchainEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1239_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1239_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1239:
	.size	_ZN2kc18impl_patternchains6reduceEPNS_17impl_patternchainEPFS2_S2_S2_E, .Lfunc_end1239-_ZN2kc18impl_patternchains6reduceEPNS_17impl_patternchainEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_17impl_patternchainES2_ # -- Begin function _ZN2kc6concatEPKNS_17impl_patternchainES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_17impl_patternchainES2_,@function
_ZN2kc6concatEPKNS_17impl_patternchainES2_: # @_ZN2kc6concatEPKNS_17impl_patternchainES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 74
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1240_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1240_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1240:
	.size	_ZN2kc6concatEPKNS_17impl_patternchainES2_, .Lfunc_end1240-_ZN2kc6concatEPKNS_17impl_patternchainES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_patternchain7reverseEv # -- Begin function _ZNK2kc17impl_patternchain7reverseEv
	.p2align	5
	.type	_ZNK2kc17impl_patternchain7reverseEv,@function
_ZNK2kc17impl_patternchain7reverseEv:   # @_ZNK2kc17impl_patternchain7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_patternchainE+16)
	addi.d	$s5, $a0, %pc_lo12(_ZTVN2kc17impl_patternchainE+16)
	st.d	$s5, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1241_3
# %bb.1:                                # %.lr.ph.i.preheader
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$s1, $a0, %pc_lo12(.L.str)
	addi.w	$s2, $zero, -1
	.p2align	4, , 16
.LBB1241_2:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s4, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$s5, $a0, 0
	st.d	$s4, $a0, 24
	st.d	$s0, $a0, 32
	st.w	$zero, $a0, 8
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s3, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s3
	bnez	$a0, .LBB1241_2
	b	.LBB1241_4
.LBB1241_3:
	move	$s3, $s0
.LBB1241_4:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	move	$a0, $s3
	move	$a3, $zero
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1241:
	.size	_ZNK2kc17impl_patternchain7reverseEv, .Lfunc_end1241-_ZNK2kc17impl_patternchain7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_patternchain4lastEv # -- Begin function _ZNK2kc17impl_patternchain4lastEv
	.p2align	5
	.type	_ZNK2kc17impl_patternchain4lastEv,@function
_ZNK2kc17impl_patternchain4lastEv:      # @_ZNK2kc17impl_patternchain4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1242_5
	.p2align	4, , 16
.LBB1242_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1242_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1242_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_patternchainitemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_patternchainitemE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1242_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1242_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1242:
	.size	_ZNK2kc17impl_patternchain4lastEv, .Lfunc_end1242-_ZNK2kc17impl_patternchain4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_patternchain6is_nilEv # -- Begin function _ZNK2kc17impl_patternchain6is_nilEv
	.p2align	5
	.type	_ZNK2kc17impl_patternchain6is_nilEv,@function
_ZNK2kc17impl_patternchain6is_nilEv:    # @_ZNK2kc17impl_patternchain6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 32
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1243:
	.size	_ZNK2kc17impl_patternchain6is_nilEv, .Lfunc_end1243-_ZNK2kc17impl_patternchain6is_nilEv
                                        # -- End function
	.globl	_ZN2kc17impl_patternchain3mapEPFPNS_21impl_patternchainitemES2_E # -- Begin function _ZN2kc17impl_patternchain3mapEPFPNS_21impl_patternchainitemES2_E
	.p2align	5
	.type	_ZN2kc17impl_patternchain3mapEPFPNS_21impl_patternchainitemES2_E,@function
_ZN2kc17impl_patternchain3mapEPFPNS_21impl_patternchainitemES2_E: # @_ZN2kc17impl_patternchain3mapEPFPNS_21impl_patternchainitemES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 74
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1244_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1244_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1244:
	.size	_ZN2kc17impl_patternchain3mapEPFPNS_21impl_patternchainitemES2_E, .Lfunc_end1244-_ZN2kc17impl_patternchain3mapEPFPNS_21impl_patternchainitemES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_patternchain6filterEPFbPNS_21impl_patternchainitemEE # -- Begin function _ZN2kc17impl_patternchain6filterEPFbPNS_21impl_patternchainitemEE
	.p2align	5
	.type	_ZN2kc17impl_patternchain6filterEPFbPNS_21impl_patternchainitemEE,@function
_ZN2kc17impl_patternchain6filterEPFbPNS_21impl_patternchainitemEE: # @_ZN2kc17impl_patternchain6filterEPFbPNS_21impl_patternchainitemEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 74
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1245_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1245_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1245:
	.size	_ZN2kc17impl_patternchain6filterEPFbPNS_21impl_patternchainitemEE, .Lfunc_end1245-_ZN2kc17impl_patternchain6filterEPFbPNS_21impl_patternchainitemEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_patternchain6appendEPNS_21impl_patternchainitemE # -- Begin function _ZN2kc17impl_patternchain6appendEPNS_21impl_patternchainitemE
	.p2align	5
	.type	_ZN2kc17impl_patternchain6appendEPNS_21impl_patternchainitemE,@function
_ZN2kc17impl_patternchain6appendEPNS_21impl_patternchainitemE: # @_ZN2kc17impl_patternchain6appendEPNS_21impl_patternchainitemE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_patternchainE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc17impl_patternchainE+16)
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1246_2
	.p2align	4, , 16
.LBB1246_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1246_1
.LBB1246_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1246:
	.size	_ZN2kc17impl_patternchain6appendEPNS_21impl_patternchainitemE, .Lfunc_end1246-_ZN2kc17impl_patternchain6appendEPNS_21impl_patternchainitemE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_patternchain5mergeEPS0_PFPNS_21impl_patternchainitemES3_S3_E # -- Begin function _ZN2kc17impl_patternchain5mergeEPS0_PFPNS_21impl_patternchainitemES3_S3_E
	.p2align	5
	.type	_ZN2kc17impl_patternchain5mergeEPS0_PFPNS_21impl_patternchainitemES3_S3_E,@function
_ZN2kc17impl_patternchain5mergeEPS0_PFPNS_21impl_patternchainitemES3_S3_E: # @_ZN2kc17impl_patternchain5mergeEPS0_PFPNS_21impl_patternchainitemES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 74
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1247_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_patternchainE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_patternchainE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1247_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1247:
	.size	_ZN2kc17impl_patternchain5mergeEPS0_PFPNS_21impl_patternchainitemES3_S3_E, .Lfunc_end1247-_ZN2kc17impl_patternchain5mergeEPS0_PFPNS_21impl_patternchainitemES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_patternchain6reduceEPNS_21impl_patternchainitemEPFS2_S2_S2_E # -- Begin function _ZN2kc17impl_patternchain6reduceEPNS_21impl_patternchainitemEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc17impl_patternchain6reduceEPNS_21impl_patternchainitemEPFS2_S2_S2_E,@function
_ZN2kc17impl_patternchain6reduceEPNS_21impl_patternchainitemEPFS2_S2_S2_E: # @_ZN2kc17impl_patternchain6reduceEPNS_21impl_patternchainitemEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1248_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_patternchainitemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_patternchainitemE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1248_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1248:
	.size	_ZN2kc17impl_patternchain6reduceEPNS_21impl_patternchainitemEPFS2_S2_S2_E, .Lfunc_end1248-_ZN2kc17impl_patternchain6reduceEPNS_21impl_patternchainitemEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_20impl_outmostpatternsES2_ # -- Begin function _ZN2kc6concatEPKNS_20impl_outmostpatternsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_20impl_outmostpatternsES2_,@function
_ZN2kc6concatEPKNS_20impl_outmostpatternsES2_: # @_ZN2kc6concatEPKNS_20impl_outmostpatternsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 76
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1249_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_outmostpatternsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_outmostpatternsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1249_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1249:
	.size	_ZN2kc6concatEPKNS_20impl_outmostpatternsES2_, .Lfunc_end1249-_ZN2kc6concatEPKNS_20impl_outmostpatternsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc20impl_outmostpatterns7reverseEv # -- Begin function _ZNK2kc20impl_outmostpatterns7reverseEv
	.p2align	5
	.type	_ZNK2kc20impl_outmostpatterns7reverseEv,@function
_ZNK2kc20impl_outmostpatterns7reverseEv: # @_ZNK2kc20impl_outmostpatterns7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc20impl_outmostpatternsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc20impl_outmostpatternsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1250_2
	.p2align	4, , 16
.LBB1250_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1250_1
	b	.LBB1250_3
.LBB1250_2:
	move	$s1, $s0
.LBB1250_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_outmostpatternsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc20impl_outmostpatternsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1250:
	.size	_ZNK2kc20impl_outmostpatterns7reverseEv, .Lfunc_end1250-_ZNK2kc20impl_outmostpatterns7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc20impl_outmostpatterns4lastEv # -- Begin function _ZNK2kc20impl_outmostpatterns4lastEv
	.p2align	5
	.type	_ZNK2kc20impl_outmostpatterns4lastEv,@function
_ZNK2kc20impl_outmostpatterns4lastEv:   # @_ZNK2kc20impl_outmostpatterns4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1251_5
	.p2align	4, , 16
.LBB1251_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1251_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1251_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_outmostpatternE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_outmostpatternE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1251_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1251_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1251:
	.size	_ZNK2kc20impl_outmostpatterns4lastEv, .Lfunc_end1251-_ZNK2kc20impl_outmostpatterns4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc20impl_outmostpatterns6is_nilEv # -- Begin function _ZNK2kc20impl_outmostpatterns6is_nilEv
	.p2align	5
	.type	_ZNK2kc20impl_outmostpatterns6is_nilEv,@function
_ZNK2kc20impl_outmostpatterns6is_nilEv: # @_ZNK2kc20impl_outmostpatterns6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1252:
	.size	_ZNK2kc20impl_outmostpatterns6is_nilEv, .Lfunc_end1252-_ZNK2kc20impl_outmostpatterns6is_nilEv
                                        # -- End function
	.globl	_ZN2kc20impl_outmostpatterns3mapEPFPNS_19impl_outmostpatternES2_E # -- Begin function _ZN2kc20impl_outmostpatterns3mapEPFPNS_19impl_outmostpatternES2_E
	.p2align	5
	.type	_ZN2kc20impl_outmostpatterns3mapEPFPNS_19impl_outmostpatternES2_E,@function
_ZN2kc20impl_outmostpatterns3mapEPFPNS_19impl_outmostpatternES2_E: # @_ZN2kc20impl_outmostpatterns3mapEPFPNS_19impl_outmostpatternES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 76
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1253_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_outmostpatternsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_outmostpatternsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1253_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1253:
	.size	_ZN2kc20impl_outmostpatterns3mapEPFPNS_19impl_outmostpatternES2_E, .Lfunc_end1253-_ZN2kc20impl_outmostpatterns3mapEPFPNS_19impl_outmostpatternES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_outmostpatterns6filterEPFbPNS_19impl_outmostpatternEE # -- Begin function _ZN2kc20impl_outmostpatterns6filterEPFbPNS_19impl_outmostpatternEE
	.p2align	5
	.type	_ZN2kc20impl_outmostpatterns6filterEPFbPNS_19impl_outmostpatternEE,@function
_ZN2kc20impl_outmostpatterns6filterEPFbPNS_19impl_outmostpatternEE: # @_ZN2kc20impl_outmostpatterns6filterEPFbPNS_19impl_outmostpatternEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 76
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1254_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_outmostpatternsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_outmostpatternsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1254_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1254:
	.size	_ZN2kc20impl_outmostpatterns6filterEPFbPNS_19impl_outmostpatternEE, .Lfunc_end1254-_ZN2kc20impl_outmostpatterns6filterEPFbPNS_19impl_outmostpatternEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_outmostpatterns6appendEPNS_19impl_outmostpatternE # -- Begin function _ZN2kc20impl_outmostpatterns6appendEPNS_19impl_outmostpatternE
	.p2align	5
	.type	_ZN2kc20impl_outmostpatterns6appendEPNS_19impl_outmostpatternE,@function
_ZN2kc20impl_outmostpatterns6appendEPNS_19impl_outmostpatternE: # @_ZN2kc20impl_outmostpatterns6appendEPNS_19impl_outmostpatternE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc20impl_outmostpatternsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc20impl_outmostpatternsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1255_2
	.p2align	4, , 16
.LBB1255_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1255_1
.LBB1255_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_outmostpatternsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc20impl_outmostpatternsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1255:
	.size	_ZN2kc20impl_outmostpatterns6appendEPNS_19impl_outmostpatternE, .Lfunc_end1255-_ZN2kc20impl_outmostpatterns6appendEPNS_19impl_outmostpatternE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_outmostpatterns5mergeEPS0_PFPNS_19impl_outmostpatternES3_S3_E # -- Begin function _ZN2kc20impl_outmostpatterns5mergeEPS0_PFPNS_19impl_outmostpatternES3_S3_E
	.p2align	5
	.type	_ZN2kc20impl_outmostpatterns5mergeEPS0_PFPNS_19impl_outmostpatternES3_S3_E,@function
_ZN2kc20impl_outmostpatterns5mergeEPS0_PFPNS_19impl_outmostpatternES3_S3_E: # @_ZN2kc20impl_outmostpatterns5mergeEPS0_PFPNS_19impl_outmostpatternES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 76
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1256_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_outmostpatternsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_outmostpatternsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1256_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1256:
	.size	_ZN2kc20impl_outmostpatterns5mergeEPS0_PFPNS_19impl_outmostpatternES3_S3_E, .Lfunc_end1256-_ZN2kc20impl_outmostpatterns5mergeEPS0_PFPNS_19impl_outmostpatternES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_outmostpatterns6reduceEPNS_19impl_outmostpatternEPFS2_S2_S2_E # -- Begin function _ZN2kc20impl_outmostpatterns6reduceEPNS_19impl_outmostpatternEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc20impl_outmostpatterns6reduceEPNS_19impl_outmostpatternEPFS2_S2_S2_E,@function
_ZN2kc20impl_outmostpatterns6reduceEPNS_19impl_outmostpatternEPFS2_S2_S2_E: # @_ZN2kc20impl_outmostpatterns6reduceEPNS_19impl_outmostpatternEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1257_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_outmostpatternE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_outmostpatternE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1257_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1257:
	.size	_ZN2kc20impl_outmostpatterns6reduceEPNS_19impl_outmostpatternEPFS2_S2_S2_E, .Lfunc_end1257-_ZN2kc20impl_outmostpatterns6reduceEPNS_19impl_outmostpatternEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_13impl_patternsES2_ # -- Begin function _ZN2kc6concatEPKNS_13impl_patternsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_13impl_patternsES2_,@function
_ZN2kc6concatEPKNS_13impl_patternsES2_: # @_ZN2kc6concatEPKNS_13impl_patternsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 92
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1258_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc13impl_patternsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc13impl_patternsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1258_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1258:
	.size	_ZN2kc6concatEPKNS_13impl_patternsES2_, .Lfunc_end1258-_ZN2kc6concatEPKNS_13impl_patternsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc13impl_patterns7reverseEv # -- Begin function _ZNK2kc13impl_patterns7reverseEv
	.p2align	5
	.type	_ZNK2kc13impl_patterns7reverseEv,@function
_ZNK2kc13impl_patterns7reverseEv:       # @_ZNK2kc13impl_patterns7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc13impl_patternsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc13impl_patternsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1259_2
	.p2align	4, , 16
.LBB1259_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1259_1
	b	.LBB1259_3
.LBB1259_2:
	move	$s1, $s0
.LBB1259_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_patternsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc13impl_patternsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1259:
	.size	_ZNK2kc13impl_patterns7reverseEv, .Lfunc_end1259-_ZNK2kc13impl_patterns7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc13impl_patterns4lastEv   # -- Begin function _ZNK2kc13impl_patterns4lastEv
	.p2align	5
	.type	_ZNK2kc13impl_patterns4lastEv,@function
_ZNK2kc13impl_patterns4lastEv:          # @_ZNK2kc13impl_patterns4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1260_5
	.p2align	4, , 16
.LBB1260_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1260_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1260_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc12impl_patternE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc12impl_patternE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1260_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1260_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1260:
	.size	_ZNK2kc13impl_patterns4lastEv, .Lfunc_end1260-_ZNK2kc13impl_patterns4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc13impl_patterns6is_nilEv # -- Begin function _ZNK2kc13impl_patterns6is_nilEv
	.p2align	5
	.type	_ZNK2kc13impl_patterns6is_nilEv,@function
_ZNK2kc13impl_patterns6is_nilEv:        # @_ZNK2kc13impl_patterns6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1261:
	.size	_ZNK2kc13impl_patterns6is_nilEv, .Lfunc_end1261-_ZNK2kc13impl_patterns6is_nilEv
                                        # -- End function
	.globl	_ZN2kc13impl_patterns3mapEPFPNS_12impl_patternES2_E # -- Begin function _ZN2kc13impl_patterns3mapEPFPNS_12impl_patternES2_E
	.p2align	5
	.type	_ZN2kc13impl_patterns3mapEPFPNS_12impl_patternES2_E,@function
_ZN2kc13impl_patterns3mapEPFPNS_12impl_patternES2_E: # @_ZN2kc13impl_patterns3mapEPFPNS_12impl_patternES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 92
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1262_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc13impl_patternsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc13impl_patternsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1262_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1262:
	.size	_ZN2kc13impl_patterns3mapEPFPNS_12impl_patternES2_E, .Lfunc_end1262-_ZN2kc13impl_patterns3mapEPFPNS_12impl_patternES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13impl_patterns6filterEPFbPNS_12impl_patternEE # -- Begin function _ZN2kc13impl_patterns6filterEPFbPNS_12impl_patternEE
	.p2align	5
	.type	_ZN2kc13impl_patterns6filterEPFbPNS_12impl_patternEE,@function
_ZN2kc13impl_patterns6filterEPFbPNS_12impl_patternEE: # @_ZN2kc13impl_patterns6filterEPFbPNS_12impl_patternEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 92
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1263_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc13impl_patternsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc13impl_patternsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1263_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1263:
	.size	_ZN2kc13impl_patterns6filterEPFbPNS_12impl_patternEE, .Lfunc_end1263-_ZN2kc13impl_patterns6filterEPFbPNS_12impl_patternEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13impl_patterns6appendEPNS_12impl_patternE # -- Begin function _ZN2kc13impl_patterns6appendEPNS_12impl_patternE
	.p2align	5
	.type	_ZN2kc13impl_patterns6appendEPNS_12impl_patternE,@function
_ZN2kc13impl_patterns6appendEPNS_12impl_patternE: # @_ZN2kc13impl_patterns6appendEPNS_12impl_patternE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc13impl_patternsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc13impl_patternsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1264_2
	.p2align	4, , 16
.LBB1264_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1264_1
.LBB1264_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc13impl_patternsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc13impl_patternsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1264:
	.size	_ZN2kc13impl_patterns6appendEPNS_12impl_patternE, .Lfunc_end1264-_ZN2kc13impl_patterns6appendEPNS_12impl_patternE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13impl_patterns5mergeEPS0_PFPNS_12impl_patternES3_S3_E # -- Begin function _ZN2kc13impl_patterns5mergeEPS0_PFPNS_12impl_patternES3_S3_E
	.p2align	5
	.type	_ZN2kc13impl_patterns5mergeEPS0_PFPNS_12impl_patternES3_S3_E,@function
_ZN2kc13impl_patterns5mergeEPS0_PFPNS_12impl_patternES3_S3_E: # @_ZN2kc13impl_patterns5mergeEPS0_PFPNS_12impl_patternES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 92
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1265_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc13impl_patternsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc13impl_patternsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1265_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1265:
	.size	_ZN2kc13impl_patterns5mergeEPS0_PFPNS_12impl_patternES3_S3_E, .Lfunc_end1265-_ZN2kc13impl_patterns5mergeEPS0_PFPNS_12impl_patternES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13impl_patterns6reduceEPNS_12impl_patternEPFS2_S2_S2_E # -- Begin function _ZN2kc13impl_patterns6reduceEPNS_12impl_patternEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc13impl_patterns6reduceEPNS_12impl_patternEPFS2_S2_S2_E,@function
_ZN2kc13impl_patterns6reduceEPNS_12impl_patternEPFS2_S2_S2_E: # @_ZN2kc13impl_patterns6reduceEPNS_12impl_patternEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1266_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc12impl_patternE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc12impl_patternE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1266_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1266:
	.size	_ZN2kc13impl_patterns6reduceEPNS_12impl_patternEPFS2_S2_S2_E, .Lfunc_end1266-_ZN2kc13impl_patterns6reduceEPNS_12impl_patternEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_10impl_termsES2_ # -- Begin function _ZN2kc6concatEPKNS_10impl_termsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_10impl_termsES2_,@function
_ZN2kc6concatEPKNS_10impl_termsES2_:    # @_ZN2kc6concatEPKNS_10impl_termsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 103
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1267_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_termsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1267_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1267:
	.size	_ZN2kc6concatEPKNS_10impl_termsES2_, .Lfunc_end1267-_ZN2kc6concatEPKNS_10impl_termsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_terms7reverseEv   # -- Begin function _ZNK2kc10impl_terms7reverseEv
	.p2align	5
	.type	_ZNK2kc10impl_terms7reverseEv,@function
_ZNK2kc10impl_terms7reverseEv:          # @_ZNK2kc10impl_terms7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_termsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc10impl_termsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1268_2
	.p2align	4, , 16
.LBB1268_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1268_1
	b	.LBB1268_3
.LBB1268_2:
	move	$s1, $s0
.LBB1268_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc10impl_termsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1268:
	.size	_ZNK2kc10impl_terms7reverseEv, .Lfunc_end1268-_ZNK2kc10impl_terms7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_terms4lastEv      # -- Begin function _ZNK2kc10impl_terms4lastEv
	.p2align	5
	.type	_ZNK2kc10impl_terms4lastEv,@function
_ZNK2kc10impl_terms4lastEv:             # @_ZNK2kc10impl_terms4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1269_5
	.p2align	4, , 16
.LBB1269_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1269_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1269_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc9impl_termE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc9impl_termE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1269_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1269_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1269:
	.size	_ZNK2kc10impl_terms4lastEv, .Lfunc_end1269-_ZNK2kc10impl_terms4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_terms6is_nilEv    # -- Begin function _ZNK2kc10impl_terms6is_nilEv
	.p2align	5
	.type	_ZNK2kc10impl_terms6is_nilEv,@function
_ZNK2kc10impl_terms6is_nilEv:           # @_ZNK2kc10impl_terms6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1270:
	.size	_ZNK2kc10impl_terms6is_nilEv, .Lfunc_end1270-_ZNK2kc10impl_terms6is_nilEv
                                        # -- End function
	.globl	_ZN2kc10impl_terms3mapEPFPNS_9impl_termES2_E # -- Begin function _ZN2kc10impl_terms3mapEPFPNS_9impl_termES2_E
	.p2align	5
	.type	_ZN2kc10impl_terms3mapEPFPNS_9impl_termES2_E,@function
_ZN2kc10impl_terms3mapEPFPNS_9impl_termES2_E: # @_ZN2kc10impl_terms3mapEPFPNS_9impl_termES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 103
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1271_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_termsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1271_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1271:
	.size	_ZN2kc10impl_terms3mapEPFPNS_9impl_termES2_E, .Lfunc_end1271-_ZN2kc10impl_terms3mapEPFPNS_9impl_termES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_terms6filterEPFbPNS_9impl_termEE # -- Begin function _ZN2kc10impl_terms6filterEPFbPNS_9impl_termEE
	.p2align	5
	.type	_ZN2kc10impl_terms6filterEPFbPNS_9impl_termEE,@function
_ZN2kc10impl_terms6filterEPFbPNS_9impl_termEE: # @_ZN2kc10impl_terms6filterEPFbPNS_9impl_termEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 103
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1272_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_termsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1272_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1272:
	.size	_ZN2kc10impl_terms6filterEPFbPNS_9impl_termEE, .Lfunc_end1272-_ZN2kc10impl_terms6filterEPFbPNS_9impl_termEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_terms6appendEPNS_9impl_termE # -- Begin function _ZN2kc10impl_terms6appendEPNS_9impl_termE
	.p2align	5
	.type	_ZN2kc10impl_terms6appendEPNS_9impl_termE,@function
_ZN2kc10impl_terms6appendEPNS_9impl_termE: # @_ZN2kc10impl_terms6appendEPNS_9impl_termE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_termsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc10impl_termsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1273_2
	.p2align	4, , 16
.LBB1273_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1273_1
.LBB1273_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc10impl_termsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1273:
	.size	_ZN2kc10impl_terms6appendEPNS_9impl_termE, .Lfunc_end1273-_ZN2kc10impl_terms6appendEPNS_9impl_termE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_terms5mergeEPS0_PFPNS_9impl_termES3_S3_E # -- Begin function _ZN2kc10impl_terms5mergeEPS0_PFPNS_9impl_termES3_S3_E
	.p2align	5
	.type	_ZN2kc10impl_terms5mergeEPS0_PFPNS_9impl_termES3_S3_E,@function
_ZN2kc10impl_terms5mergeEPS0_PFPNS_9impl_termES3_S3_E: # @_ZN2kc10impl_terms5mergeEPS0_PFPNS_9impl_termES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 103
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1274_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_termsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_termsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1274_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1274:
	.size	_ZN2kc10impl_terms5mergeEPS0_PFPNS_9impl_termES3_S3_E, .Lfunc_end1274-_ZN2kc10impl_terms5mergeEPS0_PFPNS_9impl_termES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_terms6reduceEPNS_9impl_termEPFS2_S2_S2_E # -- Begin function _ZN2kc10impl_terms6reduceEPNS_9impl_termEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc10impl_terms6reduceEPNS_9impl_termEPFS2_S2_S2_E,@function
_ZN2kc10impl_terms6reduceEPNS_9impl_termEPFS2_S2_S2_E: # @_ZN2kc10impl_terms6reduceEPNS_9impl_termEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1275_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc9impl_termE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc9impl_termE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1275_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1275:
	.size	_ZN2kc10impl_terms6reduceEPNS_9impl_termEPFS2_S2_S2_E, .Lfunc_end1275-_ZN2kc10impl_terms6reduceEPNS_9impl_termEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_12impl_fnfilesES2_ # -- Begin function _ZN2kc6concatEPKNS_12impl_fnfilesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_12impl_fnfilesES2_,@function
_ZN2kc6concatEPKNS_12impl_fnfilesES2_:  # @_ZN2kc6concatEPKNS_12impl_fnfilesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 105
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1276_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc12impl_fnfilesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc12impl_fnfilesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1276_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1276:
	.size	_ZN2kc6concatEPKNS_12impl_fnfilesES2_, .Lfunc_end1276-_ZN2kc6concatEPKNS_12impl_fnfilesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc12impl_fnfiles7reverseEv # -- Begin function _ZNK2kc12impl_fnfiles7reverseEv
	.p2align	5
	.type	_ZNK2kc12impl_fnfiles7reverseEv,@function
_ZNK2kc12impl_fnfiles7reverseEv:        # @_ZNK2kc12impl_fnfiles7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc12impl_fnfilesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc12impl_fnfilesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1277_2
	.p2align	4, , 16
.LBB1277_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1277_1
	b	.LBB1277_3
.LBB1277_2:
	move	$s1, $s0
.LBB1277_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_fnfilesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc12impl_fnfilesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1277:
	.size	_ZNK2kc12impl_fnfiles7reverseEv, .Lfunc_end1277-_ZNK2kc12impl_fnfiles7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc12impl_fnfiles4lastEv    # -- Begin function _ZNK2kc12impl_fnfiles4lastEv
	.p2align	5
	.type	_ZNK2kc12impl_fnfiles4lastEv,@function
_ZNK2kc12impl_fnfiles4lastEv:           # @_ZNK2kc12impl_fnfiles4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1278_5
	.p2align	4, , 16
.LBB1278_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1278_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1278_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc11impl_fnfileE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc11impl_fnfileE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1278_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1278_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1278:
	.size	_ZNK2kc12impl_fnfiles4lastEv, .Lfunc_end1278-_ZNK2kc12impl_fnfiles4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc12impl_fnfiles6is_nilEv  # -- Begin function _ZNK2kc12impl_fnfiles6is_nilEv
	.p2align	5
	.type	_ZNK2kc12impl_fnfiles6is_nilEv,@function
_ZNK2kc12impl_fnfiles6is_nilEv:         # @_ZNK2kc12impl_fnfiles6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1279:
	.size	_ZNK2kc12impl_fnfiles6is_nilEv, .Lfunc_end1279-_ZNK2kc12impl_fnfiles6is_nilEv
                                        # -- End function
	.globl	_ZN2kc12impl_fnfiles3mapEPFPNS_11impl_fnfileES2_E # -- Begin function _ZN2kc12impl_fnfiles3mapEPFPNS_11impl_fnfileES2_E
	.p2align	5
	.type	_ZN2kc12impl_fnfiles3mapEPFPNS_11impl_fnfileES2_E,@function
_ZN2kc12impl_fnfiles3mapEPFPNS_11impl_fnfileES2_E: # @_ZN2kc12impl_fnfiles3mapEPFPNS_11impl_fnfileES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 105
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1280_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc12impl_fnfilesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc12impl_fnfilesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1280_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1280:
	.size	_ZN2kc12impl_fnfiles3mapEPFPNS_11impl_fnfileES2_E, .Lfunc_end1280-_ZN2kc12impl_fnfiles3mapEPFPNS_11impl_fnfileES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12impl_fnfiles6filterEPFbPNS_11impl_fnfileEE # -- Begin function _ZN2kc12impl_fnfiles6filterEPFbPNS_11impl_fnfileEE
	.p2align	5
	.type	_ZN2kc12impl_fnfiles6filterEPFbPNS_11impl_fnfileEE,@function
_ZN2kc12impl_fnfiles6filterEPFbPNS_11impl_fnfileEE: # @_ZN2kc12impl_fnfiles6filterEPFbPNS_11impl_fnfileEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 105
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1281_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc12impl_fnfilesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc12impl_fnfilesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1281_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1281:
	.size	_ZN2kc12impl_fnfiles6filterEPFbPNS_11impl_fnfileEE, .Lfunc_end1281-_ZN2kc12impl_fnfiles6filterEPFbPNS_11impl_fnfileEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12impl_fnfiles6appendEPNS_11impl_fnfileE # -- Begin function _ZN2kc12impl_fnfiles6appendEPNS_11impl_fnfileE
	.p2align	5
	.type	_ZN2kc12impl_fnfiles6appendEPNS_11impl_fnfileE,@function
_ZN2kc12impl_fnfiles6appendEPNS_11impl_fnfileE: # @_ZN2kc12impl_fnfiles6appendEPNS_11impl_fnfileE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc12impl_fnfilesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc12impl_fnfilesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1282_2
	.p2align	4, , 16
.LBB1282_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1282_1
.LBB1282_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc12impl_fnfilesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc12impl_fnfilesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1282:
	.size	_ZN2kc12impl_fnfiles6appendEPNS_11impl_fnfileE, .Lfunc_end1282-_ZN2kc12impl_fnfiles6appendEPNS_11impl_fnfileE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12impl_fnfiles5mergeEPS0_PFPNS_11impl_fnfileES3_S3_E # -- Begin function _ZN2kc12impl_fnfiles5mergeEPS0_PFPNS_11impl_fnfileES3_S3_E
	.p2align	5
	.type	_ZN2kc12impl_fnfiles5mergeEPS0_PFPNS_11impl_fnfileES3_S3_E,@function
_ZN2kc12impl_fnfiles5mergeEPS0_PFPNS_11impl_fnfileES3_S3_E: # @_ZN2kc12impl_fnfiles5mergeEPS0_PFPNS_11impl_fnfileES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 105
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1283_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc12impl_fnfilesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc12impl_fnfilesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1283_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1283:
	.size	_ZN2kc12impl_fnfiles5mergeEPS0_PFPNS_11impl_fnfileES3_S3_E, .Lfunc_end1283-_ZN2kc12impl_fnfiles5mergeEPS0_PFPNS_11impl_fnfileES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12impl_fnfiles6reduceEPNS_11impl_fnfileEPFS2_S2_S2_E # -- Begin function _ZN2kc12impl_fnfiles6reduceEPNS_11impl_fnfileEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc12impl_fnfiles6reduceEPNS_11impl_fnfileEPFS2_S2_S2_E,@function
_ZN2kc12impl_fnfiles6reduceEPNS_11impl_fnfileEPFS2_S2_S2_E: # @_ZN2kc12impl_fnfiles6reduceEPNS_11impl_fnfileEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1284_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc11impl_fnfileE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc11impl_fnfileE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1284_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1284:
	.size	_ZN2kc12impl_fnfiles6reduceEPNS_11impl_fnfileEPFS2_S2_S2_E, .Lfunc_end1284-_ZN2kc12impl_fnfiles6reduceEPNS_11impl_fnfileEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_19impl_fndeclarationsES2_ # -- Begin function _ZN2kc6concatEPKNS_19impl_fndeclarationsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_19impl_fndeclarationsES2_,@function
_ZN2kc6concatEPKNS_19impl_fndeclarationsES2_: # @_ZN2kc6concatEPKNS_19impl_fndeclarationsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 108
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1285_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_fndeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_fndeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1285_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1285:
	.size	_ZN2kc6concatEPKNS_19impl_fndeclarationsES2_, .Lfunc_end1285-_ZN2kc6concatEPKNS_19impl_fndeclarationsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_fndeclarations7reverseEv # -- Begin function _ZNK2kc19impl_fndeclarations7reverseEv
	.p2align	5
	.type	_ZNK2kc19impl_fndeclarations7reverseEv,@function
_ZNK2kc19impl_fndeclarations7reverseEv: # @_ZNK2kc19impl_fndeclarations7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1286_2
	.p2align	4, , 16
.LBB1286_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1286_1
	b	.LBB1286_3
.LBB1286_2:
	move	$s1, $s0
.LBB1286_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_fndeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_fndeclarationsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1286:
	.size	_ZNK2kc19impl_fndeclarations7reverseEv, .Lfunc_end1286-_ZNK2kc19impl_fndeclarations7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_fndeclarations4lastEv # -- Begin function _ZNK2kc19impl_fndeclarations4lastEv
	.p2align	5
	.type	_ZNK2kc19impl_fndeclarations4lastEv,@function
_ZNK2kc19impl_fndeclarations4lastEv:    # @_ZNK2kc19impl_fndeclarations4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1287_5
	.p2align	4, , 16
.LBB1287_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1287_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1287_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_fndeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_fndeclarationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1287_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1287_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1287:
	.size	_ZNK2kc19impl_fndeclarations4lastEv, .Lfunc_end1287-_ZNK2kc19impl_fndeclarations4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_fndeclarations6is_nilEv # -- Begin function _ZNK2kc19impl_fndeclarations6is_nilEv
	.p2align	5
	.type	_ZNK2kc19impl_fndeclarations6is_nilEv,@function
_ZNK2kc19impl_fndeclarations6is_nilEv:  # @_ZNK2kc19impl_fndeclarations6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1288:
	.size	_ZNK2kc19impl_fndeclarations6is_nilEv, .Lfunc_end1288-_ZNK2kc19impl_fndeclarations6is_nilEv
                                        # -- End function
	.globl	_ZN2kc19impl_fndeclarations3mapEPFPNS_18impl_fndeclarationES2_E # -- Begin function _ZN2kc19impl_fndeclarations3mapEPFPNS_18impl_fndeclarationES2_E
	.p2align	5
	.type	_ZN2kc19impl_fndeclarations3mapEPFPNS_18impl_fndeclarationES2_E,@function
_ZN2kc19impl_fndeclarations3mapEPFPNS_18impl_fndeclarationES2_E: # @_ZN2kc19impl_fndeclarations3mapEPFPNS_18impl_fndeclarationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 108
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1289_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_fndeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_fndeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1289_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1289:
	.size	_ZN2kc19impl_fndeclarations3mapEPFPNS_18impl_fndeclarationES2_E, .Lfunc_end1289-_ZN2kc19impl_fndeclarations3mapEPFPNS_18impl_fndeclarationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_fndeclarations6filterEPFbPNS_18impl_fndeclarationEE # -- Begin function _ZN2kc19impl_fndeclarations6filterEPFbPNS_18impl_fndeclarationEE
	.p2align	5
	.type	_ZN2kc19impl_fndeclarations6filterEPFbPNS_18impl_fndeclarationEE,@function
_ZN2kc19impl_fndeclarations6filterEPFbPNS_18impl_fndeclarationEE: # @_ZN2kc19impl_fndeclarations6filterEPFbPNS_18impl_fndeclarationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 108
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1290_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_fndeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_fndeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1290_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1290:
	.size	_ZN2kc19impl_fndeclarations6filterEPFbPNS_18impl_fndeclarationEE, .Lfunc_end1290-_ZN2kc19impl_fndeclarations6filterEPFbPNS_18impl_fndeclarationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_fndeclarations6appendEPNS_18impl_fndeclarationE # -- Begin function _ZN2kc19impl_fndeclarations6appendEPNS_18impl_fndeclarationE
	.p2align	5
	.type	_ZN2kc19impl_fndeclarations6appendEPNS_18impl_fndeclarationE,@function
_ZN2kc19impl_fndeclarations6appendEPNS_18impl_fndeclarationE: # @_ZN2kc19impl_fndeclarations6appendEPNS_18impl_fndeclarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_fndeclarationsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_fndeclarationsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1291_2
	.p2align	4, , 16
.LBB1291_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1291_1
.LBB1291_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_fndeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_fndeclarationsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1291:
	.size	_ZN2kc19impl_fndeclarations6appendEPNS_18impl_fndeclarationE, .Lfunc_end1291-_ZN2kc19impl_fndeclarations6appendEPNS_18impl_fndeclarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_fndeclarations5mergeEPS0_PFPNS_18impl_fndeclarationES3_S3_E # -- Begin function _ZN2kc19impl_fndeclarations5mergeEPS0_PFPNS_18impl_fndeclarationES3_S3_E
	.p2align	5
	.type	_ZN2kc19impl_fndeclarations5mergeEPS0_PFPNS_18impl_fndeclarationES3_S3_E,@function
_ZN2kc19impl_fndeclarations5mergeEPS0_PFPNS_18impl_fndeclarationES3_S3_E: # @_ZN2kc19impl_fndeclarations5mergeEPS0_PFPNS_18impl_fndeclarationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 108
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1292_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_fndeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_fndeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1292_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1292:
	.size	_ZN2kc19impl_fndeclarations5mergeEPS0_PFPNS_18impl_fndeclarationES3_S3_E, .Lfunc_end1292-_ZN2kc19impl_fndeclarations5mergeEPS0_PFPNS_18impl_fndeclarationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_fndeclarations6reduceEPNS_18impl_fndeclarationEPFS2_S2_S2_E # -- Begin function _ZN2kc19impl_fndeclarations6reduceEPNS_18impl_fndeclarationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc19impl_fndeclarations6reduceEPNS_18impl_fndeclarationEPFS2_S2_S2_E,@function
_ZN2kc19impl_fndeclarations6reduceEPNS_18impl_fndeclarationEPFS2_S2_S2_E: # @_ZN2kc19impl_fndeclarations6reduceEPNS_18impl_fndeclarationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1293_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_fndeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_fndeclarationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1293_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1293:
	.size	_ZN2kc19impl_fndeclarations6reduceEPNS_18impl_fndeclarationEPFS2_S2_S2_E, .Lfunc_end1293-_ZN2kc19impl_fndeclarations6reduceEPNS_18impl_fndeclarationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_10impl_CtextES2_ # -- Begin function _ZN2kc6concatEPKNS_10impl_CtextES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_10impl_CtextES2_,@function
_ZN2kc6concatEPKNS_10impl_CtextES2_:    # @_ZN2kc6concatEPKNS_10impl_CtextES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 118
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1294_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_CtextE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1294_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1294:
	.size	_ZN2kc6concatEPKNS_10impl_CtextES2_, .Lfunc_end1294-_ZN2kc6concatEPKNS_10impl_CtextES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_Ctext7reverseEv   # -- Begin function _ZNK2kc10impl_Ctext7reverseEv
	.p2align	5
	.type	_ZNK2kc10impl_Ctext7reverseEv,@function
_ZNK2kc10impl_Ctext7reverseEv:          # @_ZNK2kc10impl_Ctext7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_CtextE+16)
	addi.d	$s5, $a0, %pc_lo12(_ZTVN2kc10impl_CtextE+16)
	st.d	$s5, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1295_3
# %bb.1:                                # %.lr.ph.i.preheader
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$s1, $a0, %pc_lo12(.L.str)
	addi.w	$s2, $zero, -1
	.p2align	4, , 16
.LBB1295_2:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s4, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$s5, $a0, 0
	st.d	$s4, $a0, 24
	st.d	$s0, $a0, 32
	st.w	$zero, $a0, 8
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s3, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s3
	bnez	$a0, .LBB1295_2
	b	.LBB1295_4
.LBB1295_3:
	move	$s3, $s0
.LBB1295_4:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
	move	$a0, $s3
	move	$a3, $zero
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1295:
	.size	_ZNK2kc10impl_Ctext7reverseEv, .Lfunc_end1295-_ZNK2kc10impl_Ctext7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_Ctext4lastEv      # -- Begin function _ZNK2kc10impl_Ctext4lastEv
	.p2align	5
	.type	_ZNK2kc10impl_Ctext4lastEv,@function
_ZNK2kc10impl_Ctext4lastEv:             # @_ZNK2kc10impl_Ctext4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1296_5
	.p2align	4, , 16
.LBB1296_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1296_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1296_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc15impl_Ctext_elemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc15impl_Ctext_elemE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1296_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1296_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1296:
	.size	_ZNK2kc10impl_Ctext4lastEv, .Lfunc_end1296-_ZNK2kc10impl_Ctext4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_Ctext6is_nilEv    # -- Begin function _ZNK2kc10impl_Ctext6is_nilEv
	.p2align	5
	.type	_ZNK2kc10impl_Ctext6is_nilEv,@function
_ZNK2kc10impl_Ctext6is_nilEv:           # @_ZNK2kc10impl_Ctext6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 32
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1297:
	.size	_ZNK2kc10impl_Ctext6is_nilEv, .Lfunc_end1297-_ZNK2kc10impl_Ctext6is_nilEv
                                        # -- End function
	.globl	_ZN2kc10impl_Ctext3mapEPFPNS_15impl_Ctext_elemES2_E # -- Begin function _ZN2kc10impl_Ctext3mapEPFPNS_15impl_Ctext_elemES2_E
	.p2align	5
	.type	_ZN2kc10impl_Ctext3mapEPFPNS_15impl_Ctext_elemES2_E,@function
_ZN2kc10impl_Ctext3mapEPFPNS_15impl_Ctext_elemES2_E: # @_ZN2kc10impl_Ctext3mapEPFPNS_15impl_Ctext_elemES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 118
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1298_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_CtextE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1298_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1298:
	.size	_ZN2kc10impl_Ctext3mapEPFPNS_15impl_Ctext_elemES2_E, .Lfunc_end1298-_ZN2kc10impl_Ctext3mapEPFPNS_15impl_Ctext_elemES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_Ctext6filterEPFbPNS_15impl_Ctext_elemEE # -- Begin function _ZN2kc10impl_Ctext6filterEPFbPNS_15impl_Ctext_elemEE
	.p2align	5
	.type	_ZN2kc10impl_Ctext6filterEPFbPNS_15impl_Ctext_elemEE,@function
_ZN2kc10impl_Ctext6filterEPFbPNS_15impl_Ctext_elemEE: # @_ZN2kc10impl_Ctext6filterEPFbPNS_15impl_Ctext_elemEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 118
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1299_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_CtextE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1299_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1299:
	.size	_ZN2kc10impl_Ctext6filterEPFbPNS_15impl_Ctext_elemEE, .Lfunc_end1299-_ZN2kc10impl_Ctext6filterEPFbPNS_15impl_Ctext_elemEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_Ctext6appendEPNS_15impl_Ctext_elemE # -- Begin function _ZN2kc10impl_Ctext6appendEPNS_15impl_Ctext_elemE
	.p2align	5
	.type	_ZN2kc10impl_Ctext6appendEPNS_15impl_Ctext_elemE,@function
_ZN2kc10impl_Ctext6appendEPNS_15impl_Ctext_elemE: # @_ZN2kc10impl_Ctext6appendEPNS_15impl_Ctext_elemE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_CtextE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc10impl_CtextE+16)
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	st.w	$zero, $s0, 8
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a0, $a0, %pc_lo12(.L.str)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1300_2
	.p2align	4, , 16
.LBB1300_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1300_1
.LBB1300_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc10impl_CtextE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1300:
	.size	_ZN2kc10impl_Ctext6appendEPNS_15impl_Ctext_elemE, .Lfunc_end1300-_ZN2kc10impl_Ctext6appendEPNS_15impl_Ctext_elemE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_Ctext5mergeEPS0_PFPNS_15impl_Ctext_elemES3_S3_E # -- Begin function _ZN2kc10impl_Ctext5mergeEPS0_PFPNS_15impl_Ctext_elemES3_S3_E
	.p2align	5
	.type	_ZN2kc10impl_Ctext5mergeEPS0_PFPNS_15impl_Ctext_elemES3_S3_E,@function
_ZN2kc10impl_Ctext5mergeEPS0_PFPNS_15impl_Ctext_elemES3_S3_E: # @_ZN2kc10impl_Ctext5mergeEPS0_PFPNS_15impl_Ctext_elemES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 118
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1301_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_CtextE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_CtextE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1301_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1301:
	.size	_ZN2kc10impl_Ctext5mergeEPS0_PFPNS_15impl_Ctext_elemES3_S3_E, .Lfunc_end1301-_ZN2kc10impl_Ctext5mergeEPS0_PFPNS_15impl_Ctext_elemES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_Ctext6reduceEPNS_15impl_Ctext_elemEPFS2_S2_S2_E # -- Begin function _ZN2kc10impl_Ctext6reduceEPNS_15impl_Ctext_elemEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc10impl_Ctext6reduceEPNS_15impl_Ctext_elemEPFS2_S2_S2_E,@function
_ZN2kc10impl_Ctext6reduceEPNS_15impl_Ctext_elemEPFS2_S2_S2_E: # @_ZN2kc10impl_Ctext6reduceEPNS_15impl_Ctext_elemEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1302_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc15impl_Ctext_elemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc15impl_Ctext_elemE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1302_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1302:
	.size	_ZN2kc10impl_Ctext6reduceEPNS_15impl_Ctext_elemEPFS2_S2_S2_E, .Lfunc_end1302-_ZN2kc10impl_Ctext6reduceEPNS_15impl_Ctext_elemEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_20impl_withexpressionsES2_ # -- Begin function _ZN2kc6concatEPKNS_20impl_withexpressionsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_20impl_withexpressionsES2_,@function
_ZN2kc6concatEPKNS_20impl_withexpressionsES2_: # @_ZN2kc6concatEPKNS_20impl_withexpressionsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 132
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1303_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1303_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1303:
	.size	_ZN2kc6concatEPKNS_20impl_withexpressionsES2_, .Lfunc_end1303-_ZN2kc6concatEPKNS_20impl_withexpressionsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc20impl_withexpressions7reverseEv # -- Begin function _ZNK2kc20impl_withexpressions7reverseEv
	.p2align	5
	.type	_ZNK2kc20impl_withexpressions7reverseEv,@function
_ZNK2kc20impl_withexpressions7reverseEv: # @_ZNK2kc20impl_withexpressions7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc20impl_withexpressionsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc20impl_withexpressionsE+16)
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1304_2
	.p2align	4, , 16
.LBB1304_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	st.d	$s2, $a0, 32
	st.d	$s0, $a0, 40
	pcaddu18i	$ra, %call36(_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1304_1
	b	.LBB1304_3
.LBB1304_2:
	move	$s1, $s0
.LBB1304_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1304:
	.size	_ZNK2kc20impl_withexpressions7reverseEv, .Lfunc_end1304-_ZNK2kc20impl_withexpressions7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc20impl_withexpressions4lastEv # -- Begin function _ZNK2kc20impl_withexpressions4lastEv
	.p2align	5
	.type	_ZNK2kc20impl_withexpressions4lastEv,@function
_ZNK2kc20impl_withexpressions4lastEv:   # @_ZNK2kc20impl_withexpressions4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1305_5
	.p2align	4, , 16
.LBB1305_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1305_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1305_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_withexpressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_withexpressionE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1305_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1305_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1305:
	.size	_ZNK2kc20impl_withexpressions4lastEv, .Lfunc_end1305-_ZNK2kc20impl_withexpressions4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc20impl_withexpressions6is_nilEv # -- Begin function _ZNK2kc20impl_withexpressions6is_nilEv
	.p2align	5
	.type	_ZNK2kc20impl_withexpressions6is_nilEv,@function
_ZNK2kc20impl_withexpressions6is_nilEv: # @_ZNK2kc20impl_withexpressions6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 32
	ld.d	$a0, $a0, 40
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1306:
	.size	_ZNK2kc20impl_withexpressions6is_nilEv, .Lfunc_end1306-_ZNK2kc20impl_withexpressions6is_nilEv
                                        # -- End function
	.globl	_ZN2kc20impl_withexpressions3mapEPFPNS_19impl_withexpressionES2_E # -- Begin function _ZN2kc20impl_withexpressions3mapEPFPNS_19impl_withexpressionES2_E
	.p2align	5
	.type	_ZN2kc20impl_withexpressions3mapEPFPNS_19impl_withexpressionES2_E,@function
_ZN2kc20impl_withexpressions3mapEPFPNS_19impl_withexpressionES2_E: # @_ZN2kc20impl_withexpressions3mapEPFPNS_19impl_withexpressionES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 132
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1307_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1307_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1307:
	.size	_ZN2kc20impl_withexpressions3mapEPFPNS_19impl_withexpressionES2_E, .Lfunc_end1307-_ZN2kc20impl_withexpressions3mapEPFPNS_19impl_withexpressionES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_withexpressions6filterEPFbPNS_19impl_withexpressionEE # -- Begin function _ZN2kc20impl_withexpressions6filterEPFbPNS_19impl_withexpressionEE
	.p2align	5
	.type	_ZN2kc20impl_withexpressions6filterEPFbPNS_19impl_withexpressionEE,@function
_ZN2kc20impl_withexpressions6filterEPFbPNS_19impl_withexpressionEE: # @_ZN2kc20impl_withexpressions6filterEPFbPNS_19impl_withexpressionEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 132
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1308_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1308_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1308:
	.size	_ZN2kc20impl_withexpressions6filterEPFbPNS_19impl_withexpressionEE, .Lfunc_end1308-_ZN2kc20impl_withexpressions6filterEPFbPNS_19impl_withexpressionEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_withexpressions6appendEPNS_19impl_withexpressionE # -- Begin function _ZN2kc20impl_withexpressions6appendEPNS_19impl_withexpressionE
	.p2align	5
	.type	_ZN2kc20impl_withexpressions6appendEPNS_19impl_withexpressionE,@function
_ZN2kc20impl_withexpressions6appendEPNS_19impl_withexpressionE: # @_ZN2kc20impl_withexpressions6appendEPNS_19impl_withexpressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 48
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc20impl_withexpressionsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc20impl_withexpressionsE+16)
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc12_GLOBAL__N_129kc_initialize_withexpressionsEPNS_20impl_withexpressionsE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1309_2
	.p2align	4, , 16
.LBB1309_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1309_1
.LBB1309_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1309:
	.size	_ZN2kc20impl_withexpressions6appendEPNS_19impl_withexpressionE, .Lfunc_end1309-_ZN2kc20impl_withexpressions6appendEPNS_19impl_withexpressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_withexpressions5mergeEPS0_PFPNS_19impl_withexpressionES3_S3_E # -- Begin function _ZN2kc20impl_withexpressions5mergeEPS0_PFPNS_19impl_withexpressionES3_S3_E
	.p2align	5
	.type	_ZN2kc20impl_withexpressions5mergeEPS0_PFPNS_19impl_withexpressionES3_S3_E,@function
_ZN2kc20impl_withexpressions5mergeEPS0_PFPNS_19impl_withexpressionES3_S3_E: # @_ZN2kc20impl_withexpressions5mergeEPS0_PFPNS_19impl_withexpressionES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 132
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1310_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_withexpressionsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_withexpressionsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1310_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1310:
	.size	_ZN2kc20impl_withexpressions5mergeEPS0_PFPNS_19impl_withexpressionES3_S3_E, .Lfunc_end1310-_ZN2kc20impl_withexpressions5mergeEPS0_PFPNS_19impl_withexpressionES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_withexpressions6reduceEPNS_19impl_withexpressionEPFS2_S2_S2_E # -- Begin function _ZN2kc20impl_withexpressions6reduceEPNS_19impl_withexpressionEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc20impl_withexpressions6reduceEPNS_19impl_withexpressionEPFS2_S2_S2_E,@function
_ZN2kc20impl_withexpressions6reduceEPNS_19impl_withexpressionEPFS2_S2_S2_E: # @_ZN2kc20impl_withexpressions6reduceEPNS_19impl_withexpressionEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1311_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_withexpressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_withexpressionE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1311_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1311:
	.size	_ZN2kc20impl_withexpressions6reduceEPNS_19impl_withexpressionEPFS2_S2_S2_E, .Lfunc_end1311-_ZN2kc20impl_withexpressions6reduceEPNS_19impl_withexpressionEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_14impl_withcasesES2_ # -- Begin function _ZN2kc6concatEPKNS_14impl_withcasesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_14impl_withcasesES2_,@function
_ZN2kc6concatEPKNS_14impl_withcasesES2_: # @_ZN2kc6concatEPKNS_14impl_withcasesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 136
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1312_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_withcasesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_withcasesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1312_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1312:
	.size	_ZN2kc6concatEPKNS_14impl_withcasesES2_, .Lfunc_end1312-_ZN2kc6concatEPKNS_14impl_withcasesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_withcases7reverseEv # -- Begin function _ZNK2kc14impl_withcases7reverseEv
	.p2align	5
	.type	_ZNK2kc14impl_withcases7reverseEv,@function
_ZNK2kc14impl_withcases7reverseEv:      # @_ZNK2kc14impl_withcases7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_withcasesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc14impl_withcasesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1313_2
	.p2align	4, , 16
.LBB1313_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 16
	st.d	$s0, $s1, 24
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1313_1
	b	.LBB1313_3
.LBB1313_2:
	move	$s1, $s0
.LBB1313_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_withcasesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_withcasesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1313:
	.size	_ZNK2kc14impl_withcases7reverseEv, .Lfunc_end1313-_ZNK2kc14impl_withcases7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_withcases4lastEv  # -- Begin function _ZNK2kc14impl_withcases4lastEv
	.p2align	5
	.type	_ZNK2kc14impl_withcases4lastEv,@function
_ZNK2kc14impl_withcases4lastEv:         # @_ZNK2kc14impl_withcases4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1314_5
	.p2align	4, , 16
.LBB1314_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1314_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1314_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc13impl_withcaseE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc13impl_withcaseE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1314_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1314_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1314:
	.size	_ZNK2kc14impl_withcases4lastEv, .Lfunc_end1314-_ZNK2kc14impl_withcases4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_withcases6is_nilEv # -- Begin function _ZNK2kc14impl_withcases6is_nilEv
	.p2align	5
	.type	_ZNK2kc14impl_withcases6is_nilEv,@function
_ZNK2kc14impl_withcases6is_nilEv:       # @_ZNK2kc14impl_withcases6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 16
	ld.d	$a0, $a0, 24
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1315:
	.size	_ZNK2kc14impl_withcases6is_nilEv, .Lfunc_end1315-_ZNK2kc14impl_withcases6is_nilEv
                                        # -- End function
	.globl	_ZN2kc14impl_withcases3mapEPFPNS_13impl_withcaseES2_E # -- Begin function _ZN2kc14impl_withcases3mapEPFPNS_13impl_withcaseES2_E
	.p2align	5
	.type	_ZN2kc14impl_withcases3mapEPFPNS_13impl_withcaseES2_E,@function
_ZN2kc14impl_withcases3mapEPFPNS_13impl_withcaseES2_E: # @_ZN2kc14impl_withcases3mapEPFPNS_13impl_withcaseES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 136
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1316_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_withcasesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_withcasesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1316_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1316:
	.size	_ZN2kc14impl_withcases3mapEPFPNS_13impl_withcaseES2_E, .Lfunc_end1316-_ZN2kc14impl_withcases3mapEPFPNS_13impl_withcaseES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_withcases6filterEPFbPNS_13impl_withcaseEE # -- Begin function _ZN2kc14impl_withcases6filterEPFbPNS_13impl_withcaseEE
	.p2align	5
	.type	_ZN2kc14impl_withcases6filterEPFbPNS_13impl_withcaseEE,@function
_ZN2kc14impl_withcases6filterEPFbPNS_13impl_withcaseEE: # @_ZN2kc14impl_withcases6filterEPFbPNS_13impl_withcaseEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 136
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1317_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_withcasesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_withcasesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1317_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1317:
	.size	_ZN2kc14impl_withcases6filterEPFbPNS_13impl_withcaseEE, .Lfunc_end1317-_ZN2kc14impl_withcases6filterEPFbPNS_13impl_withcaseEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_withcases6appendEPNS_13impl_withcaseE # -- Begin function _ZN2kc14impl_withcases6appendEPNS_13impl_withcaseE
	.p2align	5
	.type	_ZN2kc14impl_withcases6appendEPNS_13impl_withcaseE,@function
_ZN2kc14impl_withcases6appendEPNS_13impl_withcaseE: # @_ZN2kc14impl_withcases6appendEPNS_13impl_withcaseE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_withcasesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc14impl_withcasesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 16
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1318_2
	.p2align	4, , 16
.LBB1318_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1318_1
.LBB1318_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_withcasesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_withcasesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1318:
	.size	_ZN2kc14impl_withcases6appendEPNS_13impl_withcaseE, .Lfunc_end1318-_ZN2kc14impl_withcases6appendEPNS_13impl_withcaseE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_withcases5mergeEPS0_PFPNS_13impl_withcaseES3_S3_E # -- Begin function _ZN2kc14impl_withcases5mergeEPS0_PFPNS_13impl_withcaseES3_S3_E
	.p2align	5
	.type	_ZN2kc14impl_withcases5mergeEPS0_PFPNS_13impl_withcaseES3_S3_E,@function
_ZN2kc14impl_withcases5mergeEPS0_PFPNS_13impl_withcaseES3_S3_E: # @_ZN2kc14impl_withcases5mergeEPS0_PFPNS_13impl_withcaseES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 136
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1319_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_withcasesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_withcasesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1319_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1319:
	.size	_ZN2kc14impl_withcases5mergeEPS0_PFPNS_13impl_withcaseES3_S3_E, .Lfunc_end1319-_ZN2kc14impl_withcases5mergeEPS0_PFPNS_13impl_withcaseES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_withcases6reduceEPNS_13impl_withcaseEPFS2_S2_S2_E # -- Begin function _ZN2kc14impl_withcases6reduceEPNS_13impl_withcaseEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc14impl_withcases6reduceEPNS_13impl_withcaseEPFS2_S2_S2_E,@function
_ZN2kc14impl_withcases6reduceEPNS_13impl_withcaseEPFS2_S2_S2_E: # @_ZN2kc14impl_withcases6reduceEPNS_13impl_withcaseEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1320_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc13impl_withcaseE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc13impl_withcaseE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1320_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1320:
	.size	_ZN2kc14impl_withcases6reduceEPNS_13impl_withcaseEPFS2_S2_S2_E, .Lfunc_end1320-_ZN2kc14impl_withcases6reduceEPNS_13impl_withcaseEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_24impl_unparsedeclarationsES2_ # -- Begin function _ZN2kc6concatEPKNS_24impl_unparsedeclarationsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_24impl_unparsedeclarationsES2_,@function
_ZN2kc6concatEPKNS_24impl_unparsedeclarationsES2_: # @_ZN2kc6concatEPKNS_24impl_unparsedeclarationsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 139
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1321_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_unparsedeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_unparsedeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1321_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1321:
	.size	_ZN2kc6concatEPKNS_24impl_unparsedeclarationsES2_, .Lfunc_end1321-_ZN2kc6concatEPKNS_24impl_unparsedeclarationsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc24impl_unparsedeclarations7reverseEv # -- Begin function _ZNK2kc24impl_unparsedeclarations7reverseEv
	.p2align	5
	.type	_ZNK2kc24impl_unparsedeclarations7reverseEv,@function
_ZNK2kc24impl_unparsedeclarations7reverseEv: # @_ZNK2kc24impl_unparsedeclarations7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc24impl_unparsedeclarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc24impl_unparsedeclarationsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1322_2
	.p2align	4, , 16
.LBB1322_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1322_1
	b	.LBB1322_3
.LBB1322_2:
	move	$s1, $s0
.LBB1322_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_unparsedeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc24impl_unparsedeclarationsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1322:
	.size	_ZNK2kc24impl_unparsedeclarations7reverseEv, .Lfunc_end1322-_ZNK2kc24impl_unparsedeclarations7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc24impl_unparsedeclarations4lastEv # -- Begin function _ZNK2kc24impl_unparsedeclarations4lastEv
	.p2align	5
	.type	_ZNK2kc24impl_unparsedeclarations4lastEv,@function
_ZNK2kc24impl_unparsedeclarations4lastEv: # @_ZNK2kc24impl_unparsedeclarations4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1323_5
	.p2align	4, , 16
.LBB1323_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1323_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1323_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_unparsedeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_unparsedeclarationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1323_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1323_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1323:
	.size	_ZNK2kc24impl_unparsedeclarations4lastEv, .Lfunc_end1323-_ZNK2kc24impl_unparsedeclarations4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc24impl_unparsedeclarations6is_nilEv # -- Begin function _ZNK2kc24impl_unparsedeclarations6is_nilEv
	.p2align	5
	.type	_ZNK2kc24impl_unparsedeclarations6is_nilEv,@function
_ZNK2kc24impl_unparsedeclarations6is_nilEv: # @_ZNK2kc24impl_unparsedeclarations6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1324:
	.size	_ZNK2kc24impl_unparsedeclarations6is_nilEv, .Lfunc_end1324-_ZNK2kc24impl_unparsedeclarations6is_nilEv
                                        # -- End function
	.globl	_ZN2kc24impl_unparsedeclarations3mapEPFPNS_23impl_unparsedeclarationES2_E # -- Begin function _ZN2kc24impl_unparsedeclarations3mapEPFPNS_23impl_unparsedeclarationES2_E
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarations3mapEPFPNS_23impl_unparsedeclarationES2_E,@function
_ZN2kc24impl_unparsedeclarations3mapEPFPNS_23impl_unparsedeclarationES2_E: # @_ZN2kc24impl_unparsedeclarations3mapEPFPNS_23impl_unparsedeclarationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 139
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1325_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_unparsedeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_unparsedeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1325_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1325:
	.size	_ZN2kc24impl_unparsedeclarations3mapEPFPNS_23impl_unparsedeclarationES2_E, .Lfunc_end1325-_ZN2kc24impl_unparsedeclarations3mapEPFPNS_23impl_unparsedeclarationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_unparsedeclarations6filterEPFbPNS_23impl_unparsedeclarationEE # -- Begin function _ZN2kc24impl_unparsedeclarations6filterEPFbPNS_23impl_unparsedeclarationEE
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarations6filterEPFbPNS_23impl_unparsedeclarationEE,@function
_ZN2kc24impl_unparsedeclarations6filterEPFbPNS_23impl_unparsedeclarationEE: # @_ZN2kc24impl_unparsedeclarations6filterEPFbPNS_23impl_unparsedeclarationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 139
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1326_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_unparsedeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_unparsedeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1326_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1326:
	.size	_ZN2kc24impl_unparsedeclarations6filterEPFbPNS_23impl_unparsedeclarationEE, .Lfunc_end1326-_ZN2kc24impl_unparsedeclarations6filterEPFbPNS_23impl_unparsedeclarationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_unparsedeclarations6appendEPNS_23impl_unparsedeclarationE # -- Begin function _ZN2kc24impl_unparsedeclarations6appendEPNS_23impl_unparsedeclarationE
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarations6appendEPNS_23impl_unparsedeclarationE,@function
_ZN2kc24impl_unparsedeclarations6appendEPNS_23impl_unparsedeclarationE: # @_ZN2kc24impl_unparsedeclarations6appendEPNS_23impl_unparsedeclarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc24impl_unparsedeclarationsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc24impl_unparsedeclarationsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1327_2
	.p2align	4, , 16
.LBB1327_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1327_1
.LBB1327_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_unparsedeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc24impl_unparsedeclarationsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1327:
	.size	_ZN2kc24impl_unparsedeclarations6appendEPNS_23impl_unparsedeclarationE, .Lfunc_end1327-_ZN2kc24impl_unparsedeclarations6appendEPNS_23impl_unparsedeclarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_unparsedeclarations5mergeEPS0_PFPNS_23impl_unparsedeclarationES3_S3_E # -- Begin function _ZN2kc24impl_unparsedeclarations5mergeEPS0_PFPNS_23impl_unparsedeclarationES3_S3_E
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarations5mergeEPS0_PFPNS_23impl_unparsedeclarationES3_S3_E,@function
_ZN2kc24impl_unparsedeclarations5mergeEPS0_PFPNS_23impl_unparsedeclarationES3_S3_E: # @_ZN2kc24impl_unparsedeclarations5mergeEPS0_PFPNS_23impl_unparsedeclarationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 139
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1328_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_unparsedeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_unparsedeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1328_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1328:
	.size	_ZN2kc24impl_unparsedeclarations5mergeEPS0_PFPNS_23impl_unparsedeclarationES3_S3_E, .Lfunc_end1328-_ZN2kc24impl_unparsedeclarations5mergeEPS0_PFPNS_23impl_unparsedeclarationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_unparsedeclarations6reduceEPNS_23impl_unparsedeclarationEPFS2_S2_S2_E # -- Begin function _ZN2kc24impl_unparsedeclarations6reduceEPNS_23impl_unparsedeclarationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarations6reduceEPNS_23impl_unparsedeclarationEPFS2_S2_S2_E,@function
_ZN2kc24impl_unparsedeclarations6reduceEPNS_23impl_unparsedeclarationEPFS2_S2_S2_E: # @_ZN2kc24impl_unparsedeclarations6reduceEPNS_23impl_unparsedeclarationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1329_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_unparsedeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_unparsedeclarationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1329_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1329:
	.size	_ZN2kc24impl_unparsedeclarations6reduceEPNS_23impl_unparsedeclarationEPFS2_S2_S2_E, .Lfunc_end1329-_ZN2kc24impl_unparsedeclarations6reduceEPNS_23impl_unparsedeclarationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_19impl_unparseclausesES2_ # -- Begin function _ZN2kc6concatEPKNS_19impl_unparseclausesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_19impl_unparseclausesES2_,@function
_ZN2kc6concatEPKNS_19impl_unparseclausesES2_: # @_ZN2kc6concatEPKNS_19impl_unparseclausesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 142
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1330_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_unparseclausesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_unparseclausesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1330_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1330:
	.size	_ZN2kc6concatEPKNS_19impl_unparseclausesES2_, .Lfunc_end1330-_ZN2kc6concatEPKNS_19impl_unparseclausesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_unparseclauses7reverseEv # -- Begin function _ZNK2kc19impl_unparseclauses7reverseEv
	.p2align	5
	.type	_ZNK2kc19impl_unparseclauses7reverseEv,@function
_ZNK2kc19impl_unparseclauses7reverseEv: # @_ZNK2kc19impl_unparseclauses7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_unparseclausesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc19impl_unparseclausesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1331_2
	.p2align	4, , 16
.LBB1331_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1331_1
	b	.LBB1331_3
.LBB1331_2:
	move	$s1, $s0
.LBB1331_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_unparseclausesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_unparseclausesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1331:
	.size	_ZNK2kc19impl_unparseclauses7reverseEv, .Lfunc_end1331-_ZNK2kc19impl_unparseclauses7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_unparseclauses4lastEv # -- Begin function _ZNK2kc19impl_unparseclauses4lastEv
	.p2align	5
	.type	_ZNK2kc19impl_unparseclauses4lastEv,@function
_ZNK2kc19impl_unparseclauses4lastEv:    # @_ZNK2kc19impl_unparseclauses4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1332_5
	.p2align	4, , 16
.LBB1332_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1332_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1332_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_unparseclauseE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_unparseclauseE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1332_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1332_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1332:
	.size	_ZNK2kc19impl_unparseclauses4lastEv, .Lfunc_end1332-_ZNK2kc19impl_unparseclauses4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_unparseclauses6is_nilEv # -- Begin function _ZNK2kc19impl_unparseclauses6is_nilEv
	.p2align	5
	.type	_ZNK2kc19impl_unparseclauses6is_nilEv,@function
_ZNK2kc19impl_unparseclauses6is_nilEv:  # @_ZNK2kc19impl_unparseclauses6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1333:
	.size	_ZNK2kc19impl_unparseclauses6is_nilEv, .Lfunc_end1333-_ZNK2kc19impl_unparseclauses6is_nilEv
                                        # -- End function
	.globl	_ZN2kc19impl_unparseclauses3mapEPFPNS_18impl_unparseclauseES2_E # -- Begin function _ZN2kc19impl_unparseclauses3mapEPFPNS_18impl_unparseclauseES2_E
	.p2align	5
	.type	_ZN2kc19impl_unparseclauses3mapEPFPNS_18impl_unparseclauseES2_E,@function
_ZN2kc19impl_unparseclauses3mapEPFPNS_18impl_unparseclauseES2_E: # @_ZN2kc19impl_unparseclauses3mapEPFPNS_18impl_unparseclauseES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 142
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1334_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_unparseclausesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_unparseclausesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1334_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1334:
	.size	_ZN2kc19impl_unparseclauses3mapEPFPNS_18impl_unparseclauseES2_E, .Lfunc_end1334-_ZN2kc19impl_unparseclauses3mapEPFPNS_18impl_unparseclauseES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_unparseclauses6filterEPFbPNS_18impl_unparseclauseEE # -- Begin function _ZN2kc19impl_unparseclauses6filterEPFbPNS_18impl_unparseclauseEE
	.p2align	5
	.type	_ZN2kc19impl_unparseclauses6filterEPFbPNS_18impl_unparseclauseEE,@function
_ZN2kc19impl_unparseclauses6filterEPFbPNS_18impl_unparseclauseEE: # @_ZN2kc19impl_unparseclauses6filterEPFbPNS_18impl_unparseclauseEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 142
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1335_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_unparseclausesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_unparseclausesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1335_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1335:
	.size	_ZN2kc19impl_unparseclauses6filterEPFbPNS_18impl_unparseclauseEE, .Lfunc_end1335-_ZN2kc19impl_unparseclauses6filterEPFbPNS_18impl_unparseclauseEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_unparseclauses6appendEPNS_18impl_unparseclauseE # -- Begin function _ZN2kc19impl_unparseclauses6appendEPNS_18impl_unparseclauseE
	.p2align	5
	.type	_ZN2kc19impl_unparseclauses6appendEPNS_18impl_unparseclauseE,@function
_ZN2kc19impl_unparseclauses6appendEPNS_18impl_unparseclauseE: # @_ZN2kc19impl_unparseclauses6appendEPNS_18impl_unparseclauseE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_unparseclausesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_unparseclausesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1336_2
	.p2align	4, , 16
.LBB1336_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1336_1
.LBB1336_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_unparseclausesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_unparseclausesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1336:
	.size	_ZN2kc19impl_unparseclauses6appendEPNS_18impl_unparseclauseE, .Lfunc_end1336-_ZN2kc19impl_unparseclauses6appendEPNS_18impl_unparseclauseE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_unparseclauses5mergeEPS0_PFPNS_18impl_unparseclauseES3_S3_E # -- Begin function _ZN2kc19impl_unparseclauses5mergeEPS0_PFPNS_18impl_unparseclauseES3_S3_E
	.p2align	5
	.type	_ZN2kc19impl_unparseclauses5mergeEPS0_PFPNS_18impl_unparseclauseES3_S3_E,@function
_ZN2kc19impl_unparseclauses5mergeEPS0_PFPNS_18impl_unparseclauseES3_S3_E: # @_ZN2kc19impl_unparseclauses5mergeEPS0_PFPNS_18impl_unparseclauseES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 142
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1337_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_unparseclausesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_unparseclausesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1337_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1337:
	.size	_ZN2kc19impl_unparseclauses5mergeEPS0_PFPNS_18impl_unparseclauseES3_S3_E, .Lfunc_end1337-_ZN2kc19impl_unparseclauses5mergeEPS0_PFPNS_18impl_unparseclauseES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_unparseclauses6reduceEPNS_18impl_unparseclauseEPFS2_S2_S2_E # -- Begin function _ZN2kc19impl_unparseclauses6reduceEPNS_18impl_unparseclauseEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc19impl_unparseclauses6reduceEPNS_18impl_unparseclauseEPFS2_S2_S2_E,@function
_ZN2kc19impl_unparseclauses6reduceEPNS_18impl_unparseclauseEPFS2_S2_S2_E: # @_ZN2kc19impl_unparseclauses6reduceEPNS_18impl_unparseclauseEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1338_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_unparseclauseE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_unparseclauseE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1338_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1338:
	.size	_ZN2kc19impl_unparseclauses6reduceEPNS_18impl_unparseclauseEPFS2_S2_S2_E, .Lfunc_end1338-_ZN2kc19impl_unparseclauses6reduceEPNS_18impl_unparseclauseEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_14impl_viewnamesES2_ # -- Begin function _ZN2kc6concatEPKNS_14impl_viewnamesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_14impl_viewnamesES2_,@function
_ZN2kc6concatEPKNS_14impl_viewnamesES2_: # @_ZN2kc6concatEPKNS_14impl_viewnamesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 145
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1339_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1339_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1339:
	.size	_ZN2kc6concatEPKNS_14impl_viewnamesES2_, .Lfunc_end1339-_ZN2kc6concatEPKNS_14impl_viewnamesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_viewnames7reverseEv # -- Begin function _ZNK2kc14impl_viewnames7reverseEv
	.p2align	5
	.type	_ZNK2kc14impl_viewnames7reverseEv,@function
_ZNK2kc14impl_viewnames7reverseEv:      # @_ZNK2kc14impl_viewnames7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_viewnamesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc14impl_viewnamesE+16)
	st.d	$s3, $s0, 0
	ld.d	$a0, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 16
	st.b	$zero, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1340_2
	.p2align	4, , 16
.LBB1340_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 16
	st.d	$s0, $s1, 24
	st.b	$zero, $s1, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1340_1
	b	.LBB1340_3
.LBB1340_2:
	move	$s1, $s0
.LBB1340_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1340:
	.size	_ZNK2kc14impl_viewnames7reverseEv, .Lfunc_end1340-_ZNK2kc14impl_viewnames7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_viewnames4lastEv  # -- Begin function _ZNK2kc14impl_viewnames4lastEv
	.p2align	5
	.type	_ZNK2kc14impl_viewnames4lastEv,@function
_ZNK2kc14impl_viewnames4lastEv:         # @_ZNK2kc14impl_viewnames4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1341_5
	.p2align	4, , 16
.LBB1341_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1341_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1341_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1341_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1341_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1341:
	.size	_ZNK2kc14impl_viewnames4lastEv, .Lfunc_end1341-_ZNK2kc14impl_viewnames4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_viewnames6is_nilEv # -- Begin function _ZNK2kc14impl_viewnames6is_nilEv
	.p2align	5
	.type	_ZNK2kc14impl_viewnames6is_nilEv,@function
_ZNK2kc14impl_viewnames6is_nilEv:       # @_ZNK2kc14impl_viewnames6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 16
	ld.d	$a0, $a0, 24
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1342:
	.size	_ZNK2kc14impl_viewnames6is_nilEv, .Lfunc_end1342-_ZNK2kc14impl_viewnames6is_nilEv
                                        # -- End function
	.globl	_ZN2kc14impl_viewnames3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc14impl_viewnames3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc14impl_viewnames3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc14impl_viewnames3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc14impl_viewnames3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 145
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1343_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1343_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1343:
	.size	_ZN2kc14impl_viewnames3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1343-_ZN2kc14impl_viewnames3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_viewnames6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc14impl_viewnames6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc14impl_viewnames6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc14impl_viewnames6filterEPFbPNS_7impl_IDEE: # @_ZN2kc14impl_viewnames6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 145
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1344_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1344_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1344:
	.size	_ZN2kc14impl_viewnames6filterEPFbPNS_7impl_IDEE, .Lfunc_end1344-_ZN2kc14impl_viewnames6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_viewnames6appendEPNS_7impl_IDE # -- Begin function _ZN2kc14impl_viewnames6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc14impl_viewnames6appendEPNS_7impl_IDE,@function
_ZN2kc14impl_viewnames6appendEPNS_7impl_IDE: # @_ZN2kc14impl_viewnames6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 32
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_viewnamesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc14impl_viewnamesE+16)
	st.d	$a0, $s0, 0
	ld.d	$a0, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 16
	st.b	$zero, $s0, 8
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1345_2
	.p2align	4, , 16
.LBB1345_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1345_1
.LBB1345_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1345:
	.size	_ZN2kc14impl_viewnames6appendEPNS_7impl_IDE, .Lfunc_end1345-_ZN2kc14impl_viewnames6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_viewnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc14impl_viewnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc14impl_viewnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc14impl_viewnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc14impl_viewnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 145
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1346_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_viewnamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_viewnamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1346_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1346:
	.size	_ZN2kc14impl_viewnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1346-_ZN2kc14impl_viewnames5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_viewnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc14impl_viewnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc14impl_viewnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc14impl_viewnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc14impl_viewnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1347_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1347_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1347:
	.size	_ZN2kc14impl_viewnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1347-_ZN2kc14impl_viewnames6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_17impl_unparseitemsES2_ # -- Begin function _ZN2kc6concatEPKNS_17impl_unparseitemsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_17impl_unparseitemsES2_,@function
_ZN2kc6concatEPKNS_17impl_unparseitemsES2_: # @_ZN2kc6concatEPKNS_17impl_unparseitemsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 147
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1348_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_unparseitemsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_unparseitemsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1348_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1348:
	.size	_ZN2kc6concatEPKNS_17impl_unparseitemsES2_, .Lfunc_end1348-_ZN2kc6concatEPKNS_17impl_unparseitemsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_unparseitems7reverseEv # -- Begin function _ZNK2kc17impl_unparseitems7reverseEv
	.p2align	5
	.type	_ZNK2kc17impl_unparseitems7reverseEv,@function
_ZNK2kc17impl_unparseitems7reverseEv:   # @_ZNK2kc17impl_unparseitems7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_unparseitemsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc17impl_unparseitemsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1349_2
	.p2align	4, , 16
.LBB1349_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1349_1
	b	.LBB1349_3
.LBB1349_2:
	move	$s1, $s0
.LBB1349_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_unparseitemsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc17impl_unparseitemsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1349:
	.size	_ZNK2kc17impl_unparseitems7reverseEv, .Lfunc_end1349-_ZNK2kc17impl_unparseitems7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_unparseitems4lastEv # -- Begin function _ZNK2kc17impl_unparseitems4lastEv
	.p2align	5
	.type	_ZNK2kc17impl_unparseitems4lastEv,@function
_ZNK2kc17impl_unparseitems4lastEv:      # @_ZNK2kc17impl_unparseitems4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1350_5
	.p2align	4, , 16
.LBB1350_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1350_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1350_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_unparseitemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_unparseitemE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1350_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1350_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1350:
	.size	_ZNK2kc17impl_unparseitems4lastEv, .Lfunc_end1350-_ZNK2kc17impl_unparseitems4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc17impl_unparseitems6is_nilEv # -- Begin function _ZNK2kc17impl_unparseitems6is_nilEv
	.p2align	5
	.type	_ZNK2kc17impl_unparseitems6is_nilEv,@function
_ZNK2kc17impl_unparseitems6is_nilEv:    # @_ZNK2kc17impl_unparseitems6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1351:
	.size	_ZNK2kc17impl_unparseitems6is_nilEv, .Lfunc_end1351-_ZNK2kc17impl_unparseitems6is_nilEv
                                        # -- End function
	.globl	_ZN2kc17impl_unparseitems3mapEPFPNS_16impl_unparseitemES2_E # -- Begin function _ZN2kc17impl_unparseitems3mapEPFPNS_16impl_unparseitemES2_E
	.p2align	5
	.type	_ZN2kc17impl_unparseitems3mapEPFPNS_16impl_unparseitemES2_E,@function
_ZN2kc17impl_unparseitems3mapEPFPNS_16impl_unparseitemES2_E: # @_ZN2kc17impl_unparseitems3mapEPFPNS_16impl_unparseitemES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 147
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1352_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_unparseitemsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_unparseitemsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1352_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1352:
	.size	_ZN2kc17impl_unparseitems3mapEPFPNS_16impl_unparseitemES2_E, .Lfunc_end1352-_ZN2kc17impl_unparseitems3mapEPFPNS_16impl_unparseitemES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_unparseitems6filterEPFbPNS_16impl_unparseitemEE # -- Begin function _ZN2kc17impl_unparseitems6filterEPFbPNS_16impl_unparseitemEE
	.p2align	5
	.type	_ZN2kc17impl_unparseitems6filterEPFbPNS_16impl_unparseitemEE,@function
_ZN2kc17impl_unparseitems6filterEPFbPNS_16impl_unparseitemEE: # @_ZN2kc17impl_unparseitems6filterEPFbPNS_16impl_unparseitemEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 147
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1353_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_unparseitemsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_unparseitemsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1353_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1353:
	.size	_ZN2kc17impl_unparseitems6filterEPFbPNS_16impl_unparseitemEE, .Lfunc_end1353-_ZN2kc17impl_unparseitems6filterEPFbPNS_16impl_unparseitemEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_unparseitems6appendEPNS_16impl_unparseitemE # -- Begin function _ZN2kc17impl_unparseitems6appendEPNS_16impl_unparseitemE
	.p2align	5
	.type	_ZN2kc17impl_unparseitems6appendEPNS_16impl_unparseitemE,@function
_ZN2kc17impl_unparseitems6appendEPNS_16impl_unparseitemE: # @_ZN2kc17impl_unparseitems6appendEPNS_16impl_unparseitemE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc17impl_unparseitemsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc17impl_unparseitemsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1354_2
	.p2align	4, , 16
.LBB1354_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1354_1
.LBB1354_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc17impl_unparseitemsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc17impl_unparseitemsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1354:
	.size	_ZN2kc17impl_unparseitems6appendEPNS_16impl_unparseitemE, .Lfunc_end1354-_ZN2kc17impl_unparseitems6appendEPNS_16impl_unparseitemE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_unparseitems5mergeEPS0_PFPNS_16impl_unparseitemES3_S3_E # -- Begin function _ZN2kc17impl_unparseitems5mergeEPS0_PFPNS_16impl_unparseitemES3_S3_E
	.p2align	5
	.type	_ZN2kc17impl_unparseitems5mergeEPS0_PFPNS_16impl_unparseitemES3_S3_E,@function
_ZN2kc17impl_unparseitems5mergeEPS0_PFPNS_16impl_unparseitemES3_S3_E: # @_ZN2kc17impl_unparseitems5mergeEPS0_PFPNS_16impl_unparseitemES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 147
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1355_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_unparseitemsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_unparseitemsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1355_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1355:
	.size	_ZN2kc17impl_unparseitems5mergeEPS0_PFPNS_16impl_unparseitemES3_S3_E, .Lfunc_end1355-_ZN2kc17impl_unparseitems5mergeEPS0_PFPNS_16impl_unparseitemES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_unparseitems6reduceEPNS_16impl_unparseitemEPFS2_S2_S2_E # -- Begin function _ZN2kc17impl_unparseitems6reduceEPNS_16impl_unparseitemEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc17impl_unparseitems6reduceEPNS_16impl_unparseitemEPFS2_S2_S2_E,@function
_ZN2kc17impl_unparseitems6reduceEPNS_16impl_unparseitemEPFS2_S2_S2_E: # @_ZN2kc17impl_unparseitems6reduceEPNS_16impl_unparseitemEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1356_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_unparseitemE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_unparseitemE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1356_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1356:
	.size	_ZN2kc17impl_unparseitems6reduceEPNS_16impl_unparseitemEPFS2_S2_S2_E, .Lfunc_end1356-_ZN2kc17impl_unparseitems6reduceEPNS_16impl_unparseitemEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_18impl_unpattributesES2_ # -- Begin function _ZN2kc6concatEPKNS_18impl_unpattributesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_18impl_unpattributesES2_,@function
_ZN2kc6concatEPKNS_18impl_unpattributesES2_: # @_ZN2kc6concatEPKNS_18impl_unpattributesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 159
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1357_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_unpattributesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_unpattributesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1357_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1357:
	.size	_ZN2kc6concatEPKNS_18impl_unpattributesES2_, .Lfunc_end1357-_ZN2kc6concatEPKNS_18impl_unpattributesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_unpattributes7reverseEv # -- Begin function _ZNK2kc18impl_unpattributes7reverseEv
	.p2align	5
	.type	_ZNK2kc18impl_unpattributes7reverseEv,@function
_ZNK2kc18impl_unpattributes7reverseEv:  # @_ZNK2kc18impl_unpattributes7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_unpattributesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc18impl_unpattributesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1358_2
	.p2align	4, , 16
.LBB1358_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1358_1
	b	.LBB1358_3
.LBB1358_2:
	move	$s1, $s0
.LBB1358_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_unpattributesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_unpattributesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1358:
	.size	_ZNK2kc18impl_unpattributes7reverseEv, .Lfunc_end1358-_ZNK2kc18impl_unpattributes7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_unpattributes4lastEv # -- Begin function _ZNK2kc18impl_unpattributes4lastEv
	.p2align	5
	.type	_ZNK2kc18impl_unpattributes4lastEv,@function
_ZNK2kc18impl_unpattributes4lastEv:     # @_ZNK2kc18impl_unpattributes4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1359_5
	.p2align	4, , 16
.LBB1359_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1359_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1359_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1359_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1359_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1359:
	.size	_ZNK2kc18impl_unpattributes4lastEv, .Lfunc_end1359-_ZNK2kc18impl_unpattributes4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_unpattributes6is_nilEv # -- Begin function _ZNK2kc18impl_unpattributes6is_nilEv
	.p2align	5
	.type	_ZNK2kc18impl_unpattributes6is_nilEv,@function
_ZNK2kc18impl_unpattributes6is_nilEv:   # @_ZNK2kc18impl_unpattributes6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1360:
	.size	_ZNK2kc18impl_unpattributes6is_nilEv, .Lfunc_end1360-_ZNK2kc18impl_unpattributes6is_nilEv
                                        # -- End function
	.globl	_ZN2kc18impl_unpattributes3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc18impl_unpattributes3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc18impl_unpattributes3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc18impl_unpattributes3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc18impl_unpattributes3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 159
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1361_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_unpattributesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_unpattributesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1361_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1361:
	.size	_ZN2kc18impl_unpattributes3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1361-_ZN2kc18impl_unpattributes3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_unpattributes6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc18impl_unpattributes6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc18impl_unpattributes6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc18impl_unpattributes6filterEPFbPNS_7impl_IDEE: # @_ZN2kc18impl_unpattributes6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 159
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1362_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_unpattributesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_unpattributesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1362_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1362:
	.size	_ZN2kc18impl_unpattributes6filterEPFbPNS_7impl_IDEE, .Lfunc_end1362-_ZN2kc18impl_unpattributes6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_unpattributes6appendEPNS_7impl_IDE # -- Begin function _ZN2kc18impl_unpattributes6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc18impl_unpattributes6appendEPNS_7impl_IDE,@function
_ZN2kc18impl_unpattributes6appendEPNS_7impl_IDE: # @_ZN2kc18impl_unpattributes6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_unpattributesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc18impl_unpattributesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1363_2
	.p2align	4, , 16
.LBB1363_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1363_1
.LBB1363_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_unpattributesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_unpattributesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1363:
	.size	_ZN2kc18impl_unpattributes6appendEPNS_7impl_IDE, .Lfunc_end1363-_ZN2kc18impl_unpattributes6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_unpattributes5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc18impl_unpattributes5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc18impl_unpattributes5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc18impl_unpattributes5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc18impl_unpattributes5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 159
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1364_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_unpattributesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_unpattributesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1364_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1364:
	.size	_ZN2kc18impl_unpattributes5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1364-_ZN2kc18impl_unpattributes5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_unpattributes6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc18impl_unpattributes6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc18impl_unpattributes6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc18impl_unpattributes6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc18impl_unpattributes6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1365_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1365_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1365:
	.size	_ZN2kc18impl_unpattributes6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1365-_ZN2kc18impl_unpattributes6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_18impl_languagenamesES2_ # -- Begin function _ZN2kc6concatEPKNS_18impl_languagenamesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_18impl_languagenamesES2_,@function
_ZN2kc6concatEPKNS_18impl_languagenamesES2_: # @_ZN2kc6concatEPKNS_18impl_languagenamesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 165
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1366_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_languagenamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_languagenamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1366_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1366:
	.size	_ZN2kc6concatEPKNS_18impl_languagenamesES2_, .Lfunc_end1366-_ZN2kc6concatEPKNS_18impl_languagenamesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_languagenames7reverseEv # -- Begin function _ZNK2kc18impl_languagenames7reverseEv
	.p2align	5
	.type	_ZNK2kc18impl_languagenames7reverseEv,@function
_ZNK2kc18impl_languagenames7reverseEv:  # @_ZNK2kc18impl_languagenames7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_languagenamesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc18impl_languagenamesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1367_2
	.p2align	4, , 16
.LBB1367_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1367_1
	b	.LBB1367_3
.LBB1367_2:
	move	$s1, $s0
.LBB1367_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_languagenamesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_languagenamesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1367:
	.size	_ZNK2kc18impl_languagenames7reverseEv, .Lfunc_end1367-_ZNK2kc18impl_languagenames7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_languagenames4lastEv # -- Begin function _ZNK2kc18impl_languagenames4lastEv
	.p2align	5
	.type	_ZNK2kc18impl_languagenames4lastEv,@function
_ZNK2kc18impl_languagenames4lastEv:     # @_ZNK2kc18impl_languagenames4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1368_5
	.p2align	4, , 16
.LBB1368_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1368_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1368_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1368_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1368_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1368:
	.size	_ZNK2kc18impl_languagenames4lastEv, .Lfunc_end1368-_ZNK2kc18impl_languagenames4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_languagenames6is_nilEv # -- Begin function _ZNK2kc18impl_languagenames6is_nilEv
	.p2align	5
	.type	_ZNK2kc18impl_languagenames6is_nilEv,@function
_ZNK2kc18impl_languagenames6is_nilEv:   # @_ZNK2kc18impl_languagenames6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1369:
	.size	_ZNK2kc18impl_languagenames6is_nilEv, .Lfunc_end1369-_ZNK2kc18impl_languagenames6is_nilEv
                                        # -- End function
	.globl	_ZN2kc18impl_languagenames3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc18impl_languagenames3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc18impl_languagenames3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc18impl_languagenames3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc18impl_languagenames3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 165
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1370_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_languagenamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_languagenamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1370_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1370:
	.size	_ZN2kc18impl_languagenames3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1370-_ZN2kc18impl_languagenames3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_languagenames6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc18impl_languagenames6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc18impl_languagenames6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc18impl_languagenames6filterEPFbPNS_7impl_IDEE: # @_ZN2kc18impl_languagenames6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 165
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1371_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_languagenamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_languagenamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1371_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1371:
	.size	_ZN2kc18impl_languagenames6filterEPFbPNS_7impl_IDEE, .Lfunc_end1371-_ZN2kc18impl_languagenames6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_languagenames6appendEPNS_7impl_IDE # -- Begin function _ZN2kc18impl_languagenames6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc18impl_languagenames6appendEPNS_7impl_IDE,@function
_ZN2kc18impl_languagenames6appendEPNS_7impl_IDE: # @_ZN2kc18impl_languagenames6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_languagenamesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc18impl_languagenamesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1372_2
	.p2align	4, , 16
.LBB1372_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1372_1
.LBB1372_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_languagenamesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_languagenamesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1372:
	.size	_ZN2kc18impl_languagenames6appendEPNS_7impl_IDE, .Lfunc_end1372-_ZN2kc18impl_languagenames6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_languagenames5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc18impl_languagenames5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc18impl_languagenames5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc18impl_languagenames5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc18impl_languagenames5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 165
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1373_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_languagenamesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_languagenamesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1373_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1373:
	.size	_ZN2kc18impl_languagenames5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1373-_ZN2kc18impl_languagenames5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_languagenames6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc18impl_languagenames6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc18impl_languagenames6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc18impl_languagenames6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc18impl_languagenames6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1374_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1374_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1374:
	.size	_ZN2kc18impl_languagenames6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1374-_ZN2kc18impl_languagenames6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_27impl_scopetypefilelinestackES2_ # -- Begin function _ZN2kc6concatEPKNS_27impl_scopetypefilelinestackES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_27impl_scopetypefilelinestackES2_,@function
_ZN2kc6concatEPKNS_27impl_scopetypefilelinestackES2_: # @_ZN2kc6concatEPKNS_27impl_scopetypefilelinestackES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 170
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1375_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_scopetypefilelinestackE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_scopetypefilelinestackE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1375_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1375:
	.size	_ZN2kc6concatEPKNS_27impl_scopetypefilelinestackES2_, .Lfunc_end1375-_ZN2kc6concatEPKNS_27impl_scopetypefilelinestackES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_scopetypefilelinestack7reverseEv # -- Begin function _ZNK2kc27impl_scopetypefilelinestack7reverseEv
	.p2align	5
	.type	_ZNK2kc27impl_scopetypefilelinestack7reverseEv,@function
_ZNK2kc27impl_scopetypefilelinestack7reverseEv: # @_ZNK2kc27impl_scopetypefilelinestack7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1376_2
	.p2align	4, , 16
.LBB1376_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1376_1
	b	.LBB1376_3
.LBB1376_2:
	move	$s1, $s0
.LBB1376_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_scopetypefilelinestackE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc27impl_scopetypefilelinestackE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1376:
	.size	_ZNK2kc27impl_scopetypefilelinestack7reverseEv, .Lfunc_end1376-_ZNK2kc27impl_scopetypefilelinestack7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_scopetypefilelinestack4lastEv # -- Begin function _ZNK2kc27impl_scopetypefilelinestack4lastEv
	.p2align	5
	.type	_ZNK2kc27impl_scopetypefilelinestack4lastEv,@function
_ZNK2kc27impl_scopetypefilelinestack4lastEv: # @_ZNK2kc27impl_scopetypefilelinestack4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1377_5
	.p2align	4, , 16
.LBB1377_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1377_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1377_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_scopetypefilelineE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_scopetypefilelineE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1377_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1377_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1377:
	.size	_ZNK2kc27impl_scopetypefilelinestack4lastEv, .Lfunc_end1377-_ZNK2kc27impl_scopetypefilelinestack4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_scopetypefilelinestack6is_nilEv # -- Begin function _ZNK2kc27impl_scopetypefilelinestack6is_nilEv
	.p2align	5
	.type	_ZNK2kc27impl_scopetypefilelinestack6is_nilEv,@function
_ZNK2kc27impl_scopetypefilelinestack6is_nilEv: # @_ZNK2kc27impl_scopetypefilelinestack6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1378:
	.size	_ZNK2kc27impl_scopetypefilelinestack6is_nilEv, .Lfunc_end1378-_ZNK2kc27impl_scopetypefilelinestack6is_nilEv
                                        # -- End function
	.globl	_ZN2kc27impl_scopetypefilelinestack3mapEPFPNS_22impl_scopetypefilelineES2_E # -- Begin function _ZN2kc27impl_scopetypefilelinestack3mapEPFPNS_22impl_scopetypefilelineES2_E
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestack3mapEPFPNS_22impl_scopetypefilelineES2_E,@function
_ZN2kc27impl_scopetypefilelinestack3mapEPFPNS_22impl_scopetypefilelineES2_E: # @_ZN2kc27impl_scopetypefilelinestack3mapEPFPNS_22impl_scopetypefilelineES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 170
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1379_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_scopetypefilelinestackE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_scopetypefilelinestackE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1379_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1379:
	.size	_ZN2kc27impl_scopetypefilelinestack3mapEPFPNS_22impl_scopetypefilelineES2_E, .Lfunc_end1379-_ZN2kc27impl_scopetypefilelinestack3mapEPFPNS_22impl_scopetypefilelineES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_scopetypefilelinestack6filterEPFbPNS_22impl_scopetypefilelineEE # -- Begin function _ZN2kc27impl_scopetypefilelinestack6filterEPFbPNS_22impl_scopetypefilelineEE
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestack6filterEPFbPNS_22impl_scopetypefilelineEE,@function
_ZN2kc27impl_scopetypefilelinestack6filterEPFbPNS_22impl_scopetypefilelineEE: # @_ZN2kc27impl_scopetypefilelinestack6filterEPFbPNS_22impl_scopetypefilelineEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 170
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1380_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_scopetypefilelinestackE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_scopetypefilelinestackE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1380_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1380:
	.size	_ZN2kc27impl_scopetypefilelinestack6filterEPFbPNS_22impl_scopetypefilelineEE, .Lfunc_end1380-_ZN2kc27impl_scopetypefilelinestack6filterEPFbPNS_22impl_scopetypefilelineEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_scopetypefilelinestack6appendEPNS_22impl_scopetypefilelineE # -- Begin function _ZN2kc27impl_scopetypefilelinestack6appendEPNS_22impl_scopetypefilelineE
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestack6appendEPNS_22impl_scopetypefilelineE,@function
_ZN2kc27impl_scopetypefilelinestack6appendEPNS_22impl_scopetypefilelineE: # @_ZN2kc27impl_scopetypefilelinestack6appendEPNS_22impl_scopetypefilelineE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc27impl_scopetypefilelinestackE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1381_2
	.p2align	4, , 16
.LBB1381_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1381_1
.LBB1381_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_scopetypefilelinestackE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc27impl_scopetypefilelinestackE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1381:
	.size	_ZN2kc27impl_scopetypefilelinestack6appendEPNS_22impl_scopetypefilelineE, .Lfunc_end1381-_ZN2kc27impl_scopetypefilelinestack6appendEPNS_22impl_scopetypefilelineE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_scopetypefilelinestack5mergeEPS0_PFPNS_22impl_scopetypefilelineES3_S3_E # -- Begin function _ZN2kc27impl_scopetypefilelinestack5mergeEPS0_PFPNS_22impl_scopetypefilelineES3_S3_E
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestack5mergeEPS0_PFPNS_22impl_scopetypefilelineES3_S3_E,@function
_ZN2kc27impl_scopetypefilelinestack5mergeEPS0_PFPNS_22impl_scopetypefilelineES3_S3_E: # @_ZN2kc27impl_scopetypefilelinestack5mergeEPS0_PFPNS_22impl_scopetypefilelineES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 170
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1382_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_scopetypefilelinestackE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_scopetypefilelinestackE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1382_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1382:
	.size	_ZN2kc27impl_scopetypefilelinestack5mergeEPS0_PFPNS_22impl_scopetypefilelineES3_S3_E, .Lfunc_end1382-_ZN2kc27impl_scopetypefilelinestack5mergeEPS0_PFPNS_22impl_scopetypefilelineES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_scopetypefilelinestack6reduceEPNS_22impl_scopetypefilelineEPFS2_S2_S2_E # -- Begin function _ZN2kc27impl_scopetypefilelinestack6reduceEPNS_22impl_scopetypefilelineEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestack6reduceEPNS_22impl_scopetypefilelineEPFS2_S2_S2_E,@function
_ZN2kc27impl_scopetypefilelinestack6reduceEPNS_22impl_scopetypefilelineEPFS2_S2_S2_E: # @_ZN2kc27impl_scopetypefilelinestack6reduceEPNS_22impl_scopetypefilelineEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1383_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_scopetypefilelineE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_scopetypefilelineE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1383_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1383:
	.size	_ZN2kc27impl_scopetypefilelinestack6reduceEPNS_22impl_scopetypefilelineEPFS2_S2_S2_E, .Lfunc_end1383-_ZN2kc27impl_scopetypefilelinestack6reduceEPNS_22impl_scopetypefilelineEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_14impl_operatorsES2_ # -- Begin function _ZN2kc6concatEPKNS_14impl_operatorsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_14impl_operatorsES2_,@function
_ZN2kc6concatEPKNS_14impl_operatorsES2_: # @_ZN2kc6concatEPKNS_14impl_operatorsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 188
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1384_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_operatorsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_operatorsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1384_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1384:
	.size	_ZN2kc6concatEPKNS_14impl_operatorsES2_, .Lfunc_end1384-_ZN2kc6concatEPKNS_14impl_operatorsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_operators7reverseEv # -- Begin function _ZNK2kc14impl_operators7reverseEv
	.p2align	5
	.type	_ZNK2kc14impl_operators7reverseEv,@function
_ZNK2kc14impl_operators7reverseEv:      # @_ZNK2kc14impl_operators7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_operatorsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc14impl_operatorsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1385_2
	.p2align	4, , 16
.LBB1385_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1385_1
	b	.LBB1385_3
.LBB1385_2:
	move	$s1, $s0
.LBB1385_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_operatorsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_operatorsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1385:
	.size	_ZNK2kc14impl_operators7reverseEv, .Lfunc_end1385-_ZNK2kc14impl_operators7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_operators4lastEv  # -- Begin function _ZNK2kc14impl_operators4lastEv
	.p2align	5
	.type	_ZNK2kc14impl_operators4lastEv,@function
_ZNK2kc14impl_operators4lastEv:         # @_ZNK2kc14impl_operators4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1386_5
	.p2align	4, , 16
.LBB1386_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1386_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1386_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1386_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1386_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1386:
	.size	_ZNK2kc14impl_operators4lastEv, .Lfunc_end1386-_ZNK2kc14impl_operators4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_operators6is_nilEv # -- Begin function _ZNK2kc14impl_operators6is_nilEv
	.p2align	5
	.type	_ZNK2kc14impl_operators6is_nilEv,@function
_ZNK2kc14impl_operators6is_nilEv:       # @_ZNK2kc14impl_operators6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1387:
	.size	_ZNK2kc14impl_operators6is_nilEv, .Lfunc_end1387-_ZNK2kc14impl_operators6is_nilEv
                                        # -- End function
	.globl	_ZN2kc14impl_operators3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc14impl_operators3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc14impl_operators3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc14impl_operators3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc14impl_operators3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 188
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1388_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_operatorsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_operatorsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1388_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1388:
	.size	_ZN2kc14impl_operators3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1388-_ZN2kc14impl_operators3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_operators6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc14impl_operators6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc14impl_operators6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc14impl_operators6filterEPFbPNS_7impl_IDEE: # @_ZN2kc14impl_operators6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 188
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1389_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_operatorsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_operatorsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1389_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1389:
	.size	_ZN2kc14impl_operators6filterEPFbPNS_7impl_IDEE, .Lfunc_end1389-_ZN2kc14impl_operators6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_operators6appendEPNS_7impl_IDE # -- Begin function _ZN2kc14impl_operators6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc14impl_operators6appendEPNS_7impl_IDE,@function
_ZN2kc14impl_operators6appendEPNS_7impl_IDE: # @_ZN2kc14impl_operators6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_operatorsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc14impl_operatorsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1390_2
	.p2align	4, , 16
.LBB1390_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1390_1
.LBB1390_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_operatorsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_operatorsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1390:
	.size	_ZN2kc14impl_operators6appendEPNS_7impl_IDE, .Lfunc_end1390-_ZN2kc14impl_operators6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_operators5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc14impl_operators5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc14impl_operators5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc14impl_operators5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc14impl_operators5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 188
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1391_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_operatorsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_operatorsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1391_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1391:
	.size	_ZN2kc14impl_operators5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1391-_ZN2kc14impl_operators5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_operators6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc14impl_operators6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc14impl_operators6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc14impl_operators6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc14impl_operators6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1392_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1392_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1392:
	.size	_ZN2kc14impl_operators6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1392-_ZN2kc14impl_operators6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_10impl_phylaES2_ # -- Begin function _ZN2kc6concatEPKNS_10impl_phylaES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_10impl_phylaES2_,@function
_ZN2kc6concatEPKNS_10impl_phylaES2_:    # @_ZN2kc6concatEPKNS_10impl_phylaES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 190
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1393_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_phylaE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_phylaE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1393_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1393:
	.size	_ZN2kc6concatEPKNS_10impl_phylaES2_, .Lfunc_end1393-_ZN2kc6concatEPKNS_10impl_phylaES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_phyla7reverseEv   # -- Begin function _ZNK2kc10impl_phyla7reverseEv
	.p2align	5
	.type	_ZNK2kc10impl_phyla7reverseEv,@function
_ZNK2kc10impl_phyla7reverseEv:          # @_ZNK2kc10impl_phyla7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_phylaE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc10impl_phylaE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1394_2
	.p2align	4, , 16
.LBB1394_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1394_1
	b	.LBB1394_3
.LBB1394_2:
	move	$s1, $s0
.LBB1394_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_phylaE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc10impl_phylaE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1394:
	.size	_ZNK2kc10impl_phyla7reverseEv, .Lfunc_end1394-_ZNK2kc10impl_phyla7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_phyla4lastEv      # -- Begin function _ZNK2kc10impl_phyla4lastEv
	.p2align	5
	.type	_ZNK2kc10impl_phyla4lastEv,@function
_ZNK2kc10impl_phyla4lastEv:             # @_ZNK2kc10impl_phyla4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1395_5
	.p2align	4, , 16
.LBB1395_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1395_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1395_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1395_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1395_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1395:
	.size	_ZNK2kc10impl_phyla4lastEv, .Lfunc_end1395-_ZNK2kc10impl_phyla4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_phyla6is_nilEv    # -- Begin function _ZNK2kc10impl_phyla6is_nilEv
	.p2align	5
	.type	_ZNK2kc10impl_phyla6is_nilEv,@function
_ZNK2kc10impl_phyla6is_nilEv:           # @_ZNK2kc10impl_phyla6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1396:
	.size	_ZNK2kc10impl_phyla6is_nilEv, .Lfunc_end1396-_ZNK2kc10impl_phyla6is_nilEv
                                        # -- End function
	.globl	_ZN2kc10impl_phyla3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc10impl_phyla3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc10impl_phyla3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc10impl_phyla3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc10impl_phyla3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 190
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1397_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_phylaE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_phylaE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1397_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1397:
	.size	_ZN2kc10impl_phyla3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1397-_ZN2kc10impl_phyla3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_phyla6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc10impl_phyla6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc10impl_phyla6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc10impl_phyla6filterEPFbPNS_7impl_IDEE: # @_ZN2kc10impl_phyla6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 190
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1398_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_phylaE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_phylaE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1398_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1398:
	.size	_ZN2kc10impl_phyla6filterEPFbPNS_7impl_IDEE, .Lfunc_end1398-_ZN2kc10impl_phyla6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_phyla6appendEPNS_7impl_IDE # -- Begin function _ZN2kc10impl_phyla6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc10impl_phyla6appendEPNS_7impl_IDE,@function
_ZN2kc10impl_phyla6appendEPNS_7impl_IDE: # @_ZN2kc10impl_phyla6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_phylaE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc10impl_phylaE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1399_2
	.p2align	4, , 16
.LBB1399_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1399_1
.LBB1399_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_phylaE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc10impl_phylaE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1399:
	.size	_ZN2kc10impl_phyla6appendEPNS_7impl_IDE, .Lfunc_end1399-_ZN2kc10impl_phyla6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_phyla5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc10impl_phyla5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc10impl_phyla5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc10impl_phyla5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc10impl_phyla5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 190
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1400_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_phylaE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_phylaE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1400_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1400:
	.size	_ZN2kc10impl_phyla5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1400-_ZN2kc10impl_phyla5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_phyla6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc10impl_phyla6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc10impl_phyla6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc10impl_phyla6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc10impl_phyla6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1401_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1401_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1401:
	.size	_ZN2kc10impl_phyla6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1401-_ZN2kc10impl_phyla6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_14impl_variablesES2_ # -- Begin function _ZN2kc6concatEPKNS_14impl_variablesES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_14impl_variablesES2_,@function
_ZN2kc6concatEPKNS_14impl_variablesES2_: # @_ZN2kc6concatEPKNS_14impl_variablesES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 192
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1402_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_variablesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_variablesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1402_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1402:
	.size	_ZN2kc6concatEPKNS_14impl_variablesES2_, .Lfunc_end1402-_ZN2kc6concatEPKNS_14impl_variablesES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_variables7reverseEv # -- Begin function _ZNK2kc14impl_variables7reverseEv
	.p2align	5
	.type	_ZNK2kc14impl_variables7reverseEv,@function
_ZNK2kc14impl_variables7reverseEv:      # @_ZNK2kc14impl_variables7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_variablesE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc14impl_variablesE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1403_2
	.p2align	4, , 16
.LBB1403_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1403_1
	b	.LBB1403_3
.LBB1403_2:
	move	$s1, $s0
.LBB1403_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_variablesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_variablesE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1403:
	.size	_ZNK2kc14impl_variables7reverseEv, .Lfunc_end1403-_ZNK2kc14impl_variables7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_variables4lastEv  # -- Begin function _ZNK2kc14impl_variables4lastEv
	.p2align	5
	.type	_ZNK2kc14impl_variables4lastEv,@function
_ZNK2kc14impl_variables4lastEv:         # @_ZNK2kc14impl_variables4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1404_5
	.p2align	4, , 16
.LBB1404_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1404_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1404_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1404_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1404_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1404:
	.size	_ZNK2kc14impl_variables4lastEv, .Lfunc_end1404-_ZNK2kc14impl_variables4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc14impl_variables6is_nilEv # -- Begin function _ZNK2kc14impl_variables6is_nilEv
	.p2align	5
	.type	_ZNK2kc14impl_variables6is_nilEv,@function
_ZNK2kc14impl_variables6is_nilEv:       # @_ZNK2kc14impl_variables6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1405:
	.size	_ZNK2kc14impl_variables6is_nilEv, .Lfunc_end1405-_ZNK2kc14impl_variables6is_nilEv
                                        # -- End function
	.globl	_ZN2kc14impl_variables3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc14impl_variables3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc14impl_variables3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc14impl_variables3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc14impl_variables3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 192
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1406_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_variablesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_variablesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1406_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1406:
	.size	_ZN2kc14impl_variables3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1406-_ZN2kc14impl_variables3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_variables6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc14impl_variables6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc14impl_variables6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc14impl_variables6filterEPFbPNS_7impl_IDEE: # @_ZN2kc14impl_variables6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 192
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1407_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_variablesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_variablesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1407_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1407:
	.size	_ZN2kc14impl_variables6filterEPFbPNS_7impl_IDEE, .Lfunc_end1407-_ZN2kc14impl_variables6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_variables6appendEPNS_7impl_IDE # -- Begin function _ZN2kc14impl_variables6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc14impl_variables6appendEPNS_7impl_IDE,@function
_ZN2kc14impl_variables6appendEPNS_7impl_IDE: # @_ZN2kc14impl_variables6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc14impl_variablesE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc14impl_variablesE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1408_2
	.p2align	4, , 16
.LBB1408_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1408_1
.LBB1408_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc14impl_variablesE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc14impl_variablesE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1408:
	.size	_ZN2kc14impl_variables6appendEPNS_7impl_IDE, .Lfunc_end1408-_ZN2kc14impl_variables6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_variables5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc14impl_variables5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc14impl_variables5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc14impl_variables5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc14impl_variables5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 192
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1409_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc14impl_variablesE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc14impl_variablesE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1409_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1409:
	.size	_ZN2kc14impl_variables5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1409-_ZN2kc14impl_variables5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_variables6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc14impl_variables6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc14impl_variables6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc14impl_variables6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc14impl_variables6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1410_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1410_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1410:
	.size	_ZN2kc14impl_variables6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1410-_ZN2kc14impl_variables6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_27impl_patternrepresentationsES2_ # -- Begin function _ZN2kc6concatEPKNS_27impl_patternrepresentationsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_27impl_patternrepresentationsES2_,@function
_ZN2kc6concatEPKNS_27impl_patternrepresentationsES2_: # @_ZN2kc6concatEPKNS_27impl_patternrepresentationsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 199
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1411_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_patternrepresentationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_patternrepresentationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1411_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1411:
	.size	_ZN2kc6concatEPKNS_27impl_patternrepresentationsES2_, .Lfunc_end1411-_ZN2kc6concatEPKNS_27impl_patternrepresentationsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_patternrepresentations7reverseEv # -- Begin function _ZNK2kc27impl_patternrepresentations7reverseEv
	.p2align	5
	.type	_ZNK2kc27impl_patternrepresentations7reverseEv,@function
_ZNK2kc27impl_patternrepresentations7reverseEv: # @_ZNK2kc27impl_patternrepresentations7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc27impl_patternrepresentationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc27impl_patternrepresentationsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1412_2
	.p2align	4, , 16
.LBB1412_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1412_1
	b	.LBB1412_3
.LBB1412_2:
	move	$s1, $s0
.LBB1412_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_patternrepresentationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc27impl_patternrepresentationsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1412:
	.size	_ZNK2kc27impl_patternrepresentations7reverseEv, .Lfunc_end1412-_ZNK2kc27impl_patternrepresentations7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_patternrepresentations4lastEv # -- Begin function _ZNK2kc27impl_patternrepresentations4lastEv
	.p2align	5
	.type	_ZNK2kc27impl_patternrepresentations4lastEv,@function
_ZNK2kc27impl_patternrepresentations4lastEv: # @_ZNK2kc27impl_patternrepresentations4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1413_5
	.p2align	4, , 16
.LBB1413_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1413_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1413_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1413_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1413_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1413:
	.size	_ZNK2kc27impl_patternrepresentations4lastEv, .Lfunc_end1413-_ZNK2kc27impl_patternrepresentations4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_patternrepresentations6is_nilEv # -- Begin function _ZNK2kc27impl_patternrepresentations6is_nilEv
	.p2align	5
	.type	_ZNK2kc27impl_patternrepresentations6is_nilEv,@function
_ZNK2kc27impl_patternrepresentations6is_nilEv: # @_ZNK2kc27impl_patternrepresentations6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1414:
	.size	_ZNK2kc27impl_patternrepresentations6is_nilEv, .Lfunc_end1414-_ZNK2kc27impl_patternrepresentations6is_nilEv
                                        # -- End function
	.globl	_ZN2kc27impl_patternrepresentations3mapEPFPNS_26impl_patternrepresentationES2_E # -- Begin function _ZN2kc27impl_patternrepresentations3mapEPFPNS_26impl_patternrepresentationES2_E
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentations3mapEPFPNS_26impl_patternrepresentationES2_E,@function
_ZN2kc27impl_patternrepresentations3mapEPFPNS_26impl_patternrepresentationES2_E: # @_ZN2kc27impl_patternrepresentations3mapEPFPNS_26impl_patternrepresentationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 199
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1415_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_patternrepresentationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_patternrepresentationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1415_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1415:
	.size	_ZN2kc27impl_patternrepresentations3mapEPFPNS_26impl_patternrepresentationES2_E, .Lfunc_end1415-_ZN2kc27impl_patternrepresentations3mapEPFPNS_26impl_patternrepresentationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_patternrepresentations6filterEPFbPNS_26impl_patternrepresentationEE # -- Begin function _ZN2kc27impl_patternrepresentations6filterEPFbPNS_26impl_patternrepresentationEE
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentations6filterEPFbPNS_26impl_patternrepresentationEE,@function
_ZN2kc27impl_patternrepresentations6filterEPFbPNS_26impl_patternrepresentationEE: # @_ZN2kc27impl_patternrepresentations6filterEPFbPNS_26impl_patternrepresentationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 199
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1416_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_patternrepresentationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_patternrepresentationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1416_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1416:
	.size	_ZN2kc27impl_patternrepresentations6filterEPFbPNS_26impl_patternrepresentationEE, .Lfunc_end1416-_ZN2kc27impl_patternrepresentations6filterEPFbPNS_26impl_patternrepresentationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_patternrepresentations6appendEPNS_26impl_patternrepresentationE # -- Begin function _ZN2kc27impl_patternrepresentations6appendEPNS_26impl_patternrepresentationE
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentations6appendEPNS_26impl_patternrepresentationE,@function
_ZN2kc27impl_patternrepresentations6appendEPNS_26impl_patternrepresentationE: # @_ZN2kc27impl_patternrepresentations6appendEPNS_26impl_patternrepresentationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc27impl_patternrepresentationsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc27impl_patternrepresentationsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1417_2
	.p2align	4, , 16
.LBB1417_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1417_1
.LBB1417_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_patternrepresentationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc27impl_patternrepresentationsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1417:
	.size	_ZN2kc27impl_patternrepresentations6appendEPNS_26impl_patternrepresentationE, .Lfunc_end1417-_ZN2kc27impl_patternrepresentations6appendEPNS_26impl_patternrepresentationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_patternrepresentations5mergeEPS0_PFPNS_26impl_patternrepresentationES3_S3_E # -- Begin function _ZN2kc27impl_patternrepresentations5mergeEPS0_PFPNS_26impl_patternrepresentationES3_S3_E
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentations5mergeEPS0_PFPNS_26impl_patternrepresentationES3_S3_E,@function
_ZN2kc27impl_patternrepresentations5mergeEPS0_PFPNS_26impl_patternrepresentationES3_S3_E: # @_ZN2kc27impl_patternrepresentations5mergeEPS0_PFPNS_26impl_patternrepresentationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 199
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1418_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_patternrepresentationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_patternrepresentationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1418_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1418:
	.size	_ZN2kc27impl_patternrepresentations5mergeEPS0_PFPNS_26impl_patternrepresentationES3_S3_E, .Lfunc_end1418-_ZN2kc27impl_patternrepresentations5mergeEPS0_PFPNS_26impl_patternrepresentationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_patternrepresentations6reduceEPNS_26impl_patternrepresentationEPFS2_S2_S2_E # -- Begin function _ZN2kc27impl_patternrepresentations6reduceEPNS_26impl_patternrepresentationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentations6reduceEPNS_26impl_patternrepresentationEPFS2_S2_S2_E,@function
_ZN2kc27impl_patternrepresentations6reduceEPNS_26impl_patternrepresentationEPFS2_S2_S2_E: # @_ZN2kc27impl_patternrepresentations6reduceEPNS_26impl_patternrepresentationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1419_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1419_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1419:
	.size	_ZN2kc27impl_patternrepresentations6reduceEPNS_26impl_patternrepresentationEPFS2_S2_S2_E, .Lfunc_end1419-_ZN2kc27impl_patternrepresentations6reduceEPNS_26impl_patternrepresentationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_26impl_patternrepresentationES2_ # -- Begin function _ZN2kc6concatEPKNS_26impl_patternrepresentationES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_26impl_patternrepresentationES2_,@function
_ZN2kc6concatEPKNS_26impl_patternrepresentationES2_: # @_ZN2kc6concatEPKNS_26impl_patternrepresentationES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 201
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1420_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1420_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1420:
	.size	_ZN2kc6concatEPKNS_26impl_patternrepresentationES2_, .Lfunc_end1420-_ZN2kc6concatEPKNS_26impl_patternrepresentationES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc26impl_patternrepresentation7reverseEv # -- Begin function _ZNK2kc26impl_patternrepresentation7reverseEv
	.p2align	5
	.type	_ZNK2kc26impl_patternrepresentation7reverseEv,@function
_ZNK2kc26impl_patternrepresentation7reverseEv: # @_ZNK2kc26impl_patternrepresentation7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc26impl_patternrepresentationE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc26impl_patternrepresentationE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1421_2
	.p2align	4, , 16
.LBB1421_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1421_1
	b	.LBB1421_3
.LBB1421_2:
	move	$s1, $s0
.LBB1421_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1421:
	.size	_ZNK2kc26impl_patternrepresentation7reverseEv, .Lfunc_end1421-_ZNK2kc26impl_patternrepresentation7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc26impl_patternrepresentation4lastEv # -- Begin function _ZNK2kc26impl_patternrepresentation4lastEv
	.p2align	5
	.type	_ZNK2kc26impl_patternrepresentation4lastEv,@function
_ZNK2kc26impl_patternrepresentation4lastEv: # @_ZNK2kc26impl_patternrepresentation4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1422_5
	.p2align	4, , 16
.LBB1422_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1422_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1422_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc31impl_elem_patternrepresentationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc31impl_elem_patternrepresentationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1422_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1422_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1422:
	.size	_ZNK2kc26impl_patternrepresentation4lastEv, .Lfunc_end1422-_ZNK2kc26impl_patternrepresentation4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc26impl_patternrepresentation6is_nilEv # -- Begin function _ZNK2kc26impl_patternrepresentation6is_nilEv
	.p2align	5
	.type	_ZNK2kc26impl_patternrepresentation6is_nilEv,@function
_ZNK2kc26impl_patternrepresentation6is_nilEv: # @_ZNK2kc26impl_patternrepresentation6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1423:
	.size	_ZNK2kc26impl_patternrepresentation6is_nilEv, .Lfunc_end1423-_ZNK2kc26impl_patternrepresentation6is_nilEv
                                        # -- End function
	.globl	_ZN2kc26impl_patternrepresentation3mapEPFPNS_31impl_elem_patternrepresentationES2_E # -- Begin function _ZN2kc26impl_patternrepresentation3mapEPFPNS_31impl_elem_patternrepresentationES2_E
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentation3mapEPFPNS_31impl_elem_patternrepresentationES2_E,@function
_ZN2kc26impl_patternrepresentation3mapEPFPNS_31impl_elem_patternrepresentationES2_E: # @_ZN2kc26impl_patternrepresentation3mapEPFPNS_31impl_elem_patternrepresentationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 201
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1424_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1424_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1424:
	.size	_ZN2kc26impl_patternrepresentation3mapEPFPNS_31impl_elem_patternrepresentationES2_E, .Lfunc_end1424-_ZN2kc26impl_patternrepresentation3mapEPFPNS_31impl_elem_patternrepresentationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_patternrepresentation6filterEPFbPNS_31impl_elem_patternrepresentationEE # -- Begin function _ZN2kc26impl_patternrepresentation6filterEPFbPNS_31impl_elem_patternrepresentationEE
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentation6filterEPFbPNS_31impl_elem_patternrepresentationEE,@function
_ZN2kc26impl_patternrepresentation6filterEPFbPNS_31impl_elem_patternrepresentationEE: # @_ZN2kc26impl_patternrepresentation6filterEPFbPNS_31impl_elem_patternrepresentationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 201
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1425_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1425_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1425:
	.size	_ZN2kc26impl_patternrepresentation6filterEPFbPNS_31impl_elem_patternrepresentationEE, .Lfunc_end1425-_ZN2kc26impl_patternrepresentation6filterEPFbPNS_31impl_elem_patternrepresentationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_patternrepresentation6appendEPNS_31impl_elem_patternrepresentationE # -- Begin function _ZN2kc26impl_patternrepresentation6appendEPNS_31impl_elem_patternrepresentationE
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentation6appendEPNS_31impl_elem_patternrepresentationE,@function
_ZN2kc26impl_patternrepresentation6appendEPNS_31impl_elem_patternrepresentationE: # @_ZN2kc26impl_patternrepresentation6appendEPNS_31impl_elem_patternrepresentationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc26impl_patternrepresentationE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc26impl_patternrepresentationE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1426_2
	.p2align	4, , 16
.LBB1426_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1426_1
.LBB1426_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1426:
	.size	_ZN2kc26impl_patternrepresentation6appendEPNS_31impl_elem_patternrepresentationE, .Lfunc_end1426-_ZN2kc26impl_patternrepresentation6appendEPNS_31impl_elem_patternrepresentationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_patternrepresentation5mergeEPS0_PFPNS_31impl_elem_patternrepresentationES3_S3_E # -- Begin function _ZN2kc26impl_patternrepresentation5mergeEPS0_PFPNS_31impl_elem_patternrepresentationES3_S3_E
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentation5mergeEPS0_PFPNS_31impl_elem_patternrepresentationES3_S3_E,@function
_ZN2kc26impl_patternrepresentation5mergeEPS0_PFPNS_31impl_elem_patternrepresentationES3_S3_E: # @_ZN2kc26impl_patternrepresentation5mergeEPS0_PFPNS_31impl_elem_patternrepresentationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 201
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1427_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc26impl_patternrepresentationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc26impl_patternrepresentationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1427_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1427:
	.size	_ZN2kc26impl_patternrepresentation5mergeEPS0_PFPNS_31impl_elem_patternrepresentationES3_S3_E, .Lfunc_end1427-_ZN2kc26impl_patternrepresentation5mergeEPS0_PFPNS_31impl_elem_patternrepresentationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_patternrepresentation6reduceEPNS_31impl_elem_patternrepresentationEPFS2_S2_S2_E # -- Begin function _ZN2kc26impl_patternrepresentation6reduceEPNS_31impl_elem_patternrepresentationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentation6reduceEPNS_31impl_elem_patternrepresentationEPFS2_S2_S2_E,@function
_ZN2kc26impl_patternrepresentation6reduceEPNS_31impl_elem_patternrepresentationEPFS2_S2_S2_E: # @_ZN2kc26impl_patternrepresentation6reduceEPNS_31impl_elem_patternrepresentationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1428_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc31impl_elem_patternrepresentationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc31impl_elem_patternrepresentationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1428_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1428:
	.size	_ZN2kc26impl_patternrepresentation6reduceEPNS_31impl_elem_patternrepresentationEPFS2_S2_S2_E, .Lfunc_end1428-_ZN2kc26impl_patternrepresentation6reduceEPNS_31impl_elem_patternrepresentationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_9impl_pathES2_ # -- Begin function _ZN2kc6concatEPKNS_9impl_pathES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_9impl_pathES2_,@function
_ZN2kc6concatEPKNS_9impl_pathES2_:      # @_ZN2kc6concatEPKNS_9impl_pathES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 212
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1429_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1429_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1429:
	.size	_ZN2kc6concatEPKNS_9impl_pathES2_, .Lfunc_end1429-_ZN2kc6concatEPKNS_9impl_pathES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc9impl_path7reverseEv     # -- Begin function _ZNK2kc9impl_path7reverseEv
	.p2align	5
	.type	_ZNK2kc9impl_path7reverseEv,@function
_ZNK2kc9impl_path7reverseEv:            # @_ZNK2kc9impl_path7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc9impl_pathE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc9impl_pathE+16)
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1430_2
	.p2align	4, , 16
.LBB1430_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	st.d	$s2, $a0, 24
	st.d	$s0, $a0, 32
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s1, 16
	ld.d	$a2, $a1, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1430_1
	b	.LBB1430_3
.LBB1430_2:
	move	$s1, $s0
.LBB1430_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1430:
	.size	_ZNK2kc9impl_path7reverseEv, .Lfunc_end1430-_ZNK2kc9impl_path7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc9impl_path4lastEv        # -- Begin function _ZNK2kc9impl_path4lastEv
	.p2align	5
	.type	_ZNK2kc9impl_path4lastEv,@function
_ZNK2kc9impl_path4lastEv:               # @_ZNK2kc9impl_path4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1431_5
	.p2align	4, , 16
.LBB1431_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1431_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1431_4
# %bb.3:
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a2, $a1, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1431_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1431_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1431:
	.size	_ZNK2kc9impl_path4lastEv, .Lfunc_end1431-_ZNK2kc9impl_path4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc9impl_path6is_nilEv      # -- Begin function _ZNK2kc9impl_path6is_nilEv
	.p2align	5
	.type	_ZNK2kc9impl_path6is_nilEv,@function
_ZNK2kc9impl_path6is_nilEv:             # @_ZNK2kc9impl_path6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 32
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1432:
	.size	_ZNK2kc9impl_path6is_nilEv, .Lfunc_end1432-_ZNK2kc9impl_path6is_nilEv
                                        # -- End function
	.globl	_ZN2kc9impl_path3mapEPFPNS_17impl_integer__IntES2_E # -- Begin function _ZN2kc9impl_path3mapEPFPNS_17impl_integer__IntES2_E
	.p2align	5
	.type	_ZN2kc9impl_path3mapEPFPNS_17impl_integer__IntES2_E,@function
_ZN2kc9impl_path3mapEPFPNS_17impl_integer__IntES2_E: # @_ZN2kc9impl_path3mapEPFPNS_17impl_integer__IntES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 212
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1433_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1433_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1433:
	.size	_ZN2kc9impl_path3mapEPFPNS_17impl_integer__IntES2_E, .Lfunc_end1433-_ZN2kc9impl_path3mapEPFPNS_17impl_integer__IntES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9impl_path6filterEPFbPNS_17impl_integer__IntEE # -- Begin function _ZN2kc9impl_path6filterEPFbPNS_17impl_integer__IntEE
	.p2align	5
	.type	_ZN2kc9impl_path6filterEPFbPNS_17impl_integer__IntEE,@function
_ZN2kc9impl_path6filterEPFbPNS_17impl_integer__IntEE: # @_ZN2kc9impl_path6filterEPFbPNS_17impl_integer__IntEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 212
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1434_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1434_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1434:
	.size	_ZN2kc9impl_path6filterEPFbPNS_17impl_integer__IntEE, .Lfunc_end1434-_ZN2kc9impl_path6filterEPFbPNS_17impl_integer__IntEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9impl_path6appendEPNS_17impl_integer__IntE # -- Begin function _ZN2kc9impl_path6appendEPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc9impl_path6appendEPNS_17impl_integer__IntE,@function
_ZN2kc9impl_path6appendEPNS_17impl_integer__IntE: # @_ZN2kc9impl_path6appendEPNS_17impl_integer__IntE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc9impl_pathE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc9impl_pathE+16)
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 24
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 16
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1435_2
	.p2align	4, , 16
.LBB1435_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1435_1
.LBB1435_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1435:
	.size	_ZN2kc9impl_path6appendEPNS_17impl_integer__IntE, .Lfunc_end1435-_ZN2kc9impl_path6appendEPNS_17impl_integer__IntE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9impl_path5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E # -- Begin function _ZN2kc9impl_path5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E
	.p2align	5
	.type	_ZN2kc9impl_path5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E,@function
_ZN2kc9impl_path5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E: # @_ZN2kc9impl_path5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 212
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1436_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1436_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1436:
	.size	_ZN2kc9impl_path5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E, .Lfunc_end1436-_ZN2kc9impl_path5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc9impl_path6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E # -- Begin function _ZN2kc9impl_path6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc9impl_path6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E,@function
_ZN2kc9impl_path6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E: # @_ZN2kc9impl_path6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1437_2
# %bb.1:
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a2, $a1, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1437_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1437:
	.size	_ZN2kc9impl_path6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E, .Lfunc_end1437-_ZN2kc9impl_path6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_10impl_pathsES2_ # -- Begin function _ZN2kc6concatEPKNS_10impl_pathsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_10impl_pathsES2_,@function
_ZN2kc6concatEPKNS_10impl_pathsES2_:    # @_ZN2kc6concatEPKNS_10impl_pathsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 214
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1438_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_pathsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_pathsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1438_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1438:
	.size	_ZN2kc6concatEPKNS_10impl_pathsES2_, .Lfunc_end1438-_ZN2kc6concatEPKNS_10impl_pathsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_paths7reverseEv   # -- Begin function _ZNK2kc10impl_paths7reverseEv
	.p2align	5
	.type	_ZNK2kc10impl_paths7reverseEv,@function
_ZNK2kc10impl_paths7reverseEv:          # @_ZNK2kc10impl_paths7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_pathsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc10impl_pathsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1439_2
	.p2align	4, , 16
.LBB1439_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1439_1
	b	.LBB1439_3
.LBB1439_2:
	move	$s1, $s0
.LBB1439_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_pathsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc10impl_pathsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1439:
	.size	_ZNK2kc10impl_paths7reverseEv, .Lfunc_end1439-_ZNK2kc10impl_paths7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_paths4lastEv      # -- Begin function _ZNK2kc10impl_paths4lastEv
	.p2align	5
	.type	_ZNK2kc10impl_paths4lastEv,@function
_ZNK2kc10impl_paths4lastEv:             # @_ZNK2kc10impl_paths4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1440_5
	.p2align	4, , 16
.LBB1440_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1440_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1440_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1440_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1440_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1440:
	.size	_ZNK2kc10impl_paths4lastEv, .Lfunc_end1440-_ZNK2kc10impl_paths4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc10impl_paths6is_nilEv    # -- Begin function _ZNK2kc10impl_paths6is_nilEv
	.p2align	5
	.type	_ZNK2kc10impl_paths6is_nilEv,@function
_ZNK2kc10impl_paths6is_nilEv:           # @_ZNK2kc10impl_paths6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1441:
	.size	_ZNK2kc10impl_paths6is_nilEv, .Lfunc_end1441-_ZNK2kc10impl_paths6is_nilEv
                                        # -- End function
	.globl	_ZN2kc10impl_paths3mapEPFPNS_9impl_pathES2_E # -- Begin function _ZN2kc10impl_paths3mapEPFPNS_9impl_pathES2_E
	.p2align	5
	.type	_ZN2kc10impl_paths3mapEPFPNS_9impl_pathES2_E,@function
_ZN2kc10impl_paths3mapEPFPNS_9impl_pathES2_E: # @_ZN2kc10impl_paths3mapEPFPNS_9impl_pathES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 214
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1442_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_pathsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_pathsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1442_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1442:
	.size	_ZN2kc10impl_paths3mapEPFPNS_9impl_pathES2_E, .Lfunc_end1442-_ZN2kc10impl_paths3mapEPFPNS_9impl_pathES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_paths6filterEPFbPNS_9impl_pathEE # -- Begin function _ZN2kc10impl_paths6filterEPFbPNS_9impl_pathEE
	.p2align	5
	.type	_ZN2kc10impl_paths6filterEPFbPNS_9impl_pathEE,@function
_ZN2kc10impl_paths6filterEPFbPNS_9impl_pathEE: # @_ZN2kc10impl_paths6filterEPFbPNS_9impl_pathEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 214
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1443_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_pathsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_pathsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1443_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1443:
	.size	_ZN2kc10impl_paths6filterEPFbPNS_9impl_pathEE, .Lfunc_end1443-_ZN2kc10impl_paths6filterEPFbPNS_9impl_pathEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_paths6appendEPNS_9impl_pathE # -- Begin function _ZN2kc10impl_paths6appendEPNS_9impl_pathE
	.p2align	5
	.type	_ZN2kc10impl_paths6appendEPNS_9impl_pathE,@function
_ZN2kc10impl_paths6appendEPNS_9impl_pathE: # @_ZN2kc10impl_paths6appendEPNS_9impl_pathE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc10impl_pathsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc10impl_pathsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1444_2
	.p2align	4, , 16
.LBB1444_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1444_1
.LBB1444_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc10impl_pathsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc10impl_pathsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1444:
	.size	_ZN2kc10impl_paths6appendEPNS_9impl_pathE, .Lfunc_end1444-_ZN2kc10impl_paths6appendEPNS_9impl_pathE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_paths5mergeEPS0_PFPNS_9impl_pathES3_S3_E # -- Begin function _ZN2kc10impl_paths5mergeEPS0_PFPNS_9impl_pathES3_S3_E
	.p2align	5
	.type	_ZN2kc10impl_paths5mergeEPS0_PFPNS_9impl_pathES3_S3_E,@function
_ZN2kc10impl_paths5mergeEPS0_PFPNS_9impl_pathES3_S3_E: # @_ZN2kc10impl_paths5mergeEPS0_PFPNS_9impl_pathES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 214
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1445_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc10impl_pathsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc10impl_pathsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1445_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1445:
	.size	_ZN2kc10impl_paths5mergeEPS0_PFPNS_9impl_pathES3_S3_E, .Lfunc_end1445-_ZN2kc10impl_paths5mergeEPS0_PFPNS_9impl_pathES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_paths6reduceEPNS_9impl_pathEPFS2_S2_S2_E # -- Begin function _ZN2kc10impl_paths6reduceEPNS_9impl_pathEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc10impl_paths6reduceEPNS_9impl_pathEPFS2_S2_S2_E,@function
_ZN2kc10impl_paths6reduceEPNS_9impl_pathEPFS2_S2_S2_E: # @_ZN2kc10impl_paths6reduceEPNS_9impl_pathEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1446_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc9impl_pathE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc9impl_pathE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1446_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1446:
	.size	_ZN2kc10impl_paths6reduceEPNS_9impl_pathEPFS2_S2_S2_E, .Lfunc_end1446-_ZN2kc10impl_paths6reduceEPNS_9impl_pathEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_16impl_argsnumbersES2_ # -- Begin function _ZN2kc6concatEPKNS_16impl_argsnumbersES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_16impl_argsnumbersES2_,@function
_ZN2kc6concatEPKNS_16impl_argsnumbersES2_: # @_ZN2kc6concatEPKNS_16impl_argsnumbersES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 216
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1447_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_argsnumbersE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_argsnumbersE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1447_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1447:
	.size	_ZN2kc6concatEPKNS_16impl_argsnumbersES2_, .Lfunc_end1447-_ZN2kc6concatEPKNS_16impl_argsnumbersES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc16impl_argsnumbers7reverseEv # -- Begin function _ZNK2kc16impl_argsnumbers7reverseEv
	.p2align	5
	.type	_ZNK2kc16impl_argsnumbers7reverseEv,@function
_ZNK2kc16impl_argsnumbers7reverseEv:    # @_ZNK2kc16impl_argsnumbers7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc16impl_argsnumbersE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc16impl_argsnumbersE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1448_2
	.p2align	4, , 16
.LBB1448_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1448_1
	b	.LBB1448_3
.LBB1448_2:
	move	$s1, $s0
.LBB1448_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_argsnumbersE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc16impl_argsnumbersE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1448:
	.size	_ZNK2kc16impl_argsnumbers7reverseEv, .Lfunc_end1448-_ZNK2kc16impl_argsnumbers7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc16impl_argsnumbers4lastEv # -- Begin function _ZNK2kc16impl_argsnumbers4lastEv
	.p2align	5
	.type	_ZNK2kc16impl_argsnumbers4lastEv,@function
_ZNK2kc16impl_argsnumbers4lastEv:       # @_ZNK2kc16impl_argsnumbers4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1449_5
	.p2align	4, , 16
.LBB1449_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1449_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1449_4
# %bb.3:
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a2, $a1, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1449_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1449_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1449:
	.size	_ZNK2kc16impl_argsnumbers4lastEv, .Lfunc_end1449-_ZNK2kc16impl_argsnumbers4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc16impl_argsnumbers6is_nilEv # -- Begin function _ZNK2kc16impl_argsnumbers6is_nilEv
	.p2align	5
	.type	_ZNK2kc16impl_argsnumbers6is_nilEv,@function
_ZNK2kc16impl_argsnumbers6is_nilEv:     # @_ZNK2kc16impl_argsnumbers6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1450:
	.size	_ZNK2kc16impl_argsnumbers6is_nilEv, .Lfunc_end1450-_ZNK2kc16impl_argsnumbers6is_nilEv
                                        # -- End function
	.globl	_ZN2kc16impl_argsnumbers3mapEPFPNS_17impl_integer__IntES2_E # -- Begin function _ZN2kc16impl_argsnumbers3mapEPFPNS_17impl_integer__IntES2_E
	.p2align	5
	.type	_ZN2kc16impl_argsnumbers3mapEPFPNS_17impl_integer__IntES2_E,@function
_ZN2kc16impl_argsnumbers3mapEPFPNS_17impl_integer__IntES2_E: # @_ZN2kc16impl_argsnumbers3mapEPFPNS_17impl_integer__IntES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 216
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1451_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_argsnumbersE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_argsnumbersE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1451_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1451:
	.size	_ZN2kc16impl_argsnumbers3mapEPFPNS_17impl_integer__IntES2_E, .Lfunc_end1451-_ZN2kc16impl_argsnumbers3mapEPFPNS_17impl_integer__IntES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_argsnumbers6filterEPFbPNS_17impl_integer__IntEE # -- Begin function _ZN2kc16impl_argsnumbers6filterEPFbPNS_17impl_integer__IntEE
	.p2align	5
	.type	_ZN2kc16impl_argsnumbers6filterEPFbPNS_17impl_integer__IntEE,@function
_ZN2kc16impl_argsnumbers6filterEPFbPNS_17impl_integer__IntEE: # @_ZN2kc16impl_argsnumbers6filterEPFbPNS_17impl_integer__IntEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 216
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1452_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_argsnumbersE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_argsnumbersE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1452_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1452:
	.size	_ZN2kc16impl_argsnumbers6filterEPFbPNS_17impl_integer__IntEE, .Lfunc_end1452-_ZN2kc16impl_argsnumbers6filterEPFbPNS_17impl_integer__IntEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_argsnumbers6appendEPNS_17impl_integer__IntE # -- Begin function _ZN2kc16impl_argsnumbers6appendEPNS_17impl_integer__IntE
	.p2align	5
	.type	_ZN2kc16impl_argsnumbers6appendEPNS_17impl_integer__IntE,@function
_ZN2kc16impl_argsnumbers6appendEPNS_17impl_integer__IntE: # @_ZN2kc16impl_argsnumbers6appendEPNS_17impl_integer__IntE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc16impl_argsnumbersE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc16impl_argsnumbersE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1453_2
	.p2align	4, , 16
.LBB1453_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1453_1
.LBB1453_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc16impl_argsnumbersE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc16impl_argsnumbersE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1453:
	.size	_ZN2kc16impl_argsnumbers6appendEPNS_17impl_integer__IntE, .Lfunc_end1453-_ZN2kc16impl_argsnumbers6appendEPNS_17impl_integer__IntE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_argsnumbers5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E # -- Begin function _ZN2kc16impl_argsnumbers5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E
	.p2align	5
	.type	_ZN2kc16impl_argsnumbers5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E,@function
_ZN2kc16impl_argsnumbers5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E: # @_ZN2kc16impl_argsnumbers5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 216
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1454_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc16impl_argsnumbersE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc16impl_argsnumbersE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1454_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1454:
	.size	_ZN2kc16impl_argsnumbers5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E, .Lfunc_end1454-_ZN2kc16impl_argsnumbers5mergeEPS0_PFPNS_17impl_integer__IntES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_argsnumbers6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E # -- Begin function _ZN2kc16impl_argsnumbers6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc16impl_argsnumbers6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E,@function
_ZN2kc16impl_argsnumbers6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E: # @_ZN2kc16impl_argsnumbers6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1455_2
# %bb.1:
	pcalau12i	$a1, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a2, $a1, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1455_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1455:
	.size	_ZN2kc16impl_argsnumbers6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E, .Lfunc_end1455-_ZN2kc16impl_argsnumbers6reduceEPNS_17impl_integer__IntEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_21impl_rewriterulesinfoES2_ # -- Begin function _ZN2kc6concatEPKNS_21impl_rewriterulesinfoES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_21impl_rewriterulesinfoES2_,@function
_ZN2kc6concatEPKNS_21impl_rewriterulesinfoES2_: # @_ZN2kc6concatEPKNS_21impl_rewriterulesinfoES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 218
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1456_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_rewriterulesinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_rewriterulesinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1456_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1456:
	.size	_ZN2kc6concatEPKNS_21impl_rewriterulesinfoES2_, .Lfunc_end1456-_ZN2kc6concatEPKNS_21impl_rewriterulesinfoES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_rewriterulesinfo7reverseEv # -- Begin function _ZNK2kc21impl_rewriterulesinfo7reverseEv
	.p2align	5
	.type	_ZNK2kc21impl_rewriterulesinfo7reverseEv,@function
_ZNK2kc21impl_rewriterulesinfo7reverseEv: # @_ZNK2kc21impl_rewriterulesinfo7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc21impl_rewriterulesinfoE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc21impl_rewriterulesinfoE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1457_2
	.p2align	4, , 16
.LBB1457_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1457_1
	b	.LBB1457_3
.LBB1457_2:
	move	$s1, $s0
.LBB1457_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_rewriterulesinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc21impl_rewriterulesinfoE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1457:
	.size	_ZNK2kc21impl_rewriterulesinfo7reverseEv, .Lfunc_end1457-_ZNK2kc21impl_rewriterulesinfo7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_rewriterulesinfo4lastEv # -- Begin function _ZNK2kc21impl_rewriterulesinfo4lastEv
	.p2align	5
	.type	_ZNK2kc21impl_rewriterulesinfo4lastEv,@function
_ZNK2kc21impl_rewriterulesinfo4lastEv:  # @_ZNK2kc21impl_rewriterulesinfo4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1458_5
	.p2align	4, , 16
.LBB1458_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1458_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1458_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_rewriteruleinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_rewriteruleinfoE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1458_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1458_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1458:
	.size	_ZNK2kc21impl_rewriterulesinfo4lastEv, .Lfunc_end1458-_ZNK2kc21impl_rewriterulesinfo4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_rewriterulesinfo6is_nilEv # -- Begin function _ZNK2kc21impl_rewriterulesinfo6is_nilEv
	.p2align	5
	.type	_ZNK2kc21impl_rewriterulesinfo6is_nilEv,@function
_ZNK2kc21impl_rewriterulesinfo6is_nilEv: # @_ZNK2kc21impl_rewriterulesinfo6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1459:
	.size	_ZNK2kc21impl_rewriterulesinfo6is_nilEv, .Lfunc_end1459-_ZNK2kc21impl_rewriterulesinfo6is_nilEv
                                        # -- End function
	.globl	_ZN2kc21impl_rewriterulesinfo3mapEPFPNS_20impl_rewriteruleinfoES2_E # -- Begin function _ZN2kc21impl_rewriterulesinfo3mapEPFPNS_20impl_rewriteruleinfoES2_E
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfo3mapEPFPNS_20impl_rewriteruleinfoES2_E,@function
_ZN2kc21impl_rewriterulesinfo3mapEPFPNS_20impl_rewriteruleinfoES2_E: # @_ZN2kc21impl_rewriterulesinfo3mapEPFPNS_20impl_rewriteruleinfoES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 218
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1460_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_rewriterulesinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_rewriterulesinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1460_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1460:
	.size	_ZN2kc21impl_rewriterulesinfo3mapEPFPNS_20impl_rewriteruleinfoES2_E, .Lfunc_end1460-_ZN2kc21impl_rewriterulesinfo3mapEPFPNS_20impl_rewriteruleinfoES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriterulesinfo6filterEPFbPNS_20impl_rewriteruleinfoEE # -- Begin function _ZN2kc21impl_rewriterulesinfo6filterEPFbPNS_20impl_rewriteruleinfoEE
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfo6filterEPFbPNS_20impl_rewriteruleinfoEE,@function
_ZN2kc21impl_rewriterulesinfo6filterEPFbPNS_20impl_rewriteruleinfoEE: # @_ZN2kc21impl_rewriterulesinfo6filterEPFbPNS_20impl_rewriteruleinfoEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 218
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1461_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_rewriterulesinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_rewriterulesinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1461_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1461:
	.size	_ZN2kc21impl_rewriterulesinfo6filterEPFbPNS_20impl_rewriteruleinfoEE, .Lfunc_end1461-_ZN2kc21impl_rewriterulesinfo6filterEPFbPNS_20impl_rewriteruleinfoEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriterulesinfo6appendEPNS_20impl_rewriteruleinfoE # -- Begin function _ZN2kc21impl_rewriterulesinfo6appendEPNS_20impl_rewriteruleinfoE
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfo6appendEPNS_20impl_rewriteruleinfoE,@function
_ZN2kc21impl_rewriterulesinfo6appendEPNS_20impl_rewriteruleinfoE: # @_ZN2kc21impl_rewriterulesinfo6appendEPNS_20impl_rewriteruleinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc21impl_rewriterulesinfoE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc21impl_rewriterulesinfoE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1462_2
	.p2align	4, , 16
.LBB1462_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1462_1
.LBB1462_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_rewriterulesinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc21impl_rewriterulesinfoE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1462:
	.size	_ZN2kc21impl_rewriterulesinfo6appendEPNS_20impl_rewriteruleinfoE, .Lfunc_end1462-_ZN2kc21impl_rewriterulesinfo6appendEPNS_20impl_rewriteruleinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriterulesinfo5mergeEPS0_PFPNS_20impl_rewriteruleinfoES3_S3_E # -- Begin function _ZN2kc21impl_rewriterulesinfo5mergeEPS0_PFPNS_20impl_rewriteruleinfoES3_S3_E
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfo5mergeEPS0_PFPNS_20impl_rewriteruleinfoES3_S3_E,@function
_ZN2kc21impl_rewriterulesinfo5mergeEPS0_PFPNS_20impl_rewriteruleinfoES3_S3_E: # @_ZN2kc21impl_rewriterulesinfo5mergeEPS0_PFPNS_20impl_rewriteruleinfoES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 218
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1463_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_rewriterulesinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_rewriterulesinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1463_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1463:
	.size	_ZN2kc21impl_rewriterulesinfo5mergeEPS0_PFPNS_20impl_rewriteruleinfoES3_S3_E, .Lfunc_end1463-_ZN2kc21impl_rewriterulesinfo5mergeEPS0_PFPNS_20impl_rewriteruleinfoES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriterulesinfo6reduceEPNS_20impl_rewriteruleinfoEPFS2_S2_S2_E # -- Begin function _ZN2kc21impl_rewriterulesinfo6reduceEPNS_20impl_rewriteruleinfoEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfo6reduceEPNS_20impl_rewriteruleinfoEPFS2_S2_S2_E,@function
_ZN2kc21impl_rewriterulesinfo6reduceEPNS_20impl_rewriteruleinfoEPFS2_S2_S2_E: # @_ZN2kc21impl_rewriterulesinfo6reduceEPNS_20impl_rewriteruleinfoEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1464_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_rewriteruleinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_rewriteruleinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1464_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1464:
	.size	_ZN2kc21impl_rewriterulesinfo6reduceEPNS_20impl_rewriteruleinfoEPFS2_S2_S2_E, .Lfunc_end1464-_ZN2kc21impl_rewriterulesinfo6reduceEPNS_20impl_rewriteruleinfoEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_18impl_withcasesinfoES2_ # -- Begin function _ZN2kc6concatEPKNS_18impl_withcasesinfoES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_18impl_withcasesinfoES2_,@function
_ZN2kc6concatEPKNS_18impl_withcasesinfoES2_: # @_ZN2kc6concatEPKNS_18impl_withcasesinfoES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 221
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1465_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_withcasesinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_withcasesinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1465_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1465:
	.size	_ZN2kc6concatEPKNS_18impl_withcasesinfoES2_, .Lfunc_end1465-_ZN2kc6concatEPKNS_18impl_withcasesinfoES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_withcasesinfo7reverseEv # -- Begin function _ZNK2kc18impl_withcasesinfo7reverseEv
	.p2align	5
	.type	_ZNK2kc18impl_withcasesinfo7reverseEv,@function
_ZNK2kc18impl_withcasesinfo7reverseEv:  # @_ZNK2kc18impl_withcasesinfo7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_withcasesinfoE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc18impl_withcasesinfoE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1466_2
	.p2align	4, , 16
.LBB1466_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1466_1
	b	.LBB1466_3
.LBB1466_2:
	move	$s1, $s0
.LBB1466_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_withcasesinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_withcasesinfoE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1466:
	.size	_ZNK2kc18impl_withcasesinfo7reverseEv, .Lfunc_end1466-_ZNK2kc18impl_withcasesinfo7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_withcasesinfo4lastEv # -- Begin function _ZNK2kc18impl_withcasesinfo4lastEv
	.p2align	5
	.type	_ZNK2kc18impl_withcasesinfo4lastEv,@function
_ZNK2kc18impl_withcasesinfo4lastEv:     # @_ZNK2kc18impl_withcasesinfo4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1467_5
	.p2align	4, , 16
.LBB1467_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1467_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1467_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_withcaseinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_withcaseinfoE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1467_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1467_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1467:
	.size	_ZNK2kc18impl_withcasesinfo4lastEv, .Lfunc_end1467-_ZNK2kc18impl_withcasesinfo4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc18impl_withcasesinfo6is_nilEv # -- Begin function _ZNK2kc18impl_withcasesinfo6is_nilEv
	.p2align	5
	.type	_ZNK2kc18impl_withcasesinfo6is_nilEv,@function
_ZNK2kc18impl_withcasesinfo6is_nilEv:   # @_ZNK2kc18impl_withcasesinfo6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1468:
	.size	_ZNK2kc18impl_withcasesinfo6is_nilEv, .Lfunc_end1468-_ZNK2kc18impl_withcasesinfo6is_nilEv
                                        # -- End function
	.globl	_ZN2kc18impl_withcasesinfo3mapEPFPNS_17impl_withcaseinfoES2_E # -- Begin function _ZN2kc18impl_withcasesinfo3mapEPFPNS_17impl_withcaseinfoES2_E
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfo3mapEPFPNS_17impl_withcaseinfoES2_E,@function
_ZN2kc18impl_withcasesinfo3mapEPFPNS_17impl_withcaseinfoES2_E: # @_ZN2kc18impl_withcasesinfo3mapEPFPNS_17impl_withcaseinfoES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 221
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1469_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_withcasesinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_withcasesinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1469_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1469:
	.size	_ZN2kc18impl_withcasesinfo3mapEPFPNS_17impl_withcaseinfoES2_E, .Lfunc_end1469-_ZN2kc18impl_withcasesinfo3mapEPFPNS_17impl_withcaseinfoES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_withcasesinfo6filterEPFbPNS_17impl_withcaseinfoEE # -- Begin function _ZN2kc18impl_withcasesinfo6filterEPFbPNS_17impl_withcaseinfoEE
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfo6filterEPFbPNS_17impl_withcaseinfoEE,@function
_ZN2kc18impl_withcasesinfo6filterEPFbPNS_17impl_withcaseinfoEE: # @_ZN2kc18impl_withcasesinfo6filterEPFbPNS_17impl_withcaseinfoEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 221
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1470_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_withcasesinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_withcasesinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1470_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1470:
	.size	_ZN2kc18impl_withcasesinfo6filterEPFbPNS_17impl_withcaseinfoEE, .Lfunc_end1470-_ZN2kc18impl_withcasesinfo6filterEPFbPNS_17impl_withcaseinfoEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_withcasesinfo6appendEPNS_17impl_withcaseinfoE # -- Begin function _ZN2kc18impl_withcasesinfo6appendEPNS_17impl_withcaseinfoE
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfo6appendEPNS_17impl_withcaseinfoE,@function
_ZN2kc18impl_withcasesinfo6appendEPNS_17impl_withcaseinfoE: # @_ZN2kc18impl_withcasesinfo6appendEPNS_17impl_withcaseinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc18impl_withcasesinfoE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc18impl_withcasesinfoE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1471_2
	.p2align	4, , 16
.LBB1471_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1471_1
.LBB1471_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_withcasesinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc18impl_withcasesinfoE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1471:
	.size	_ZN2kc18impl_withcasesinfo6appendEPNS_17impl_withcaseinfoE, .Lfunc_end1471-_ZN2kc18impl_withcasesinfo6appendEPNS_17impl_withcaseinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_withcasesinfo5mergeEPS0_PFPNS_17impl_withcaseinfoES3_S3_E # -- Begin function _ZN2kc18impl_withcasesinfo5mergeEPS0_PFPNS_17impl_withcaseinfoES3_S3_E
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfo5mergeEPS0_PFPNS_17impl_withcaseinfoES3_S3_E,@function
_ZN2kc18impl_withcasesinfo5mergeEPS0_PFPNS_17impl_withcaseinfoES3_S3_E: # @_ZN2kc18impl_withcasesinfo5mergeEPS0_PFPNS_17impl_withcaseinfoES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 221
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1472_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_withcasesinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_withcasesinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1472_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1472:
	.size	_ZN2kc18impl_withcasesinfo5mergeEPS0_PFPNS_17impl_withcaseinfoES3_S3_E, .Lfunc_end1472-_ZN2kc18impl_withcasesinfo5mergeEPS0_PFPNS_17impl_withcaseinfoES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_withcasesinfo6reduceEPNS_17impl_withcaseinfoEPFS2_S2_S2_E # -- Begin function _ZN2kc18impl_withcasesinfo6reduceEPNS_17impl_withcaseinfoEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfo6reduceEPNS_17impl_withcaseinfoEPFS2_S2_S2_E,@function
_ZN2kc18impl_withcasesinfo6reduceEPNS_17impl_withcaseinfoEPFS2_S2_S2_E: # @_ZN2kc18impl_withcasesinfo6reduceEPNS_17impl_withcaseinfoEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1473_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_withcaseinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_withcaseinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1473_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1473:
	.size	_ZN2kc18impl_withcasesinfo6reduceEPNS_17impl_withcaseinfoEPFS2_S2_S2_E, .Lfunc_end1473-_ZN2kc18impl_withcasesinfo6reduceEPNS_17impl_withcaseinfoEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_21impl_rewriteviewsinfoES2_ # -- Begin function _ZN2kc6concatEPKNS_21impl_rewriteviewsinfoES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_21impl_rewriteviewsinfoES2_,@function
_ZN2kc6concatEPKNS_21impl_rewriteviewsinfoES2_: # @_ZN2kc6concatEPKNS_21impl_rewriteviewsinfoES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 224
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1474_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_rewriteviewsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_rewriteviewsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1474_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1474:
	.size	_ZN2kc6concatEPKNS_21impl_rewriteviewsinfoES2_, .Lfunc_end1474-_ZN2kc6concatEPKNS_21impl_rewriteviewsinfoES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_rewriteviewsinfo7reverseEv # -- Begin function _ZNK2kc21impl_rewriteviewsinfo7reverseEv
	.p2align	5
	.type	_ZNK2kc21impl_rewriteviewsinfo7reverseEv,@function
_ZNK2kc21impl_rewriteviewsinfo7reverseEv: # @_ZNK2kc21impl_rewriteviewsinfo7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1475_2
	.p2align	4, , 16
.LBB1475_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1475_1
	b	.LBB1475_3
.LBB1475_2:
	move	$s1, $s0
.LBB1475_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_rewriteviewsinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc21impl_rewriteviewsinfoE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1475:
	.size	_ZNK2kc21impl_rewriteviewsinfo7reverseEv, .Lfunc_end1475-_ZNK2kc21impl_rewriteviewsinfo7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_rewriteviewsinfo4lastEv # -- Begin function _ZNK2kc21impl_rewriteviewsinfo4lastEv
	.p2align	5
	.type	_ZNK2kc21impl_rewriteviewsinfo4lastEv,@function
_ZNK2kc21impl_rewriteviewsinfo4lastEv:  # @_ZNK2kc21impl_rewriteviewsinfo4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1476_5
	.p2align	4, , 16
.LBB1476_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1476_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1476_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_rewriteviewinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_rewriteviewinfoE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1476_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1476_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1476:
	.size	_ZNK2kc21impl_rewriteviewsinfo4lastEv, .Lfunc_end1476-_ZNK2kc21impl_rewriteviewsinfo4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_rewriteviewsinfo6is_nilEv # -- Begin function _ZNK2kc21impl_rewriteviewsinfo6is_nilEv
	.p2align	5
	.type	_ZNK2kc21impl_rewriteviewsinfo6is_nilEv,@function
_ZNK2kc21impl_rewriteviewsinfo6is_nilEv: # @_ZNK2kc21impl_rewriteviewsinfo6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1477:
	.size	_ZNK2kc21impl_rewriteviewsinfo6is_nilEv, .Lfunc_end1477-_ZNK2kc21impl_rewriteviewsinfo6is_nilEv
                                        # -- End function
	.globl	_ZN2kc21impl_rewriteviewsinfo3mapEPFPNS_20impl_rewriteviewinfoES2_E # -- Begin function _ZN2kc21impl_rewriteviewsinfo3mapEPFPNS_20impl_rewriteviewinfoES2_E
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfo3mapEPFPNS_20impl_rewriteviewinfoES2_E,@function
_ZN2kc21impl_rewriteviewsinfo3mapEPFPNS_20impl_rewriteviewinfoES2_E: # @_ZN2kc21impl_rewriteviewsinfo3mapEPFPNS_20impl_rewriteviewinfoES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 224
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1478_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_rewriteviewsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_rewriteviewsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1478_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1478:
	.size	_ZN2kc21impl_rewriteviewsinfo3mapEPFPNS_20impl_rewriteviewinfoES2_E, .Lfunc_end1478-_ZN2kc21impl_rewriteviewsinfo3mapEPFPNS_20impl_rewriteviewinfoES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriteviewsinfo6filterEPFbPNS_20impl_rewriteviewinfoEE # -- Begin function _ZN2kc21impl_rewriteviewsinfo6filterEPFbPNS_20impl_rewriteviewinfoEE
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfo6filterEPFbPNS_20impl_rewriteviewinfoEE,@function
_ZN2kc21impl_rewriteviewsinfo6filterEPFbPNS_20impl_rewriteviewinfoEE: # @_ZN2kc21impl_rewriteviewsinfo6filterEPFbPNS_20impl_rewriteviewinfoEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 224
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1479_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_rewriteviewsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_rewriteviewsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1479_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1479:
	.size	_ZN2kc21impl_rewriteviewsinfo6filterEPFbPNS_20impl_rewriteviewinfoEE, .Lfunc_end1479-_ZN2kc21impl_rewriteviewsinfo6filterEPFbPNS_20impl_rewriteviewinfoEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriteviewsinfo6appendEPNS_20impl_rewriteviewinfoE # -- Begin function _ZN2kc21impl_rewriteviewsinfo6appendEPNS_20impl_rewriteviewinfoE
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfo6appendEPNS_20impl_rewriteviewinfoE,@function
_ZN2kc21impl_rewriteviewsinfo6appendEPNS_20impl_rewriteviewinfoE: # @_ZN2kc21impl_rewriteviewsinfo6appendEPNS_20impl_rewriteviewinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc21impl_rewriteviewsinfoE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1480_2
	.p2align	4, , 16
.LBB1480_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1480_1
.LBB1480_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_rewriteviewsinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc21impl_rewriteviewsinfoE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1480:
	.size	_ZN2kc21impl_rewriteviewsinfo6appendEPNS_20impl_rewriteviewinfoE, .Lfunc_end1480-_ZN2kc21impl_rewriteviewsinfo6appendEPNS_20impl_rewriteviewinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriteviewsinfo5mergeEPS0_PFPNS_20impl_rewriteviewinfoES3_S3_E # -- Begin function _ZN2kc21impl_rewriteviewsinfo5mergeEPS0_PFPNS_20impl_rewriteviewinfoES3_S3_E
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfo5mergeEPS0_PFPNS_20impl_rewriteviewinfoES3_S3_E,@function
_ZN2kc21impl_rewriteviewsinfo5mergeEPS0_PFPNS_20impl_rewriteviewinfoES3_S3_E: # @_ZN2kc21impl_rewriteviewsinfo5mergeEPS0_PFPNS_20impl_rewriteviewinfoES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 224
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1481_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_rewriteviewsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_rewriteviewsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1481_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1481:
	.size	_ZN2kc21impl_rewriteviewsinfo5mergeEPS0_PFPNS_20impl_rewriteviewinfoES3_S3_E, .Lfunc_end1481-_ZN2kc21impl_rewriteviewsinfo5mergeEPS0_PFPNS_20impl_rewriteviewinfoES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriteviewsinfo6reduceEPNS_20impl_rewriteviewinfoEPFS2_S2_S2_E # -- Begin function _ZN2kc21impl_rewriteviewsinfo6reduceEPNS_20impl_rewriteviewinfoEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfo6reduceEPNS_20impl_rewriteviewinfoEPFS2_S2_S2_E,@function
_ZN2kc21impl_rewriteviewsinfo6reduceEPNS_20impl_rewriteviewinfoEPFS2_S2_S2_E: # @_ZN2kc21impl_rewriteviewsinfo6reduceEPNS_20impl_rewriteviewinfoEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1482_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_rewriteviewinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_rewriteviewinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1482_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1482:
	.size	_ZN2kc21impl_rewriteviewsinfo6reduceEPNS_20impl_rewriteviewinfoEPFS2_S2_S2_E, .Lfunc_end1482-_ZN2kc21impl_rewriteviewsinfo6reduceEPNS_20impl_rewriteviewinfoEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_21impl_unparseviewsinfoES2_ # -- Begin function _ZN2kc6concatEPKNS_21impl_unparseviewsinfoES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_21impl_unparseviewsinfoES2_,@function
_ZN2kc6concatEPKNS_21impl_unparseviewsinfoES2_: # @_ZN2kc6concatEPKNS_21impl_unparseviewsinfoES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 227
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1483_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_unparseviewsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_unparseviewsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1483_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1483:
	.size	_ZN2kc6concatEPKNS_21impl_unparseviewsinfoES2_, .Lfunc_end1483-_ZN2kc6concatEPKNS_21impl_unparseviewsinfoES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_unparseviewsinfo7reverseEv # -- Begin function _ZNK2kc21impl_unparseviewsinfo7reverseEv
	.p2align	5
	.type	_ZNK2kc21impl_unparseviewsinfo7reverseEv,@function
_ZNK2kc21impl_unparseviewsinfo7reverseEv: # @_ZNK2kc21impl_unparseviewsinfo7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc21impl_unparseviewsinfoE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc21impl_unparseviewsinfoE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1484_2
	.p2align	4, , 16
.LBB1484_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1484_1
	b	.LBB1484_3
.LBB1484_2:
	move	$s1, $s0
.LBB1484_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_unparseviewsinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc21impl_unparseviewsinfoE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1484:
	.size	_ZNK2kc21impl_unparseviewsinfo7reverseEv, .Lfunc_end1484-_ZNK2kc21impl_unparseviewsinfo7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_unparseviewsinfo4lastEv # -- Begin function _ZNK2kc21impl_unparseviewsinfo4lastEv
	.p2align	5
	.type	_ZNK2kc21impl_unparseviewsinfo4lastEv,@function
_ZNK2kc21impl_unparseviewsinfo4lastEv:  # @_ZNK2kc21impl_unparseviewsinfo4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1485_5
	.p2align	4, , 16
.LBB1485_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1485_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1485_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_unparseviewinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_unparseviewinfoE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1485_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1485_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1485:
	.size	_ZNK2kc21impl_unparseviewsinfo4lastEv, .Lfunc_end1485-_ZNK2kc21impl_unparseviewsinfo4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_unparseviewsinfo6is_nilEv # -- Begin function _ZNK2kc21impl_unparseviewsinfo6is_nilEv
	.p2align	5
	.type	_ZNK2kc21impl_unparseviewsinfo6is_nilEv,@function
_ZNK2kc21impl_unparseviewsinfo6is_nilEv: # @_ZNK2kc21impl_unparseviewsinfo6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1486:
	.size	_ZNK2kc21impl_unparseviewsinfo6is_nilEv, .Lfunc_end1486-_ZNK2kc21impl_unparseviewsinfo6is_nilEv
                                        # -- End function
	.globl	_ZN2kc21impl_unparseviewsinfo3mapEPFPNS_20impl_unparseviewinfoES2_E # -- Begin function _ZN2kc21impl_unparseviewsinfo3mapEPFPNS_20impl_unparseviewinfoES2_E
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfo3mapEPFPNS_20impl_unparseviewinfoES2_E,@function
_ZN2kc21impl_unparseviewsinfo3mapEPFPNS_20impl_unparseviewinfoES2_E: # @_ZN2kc21impl_unparseviewsinfo3mapEPFPNS_20impl_unparseviewinfoES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 227
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1487_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_unparseviewsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_unparseviewsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1487_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1487:
	.size	_ZN2kc21impl_unparseviewsinfo3mapEPFPNS_20impl_unparseviewinfoES2_E, .Lfunc_end1487-_ZN2kc21impl_unparseviewsinfo3mapEPFPNS_20impl_unparseviewinfoES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparseviewsinfo6filterEPFbPNS_20impl_unparseviewinfoEE # -- Begin function _ZN2kc21impl_unparseviewsinfo6filterEPFbPNS_20impl_unparseviewinfoEE
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfo6filterEPFbPNS_20impl_unparseviewinfoEE,@function
_ZN2kc21impl_unparseviewsinfo6filterEPFbPNS_20impl_unparseviewinfoEE: # @_ZN2kc21impl_unparseviewsinfo6filterEPFbPNS_20impl_unparseviewinfoEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 227
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1488_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_unparseviewsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_unparseviewsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1488_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1488:
	.size	_ZN2kc21impl_unparseviewsinfo6filterEPFbPNS_20impl_unparseviewinfoEE, .Lfunc_end1488-_ZN2kc21impl_unparseviewsinfo6filterEPFbPNS_20impl_unparseviewinfoEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparseviewsinfo6appendEPNS_20impl_unparseviewinfoE # -- Begin function _ZN2kc21impl_unparseviewsinfo6appendEPNS_20impl_unparseviewinfoE
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfo6appendEPNS_20impl_unparseviewinfoE,@function
_ZN2kc21impl_unparseviewsinfo6appendEPNS_20impl_unparseviewinfoE: # @_ZN2kc21impl_unparseviewsinfo6appendEPNS_20impl_unparseviewinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc21impl_unparseviewsinfoE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc21impl_unparseviewsinfoE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1489_2
	.p2align	4, , 16
.LBB1489_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1489_1
.LBB1489_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_unparseviewsinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc21impl_unparseviewsinfoE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1489:
	.size	_ZN2kc21impl_unparseviewsinfo6appendEPNS_20impl_unparseviewinfoE, .Lfunc_end1489-_ZN2kc21impl_unparseviewsinfo6appendEPNS_20impl_unparseviewinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparseviewsinfo5mergeEPS0_PFPNS_20impl_unparseviewinfoES3_S3_E # -- Begin function _ZN2kc21impl_unparseviewsinfo5mergeEPS0_PFPNS_20impl_unparseviewinfoES3_S3_E
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfo5mergeEPS0_PFPNS_20impl_unparseviewinfoES3_S3_E,@function
_ZN2kc21impl_unparseviewsinfo5mergeEPS0_PFPNS_20impl_unparseviewinfoES3_S3_E: # @_ZN2kc21impl_unparseviewsinfo5mergeEPS0_PFPNS_20impl_unparseviewinfoES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 227
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1490_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_unparseviewsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_unparseviewsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1490_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1490:
	.size	_ZN2kc21impl_unparseviewsinfo5mergeEPS0_PFPNS_20impl_unparseviewinfoES3_S3_E, .Lfunc_end1490-_ZN2kc21impl_unparseviewsinfo5mergeEPS0_PFPNS_20impl_unparseviewinfoES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparseviewsinfo6reduceEPNS_20impl_unparseviewinfoEPFS2_S2_S2_E # -- Begin function _ZN2kc21impl_unparseviewsinfo6reduceEPNS_20impl_unparseviewinfoEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfo6reduceEPNS_20impl_unparseviewinfoEPFS2_S2_S2_E,@function
_ZN2kc21impl_unparseviewsinfo6reduceEPNS_20impl_unparseviewinfoEPFS2_S2_S2_E: # @_ZN2kc21impl_unparseviewsinfo6reduceEPNS_20impl_unparseviewinfoEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1491_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_unparseviewinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_unparseviewinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1491_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1491:
	.size	_ZN2kc21impl_unparseviewsinfo6reduceEPNS_20impl_unparseviewinfoEPFS2_S2_S2_E, .Lfunc_end1491-_ZN2kc21impl_unparseviewsinfo6reduceEPNS_20impl_unparseviewinfoEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_21impl_unparsedeclsinfoES2_ # -- Begin function _ZN2kc6concatEPKNS_21impl_unparsedeclsinfoES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_21impl_unparsedeclsinfoES2_,@function
_ZN2kc6concatEPKNS_21impl_unparsedeclsinfoES2_: # @_ZN2kc6concatEPKNS_21impl_unparsedeclsinfoES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 230
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1492_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_unparsedeclsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_unparsedeclsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1492_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1492:
	.size	_ZN2kc6concatEPKNS_21impl_unparsedeclsinfoES2_, .Lfunc_end1492-_ZN2kc6concatEPKNS_21impl_unparsedeclsinfoES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_unparsedeclsinfo7reverseEv # -- Begin function _ZNK2kc21impl_unparsedeclsinfo7reverseEv
	.p2align	5
	.type	_ZNK2kc21impl_unparsedeclsinfo7reverseEv,@function
_ZNK2kc21impl_unparsedeclsinfo7reverseEv: # @_ZNK2kc21impl_unparsedeclsinfo7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1493_2
	.p2align	4, , 16
.LBB1493_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1493_1
	b	.LBB1493_3
.LBB1493_2:
	move	$s1, $s0
.LBB1493_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_unparsedeclsinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc21impl_unparsedeclsinfoE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1493:
	.size	_ZNK2kc21impl_unparsedeclsinfo7reverseEv, .Lfunc_end1493-_ZNK2kc21impl_unparsedeclsinfo7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_unparsedeclsinfo4lastEv # -- Begin function _ZNK2kc21impl_unparsedeclsinfo4lastEv
	.p2align	5
	.type	_ZNK2kc21impl_unparsedeclsinfo4lastEv,@function
_ZNK2kc21impl_unparsedeclsinfo4lastEv:  # @_ZNK2kc21impl_unparsedeclsinfo4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1494_5
	.p2align	4, , 16
.LBB1494_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1494_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1494_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_unparsedeclinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_unparsedeclinfoE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1494_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1494_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1494:
	.size	_ZNK2kc21impl_unparsedeclsinfo4lastEv, .Lfunc_end1494-_ZNK2kc21impl_unparsedeclsinfo4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc21impl_unparsedeclsinfo6is_nilEv # -- Begin function _ZNK2kc21impl_unparsedeclsinfo6is_nilEv
	.p2align	5
	.type	_ZNK2kc21impl_unparsedeclsinfo6is_nilEv,@function
_ZNK2kc21impl_unparsedeclsinfo6is_nilEv: # @_ZNK2kc21impl_unparsedeclsinfo6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1495:
	.size	_ZNK2kc21impl_unparsedeclsinfo6is_nilEv, .Lfunc_end1495-_ZNK2kc21impl_unparsedeclsinfo6is_nilEv
                                        # -- End function
	.globl	_ZN2kc21impl_unparsedeclsinfo3mapEPFPNS_20impl_unparsedeclinfoES2_E # -- Begin function _ZN2kc21impl_unparsedeclsinfo3mapEPFPNS_20impl_unparsedeclinfoES2_E
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfo3mapEPFPNS_20impl_unparsedeclinfoES2_E,@function
_ZN2kc21impl_unparsedeclsinfo3mapEPFPNS_20impl_unparsedeclinfoES2_E: # @_ZN2kc21impl_unparsedeclsinfo3mapEPFPNS_20impl_unparsedeclinfoES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 230
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1496_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_unparsedeclsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_unparsedeclsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1496_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1496:
	.size	_ZN2kc21impl_unparsedeclsinfo3mapEPFPNS_20impl_unparsedeclinfoES2_E, .Lfunc_end1496-_ZN2kc21impl_unparsedeclsinfo3mapEPFPNS_20impl_unparsedeclinfoES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparsedeclsinfo6filterEPFbPNS_20impl_unparsedeclinfoEE # -- Begin function _ZN2kc21impl_unparsedeclsinfo6filterEPFbPNS_20impl_unparsedeclinfoEE
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfo6filterEPFbPNS_20impl_unparsedeclinfoEE,@function
_ZN2kc21impl_unparsedeclsinfo6filterEPFbPNS_20impl_unparsedeclinfoEE: # @_ZN2kc21impl_unparsedeclsinfo6filterEPFbPNS_20impl_unparsedeclinfoEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 230
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1497_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_unparsedeclsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_unparsedeclsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1497_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1497:
	.size	_ZN2kc21impl_unparsedeclsinfo6filterEPFbPNS_20impl_unparsedeclinfoEE, .Lfunc_end1497-_ZN2kc21impl_unparsedeclsinfo6filterEPFbPNS_20impl_unparsedeclinfoEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparsedeclsinfo6appendEPNS_20impl_unparsedeclinfoE # -- Begin function _ZN2kc21impl_unparsedeclsinfo6appendEPNS_20impl_unparsedeclinfoE
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfo6appendEPNS_20impl_unparsedeclinfoE,@function
_ZN2kc21impl_unparsedeclsinfo6appendEPNS_20impl_unparsedeclinfoE: # @_ZN2kc21impl_unparsedeclsinfo6appendEPNS_20impl_unparsedeclinfoE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc21impl_unparsedeclsinfoE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1498_2
	.p2align	4, , 16
.LBB1498_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1498_1
.LBB1498_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc21impl_unparsedeclsinfoE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc21impl_unparsedeclsinfoE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1498:
	.size	_ZN2kc21impl_unparsedeclsinfo6appendEPNS_20impl_unparsedeclinfoE, .Lfunc_end1498-_ZN2kc21impl_unparsedeclsinfo6appendEPNS_20impl_unparsedeclinfoE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparsedeclsinfo5mergeEPS0_PFPNS_20impl_unparsedeclinfoES3_S3_E # -- Begin function _ZN2kc21impl_unparsedeclsinfo5mergeEPS0_PFPNS_20impl_unparsedeclinfoES3_S3_E
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfo5mergeEPS0_PFPNS_20impl_unparsedeclinfoES3_S3_E,@function
_ZN2kc21impl_unparsedeclsinfo5mergeEPS0_PFPNS_20impl_unparsedeclinfoES3_S3_E: # @_ZN2kc21impl_unparsedeclsinfo5mergeEPS0_PFPNS_20impl_unparsedeclinfoES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 230
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1499_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc21impl_unparsedeclsinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc21impl_unparsedeclsinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1499_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1499:
	.size	_ZN2kc21impl_unparsedeclsinfo5mergeEPS0_PFPNS_20impl_unparsedeclinfoES3_S3_E, .Lfunc_end1499-_ZN2kc21impl_unparsedeclsinfo5mergeEPS0_PFPNS_20impl_unparsedeclinfoES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparsedeclsinfo6reduceEPNS_20impl_unparsedeclinfoEPFS2_S2_S2_E # -- Begin function _ZN2kc21impl_unparsedeclsinfo6reduceEPNS_20impl_unparsedeclinfoEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfo6reduceEPNS_20impl_unparsedeclinfoEPFS2_S2_S2_E,@function
_ZN2kc21impl_unparsedeclsinfo6reduceEPNS_20impl_unparsedeclinfoEPFS2_S2_S2_E: # @_ZN2kc21impl_unparsedeclsinfo6reduceEPNS_20impl_unparsedeclinfoEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1500_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc20impl_unparsedeclinfoE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc20impl_unparsedeclinfoE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1500_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1500:
	.size	_ZN2kc21impl_unparsedeclsinfo6reduceEPNS_20impl_unparsedeclinfoEPFS2_S2_S2_E, .Lfunc_end1500-_ZN2kc21impl_unparsedeclsinfo6reduceEPNS_20impl_unparsedeclinfoEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_24impl_ac_declaration_listES2_ # -- Begin function _ZN2kc6concatEPKNS_24impl_ac_declaration_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_24impl_ac_declaration_listES2_,@function
_ZN2kc6concatEPKNS_24impl_ac_declaration_listES2_: # @_ZN2kc6concatEPKNS_24impl_ac_declaration_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 234
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1501_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_ac_declaration_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_ac_declaration_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1501_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1501:
	.size	_ZN2kc6concatEPKNS_24impl_ac_declaration_listES2_, .Lfunc_end1501-_ZN2kc6concatEPKNS_24impl_ac_declaration_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc24impl_ac_declaration_list7reverseEv # -- Begin function _ZNK2kc24impl_ac_declaration_list7reverseEv
	.p2align	5
	.type	_ZNK2kc24impl_ac_declaration_list7reverseEv,@function
_ZNK2kc24impl_ac_declaration_list7reverseEv: # @_ZNK2kc24impl_ac_declaration_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc24impl_ac_declaration_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc24impl_ac_declaration_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1502_2
	.p2align	4, , 16
.LBB1502_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1502_1
	b	.LBB1502_3
.LBB1502_2:
	move	$s1, $s0
.LBB1502_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_ac_declaration_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc24impl_ac_declaration_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1502:
	.size	_ZNK2kc24impl_ac_declaration_list7reverseEv, .Lfunc_end1502-_ZNK2kc24impl_ac_declaration_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc24impl_ac_declaration_list4lastEv # -- Begin function _ZNK2kc24impl_ac_declaration_list4lastEv
	.p2align	5
	.type	_ZNK2kc24impl_ac_declaration_list4lastEv,@function
_ZNK2kc24impl_ac_declaration_list4lastEv: # @_ZNK2kc24impl_ac_declaration_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1503_5
	.p2align	4, , 16
.LBB1503_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1503_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1503_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_ac_declarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_ac_declarationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1503_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1503_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1503:
	.size	_ZNK2kc24impl_ac_declaration_list4lastEv, .Lfunc_end1503-_ZNK2kc24impl_ac_declaration_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc24impl_ac_declaration_list6is_nilEv # -- Begin function _ZNK2kc24impl_ac_declaration_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc24impl_ac_declaration_list6is_nilEv,@function
_ZNK2kc24impl_ac_declaration_list6is_nilEv: # @_ZNK2kc24impl_ac_declaration_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1504:
	.size	_ZNK2kc24impl_ac_declaration_list6is_nilEv, .Lfunc_end1504-_ZNK2kc24impl_ac_declaration_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc24impl_ac_declaration_list3mapEPFPNS_19impl_ac_declarationES2_E # -- Begin function _ZN2kc24impl_ac_declaration_list3mapEPFPNS_19impl_ac_declarationES2_E
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_list3mapEPFPNS_19impl_ac_declarationES2_E,@function
_ZN2kc24impl_ac_declaration_list3mapEPFPNS_19impl_ac_declarationES2_E: # @_ZN2kc24impl_ac_declaration_list3mapEPFPNS_19impl_ac_declarationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 234
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1505_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_ac_declaration_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_ac_declaration_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1505_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1505:
	.size	_ZN2kc24impl_ac_declaration_list3mapEPFPNS_19impl_ac_declarationES2_E, .Lfunc_end1505-_ZN2kc24impl_ac_declaration_list3mapEPFPNS_19impl_ac_declarationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_ac_declaration_list6filterEPFbPNS_19impl_ac_declarationEE # -- Begin function _ZN2kc24impl_ac_declaration_list6filterEPFbPNS_19impl_ac_declarationEE
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_list6filterEPFbPNS_19impl_ac_declarationEE,@function
_ZN2kc24impl_ac_declaration_list6filterEPFbPNS_19impl_ac_declarationEE: # @_ZN2kc24impl_ac_declaration_list6filterEPFbPNS_19impl_ac_declarationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 234
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1506_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_ac_declaration_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_ac_declaration_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1506_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1506:
	.size	_ZN2kc24impl_ac_declaration_list6filterEPFbPNS_19impl_ac_declarationEE, .Lfunc_end1506-_ZN2kc24impl_ac_declaration_list6filterEPFbPNS_19impl_ac_declarationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_ac_declaration_list6appendEPNS_19impl_ac_declarationE # -- Begin function _ZN2kc24impl_ac_declaration_list6appendEPNS_19impl_ac_declarationE
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_list6appendEPNS_19impl_ac_declarationE,@function
_ZN2kc24impl_ac_declaration_list6appendEPNS_19impl_ac_declarationE: # @_ZN2kc24impl_ac_declaration_list6appendEPNS_19impl_ac_declarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc24impl_ac_declaration_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc24impl_ac_declaration_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1507_2
	.p2align	4, , 16
.LBB1507_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1507_1
.LBB1507_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc24impl_ac_declaration_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc24impl_ac_declaration_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1507:
	.size	_ZN2kc24impl_ac_declaration_list6appendEPNS_19impl_ac_declarationE, .Lfunc_end1507-_ZN2kc24impl_ac_declaration_list6appendEPNS_19impl_ac_declarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_ac_declaration_list5mergeEPS0_PFPNS_19impl_ac_declarationES3_S3_E # -- Begin function _ZN2kc24impl_ac_declaration_list5mergeEPS0_PFPNS_19impl_ac_declarationES3_S3_E
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_list5mergeEPS0_PFPNS_19impl_ac_declarationES3_S3_E,@function
_ZN2kc24impl_ac_declaration_list5mergeEPS0_PFPNS_19impl_ac_declarationES3_S3_E: # @_ZN2kc24impl_ac_declaration_list5mergeEPS0_PFPNS_19impl_ac_declarationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 234
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1508_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc24impl_ac_declaration_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc24impl_ac_declaration_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1508_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1508:
	.size	_ZN2kc24impl_ac_declaration_list5mergeEPS0_PFPNS_19impl_ac_declarationES3_S3_E, .Lfunc_end1508-_ZN2kc24impl_ac_declaration_list5mergeEPS0_PFPNS_19impl_ac_declarationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_ac_declaration_list6reduceEPNS_19impl_ac_declarationEPFS2_S2_S2_E # -- Begin function _ZN2kc24impl_ac_declaration_list6reduceEPNS_19impl_ac_declarationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_list6reduceEPNS_19impl_ac_declarationEPFS2_S2_S2_E,@function
_ZN2kc24impl_ac_declaration_list6reduceEPNS_19impl_ac_declarationEPFS2_S2_S2_E: # @_ZN2kc24impl_ac_declaration_list6reduceEPNS_19impl_ac_declarationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1509_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_ac_declarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_ac_declarationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1509_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1509:
	.size	_ZN2kc24impl_ac_declaration_list6reduceEPNS_19impl_ac_declarationEPFS2_S2_S2_E, .Lfunc_end1509-_ZN2kc24impl_ac_declaration_list6reduceEPNS_19impl_ac_declarationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_30impl_ac_declaration_specifiersES2_ # -- Begin function _ZN2kc6concatEPKNS_30impl_ac_declaration_specifiersES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_30impl_ac_declaration_specifiersES2_,@function
_ZN2kc6concatEPKNS_30impl_ac_declaration_specifiersES2_: # @_ZN2kc6concatEPKNS_30impl_ac_declaration_specifiersES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 236
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1510_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1510_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1510:
	.size	_ZN2kc6concatEPKNS_30impl_ac_declaration_specifiersES2_, .Lfunc_end1510-_ZN2kc6concatEPKNS_30impl_ac_declaration_specifiersES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc30impl_ac_declaration_specifiers7reverseEv # -- Begin function _ZNK2kc30impl_ac_declaration_specifiers7reverseEv
	.p2align	5
	.type	_ZNK2kc30impl_ac_declaration_specifiers7reverseEv,@function
_ZNK2kc30impl_ac_declaration_specifiers7reverseEv: # @_ZNK2kc30impl_ac_declaration_specifiers7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1511_2
	.p2align	4, , 16
.LBB1511_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1511_1
	b	.LBB1511_3
.LBB1511_2:
	move	$s1, $s0
.LBB1511_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1511:
	.size	_ZNK2kc30impl_ac_declaration_specifiers7reverseEv, .Lfunc_end1511-_ZNK2kc30impl_ac_declaration_specifiers7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc30impl_ac_declaration_specifiers4lastEv # -- Begin function _ZNK2kc30impl_ac_declaration_specifiers4lastEv
	.p2align	5
	.type	_ZNK2kc30impl_ac_declaration_specifiers4lastEv,@function
_ZNK2kc30impl_ac_declaration_specifiers4lastEv: # @_ZNK2kc30impl_ac_declaration_specifiers4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1512_5
	.p2align	4, , 16
.LBB1512_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1512_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1512_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc29impl_ac_declaration_specifierE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc29impl_ac_declaration_specifierE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1512_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1512_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1512:
	.size	_ZNK2kc30impl_ac_declaration_specifiers4lastEv, .Lfunc_end1512-_ZNK2kc30impl_ac_declaration_specifiers4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc30impl_ac_declaration_specifiers6is_nilEv # -- Begin function _ZNK2kc30impl_ac_declaration_specifiers6is_nilEv
	.p2align	5
	.type	_ZNK2kc30impl_ac_declaration_specifiers6is_nilEv,@function
_ZNK2kc30impl_ac_declaration_specifiers6is_nilEv: # @_ZNK2kc30impl_ac_declaration_specifiers6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1513:
	.size	_ZNK2kc30impl_ac_declaration_specifiers6is_nilEv, .Lfunc_end1513-_ZNK2kc30impl_ac_declaration_specifiers6is_nilEv
                                        # -- End function
	.globl	_ZN2kc30impl_ac_declaration_specifiers3mapEPFPNS_29impl_ac_declaration_specifierES2_E # -- Begin function _ZN2kc30impl_ac_declaration_specifiers3mapEPFPNS_29impl_ac_declaration_specifierES2_E
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiers3mapEPFPNS_29impl_ac_declaration_specifierES2_E,@function
_ZN2kc30impl_ac_declaration_specifiers3mapEPFPNS_29impl_ac_declaration_specifierES2_E: # @_ZN2kc30impl_ac_declaration_specifiers3mapEPFPNS_29impl_ac_declaration_specifierES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 236
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1514_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1514_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1514:
	.size	_ZN2kc30impl_ac_declaration_specifiers3mapEPFPNS_29impl_ac_declaration_specifierES2_E, .Lfunc_end1514-_ZN2kc30impl_ac_declaration_specifiers3mapEPFPNS_29impl_ac_declaration_specifierES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_ac_declaration_specifiers6filterEPFbPNS_29impl_ac_declaration_specifierEE # -- Begin function _ZN2kc30impl_ac_declaration_specifiers6filterEPFbPNS_29impl_ac_declaration_specifierEE
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiers6filterEPFbPNS_29impl_ac_declaration_specifierEE,@function
_ZN2kc30impl_ac_declaration_specifiers6filterEPFbPNS_29impl_ac_declaration_specifierEE: # @_ZN2kc30impl_ac_declaration_specifiers6filterEPFbPNS_29impl_ac_declaration_specifierEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 236
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1515_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1515_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1515:
	.size	_ZN2kc30impl_ac_declaration_specifiers6filterEPFbPNS_29impl_ac_declaration_specifierEE, .Lfunc_end1515-_ZN2kc30impl_ac_declaration_specifiers6filterEPFbPNS_29impl_ac_declaration_specifierEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_ac_declaration_specifiers6appendEPNS_29impl_ac_declaration_specifierE # -- Begin function _ZN2kc30impl_ac_declaration_specifiers6appendEPNS_29impl_ac_declaration_specifierE
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiers6appendEPNS_29impl_ac_declaration_specifierE,@function
_ZN2kc30impl_ac_declaration_specifiers6appendEPNS_29impl_ac_declaration_specifierE: # @_ZN2kc30impl_ac_declaration_specifiers6appendEPNS_29impl_ac_declaration_specifierE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc30impl_ac_declaration_specifiersE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1516_2
	.p2align	4, , 16
.LBB1516_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1516_1
.LBB1516_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1516:
	.size	_ZN2kc30impl_ac_declaration_specifiers6appendEPNS_29impl_ac_declaration_specifierE, .Lfunc_end1516-_ZN2kc30impl_ac_declaration_specifiers6appendEPNS_29impl_ac_declaration_specifierE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_ac_declaration_specifiers5mergeEPS0_PFPNS_29impl_ac_declaration_specifierES3_S3_E # -- Begin function _ZN2kc30impl_ac_declaration_specifiers5mergeEPS0_PFPNS_29impl_ac_declaration_specifierES3_S3_E
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiers5mergeEPS0_PFPNS_29impl_ac_declaration_specifierES3_S3_E,@function
_ZN2kc30impl_ac_declaration_specifiers5mergeEPS0_PFPNS_29impl_ac_declaration_specifierES3_S3_E: # @_ZN2kc30impl_ac_declaration_specifiers5mergeEPS0_PFPNS_29impl_ac_declaration_specifierES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 236
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1517_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc30impl_ac_declaration_specifiersE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc30impl_ac_declaration_specifiersE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1517_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1517:
	.size	_ZN2kc30impl_ac_declaration_specifiers5mergeEPS0_PFPNS_29impl_ac_declaration_specifierES3_S3_E, .Lfunc_end1517-_ZN2kc30impl_ac_declaration_specifiers5mergeEPS0_PFPNS_29impl_ac_declaration_specifierES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_ac_declaration_specifiers6reduceEPNS_29impl_ac_declaration_specifierEPFS2_S2_S2_E # -- Begin function _ZN2kc30impl_ac_declaration_specifiers6reduceEPNS_29impl_ac_declaration_specifierEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiers6reduceEPNS_29impl_ac_declaration_specifierEPFS2_S2_S2_E,@function
_ZN2kc30impl_ac_declaration_specifiers6reduceEPNS_29impl_ac_declaration_specifierEPFS2_S2_S2_E: # @_ZN2kc30impl_ac_declaration_specifiers6reduceEPNS_29impl_ac_declaration_specifierEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1518_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc29impl_ac_declaration_specifierE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc29impl_ac_declaration_specifierE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1518_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1518:
	.size	_ZN2kc30impl_ac_declaration_specifiers6reduceEPNS_29impl_ac_declaration_specifierEPFS2_S2_S2_E, .Lfunc_end1518-_ZN2kc30impl_ac_declaration_specifiers6reduceEPNS_29impl_ac_declaration_specifierEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_28impl_ac_init_declarator_listES2_ # -- Begin function _ZN2kc6concatEPKNS_28impl_ac_init_declarator_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_28impl_ac_init_declarator_listES2_,@function
_ZN2kc6concatEPKNS_28impl_ac_init_declarator_listES2_: # @_ZN2kc6concatEPKNS_28impl_ac_init_declarator_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 252
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1519_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_ac_init_declarator_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_ac_init_declarator_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1519_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1519:
	.size	_ZN2kc6concatEPKNS_28impl_ac_init_declarator_listES2_, .Lfunc_end1519-_ZN2kc6concatEPKNS_28impl_ac_init_declarator_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_init_declarator_list7reverseEv # -- Begin function _ZNK2kc28impl_ac_init_declarator_list7reverseEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_init_declarator_list7reverseEv,@function
_ZNK2kc28impl_ac_init_declarator_list7reverseEv: # @_ZNK2kc28impl_ac_init_declarator_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1520_2
	.p2align	4, , 16
.LBB1520_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1520_1
	b	.LBB1520_3
.LBB1520_2:
	move	$s1, $s0
.LBB1520_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_ac_init_declarator_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc28impl_ac_init_declarator_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1520:
	.size	_ZNK2kc28impl_ac_init_declarator_list7reverseEv, .Lfunc_end1520-_ZNK2kc28impl_ac_init_declarator_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_init_declarator_list4lastEv # -- Begin function _ZNK2kc28impl_ac_init_declarator_list4lastEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_init_declarator_list4lastEv,@function
_ZNK2kc28impl_ac_init_declarator_list4lastEv: # @_ZNK2kc28impl_ac_init_declarator_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1521_5
	.p2align	4, , 16
.LBB1521_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1521_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1521_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_ac_init_declaratorE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_ac_init_declaratorE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1521_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1521_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1521:
	.size	_ZNK2kc28impl_ac_init_declarator_list4lastEv, .Lfunc_end1521-_ZNK2kc28impl_ac_init_declarator_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_init_declarator_list6is_nilEv # -- Begin function _ZNK2kc28impl_ac_init_declarator_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_init_declarator_list6is_nilEv,@function
_ZNK2kc28impl_ac_init_declarator_list6is_nilEv: # @_ZNK2kc28impl_ac_init_declarator_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1522:
	.size	_ZNK2kc28impl_ac_init_declarator_list6is_nilEv, .Lfunc_end1522-_ZNK2kc28impl_ac_init_declarator_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc28impl_ac_init_declarator_list3mapEPFPNS_23impl_ac_init_declaratorES2_E # -- Begin function _ZN2kc28impl_ac_init_declarator_list3mapEPFPNS_23impl_ac_init_declaratorES2_E
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_list3mapEPFPNS_23impl_ac_init_declaratorES2_E,@function
_ZN2kc28impl_ac_init_declarator_list3mapEPFPNS_23impl_ac_init_declaratorES2_E: # @_ZN2kc28impl_ac_init_declarator_list3mapEPFPNS_23impl_ac_init_declaratorES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 252
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1523_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_ac_init_declarator_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_ac_init_declarator_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1523_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1523:
	.size	_ZN2kc28impl_ac_init_declarator_list3mapEPFPNS_23impl_ac_init_declaratorES2_E, .Lfunc_end1523-_ZN2kc28impl_ac_init_declarator_list3mapEPFPNS_23impl_ac_init_declaratorES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_init_declarator_list6filterEPFbPNS_23impl_ac_init_declaratorEE # -- Begin function _ZN2kc28impl_ac_init_declarator_list6filterEPFbPNS_23impl_ac_init_declaratorEE
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_list6filterEPFbPNS_23impl_ac_init_declaratorEE,@function
_ZN2kc28impl_ac_init_declarator_list6filterEPFbPNS_23impl_ac_init_declaratorEE: # @_ZN2kc28impl_ac_init_declarator_list6filterEPFbPNS_23impl_ac_init_declaratorEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 252
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1524_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_ac_init_declarator_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_ac_init_declarator_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1524_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1524:
	.size	_ZN2kc28impl_ac_init_declarator_list6filterEPFbPNS_23impl_ac_init_declaratorEE, .Lfunc_end1524-_ZN2kc28impl_ac_init_declarator_list6filterEPFbPNS_23impl_ac_init_declaratorEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_init_declarator_list6appendEPNS_23impl_ac_init_declaratorE # -- Begin function _ZN2kc28impl_ac_init_declarator_list6appendEPNS_23impl_ac_init_declaratorE
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_list6appendEPNS_23impl_ac_init_declaratorE,@function
_ZN2kc28impl_ac_init_declarator_list6appendEPNS_23impl_ac_init_declaratorE: # @_ZN2kc28impl_ac_init_declarator_list6appendEPNS_23impl_ac_init_declaratorE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc28impl_ac_init_declarator_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1525_2
	.p2align	4, , 16
.LBB1525_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1525_1
.LBB1525_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_ac_init_declarator_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc28impl_ac_init_declarator_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1525:
	.size	_ZN2kc28impl_ac_init_declarator_list6appendEPNS_23impl_ac_init_declaratorE, .Lfunc_end1525-_ZN2kc28impl_ac_init_declarator_list6appendEPNS_23impl_ac_init_declaratorE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_init_declarator_list5mergeEPS0_PFPNS_23impl_ac_init_declaratorES3_S3_E # -- Begin function _ZN2kc28impl_ac_init_declarator_list5mergeEPS0_PFPNS_23impl_ac_init_declaratorES3_S3_E
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_list5mergeEPS0_PFPNS_23impl_ac_init_declaratorES3_S3_E,@function
_ZN2kc28impl_ac_init_declarator_list5mergeEPS0_PFPNS_23impl_ac_init_declaratorES3_S3_E: # @_ZN2kc28impl_ac_init_declarator_list5mergeEPS0_PFPNS_23impl_ac_init_declaratorES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 252
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1526_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_ac_init_declarator_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_ac_init_declarator_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1526_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1526:
	.size	_ZN2kc28impl_ac_init_declarator_list5mergeEPS0_PFPNS_23impl_ac_init_declaratorES3_S3_E, .Lfunc_end1526-_ZN2kc28impl_ac_init_declarator_list5mergeEPS0_PFPNS_23impl_ac_init_declaratorES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_init_declarator_list6reduceEPNS_23impl_ac_init_declaratorEPFS2_S2_S2_E # -- Begin function _ZN2kc28impl_ac_init_declarator_list6reduceEPNS_23impl_ac_init_declaratorEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_list6reduceEPNS_23impl_ac_init_declaratorEPFS2_S2_S2_E,@function
_ZN2kc28impl_ac_init_declarator_list6reduceEPNS_23impl_ac_init_declaratorEPFS2_S2_S2_E: # @_ZN2kc28impl_ac_init_declarator_list6reduceEPNS_23impl_ac_init_declaratorEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1527_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_ac_init_declaratorE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_ac_init_declaratorE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1527_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1527:
	.size	_ZN2kc28impl_ac_init_declarator_list6reduceEPNS_23impl_ac_init_declaratorEPFS2_S2_S2_E, .Lfunc_end1527-_ZN2kc28impl_ac_init_declarator_list6reduceEPNS_23impl_ac_init_declaratorEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_33impl_ac_class_qualifier_help_listES2_ # -- Begin function _ZN2kc6concatEPKNS_33impl_ac_class_qualifier_help_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_33impl_ac_class_qualifier_help_listES2_,@function
_ZN2kc6concatEPKNS_33impl_ac_class_qualifier_help_listES2_: # @_ZN2kc6concatEPKNS_33impl_ac_class_qualifier_help_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 271
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1528_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1528_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1528:
	.size	_ZN2kc6concatEPKNS_33impl_ac_class_qualifier_help_listES2_, .Lfunc_end1528-_ZN2kc6concatEPKNS_33impl_ac_class_qualifier_help_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc33impl_ac_class_qualifier_help_list7reverseEv # -- Begin function _ZNK2kc33impl_ac_class_qualifier_help_list7reverseEv
	.p2align	5
	.type	_ZNK2kc33impl_ac_class_qualifier_help_list7reverseEv,@function
_ZNK2kc33impl_ac_class_qualifier_help_list7reverseEv: # @_ZNK2kc33impl_ac_class_qualifier_help_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1529_2
	.p2align	4, , 16
.LBB1529_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1529_1
	b	.LBB1529_3
.LBB1529_2:
	move	$s1, $s0
.LBB1529_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1529:
	.size	_ZNK2kc33impl_ac_class_qualifier_help_list7reverseEv, .Lfunc_end1529-_ZNK2kc33impl_ac_class_qualifier_help_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc33impl_ac_class_qualifier_help_list4lastEv # -- Begin function _ZNK2kc33impl_ac_class_qualifier_help_list4lastEv
	.p2align	5
	.type	_ZNK2kc33impl_ac_class_qualifier_help_list4lastEv,@function
_ZNK2kc33impl_ac_class_qualifier_help_list4lastEv: # @_ZNK2kc33impl_ac_class_qualifier_help_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1530_5
	.p2align	4, , 16
.LBB1530_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1530_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1530_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc25impl_ac_direct_declaratorE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc25impl_ac_direct_declaratorE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1530_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1530_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1530:
	.size	_ZNK2kc33impl_ac_class_qualifier_help_list4lastEv, .Lfunc_end1530-_ZNK2kc33impl_ac_class_qualifier_help_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc33impl_ac_class_qualifier_help_list6is_nilEv # -- Begin function _ZNK2kc33impl_ac_class_qualifier_help_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc33impl_ac_class_qualifier_help_list6is_nilEv,@function
_ZNK2kc33impl_ac_class_qualifier_help_list6is_nilEv: # @_ZNK2kc33impl_ac_class_qualifier_help_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1531:
	.size	_ZNK2kc33impl_ac_class_qualifier_help_list6is_nilEv, .Lfunc_end1531-_ZNK2kc33impl_ac_class_qualifier_help_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc33impl_ac_class_qualifier_help_list3mapEPFPNS_25impl_ac_direct_declaratorES2_E # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_list3mapEPFPNS_25impl_ac_direct_declaratorES2_E
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_list3mapEPFPNS_25impl_ac_direct_declaratorES2_E,@function
_ZN2kc33impl_ac_class_qualifier_help_list3mapEPFPNS_25impl_ac_direct_declaratorES2_E: # @_ZN2kc33impl_ac_class_qualifier_help_list3mapEPFPNS_25impl_ac_direct_declaratorES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 271
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1532_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1532_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1532:
	.size	_ZN2kc33impl_ac_class_qualifier_help_list3mapEPFPNS_25impl_ac_direct_declaratorES2_E, .Lfunc_end1532-_ZN2kc33impl_ac_class_qualifier_help_list3mapEPFPNS_25impl_ac_direct_declaratorES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_class_qualifier_help_list6filterEPFbPNS_25impl_ac_direct_declaratorEE # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_list6filterEPFbPNS_25impl_ac_direct_declaratorEE
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_list6filterEPFbPNS_25impl_ac_direct_declaratorEE,@function
_ZN2kc33impl_ac_class_qualifier_help_list6filterEPFbPNS_25impl_ac_direct_declaratorEE: # @_ZN2kc33impl_ac_class_qualifier_help_list6filterEPFbPNS_25impl_ac_direct_declaratorEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 271
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1533_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1533_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1533:
	.size	_ZN2kc33impl_ac_class_qualifier_help_list6filterEPFbPNS_25impl_ac_direct_declaratorEE, .Lfunc_end1533-_ZN2kc33impl_ac_class_qualifier_help_list6filterEPFbPNS_25impl_ac_direct_declaratorEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_class_qualifier_help_list6appendEPNS_25impl_ac_direct_declaratorE # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_list6appendEPNS_25impl_ac_direct_declaratorE
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_list6appendEPNS_25impl_ac_direct_declaratorE,@function
_ZN2kc33impl_ac_class_qualifier_help_list6appendEPNS_25impl_ac_direct_declaratorE: # @_ZN2kc33impl_ac_class_qualifier_help_list6appendEPNS_25impl_ac_direct_declaratorE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc33impl_ac_class_qualifier_help_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1534_2
	.p2align	4, , 16
.LBB1534_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1534_1
.LBB1534_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1534:
	.size	_ZN2kc33impl_ac_class_qualifier_help_list6appendEPNS_25impl_ac_direct_declaratorE, .Lfunc_end1534-_ZN2kc33impl_ac_class_qualifier_help_list6appendEPNS_25impl_ac_direct_declaratorE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_class_qualifier_help_list5mergeEPS0_PFPNS_25impl_ac_direct_declaratorES3_S3_E # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_list5mergeEPS0_PFPNS_25impl_ac_direct_declaratorES3_S3_E
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_list5mergeEPS0_PFPNS_25impl_ac_direct_declaratorES3_S3_E,@function
_ZN2kc33impl_ac_class_qualifier_help_list5mergeEPS0_PFPNS_25impl_ac_direct_declaratorES3_S3_E: # @_ZN2kc33impl_ac_class_qualifier_help_list5mergeEPS0_PFPNS_25impl_ac_direct_declaratorES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 271
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1535_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc33impl_ac_class_qualifier_help_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1535_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1535:
	.size	_ZN2kc33impl_ac_class_qualifier_help_list5mergeEPS0_PFPNS_25impl_ac_direct_declaratorES3_S3_E, .Lfunc_end1535-_ZN2kc33impl_ac_class_qualifier_help_list5mergeEPS0_PFPNS_25impl_ac_direct_declaratorES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_class_qualifier_help_list6reduceEPNS_25impl_ac_direct_declaratorEPFS2_S2_S2_E # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_list6reduceEPNS_25impl_ac_direct_declaratorEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_list6reduceEPNS_25impl_ac_direct_declaratorEPFS2_S2_S2_E,@function
_ZN2kc33impl_ac_class_qualifier_help_list6reduceEPNS_25impl_ac_direct_declaratorEPFS2_S2_S2_E: # @_ZN2kc33impl_ac_class_qualifier_help_list6reduceEPNS_25impl_ac_direct_declaratorEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1536_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc25impl_ac_direct_declaratorE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc25impl_ac_direct_declaratorE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1536_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1536:
	.size	_ZN2kc33impl_ac_class_qualifier_help_list6reduceEPNS_25impl_ac_direct_declaratorEPFS2_S2_S2_E, .Lfunc_end1536-_ZN2kc33impl_ac_class_qualifier_help_list6reduceEPNS_25impl_ac_direct_declaratorEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_28impl_ac_class_qualifier_listES2_ # -- Begin function _ZN2kc6concatEPKNS_28impl_ac_class_qualifier_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_28impl_ac_class_qualifier_listES2_,@function
_ZN2kc6concatEPKNS_28impl_ac_class_qualifier_listES2_: # @_ZN2kc6concatEPKNS_28impl_ac_class_qualifier_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 273
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1537_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_ac_class_qualifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_ac_class_qualifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1537_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1537:
	.size	_ZN2kc6concatEPKNS_28impl_ac_class_qualifier_listES2_, .Lfunc_end1537-_ZN2kc6concatEPKNS_28impl_ac_class_qualifier_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_class_qualifier_list7reverseEv # -- Begin function _ZNK2kc28impl_ac_class_qualifier_list7reverseEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_class_qualifier_list7reverseEv,@function
_ZNK2kc28impl_ac_class_qualifier_list7reverseEv: # @_ZNK2kc28impl_ac_class_qualifier_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1538_2
	.p2align	4, , 16
.LBB1538_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1538_1
	b	.LBB1538_3
.LBB1538_2:
	move	$s1, $s0
.LBB1538_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_ac_class_qualifier_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc28impl_ac_class_qualifier_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1538:
	.size	_ZNK2kc28impl_ac_class_qualifier_list7reverseEv, .Lfunc_end1538-_ZNK2kc28impl_ac_class_qualifier_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_class_qualifier_list4lastEv # -- Begin function _ZNK2kc28impl_ac_class_qualifier_list4lastEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_class_qualifier_list4lastEv,@function
_ZNK2kc28impl_ac_class_qualifier_list4lastEv: # @_ZNK2kc28impl_ac_class_qualifier_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1539_5
	.p2align	4, , 16
.LBB1539_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1539_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1539_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1539_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1539_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1539:
	.size	_ZNK2kc28impl_ac_class_qualifier_list4lastEv, .Lfunc_end1539-_ZNK2kc28impl_ac_class_qualifier_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc28impl_ac_class_qualifier_list6is_nilEv # -- Begin function _ZNK2kc28impl_ac_class_qualifier_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_class_qualifier_list6is_nilEv,@function
_ZNK2kc28impl_ac_class_qualifier_list6is_nilEv: # @_ZNK2kc28impl_ac_class_qualifier_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1540:
	.size	_ZNK2kc28impl_ac_class_qualifier_list6is_nilEv, .Lfunc_end1540-_ZNK2kc28impl_ac_class_qualifier_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc28impl_ac_class_qualifier_list3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc28impl_ac_class_qualifier_list3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_list3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc28impl_ac_class_qualifier_list3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc28impl_ac_class_qualifier_list3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 273
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1541_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_ac_class_qualifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_ac_class_qualifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1541_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1541:
	.size	_ZN2kc28impl_ac_class_qualifier_list3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1541-_ZN2kc28impl_ac_class_qualifier_list3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_class_qualifier_list6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc28impl_ac_class_qualifier_list6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_list6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc28impl_ac_class_qualifier_list6filterEPFbPNS_7impl_IDEE: # @_ZN2kc28impl_ac_class_qualifier_list6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 273
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1542_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_ac_class_qualifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_ac_class_qualifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1542_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1542:
	.size	_ZN2kc28impl_ac_class_qualifier_list6filterEPFbPNS_7impl_IDEE, .Lfunc_end1542-_ZN2kc28impl_ac_class_qualifier_list6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_class_qualifier_list6appendEPNS_7impl_IDE # -- Begin function _ZN2kc28impl_ac_class_qualifier_list6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_list6appendEPNS_7impl_IDE,@function
_ZN2kc28impl_ac_class_qualifier_list6appendEPNS_7impl_IDE: # @_ZN2kc28impl_ac_class_qualifier_list6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc28impl_ac_class_qualifier_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1543_2
	.p2align	4, , 16
.LBB1543_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1543_1
.LBB1543_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_ac_class_qualifier_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc28impl_ac_class_qualifier_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1543:
	.size	_ZN2kc28impl_ac_class_qualifier_list6appendEPNS_7impl_IDE, .Lfunc_end1543-_ZN2kc28impl_ac_class_qualifier_list6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_class_qualifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc28impl_ac_class_qualifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc28impl_ac_class_qualifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc28impl_ac_class_qualifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 273
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1544_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_ac_class_qualifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_ac_class_qualifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1544_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1544:
	.size	_ZN2kc28impl_ac_class_qualifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1544-_ZN2kc28impl_ac_class_qualifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_class_qualifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc28impl_ac_class_qualifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc28impl_ac_class_qualifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc28impl_ac_class_qualifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1545_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1545_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1545:
	.size	_ZN2kc28impl_ac_class_qualifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1545-_ZN2kc28impl_ac_class_qualifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_27impl_ac_type_qualifier_listES2_ # -- Begin function _ZN2kc6concatEPKNS_27impl_ac_type_qualifier_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_27impl_ac_type_qualifier_listES2_,@function
_ZN2kc6concatEPKNS_27impl_ac_type_qualifier_listES2_: # @_ZN2kc6concatEPKNS_27impl_ac_type_qualifier_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 275
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1546_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_ac_type_qualifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_ac_type_qualifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1546_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1546:
	.size	_ZN2kc6concatEPKNS_27impl_ac_type_qualifier_listES2_, .Lfunc_end1546-_ZN2kc6concatEPKNS_27impl_ac_type_qualifier_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_ac_type_qualifier_list7reverseEv # -- Begin function _ZNK2kc27impl_ac_type_qualifier_list7reverseEv
	.p2align	5
	.type	_ZNK2kc27impl_ac_type_qualifier_list7reverseEv,@function
_ZNK2kc27impl_ac_type_qualifier_list7reverseEv: # @_ZNK2kc27impl_ac_type_qualifier_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1547_2
	.p2align	4, , 16
.LBB1547_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1547_1
	b	.LBB1547_3
.LBB1547_2:
	move	$s1, $s0
.LBB1547_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_type_qualifier_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc27impl_ac_type_qualifier_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1547:
	.size	_ZNK2kc27impl_ac_type_qualifier_list7reverseEv, .Lfunc_end1547-_ZNK2kc27impl_ac_type_qualifier_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_ac_type_qualifier_list4lastEv # -- Begin function _ZNK2kc27impl_ac_type_qualifier_list4lastEv
	.p2align	5
	.type	_ZNK2kc27impl_ac_type_qualifier_list4lastEv,@function
_ZNK2kc27impl_ac_type_qualifier_list4lastEv: # @_ZNK2kc27impl_ac_type_qualifier_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1548_5
	.p2align	4, , 16
.LBB1548_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1548_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1548_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_type_qualifierE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_type_qualifierE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1548_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1548_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1548:
	.size	_ZNK2kc27impl_ac_type_qualifier_list4lastEv, .Lfunc_end1548-_ZNK2kc27impl_ac_type_qualifier_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_ac_type_qualifier_list6is_nilEv # -- Begin function _ZNK2kc27impl_ac_type_qualifier_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc27impl_ac_type_qualifier_list6is_nilEv,@function
_ZNK2kc27impl_ac_type_qualifier_list6is_nilEv: # @_ZNK2kc27impl_ac_type_qualifier_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1549:
	.size	_ZNK2kc27impl_ac_type_qualifier_list6is_nilEv, .Lfunc_end1549-_ZNK2kc27impl_ac_type_qualifier_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc27impl_ac_type_qualifier_list3mapEPFPNS_22impl_ac_type_qualifierES2_E # -- Begin function _ZN2kc27impl_ac_type_qualifier_list3mapEPFPNS_22impl_ac_type_qualifierES2_E
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_list3mapEPFPNS_22impl_ac_type_qualifierES2_E,@function
_ZN2kc27impl_ac_type_qualifier_list3mapEPFPNS_22impl_ac_type_qualifierES2_E: # @_ZN2kc27impl_ac_type_qualifier_list3mapEPFPNS_22impl_ac_type_qualifierES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 275
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1550_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_ac_type_qualifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_ac_type_qualifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1550_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1550:
	.size	_ZN2kc27impl_ac_type_qualifier_list3mapEPFPNS_22impl_ac_type_qualifierES2_E, .Lfunc_end1550-_ZN2kc27impl_ac_type_qualifier_list3mapEPFPNS_22impl_ac_type_qualifierES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_ac_type_qualifier_list6filterEPFbPNS_22impl_ac_type_qualifierEE # -- Begin function _ZN2kc27impl_ac_type_qualifier_list6filterEPFbPNS_22impl_ac_type_qualifierEE
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_list6filterEPFbPNS_22impl_ac_type_qualifierEE,@function
_ZN2kc27impl_ac_type_qualifier_list6filterEPFbPNS_22impl_ac_type_qualifierEE: # @_ZN2kc27impl_ac_type_qualifier_list6filterEPFbPNS_22impl_ac_type_qualifierEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 275
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1551_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_ac_type_qualifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_ac_type_qualifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1551_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1551:
	.size	_ZN2kc27impl_ac_type_qualifier_list6filterEPFbPNS_22impl_ac_type_qualifierEE, .Lfunc_end1551-_ZN2kc27impl_ac_type_qualifier_list6filterEPFbPNS_22impl_ac_type_qualifierEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_ac_type_qualifier_list6appendEPNS_22impl_ac_type_qualifierE # -- Begin function _ZN2kc27impl_ac_type_qualifier_list6appendEPNS_22impl_ac_type_qualifierE
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_list6appendEPNS_22impl_ac_type_qualifierE,@function
_ZN2kc27impl_ac_type_qualifier_list6appendEPNS_22impl_ac_type_qualifierE: # @_ZN2kc27impl_ac_type_qualifier_list6appendEPNS_22impl_ac_type_qualifierE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc27impl_ac_type_qualifier_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1552_2
	.p2align	4, , 16
.LBB1552_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1552_1
.LBB1552_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_ac_type_qualifier_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc27impl_ac_type_qualifier_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1552:
	.size	_ZN2kc27impl_ac_type_qualifier_list6appendEPNS_22impl_ac_type_qualifierE, .Lfunc_end1552-_ZN2kc27impl_ac_type_qualifier_list6appendEPNS_22impl_ac_type_qualifierE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_ac_type_qualifier_list5mergeEPS0_PFPNS_22impl_ac_type_qualifierES3_S3_E # -- Begin function _ZN2kc27impl_ac_type_qualifier_list5mergeEPS0_PFPNS_22impl_ac_type_qualifierES3_S3_E
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_list5mergeEPS0_PFPNS_22impl_ac_type_qualifierES3_S3_E,@function
_ZN2kc27impl_ac_type_qualifier_list5mergeEPS0_PFPNS_22impl_ac_type_qualifierES3_S3_E: # @_ZN2kc27impl_ac_type_qualifier_list5mergeEPS0_PFPNS_22impl_ac_type_qualifierES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 275
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1553_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_ac_type_qualifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_ac_type_qualifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1553_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1553:
	.size	_ZN2kc27impl_ac_type_qualifier_list5mergeEPS0_PFPNS_22impl_ac_type_qualifierES3_S3_E, .Lfunc_end1553-_ZN2kc27impl_ac_type_qualifier_list5mergeEPS0_PFPNS_22impl_ac_type_qualifierES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_ac_type_qualifier_list6reduceEPNS_22impl_ac_type_qualifierEPFS2_S2_S2_E # -- Begin function _ZN2kc27impl_ac_type_qualifier_list6reduceEPNS_22impl_ac_type_qualifierEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_list6reduceEPNS_22impl_ac_type_qualifierEPFS2_S2_S2_E,@function
_ZN2kc27impl_ac_type_qualifier_list6reduceEPNS_22impl_ac_type_qualifierEPFS2_S2_S2_E: # @_ZN2kc27impl_ac_type_qualifier_list6reduceEPNS_22impl_ac_type_qualifierEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1554_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_type_qualifierE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_type_qualifierE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1554_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1554:
	.size	_ZN2kc27impl_ac_type_qualifier_list6reduceEPNS_22impl_ac_type_qualifierEPFS2_S2_S2_E, .Lfunc_end1554-_ZN2kc27impl_ac_type_qualifier_list6reduceEPNS_22impl_ac_type_qualifierEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_22impl_ac_parameter_listES2_ # -- Begin function _ZN2kc6concatEPKNS_22impl_ac_parameter_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_22impl_ac_parameter_listES2_,@function
_ZN2kc6concatEPKNS_22impl_ac_parameter_listES2_: # @_ZN2kc6concatEPKNS_22impl_ac_parameter_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 279
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1555_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_parameter_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_parameter_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1555_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1555:
	.size	_ZN2kc6concatEPKNS_22impl_ac_parameter_listES2_, .Lfunc_end1555-_ZN2kc6concatEPKNS_22impl_ac_parameter_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc22impl_ac_parameter_list7reverseEv # -- Begin function _ZNK2kc22impl_ac_parameter_list7reverseEv
	.p2align	5
	.type	_ZNK2kc22impl_ac_parameter_list7reverseEv,@function
_ZNK2kc22impl_ac_parameter_list7reverseEv: # @_ZNK2kc22impl_ac_parameter_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc22impl_ac_parameter_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc22impl_ac_parameter_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1556_2
	.p2align	4, , 16
.LBB1556_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1556_1
	b	.LBB1556_3
.LBB1556_2:
	move	$s1, $s0
.LBB1556_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_parameter_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc22impl_ac_parameter_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1556:
	.size	_ZNK2kc22impl_ac_parameter_list7reverseEv, .Lfunc_end1556-_ZNK2kc22impl_ac_parameter_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc22impl_ac_parameter_list4lastEv # -- Begin function _ZNK2kc22impl_ac_parameter_list4lastEv
	.p2align	5
	.type	_ZNK2kc22impl_ac_parameter_list4lastEv,@function
_ZNK2kc22impl_ac_parameter_list4lastEv: # @_ZNK2kc22impl_ac_parameter_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1557_5
	.p2align	4, , 16
.LBB1557_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1557_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1557_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc29impl_ac_parameter_declarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc29impl_ac_parameter_declarationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1557_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1557_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1557:
	.size	_ZNK2kc22impl_ac_parameter_list4lastEv, .Lfunc_end1557-_ZNK2kc22impl_ac_parameter_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc22impl_ac_parameter_list6is_nilEv # -- Begin function _ZNK2kc22impl_ac_parameter_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc22impl_ac_parameter_list6is_nilEv,@function
_ZNK2kc22impl_ac_parameter_list6is_nilEv: # @_ZNK2kc22impl_ac_parameter_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1558:
	.size	_ZNK2kc22impl_ac_parameter_list6is_nilEv, .Lfunc_end1558-_ZNK2kc22impl_ac_parameter_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc22impl_ac_parameter_list3mapEPFPNS_29impl_ac_parameter_declarationES2_E # -- Begin function _ZN2kc22impl_ac_parameter_list3mapEPFPNS_29impl_ac_parameter_declarationES2_E
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_list3mapEPFPNS_29impl_ac_parameter_declarationES2_E,@function
_ZN2kc22impl_ac_parameter_list3mapEPFPNS_29impl_ac_parameter_declarationES2_E: # @_ZN2kc22impl_ac_parameter_list3mapEPFPNS_29impl_ac_parameter_declarationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 279
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1559_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_parameter_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_parameter_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1559_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1559:
	.size	_ZN2kc22impl_ac_parameter_list3mapEPFPNS_29impl_ac_parameter_declarationES2_E, .Lfunc_end1559-_ZN2kc22impl_ac_parameter_list3mapEPFPNS_29impl_ac_parameter_declarationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_parameter_list6filterEPFbPNS_29impl_ac_parameter_declarationEE # -- Begin function _ZN2kc22impl_ac_parameter_list6filterEPFbPNS_29impl_ac_parameter_declarationEE
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_list6filterEPFbPNS_29impl_ac_parameter_declarationEE,@function
_ZN2kc22impl_ac_parameter_list6filterEPFbPNS_29impl_ac_parameter_declarationEE: # @_ZN2kc22impl_ac_parameter_list6filterEPFbPNS_29impl_ac_parameter_declarationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 279
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1560_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_parameter_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_parameter_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1560_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1560:
	.size	_ZN2kc22impl_ac_parameter_list6filterEPFbPNS_29impl_ac_parameter_declarationEE, .Lfunc_end1560-_ZN2kc22impl_ac_parameter_list6filterEPFbPNS_29impl_ac_parameter_declarationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_parameter_list6appendEPNS_29impl_ac_parameter_declarationE # -- Begin function _ZN2kc22impl_ac_parameter_list6appendEPNS_29impl_ac_parameter_declarationE
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_list6appendEPNS_29impl_ac_parameter_declarationE,@function
_ZN2kc22impl_ac_parameter_list6appendEPNS_29impl_ac_parameter_declarationE: # @_ZN2kc22impl_ac_parameter_list6appendEPNS_29impl_ac_parameter_declarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc22impl_ac_parameter_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc22impl_ac_parameter_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1561_2
	.p2align	4, , 16
.LBB1561_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1561_1
.LBB1561_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_parameter_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc22impl_ac_parameter_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1561:
	.size	_ZN2kc22impl_ac_parameter_list6appendEPNS_29impl_ac_parameter_declarationE, .Lfunc_end1561-_ZN2kc22impl_ac_parameter_list6appendEPNS_29impl_ac_parameter_declarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_parameter_list5mergeEPS0_PFPNS_29impl_ac_parameter_declarationES3_S3_E # -- Begin function _ZN2kc22impl_ac_parameter_list5mergeEPS0_PFPNS_29impl_ac_parameter_declarationES3_S3_E
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_list5mergeEPS0_PFPNS_29impl_ac_parameter_declarationES3_S3_E,@function
_ZN2kc22impl_ac_parameter_list5mergeEPS0_PFPNS_29impl_ac_parameter_declarationES3_S3_E: # @_ZN2kc22impl_ac_parameter_list5mergeEPS0_PFPNS_29impl_ac_parameter_declarationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 279
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1562_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_parameter_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_parameter_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1562_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1562:
	.size	_ZN2kc22impl_ac_parameter_list5mergeEPS0_PFPNS_29impl_ac_parameter_declarationES3_S3_E, .Lfunc_end1562-_ZN2kc22impl_ac_parameter_list5mergeEPS0_PFPNS_29impl_ac_parameter_declarationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_parameter_list6reduceEPNS_29impl_ac_parameter_declarationEPFS2_S2_S2_E # -- Begin function _ZN2kc22impl_ac_parameter_list6reduceEPNS_29impl_ac_parameter_declarationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_list6reduceEPNS_29impl_ac_parameter_declarationEPFS2_S2_S2_E,@function
_ZN2kc22impl_ac_parameter_list6reduceEPNS_29impl_ac_parameter_declarationEPFS2_S2_S2_E: # @_ZN2kc22impl_ac_parameter_list6reduceEPNS_29impl_ac_parameter_declarationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1563_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc29impl_ac_parameter_declarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc29impl_ac_parameter_declarationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1563_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1563:
	.size	_ZN2kc22impl_ac_parameter_list6reduceEPNS_29impl_ac_parameter_declarationEPFS2_S2_S2_E, .Lfunc_end1563-_ZN2kc22impl_ac_parameter_list6reduceEPNS_29impl_ac_parameter_declarationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_ # -- Begin function _ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_,@function
_ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_: # @_ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 283
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1564_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_ac_identifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_ac_identifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1564_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1564:
	.size	_ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_, .Lfunc_end1564-_ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc23impl_ac_identifier_list7reverseEv # -- Begin function _ZNK2kc23impl_ac_identifier_list7reverseEv
	.p2align	5
	.type	_ZNK2kc23impl_ac_identifier_list7reverseEv,@function
_ZNK2kc23impl_ac_identifier_list7reverseEv: # @_ZNK2kc23impl_ac_identifier_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc23impl_ac_identifier_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc23impl_ac_identifier_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1565_2
	.p2align	4, , 16
.LBB1565_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1565_1
	b	.LBB1565_3
.LBB1565_2:
	move	$s1, $s0
.LBB1565_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_ac_identifier_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc23impl_ac_identifier_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1565:
	.size	_ZNK2kc23impl_ac_identifier_list7reverseEv, .Lfunc_end1565-_ZNK2kc23impl_ac_identifier_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc23impl_ac_identifier_list4lastEv # -- Begin function _ZNK2kc23impl_ac_identifier_list4lastEv
	.p2align	5
	.type	_ZNK2kc23impl_ac_identifier_list4lastEv,@function
_ZNK2kc23impl_ac_identifier_list4lastEv: # @_ZNK2kc23impl_ac_identifier_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1566_5
	.p2align	4, , 16
.LBB1566_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1566_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1566_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1566_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1566_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1566:
	.size	_ZNK2kc23impl_ac_identifier_list4lastEv, .Lfunc_end1566-_ZNK2kc23impl_ac_identifier_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc23impl_ac_identifier_list6is_nilEv # -- Begin function _ZNK2kc23impl_ac_identifier_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc23impl_ac_identifier_list6is_nilEv,@function
_ZNK2kc23impl_ac_identifier_list6is_nilEv: # @_ZNK2kc23impl_ac_identifier_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1567:
	.size	_ZNK2kc23impl_ac_identifier_list6is_nilEv, .Lfunc_end1567-_ZNK2kc23impl_ac_identifier_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc23impl_ac_identifier_list3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc23impl_ac_identifier_list3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_list3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc23impl_ac_identifier_list3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc23impl_ac_identifier_list3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 283
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1568_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_ac_identifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_ac_identifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1568_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1568:
	.size	_ZN2kc23impl_ac_identifier_list3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1568-_ZN2kc23impl_ac_identifier_list3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_ac_identifier_list6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc23impl_ac_identifier_list6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_list6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc23impl_ac_identifier_list6filterEPFbPNS_7impl_IDEE: # @_ZN2kc23impl_ac_identifier_list6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 283
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1569_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_ac_identifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_ac_identifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1569_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1569:
	.size	_ZN2kc23impl_ac_identifier_list6filterEPFbPNS_7impl_IDEE, .Lfunc_end1569-_ZN2kc23impl_ac_identifier_list6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_ac_identifier_list6appendEPNS_7impl_IDE # -- Begin function _ZN2kc23impl_ac_identifier_list6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_list6appendEPNS_7impl_IDE,@function
_ZN2kc23impl_ac_identifier_list6appendEPNS_7impl_IDE: # @_ZN2kc23impl_ac_identifier_list6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc23impl_ac_identifier_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc23impl_ac_identifier_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1570_2
	.p2align	4, , 16
.LBB1570_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1570_1
.LBB1570_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc23impl_ac_identifier_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc23impl_ac_identifier_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1570:
	.size	_ZN2kc23impl_ac_identifier_list6appendEPNS_7impl_IDE, .Lfunc_end1570-_ZN2kc23impl_ac_identifier_list6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_ac_identifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc23impl_ac_identifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc23impl_ac_identifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc23impl_ac_identifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 283
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1571_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc23impl_ac_identifier_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc23impl_ac_identifier_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1571_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1571:
	.size	_ZN2kc23impl_ac_identifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1571-_ZN2kc23impl_ac_identifier_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_ac_identifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc23impl_ac_identifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc23impl_ac_identifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc23impl_ac_identifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1572_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1572_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1572:
	.size	_ZN2kc23impl_ac_identifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1572-_ZN2kc23impl_ac_identifier_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_32impl_ac_constant_expression_listES2_ # -- Begin function _ZN2kc6concatEPKNS_32impl_ac_constant_expression_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_32impl_ac_constant_expression_listES2_,@function
_ZN2kc6concatEPKNS_32impl_ac_constant_expression_listES2_: # @_ZN2kc6concatEPKNS_32impl_ac_constant_expression_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 295
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1573_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc32impl_ac_constant_expression_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc32impl_ac_constant_expression_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1573_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1573:
	.size	_ZN2kc6concatEPKNS_32impl_ac_constant_expression_listES2_, .Lfunc_end1573-_ZN2kc6concatEPKNS_32impl_ac_constant_expression_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc32impl_ac_constant_expression_list7reverseEv # -- Begin function _ZNK2kc32impl_ac_constant_expression_list7reverseEv
	.p2align	5
	.type	_ZNK2kc32impl_ac_constant_expression_list7reverseEv,@function
_ZNK2kc32impl_ac_constant_expression_list7reverseEv: # @_ZNK2kc32impl_ac_constant_expression_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1574_2
	.p2align	4, , 16
.LBB1574_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1574_1
	b	.LBB1574_3
.LBB1574_2:
	move	$s1, $s0
.LBB1574_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc32impl_ac_constant_expression_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc32impl_ac_constant_expression_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1574:
	.size	_ZNK2kc32impl_ac_constant_expression_list7reverseEv, .Lfunc_end1574-_ZNK2kc32impl_ac_constant_expression_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc32impl_ac_constant_expression_list4lastEv # -- Begin function _ZNK2kc32impl_ac_constant_expression_list4lastEv
	.p2align	5
	.type	_ZNK2kc32impl_ac_constant_expression_list4lastEv,@function
_ZNK2kc32impl_ac_constant_expression_list4lastEv: # @_ZNK2kc32impl_ac_constant_expression_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1575_5
	.p2align	4, , 16
.LBB1575_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1575_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1575_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_ac_constant_expressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_ac_constant_expressionE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1575_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1575_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1575:
	.size	_ZNK2kc32impl_ac_constant_expression_list4lastEv, .Lfunc_end1575-_ZNK2kc32impl_ac_constant_expression_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc32impl_ac_constant_expression_list6is_nilEv # -- Begin function _ZNK2kc32impl_ac_constant_expression_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc32impl_ac_constant_expression_list6is_nilEv,@function
_ZNK2kc32impl_ac_constant_expression_list6is_nilEv: # @_ZNK2kc32impl_ac_constant_expression_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1576:
	.size	_ZNK2kc32impl_ac_constant_expression_list6is_nilEv, .Lfunc_end1576-_ZNK2kc32impl_ac_constant_expression_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc32impl_ac_constant_expression_list3mapEPFPNS_27impl_ac_constant_expressionES2_E # -- Begin function _ZN2kc32impl_ac_constant_expression_list3mapEPFPNS_27impl_ac_constant_expressionES2_E
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_list3mapEPFPNS_27impl_ac_constant_expressionES2_E,@function
_ZN2kc32impl_ac_constant_expression_list3mapEPFPNS_27impl_ac_constant_expressionES2_E: # @_ZN2kc32impl_ac_constant_expression_list3mapEPFPNS_27impl_ac_constant_expressionES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 295
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1577_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc32impl_ac_constant_expression_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc32impl_ac_constant_expression_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1577_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1577:
	.size	_ZN2kc32impl_ac_constant_expression_list3mapEPFPNS_27impl_ac_constant_expressionES2_E, .Lfunc_end1577-_ZN2kc32impl_ac_constant_expression_list3mapEPFPNS_27impl_ac_constant_expressionES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_ac_constant_expression_list6filterEPFbPNS_27impl_ac_constant_expressionEE # -- Begin function _ZN2kc32impl_ac_constant_expression_list6filterEPFbPNS_27impl_ac_constant_expressionEE
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_list6filterEPFbPNS_27impl_ac_constant_expressionEE,@function
_ZN2kc32impl_ac_constant_expression_list6filterEPFbPNS_27impl_ac_constant_expressionEE: # @_ZN2kc32impl_ac_constant_expression_list6filterEPFbPNS_27impl_ac_constant_expressionEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 295
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1578_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc32impl_ac_constant_expression_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc32impl_ac_constant_expression_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1578_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1578:
	.size	_ZN2kc32impl_ac_constant_expression_list6filterEPFbPNS_27impl_ac_constant_expressionEE, .Lfunc_end1578-_ZN2kc32impl_ac_constant_expression_list6filterEPFbPNS_27impl_ac_constant_expressionEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_ac_constant_expression_list6appendEPNS_27impl_ac_constant_expressionE # -- Begin function _ZN2kc32impl_ac_constant_expression_list6appendEPNS_27impl_ac_constant_expressionE
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_list6appendEPNS_27impl_ac_constant_expressionE,@function
_ZN2kc32impl_ac_constant_expression_list6appendEPNS_27impl_ac_constant_expressionE: # @_ZN2kc32impl_ac_constant_expression_list6appendEPNS_27impl_ac_constant_expressionE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc32impl_ac_constant_expression_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1579_2
	.p2align	4, , 16
.LBB1579_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1579_1
.LBB1579_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc32impl_ac_constant_expression_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc32impl_ac_constant_expression_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1579:
	.size	_ZN2kc32impl_ac_constant_expression_list6appendEPNS_27impl_ac_constant_expressionE, .Lfunc_end1579-_ZN2kc32impl_ac_constant_expression_list6appendEPNS_27impl_ac_constant_expressionE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_ac_constant_expression_list5mergeEPS0_PFPNS_27impl_ac_constant_expressionES3_S3_E # -- Begin function _ZN2kc32impl_ac_constant_expression_list5mergeEPS0_PFPNS_27impl_ac_constant_expressionES3_S3_E
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_list5mergeEPS0_PFPNS_27impl_ac_constant_expressionES3_S3_E,@function
_ZN2kc32impl_ac_constant_expression_list5mergeEPS0_PFPNS_27impl_ac_constant_expressionES3_S3_E: # @_ZN2kc32impl_ac_constant_expression_list5mergeEPS0_PFPNS_27impl_ac_constant_expressionES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 295
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1580_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc32impl_ac_constant_expression_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc32impl_ac_constant_expression_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1580_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1580:
	.size	_ZN2kc32impl_ac_constant_expression_list5mergeEPS0_PFPNS_27impl_ac_constant_expressionES3_S3_E, .Lfunc_end1580-_ZN2kc32impl_ac_constant_expression_list5mergeEPS0_PFPNS_27impl_ac_constant_expressionES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_ac_constant_expression_list6reduceEPNS_27impl_ac_constant_expressionEPFS2_S2_S2_E # -- Begin function _ZN2kc32impl_ac_constant_expression_list6reduceEPNS_27impl_ac_constant_expressionEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_list6reduceEPNS_27impl_ac_constant_expressionEPFS2_S2_S2_E,@function
_ZN2kc32impl_ac_constant_expression_list6reduceEPNS_27impl_ac_constant_expressionEPFS2_S2_S2_E: # @_ZN2kc32impl_ac_constant_expression_list6reduceEPNS_27impl_ac_constant_expressionEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1581_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_ac_constant_expressionE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_ac_constant_expressionE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1581_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1581:
	.size	_ZN2kc32impl_ac_constant_expression_list6reduceEPNS_27impl_ac_constant_expressionEPFS2_S2_S2_E, .Lfunc_end1581-_ZN2kc32impl_ac_constant_expression_list6reduceEPNS_27impl_ac_constant_expressionEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_22impl_ac_base_init_listES2_ # -- Begin function _ZN2kc6concatEPKNS_22impl_ac_base_init_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_22impl_ac_base_init_listES2_,@function
_ZN2kc6concatEPKNS_22impl_ac_base_init_listES2_: # @_ZN2kc6concatEPKNS_22impl_ac_base_init_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 299
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1582_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_base_init_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_base_init_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1582_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1582:
	.size	_ZN2kc6concatEPKNS_22impl_ac_base_init_listES2_, .Lfunc_end1582-_ZN2kc6concatEPKNS_22impl_ac_base_init_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc22impl_ac_base_init_list7reverseEv # -- Begin function _ZNK2kc22impl_ac_base_init_list7reverseEv
	.p2align	5
	.type	_ZNK2kc22impl_ac_base_init_list7reverseEv,@function
_ZNK2kc22impl_ac_base_init_list7reverseEv: # @_ZNK2kc22impl_ac_base_init_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc22impl_ac_base_init_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc22impl_ac_base_init_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1583_2
	.p2align	4, , 16
.LBB1583_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1583_1
	b	.LBB1583_3
.LBB1583_2:
	move	$s1, $s0
.LBB1583_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_base_init_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc22impl_ac_base_init_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1583:
	.size	_ZNK2kc22impl_ac_base_init_list7reverseEv, .Lfunc_end1583-_ZNK2kc22impl_ac_base_init_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc22impl_ac_base_init_list4lastEv # -- Begin function _ZNK2kc22impl_ac_base_init_list4lastEv
	.p2align	5
	.type	_ZNK2kc22impl_ac_base_init_list4lastEv,@function
_ZNK2kc22impl_ac_base_init_list4lastEv: # @_ZNK2kc22impl_ac_base_init_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1584_5
	.p2align	4, , 16
.LBB1584_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1584_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1584_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_ac_base_initE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_ac_base_initE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1584_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1584_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1584:
	.size	_ZNK2kc22impl_ac_base_init_list4lastEv, .Lfunc_end1584-_ZNK2kc22impl_ac_base_init_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc22impl_ac_base_init_list6is_nilEv # -- Begin function _ZNK2kc22impl_ac_base_init_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc22impl_ac_base_init_list6is_nilEv,@function
_ZNK2kc22impl_ac_base_init_list6is_nilEv: # @_ZNK2kc22impl_ac_base_init_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1585:
	.size	_ZNK2kc22impl_ac_base_init_list6is_nilEv, .Lfunc_end1585-_ZNK2kc22impl_ac_base_init_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc22impl_ac_base_init_list3mapEPFPNS_17impl_ac_base_initES2_E # -- Begin function _ZN2kc22impl_ac_base_init_list3mapEPFPNS_17impl_ac_base_initES2_E
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_list3mapEPFPNS_17impl_ac_base_initES2_E,@function
_ZN2kc22impl_ac_base_init_list3mapEPFPNS_17impl_ac_base_initES2_E: # @_ZN2kc22impl_ac_base_init_list3mapEPFPNS_17impl_ac_base_initES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 299
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1586_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_base_init_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_base_init_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1586_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1586:
	.size	_ZN2kc22impl_ac_base_init_list3mapEPFPNS_17impl_ac_base_initES2_E, .Lfunc_end1586-_ZN2kc22impl_ac_base_init_list3mapEPFPNS_17impl_ac_base_initES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_base_init_list6filterEPFbPNS_17impl_ac_base_initEE # -- Begin function _ZN2kc22impl_ac_base_init_list6filterEPFbPNS_17impl_ac_base_initEE
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_list6filterEPFbPNS_17impl_ac_base_initEE,@function
_ZN2kc22impl_ac_base_init_list6filterEPFbPNS_17impl_ac_base_initEE: # @_ZN2kc22impl_ac_base_init_list6filterEPFbPNS_17impl_ac_base_initEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 299
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1587_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_base_init_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_base_init_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1587_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1587:
	.size	_ZN2kc22impl_ac_base_init_list6filterEPFbPNS_17impl_ac_base_initEE, .Lfunc_end1587-_ZN2kc22impl_ac_base_init_list6filterEPFbPNS_17impl_ac_base_initEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_base_init_list6appendEPNS_17impl_ac_base_initE # -- Begin function _ZN2kc22impl_ac_base_init_list6appendEPNS_17impl_ac_base_initE
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_list6appendEPNS_17impl_ac_base_initE,@function
_ZN2kc22impl_ac_base_init_list6appendEPNS_17impl_ac_base_initE: # @_ZN2kc22impl_ac_base_init_list6appendEPNS_17impl_ac_base_initE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc22impl_ac_base_init_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc22impl_ac_base_init_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1588_2
	.p2align	4, , 16
.LBB1588_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1588_1
.LBB1588_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc22impl_ac_base_init_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc22impl_ac_base_init_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1588:
	.size	_ZN2kc22impl_ac_base_init_list6appendEPNS_17impl_ac_base_initE, .Lfunc_end1588-_ZN2kc22impl_ac_base_init_list6appendEPNS_17impl_ac_base_initE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_base_init_list5mergeEPS0_PFPNS_17impl_ac_base_initES3_S3_E # -- Begin function _ZN2kc22impl_ac_base_init_list5mergeEPS0_PFPNS_17impl_ac_base_initES3_S3_E
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_list5mergeEPS0_PFPNS_17impl_ac_base_initES3_S3_E,@function
_ZN2kc22impl_ac_base_init_list5mergeEPS0_PFPNS_17impl_ac_base_initES3_S3_E: # @_ZN2kc22impl_ac_base_init_list5mergeEPS0_PFPNS_17impl_ac_base_initES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 299
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1589_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc22impl_ac_base_init_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc22impl_ac_base_init_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1589_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1589:
	.size	_ZN2kc22impl_ac_base_init_list5mergeEPS0_PFPNS_17impl_ac_base_initES3_S3_E, .Lfunc_end1589-_ZN2kc22impl_ac_base_init_list5mergeEPS0_PFPNS_17impl_ac_base_initES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_base_init_list6reduceEPNS_17impl_ac_base_initEPFS2_S2_S2_E # -- Begin function _ZN2kc22impl_ac_base_init_list6reduceEPNS_17impl_ac_base_initEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_list6reduceEPNS_17impl_ac_base_initEPFS2_S2_S2_E,@function
_ZN2kc22impl_ac_base_init_list6reduceEPNS_17impl_ac_base_initEPFS2_S2_S2_E: # @_ZN2kc22impl_ac_base_init_list6reduceEPNS_17impl_ac_base_initEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1590_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc17impl_ac_base_initE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc17impl_ac_base_initE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1590_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1590:
	.size	_ZN2kc22impl_ac_base_init_list6reduceEPNS_17impl_ac_base_initEPFS2_S2_S2_E, .Lfunc_end1590-_ZN2kc22impl_ac_base_init_list6reduceEPNS_17impl_ac_base_initEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_27impl_baseclass_declarationsES2_ # -- Begin function _ZN2kc6concatEPKNS_27impl_baseclass_declarationsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_27impl_baseclass_declarationsES2_,@function
_ZN2kc6concatEPKNS_27impl_baseclass_declarationsES2_: # @_ZN2kc6concatEPKNS_27impl_baseclass_declarationsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 302
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1591_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_baseclass_declarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_baseclass_declarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1591_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1591:
	.size	_ZN2kc6concatEPKNS_27impl_baseclass_declarationsES2_, .Lfunc_end1591-_ZN2kc6concatEPKNS_27impl_baseclass_declarationsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_baseclass_declarations7reverseEv # -- Begin function _ZNK2kc27impl_baseclass_declarations7reverseEv
	.p2align	5
	.type	_ZNK2kc27impl_baseclass_declarations7reverseEv,@function
_ZNK2kc27impl_baseclass_declarations7reverseEv: # @_ZNK2kc27impl_baseclass_declarations7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc27impl_baseclass_declarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc27impl_baseclass_declarationsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1592_2
	.p2align	4, , 16
.LBB1592_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1592_1
	b	.LBB1592_3
.LBB1592_2:
	move	$s1, $s0
.LBB1592_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_baseclass_declarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc27impl_baseclass_declarationsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1592:
	.size	_ZNK2kc27impl_baseclass_declarations7reverseEv, .Lfunc_end1592-_ZNK2kc27impl_baseclass_declarations7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_baseclass_declarations4lastEv # -- Begin function _ZNK2kc27impl_baseclass_declarations4lastEv
	.p2align	5
	.type	_ZNK2kc27impl_baseclass_declarations4lastEv,@function
_ZNK2kc27impl_baseclass_declarations4lastEv: # @_ZNK2kc27impl_baseclass_declarations4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1593_5
	.p2align	4, , 16
.LBB1593_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1593_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1593_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_baseclass_declE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_baseclass_declE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1593_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1593_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1593:
	.size	_ZNK2kc27impl_baseclass_declarations4lastEv, .Lfunc_end1593-_ZNK2kc27impl_baseclass_declarations4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc27impl_baseclass_declarations6is_nilEv # -- Begin function _ZNK2kc27impl_baseclass_declarations6is_nilEv
	.p2align	5
	.type	_ZNK2kc27impl_baseclass_declarations6is_nilEv,@function
_ZNK2kc27impl_baseclass_declarations6is_nilEv: # @_ZNK2kc27impl_baseclass_declarations6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1594:
	.size	_ZNK2kc27impl_baseclass_declarations6is_nilEv, .Lfunc_end1594-_ZNK2kc27impl_baseclass_declarations6is_nilEv
                                        # -- End function
	.globl	_ZN2kc27impl_baseclass_declarations3mapEPFPNS_19impl_baseclass_declES2_E # -- Begin function _ZN2kc27impl_baseclass_declarations3mapEPFPNS_19impl_baseclass_declES2_E
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarations3mapEPFPNS_19impl_baseclass_declES2_E,@function
_ZN2kc27impl_baseclass_declarations3mapEPFPNS_19impl_baseclass_declES2_E: # @_ZN2kc27impl_baseclass_declarations3mapEPFPNS_19impl_baseclass_declES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 302
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1595_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_baseclass_declarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_baseclass_declarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1595_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1595:
	.size	_ZN2kc27impl_baseclass_declarations3mapEPFPNS_19impl_baseclass_declES2_E, .Lfunc_end1595-_ZN2kc27impl_baseclass_declarations3mapEPFPNS_19impl_baseclass_declES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_baseclass_declarations6filterEPFbPNS_19impl_baseclass_declEE # -- Begin function _ZN2kc27impl_baseclass_declarations6filterEPFbPNS_19impl_baseclass_declEE
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarations6filterEPFbPNS_19impl_baseclass_declEE,@function
_ZN2kc27impl_baseclass_declarations6filterEPFbPNS_19impl_baseclass_declEE: # @_ZN2kc27impl_baseclass_declarations6filterEPFbPNS_19impl_baseclass_declEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 302
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1596_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_baseclass_declarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_baseclass_declarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1596_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1596:
	.size	_ZN2kc27impl_baseclass_declarations6filterEPFbPNS_19impl_baseclass_declEE, .Lfunc_end1596-_ZN2kc27impl_baseclass_declarations6filterEPFbPNS_19impl_baseclass_declEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_baseclass_declarations6appendEPNS_19impl_baseclass_declE # -- Begin function _ZN2kc27impl_baseclass_declarations6appendEPNS_19impl_baseclass_declE
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarations6appendEPNS_19impl_baseclass_declE,@function
_ZN2kc27impl_baseclass_declarations6appendEPNS_19impl_baseclass_declE: # @_ZN2kc27impl_baseclass_declarations6appendEPNS_19impl_baseclass_declE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc27impl_baseclass_declarationsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc27impl_baseclass_declarationsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1597_2
	.p2align	4, , 16
.LBB1597_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1597_1
.LBB1597_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc27impl_baseclass_declarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc27impl_baseclass_declarationsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1597:
	.size	_ZN2kc27impl_baseclass_declarations6appendEPNS_19impl_baseclass_declE, .Lfunc_end1597-_ZN2kc27impl_baseclass_declarations6appendEPNS_19impl_baseclass_declE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_baseclass_declarations5mergeEPS0_PFPNS_19impl_baseclass_declES3_S3_E # -- Begin function _ZN2kc27impl_baseclass_declarations5mergeEPS0_PFPNS_19impl_baseclass_declES3_S3_E
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarations5mergeEPS0_PFPNS_19impl_baseclass_declES3_S3_E,@function
_ZN2kc27impl_baseclass_declarations5mergeEPS0_PFPNS_19impl_baseclass_declES3_S3_E: # @_ZN2kc27impl_baseclass_declarations5mergeEPS0_PFPNS_19impl_baseclass_declES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 302
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1598_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_baseclass_declarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_baseclass_declarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1598_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1598:
	.size	_ZN2kc27impl_baseclass_declarations5mergeEPS0_PFPNS_19impl_baseclass_declES3_S3_E, .Lfunc_end1598-_ZN2kc27impl_baseclass_declarations5mergeEPS0_PFPNS_19impl_baseclass_declES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_baseclass_declarations6reduceEPNS_19impl_baseclass_declEPFS2_S2_S2_E # -- Begin function _ZN2kc27impl_baseclass_declarations6reduceEPNS_19impl_baseclass_declEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarations6reduceEPNS_19impl_baseclass_declEPFS2_S2_S2_E,@function
_ZN2kc27impl_baseclass_declarations6reduceEPNS_19impl_baseclass_declEPFS2_S2_S2_E: # @_ZN2kc27impl_baseclass_declarations6reduceEPNS_19impl_baseclass_declEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1599_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_baseclass_declE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_baseclass_declE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1599_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1599:
	.size	_ZN2kc27impl_baseclass_declarations6reduceEPNS_19impl_baseclass_declEPFS2_S2_S2_E, .Lfunc_end1599-_ZN2kc27impl_baseclass_declarations6reduceEPNS_19impl_baseclass_declEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_19impl_baseclass_listES2_ # -- Begin function _ZN2kc6concatEPKNS_19impl_baseclass_listES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_19impl_baseclass_listES2_,@function
_ZN2kc6concatEPKNS_19impl_baseclass_listES2_: # @_ZN2kc6concatEPKNS_19impl_baseclass_listES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 305
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1600_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_baseclass_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_baseclass_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1600_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1600:
	.size	_ZN2kc6concatEPKNS_19impl_baseclass_listES2_, .Lfunc_end1600-_ZN2kc6concatEPKNS_19impl_baseclass_listES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_baseclass_list7reverseEv # -- Begin function _ZNK2kc19impl_baseclass_list7reverseEv
	.p2align	5
	.type	_ZNK2kc19impl_baseclass_list7reverseEv,@function
_ZNK2kc19impl_baseclass_list7reverseEv: # @_ZNK2kc19impl_baseclass_list7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_baseclass_listE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc19impl_baseclass_listE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1601_2
	.p2align	4, , 16
.LBB1601_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1601_1
	b	.LBB1601_3
.LBB1601_2:
	move	$s1, $s0
.LBB1601_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_baseclass_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_baseclass_listE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1601:
	.size	_ZNK2kc19impl_baseclass_list7reverseEv, .Lfunc_end1601-_ZNK2kc19impl_baseclass_list7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_baseclass_list4lastEv # -- Begin function _ZNK2kc19impl_baseclass_list4lastEv
	.p2align	5
	.type	_ZNK2kc19impl_baseclass_list4lastEv,@function
_ZNK2kc19impl_baseclass_list4lastEv:    # @_ZNK2kc19impl_baseclass_list4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1602_5
	.p2align	4, , 16
.LBB1602_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1602_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1602_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1602_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1602_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1602:
	.size	_ZNK2kc19impl_baseclass_list4lastEv, .Lfunc_end1602-_ZNK2kc19impl_baseclass_list4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_baseclass_list6is_nilEv # -- Begin function _ZNK2kc19impl_baseclass_list6is_nilEv
	.p2align	5
	.type	_ZNK2kc19impl_baseclass_list6is_nilEv,@function
_ZNK2kc19impl_baseclass_list6is_nilEv:  # @_ZNK2kc19impl_baseclass_list6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1603:
	.size	_ZNK2kc19impl_baseclass_list6is_nilEv, .Lfunc_end1603-_ZNK2kc19impl_baseclass_list6is_nilEv
                                        # -- End function
	.globl	_ZN2kc19impl_baseclass_list3mapEPFPNS_7impl_IDES2_E # -- Begin function _ZN2kc19impl_baseclass_list3mapEPFPNS_7impl_IDES2_E
	.p2align	5
	.type	_ZN2kc19impl_baseclass_list3mapEPFPNS_7impl_IDES2_E,@function
_ZN2kc19impl_baseclass_list3mapEPFPNS_7impl_IDES2_E: # @_ZN2kc19impl_baseclass_list3mapEPFPNS_7impl_IDES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 305
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1604_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_baseclass_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_baseclass_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1604_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1604:
	.size	_ZN2kc19impl_baseclass_list3mapEPFPNS_7impl_IDES2_E, .Lfunc_end1604-_ZN2kc19impl_baseclass_list3mapEPFPNS_7impl_IDES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_baseclass_list6filterEPFbPNS_7impl_IDEE # -- Begin function _ZN2kc19impl_baseclass_list6filterEPFbPNS_7impl_IDEE
	.p2align	5
	.type	_ZN2kc19impl_baseclass_list6filterEPFbPNS_7impl_IDEE,@function
_ZN2kc19impl_baseclass_list6filterEPFbPNS_7impl_IDEE: # @_ZN2kc19impl_baseclass_list6filterEPFbPNS_7impl_IDEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 305
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1605_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_baseclass_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_baseclass_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1605_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1605:
	.size	_ZN2kc19impl_baseclass_list6filterEPFbPNS_7impl_IDEE, .Lfunc_end1605-_ZN2kc19impl_baseclass_list6filterEPFbPNS_7impl_IDEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_baseclass_list6appendEPNS_7impl_IDE # -- Begin function _ZN2kc19impl_baseclass_list6appendEPNS_7impl_IDE
	.p2align	5
	.type	_ZN2kc19impl_baseclass_list6appendEPNS_7impl_IDE,@function
_ZN2kc19impl_baseclass_list6appendEPNS_7impl_IDE: # @_ZN2kc19impl_baseclass_list6appendEPNS_7impl_IDE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc19impl_baseclass_listE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc19impl_baseclass_listE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1606_2
	.p2align	4, , 16
.LBB1606_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1606_1
.LBB1606_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_baseclass_listE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_baseclass_listE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1606:
	.size	_ZN2kc19impl_baseclass_list6appendEPNS_7impl_IDE, .Lfunc_end1606-_ZN2kc19impl_baseclass_list6appendEPNS_7impl_IDE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_baseclass_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E # -- Begin function _ZN2kc19impl_baseclass_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.p2align	5
	.type	_ZN2kc19impl_baseclass_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E,@function
_ZN2kc19impl_baseclass_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E: # @_ZN2kc19impl_baseclass_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 305
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1607_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_baseclass_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_baseclass_listE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1607_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1607:
	.size	_ZN2kc19impl_baseclass_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E, .Lfunc_end1607-_ZN2kc19impl_baseclass_list5mergeEPS0_PFPNS_7impl_IDES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_baseclass_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E # -- Begin function _ZN2kc19impl_baseclass_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc19impl_baseclass_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E,@function
_ZN2kc19impl_baseclass_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E: # @_ZN2kc19impl_baseclass_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1608_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc7impl_IDE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc7impl_IDE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1608_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1608:
	.size	_ZN2kc19impl_baseclass_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E, .Lfunc_end1608-_ZN2kc19impl_baseclass_list6reduceEPNS_7impl_IDEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_28impl_addedphylumdeclarationsES2_ # -- Begin function _ZN2kc6concatEPKNS_28impl_addedphylumdeclarationsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_28impl_addedphylumdeclarationsES2_,@function
_ZN2kc6concatEPKNS_28impl_addedphylumdeclarationsES2_: # @_ZN2kc6concatEPKNS_28impl_addedphylumdeclarationsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 328
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1609_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_addedphylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_addedphylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1609_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1609:
	.size	_ZN2kc6concatEPKNS_28impl_addedphylumdeclarationsES2_, .Lfunc_end1609-_ZN2kc6concatEPKNS_28impl_addedphylumdeclarationsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc28impl_addedphylumdeclarations7reverseEv # -- Begin function _ZNK2kc28impl_addedphylumdeclarations7reverseEv
	.p2align	5
	.type	_ZNK2kc28impl_addedphylumdeclarations7reverseEv,@function
_ZNK2kc28impl_addedphylumdeclarations7reverseEv: # @_ZNK2kc28impl_addedphylumdeclarations7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1610_2
	.p2align	4, , 16
.LBB1610_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1610_1
	b	.LBB1610_3
.LBB1610_2:
	move	$s1, $s0
.LBB1610_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_addedphylumdeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc28impl_addedphylumdeclarationsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1610:
	.size	_ZNK2kc28impl_addedphylumdeclarations7reverseEv, .Lfunc_end1610-_ZNK2kc28impl_addedphylumdeclarations7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc28impl_addedphylumdeclarations4lastEv # -- Begin function _ZNK2kc28impl_addedphylumdeclarations4lastEv
	.p2align	5
	.type	_ZNK2kc28impl_addedphylumdeclarations4lastEv,@function
_ZNK2kc28impl_addedphylumdeclarations4lastEv: # @_ZNK2kc28impl_addedphylumdeclarations4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1611_5
	.p2align	4, , 16
.LBB1611_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1611_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1611_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_addedphylumdeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_addedphylumdeclarationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1611_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1611_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1611:
	.size	_ZNK2kc28impl_addedphylumdeclarations4lastEv, .Lfunc_end1611-_ZNK2kc28impl_addedphylumdeclarations4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc28impl_addedphylumdeclarations6is_nilEv # -- Begin function _ZNK2kc28impl_addedphylumdeclarations6is_nilEv
	.p2align	5
	.type	_ZNK2kc28impl_addedphylumdeclarations6is_nilEv,@function
_ZNK2kc28impl_addedphylumdeclarations6is_nilEv: # @_ZNK2kc28impl_addedphylumdeclarations6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1612:
	.size	_ZNK2kc28impl_addedphylumdeclarations6is_nilEv, .Lfunc_end1612-_ZNK2kc28impl_addedphylumdeclarations6is_nilEv
                                        # -- End function
	.globl	_ZN2kc28impl_addedphylumdeclarations3mapEPFPNS_27impl_addedphylumdeclarationES2_E # -- Begin function _ZN2kc28impl_addedphylumdeclarations3mapEPFPNS_27impl_addedphylumdeclarationES2_E
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarations3mapEPFPNS_27impl_addedphylumdeclarationES2_E,@function
_ZN2kc28impl_addedphylumdeclarations3mapEPFPNS_27impl_addedphylumdeclarationES2_E: # @_ZN2kc28impl_addedphylumdeclarations3mapEPFPNS_27impl_addedphylumdeclarationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 328
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1613_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_addedphylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_addedphylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1613_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1613:
	.size	_ZN2kc28impl_addedphylumdeclarations3mapEPFPNS_27impl_addedphylumdeclarationES2_E, .Lfunc_end1613-_ZN2kc28impl_addedphylumdeclarations3mapEPFPNS_27impl_addedphylumdeclarationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_addedphylumdeclarations6filterEPFbPNS_27impl_addedphylumdeclarationEE # -- Begin function _ZN2kc28impl_addedphylumdeclarations6filterEPFbPNS_27impl_addedphylumdeclarationEE
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarations6filterEPFbPNS_27impl_addedphylumdeclarationEE,@function
_ZN2kc28impl_addedphylumdeclarations6filterEPFbPNS_27impl_addedphylumdeclarationEE: # @_ZN2kc28impl_addedphylumdeclarations6filterEPFbPNS_27impl_addedphylumdeclarationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 328
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1614_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_addedphylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_addedphylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1614_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1614:
	.size	_ZN2kc28impl_addedphylumdeclarations6filterEPFbPNS_27impl_addedphylumdeclarationEE, .Lfunc_end1614-_ZN2kc28impl_addedphylumdeclarations6filterEPFbPNS_27impl_addedphylumdeclarationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_addedphylumdeclarations6appendEPNS_27impl_addedphylumdeclarationE # -- Begin function _ZN2kc28impl_addedphylumdeclarations6appendEPNS_27impl_addedphylumdeclarationE
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarations6appendEPNS_27impl_addedphylumdeclarationE,@function
_ZN2kc28impl_addedphylumdeclarations6appendEPNS_27impl_addedphylumdeclarationE: # @_ZN2kc28impl_addedphylumdeclarations6appendEPNS_27impl_addedphylumdeclarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc28impl_addedphylumdeclarationsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1615_2
	.p2align	4, , 16
.LBB1615_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1615_1
.LBB1615_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc28impl_addedphylumdeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc28impl_addedphylumdeclarationsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1615:
	.size	_ZN2kc28impl_addedphylumdeclarations6appendEPNS_27impl_addedphylumdeclarationE, .Lfunc_end1615-_ZN2kc28impl_addedphylumdeclarations6appendEPNS_27impl_addedphylumdeclarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_addedphylumdeclarations5mergeEPS0_PFPNS_27impl_addedphylumdeclarationES3_S3_E # -- Begin function _ZN2kc28impl_addedphylumdeclarations5mergeEPS0_PFPNS_27impl_addedphylumdeclarationES3_S3_E
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarations5mergeEPS0_PFPNS_27impl_addedphylumdeclarationES3_S3_E,@function
_ZN2kc28impl_addedphylumdeclarations5mergeEPS0_PFPNS_27impl_addedphylumdeclarationES3_S3_E: # @_ZN2kc28impl_addedphylumdeclarations5mergeEPS0_PFPNS_27impl_addedphylumdeclarationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 328
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1616_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc28impl_addedphylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc28impl_addedphylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1616_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1616:
	.size	_ZN2kc28impl_addedphylumdeclarations5mergeEPS0_PFPNS_27impl_addedphylumdeclarationES3_S3_E, .Lfunc_end1616-_ZN2kc28impl_addedphylumdeclarations5mergeEPS0_PFPNS_27impl_addedphylumdeclarationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_addedphylumdeclarations6reduceEPNS_27impl_addedphylumdeclarationEPFS2_S2_S2_E # -- Begin function _ZN2kc28impl_addedphylumdeclarations6reduceEPNS_27impl_addedphylumdeclarationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarations6reduceEPNS_27impl_addedphylumdeclarationEPFS2_S2_S2_E,@function
_ZN2kc28impl_addedphylumdeclarations6reduceEPNS_27impl_addedphylumdeclarationEPFS2_S2_S2_E: # @_ZN2kc28impl_addedphylumdeclarations6reduceEPNS_27impl_addedphylumdeclarationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1617_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc27impl_addedphylumdeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc27impl_addedphylumdeclarationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1617_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1617:
	.size	_ZN2kc28impl_addedphylumdeclarations6reduceEPNS_27impl_addedphylumdeclarationEPFS2_S2_S2_E, .Lfunc_end1617-_ZN2kc28impl_addedphylumdeclarations6reduceEPNS_27impl_addedphylumdeclarationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_30impl_countedphylumdeclarationsES2_ # -- Begin function _ZN2kc6concatEPKNS_30impl_countedphylumdeclarationsES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_30impl_countedphylumdeclarationsES2_,@function
_ZN2kc6concatEPKNS_30impl_countedphylumdeclarationsES2_: # @_ZN2kc6concatEPKNS_30impl_countedphylumdeclarationsES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 331
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1618_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc30impl_countedphylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc30impl_countedphylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1618_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1618:
	.size	_ZN2kc6concatEPKNS_30impl_countedphylumdeclarationsES2_, .Lfunc_end1618-_ZN2kc6concatEPKNS_30impl_countedphylumdeclarationsES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc30impl_countedphylumdeclarations7reverseEv # -- Begin function _ZNK2kc30impl_countedphylumdeclarations7reverseEv
	.p2align	5
	.type	_ZNK2kc30impl_countedphylumdeclarations7reverseEv,@function
_ZNK2kc30impl_countedphylumdeclarations7reverseEv: # @_ZNK2kc30impl_countedphylumdeclarations7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	addi.d	$s3, $a0, %pc_lo12(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	ld.d	$a0, $fp, 0
	st.d	$s3, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1619_2
	.p2align	4, , 16
.LBB1619_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$s2, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$s3, $a0, 0
	ld.d	$a0, $fp, 0
	st.d	$s2, $s1, 8
	st.d	$s0, $s1, 16
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$s0, $s1
	bnez	$a0, .LBB1619_1
	b	.LBB1619_3
.LBB1619_2:
	move	$s1, $s0
.LBB1619_3:                             # %.loopexit
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_countedphylumdeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc30impl_countedphylumdeclarationsE)
	move	$a0, $s1
	move	$a3, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1619:
	.size	_ZNK2kc30impl_countedphylumdeclarations7reverseEv, .Lfunc_end1619-_ZNK2kc30impl_countedphylumdeclarations7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc30impl_countedphylumdeclarations4lastEv # -- Begin function _ZNK2kc30impl_countedphylumdeclarations4lastEv
	.p2align	5
	.type	_ZNK2kc30impl_countedphylumdeclarations4lastEv,@function
_ZNK2kc30impl_countedphylumdeclarations4lastEv: # @_ZNK2kc30impl_countedphylumdeclarations4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1620_5
	.p2align	4, , 16
.LBB1620_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1620_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1620_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc29impl_countedphylumdeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc29impl_countedphylumdeclarationE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1620_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1620_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1620:
	.size	_ZNK2kc30impl_countedphylumdeclarations4lastEv, .Lfunc_end1620-_ZNK2kc30impl_countedphylumdeclarations4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc30impl_countedphylumdeclarations6is_nilEv # -- Begin function _ZNK2kc30impl_countedphylumdeclarations6is_nilEv
	.p2align	5
	.type	_ZNK2kc30impl_countedphylumdeclarations6is_nilEv,@function
_ZNK2kc30impl_countedphylumdeclarations6is_nilEv: # @_ZNK2kc30impl_countedphylumdeclarations6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1621:
	.size	_ZNK2kc30impl_countedphylumdeclarations6is_nilEv, .Lfunc_end1621-_ZNK2kc30impl_countedphylumdeclarations6is_nilEv
                                        # -- End function
	.globl	_ZN2kc30impl_countedphylumdeclarations3mapEPFPNS_29impl_countedphylumdeclarationES2_E # -- Begin function _ZN2kc30impl_countedphylumdeclarations3mapEPFPNS_29impl_countedphylumdeclarationES2_E
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarations3mapEPFPNS_29impl_countedphylumdeclarationES2_E,@function
_ZN2kc30impl_countedphylumdeclarations3mapEPFPNS_29impl_countedphylumdeclarationES2_E: # @_ZN2kc30impl_countedphylumdeclarations3mapEPFPNS_29impl_countedphylumdeclarationES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 331
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1622_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc30impl_countedphylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc30impl_countedphylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1622_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1622:
	.size	_ZN2kc30impl_countedphylumdeclarations3mapEPFPNS_29impl_countedphylumdeclarationES2_E, .Lfunc_end1622-_ZN2kc30impl_countedphylumdeclarations3mapEPFPNS_29impl_countedphylumdeclarationES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_countedphylumdeclarations6filterEPFbPNS_29impl_countedphylumdeclarationEE # -- Begin function _ZN2kc30impl_countedphylumdeclarations6filterEPFbPNS_29impl_countedphylumdeclarationEE
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarations6filterEPFbPNS_29impl_countedphylumdeclarationEE,@function
_ZN2kc30impl_countedphylumdeclarations6filterEPFbPNS_29impl_countedphylumdeclarationEE: # @_ZN2kc30impl_countedphylumdeclarations6filterEPFbPNS_29impl_countedphylumdeclarationEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 331
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1623_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc30impl_countedphylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc30impl_countedphylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1623_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1623:
	.size	_ZN2kc30impl_countedphylumdeclarations6filterEPFbPNS_29impl_countedphylumdeclarationEE, .Lfunc_end1623-_ZN2kc30impl_countedphylumdeclarations6filterEPFbPNS_29impl_countedphylumdeclarationEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_countedphylumdeclarations6appendEPNS_29impl_countedphylumdeclarationE # -- Begin function _ZN2kc30impl_countedphylumdeclarations6appendEPNS_29impl_countedphylumdeclarationE
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarations6appendEPNS_29impl_countedphylumdeclarationE,@function
_ZN2kc30impl_countedphylumdeclarations6appendEPNS_29impl_countedphylumdeclarationE: # @_ZN2kc30impl_countedphylumdeclarations6appendEPNS_29impl_countedphylumdeclarationE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTVN2kc30impl_countedphylumdeclarationsE+16)
	ld.d	$a1, $fp, 0
	st.d	$a0, $s0, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $s0, 8
	ld.d	$a1, $a1, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1624_2
	.p2align	4, , 16
.LBB1624_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1624_1
.LBB1624_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc30impl_countedphylumdeclarationsE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc30impl_countedphylumdeclarationsE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1624:
	.size	_ZN2kc30impl_countedphylumdeclarations6appendEPNS_29impl_countedphylumdeclarationE, .Lfunc_end1624-_ZN2kc30impl_countedphylumdeclarations6appendEPNS_29impl_countedphylumdeclarationE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_countedphylumdeclarations5mergeEPS0_PFPNS_29impl_countedphylumdeclarationES3_S3_E # -- Begin function _ZN2kc30impl_countedphylumdeclarations5mergeEPS0_PFPNS_29impl_countedphylumdeclarationES3_S3_E
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarations5mergeEPS0_PFPNS_29impl_countedphylumdeclarationES3_S3_E,@function
_ZN2kc30impl_countedphylumdeclarations5mergeEPS0_PFPNS_29impl_countedphylumdeclarationES3_S3_E: # @_ZN2kc30impl_countedphylumdeclarations5mergeEPS0_PFPNS_29impl_countedphylumdeclarationES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 331
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1625_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc30impl_countedphylumdeclarationsE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc30impl_countedphylumdeclarationsE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1625_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1625:
	.size	_ZN2kc30impl_countedphylumdeclarations5mergeEPS0_PFPNS_29impl_countedphylumdeclarationES3_S3_E, .Lfunc_end1625-_ZN2kc30impl_countedphylumdeclarations5mergeEPS0_PFPNS_29impl_countedphylumdeclarationES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_countedphylumdeclarations6reduceEPNS_29impl_countedphylumdeclarationEPFS2_S2_S2_E # -- Begin function _ZN2kc30impl_countedphylumdeclarations6reduceEPNS_29impl_countedphylumdeclarationEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarations6reduceEPNS_29impl_countedphylumdeclarationEPFS2_S2_S2_E,@function
_ZN2kc30impl_countedphylumdeclarations6reduceEPNS_29impl_countedphylumdeclarationEPFS2_S2_S2_E: # @_ZN2kc30impl_countedphylumdeclarations6reduceEPNS_29impl_countedphylumdeclarationEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1626_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc29impl_countedphylumdeclarationE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc29impl_countedphylumdeclarationE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1626_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1626:
	.size	_ZN2kc30impl_countedphylumdeclarations6reduceEPNS_29impl_countedphylumdeclarationEPFS2_S2_S2_E, .Lfunc_end1626-_ZN2kc30impl_countedphylumdeclarations6reduceEPNS_29impl_countedphylumdeclarationEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc6concatEPKNS_19impl_bindingidmarksES2_ # -- Begin function _ZN2kc6concatEPKNS_19impl_bindingidmarksES2_
	.p2align	5
	.type	_ZN2kc6concatEPKNS_19impl_bindingidmarksES2_,@function
_ZN2kc6concatEPKNS_19impl_bindingidmarksES2_: # @_ZN2kc6concatEPKNS_19impl_bindingidmarksES2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 337
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list9do_concatEPKNS_20impl_abstract_phylumENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1627_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_bindingidmarksE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_bindingidmarksE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1627_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1627:
	.size	_ZN2kc6concatEPKNS_19impl_bindingidmarksES2_, .Lfunc_end1627-_ZN2kc6concatEPKNS_19impl_bindingidmarksES2_
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_bindingidmarks7reverseEv # -- Begin function _ZNK2kc19impl_bindingidmarks7reverseEv
	.p2align	5
	.type	_ZNK2kc19impl_bindingidmarks7reverseEv,@function
_ZNK2kc19impl_bindingidmarks7reverseEv: # @_ZNK2kc19impl_bindingidmarks7reverseEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$s0, $a0
	pcaddu18i	$ra, %call36(_ZN2kc17NilbindingidmarksEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a2, $a1, 8
	move	$fp, $a0
	ori	$a1, $zero, 1
	move	$a0, $s0
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1628_2
	.p2align	4, , 16
.LBB1628_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18ConsbindingidmarksEPNS_18impl_bindingidmarkEPNS_19impl_bindingidmarksE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a2, $a1, 8
	move	$fp, $a0
	ori	$a1, $zero, 1
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $s0
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1628_1
.LBB1628_2:                             # %_ZNK2kc18impl_abstract_list10do_reverseEPKNS_20impl_abstract_phylumENS_14enum_operatorsE.exit
	beqz	$fp, .LBB1628_4
# %bb.3:
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_bindingidmarksE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_bindingidmarksE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1628_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end1628:
	.size	_ZNK2kc19impl_bindingidmarks7reverseEv, .Lfunc_end1628-_ZNK2kc19impl_bindingidmarks7reverseEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_bindingidmarks4lastEv # -- Begin function _ZNK2kc19impl_bindingidmarks4lastEv
	.p2align	5
	.type	_ZNK2kc19impl_bindingidmarks4lastEv,@function
_ZNK2kc19impl_bindingidmarks4lastEv:    # @_ZNK2kc19impl_bindingidmarks4lastEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1629_5
	.p2align	4, , 16
.LBB1629_1:                             # %.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s0, $fp
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bnez	$a0, .LBB1629_1
# %bb.2:                                # %_ZNK2kc18impl_abstract_list4lastEv.exit
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $s0
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1629_4
# %bb.3:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_bindingidmarkE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_bindingidmarkE)
	move	$a3, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1629_4:
	move	$a0, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB1629_5:
	pcalau12i	$a0, %got_pc_hi20(stdout)
	ld.d	$a0, $a0, %got_pc_lo12(stdout)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(fflush)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(stderr)
	ld.d	$a0, $a0, %got_pc_lo12(stderr)
	ld.d	$s0, $a0, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum11phylum_nameEv)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	pcaddu18i	$ra, %call36(fprintf)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	pcaddu18i	$ra, %call36(exit)
	jirl	$ra, $ra, 0
.Lfunc_end1629:
	.size	_ZNK2kc19impl_bindingidmarks4lastEv, .Lfunc_end1629-_ZNK2kc19impl_bindingidmarks4lastEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc19impl_bindingidmarks6is_nilEv # -- Begin function _ZNK2kc19impl_bindingidmarks6is_nilEv
	.p2align	5
	.type	_ZNK2kc19impl_bindingidmarks6is_nilEv,@function
_ZNK2kc19impl_bindingidmarks6is_nilEv:  # @_ZNK2kc19impl_bindingidmarks6is_nilEv
# %bb.0:
	ld.d	$a1, $a0, 8
	ld.d	$a0, $a0, 16
	or	$a0, $a1, $a0
	sltui	$a0, $a0, 1
	ret
.Lfunc_end1630:
	.size	_ZNK2kc19impl_bindingidmarks6is_nilEv, .Lfunc_end1630-_ZNK2kc19impl_bindingidmarks6is_nilEv
                                        # -- End function
	.globl	_ZN2kc19impl_bindingidmarks3mapEPFPNS_18impl_bindingidmarkES2_E # -- Begin function _ZN2kc19impl_bindingidmarks3mapEPFPNS_18impl_bindingidmarkES2_E
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarks3mapEPFPNS_18impl_bindingidmarkES2_E,@function
_ZN2kc19impl_bindingidmarks3mapEPFPNS_18impl_bindingidmarkES2_E: # @_ZN2kc19impl_bindingidmarks3mapEPFPNS_18impl_bindingidmarkES2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 337
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list6do_mapEPFPNS_20impl_abstract_phylumES2_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1631_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_bindingidmarksE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_bindingidmarksE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1631_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1631:
	.size	_ZN2kc19impl_bindingidmarks3mapEPFPNS_18impl_bindingidmarkES2_E, .Lfunc_end1631-_ZN2kc19impl_bindingidmarks3mapEPFPNS_18impl_bindingidmarkES2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_bindingidmarks6filterEPFbPNS_18impl_bindingidmarkEE # -- Begin function _ZN2kc19impl_bindingidmarks6filterEPFbPNS_18impl_bindingidmarkEE
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarks6filterEPFbPNS_18impl_bindingidmarkEE,@function
_ZN2kc19impl_bindingidmarks6filterEPFbPNS_18impl_bindingidmarkEE: # @_ZN2kc19impl_bindingidmarks6filterEPFbPNS_18impl_bindingidmarkEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a2, $zero, 337
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_filterEPFbPNS_20impl_abstract_phylumEENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1632_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_bindingidmarksE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_bindingidmarksE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1632_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1632:
	.size	_ZN2kc19impl_bindingidmarks6filterEPFbPNS_18impl_bindingidmarkEE, .Lfunc_end1632-_ZN2kc19impl_bindingidmarks6filterEPFbPNS_18impl_bindingidmarkEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_bindingidmarks6appendEPNS_18impl_bindingidmarkE # -- Begin function _ZN2kc19impl_bindingidmarks6appendEPNS_18impl_bindingidmarkE
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarks6appendEPNS_18impl_bindingidmarkE,@function
_ZN2kc19impl_bindingidmarks6appendEPNS_18impl_bindingidmarkE: # @_ZN2kc19impl_bindingidmarks6appendEPNS_18impl_bindingidmarkE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a1
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZN2kc17NilbindingidmarksEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	ld.d	$a1, $a1, 88
	move	$s0, $a0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bnez	$a0, .LBB1633_2
	.p2align	4, , 16
.LBB1633_1:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	ori	$a1, $zero, 1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 88
	move	$a0, $fp
	jirl	$ra, $a1, 0
	beqz	$a0, .LBB1633_1
.LBB1633_2:                             # %.loopexit
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	move	$a0, $fp
	move	$a1, $zero
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 16
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc18impl_abstract_listE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc18impl_abstract_listE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc19impl_bindingidmarksE)
	addi.d	$a2, $a0, %pc_lo12(_ZTIN2kc19impl_bindingidmarksE)
	move	$a0, $fp
	move	$a3, $zero
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.Lfunc_end1633:
	.size	_ZN2kc19impl_bindingidmarks6appendEPNS_18impl_bindingidmarkE, .Lfunc_end1633-_ZN2kc19impl_bindingidmarks6appendEPNS_18impl_bindingidmarkE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_bindingidmarks5mergeEPS0_PFPNS_18impl_bindingidmarkES3_S3_E # -- Begin function _ZN2kc19impl_bindingidmarks5mergeEPS0_PFPNS_18impl_bindingidmarkES3_S3_E
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarks5mergeEPS0_PFPNS_18impl_bindingidmarkES3_S3_E,@function
_ZN2kc19impl_bindingidmarks5mergeEPS0_PFPNS_18impl_bindingidmarkES3_S3_E: # @_ZN2kc19impl_bindingidmarks5mergeEPS0_PFPNS_18impl_bindingidmarkES3_S3_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ori	$a3, $zero, 337
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8do_mergeEPS0_PFPNS_20impl_abstract_phylumES3_S3_ENS_14enum_operatorsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1634_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc19impl_bindingidmarksE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc19impl_bindingidmarksE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1634_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1634:
	.size	_ZN2kc19impl_bindingidmarks5mergeEPS0_PFPNS_18impl_bindingidmarkES3_S3_E, .Lfunc_end1634-_ZN2kc19impl_bindingidmarks5mergeEPS0_PFPNS_18impl_bindingidmarkES3_S3_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_bindingidmarks6reduceEPNS_18impl_bindingidmarkEPFS2_S2_S2_E # -- Begin function _ZN2kc19impl_bindingidmarks6reduceEPNS_18impl_bindingidmarkEPFS2_S2_S2_E
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarks6reduceEPNS_18impl_bindingidmarkEPFS2_S2_S2_E,@function
_ZN2kc19impl_bindingidmarks6reduceEPNS_18impl_bindingidmarkEPFS2_S2_S2_E: # @_ZN2kc19impl_bindingidmarks6reduceEPNS_18impl_bindingidmarkEPFS2_S2_S2_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list9do_reduceEPNS_20impl_abstract_phylumEPFS2_S2_S2_E)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB1635_2
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a1, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	pcalau12i	$a2, %pc_hi20(_ZTIN2kc18impl_bindingidmarkE)
	addi.d	$a2, $a2, %pc_lo12(_ZTIN2kc18impl_bindingidmarkE)
	move	$a3, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(__dynamic_cast)
	jr	$t8
.LBB1635_2:
	move	$a0, $zero
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1635:
	.size	_ZN2kc19impl_bindingidmarks6reduceEPNS_18impl_bindingidmarkEPFS2_S2_S2_E, .Lfunc_end1635-_ZN2kc19impl_bindingidmarks6reduceEPNS_18impl_bindingidmarkEPFS2_S2_S2_E
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK2kc20impl_abstract_phylum4copyEb # -- Begin function _ZNK2kc20impl_abstract_phylum4copyEb
	.p2align	5
	.type	_ZNK2kc20impl_abstract_phylum4copyEb,@function
_ZNK2kc20impl_abstract_phylum4copyEb:   # @_ZNK2kc20impl_abstract_phylum4copyEb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	fst.d	$fs0, $sp, 64                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 56, -64
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 0
	move	$s0, $a1
	move	$a0, $fp
	jirl	$ra, $a2, 0
	bstrpick.d	$a0, $a0, 31, 0
	ori	$s2, $zero, 56
	mul.d	$a0, $a0, $s2
	pcalau12i	$a1, %pc_hi20(_ZN2kc13operator_infoE)
	ld.d	$a2, $fp, 0
	addi.d	$s3, $a1, %pc_lo12(_ZN2kc13operator_infoE)
	add.d	$a0, $s3, $a0
	ld.w	$s1, $a0, 20
	ld.d	$a1, $a2, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	bstrpick.d	$a0, $a0, 31, 0
	mul.d	$a0, $a0, $s2
	add.d	$s3, $s3, $a0
	ld.wu	$a0, $s3, 20
	slli.d	$a1, $a0, 4
	alsl.d	$a0, $a0, $a1, 3
	pcalau12i	$a1, %pc_hi20(_ZN2kc11phylum_infoE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc11phylum_infoE)
	add.d	$a0, $a1, $a0
	ld.wu	$a0, $a0, 16
	beqz	$a0, .LBB1636_3
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZN2kc26kc_storageclass_still_uniqE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc26kc_storageclass_still_uniqE)
	ldx.bu	$a0, $a1, $a0
	beqz	$a0, .LBB1636_3
# %bb.2:
	move	$s2, $fp
	b	.LBB1636_23
.LBB1636_3:
	addi.d	$a0, $s1, -1
	ori	$a1, $zero, 4
	bltu	$a1, $a0, .LBB1636_13
# %bb.4:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI1636_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI1636_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB1636_5:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc27impl_nocasestring_NoCaseStrE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZTIN2kc27impl_nocasestring_NoCaseStrE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $fp
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 8
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc14mknocasestringEPKci)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	bnez	$s0, .LBB1636_22
	b	.LBB1636_23
.LBB1636_6:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc21impl_voidptr__VoidPtrE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZTIN2kc21impl_voidptr__VoidPtrE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $fp
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.d	$s2, $a0, 8
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc21impl_voidptr__VoidPtrE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc21impl_voidptr__VoidPtrE)
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, 16
	st.d	$a1, $s3, 0
	st.d	$s2, $s3, 8
	ld.bu	$a1, $a0, 321
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB1636_19
# %bb.7:
	ld.d	$a1, $a0, 288
	addi.d	$a2, $a0, 288
	beq	$a1, $a2, .LBB1636_19
# %bb.8:
	ld.d	$a0, $a0, 312
	st.d	$s3, $sp, 8
	addi.d	$a0, $a0, 208
	b	.LBB1636_20
.LBB1636_9:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc15impl_real__RealE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZTIN2kc15impl_real__RealE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $fp
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	fld.d	$fs0, $a0, 8
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc15impl_real__RealE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc15impl_real__RealE)
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, 16
	st.d	$a1, $s3, 0
	fst.d	$fs0, $s3, 8
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_15impl_real__RealEEET_S4_)
	jirl	$ra, $ra, 0
	b	.LBB1636_11
.LBB1636_10:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc17impl_integer__IntE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZTIN2kc17impl_integer__IntE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $fp
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.w	$s2, $a0, 8
	ori	$a0, $zero, 16
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(_ZTVN2kc17impl_integer__IntE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZTVN2kc17impl_integer__IntE)
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2kc10hashtablesE+8)
	ld.d	$a0, $a0, %pc_lo12(_ZN2kc10hashtablesE+8)
	addi.d	$a1, $a1, 16
	st.d	$a1, $s3, 0
	st.w	$s2, $s3, 8
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN2kc18hashtable_struct_t15ht_check_insertIPNS_17impl_integer__IntEEET_S4_)
	jirl	$ra, $ra, 0
.LBB1636_11:
	move	$s2, $a0
	xor	$a0, $a0, $s3
	b	.LBB1636_21
.LBB1636_12:
	pcalau12i	$a0, %got_pc_hi20(_ZTIN2kc20impl_casestring__StrE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZTIN2kc20impl_casestring__StrE)
	pcalau12i	$a0, %pc_hi20(_ZTIN2kc20impl_abstract_phylumE)
	addi.d	$a1, $a0, %pc_lo12(_ZTIN2kc20impl_abstract_phylumE)
	move	$a0, $fp
	move	$a3, $zero
	pcaddu18i	$ra, %call36(__dynamic_cast)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 8
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	bnez	$s0, .LBB1636_22
	b	.LBB1636_23
.LBB1636_13:
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $zero
	jirl	$ra, $a2, 0
	beqz	$a0, .LBB1636_16
# %bb.14:                               # %.lr.ph.preheader
	addi.d	$s4, $sp, 8
	ori	$s2, $zero, 1
	.p2align	4, , 16
.LBB1636_15:                            # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum4copyEb)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 0
	st.d	$a0, $s4, 0
	ld.d	$a2, $a1, 8
	move	$a0, $fp
	move	$a1, $s2
	jirl	$ra, $a2, 0
	addi.d	$s4, $s4, 8
	addi.w	$s2, $s2, 1
	bnez	$a0, .LBB1636_15
.LBB1636_16:                            # %._crit_edge
	ld.d	$a0, $s3, 8
	ori	$a1, $zero, 7
	bltu	$a1, $a0, .LBB1636_38
# %bb.17:                               # %._crit_edge
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI1636_1)
	addi.d	$a1, $a1, %pc_lo12(.LJTI1636_1)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB1636_18:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	move	$a1, $zero
	b	.LBB1636_29
.LBB1636_19:
	st.d	$s3, $sp, 8
	addi.d	$a0, $a0, 192
.LBB1636_20:                            # %_ZN2kc9mkvoidptrEPv.exit
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_)
	jirl	$ra, $ra, 0
	ld.d	$s2, $a0, 32
	xor	$a0, $s2, $s3
.LBB1636_21:
	sltui	$a0, $a0, 1
	ld.d	$a1, $s3, 0
	ori	$a2, $zero, 64
	masknez	$a2, $a2, $a0
	ori	$a3, $zero, 48
	maskeqz	$a0, $a3, $a0
	or	$a0, $a0, $a2
	ldx.d	$a1, $a1, $a0
	move	$a0, $s3
	jirl	$ra, $a1, 0
	beqz	$s0, .LBB1636_23
.LBB1636_22:
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2kc15copy_attributesENS_10enum_phylaEPKNS_20impl_abstract_phylumEPS1_)
	jirl	$ra, $ra, 0
.LBB1636_23:
	move	$a0, $s2
	fld.d	$fs0, $sp, 64                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB1636_24:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
	ld.d	$a3, $sp, 24
	ld.d	$a4, $sp, 32
	b	.LBB1636_32
.LBB1636_25:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
	b	.LBB1636_30
.LBB1636_26:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
	ld.d	$a3, $sp, 24
	b	.LBB1636_31
.LBB1636_27:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
	ld.d	$a3, $sp, 24
	ld.d	$a4, $sp, 32
	ld.d	$a5, $sp, 40
	ld.d	$a6, $sp, 48
	ld.d	$a7, $sp, 56
	b	.LBB1636_35
.LBB1636_28:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a1, $sp, 8
.LBB1636_29:
	move	$a2, $zero
.LBB1636_30:
	move	$a3, $zero
.LBB1636_31:
	move	$a4, $zero
.LBB1636_32:
	move	$a5, $zero
.LBB1636_33:
	move	$a6, $zero
.LBB1636_34:
	move	$a7, $zero
.LBB1636_35:
	pcaddu18i	$ra, %call36(_ZN2kc9kc_createENS_14enum_operatorsEPNS_20impl_abstract_phylumES2_S2_S2_S2_S2_S2_)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	bnez	$s0, .LBB1636_22
	b	.LBB1636_23
.LBB1636_36:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
	ld.d	$a3, $sp, 24
	ld.d	$a4, $sp, 32
	ld.d	$a5, $sp, 40
	b	.LBB1636_33
.LBB1636_37:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $a0, 0
	move	$a0, $fp
	jirl	$ra, $a1, 0
	ld.d	$a1, $sp, 8
	ld.d	$a2, $sp, 16
	ld.d	$a3, $sp, 24
	ld.d	$a4, $sp, 32
	ld.d	$a5, $sp, 40
	ld.d	$a6, $sp, 48
	b	.LBB1636_34
.LBB1636_38:
	pcalau12i	$a0, %pc_hi20(.L.str.496)
	addi.d	$a0, $a0, %pc_lo12(.L.str.496)
	pcalau12i	$a1, %pc_hi20(.L.str.513)
	addi.d	$a2, $a1, %pc_lo12(.L.str.513)
	lu12i.w	$a1, 3
	ori	$a1, $a1, 1143
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
.Lfunc_end1636:
	.size	_ZNK2kc20impl_abstract_phylum4copyEb, .Lfunc_end1636-_ZNK2kc20impl_abstract_phylum4copyEb
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI1636_0:
	.word	.LBB1636_5-.LJTI1636_0
	.word	.LBB1636_12-.LJTI1636_0
	.word	.LBB1636_9-.LJTI1636_0
	.word	.LBB1636_10-.LJTI1636_0
	.word	.LBB1636_6-.LJTI1636_0
.LJTI1636_1:
	.word	.LBB1636_18-.LJTI1636_1
	.word	.LBB1636_28-.LJTI1636_1
	.word	.LBB1636_25-.LJTI1636_1
	.word	.LBB1636_26-.LJTI1636_1
	.word	.LBB1636_24-.LJTI1636_1
	.word	.LBB1636_36-.LJTI1636_1
	.word	.LBB1636_37-.LJTI1636_1
	.word	.LBB1636_27-.LJTI1636_1
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE,"axG",@progbits,_ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE,comdat
	.weak	_ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE # -- Begin function _ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE,@function
_ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE: # @_ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	ld.d	$a2, $a2, 32
	jr	$a2
.Lfunc_end1637:
	.size	_ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE, .Lfunc_end1637-_ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE,"axG",@progbits,_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE,comdat
	.weak	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE # -- Begin function _ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE,@function
_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE: # @_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
# %bb.0:
	ret
.Lfunc_end1638:
	.size	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE, .Lfunc_end1638-_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_,"axG",@progbits,_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_,comdat
	.weak	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_ # -- Begin function _ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_,@function
_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_: # @_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
# %bb.0:
	ret
.Lfunc_end1639:
	.size	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_, .Lfunc_end1639-_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylum11post_createEv,"axG",@progbits,_ZN2kc20impl_abstract_phylum11post_createEv,comdat
	.weak	_ZN2kc20impl_abstract_phylum11post_createEv # -- Begin function _ZN2kc20impl_abstract_phylum11post_createEv
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum11post_createEv,@function
_ZN2kc20impl_abstract_phylum11post_createEv: # @_ZN2kc20impl_abstract_phylum11post_createEv
# %bb.0:
	ret
.Lfunc_end1640:
	.size	_ZN2kc20impl_abstract_phylum11post_createEv, .Lfunc_end1640-_ZN2kc20impl_abstract_phylum11post_createEv
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylumD0Ev,"axG",@progbits,_ZN2kc20impl_abstract_phylumD0Ev,comdat
	.weak	_ZN2kc20impl_abstract_phylumD0Ev # -- Begin function _ZN2kc20impl_abstract_phylumD0Ev
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylumD0Ev,@function
_ZN2kc20impl_abstract_phylumD0Ev:       # @_ZN2kc20impl_abstract_phylumD0Ev
# %bb.0:
	amswap.w	$zero, $ra, $zero
.Lfunc_end1641:
	.size	_ZN2kc20impl_abstract_phylumD0Ev, .Lfunc_end1641-_ZN2kc20impl_abstract_phylumD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv,"axG",@progbits,_ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv,comdat
	.weak	_ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv # -- Begin function _ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv,@function
_ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv: # @_ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv
# %bb.0:
	ori	$a0, $zero, 338
	ret
.Lfunc_end1642:
	.size	_ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv, .Lfunc_end1642-_ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev,"axG",@progbits,_ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev,comdat
	.weak	_ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev # -- Begin function _ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev
	.p2align	5
	.type	_ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev,@function
_ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev: # @_ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1643:
	.size	_ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev, .Lfunc_end1643-_ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_bindingidmarks8prod_selEv,"axG",@progbits,_ZNK2kc19impl_bindingidmarks8prod_selEv,comdat
	.weak	_ZNK2kc19impl_bindingidmarks8prod_selEv # -- Begin function _ZNK2kc19impl_bindingidmarks8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_bindingidmarks8prod_selEv,@function
_ZNK2kc19impl_bindingidmarks8prod_selEv: # @_ZNK2kc19impl_bindingidmarks8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 337
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1644:
	.size	_ZNK2kc19impl_bindingidmarks8prod_selEv, .Lfunc_end1644-_ZNK2kc19impl_bindingidmarks8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc19impl_bindingidmarksD0Ev,"axG",@progbits,_ZN2kc19impl_bindingidmarksD0Ev,comdat
	.weak	_ZN2kc19impl_bindingidmarksD0Ev # -- Begin function _ZN2kc19impl_bindingidmarksD0Ev
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarksD0Ev,@function
_ZN2kc19impl_bindingidmarksD0Ev:        # @_ZN2kc19impl_bindingidmarksD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1645:
	.size	_ZN2kc19impl_bindingidmarksD0Ev, .Lfunc_end1645-_ZN2kc19impl_bindingidmarksD0Ev
                                        # -- End function
	.section	.text._ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv,"axG",@progbits,_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv,comdat
	.weak	_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv # -- Begin function _ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv
	.p2align	5
	.type	_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv,@function
_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv: # @_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv
# %bb.0:
	ori	$a0, $zero, 332
	ret
.Lfunc_end1646:
	.size	_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv, .Lfunc_end1646-_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev,"axG",@progbits,_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev,comdat
	.weak	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev # -- Begin function _ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev
	.p2align	5
	.type	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev,@function
_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev: # @_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1647:
	.size	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev, .Lfunc_end1647-_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc30impl_countedphylumdeclarations8prod_selEv,"axG",@progbits,_ZNK2kc30impl_countedphylumdeclarations8prod_selEv,comdat
	.weak	_ZNK2kc30impl_countedphylumdeclarations8prod_selEv # -- Begin function _ZNK2kc30impl_countedphylumdeclarations8prod_selEv
	.p2align	5
	.type	_ZNK2kc30impl_countedphylumdeclarations8prod_selEv,@function
_ZNK2kc30impl_countedphylumdeclarations8prod_selEv: # @_ZNK2kc30impl_countedphylumdeclarations8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 331
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1648:
	.size	_ZNK2kc30impl_countedphylumdeclarations8prod_selEv, .Lfunc_end1648-_ZNK2kc30impl_countedphylumdeclarations8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc30impl_countedphylumdeclarationsD0Ev,"axG",@progbits,_ZN2kc30impl_countedphylumdeclarationsD0Ev,comdat
	.weak	_ZN2kc30impl_countedphylumdeclarationsD0Ev # -- Begin function _ZN2kc30impl_countedphylumdeclarationsD0Ev
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarationsD0Ev,@function
_ZN2kc30impl_countedphylumdeclarationsD0Ev: # @_ZN2kc30impl_countedphylumdeclarationsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1649:
	.size	_ZN2kc30impl_countedphylumdeclarationsD0Ev, .Lfunc_end1649-_ZN2kc30impl_countedphylumdeclarationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv,"axG",@progbits,_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv,comdat
	.weak	_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv # -- Begin function _ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv
	.p2align	5
	.type	_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv,@function
_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv: # @_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv
# %bb.0:
	ori	$a0, $zero, 329
	ret
.Lfunc_end1650:
	.size	_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv, .Lfunc_end1650-_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev,"axG",@progbits,_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev,comdat
	.weak	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev # -- Begin function _ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev
	.p2align	5
	.type	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev,@function
_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev: # @_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1651:
	.size	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev, .Lfunc_end1651-_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc28impl_addedphylumdeclarations8prod_selEv,"axG",@progbits,_ZNK2kc28impl_addedphylumdeclarations8prod_selEv,comdat
	.weak	_ZNK2kc28impl_addedphylumdeclarations8prod_selEv # -- Begin function _ZNK2kc28impl_addedphylumdeclarations8prod_selEv
	.p2align	5
	.type	_ZNK2kc28impl_addedphylumdeclarations8prod_selEv,@function
_ZNK2kc28impl_addedphylumdeclarations8prod_selEv: # @_ZNK2kc28impl_addedphylumdeclarations8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 328
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1652:
	.size	_ZNK2kc28impl_addedphylumdeclarations8prod_selEv, .Lfunc_end1652-_ZNK2kc28impl_addedphylumdeclarations8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc28impl_addedphylumdeclarationsD0Ev,"axG",@progbits,_ZN2kc28impl_addedphylumdeclarationsD0Ev,comdat
	.weak	_ZN2kc28impl_addedphylumdeclarationsD0Ev # -- Begin function _ZN2kc28impl_addedphylumdeclarationsD0Ev
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarationsD0Ev,@function
_ZN2kc28impl_addedphylumdeclarationsD0Ev: # @_ZN2kc28impl_addedphylumdeclarationsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1653:
	.size	_ZN2kc28impl_addedphylumdeclarationsD0Ev, .Lfunc_end1653-_ZN2kc28impl_addedphylumdeclarationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_problem_Problem68prod_selEv,"axG",@progbits,_ZNK2kc21impl_problem_Problem68prod_selEv,comdat
	.weak	_ZNK2kc21impl_problem_Problem68prod_selEv # -- Begin function _ZNK2kc21impl_problem_Problem68prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem68prod_selEv,@function
_ZNK2kc21impl_problem_Problem68prod_selEv: # @_ZNK2kc21impl_problem_Problem68prod_selEv
# %bb.0:
	ori	$a0, $zero, 326
	ret
.Lfunc_end1654:
	.size	_ZNK2kc21impl_problem_Problem68prod_selEv, .Lfunc_end1654-_ZNK2kc21impl_problem_Problem68prod_selEv
                                        # -- End function
	.section	.text._ZN2kc21impl_problem_Problem6D0Ev,"axG",@progbits,_ZN2kc21impl_problem_Problem6D0Ev,comdat
	.weak	_ZN2kc21impl_problem_Problem6D0Ev # -- Begin function _ZN2kc21impl_problem_Problem6D0Ev
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem6D0Ev,@function
_ZN2kc21impl_problem_Problem6D0Ev:      # @_ZN2kc21impl_problem_Problem6D0Ev
# %bb.0:
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1655:
	.size	_ZN2kc21impl_problem_Problem6D0Ev, .Lfunc_end1655-_ZN2kc21impl_problem_Problem6D0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_problem_Problem58prod_selEv,"axG",@progbits,_ZNK2kc21impl_problem_Problem58prod_selEv,comdat
	.weak	_ZNK2kc21impl_problem_Problem58prod_selEv # -- Begin function _ZNK2kc21impl_problem_Problem58prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem58prod_selEv,@function
_ZNK2kc21impl_problem_Problem58prod_selEv: # @_ZNK2kc21impl_problem_Problem58prod_selEv
# %bb.0:
	ori	$a0, $zero, 325
	ret
.Lfunc_end1656:
	.size	_ZNK2kc21impl_problem_Problem58prod_selEv, .Lfunc_end1656-_ZNK2kc21impl_problem_Problem58prod_selEv
                                        # -- End function
	.section	.text._ZN2kc21impl_problem_Problem5D0Ev,"axG",@progbits,_ZN2kc21impl_problem_Problem5D0Ev,comdat
	.weak	_ZN2kc21impl_problem_Problem5D0Ev # -- Begin function _ZN2kc21impl_problem_Problem5D0Ev
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem5D0Ev,@function
_ZN2kc21impl_problem_Problem5D0Ev:      # @_ZN2kc21impl_problem_Problem5D0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1657:
	.size	_ZN2kc21impl_problem_Problem5D0Ev, .Lfunc_end1657-_ZN2kc21impl_problem_Problem5D0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_problem_Problem48prod_selEv,"axG",@progbits,_ZNK2kc21impl_problem_Problem48prod_selEv,comdat
	.weak	_ZNK2kc21impl_problem_Problem48prod_selEv # -- Begin function _ZNK2kc21impl_problem_Problem48prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem48prod_selEv,@function
_ZNK2kc21impl_problem_Problem48prod_selEv: # @_ZNK2kc21impl_problem_Problem48prod_selEv
# %bb.0:
	ori	$a0, $zero, 324
	ret
.Lfunc_end1658:
	.size	_ZNK2kc21impl_problem_Problem48prod_selEv, .Lfunc_end1658-_ZNK2kc21impl_problem_Problem48prod_selEv
                                        # -- End function
	.section	.text._ZN2kc21impl_problem_Problem4D0Ev,"axG",@progbits,_ZN2kc21impl_problem_Problem4D0Ev,comdat
	.weak	_ZN2kc21impl_problem_Problem4D0Ev # -- Begin function _ZN2kc21impl_problem_Problem4D0Ev
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem4D0Ev,@function
_ZN2kc21impl_problem_Problem4D0Ev:      # @_ZN2kc21impl_problem_Problem4D0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1659:
	.size	_ZN2kc21impl_problem_Problem4D0Ev, .Lfunc_end1659-_ZN2kc21impl_problem_Problem4D0Ev
                                        # -- End function
	.section	.text._ZNK2kc25impl_problem_Problem3int18prod_selEv,"axG",@progbits,_ZNK2kc25impl_problem_Problem3int18prod_selEv,comdat
	.weak	_ZNK2kc25impl_problem_Problem3int18prod_selEv # -- Begin function _ZNK2kc25impl_problem_Problem3int18prod_selEv
	.p2align	5
	.type	_ZNK2kc25impl_problem_Problem3int18prod_selEv,@function
_ZNK2kc25impl_problem_Problem3int18prod_selEv: # @_ZNK2kc25impl_problem_Problem3int18prod_selEv
# %bb.0:
	ori	$a0, $zero, 323
	ret
.Lfunc_end1660:
	.size	_ZNK2kc25impl_problem_Problem3int18prod_selEv, .Lfunc_end1660-_ZNK2kc25impl_problem_Problem3int18prod_selEv
                                        # -- End function
	.section	.text._ZN2kc25impl_problem_Problem3int1D0Ev,"axG",@progbits,_ZN2kc25impl_problem_Problem3int1D0Ev,comdat
	.weak	_ZN2kc25impl_problem_Problem3int1D0Ev # -- Begin function _ZN2kc25impl_problem_Problem3int1D0Ev
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem3int1D0Ev,@function
_ZN2kc25impl_problem_Problem3int1D0Ev:  # @_ZN2kc25impl_problem_Problem3int1D0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1661:
	.size	_ZN2kc25impl_problem_Problem3int1D0Ev, .Lfunc_end1661-_ZN2kc25impl_problem_Problem3int1D0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_problem_Problem38prod_selEv,"axG",@progbits,_ZNK2kc21impl_problem_Problem38prod_selEv,comdat
	.weak	_ZNK2kc21impl_problem_Problem38prod_selEv # -- Begin function _ZNK2kc21impl_problem_Problem38prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem38prod_selEv,@function
_ZNK2kc21impl_problem_Problem38prod_selEv: # @_ZNK2kc21impl_problem_Problem38prod_selEv
# %bb.0:
	ori	$a0, $zero, 322
	ret
.Lfunc_end1662:
	.size	_ZNK2kc21impl_problem_Problem38prod_selEv, .Lfunc_end1662-_ZNK2kc21impl_problem_Problem38prod_selEv
                                        # -- End function
	.section	.text._ZN2kc21impl_problem_Problem3D0Ev,"axG",@progbits,_ZN2kc21impl_problem_Problem3D0Ev,comdat
	.weak	_ZN2kc21impl_problem_Problem3D0Ev # -- Begin function _ZN2kc21impl_problem_Problem3D0Ev
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem3D0Ev,@function
_ZN2kc21impl_problem_Problem3D0Ev:      # @_ZN2kc21impl_problem_Problem3D0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1663:
	.size	_ZN2kc21impl_problem_Problem3D0Ev, .Lfunc_end1663-_ZN2kc21impl_problem_Problem3D0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_problem_Problem28prod_selEv,"axG",@progbits,_ZNK2kc21impl_problem_Problem28prod_selEv,comdat
	.weak	_ZNK2kc21impl_problem_Problem28prod_selEv # -- Begin function _ZNK2kc21impl_problem_Problem28prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem28prod_selEv,@function
_ZNK2kc21impl_problem_Problem28prod_selEv: # @_ZNK2kc21impl_problem_Problem28prod_selEv
# %bb.0:
	ori	$a0, $zero, 321
	ret
.Lfunc_end1664:
	.size	_ZNK2kc21impl_problem_Problem28prod_selEv, .Lfunc_end1664-_ZNK2kc21impl_problem_Problem28prod_selEv
                                        # -- End function
	.section	.text._ZN2kc21impl_problem_Problem2D0Ev,"axG",@progbits,_ZN2kc21impl_problem_Problem2D0Ev,comdat
	.weak	_ZN2kc21impl_problem_Problem2D0Ev # -- Begin function _ZN2kc21impl_problem_Problem2D0Ev
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem2D0Ev,@function
_ZN2kc21impl_problem_Problem2D0Ev:      # @_ZN2kc21impl_problem_Problem2D0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1665:
	.size	_ZN2kc21impl_problem_Problem2D0Ev, .Lfunc_end1665-_ZN2kc21impl_problem_Problem2D0Ev
                                        # -- End function
	.section	.text._ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv,"axG",@progbits,_ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv,comdat
	.weak	_ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv # -- Begin function _ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv
	.p2align	5
	.type	_ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv,@function
_ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv: # @_ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv
# %bb.0:
	ori	$a0, $zero, 320
	ret
.Lfunc_end1666:
	.size	_ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv, .Lfunc_end1666-_ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc37impl_problem_Problem1storageoption1IDD0Ev,"axG",@progbits,_ZN2kc37impl_problem_Problem1storageoption1IDD0Ev,comdat
	.weak	_ZN2kc37impl_problem_Problem1storageoption1IDD0Ev # -- Begin function _ZN2kc37impl_problem_Problem1storageoption1IDD0Ev
	.p2align	5
	.type	_ZN2kc37impl_problem_Problem1storageoption1IDD0Ev,@function
_ZN2kc37impl_problem_Problem1storageoption1IDD0Ev: # @_ZN2kc37impl_problem_Problem1storageoption1IDD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1667:
	.size	_ZN2kc37impl_problem_Problem1storageoption1IDD0Ev, .Lfunc_end1667-_ZN2kc37impl_problem_Problem1storageoption1IDD0Ev
                                        # -- End function
	.section	.text._ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv,"axG",@progbits,_ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv,comdat
	.weak	_ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv # -- Begin function _ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv
	.p2align	5
	.type	_ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv,@function
_ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv: # @_ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv
# %bb.0:
	ori	$a0, $zero, 319
	ret
.Lfunc_end1668:
	.size	_ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv, .Lfunc_end1668-_ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev,"axG",@progbits,_ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev,comdat
	.weak	_ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev # -- Begin function _ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev
	.p2align	5
	.type	_ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev,@function
_ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev: # @_ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev
# %bb.0:
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1669:
	.size	_ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev, .Lfunc_end1669-_ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev
                                        # -- End function
	.section	.text._ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv,"axG",@progbits,_ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv,comdat
	.weak	_ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv # -- Begin function _ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv
	.p2align	5
	.type	_ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv,@function
_ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv: # @_ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv
# %bb.0:
	ori	$a0, $zero, 318
	ret
.Lfunc_end1670:
	.size	_ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv, .Lfunc_end1670-_ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev,"axG",@progbits,_ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev,comdat
	.weak	_ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev # -- Begin function _ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev
	.p2align	5
	.type	_ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev,@function
_ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev: # @_ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev
# %bb.0:
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1671:
	.size	_ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev, .Lfunc_end1671-_ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev
                                        # -- End function
	.section	.text._ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv,"axG",@progbits,_ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv,comdat
	.weak	_ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv # -- Begin function _ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv
	.p2align	5
	.type	_ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv,@function
_ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv: # @_ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv
# %bb.0:
	ori	$a0, $zero, 317
	ret
.Lfunc_end1672:
	.size	_ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv, .Lfunc_end1672-_ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc27impl_problem_Problem1INT1IDD0Ev,"axG",@progbits,_ZN2kc27impl_problem_Problem1INT1IDD0Ev,comdat
	.weak	_ZN2kc27impl_problem_Problem1INT1IDD0Ev # -- Begin function _ZN2kc27impl_problem_Problem1INT1IDD0Ev
	.p2align	5
	.type	_ZN2kc27impl_problem_Problem1INT1IDD0Ev,@function
_ZN2kc27impl_problem_Problem1INT1IDD0Ev: # @_ZN2kc27impl_problem_Problem1INT1IDD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1673:
	.size	_ZN2kc27impl_problem_Problem1INT1IDD0Ev, .Lfunc_end1673-_ZN2kc27impl_problem_Problem1INT1IDD0Ev
                                        # -- End function
	.section	.text._ZNK2kc25impl_problem_Problem1int18prod_selEv,"axG",@progbits,_ZNK2kc25impl_problem_Problem1int18prod_selEv,comdat
	.weak	_ZNK2kc25impl_problem_Problem1int18prod_selEv # -- Begin function _ZNK2kc25impl_problem_Problem1int18prod_selEv
	.p2align	5
	.type	_ZNK2kc25impl_problem_Problem1int18prod_selEv,@function
_ZNK2kc25impl_problem_Problem1int18prod_selEv: # @_ZNK2kc25impl_problem_Problem1int18prod_selEv
# %bb.0:
	ori	$a0, $zero, 316
	ret
.Lfunc_end1674:
	.size	_ZNK2kc25impl_problem_Problem1int18prod_selEv, .Lfunc_end1674-_ZNK2kc25impl_problem_Problem1int18prod_selEv
                                        # -- End function
	.section	.text._ZN2kc25impl_problem_Problem1int1D0Ev,"axG",@progbits,_ZN2kc25impl_problem_Problem1int1D0Ev,comdat
	.weak	_ZN2kc25impl_problem_Problem1int1D0Ev # -- Begin function _ZN2kc25impl_problem_Problem1int1D0Ev
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem1int1D0Ev,@function
_ZN2kc25impl_problem_Problem1int1D0Ev:  # @_ZN2kc25impl_problem_Problem1int1D0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1675:
	.size	_ZN2kc25impl_problem_Problem1int1D0Ev, .Lfunc_end1675-_ZN2kc25impl_problem_Problem1int1D0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_problem_Problem1INT8prod_selEv,"axG",@progbits,_ZNK2kc24impl_problem_Problem1INT8prod_selEv,comdat
	.weak	_ZNK2kc24impl_problem_Problem1INT8prod_selEv # -- Begin function _ZNK2kc24impl_problem_Problem1INT8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_problem_Problem1INT8prod_selEv,@function
_ZNK2kc24impl_problem_Problem1INT8prod_selEv: # @_ZNK2kc24impl_problem_Problem1INT8prod_selEv
# %bb.0:
	ori	$a0, $zero, 315
	ret
.Lfunc_end1676:
	.size	_ZNK2kc24impl_problem_Problem1INT8prod_selEv, .Lfunc_end1676-_ZNK2kc24impl_problem_Problem1INT8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc24impl_problem_Problem1INTD0Ev,"axG",@progbits,_ZN2kc24impl_problem_Problem1INTD0Ev,comdat
	.weak	_ZN2kc24impl_problem_Problem1INTD0Ev # -- Begin function _ZN2kc24impl_problem_Problem1INTD0Ev
	.p2align	5
	.type	_ZN2kc24impl_problem_Problem1INTD0Ev,@function
_ZN2kc24impl_problem_Problem1INTD0Ev:   # @_ZN2kc24impl_problem_Problem1INTD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1677:
	.size	_ZN2kc24impl_problem_Problem1INTD0Ev, .Lfunc_end1677-_ZN2kc24impl_problem_Problem1INTD0Ev
                                        # -- End function
	.section	.text._ZNK2kc25impl_problem_Problem1t1ID8prod_selEv,"axG",@progbits,_ZNK2kc25impl_problem_Problem1t1ID8prod_selEv,comdat
	.weak	_ZNK2kc25impl_problem_Problem1t1ID8prod_selEv # -- Begin function _ZNK2kc25impl_problem_Problem1t1ID8prod_selEv
	.p2align	5
	.type	_ZNK2kc25impl_problem_Problem1t1ID8prod_selEv,@function
_ZNK2kc25impl_problem_Problem1t1ID8prod_selEv: # @_ZNK2kc25impl_problem_Problem1t1ID8prod_selEv
# %bb.0:
	ori	$a0, $zero, 314
	ret
.Lfunc_end1678:
	.size	_ZNK2kc25impl_problem_Problem1t1ID8prod_selEv, .Lfunc_end1678-_ZNK2kc25impl_problem_Problem1t1ID8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc25impl_problem_Problem1t1IDD0Ev,"axG",@progbits,_ZN2kc25impl_problem_Problem1t1IDD0Ev,comdat
	.weak	_ZN2kc25impl_problem_Problem1t1IDD0Ev # -- Begin function _ZN2kc25impl_problem_Problem1t1IDD0Ev
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem1t1IDD0Ev,@function
_ZN2kc25impl_problem_Problem1t1IDD0Ev:  # @_ZN2kc25impl_problem_Problem1t1IDD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1679:
	.size	_ZN2kc25impl_problem_Problem1t1IDD0Ev, .Lfunc_end1679-_ZN2kc25impl_problem_Problem1t1IDD0Ev
                                        # -- End function
	.section	.text._ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv,"axG",@progbits,_ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv,comdat
	.weak	_ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv # -- Begin function _ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv
	.p2align	5
	.type	_ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv,@function
_ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv: # @_ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv
# %bb.0:
	ori	$a0, $zero, 313
	ret
.Lfunc_end1680:
	.size	_ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv, .Lfunc_end1680-_ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc26impl_problem_Problem1ID1IDD0Ev,"axG",@progbits,_ZN2kc26impl_problem_Problem1ID1IDD0Ev,comdat
	.weak	_ZN2kc26impl_problem_Problem1ID1IDD0Ev # -- Begin function _ZN2kc26impl_problem_Problem1ID1IDD0Ev
	.p2align	5
	.type	_ZN2kc26impl_problem_Problem1ID1IDD0Ev,@function
_ZN2kc26impl_problem_Problem1ID1IDD0Ev: # @_ZN2kc26impl_problem_Problem1ID1IDD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1681:
	.size	_ZN2kc26impl_problem_Problem1ID1IDD0Ev, .Lfunc_end1681-_ZN2kc26impl_problem_Problem1ID1IDD0Ev
                                        # -- End function
	.section	.text._ZNK2kc23impl_problem_Problem1we8prod_selEv,"axG",@progbits,_ZNK2kc23impl_problem_Problem1we8prod_selEv,comdat
	.weak	_ZNK2kc23impl_problem_Problem1we8prod_selEv # -- Begin function _ZNK2kc23impl_problem_Problem1we8prod_selEv
	.p2align	5
	.type	_ZNK2kc23impl_problem_Problem1we8prod_selEv,@function
_ZNK2kc23impl_problem_Problem1we8prod_selEv: # @_ZNK2kc23impl_problem_Problem1we8prod_selEv
# %bb.0:
	ori	$a0, $zero, 312
	ret
.Lfunc_end1682:
	.size	_ZNK2kc23impl_problem_Problem1we8prod_selEv, .Lfunc_end1682-_ZNK2kc23impl_problem_Problem1we8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc23impl_problem_Problem1weD0Ev,"axG",@progbits,_ZN2kc23impl_problem_Problem1weD0Ev,comdat
	.weak	_ZN2kc23impl_problem_Problem1weD0Ev # -- Begin function _ZN2kc23impl_problem_Problem1weD0Ev
	.p2align	5
	.type	_ZN2kc23impl_problem_Problem1weD0Ev,@function
_ZN2kc23impl_problem_Problem1weD0Ev:    # @_ZN2kc23impl_problem_Problem1weD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1683:
	.size	_ZN2kc23impl_problem_Problem1weD0Ev, .Lfunc_end1683-_ZN2kc23impl_problem_Problem1weD0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_problem_Problem1tID8prod_selEv,"axG",@progbits,_ZNK2kc24impl_problem_Problem1tID8prod_selEv,comdat
	.weak	_ZNK2kc24impl_problem_Problem1tID8prod_selEv # -- Begin function _ZNK2kc24impl_problem_Problem1tID8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_problem_Problem1tID8prod_selEv,@function
_ZNK2kc24impl_problem_Problem1tID8prod_selEv: # @_ZNK2kc24impl_problem_Problem1tID8prod_selEv
# %bb.0:
	ori	$a0, $zero, 311
	ret
.Lfunc_end1684:
	.size	_ZNK2kc24impl_problem_Problem1tID8prod_selEv, .Lfunc_end1684-_ZNK2kc24impl_problem_Problem1tID8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc24impl_problem_Problem1tIDD0Ev,"axG",@progbits,_ZN2kc24impl_problem_Problem1tIDD0Ev,comdat
	.weak	_ZN2kc24impl_problem_Problem1tIDD0Ev # -- Begin function _ZN2kc24impl_problem_Problem1tIDD0Ev
	.p2align	5
	.type	_ZN2kc24impl_problem_Problem1tIDD0Ev,@function
_ZN2kc24impl_problem_Problem1tIDD0Ev:   # @_ZN2kc24impl_problem_Problem1tIDD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1685:
	.size	_ZN2kc24impl_problem_Problem1tIDD0Ev, .Lfunc_end1685-_ZN2kc24impl_problem_Problem1tIDD0Ev
                                        # -- End function
	.section	.text._ZNK2kc23impl_problem_Problem1ID8prod_selEv,"axG",@progbits,_ZNK2kc23impl_problem_Problem1ID8prod_selEv,comdat
	.weak	_ZNK2kc23impl_problem_Problem1ID8prod_selEv # -- Begin function _ZNK2kc23impl_problem_Problem1ID8prod_selEv
	.p2align	5
	.type	_ZNK2kc23impl_problem_Problem1ID8prod_selEv,@function
_ZNK2kc23impl_problem_Problem1ID8prod_selEv: # @_ZNK2kc23impl_problem_Problem1ID8prod_selEv
# %bb.0:
	ori	$a0, $zero, 310
	ret
.Lfunc_end1686:
	.size	_ZNK2kc23impl_problem_Problem1ID8prod_selEv, .Lfunc_end1686-_ZNK2kc23impl_problem_Problem1ID8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc23impl_problem_Problem1IDD0Ev,"axG",@progbits,_ZN2kc23impl_problem_Problem1IDD0Ev,comdat
	.weak	_ZN2kc23impl_problem_Problem1IDD0Ev # -- Begin function _ZN2kc23impl_problem_Problem1IDD0Ev
	.p2align	5
	.type	_ZN2kc23impl_problem_Problem1IDD0Ev,@function
_ZN2kc23impl_problem_Problem1IDD0Ev:    # @_ZN2kc23impl_problem_Problem1IDD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1687:
	.size	_ZN2kc23impl_problem_Problem1IDD0Ev, .Lfunc_end1687-_ZN2kc23impl_problem_Problem1IDD0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_problem_Problem18prod_selEv,"axG",@progbits,_ZNK2kc21impl_problem_Problem18prod_selEv,comdat
	.weak	_ZNK2kc21impl_problem_Problem18prod_selEv # -- Begin function _ZNK2kc21impl_problem_Problem18prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_problem_Problem18prod_selEv,@function
_ZNK2kc21impl_problem_Problem18prod_selEv: # @_ZNK2kc21impl_problem_Problem18prod_selEv
# %bb.0:
	ori	$a0, $zero, 309
	ret
.Lfunc_end1688:
	.size	_ZNK2kc21impl_problem_Problem18prod_selEv, .Lfunc_end1688-_ZNK2kc21impl_problem_Problem18prod_selEv
                                        # -- End function
	.section	.text._ZN2kc21impl_problem_Problem1D0Ev,"axG",@progbits,_ZN2kc21impl_problem_Problem1D0Ev,comdat
	.weak	_ZN2kc21impl_problem_Problem1D0Ev # -- Begin function _ZN2kc21impl_problem_Problem1D0Ev
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem1D0Ev,@function
_ZN2kc21impl_problem_Problem1D0Ev:      # @_ZN2kc21impl_problem_Problem1D0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1689:
	.size	_ZN2kc21impl_problem_Problem1D0Ev, .Lfunc_end1689-_ZN2kc21impl_problem_Problem1D0Ev
                                        # -- End function
	.section	.text._ZNK2kc18impl_error_Warning8prod_selEv,"axG",@progbits,_ZNK2kc18impl_error_Warning8prod_selEv,comdat
	.weak	_ZNK2kc18impl_error_Warning8prod_selEv # -- Begin function _ZNK2kc18impl_error_Warning8prod_selEv
	.p2align	5
	.type	_ZNK2kc18impl_error_Warning8prod_selEv,@function
_ZNK2kc18impl_error_Warning8prod_selEv: # @_ZNK2kc18impl_error_Warning8prod_selEv
# %bb.0:
	ori	$a0, $zero, 308
	ret
.Lfunc_end1690:
	.size	_ZNK2kc18impl_error_Warning8prod_selEv, .Lfunc_end1690-_ZNK2kc18impl_error_Warning8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc18impl_error_WarningD0Ev,"axG",@progbits,_ZN2kc18impl_error_WarningD0Ev,comdat
	.weak	_ZN2kc18impl_error_WarningD0Ev  # -- Begin function _ZN2kc18impl_error_WarningD0Ev
	.p2align	5
	.type	_ZN2kc18impl_error_WarningD0Ev,@function
_ZN2kc18impl_error_WarningD0Ev:         # @_ZN2kc18impl_error_WarningD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1691:
	.size	_ZN2kc18impl_error_WarningD0Ev, .Lfunc_end1691-_ZN2kc18impl_error_WarningD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_error_NonFatal8prod_selEv,"axG",@progbits,_ZNK2kc19impl_error_NonFatal8prod_selEv,comdat
	.weak	_ZNK2kc19impl_error_NonFatal8prod_selEv # -- Begin function _ZNK2kc19impl_error_NonFatal8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_error_NonFatal8prod_selEv,@function
_ZNK2kc19impl_error_NonFatal8prod_selEv: # @_ZNK2kc19impl_error_NonFatal8prod_selEv
# %bb.0:
	ori	$a0, $zero, 307
	ret
.Lfunc_end1692:
	.size	_ZNK2kc19impl_error_NonFatal8prod_selEv, .Lfunc_end1692-_ZNK2kc19impl_error_NonFatal8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc19impl_error_NonFatalD0Ev,"axG",@progbits,_ZN2kc19impl_error_NonFatalD0Ev,comdat
	.weak	_ZN2kc19impl_error_NonFatalD0Ev # -- Begin function _ZN2kc19impl_error_NonFatalD0Ev
	.p2align	5
	.type	_ZN2kc19impl_error_NonFatalD0Ev,@function
_ZN2kc19impl_error_NonFatalD0Ev:        # @_ZN2kc19impl_error_NonFatalD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1693:
	.size	_ZN2kc19impl_error_NonFatalD0Ev, .Lfunc_end1693-_ZN2kc19impl_error_NonFatalD0Ev
                                        # -- End function
	.section	.text._ZNK2kc16impl_error_Fatal8prod_selEv,"axG",@progbits,_ZNK2kc16impl_error_Fatal8prod_selEv,comdat
	.weak	_ZNK2kc16impl_error_Fatal8prod_selEv # -- Begin function _ZNK2kc16impl_error_Fatal8prod_selEv
	.p2align	5
	.type	_ZNK2kc16impl_error_Fatal8prod_selEv,@function
_ZNK2kc16impl_error_Fatal8prod_selEv:   # @_ZNK2kc16impl_error_Fatal8prod_selEv
# %bb.0:
	ori	$a0, $zero, 306
	ret
.Lfunc_end1694:
	.size	_ZNK2kc16impl_error_Fatal8prod_selEv, .Lfunc_end1694-_ZNK2kc16impl_error_Fatal8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc16impl_error_FatalD0Ev,"axG",@progbits,_ZN2kc16impl_error_FatalD0Ev,comdat
	.weak	_ZN2kc16impl_error_FatalD0Ev    # -- Begin function _ZN2kc16impl_error_FatalD0Ev
	.p2align	5
	.type	_ZN2kc16impl_error_FatalD0Ev,@function
_ZN2kc16impl_error_FatalD0Ev:           # @_ZN2kc16impl_error_FatalD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1695:
	.size	_ZN2kc16impl_error_FatalD0Ev, .Lfunc_end1695-_ZN2kc16impl_error_FatalD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_baseclass_list8prod_selEv,"axG",@progbits,_ZNK2kc19impl_baseclass_list8prod_selEv,comdat
	.weak	_ZNK2kc19impl_baseclass_list8prod_selEv # -- Begin function _ZNK2kc19impl_baseclass_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_baseclass_list8prod_selEv,@function
_ZNK2kc19impl_baseclass_list8prod_selEv: # @_ZNK2kc19impl_baseclass_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 305
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1696:
	.size	_ZNK2kc19impl_baseclass_list8prod_selEv, .Lfunc_end1696-_ZNK2kc19impl_baseclass_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc19impl_baseclass_listD0Ev,"axG",@progbits,_ZN2kc19impl_baseclass_listD0Ev,comdat
	.weak	_ZN2kc19impl_baseclass_listD0Ev # -- Begin function _ZN2kc19impl_baseclass_listD0Ev
	.p2align	5
	.type	_ZN2kc19impl_baseclass_listD0Ev,@function
_ZN2kc19impl_baseclass_listD0Ev:        # @_ZN2kc19impl_baseclass_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1697:
	.size	_ZN2kc19impl_baseclass_listD0Ev, .Lfunc_end1697-_ZN2kc19impl_baseclass_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv,"axG",@progbits,_ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv,comdat
	.weak	_ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv # -- Begin function _ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv
	.p2align	5
	.type	_ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv,@function
_ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv: # @_ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv
# %bb.0:
	ori	$a0, $zero, 303
	ret
.Lfunc_end1698:
	.size	_ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv, .Lfunc_end1698-_ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev,"axG",@progbits,_ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev,comdat
	.weak	_ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev # -- Begin function _ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev
	.p2align	5
	.type	_ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev,@function
_ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev: # @_ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1699:
	.size	_ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev, .Lfunc_end1699-_ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev
                                        # -- End function
	.section	.text._ZNK2kc27impl_baseclass_declarations8prod_selEv,"axG",@progbits,_ZNK2kc27impl_baseclass_declarations8prod_selEv,comdat
	.weak	_ZNK2kc27impl_baseclass_declarations8prod_selEv # -- Begin function _ZNK2kc27impl_baseclass_declarations8prod_selEv
	.p2align	5
	.type	_ZNK2kc27impl_baseclass_declarations8prod_selEv,@function
_ZNK2kc27impl_baseclass_declarations8prod_selEv: # @_ZNK2kc27impl_baseclass_declarations8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 302
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1700:
	.size	_ZNK2kc27impl_baseclass_declarations8prod_selEv, .Lfunc_end1700-_ZNK2kc27impl_baseclass_declarations8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc27impl_baseclass_declarationsD0Ev,"axG",@progbits,_ZN2kc27impl_baseclass_declarationsD0Ev,comdat
	.weak	_ZN2kc27impl_baseclass_declarationsD0Ev # -- Begin function _ZN2kc27impl_baseclass_declarationsD0Ev
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarationsD0Ev,@function
_ZN2kc27impl_baseclass_declarationsD0Ev: # @_ZN2kc27impl_baseclass_declarationsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1701:
	.size	_ZN2kc27impl_baseclass_declarationsD0Ev, .Lfunc_end1701-_ZN2kc27impl_baseclass_declarationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv,"axG",@progbits,_ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv,comdat
	.weak	_ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv # -- Begin function _ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv,@function
_ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv: # @_ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv
# %bb.0:
	ori	$a0, $zero, 300
	ret
.Lfunc_end1702:
	.size	_ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv, .Lfunc_end1702-_ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc28impl_ac_base_init_AcBaseInitD0Ev,"axG",@progbits,_ZN2kc28impl_ac_base_init_AcBaseInitD0Ev,comdat
	.weak	_ZN2kc28impl_ac_base_init_AcBaseInitD0Ev # -- Begin function _ZN2kc28impl_ac_base_init_AcBaseInitD0Ev
	.p2align	5
	.type	_ZN2kc28impl_ac_base_init_AcBaseInitD0Ev,@function
_ZN2kc28impl_ac_base_init_AcBaseInitD0Ev: # @_ZN2kc28impl_ac_base_init_AcBaseInitD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1703:
	.size	_ZN2kc28impl_ac_base_init_AcBaseInitD0Ev, .Lfunc_end1703-_ZN2kc28impl_ac_base_init_AcBaseInitD0Ev
                                        # -- End function
	.section	.text._ZNK2kc22impl_ac_base_init_list8prod_selEv,"axG",@progbits,_ZNK2kc22impl_ac_base_init_list8prod_selEv,comdat
	.weak	_ZNK2kc22impl_ac_base_init_list8prod_selEv # -- Begin function _ZNK2kc22impl_ac_base_init_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc22impl_ac_base_init_list8prod_selEv,@function
_ZNK2kc22impl_ac_base_init_list8prod_selEv: # @_ZNK2kc22impl_ac_base_init_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 299
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1704:
	.size	_ZNK2kc22impl_ac_base_init_list8prod_selEv, .Lfunc_end1704-_ZNK2kc22impl_ac_base_init_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc22impl_ac_base_init_listD0Ev,"axG",@progbits,_ZN2kc22impl_ac_base_init_listD0Ev,comdat
	.weak	_ZN2kc22impl_ac_base_init_listD0Ev # -- Begin function _ZN2kc22impl_ac_base_init_listD0Ev
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_listD0Ev,@function
_ZN2kc22impl_ac_base_init_listD0Ev:     # @_ZN2kc22impl_ac_base_init_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1705:
	.size	_ZN2kc22impl_ac_base_init_listD0Ev, .Lfunc_end1705-_ZN2kc22impl_ac_base_init_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv,"axG",@progbits,_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv,comdat
	.weak	_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv # -- Begin function _ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv
	.p2align	5
	.type	_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv,@function
_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv: # @_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv
# %bb.0:
	ori	$a0, $zero, 297
	ret
.Lfunc_end1706:
	.size	_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv, .Lfunc_end1706-_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev,"axG",@progbits,_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev,comdat
	.weak	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev # -- Begin function _ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev
	.p2align	5
	.type	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev,@function
_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev: # @_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1707:
	.size	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev, .Lfunc_end1707-_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_ac_constant_expression_list8prod_selEv,"axG",@progbits,_ZNK2kc32impl_ac_constant_expression_list8prod_selEv,comdat
	.weak	_ZNK2kc32impl_ac_constant_expression_list8prod_selEv # -- Begin function _ZNK2kc32impl_ac_constant_expression_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_ac_constant_expression_list8prod_selEv,@function
_ZNK2kc32impl_ac_constant_expression_list8prod_selEv: # @_ZNK2kc32impl_ac_constant_expression_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 295
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1708:
	.size	_ZNK2kc32impl_ac_constant_expression_list8prod_selEv, .Lfunc_end1708-_ZNK2kc32impl_ac_constant_expression_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc32impl_ac_constant_expression_listD0Ev,"axG",@progbits,_ZN2kc32impl_ac_constant_expression_listD0Ev,comdat
	.weak	_ZN2kc32impl_ac_constant_expression_listD0Ev # -- Begin function _ZN2kc32impl_ac_constant_expression_listD0Ev
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_listD0Ev,@function
_ZN2kc32impl_ac_constant_expression_listD0Ev: # @_ZN2kc32impl_ac_constant_expression_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1709:
	.size	_ZN2kc32impl_ac_constant_expression_listD0Ev, .Lfunc_end1709-_ZN2kc32impl_ac_constant_expression_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv,"axG",@progbits,_ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv,comdat
	.weak	_ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv # -- Begin function _ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv
	.p2align	5
	.type	_ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv,@function
_ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv: # @_ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv
# %bb.0:
	ori	$a0, $zero, 293
	ret
.Lfunc_end1710:
	.size	_ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv, .Lfunc_end1710-_ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev,"axG",@progbits,_ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev,comdat
	.weak	_ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev # -- Begin function _ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev
	.p2align	5
	.type	_ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev,@function
_ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev: # @_ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1711:
	.size	_ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev, .Lfunc_end1711-_ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev
                                        # -- End function
	.section	.text._ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv,"axG",@progbits,_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv,comdat
	.weak	_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv # -- Begin function _ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv
	.p2align	5
	.type	_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv,@function
_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv: # @_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv
# %bb.0:
	ori	$a0, $zero, 291
	ret
.Lfunc_end1712:
	.size	_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv, .Lfunc_end1712-_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev,"axG",@progbits,_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev,comdat
	.weak	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev # -- Begin function _ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev
	.p2align	5
	.type	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev,@function
_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev: # @_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1713:
	.size	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev, .Lfunc_end1713-_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv,"axG",@progbits,_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv,comdat
	.weak	_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv # -- Begin function _ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv
	.p2align	5
	.type	_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv,@function
_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv: # @_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv
# %bb.0:
	ori	$a0, $zero, 290
	ret
.Lfunc_end1714:
	.size	_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv, .Lfunc_end1714-_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev,"axG",@progbits,_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev,comdat
	.weak	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev # -- Begin function _ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev
	.p2align	5
	.type	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev,@function
_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev: # @_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1715:
	.size	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev, .Lfunc_end1715-_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev
                                        # -- End function
	.section	.text._ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv,"axG",@progbits,_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv,comdat
	.weak	_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv # -- Begin function _ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv
	.p2align	5
	.type	_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv,@function
_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv: # @_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv
# %bb.0:
	ori	$a0, $zero, 289
	ret
.Lfunc_end1716:
	.size	_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv, .Lfunc_end1716-_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev,"axG",@progbits,_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev,comdat
	.weak	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev # -- Begin function _ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev
	.p2align	5
	.type	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev,@function
_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev: # @_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1717:
	.size	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev, .Lfunc_end1717-_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev
                                        # -- End function
	.section	.text._ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv,"axG",@progbits,_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv,comdat
	.weak	_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv # -- Begin function _ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv
	.p2align	5
	.type	_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv,@function
_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv: # @_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv
# %bb.0:
	ori	$a0, $zero, 288
	ret
.Lfunc_end1718:
	.size	_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv, .Lfunc_end1718-_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev,"axG",@progbits,_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev,comdat
	.weak	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev # -- Begin function _ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev
	.p2align	5
	.type	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev,@function
_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev: # @_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1719:
	.size	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev, .Lfunc_end1719-_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev
                                        # -- End function
	.section	.text._ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv,"axG",@progbits,_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv,comdat
	.weak	_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv # -- Begin function _ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv
	.p2align	5
	.type	_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv,@function
_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv: # @_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv
# %bb.0:
	ori	$a0, $zero, 287
	ret
.Lfunc_end1720:
	.size	_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv, .Lfunc_end1720-_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev,"axG",@progbits,_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev,comdat
	.weak	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev # -- Begin function _ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev
	.p2align	5
	.type	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev,@function
_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev: # @_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1721:
	.size	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev, .Lfunc_end1721-_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev
                                        # -- End function
	.section	.text._ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv,"axG",@progbits,_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv,comdat
	.weak	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv # -- Begin function _ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv
	.p2align	5
	.type	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv,@function
_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv: # @_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv
# %bb.0:
	ori	$a0, $zero, 285
	ret
.Lfunc_end1722:
	.size	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv, .Lfunc_end1722-_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev,"axG",@progbits,_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev,comdat
	.weak	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev # -- Begin function _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev
	.p2align	5
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev: # @_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1723:
	.size	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev, .Lfunc_end1723-_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev
                                        # -- End function
	.section	.text._ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv,"axG",@progbits,_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv,comdat
	.weak	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv # -- Begin function _ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv
	.p2align	5
	.type	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv,@function
_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv: # @_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv
# %bb.0:
	ori	$a0, $zero, 284
	ret
.Lfunc_end1724:
	.size	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv, .Lfunc_end1724-_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev,"axG",@progbits,_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev,comdat
	.weak	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev # -- Begin function _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev
	.p2align	5
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev: # @_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1725:
	.size	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev, .Lfunc_end1725-_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev
                                        # -- End function
	.section	.text._ZNK2kc23impl_ac_identifier_list8prod_selEv,"axG",@progbits,_ZNK2kc23impl_ac_identifier_list8prod_selEv,comdat
	.weak	_ZNK2kc23impl_ac_identifier_list8prod_selEv # -- Begin function _ZNK2kc23impl_ac_identifier_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc23impl_ac_identifier_list8prod_selEv,@function
_ZNK2kc23impl_ac_identifier_list8prod_selEv: # @_ZNK2kc23impl_ac_identifier_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 283
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1726:
	.size	_ZNK2kc23impl_ac_identifier_list8prod_selEv, .Lfunc_end1726-_ZNK2kc23impl_ac_identifier_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc23impl_ac_identifier_listD0Ev,"axG",@progbits,_ZN2kc23impl_ac_identifier_listD0Ev,comdat
	.weak	_ZN2kc23impl_ac_identifier_listD0Ev # -- Begin function _ZN2kc23impl_ac_identifier_listD0Ev
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_listD0Ev,@function
_ZN2kc23impl_ac_identifier_listD0Ev:    # @_ZN2kc23impl_ac_identifier_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1727:
	.size	_ZN2kc23impl_ac_identifier_listD0Ev, .Lfunc_end1727-_ZN2kc23impl_ac_identifier_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv,"axG",@progbits,_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv,comdat
	.weak	_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv # -- Begin function _ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv
	.p2align	5
	.type	_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv,@function
_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv: # @_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv
# %bb.0:
	ori	$a0, $zero, 281
	ret
.Lfunc_end1728:
	.size	_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv, .Lfunc_end1728-_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev,"axG",@progbits,_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev,comdat
	.weak	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev # -- Begin function _ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev
	.p2align	5
	.type	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev,@function
_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev: # @_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1729:
	.size	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev, .Lfunc_end1729-_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev
                                        # -- End function
	.section	.text._ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv,"axG",@progbits,_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv,comdat
	.weak	_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv # -- Begin function _ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv
	.p2align	5
	.type	_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv,@function
_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv: # @_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv
# %bb.0:
	ori	$a0, $zero, 280
	ret
.Lfunc_end1730:
	.size	_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv, .Lfunc_end1730-_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev,"axG",@progbits,_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev,comdat
	.weak	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev # -- Begin function _ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev
	.p2align	5
	.type	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev,@function
_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev: # @_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1731:
	.size	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev, .Lfunc_end1731-_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev
                                        # -- End function
	.section	.text._ZNK2kc22impl_ac_parameter_list8prod_selEv,"axG",@progbits,_ZNK2kc22impl_ac_parameter_list8prod_selEv,comdat
	.weak	_ZNK2kc22impl_ac_parameter_list8prod_selEv # -- Begin function _ZNK2kc22impl_ac_parameter_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc22impl_ac_parameter_list8prod_selEv,@function
_ZNK2kc22impl_ac_parameter_list8prod_selEv: # @_ZNK2kc22impl_ac_parameter_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 279
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1732:
	.size	_ZNK2kc22impl_ac_parameter_list8prod_selEv, .Lfunc_end1732-_ZNK2kc22impl_ac_parameter_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc22impl_ac_parameter_listD0Ev,"axG",@progbits,_ZN2kc22impl_ac_parameter_listD0Ev,comdat
	.weak	_ZN2kc22impl_ac_parameter_listD0Ev # -- Begin function _ZN2kc22impl_ac_parameter_listD0Ev
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_listD0Ev,@function
_ZN2kc22impl_ac_parameter_listD0Ev:     # @_ZN2kc22impl_ac_parameter_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1733:
	.size	_ZN2kc22impl_ac_parameter_listD0Ev, .Lfunc_end1733-_ZN2kc22impl_ac_parameter_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv,"axG",@progbits,_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv,comdat
	.weak	_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv # -- Begin function _ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv
	.p2align	5
	.type	_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv,@function
_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv: # @_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv
# %bb.0:
	ori	$a0, $zero, 277
	ret
.Lfunc_end1734:
	.size	_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv, .Lfunc_end1734-_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev,"axG",@progbits,_ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev,comdat
	.weak	_ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev # -- Begin function _ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev
	.p2align	5
	.type	_ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev,@function
_ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev: # @_ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1735:
	.size	_ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev, .Lfunc_end1735-_ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev
                                        # -- End function
	.section	.text._ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv,"axG",@progbits,_ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv,comdat
	.weak	_ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv # -- Begin function _ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv
	.p2align	5
	.type	_ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv,@function
_ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv: # @_ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv
# %bb.0:
	ori	$a0, $zero, 276
	ret
.Lfunc_end1736:
	.size	_ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv, .Lfunc_end1736-_ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev,"axG",@progbits,_ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev,comdat
	.weak	_ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev # -- Begin function _ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev
	.p2align	5
	.type	_ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev,@function
_ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev: # @_ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1737:
	.size	_ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev, .Lfunc_end1737-_ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev
                                        # -- End function
	.section	.text._ZNK2kc27impl_ac_type_qualifier_list8prod_selEv,"axG",@progbits,_ZNK2kc27impl_ac_type_qualifier_list8prod_selEv,comdat
	.weak	_ZNK2kc27impl_ac_type_qualifier_list8prod_selEv # -- Begin function _ZNK2kc27impl_ac_type_qualifier_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc27impl_ac_type_qualifier_list8prod_selEv,@function
_ZNK2kc27impl_ac_type_qualifier_list8prod_selEv: # @_ZNK2kc27impl_ac_type_qualifier_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 275
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1738:
	.size	_ZNK2kc27impl_ac_type_qualifier_list8prod_selEv, .Lfunc_end1738-_ZNK2kc27impl_ac_type_qualifier_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc27impl_ac_type_qualifier_listD0Ev,"axG",@progbits,_ZN2kc27impl_ac_type_qualifier_listD0Ev,comdat
	.weak	_ZN2kc27impl_ac_type_qualifier_listD0Ev # -- Begin function _ZN2kc27impl_ac_type_qualifier_listD0Ev
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_listD0Ev,@function
_ZN2kc27impl_ac_type_qualifier_listD0Ev: # @_ZN2kc27impl_ac_type_qualifier_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1739:
	.size	_ZN2kc27impl_ac_type_qualifier_listD0Ev, .Lfunc_end1739-_ZN2kc27impl_ac_type_qualifier_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc28impl_ac_class_qualifier_list8prod_selEv,"axG",@progbits,_ZNK2kc28impl_ac_class_qualifier_list8prod_selEv,comdat
	.weak	_ZNK2kc28impl_ac_class_qualifier_list8prod_selEv # -- Begin function _ZNK2kc28impl_ac_class_qualifier_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_class_qualifier_list8prod_selEv,@function
_ZNK2kc28impl_ac_class_qualifier_list8prod_selEv: # @_ZNK2kc28impl_ac_class_qualifier_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 273
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1740:
	.size	_ZNK2kc28impl_ac_class_qualifier_list8prod_selEv, .Lfunc_end1740-_ZNK2kc28impl_ac_class_qualifier_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc28impl_ac_class_qualifier_listD0Ev,"axG",@progbits,_ZN2kc28impl_ac_class_qualifier_listD0Ev,comdat
	.weak	_ZN2kc28impl_ac_class_qualifier_listD0Ev # -- Begin function _ZN2kc28impl_ac_class_qualifier_listD0Ev
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_listD0Ev,@function
_ZN2kc28impl_ac_class_qualifier_listD0Ev: # @_ZN2kc28impl_ac_class_qualifier_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1741:
	.size	_ZN2kc28impl_ac_class_qualifier_listD0Ev, .Lfunc_end1741-_ZN2kc28impl_ac_class_qualifier_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv,"axG",@progbits,_ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv,comdat
	.weak	_ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv # -- Begin function _ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv,@function
_ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv: # @_ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 271
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1742:
	.size	_ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv, .Lfunc_end1742-_ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc33impl_ac_class_qualifier_help_listD0Ev,"axG",@progbits,_ZN2kc33impl_ac_class_qualifier_help_listD0Ev,comdat
	.weak	_ZN2kc33impl_ac_class_qualifier_help_listD0Ev # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_listD0Ev
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_listD0Ev,@function
_ZN2kc33impl_ac_class_qualifier_help_listD0Ev: # @_ZN2kc33impl_ac_class_qualifier_help_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1743:
	.size	_ZN2kc33impl_ac_class_qualifier_help_listD0Ev, .Lfunc_end1743-_ZN2kc33impl_ac_class_qualifier_help_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv,"axG",@progbits,_ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv,comdat
	.weak	_ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv # -- Begin function _ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv
	.p2align	5
	.type	_ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv,@function
_ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv: # @_ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv
# %bb.0:
	ori	$a0, $zero, 269
	ret
.Lfunc_end1744:
	.size	_ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv, .Lfunc_end1744-_ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev,"axG",@progbits,_ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev,comdat
	.weak	_ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev # -- Begin function _ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev
	.p2align	5
	.type	_ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev,@function
_ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev: # @_ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1745:
	.size	_ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev, .Lfunc_end1745-_ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev
                                        # -- End function
	.section	.text._ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv,"axG",@progbits,_ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv,comdat
	.weak	_ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv # -- Begin function _ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv
	.p2align	5
	.type	_ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv,@function
_ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv: # @_ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv
# %bb.0:
	ori	$a0, $zero, 266
	ret
.Lfunc_end1746:
	.size	_ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv, .Lfunc_end1746-_ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc29impl_ac_pointer_AcPointerConsD0Ev,"axG",@progbits,_ZN2kc29impl_ac_pointer_AcPointerConsD0Ev,comdat
	.weak	_ZN2kc29impl_ac_pointer_AcPointerConsD0Ev # -- Begin function _ZN2kc29impl_ac_pointer_AcPointerConsD0Ev
	.p2align	5
	.type	_ZN2kc29impl_ac_pointer_AcPointerConsD0Ev,@function
_ZN2kc29impl_ac_pointer_AcPointerConsD0Ev: # @_ZN2kc29impl_ac_pointer_AcPointerConsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1747:
	.size	_ZN2kc29impl_ac_pointer_AcPointerConsD0Ev, .Lfunc_end1747-_ZN2kc29impl_ac_pointer_AcPointerConsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv,"axG",@progbits,_ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv,comdat
	.weak	_ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv # -- Begin function _ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv,@function
_ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv: # @_ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv
# %bb.0:
	ori	$a0, $zero, 265
	ret
.Lfunc_end1748:
	.size	_ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv, .Lfunc_end1748-_ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc28impl_ac_pointer_AcPointerNilD0Ev,"axG",@progbits,_ZN2kc28impl_ac_pointer_AcPointerNilD0Ev,comdat
	.weak	_ZN2kc28impl_ac_pointer_AcPointerNilD0Ev # -- Begin function _ZN2kc28impl_ac_pointer_AcPointerNilD0Ev
	.p2align	5
	.type	_ZN2kc28impl_ac_pointer_AcPointerNilD0Ev,@function
_ZN2kc28impl_ac_pointer_AcPointerNilD0Ev: # @_ZN2kc28impl_ac_pointer_AcPointerNilD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1749:
	.size	_ZN2kc28impl_ac_pointer_AcPointerNilD0Ev, .Lfunc_end1749-_ZN2kc28impl_ac_pointer_AcPointerNilD0Ev
                                        # -- End function
	.section	.text._ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv,"axG",@progbits,_ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv,comdat
	.weak	_ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv # -- Begin function _ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv
	.p2align	5
	.type	_ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv,@function
_ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv: # @_ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv
# %bb.0:
	ori	$a0, $zero, 264
	ret
.Lfunc_end1750:
	.size	_ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv, .Lfunc_end1750-_ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc33impl_ac_pointer_option_YespointerD0Ev,"axG",@progbits,_ZN2kc33impl_ac_pointer_option_YespointerD0Ev,comdat
	.weak	_ZN2kc33impl_ac_pointer_option_YespointerD0Ev # -- Begin function _ZN2kc33impl_ac_pointer_option_YespointerD0Ev
	.p2align	5
	.type	_ZN2kc33impl_ac_pointer_option_YespointerD0Ev,@function
_ZN2kc33impl_ac_pointer_option_YespointerD0Ev: # @_ZN2kc33impl_ac_pointer_option_YespointerD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1751:
	.size	_ZN2kc33impl_ac_pointer_option_YespointerD0Ev, .Lfunc_end1751-_ZN2kc33impl_ac_pointer_option_YespointerD0Ev
                                        # -- End function
	.section	.text._ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv,"axG",@progbits,_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv,comdat
	.weak	_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv # -- Begin function _ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv
	.p2align	5
	.type	_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv,@function
_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv: # @_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv
# %bb.0:
	ori	$a0, $zero, 262
	ret
.Lfunc_end1752:
	.size	_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv, .Lfunc_end1752-_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev,"axG",@progbits,_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev,comdat
	.weak	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev # -- Begin function _ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev
	.p2align	5
	.type	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev,@function
_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev: # @_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1753:
	.size	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev, .Lfunc_end1753-_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev
                                        # -- End function
	.section	.text._ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv,"axG",@progbits,_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv,comdat
	.weak	_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv # -- Begin function _ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv
	.p2align	5
	.type	_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv,@function
_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv: # @_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv
# %bb.0:
	ori	$a0, $zero, 261
	ret
.Lfunc_end1754:
	.size	_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv, .Lfunc_end1754-_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev,"axG",@progbits,_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev,comdat
	.weak	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev # -- Begin function _ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev
	.p2align	5
	.type	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev,@function
_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev: # @_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1755:
	.size	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev, .Lfunc_end1755-_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev
                                        # -- End function
	.section	.text._ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv,"axG",@progbits,_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv,comdat
	.weak	_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv # -- Begin function _ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv
	.p2align	5
	.type	_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv,@function
_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv: # @_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv
# %bb.0:
	ori	$a0, $zero, 260
	ret
.Lfunc_end1756:
	.size	_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv, .Lfunc_end1756-_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev,"axG",@progbits,_ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev,comdat
	.weak	_ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev # -- Begin function _ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev
	.p2align	5
	.type	_ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev,@function
_ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev: # @_ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1757:
	.size	_ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev, .Lfunc_end1757-_ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev
                                        # -- End function
	.section	.text._ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv,"axG",@progbits,_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv,comdat
	.weak	_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv # -- Begin function _ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv
	.p2align	5
	.type	_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv,@function
_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv: # @_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv
# %bb.0:
	ori	$a0, $zero, 259
	ret
.Lfunc_end1758:
	.size	_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv, .Lfunc_end1758-_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev,"axG",@progbits,_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev,comdat
	.weak	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev # -- Begin function _ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev
	.p2align	5
	.type	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev,@function
_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev: # @_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1759:
	.size	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev, .Lfunc_end1759-_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv,"axG",@progbits,_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv,comdat
	.weak	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv # -- Begin function _ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv
	.p2align	5
	.type	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv,@function
_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv: # @_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv
# %bb.0:
	ori	$a0, $zero, 258
	ret
.Lfunc_end1760:
	.size	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv, .Lfunc_end1760-_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev,"axG",@progbits,_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev,comdat
	.weak	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev # -- Begin function _ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev
	.p2align	5
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev: # @_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1761:
	.size	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev, .Lfunc_end1761-_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv,"axG",@progbits,_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv,comdat
	.weak	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv # -- Begin function _ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv
	.p2align	5
	.type	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv,@function
_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv: # @_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv
# %bb.0:
	ori	$a0, $zero, 257
	ret
.Lfunc_end1762:
	.size	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv, .Lfunc_end1762-_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev,"axG",@progbits,_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev,comdat
	.weak	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev # -- Begin function _ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev
	.p2align	5
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev: # @_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1763:
	.size	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev, .Lfunc_end1763-_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev
                                        # -- End function
	.section	.text._ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv,"axG",@progbits,_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv,comdat
	.weak	_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv # -- Begin function _ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv
	.p2align	5
	.type	_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv,@function
_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv: # @_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv
# %bb.0:
	ori	$a0, $zero, 256
	ret
.Lfunc_end1764:
	.size	_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv, .Lfunc_end1764-_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev,"axG",@progbits,_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev,comdat
	.weak	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev # -- Begin function _ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev
	.p2align	5
	.type	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev,@function
_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev: # @_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1765:
	.size	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev, .Lfunc_end1765-_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev
                                        # -- End function
	.section	.text._ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv,"axG",@progbits,_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv,comdat
	.weak	_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv # -- Begin function _ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv
	.p2align	5
	.type	_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv,@function
_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv: # @_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv
# %bb.0:
	ori	$a0, $zero, 255
	ret
.Lfunc_end1766:
	.size	_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv, .Lfunc_end1766-_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev,"axG",@progbits,_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev,comdat
	.weak	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev # -- Begin function _ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev
	.p2align	5
	.type	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev,@function
_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev: # @_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1767:
	.size	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev, .Lfunc_end1767-_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev
                                        # -- End function
	.section	.text._ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv,"axG",@progbits,_ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv,comdat
	.weak	_ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv # -- Begin function _ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv
	.p2align	5
	.type	_ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv,@function
_ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv: # @_ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv
# %bb.0:
	ori	$a0, $zero, 254
	ret
.Lfunc_end1768:
	.size	_ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv, .Lfunc_end1768-_ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev,"axG",@progbits,_ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev,comdat
	.weak	_ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev # -- Begin function _ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev
	.p2align	5
	.type	_ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev,@function
_ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev: # @_ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1769:
	.size	_ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev, .Lfunc_end1769-_ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev
                                        # -- End function
	.section	.text._ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv,"axG",@progbits,_ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv,comdat
	.weak	_ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv # -- Begin function _ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv
	.p2align	5
	.type	_ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv,@function
_ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv: # @_ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv
# %bb.0:
	ori	$a0, $zero, 253
	ret
.Lfunc_end1770:
	.size	_ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv, .Lfunc_end1770-_ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev,"axG",@progbits,_ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev,comdat
	.weak	_ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev # -- Begin function _ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev
	.p2align	5
	.type	_ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev,@function
_ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev: # @_ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1771:
	.size	_ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev, .Lfunc_end1771-_ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev
                                        # -- End function
	.section	.text._ZNK2kc28impl_ac_init_declarator_list8prod_selEv,"axG",@progbits,_ZNK2kc28impl_ac_init_declarator_list8prod_selEv,comdat
	.weak	_ZNK2kc28impl_ac_init_declarator_list8prod_selEv # -- Begin function _ZNK2kc28impl_ac_init_declarator_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc28impl_ac_init_declarator_list8prod_selEv,@function
_ZNK2kc28impl_ac_init_declarator_list8prod_selEv: # @_ZNK2kc28impl_ac_init_declarator_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 252
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1772:
	.size	_ZNK2kc28impl_ac_init_declarator_list8prod_selEv, .Lfunc_end1772-_ZNK2kc28impl_ac_init_declarator_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc28impl_ac_init_declarator_listD0Ev,"axG",@progbits,_ZN2kc28impl_ac_init_declarator_listD0Ev,comdat
	.weak	_ZN2kc28impl_ac_init_declarator_listD0Ev # -- Begin function _ZN2kc28impl_ac_init_declarator_listD0Ev
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_listD0Ev,@function
_ZN2kc28impl_ac_init_declarator_listD0Ev: # @_ZN2kc28impl_ac_init_declarator_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1773:
	.size	_ZN2kc28impl_ac_init_declarator_listD0Ev, .Lfunc_end1773-_ZN2kc28impl_ac_init_declarator_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv,"axG",@progbits,_ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv,comdat
	.weak	_ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv # -- Begin function _ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv
	.p2align	5
	.type	_ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv,@function
_ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv: # @_ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv
# %bb.0:
	ori	$a0, $zero, 246
	ret
.Lfunc_end1774:
	.size	_ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv, .Lfunc_end1774-_ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev,"axG",@progbits,_ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev,comdat
	.weak	_ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev # -- Begin function _ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev
	.p2align	5
	.type	_ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev,@function
_ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev: # @_ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1775:
	.size	_ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev, .Lfunc_end1775-_ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev
                                        # -- End function
	.section	.text._ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv,"axG",@progbits,_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv,comdat
	.weak	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv # -- Begin function _ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv
	.p2align	5
	.type	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv,@function
_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv: # @_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv
# %bb.0:
	ori	$a0, $zero, 239
	ret
.Lfunc_end1776:
	.size	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv, .Lfunc_end1776-_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev,"axG",@progbits,_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev,comdat
	.weak	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev # -- Begin function _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev
	.p2align	5
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev: # @_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1777:
	.size	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev, .Lfunc_end1777-_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev
                                        # -- End function
	.section	.text._ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv,"axG",@progbits,_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv,comdat
	.weak	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv # -- Begin function _ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv
	.p2align	5
	.type	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv,@function
_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv: # @_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv
# %bb.0:
	ori	$a0, $zero, 238
	ret
.Lfunc_end1778:
	.size	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv, .Lfunc_end1778-_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev,"axG",@progbits,_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev,comdat
	.weak	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev # -- Begin function _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev
	.p2align	5
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev: # @_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1779:
	.size	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev, .Lfunc_end1779-_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev
                                        # -- End function
	.section	.text._ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv,"axG",@progbits,_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv,comdat
	.weak	_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv # -- Begin function _ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv
	.p2align	5
	.type	_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv,@function
_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv: # @_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv
# %bb.0:
	ori	$a0, $zero, 237
	ret
.Lfunc_end1780:
	.size	_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv, .Lfunc_end1780-_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev,"axG",@progbits,_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev,comdat
	.weak	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev # -- Begin function _ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev
	.p2align	5
	.type	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev,@function
_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev: # @_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1781:
	.size	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev, .Lfunc_end1781-_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev
                                        # -- End function
	.section	.text._ZNK2kc30impl_ac_declaration_specifiers8prod_selEv,"axG",@progbits,_ZNK2kc30impl_ac_declaration_specifiers8prod_selEv,comdat
	.weak	_ZNK2kc30impl_ac_declaration_specifiers8prod_selEv # -- Begin function _ZNK2kc30impl_ac_declaration_specifiers8prod_selEv
	.p2align	5
	.type	_ZNK2kc30impl_ac_declaration_specifiers8prod_selEv,@function
_ZNK2kc30impl_ac_declaration_specifiers8prod_selEv: # @_ZNK2kc30impl_ac_declaration_specifiers8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 236
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1782:
	.size	_ZNK2kc30impl_ac_declaration_specifiers8prod_selEv, .Lfunc_end1782-_ZNK2kc30impl_ac_declaration_specifiers8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc30impl_ac_declaration_specifiersD0Ev,"axG",@progbits,_ZN2kc30impl_ac_declaration_specifiersD0Ev,comdat
	.weak	_ZN2kc30impl_ac_declaration_specifiersD0Ev # -- Begin function _ZN2kc30impl_ac_declaration_specifiersD0Ev
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiersD0Ev,@function
_ZN2kc30impl_ac_declaration_specifiersD0Ev: # @_ZN2kc30impl_ac_declaration_specifiersD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1783:
	.size	_ZN2kc30impl_ac_declaration_specifiersD0Ev, .Lfunc_end1783-_ZN2kc30impl_ac_declaration_specifiersD0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_ac_declaration_list8prod_selEv,"axG",@progbits,_ZNK2kc24impl_ac_declaration_list8prod_selEv,comdat
	.weak	_ZNK2kc24impl_ac_declaration_list8prod_selEv # -- Begin function _ZNK2kc24impl_ac_declaration_list8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_ac_declaration_list8prod_selEv,@function
_ZNK2kc24impl_ac_declaration_list8prod_selEv: # @_ZNK2kc24impl_ac_declaration_list8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 234
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1784:
	.size	_ZNK2kc24impl_ac_declaration_list8prod_selEv, .Lfunc_end1784-_ZNK2kc24impl_ac_declaration_list8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc24impl_ac_declaration_listD0Ev,"axG",@progbits,_ZN2kc24impl_ac_declaration_listD0Ev,comdat
	.weak	_ZN2kc24impl_ac_declaration_listD0Ev # -- Begin function _ZN2kc24impl_ac_declaration_listD0Ev
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_listD0Ev,@function
_ZN2kc24impl_ac_declaration_listD0Ev:   # @_ZN2kc24impl_ac_declaration_listD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1785:
	.size	_ZN2kc24impl_ac_declaration_listD0Ev, .Lfunc_end1785-_ZN2kc24impl_ac_declaration_listD0Ev
                                        # -- End function
	.section	.text._ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv,"axG",@progbits,_ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv,comdat
	.weak	_ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv # -- Begin function _ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv
	.p2align	5
	.type	_ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv,@function
_ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv: # @_ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv
# %bb.0:
	ori	$a0, $zero, 232
	ret
.Lfunc_end1786:
	.size	_ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv, .Lfunc_end1786-_ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc33impl_ac_declaration_AcDeclarationD0Ev,"axG",@progbits,_ZN2kc33impl_ac_declaration_AcDeclarationD0Ev,comdat
	.weak	_ZN2kc33impl_ac_declaration_AcDeclarationD0Ev # -- Begin function _ZN2kc33impl_ac_declaration_AcDeclarationD0Ev
	.p2align	5
	.type	_ZN2kc33impl_ac_declaration_AcDeclarationD0Ev,@function
_ZN2kc33impl_ac_declaration_AcDeclarationD0Ev: # @_ZN2kc33impl_ac_declaration_AcDeclarationD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1787:
	.size	_ZN2kc33impl_ac_declaration_AcDeclarationD0Ev, .Lfunc_end1787-_ZN2kc33impl_ac_declaration_AcDeclarationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv,"axG",@progbits,_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv,comdat
	.weak	_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv # -- Begin function _ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv,@function
_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv: # @_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv
# %bb.0:
	ori	$a0, $zero, 231
	ret
.Lfunc_end1788:
	.size	_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv, .Lfunc_end1788-_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev,"axG",@progbits,_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev,comdat
	.weak	_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev # -- Begin function _ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev
	.p2align	5
	.type	_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev,@function
_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev: # @_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1789:
	.size	_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev, .Lfunc_end1789-_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_unparsedeclsinfo8prod_selEv,"axG",@progbits,_ZNK2kc21impl_unparsedeclsinfo8prod_selEv,comdat
	.weak	_ZNK2kc21impl_unparsedeclsinfo8prod_selEv # -- Begin function _ZNK2kc21impl_unparsedeclsinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_unparsedeclsinfo8prod_selEv,@function
_ZNK2kc21impl_unparsedeclsinfo8prod_selEv: # @_ZNK2kc21impl_unparsedeclsinfo8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 230
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1790:
	.size	_ZNK2kc21impl_unparsedeclsinfo8prod_selEv, .Lfunc_end1790-_ZNK2kc21impl_unparsedeclsinfo8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc21impl_unparsedeclsinfoD0Ev,"axG",@progbits,_ZN2kc21impl_unparsedeclsinfoD0Ev,comdat
	.weak	_ZN2kc21impl_unparsedeclsinfoD0Ev # -- Begin function _ZN2kc21impl_unparsedeclsinfoD0Ev
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfoD0Ev,@function
_ZN2kc21impl_unparsedeclsinfoD0Ev:      # @_ZN2kc21impl_unparsedeclsinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1791:
	.size	_ZN2kc21impl_unparsedeclsinfoD0Ev, .Lfunc_end1791-_ZN2kc21impl_unparsedeclsinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv,"axG",@progbits,_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv,comdat
	.weak	_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv # -- Begin function _ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv,@function
_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv: # @_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv
# %bb.0:
	ori	$a0, $zero, 228
	ret
.Lfunc_end1792:
	.size	_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv, .Lfunc_end1792-_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev,"axG",@progbits,_ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev,comdat
	.weak	_ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev # -- Begin function _ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev
	.p2align	5
	.type	_ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev,@function
_ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev: # @_ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1793:
	.size	_ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev, .Lfunc_end1793-_ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_unparseviewsinfo8prod_selEv,"axG",@progbits,_ZNK2kc21impl_unparseviewsinfo8prod_selEv,comdat
	.weak	_ZNK2kc21impl_unparseviewsinfo8prod_selEv # -- Begin function _ZNK2kc21impl_unparseviewsinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_unparseviewsinfo8prod_selEv,@function
_ZNK2kc21impl_unparseviewsinfo8prod_selEv: # @_ZNK2kc21impl_unparseviewsinfo8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 227
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1794:
	.size	_ZNK2kc21impl_unparseviewsinfo8prod_selEv, .Lfunc_end1794-_ZNK2kc21impl_unparseviewsinfo8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc21impl_unparseviewsinfoD0Ev,"axG",@progbits,_ZN2kc21impl_unparseviewsinfoD0Ev,comdat
	.weak	_ZN2kc21impl_unparseviewsinfoD0Ev # -- Begin function _ZN2kc21impl_unparseviewsinfoD0Ev
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfoD0Ev,@function
_ZN2kc21impl_unparseviewsinfoD0Ev:      # @_ZN2kc21impl_unparseviewsinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1795:
	.size	_ZN2kc21impl_unparseviewsinfoD0Ev, .Lfunc_end1795-_ZN2kc21impl_unparseviewsinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv,"axG",@progbits,_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv,comdat
	.weak	_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv # -- Begin function _ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv,@function
_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv: # @_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv
# %bb.0:
	ori	$a0, $zero, 225
	ret
.Lfunc_end1796:
	.size	_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv, .Lfunc_end1796-_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev,"axG",@progbits,_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev,comdat
	.weak	_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev # -- Begin function _ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev
	.p2align	5
	.type	_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev,@function
_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev: # @_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1797:
	.size	_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev, .Lfunc_end1797-_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_rewriteviewsinfo8prod_selEv,"axG",@progbits,_ZNK2kc21impl_rewriteviewsinfo8prod_selEv,comdat
	.weak	_ZNK2kc21impl_rewriteviewsinfo8prod_selEv # -- Begin function _ZNK2kc21impl_rewriteviewsinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_rewriteviewsinfo8prod_selEv,@function
_ZNK2kc21impl_rewriteviewsinfo8prod_selEv: # @_ZNK2kc21impl_rewriteviewsinfo8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 224
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1798:
	.size	_ZNK2kc21impl_rewriteviewsinfo8prod_selEv, .Lfunc_end1798-_ZNK2kc21impl_rewriteviewsinfo8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc21impl_rewriteviewsinfoD0Ev,"axG",@progbits,_ZN2kc21impl_rewriteviewsinfoD0Ev,comdat
	.weak	_ZN2kc21impl_rewriteviewsinfoD0Ev # -- Begin function _ZN2kc21impl_rewriteviewsinfoD0Ev
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfoD0Ev,@function
_ZN2kc21impl_rewriteviewsinfoD0Ev:      # @_ZN2kc21impl_rewriteviewsinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1799:
	.size	_ZN2kc21impl_rewriteviewsinfoD0Ev, .Lfunc_end1799-_ZN2kc21impl_rewriteviewsinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv,"axG",@progbits,_ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv,comdat
	.weak	_ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv # -- Begin function _ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv,@function
_ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv: # @_ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv
# %bb.0:
	ori	$a0, $zero, 222
	ret
.Lfunc_end1800:
	.size	_ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv, .Lfunc_end1800-_ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev,"axG",@progbits,_ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev,comdat
	.weak	_ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev # -- Begin function _ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev
	.p2align	5
	.type	_ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev,@function
_ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev: # @_ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1801:
	.size	_ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev, .Lfunc_end1801-_ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc18impl_withcasesinfo8prod_selEv,"axG",@progbits,_ZNK2kc18impl_withcasesinfo8prod_selEv,comdat
	.weak	_ZNK2kc18impl_withcasesinfo8prod_selEv # -- Begin function _ZNK2kc18impl_withcasesinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc18impl_withcasesinfo8prod_selEv,@function
_ZNK2kc18impl_withcasesinfo8prod_selEv: # @_ZNK2kc18impl_withcasesinfo8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 221
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1802:
	.size	_ZNK2kc18impl_withcasesinfo8prod_selEv, .Lfunc_end1802-_ZNK2kc18impl_withcasesinfo8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc18impl_withcasesinfoD0Ev,"axG",@progbits,_ZN2kc18impl_withcasesinfoD0Ev,comdat
	.weak	_ZN2kc18impl_withcasesinfoD0Ev  # -- Begin function _ZN2kc18impl_withcasesinfoD0Ev
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfoD0Ev,@function
_ZN2kc18impl_withcasesinfoD0Ev:         # @_ZN2kc18impl_withcasesinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1803:
	.size	_ZN2kc18impl_withcasesinfoD0Ev, .Lfunc_end1803-_ZN2kc18impl_withcasesinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv,"axG",@progbits,_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv,comdat
	.weak	_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv # -- Begin function _ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv,@function
_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv: # @_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv
# %bb.0:
	ori	$a0, $zero, 219
	ret
.Lfunc_end1804:
	.size	_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv, .Lfunc_end1804-_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev,"axG",@progbits,_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev,comdat
	.weak	_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev # -- Begin function _ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev
	.p2align	5
	.type	_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev,@function
_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev: # @_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1805:
	.size	_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev, .Lfunc_end1805-_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_rewriterulesinfo8prod_selEv,"axG",@progbits,_ZNK2kc21impl_rewriterulesinfo8prod_selEv,comdat
	.weak	_ZNK2kc21impl_rewriterulesinfo8prod_selEv # -- Begin function _ZNK2kc21impl_rewriterulesinfo8prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_rewriterulesinfo8prod_selEv,@function
_ZNK2kc21impl_rewriterulesinfo8prod_selEv: # @_ZNK2kc21impl_rewriterulesinfo8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 218
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1806:
	.size	_ZNK2kc21impl_rewriterulesinfo8prod_selEv, .Lfunc_end1806-_ZNK2kc21impl_rewriterulesinfo8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc21impl_rewriterulesinfoD0Ev,"axG",@progbits,_ZN2kc21impl_rewriterulesinfoD0Ev,comdat
	.weak	_ZN2kc21impl_rewriterulesinfoD0Ev # -- Begin function _ZN2kc21impl_rewriterulesinfoD0Ev
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfoD0Ev,@function
_ZN2kc21impl_rewriterulesinfoD0Ev:      # @_ZN2kc21impl_rewriterulesinfoD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1807:
	.size	_ZN2kc21impl_rewriterulesinfoD0Ev, .Lfunc_end1807-_ZN2kc21impl_rewriterulesinfoD0Ev
                                        # -- End function
	.section	.text._ZNK2kc16impl_argsnumbers8prod_selEv,"axG",@progbits,_ZNK2kc16impl_argsnumbers8prod_selEv,comdat
	.weak	_ZNK2kc16impl_argsnumbers8prod_selEv # -- Begin function _ZNK2kc16impl_argsnumbers8prod_selEv
	.p2align	5
	.type	_ZNK2kc16impl_argsnumbers8prod_selEv,@function
_ZNK2kc16impl_argsnumbers8prod_selEv:   # @_ZNK2kc16impl_argsnumbers8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 216
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1808:
	.size	_ZNK2kc16impl_argsnumbers8prod_selEv, .Lfunc_end1808-_ZNK2kc16impl_argsnumbers8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc16impl_argsnumbersD0Ev,"axG",@progbits,_ZN2kc16impl_argsnumbersD0Ev,comdat
	.weak	_ZN2kc16impl_argsnumbersD0Ev    # -- Begin function _ZN2kc16impl_argsnumbersD0Ev
	.p2align	5
	.type	_ZN2kc16impl_argsnumbersD0Ev,@function
_ZN2kc16impl_argsnumbersD0Ev:           # @_ZN2kc16impl_argsnumbersD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1809:
	.size	_ZN2kc16impl_argsnumbersD0Ev, .Lfunc_end1809-_ZN2kc16impl_argsnumbersD0Ev
                                        # -- End function
	.section	.text._ZNK2kc10impl_paths8prod_selEv,"axG",@progbits,_ZNK2kc10impl_paths8prod_selEv,comdat
	.weak	_ZNK2kc10impl_paths8prod_selEv  # -- Begin function _ZNK2kc10impl_paths8prod_selEv
	.p2align	5
	.type	_ZNK2kc10impl_paths8prod_selEv,@function
_ZNK2kc10impl_paths8prod_selEv:         # @_ZNK2kc10impl_paths8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 214
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1810:
	.size	_ZNK2kc10impl_paths8prod_selEv, .Lfunc_end1810-_ZNK2kc10impl_paths8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc10impl_pathsD0Ev,"axG",@progbits,_ZN2kc10impl_pathsD0Ev,comdat
	.weak	_ZN2kc10impl_pathsD0Ev          # -- Begin function _ZN2kc10impl_pathsD0Ev
	.p2align	5
	.type	_ZN2kc10impl_pathsD0Ev,@function
_ZN2kc10impl_pathsD0Ev:                 # @_ZN2kc10impl_pathsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1811:
	.size	_ZN2kc10impl_pathsD0Ev, .Lfunc_end1811-_ZN2kc10impl_pathsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc9impl_path8prod_selEv,"axG",@progbits,_ZNK2kc9impl_path8prod_selEv,comdat
	.weak	_ZNK2kc9impl_path8prod_selEv    # -- Begin function _ZNK2kc9impl_path8prod_selEv
	.p2align	5
	.type	_ZNK2kc9impl_path8prod_selEv,@function
_ZNK2kc9impl_path8prod_selEv:           # @_ZNK2kc9impl_path8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 212
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1812:
	.size	_ZNK2kc9impl_path8prod_selEv, .Lfunc_end1812-_ZNK2kc9impl_path8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc9impl_pathD0Ev,"axG",@progbits,_ZN2kc9impl_pathD0Ev,comdat
	.weak	_ZN2kc9impl_pathD0Ev            # -- Begin function _ZN2kc9impl_pathD0Ev
	.p2align	5
	.type	_ZN2kc9impl_pathD0Ev,@function
_ZN2kc9impl_pathD0Ev:                   # @_ZN2kc9impl_pathD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1813:
	.size	_ZN2kc9impl_pathD0Ev, .Lfunc_end1813-_ZN2kc9impl_pathD0Ev
                                        # -- End function
	.section	.text._ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv,"axG",@progbits,_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv,comdat
	.weak	_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv # -- Begin function _ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv
	.p2align	5
	.type	_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv,@function
_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv: # @_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv
# %bb.0:
	ori	$a0, $zero, 210
	ret
.Lfunc_end1814:
	.size	_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv, .Lfunc_end1814-_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev,"axG",@progbits,_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev,comdat
	.weak	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev # -- Begin function _ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev
	.p2align	5
	.type	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev,@function
_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev: # @_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1815:
	.size	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev, .Lfunc_end1815-_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev
                                        # -- End function
	.section	.text._ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv,"axG",@progbits,_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv,comdat
	.weak	_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv # -- Begin function _ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv
	.p2align	5
	.type	_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv,@function
_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv: # @_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv
# %bb.0:
	ori	$a0, $zero, 209
	ret
.Lfunc_end1816:
	.size	_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv, .Lfunc_end1816-_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev,"axG",@progbits,_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev,comdat
	.weak	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev,@function
_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev: # @_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1817:
	.size	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev, .Lfunc_end1817-_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev
                                        # -- End function
	.section	.text._ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv,"axG",@progbits,_ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv,comdat
	.weak	_ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv # -- Begin function _ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv
	.p2align	5
	.type	_ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv,@function
_ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv: # @_ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv
# %bb.0:
	ori	$a0, $zero, 207
	ret
.Lfunc_end1818:
	.size	_ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv, .Lfunc_end1818-_ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev,"axG",@progbits,_ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev,comdat
	.weak	_ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev # -- Begin function _ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev
	.p2align	5
	.type	_ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev,@function
_ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev: # @_ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1819:
	.size	_ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev, .Lfunc_end1819-_ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev
                                        # -- End function
	.section	.text._ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv,"axG",@progbits,_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv,comdat
	.weak	_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv # -- Begin function _ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv
	.p2align	5
	.type	_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv,@function
_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv: # @_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv
# %bb.0:
	ori	$a0, $zero, 206
	ret
.Lfunc_end1820:
	.size	_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv, .Lfunc_end1820-_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev,"axG",@progbits,_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev,comdat
	.weak	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev # -- Begin function _ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev
	.p2align	5
	.type	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev,@function
_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev: # @_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev
# %bb.0:
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1821:
	.size	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev, .Lfunc_end1821-_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev
                                        # -- End function
	.section	.text._ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv,"axG",@progbits,_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv,comdat
	.weak	_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv # -- Begin function _ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv
	.p2align	5
	.type	_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv,@function
_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv: # @_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv
# %bb.0:
	ori	$a0, $zero, 205
	ret
.Lfunc_end1822:
	.size	_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv, .Lfunc_end1822-_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev,"axG",@progbits,_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev,comdat
	.weak	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev,@function
_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev: # @_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1823:
	.size	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev, .Lfunc_end1823-_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev
                                        # -- End function
	.section	.text._ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv,"axG",@progbits,_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv,comdat
	.weak	_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv # -- Begin function _ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv
	.p2align	5
	.type	_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv,@function
_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv: # @_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv
# %bb.0:
	ori	$a0, $zero, 204
	ret
.Lfunc_end1824:
	.size	_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv, .Lfunc_end1824-_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev,"axG",@progbits,_ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev,comdat
	.weak	_ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev,@function
_ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev: # @_ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1825:
	.size	_ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev, .Lfunc_end1825-_ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev
                                        # -- End function
	.section	.text._ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv,"axG",@progbits,_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv,comdat
	.weak	_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv # -- Begin function _ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv
	.p2align	5
	.type	_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv,@function
_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv: # @_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv
# %bb.0:
	ori	$a0, $zero, 203
	ret
.Lfunc_end1826:
	.size	_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv, .Lfunc_end1826-_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev,"axG",@progbits,_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev,comdat
	.weak	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev # -- Begin function _ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev
	.p2align	5
	.type	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev,@function
_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev: # @_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev
# %bb.0:
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1827:
	.size	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev, .Lfunc_end1827-_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev
                                        # -- End function
	.section	.text._ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv,"axG",@progbits,_ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv,comdat
	.weak	_ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv # -- Begin function _ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv
	.p2align	5
	.type	_ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv,@function
_ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv: # @_ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv
# %bb.0:
	ori	$a0, $zero, 202
	ret
.Lfunc_end1828:
	.size	_ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv, .Lfunc_end1828-_ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev,"axG",@progbits,_ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev,comdat
	.weak	_ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev # -- Begin function _ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev
	.p2align	5
	.type	_ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev,@function
_ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev: # @_ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1829:
	.size	_ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev, .Lfunc_end1829-_ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev
                                        # -- End function
	.section	.text._ZNK2kc26impl_patternrepresentation8prod_selEv,"axG",@progbits,_ZNK2kc26impl_patternrepresentation8prod_selEv,comdat
	.weak	_ZNK2kc26impl_patternrepresentation8prod_selEv # -- Begin function _ZNK2kc26impl_patternrepresentation8prod_selEv
	.p2align	5
	.type	_ZNK2kc26impl_patternrepresentation8prod_selEv,@function
_ZNK2kc26impl_patternrepresentation8prod_selEv: # @_ZNK2kc26impl_patternrepresentation8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 201
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1830:
	.size	_ZNK2kc26impl_patternrepresentation8prod_selEv, .Lfunc_end1830-_ZNK2kc26impl_patternrepresentation8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc26impl_patternrepresentationD0Ev,"axG",@progbits,_ZN2kc26impl_patternrepresentationD0Ev,comdat
	.weak	_ZN2kc26impl_patternrepresentationD0Ev # -- Begin function _ZN2kc26impl_patternrepresentationD0Ev
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentationD0Ev,@function
_ZN2kc26impl_patternrepresentationD0Ev: # @_ZN2kc26impl_patternrepresentationD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1831:
	.size	_ZN2kc26impl_patternrepresentationD0Ev, .Lfunc_end1831-_ZN2kc26impl_patternrepresentationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc27impl_patternrepresentations8prod_selEv,"axG",@progbits,_ZNK2kc27impl_patternrepresentations8prod_selEv,comdat
	.weak	_ZNK2kc27impl_patternrepresentations8prod_selEv # -- Begin function _ZNK2kc27impl_patternrepresentations8prod_selEv
	.p2align	5
	.type	_ZNK2kc27impl_patternrepresentations8prod_selEv,@function
_ZNK2kc27impl_patternrepresentations8prod_selEv: # @_ZNK2kc27impl_patternrepresentations8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 199
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1832:
	.size	_ZNK2kc27impl_patternrepresentations8prod_selEv, .Lfunc_end1832-_ZNK2kc27impl_patternrepresentations8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc27impl_patternrepresentationsD0Ev,"axG",@progbits,_ZN2kc27impl_patternrepresentationsD0Ev,comdat
	.weak	_ZN2kc27impl_patternrepresentationsD0Ev # -- Begin function _ZN2kc27impl_patternrepresentationsD0Ev
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentationsD0Ev,@function
_ZN2kc27impl_patternrepresentationsD0Ev: # @_ZN2kc27impl_patternrepresentationsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1833:
	.size	_ZN2kc27impl_patternrepresentationsD0Ev, .Lfunc_end1833-_ZN2kc27impl_patternrepresentationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc14impl_variables8prod_selEv,"axG",@progbits,_ZNK2kc14impl_variables8prod_selEv,comdat
	.weak	_ZNK2kc14impl_variables8prod_selEv # -- Begin function _ZNK2kc14impl_variables8prod_selEv
	.p2align	5
	.type	_ZNK2kc14impl_variables8prod_selEv,@function
_ZNK2kc14impl_variables8prod_selEv:     # @_ZNK2kc14impl_variables8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 192
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1834:
	.size	_ZNK2kc14impl_variables8prod_selEv, .Lfunc_end1834-_ZNK2kc14impl_variables8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc14impl_variablesD0Ev,"axG",@progbits,_ZN2kc14impl_variablesD0Ev,comdat
	.weak	_ZN2kc14impl_variablesD0Ev      # -- Begin function _ZN2kc14impl_variablesD0Ev
	.p2align	5
	.type	_ZN2kc14impl_variablesD0Ev,@function
_ZN2kc14impl_variablesD0Ev:             # @_ZN2kc14impl_variablesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1835:
	.size	_ZN2kc14impl_variablesD0Ev, .Lfunc_end1835-_ZN2kc14impl_variablesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc10impl_phyla8prod_selEv,"axG",@progbits,_ZNK2kc10impl_phyla8prod_selEv,comdat
	.weak	_ZNK2kc10impl_phyla8prod_selEv  # -- Begin function _ZNK2kc10impl_phyla8prod_selEv
	.p2align	5
	.type	_ZNK2kc10impl_phyla8prod_selEv,@function
_ZNK2kc10impl_phyla8prod_selEv:         # @_ZNK2kc10impl_phyla8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 190
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1836:
	.size	_ZNK2kc10impl_phyla8prod_selEv, .Lfunc_end1836-_ZNK2kc10impl_phyla8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc10impl_phylaD0Ev,"axG",@progbits,_ZN2kc10impl_phylaD0Ev,comdat
	.weak	_ZN2kc10impl_phylaD0Ev          # -- Begin function _ZN2kc10impl_phylaD0Ev
	.p2align	5
	.type	_ZN2kc10impl_phylaD0Ev,@function
_ZN2kc10impl_phylaD0Ev:                 # @_ZN2kc10impl_phylaD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1837:
	.size	_ZN2kc10impl_phylaD0Ev, .Lfunc_end1837-_ZN2kc10impl_phylaD0Ev
                                        # -- End function
	.section	.text._ZNK2kc14impl_operators8prod_selEv,"axG",@progbits,_ZNK2kc14impl_operators8prod_selEv,comdat
	.weak	_ZNK2kc14impl_operators8prod_selEv # -- Begin function _ZNK2kc14impl_operators8prod_selEv
	.p2align	5
	.type	_ZNK2kc14impl_operators8prod_selEv,@function
_ZNK2kc14impl_operators8prod_selEv:     # @_ZNK2kc14impl_operators8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 188
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1838:
	.size	_ZNK2kc14impl_operators8prod_selEv, .Lfunc_end1838-_ZNK2kc14impl_operators8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc14impl_operatorsD0Ev,"axG",@progbits,_ZN2kc14impl_operatorsD0Ev,comdat
	.weak	_ZN2kc14impl_operatorsD0Ev      # -- Begin function _ZN2kc14impl_operatorsD0Ev
	.p2align	5
	.type	_ZN2kc14impl_operatorsD0Ev,@function
_ZN2kc14impl_operatorsD0Ev:             # @_ZN2kc14impl_operatorsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1839:
	.size	_ZN2kc14impl_operatorsD0Ev, .Lfunc_end1839-_ZN2kc14impl_operatorsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv,"axG",@progbits,_ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv,comdat
	.weak	_ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv # -- Begin function _ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv
	.p2align	5
	.type	_ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv,@function
_ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv: # @_ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv
# %bb.0:
	ori	$a0, $zero, 186
	ret
.Lfunc_end1840:
	.size	_ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv, .Lfunc_end1840-_ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc26impl_IDtype_ITLanguageNameD0Ev,"axG",@progbits,_ZN2kc26impl_IDtype_ITLanguageNameD0Ev,comdat
	.weak	_ZN2kc26impl_IDtype_ITLanguageNameD0Ev # -- Begin function _ZN2kc26impl_IDtype_ITLanguageNameD0Ev
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITLanguageNameD0Ev,@function
_ZN2kc26impl_IDtype_ITLanguageNameD0Ev: # @_ZN2kc26impl_IDtype_ITLanguageNameD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1841:
	.size	_ZN2kc26impl_IDtype_ITLanguageNameD0Ev, .Lfunc_end1841-_ZN2kc26impl_IDtype_ITLanguageNameD0Ev
                                        # -- End function
	.section	.text._ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv,"axG",@progbits,_ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv,comdat
	.weak	_ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv # -- Begin function _ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv
	.p2align	5
	.type	_ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv,@function
_ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv: # @_ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv
# %bb.0:
	ori	$a0, $zero, 185
	ret
.Lfunc_end1842:
	.size	_ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv, .Lfunc_end1842-_ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc29impl_IDtype_ITPatternVariableD0Ev,"axG",@progbits,_ZN2kc29impl_IDtype_ITPatternVariableD0Ev,comdat
	.weak	_ZN2kc29impl_IDtype_ITPatternVariableD0Ev # -- Begin function _ZN2kc29impl_IDtype_ITPatternVariableD0Ev
	.p2align	5
	.type	_ZN2kc29impl_IDtype_ITPatternVariableD0Ev,@function
_ZN2kc29impl_IDtype_ITPatternVariableD0Ev: # @_ZN2kc29impl_IDtype_ITPatternVariableD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1843:
	.size	_ZN2kc29impl_IDtype_ITPatternVariableD0Ev, .Lfunc_end1843-_ZN2kc29impl_IDtype_ITPatternVariableD0Ev
                                        # -- End function
	.section	.text._ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv,"axG",@progbits,_ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv,comdat
	.weak	_ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv # -- Begin function _ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv
	.p2align	5
	.type	_ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv,@function
_ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv: # @_ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv
# %bb.0:
	ori	$a0, $zero, 184
	ret
.Lfunc_end1844:
	.size	_ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv, .Lfunc_end1844-_ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc26impl_IDtype_ITUserFunctionD0Ev,"axG",@progbits,_ZN2kc26impl_IDtype_ITUserFunctionD0Ev,comdat
	.weak	_ZN2kc26impl_IDtype_ITUserFunctionD0Ev # -- Begin function _ZN2kc26impl_IDtype_ITUserFunctionD0Ev
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITUserFunctionD0Ev,@function
_ZN2kc26impl_IDtype_ITUserFunctionD0Ev: # @_ZN2kc26impl_IDtype_ITUserFunctionD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1845:
	.size	_ZN2kc26impl_IDtype_ITUserFunctionD0Ev, .Lfunc_end1845-_ZN2kc26impl_IDtype_ITUserFunctionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv,"axG",@progbits,_ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv,comdat
	.weak	_ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv # -- Begin function _ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv
	.p2align	5
	.type	_ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv,@function
_ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv: # @_ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv
# %bb.0:
	ori	$a0, $zero, 176
	ret
.Lfunc_end1846:
	.size	_ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv, .Lfunc_end1846-_ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc26impl_IDtype_ITUserOperatorD0Ev,"axG",@progbits,_ZN2kc26impl_IDtype_ITUserOperatorD0Ev,comdat
	.weak	_ZN2kc26impl_IDtype_ITUserOperatorD0Ev # -- Begin function _ZN2kc26impl_IDtype_ITUserOperatorD0Ev
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITUserOperatorD0Ev,@function
_ZN2kc26impl_IDtype_ITUserOperatorD0Ev: # @_ZN2kc26impl_IDtype_ITUserOperatorD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1847:
	.size	_ZN2kc26impl_IDtype_ITUserOperatorD0Ev, .Lfunc_end1847-_ZN2kc26impl_IDtype_ITUserOperatorD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv,"axG",@progbits,_ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv,comdat
	.weak	_ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv # -- Begin function _ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv,@function
_ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv: # @_ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv
# %bb.0:
	ori	$a0, $zero, 175
	ret
.Lfunc_end1848:
	.size	_ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv, .Lfunc_end1848-_ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev,"axG",@progbits,_ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev,comdat
	.weak	_ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev # -- Begin function _ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev
	.p2align	5
	.type	_ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev,@function
_ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev: # @_ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1849:
	.size	_ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev, .Lfunc_end1849-_ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv,"axG",@progbits,_ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv,comdat
	.weak	_ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv # -- Begin function _ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv,@function
_ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv: # @_ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv
# %bb.0:
	ori	$a0, $zero, 174
	ret
.Lfunc_end1850:
	.size	_ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv, .Lfunc_end1850-_ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc24impl_IDtype_ITUserPhylumD0Ev,"axG",@progbits,_ZN2kc24impl_IDtype_ITUserPhylumD0Ev,comdat
	.weak	_ZN2kc24impl_IDtype_ITUserPhylumD0Ev # -- Begin function _ZN2kc24impl_IDtype_ITUserPhylumD0Ev
	.p2align	5
	.type	_ZN2kc24impl_IDtype_ITUserPhylumD0Ev,@function
_ZN2kc24impl_IDtype_ITUserPhylumD0Ev:   # @_ZN2kc24impl_IDtype_ITUserPhylumD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1851:
	.size	_ZN2kc24impl_IDtype_ITUserPhylumD0Ev, .Lfunc_end1851-_ZN2kc24impl_IDtype_ITUserPhylumD0Ev
                                        # -- End function
	.section	.text._ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv,"axG",@progbits,_ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv,comdat
	.weak	_ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv # -- Begin function _ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv
	.p2align	5
	.type	_ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv,@function
_ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv: # @_ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv
# %bb.0:
	ori	$a0, $zero, 173
	ret
.Lfunc_end1852:
	.size	_ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv, .Lfunc_end1852-_ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev,"axG",@progbits,_ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev,comdat
	.weak	_ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev # -- Begin function _ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev
	.p2align	5
	.type	_ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev,@function
_ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev: # @_ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1853:
	.size	_ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev, .Lfunc_end1853-_ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev
                                        # -- End function
	.section	.text._ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv,"axG",@progbits,_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv,comdat
	.weak	_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv # -- Begin function _ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv
	.p2align	5
	.type	_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv,@function
_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv: # @_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv
# %bb.0:
	ori	$a0, $zero, 171
	ret
.Lfunc_end1854:
	.size	_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv, .Lfunc_end1854-_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev,"axG",@progbits,_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev,comdat
	.weak	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev # -- Begin function _ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev
	.p2align	5
	.type	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev,@function
_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev: # @_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1855:
	.size	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev, .Lfunc_end1855-_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev
                                        # -- End function
	.section	.text._ZNK2kc27impl_scopetypefilelinestack8prod_selEv,"axG",@progbits,_ZNK2kc27impl_scopetypefilelinestack8prod_selEv,comdat
	.weak	_ZNK2kc27impl_scopetypefilelinestack8prod_selEv # -- Begin function _ZNK2kc27impl_scopetypefilelinestack8prod_selEv
	.p2align	5
	.type	_ZNK2kc27impl_scopetypefilelinestack8prod_selEv,@function
_ZNK2kc27impl_scopetypefilelinestack8prod_selEv: # @_ZNK2kc27impl_scopetypefilelinestack8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 170
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1856:
	.size	_ZNK2kc27impl_scopetypefilelinestack8prod_selEv, .Lfunc_end1856-_ZNK2kc27impl_scopetypefilelinestack8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc27impl_scopetypefilelinestackD0Ev,"axG",@progbits,_ZN2kc27impl_scopetypefilelinestackD0Ev,comdat
	.weak	_ZN2kc27impl_scopetypefilelinestackD0Ev # -- Begin function _ZN2kc27impl_scopetypefilelinestackD0Ev
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestackD0Ev,@function
_ZN2kc27impl_scopetypefilelinestackD0Ev: # @_ZN2kc27impl_scopetypefilelinestackD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1857:
	.size	_ZN2kc27impl_scopetypefilelinestackD0Ev, .Lfunc_end1857-_ZN2kc27impl_scopetypefilelinestackD0Ev
                                        # -- End function
	.section	.text._ZNK2kc18impl_languagenames8prod_selEv,"axG",@progbits,_ZNK2kc18impl_languagenames8prod_selEv,comdat
	.weak	_ZNK2kc18impl_languagenames8prod_selEv # -- Begin function _ZNK2kc18impl_languagenames8prod_selEv
	.p2align	5
	.type	_ZNK2kc18impl_languagenames8prod_selEv,@function
_ZNK2kc18impl_languagenames8prod_selEv: # @_ZNK2kc18impl_languagenames8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 165
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1858:
	.size	_ZNK2kc18impl_languagenames8prod_selEv, .Lfunc_end1858-_ZNK2kc18impl_languagenames8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc18impl_languagenamesD0Ev,"axG",@progbits,_ZN2kc18impl_languagenamesD0Ev,comdat
	.weak	_ZN2kc18impl_languagenamesD0Ev  # -- Begin function _ZN2kc18impl_languagenamesD0Ev
	.p2align	5
	.type	_ZN2kc18impl_languagenamesD0Ev,@function
_ZN2kc18impl_languagenamesD0Ev:         # @_ZN2kc18impl_languagenamesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1859:
	.size	_ZN2kc18impl_languagenamesD0Ev, .Lfunc_end1859-_ZN2kc18impl_languagenamesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_languageoption_LanguageList8prod_selEv,"axG",@progbits,_ZNK2kc32impl_languageoption_LanguageList8prod_selEv,comdat
	.weak	_ZNK2kc32impl_languageoption_LanguageList8prod_selEv # -- Begin function _ZNK2kc32impl_languageoption_LanguageList8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_languageoption_LanguageList8prod_selEv,@function
_ZNK2kc32impl_languageoption_LanguageList8prod_selEv: # @_ZNK2kc32impl_languageoption_LanguageList8prod_selEv
# %bb.0:
	ori	$a0, $zero, 163
	ret
.Lfunc_end1860:
	.size	_ZNK2kc32impl_languageoption_LanguageList8prod_selEv, .Lfunc_end1860-_ZNK2kc32impl_languageoption_LanguageList8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc32impl_languageoption_LanguageListD0Ev,"axG",@progbits,_ZN2kc32impl_languageoption_LanguageListD0Ev,comdat
	.weak	_ZN2kc32impl_languageoption_LanguageListD0Ev # -- Begin function _ZN2kc32impl_languageoption_LanguageListD0Ev
	.p2align	5
	.type	_ZN2kc32impl_languageoption_LanguageListD0Ev,@function
_ZN2kc32impl_languageoption_LanguageListD0Ev: # @_ZN2kc32impl_languageoption_LanguageListD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1861:
	.size	_ZN2kc32impl_languageoption_LanguageListD0Ev, .Lfunc_end1861-_ZN2kc32impl_languageoption_LanguageListD0Ev
                                        # -- End function
	.section	.text._ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv,"axG",@progbits,_ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv,comdat
	.weak	_ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv # -- Begin function _ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv
	.p2align	5
	.type	_ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv,@function
_ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv: # @_ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv
# %bb.0:
	ori	$a0, $zero, 161
	ret
.Lfunc_end1862:
	.size	_ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv, .Lfunc_end1862-_ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc31impl_viewnameoption_YesViewnameD0Ev,"axG",@progbits,_ZN2kc31impl_viewnameoption_YesViewnameD0Ev,comdat
	.weak	_ZN2kc31impl_viewnameoption_YesViewnameD0Ev # -- Begin function _ZN2kc31impl_viewnameoption_YesViewnameD0Ev
	.p2align	5
	.type	_ZN2kc31impl_viewnameoption_YesViewnameD0Ev,@function
_ZN2kc31impl_viewnameoption_YesViewnameD0Ev: # @_ZN2kc31impl_viewnameoption_YesViewnameD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1863:
	.size	_ZN2kc31impl_viewnameoption_YesViewnameD0Ev, .Lfunc_end1863-_ZN2kc31impl_viewnameoption_YesViewnameD0Ev
                                        # -- End function
	.section	.text._ZNK2kc18impl_unpattributes8prod_selEv,"axG",@progbits,_ZNK2kc18impl_unpattributes8prod_selEv,comdat
	.weak	_ZNK2kc18impl_unpattributes8prod_selEv # -- Begin function _ZNK2kc18impl_unpattributes8prod_selEv
	.p2align	5
	.type	_ZNK2kc18impl_unpattributes8prod_selEv,@function
_ZNK2kc18impl_unpattributes8prod_selEv: # @_ZNK2kc18impl_unpattributes8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 159
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1864:
	.size	_ZNK2kc18impl_unpattributes8prod_selEv, .Lfunc_end1864-_ZNK2kc18impl_unpattributes8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc18impl_unpattributesD0Ev,"axG",@progbits,_ZN2kc18impl_unpattributesD0Ev,comdat
	.weak	_ZN2kc18impl_unpattributesD0Ev  # -- Begin function _ZN2kc18impl_unpattributesD0Ev
	.p2align	5
	.type	_ZN2kc18impl_unpattributesD0Ev,@function
_ZN2kc18impl_unpattributesD0Ev:         # @_ZN2kc18impl_unpattributesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1865:
	.size	_ZN2kc18impl_unpattributesD0Ev, .Lfunc_end1865-_ZN2kc18impl_unpattributesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv,"axG",@progbits,_ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv,comdat
	.weak	_ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv # -- Begin function _ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv
	.p2align	5
	.type	_ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv,@function
_ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv: # @_ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv
# %bb.0:
	ori	$a0, $zero, 157
	ret
.Lfunc_end1866:
	.size	_ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv, .Lfunc_end1866-_ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev,"axG",@progbits,_ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev,comdat
	.weak	_ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev # -- Begin function _ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev
	.p2align	5
	.type	_ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev,@function
_ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev: # @_ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1867:
	.size	_ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev, .Lfunc_end1867-_ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv,"axG",@progbits,_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv,comdat
	.weak	_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv # -- Begin function _ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv,@function
_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv: # @_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv
# %bb.0:
	ori	$a0, $zero, 156
	ret
.Lfunc_end1868:
	.size	_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv, .Lfunc_end1868-_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev,"axG",@progbits,_ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev,comdat
	.weak	_ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev # -- Begin function _ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev
	.p2align	5
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev: # @_ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1869:
	.size	_ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev, .Lfunc_end1869-_ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev
                                        # -- End function
	.section	.text._ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv,"axG",@progbits,_ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv,comdat
	.weak	_ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv # -- Begin function _ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv
	.p2align	5
	.type	_ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv,@function
_ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv: # @_ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv
# %bb.0:
	ori	$a0, $zero, 155
	ret
.Lfunc_end1870:
	.size	_ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv, .Lfunc_end1870-_ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev,"axG",@progbits,_ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev,comdat
	.weak	_ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev # -- Begin function _ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev
	.p2align	5
	.type	_ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev,@function
_ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev: # @_ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1871:
	.size	_ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev, .Lfunc_end1871-_ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv,"axG",@progbits,_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv,comdat
	.weak	_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv # -- Begin function _ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv,@function
_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv: # @_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv
# %bb.0:
	ori	$a0, $zero, 154
	ret
.Lfunc_end1872:
	.size	_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv, .Lfunc_end1872-_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev,"axG",@progbits,_ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev,comdat
	.weak	_ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev # -- Begin function _ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev
	.p2align	5
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev: # @_ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1873:
	.size	_ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev, .Lfunc_end1873-_ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev
                                        # -- End function
	.section	.text._ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv,"axG",@progbits,_ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv,comdat
	.weak	_ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv # -- Begin function _ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv
	.p2align	5
	.type	_ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv,@function
_ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv: # @_ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv
# %bb.0:
	ori	$a0, $zero, 153
	ret
.Lfunc_end1874:
	.size	_ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv, .Lfunc_end1874-_ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc26impl_unpsubterm_UnpSubTermD0Ev,"axG",@progbits,_ZN2kc26impl_unpsubterm_UnpSubTermD0Ev,comdat
	.weak	_ZN2kc26impl_unpsubterm_UnpSubTermD0Ev # -- Begin function _ZN2kc26impl_unpsubterm_UnpSubTermD0Ev
	.p2align	5
	.type	_ZN2kc26impl_unpsubterm_UnpSubTermD0Ev,@function
_ZN2kc26impl_unpsubterm_UnpSubTermD0Ev: # @_ZN2kc26impl_unpsubterm_UnpSubTermD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1875:
	.size	_ZN2kc26impl_unpsubterm_UnpSubTermD0Ev, .Lfunc_end1875-_ZN2kc26impl_unpsubterm_UnpSubTermD0Ev
                                        # -- End function
	.section	.text._ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv,"axG",@progbits,_ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv,comdat
	.weak	_ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv # -- Begin function _ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv
	.p2align	5
	.type	_ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv,@function
_ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv: # @_ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv
# %bb.0:
	ori	$a0, $zero, 152
	ret
.Lfunc_end1876:
	.size	_ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv, .Lfunc_end1876-_ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc29impl_unparseitem_UViewVarDeclD0Ev,"axG",@progbits,_ZN2kc29impl_unparseitem_UViewVarDeclD0Ev,comdat
	.weak	_ZN2kc29impl_unparseitem_UViewVarDeclD0Ev # -- Begin function _ZN2kc29impl_unparseitem_UViewVarDeclD0Ev
	.p2align	5
	.type	_ZN2kc29impl_unparseitem_UViewVarDeclD0Ev,@function
_ZN2kc29impl_unparseitem_UViewVarDeclD0Ev: # @_ZN2kc29impl_unparseitem_UViewVarDeclD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1877:
	.size	_ZN2kc29impl_unparseitem_UViewVarDeclD0Ev, .Lfunc_end1877-_ZN2kc29impl_unparseitem_UViewVarDeclD0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_unparseitem_UnpBody8prod_selEv,"axG",@progbits,_ZNK2kc24impl_unparseitem_UnpBody8prod_selEv,comdat
	.weak	_ZNK2kc24impl_unparseitem_UnpBody8prod_selEv # -- Begin function _ZNK2kc24impl_unparseitem_UnpBody8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_unparseitem_UnpBody8prod_selEv,@function
_ZNK2kc24impl_unparseitem_UnpBody8prod_selEv: # @_ZNK2kc24impl_unparseitem_UnpBody8prod_selEv
# %bb.0:
	ori	$a0, $zero, 151
	ret
.Lfunc_end1878:
	.size	_ZNK2kc24impl_unparseitem_UnpBody8prod_selEv, .Lfunc_end1878-_ZNK2kc24impl_unparseitem_UnpBody8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc24impl_unparseitem_UnpBodyD0Ev,"axG",@progbits,_ZN2kc24impl_unparseitem_UnpBodyD0Ev,comdat
	.weak	_ZN2kc24impl_unparseitem_UnpBodyD0Ev # -- Begin function _ZN2kc24impl_unparseitem_UnpBodyD0Ev
	.p2align	5
	.type	_ZN2kc24impl_unparseitem_UnpBodyD0Ev,@function
_ZN2kc24impl_unparseitem_UnpBodyD0Ev:   # @_ZN2kc24impl_unparseitem_UnpBodyD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1879:
	.size	_ZN2kc24impl_unparseitem_UnpBodyD0Ev, .Lfunc_end1879-_ZN2kc24impl_unparseitem_UnpBodyD0Ev
                                        # -- End function
	.section	.text._ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv,"axG",@progbits,_ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv,comdat
	.weak	_ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv # -- Begin function _ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv
	.p2align	5
	.type	_ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv,@function
_ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv: # @_ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv
# %bb.0:
	ori	$a0, $zero, 150
	ret
.Lfunc_end1880:
	.size	_ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv, .Lfunc_end1880-_ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc25impl_unparseitem_UnpCtextD0Ev,"axG",@progbits,_ZN2kc25impl_unparseitem_UnpCtextD0Ev,comdat
	.weak	_ZN2kc25impl_unparseitem_UnpCtextD0Ev # -- Begin function _ZN2kc25impl_unparseitem_UnpCtextD0Ev
	.p2align	5
	.type	_ZN2kc25impl_unparseitem_UnpCtextD0Ev,@function
_ZN2kc25impl_unparseitem_UnpCtextD0Ev:  # @_ZN2kc25impl_unparseitem_UnpCtextD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1881:
	.size	_ZN2kc25impl_unparseitem_UnpCtextD0Ev, .Lfunc_end1881-_ZN2kc25impl_unparseitem_UnpCtextD0Ev
                                        # -- End function
	.section	.text._ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv,"axG",@progbits,_ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv,comdat
	.weak	_ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv # -- Begin function _ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv
	.p2align	5
	.type	_ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv,@function
_ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv: # @_ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv
# %bb.0:
	ori	$a0, $zero, 149
	ret
.Lfunc_end1882:
	.size	_ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv, .Lfunc_end1882-_ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc27impl_unparseitem_UnpSubexprD0Ev,"axG",@progbits,_ZN2kc27impl_unparseitem_UnpSubexprD0Ev,comdat
	.weak	_ZN2kc27impl_unparseitem_UnpSubexprD0Ev # -- Begin function _ZN2kc27impl_unparseitem_UnpSubexprD0Ev
	.p2align	5
	.type	_ZN2kc27impl_unparseitem_UnpSubexprD0Ev,@function
_ZN2kc27impl_unparseitem_UnpSubexprD0Ev: # @_ZN2kc27impl_unparseitem_UnpSubexprD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1883:
	.size	_ZN2kc27impl_unparseitem_UnpSubexprD0Ev, .Lfunc_end1883-_ZN2kc27impl_unparseitem_UnpSubexprD0Ev
                                        # -- End function
	.section	.text._ZNK2kc23impl_unparseitem_UnpStr8prod_selEv,"axG",@progbits,_ZNK2kc23impl_unparseitem_UnpStr8prod_selEv,comdat
	.weak	_ZNK2kc23impl_unparseitem_UnpStr8prod_selEv # -- Begin function _ZNK2kc23impl_unparseitem_UnpStr8prod_selEv
	.p2align	5
	.type	_ZNK2kc23impl_unparseitem_UnpStr8prod_selEv,@function
_ZNK2kc23impl_unparseitem_UnpStr8prod_selEv: # @_ZNK2kc23impl_unparseitem_UnpStr8prod_selEv
# %bb.0:
	ori	$a0, $zero, 148
	ret
.Lfunc_end1884:
	.size	_ZNK2kc23impl_unparseitem_UnpStr8prod_selEv, .Lfunc_end1884-_ZNK2kc23impl_unparseitem_UnpStr8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc23impl_unparseitem_UnpStrD0Ev,"axG",@progbits,_ZN2kc23impl_unparseitem_UnpStrD0Ev,comdat
	.weak	_ZN2kc23impl_unparseitem_UnpStrD0Ev # -- Begin function _ZN2kc23impl_unparseitem_UnpStrD0Ev
	.p2align	5
	.type	_ZN2kc23impl_unparseitem_UnpStrD0Ev,@function
_ZN2kc23impl_unparseitem_UnpStrD0Ev:    # @_ZN2kc23impl_unparseitem_UnpStrD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1885:
	.size	_ZN2kc23impl_unparseitem_UnpStrD0Ev, .Lfunc_end1885-_ZN2kc23impl_unparseitem_UnpStrD0Ev
                                        # -- End function
	.section	.text._ZNK2kc17impl_unparseitems8prod_selEv,"axG",@progbits,_ZNK2kc17impl_unparseitems8prod_selEv,comdat
	.weak	_ZNK2kc17impl_unparseitems8prod_selEv # -- Begin function _ZNK2kc17impl_unparseitems8prod_selEv
	.p2align	5
	.type	_ZNK2kc17impl_unparseitems8prod_selEv,@function
_ZNK2kc17impl_unparseitems8prod_selEv:  # @_ZNK2kc17impl_unparseitems8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 147
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1886:
	.size	_ZNK2kc17impl_unparseitems8prod_selEv, .Lfunc_end1886-_ZNK2kc17impl_unparseitems8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc17impl_unparseitemsD0Ev,"axG",@progbits,_ZN2kc17impl_unparseitemsD0Ev,comdat
	.weak	_ZN2kc17impl_unparseitemsD0Ev   # -- Begin function _ZN2kc17impl_unparseitemsD0Ev
	.p2align	5
	.type	_ZN2kc17impl_unparseitemsD0Ev,@function
_ZN2kc17impl_unparseitemsD0Ev:          # @_ZN2kc17impl_unparseitemsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1887:
	.size	_ZN2kc17impl_unparseitemsD0Ev, .Lfunc_end1887-_ZN2kc17impl_unparseitemsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc14impl_viewnames8prod_selEv,"axG",@progbits,_ZNK2kc14impl_viewnames8prod_selEv,comdat
	.weak	_ZNK2kc14impl_viewnames8prod_selEv # -- Begin function _ZNK2kc14impl_viewnames8prod_selEv
	.p2align	5
	.type	_ZNK2kc14impl_viewnames8prod_selEv,@function
_ZNK2kc14impl_viewnames8prod_selEv:     # @_ZNK2kc14impl_viewnames8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 145
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1888:
	.size	_ZNK2kc14impl_viewnames8prod_selEv, .Lfunc_end1888-_ZNK2kc14impl_viewnames8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc14impl_viewnamesD0Ev,"axG",@progbits,_ZN2kc14impl_viewnamesD0Ev,comdat
	.weak	_ZN2kc14impl_viewnamesD0Ev      # -- Begin function _ZN2kc14impl_viewnamesD0Ev
	.p2align	5
	.type	_ZN2kc14impl_viewnamesD0Ev,@function
_ZN2kc14impl_viewnamesD0Ev:             # @_ZN2kc14impl_viewnamesD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1889:
	.size	_ZN2kc14impl_viewnamesD0Ev, .Lfunc_end1889-_ZN2kc14impl_viewnamesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv,"axG",@progbits,_ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv,comdat
	.weak	_ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv # -- Begin function _ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv,@function
_ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv: # @_ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv
# %bb.0:
	ori	$a0, $zero, 143
	ret
.Lfunc_end1890:
	.size	_ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv, .Lfunc_end1890-_ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc32impl_unparseclause_UnparseClauseD0Ev,"axG",@progbits,_ZN2kc32impl_unparseclause_UnparseClauseD0Ev,comdat
	.weak	_ZN2kc32impl_unparseclause_UnparseClauseD0Ev # -- Begin function _ZN2kc32impl_unparseclause_UnparseClauseD0Ev
	.p2align	5
	.type	_ZN2kc32impl_unparseclause_UnparseClauseD0Ev,@function
_ZN2kc32impl_unparseclause_UnparseClauseD0Ev: # @_ZN2kc32impl_unparseclause_UnparseClauseD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1891:
	.size	_ZN2kc32impl_unparseclause_UnparseClauseD0Ev, .Lfunc_end1891-_ZN2kc32impl_unparseclause_UnparseClauseD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_unparseclauses8prod_selEv,"axG",@progbits,_ZNK2kc19impl_unparseclauses8prod_selEv,comdat
	.weak	_ZNK2kc19impl_unparseclauses8prod_selEv # -- Begin function _ZNK2kc19impl_unparseclauses8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_unparseclauses8prod_selEv,@function
_ZNK2kc19impl_unparseclauses8prod_selEv: # @_ZNK2kc19impl_unparseclauses8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 142
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1892:
	.size	_ZNK2kc19impl_unparseclauses8prod_selEv, .Lfunc_end1892-_ZNK2kc19impl_unparseclauses8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc19impl_unparseclausesD0Ev,"axG",@progbits,_ZN2kc19impl_unparseclausesD0Ev,comdat
	.weak	_ZN2kc19impl_unparseclausesD0Ev # -- Begin function _ZN2kc19impl_unparseclausesD0Ev
	.p2align	5
	.type	_ZN2kc19impl_unparseclausesD0Ev,@function
_ZN2kc19impl_unparseclausesD0Ev:        # @_ZN2kc19impl_unparseclausesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1893:
	.size	_ZN2kc19impl_unparseclausesD0Ev, .Lfunc_end1893-_ZN2kc19impl_unparseclausesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv,"axG",@progbits,_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv,comdat
	.weak	_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv # -- Begin function _ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv
	.p2align	5
	.type	_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv,@function
_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv: # @_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv
# %bb.0:
	ori	$a0, $zero, 140
	ret
.Lfunc_end1894:
	.size	_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv, .Lfunc_end1894-_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev,"axG",@progbits,_ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev,comdat
	.weak	_ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev # -- Begin function _ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev
	.p2align	5
	.type	_ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev,@function
_ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev: # @_ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1895:
	.size	_ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev, .Lfunc_end1895-_ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_unparsedeclarations8prod_selEv,"axG",@progbits,_ZNK2kc24impl_unparsedeclarations8prod_selEv,comdat
	.weak	_ZNK2kc24impl_unparsedeclarations8prod_selEv # -- Begin function _ZNK2kc24impl_unparsedeclarations8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_unparsedeclarations8prod_selEv,@function
_ZNK2kc24impl_unparsedeclarations8prod_selEv: # @_ZNK2kc24impl_unparsedeclarations8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 139
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1896:
	.size	_ZNK2kc24impl_unparsedeclarations8prod_selEv, .Lfunc_end1896-_ZNK2kc24impl_unparsedeclarations8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc24impl_unparsedeclarationsD0Ev,"axG",@progbits,_ZN2kc24impl_unparsedeclarationsD0Ev,comdat
	.weak	_ZN2kc24impl_unparsedeclarationsD0Ev # -- Begin function _ZN2kc24impl_unparsedeclarationsD0Ev
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarationsD0Ev,@function
_ZN2kc24impl_unparsedeclarationsD0Ev:   # @_ZN2kc24impl_unparsedeclarationsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1897:
	.size	_ZN2kc24impl_unparsedeclarationsD0Ev, .Lfunc_end1897-_ZN2kc24impl_unparsedeclarationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc22impl_withcase_Withcase8prod_selEv,"axG",@progbits,_ZNK2kc22impl_withcase_Withcase8prod_selEv,comdat
	.weak	_ZNK2kc22impl_withcase_Withcase8prod_selEv # -- Begin function _ZNK2kc22impl_withcase_Withcase8prod_selEv
	.p2align	5
	.type	_ZNK2kc22impl_withcase_Withcase8prod_selEv,@function
_ZNK2kc22impl_withcase_Withcase8prod_selEv: # @_ZNK2kc22impl_withcase_Withcase8prod_selEv
# %bb.0:
	ori	$a0, $zero, 137
	ret
.Lfunc_end1898:
	.size	_ZNK2kc22impl_withcase_Withcase8prod_selEv, .Lfunc_end1898-_ZNK2kc22impl_withcase_Withcase8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc22impl_withcase_WithcaseD0Ev,"axG",@progbits,_ZN2kc22impl_withcase_WithcaseD0Ev,comdat
	.weak	_ZN2kc22impl_withcase_WithcaseD0Ev # -- Begin function _ZN2kc22impl_withcase_WithcaseD0Ev
	.p2align	5
	.type	_ZN2kc22impl_withcase_WithcaseD0Ev,@function
_ZN2kc22impl_withcase_WithcaseD0Ev:     # @_ZN2kc22impl_withcase_WithcaseD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1899:
	.size	_ZN2kc22impl_withcase_WithcaseD0Ev, .Lfunc_end1899-_ZN2kc22impl_withcase_WithcaseD0Ev
                                        # -- End function
	.section	.text._ZNK2kc14impl_withcases8prod_selEv,"axG",@progbits,_ZNK2kc14impl_withcases8prod_selEv,comdat
	.weak	_ZNK2kc14impl_withcases8prod_selEv # -- Begin function _ZNK2kc14impl_withcases8prod_selEv
	.p2align	5
	.type	_ZNK2kc14impl_withcases8prod_selEv,@function
_ZNK2kc14impl_withcases8prod_selEv:     # @_ZNK2kc14impl_withcases8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 136
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1900:
	.size	_ZNK2kc14impl_withcases8prod_selEv, .Lfunc_end1900-_ZNK2kc14impl_withcases8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc14impl_withcasesD0Ev,"axG",@progbits,_ZN2kc14impl_withcasesD0Ev,comdat
	.weak	_ZN2kc14impl_withcasesD0Ev      # -- Begin function _ZN2kc14impl_withcasesD0Ev
	.p2align	5
	.type	_ZN2kc14impl_withcasesD0Ev,@function
_ZN2kc14impl_withcasesD0Ev:             # @_ZN2kc14impl_withcasesD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1901:
	.size	_ZN2kc14impl_withcasesD0Ev, .Lfunc_end1901-_ZN2kc14impl_withcasesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc33impl_withexpression_WECexpression8prod_selEv,"axG",@progbits,_ZNK2kc33impl_withexpression_WECexpression8prod_selEv,comdat
	.weak	_ZNK2kc33impl_withexpression_WECexpression8prod_selEv # -- Begin function _ZNK2kc33impl_withexpression_WECexpression8prod_selEv
	.p2align	5
	.type	_ZNK2kc33impl_withexpression_WECexpression8prod_selEv,@function
_ZNK2kc33impl_withexpression_WECexpression8prod_selEv: # @_ZNK2kc33impl_withexpression_WECexpression8prod_selEv
# %bb.0:
	ori	$a0, $zero, 134
	ret
.Lfunc_end1902:
	.size	_ZNK2kc33impl_withexpression_WECexpression8prod_selEv, .Lfunc_end1902-_ZNK2kc33impl_withexpression_WECexpression8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc33impl_withexpression_WECexpressionD0Ev,"axG",@progbits,_ZN2kc33impl_withexpression_WECexpressionD0Ev,comdat
	.weak	_ZN2kc33impl_withexpression_WECexpressionD0Ev # -- Begin function _ZN2kc33impl_withexpression_WECexpressionD0Ev
	.p2align	5
	.type	_ZN2kc33impl_withexpression_WECexpressionD0Ev,@function
_ZN2kc33impl_withexpression_WECexpressionD0Ev: # @_ZN2kc33impl_withexpression_WECexpressionD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1903:
	.size	_ZN2kc33impl_withexpression_WECexpressionD0Ev, .Lfunc_end1903-_ZN2kc33impl_withexpression_WECexpressionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc30impl_withexpression_WEVariable8prod_selEv,"axG",@progbits,_ZNK2kc30impl_withexpression_WEVariable8prod_selEv,comdat
	.weak	_ZNK2kc30impl_withexpression_WEVariable8prod_selEv # -- Begin function _ZNK2kc30impl_withexpression_WEVariable8prod_selEv
	.p2align	5
	.type	_ZNK2kc30impl_withexpression_WEVariable8prod_selEv,@function
_ZNK2kc30impl_withexpression_WEVariable8prod_selEv: # @_ZNK2kc30impl_withexpression_WEVariable8prod_selEv
# %bb.0:
	ori	$a0, $zero, 133
	ret
.Lfunc_end1904:
	.size	_ZNK2kc30impl_withexpression_WEVariable8prod_selEv, .Lfunc_end1904-_ZNK2kc30impl_withexpression_WEVariable8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc30impl_withexpression_WEVariableD0Ev,"axG",@progbits,_ZN2kc30impl_withexpression_WEVariableD0Ev,comdat
	.weak	_ZN2kc30impl_withexpression_WEVariableD0Ev # -- Begin function _ZN2kc30impl_withexpression_WEVariableD0Ev
	.p2align	5
	.type	_ZN2kc30impl_withexpression_WEVariableD0Ev,@function
_ZN2kc30impl_withexpression_WEVariableD0Ev: # @_ZN2kc30impl_withexpression_WEVariableD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1905:
	.size	_ZN2kc30impl_withexpression_WEVariableD0Ev, .Lfunc_end1905-_ZN2kc30impl_withexpression_WEVariableD0Ev
                                        # -- End function
	.section	.text._ZNK2kc20impl_withexpressions8prod_selEv,"axG",@progbits,_ZNK2kc20impl_withexpressions8prod_selEv,comdat
	.weak	_ZNK2kc20impl_withexpressions8prod_selEv # -- Begin function _ZNK2kc20impl_withexpressions8prod_selEv
	.p2align	5
	.type	_ZNK2kc20impl_withexpressions8prod_selEv,@function
_ZNK2kc20impl_withexpressions8prod_selEv: # @_ZNK2kc20impl_withexpressions8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 132
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1906:
	.size	_ZNK2kc20impl_withexpressions8prod_selEv, .Lfunc_end1906-_ZNK2kc20impl_withexpressions8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc20impl_withexpressionsD0Ev,"axG",@progbits,_ZN2kc20impl_withexpressionsD0Ev,comdat
	.weak	_ZN2kc20impl_withexpressionsD0Ev # -- Begin function _ZN2kc20impl_withexpressionsD0Ev
	.p2align	5
	.type	_ZN2kc20impl_withexpressionsD0Ev,@function
_ZN2kc20impl_withexpressionsD0Ev:       # @_ZN2kc20impl_withexpressionsD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1907:
	.size	_ZN2kc20impl_withexpressionsD0Ev, .Lfunc_end1907-_ZN2kc20impl_withexpressionsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv,"axG",@progbits,_ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv,comdat
	.weak	_ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv # -- Begin function _ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv
	.p2align	5
	.type	_ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv,@function
_ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv: # @_ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv
# %bb.0:
	ori	$a0, $zero, 129
	ret
.Lfunc_end1908:
	.size	_ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv, .Lfunc_end1908-_ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc33impl_contextinfo_InForeachContextD0Ev,"axG",@progbits,_ZN2kc33impl_contextinfo_InForeachContextD0Ev,comdat
	.weak	_ZN2kc33impl_contextinfo_InForeachContextD0Ev # -- Begin function _ZN2kc33impl_contextinfo_InForeachContextD0Ev
	.p2align	5
	.type	_ZN2kc33impl_contextinfo_InForeachContextD0Ev,@function
_ZN2kc33impl_contextinfo_InForeachContextD0Ev: # @_ZN2kc33impl_contextinfo_InForeachContextD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1909:
	.size	_ZN2kc33impl_contextinfo_InForeachContextD0Ev, .Lfunc_end1909-_ZN2kc33impl_contextinfo_InForeachContextD0Ev
                                        # -- End function
	.section	.text._ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv,"axG",@progbits,_ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv,comdat
	.weak	_ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv # -- Begin function _ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv
	.p2align	5
	.type	_ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv,@function
_ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv: # @_ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv
# %bb.0:
	ori	$a0, $zero, 128
	ret
.Lfunc_end1910:
	.size	_ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv, .Lfunc_end1910-_ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc31impl_foreach_after_ForeachAfterD0Ev,"axG",@progbits,_ZN2kc31impl_foreach_after_ForeachAfterD0Ev,comdat
	.weak	_ZN2kc31impl_foreach_after_ForeachAfterD0Ev # -- Begin function _ZN2kc31impl_foreach_after_ForeachAfterD0Ev
	.p2align	5
	.type	_ZN2kc31impl_foreach_after_ForeachAfterD0Ev,@function
_ZN2kc31impl_foreach_after_ForeachAfterD0Ev: # @_ZN2kc31impl_foreach_after_ForeachAfterD0Ev
# %bb.0:
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1911:
	.size	_ZN2kc31impl_foreach_after_ForeachAfterD0Ev, .Lfunc_end1911-_ZN2kc31impl_foreach_after_ForeachAfterD0Ev
                                        # -- End function
	.section	.text._ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv,"axG",@progbits,_ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv,comdat
	.weak	_ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv # -- Begin function _ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv
	.p2align	5
	.type	_ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv,@function
_ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv: # @_ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv
# %bb.0:
	ori	$a0, $zero, 126
	ret
.Lfunc_end1912:
	.size	_ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv, .Lfunc_end1912-_ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev,"axG",@progbits,_ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev,comdat
	.weak	_ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev # -- Begin function _ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev
	.p2align	5
	.type	_ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev,@function
_ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev: # @_ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1913:
	.size	_ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev, .Lfunc_end1913-_ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv,"axG",@progbits,_ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv,comdat
	.weak	_ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv # -- Begin function _ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv
	.p2align	5
	.type	_ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv,@function
_ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv: # @_ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv
# %bb.0:
	ori	$a0, $zero, 125
	ret
.Lfunc_end1914:
	.size	_ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv, .Lfunc_end1914-_ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev,"axG",@progbits,_ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev,comdat
	.weak	_ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev # -- Begin function _ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev
	.p2align	5
	.type	_ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev,@function
_ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev: # @_ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev
# %bb.0:
	ori	$a1, $zero, 64
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1915:
	.size	_ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev, .Lfunc_end1915-_ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv,"axG",@progbits,_ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv,comdat
	.weak	_ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv # -- Begin function _ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv
	.p2align	5
	.type	_ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv,@function
_ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv: # @_ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv
# %bb.0:
	ori	$a0, $zero, 124
	ret
.Lfunc_end1916:
	.size	_ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv, .Lfunc_end1916-_ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev,"axG",@progbits,_ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev,comdat
	.weak	_ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev # -- Begin function _ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev
	.p2align	5
	.type	_ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev,@function
_ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev: # @_ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1917:
	.size	_ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev, .Lfunc_end1917-_ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev
                                        # -- End function
	.section	.text._ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv,"axG",@progbits,_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv,comdat
	.weak	_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv # -- Begin function _ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv
	.p2align	5
	.type	_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv,@function
_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv: # @_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv
# %bb.0:
	ori	$a0, $zero, 123
	ret
.Lfunc_end1918:
	.size	_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv, .Lfunc_end1918-_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev,"axG",@progbits,_ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev,comdat
	.weak	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev # -- Begin function _ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev
	.p2align	5
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev: # @_ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1919:
	.size	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev, .Lfunc_end1919-_ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev
                                        # -- End function
	.section	.text._ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv,"axG",@progbits,_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv,comdat
	.weak	_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv # -- Begin function _ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv
	.p2align	5
	.type	_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv,@function
_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv: # @_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv
# %bb.0:
	ori	$a0, $zero, 122
	ret
.Lfunc_end1920:
	.size	_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv, .Lfunc_end1920-_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev,"axG",@progbits,_ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev,comdat
	.weak	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev # -- Begin function _ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev
	.p2align	5
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev: # @_ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1921:
	.size	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev, .Lfunc_end1921-_ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev
                                        # -- End function
	.section	.text._ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv,"axG",@progbits,_ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv,comdat
	.weak	_ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv # -- Begin function _ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv
	.p2align	5
	.type	_ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv,@function
_ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv: # @_ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv
# %bb.0:
	ori	$a0, $zero, 121
	ret
.Lfunc_end1922:
	.size	_ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv, .Lfunc_end1922-_ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc23impl_Ctext_elem_CTextNlD0Ev,"axG",@progbits,_ZN2kc23impl_Ctext_elem_CTextNlD0Ev,comdat
	.weak	_ZN2kc23impl_Ctext_elem_CTextNlD0Ev # -- Begin function _ZN2kc23impl_Ctext_elem_CTextNlD0Ev
	.p2align	5
	.type	_ZN2kc23impl_Ctext_elem_CTextNlD0Ev,@function
_ZN2kc23impl_Ctext_elem_CTextNlD0Ev:    # @_ZN2kc23impl_Ctext_elem_CTextNlD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1923:
	.size	_ZN2kc23impl_Ctext_elem_CTextNlD0Ev, .Lfunc_end1923-_ZN2kc23impl_Ctext_elem_CTextNlD0Ev
                                        # -- End function
	.section	.text._ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv,"axG",@progbits,_ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv,comdat
	.weak	_ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv # -- Begin function _ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv
	.p2align	5
	.type	_ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv,@function
_ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv: # @_ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv
# %bb.0:
	ori	$a0, $zero, 120
	ret
.Lfunc_end1924:
	.size	_ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv, .Lfunc_end1924-_ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev,"axG",@progbits,_ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev,comdat
	.weak	_ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev # -- Begin function _ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev
	.p2align	5
	.type	_ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev,@function
_ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev: # @_ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1925:
	.size	_ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev, .Lfunc_end1925-_ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev
                                        # -- End function
	.section	.text._ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv,"axG",@progbits,_ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv,comdat
	.weak	_ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv # -- Begin function _ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv
	.p2align	5
	.type	_ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv,@function
_ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv: # @_ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv
# %bb.0:
	ori	$a0, $zero, 119
	ret
.Lfunc_end1926:
	.size	_ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv, .Lfunc_end1926-_ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc25impl_Ctext_elem_CTextLineD0Ev,"axG",@progbits,_ZN2kc25impl_Ctext_elem_CTextLineD0Ev,comdat
	.weak	_ZN2kc25impl_Ctext_elem_CTextLineD0Ev # -- Begin function _ZN2kc25impl_Ctext_elem_CTextLineD0Ev
	.p2align	5
	.type	_ZN2kc25impl_Ctext_elem_CTextLineD0Ev,@function
_ZN2kc25impl_Ctext_elem_CTextLineD0Ev:  # @_ZN2kc25impl_Ctext_elem_CTextLineD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1927:
	.size	_ZN2kc25impl_Ctext_elem_CTextLineD0Ev, .Lfunc_end1927-_ZN2kc25impl_Ctext_elem_CTextLineD0Ev
                                        # -- End function
	.section	.text._ZNK2kc10impl_Ctext8prod_selEv,"axG",@progbits,_ZNK2kc10impl_Ctext8prod_selEv,comdat
	.weak	_ZNK2kc10impl_Ctext8prod_selEv  # -- Begin function _ZNK2kc10impl_Ctext8prod_selEv
	.p2align	5
	.type	_ZNK2kc10impl_Ctext8prod_selEv,@function
_ZNK2kc10impl_Ctext8prod_selEv:         # @_ZNK2kc10impl_Ctext8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 118
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1928:
	.size	_ZNK2kc10impl_Ctext8prod_selEv, .Lfunc_end1928-_ZNK2kc10impl_Ctext8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc10impl_CtextD0Ev,"axG",@progbits,_ZN2kc10impl_CtextD0Ev,comdat
	.weak	_ZN2kc10impl_CtextD0Ev          # -- Begin function _ZN2kc10impl_CtextD0Ev
	.p2align	5
	.type	_ZN2kc10impl_CtextD0Ev,@function
_ZN2kc10impl_CtextD0Ev:                 # @_ZN2kc10impl_CtextD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1929:
	.size	_ZN2kc10impl_CtextD0Ev, .Lfunc_end1929-_ZN2kc10impl_CtextD0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_fnclass_StaticFn8prod_selEv,"axG",@progbits,_ZNK2kc21impl_fnclass_StaticFn8prod_selEv,comdat
	.weak	_ZNK2kc21impl_fnclass_StaticFn8prod_selEv # -- Begin function _ZNK2kc21impl_fnclass_StaticFn8prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_fnclass_StaticFn8prod_selEv,@function
_ZNK2kc21impl_fnclass_StaticFn8prod_selEv: # @_ZNK2kc21impl_fnclass_StaticFn8prod_selEv
# %bb.0:
	ori	$a0, $zero, 112
	ret
.Lfunc_end1930:
	.size	_ZNK2kc21impl_fnclass_StaticFn8prod_selEv, .Lfunc_end1930-_ZNK2kc21impl_fnclass_StaticFn8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc21impl_fnclass_StaticFnD0Ev,"axG",@progbits,_ZN2kc21impl_fnclass_StaticFnD0Ev,comdat
	.weak	_ZN2kc21impl_fnclass_StaticFnD0Ev # -- Begin function _ZN2kc21impl_fnclass_StaticFnD0Ev
	.p2align	5
	.type	_ZN2kc21impl_fnclass_StaticFnD0Ev,@function
_ZN2kc21impl_fnclass_StaticFnD0Ev:      # @_ZN2kc21impl_fnclass_StaticFnD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1931:
	.size	_ZN2kc21impl_fnclass_StaticFnD0Ev, .Lfunc_end1931-_ZN2kc21impl_fnclass_StaticFnD0Ev
                                        # -- End function
	.section	.text._ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv,"axG",@progbits,_ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv,comdat
	.weak	_ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv # -- Begin function _ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv
	.p2align	5
	.type	_ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv,@function
_ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv: # @_ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv
# %bb.0:
	ori	$a0, $zero, 110
	ret
.Lfunc_end1932:
	.size	_ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv, .Lfunc_end1932-_ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev,"axG",@progbits,_ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev,comdat
	.weak	_ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev # -- Begin function _ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev
	.p2align	5
	.type	_ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev,@function
_ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev: # @_ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev
# %bb.0:
	ori	$a1, $zero, 72
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1933:
	.size	_ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev, .Lfunc_end1933-_ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv,"axG",@progbits,_ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv,comdat
	.weak	_ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv # -- Begin function _ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv
	.p2align	5
	.type	_ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv,@function
_ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv: # @_ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv
# %bb.0:
	ori	$a0, $zero, 109
	ret
.Lfunc_end1934:
	.size	_ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv, .Lfunc_end1934-_ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev,"axG",@progbits,_ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev,comdat
	.weak	_ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev # -- Begin function _ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev
	.p2align	5
	.type	_ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev,@function
_ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev: # @_ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev
# %bb.0:
	ori	$a1, $zero, 96
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1935:
	.size	_ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev, .Lfunc_end1935-_ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_fndeclarations8prod_selEv,"axG",@progbits,_ZNK2kc19impl_fndeclarations8prod_selEv,comdat
	.weak	_ZNK2kc19impl_fndeclarations8prod_selEv # -- Begin function _ZNK2kc19impl_fndeclarations8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_fndeclarations8prod_selEv,@function
_ZNK2kc19impl_fndeclarations8prod_selEv: # @_ZNK2kc19impl_fndeclarations8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 108
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1936:
	.size	_ZNK2kc19impl_fndeclarations8prod_selEv, .Lfunc_end1936-_ZNK2kc19impl_fndeclarations8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc19impl_fndeclarationsD0Ev,"axG",@progbits,_ZN2kc19impl_fndeclarationsD0Ev,comdat
	.weak	_ZN2kc19impl_fndeclarationsD0Ev # -- Begin function _ZN2kc19impl_fndeclarationsD0Ev
	.p2align	5
	.type	_ZN2kc19impl_fndeclarationsD0Ev,@function
_ZN2kc19impl_fndeclarationsD0Ev:        # @_ZN2kc19impl_fndeclarationsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1937:
	.size	_ZN2kc19impl_fndeclarationsD0Ev, .Lfunc_end1937-_ZN2kc19impl_fndeclarationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc18impl_fnfile_FnFile8prod_selEv,"axG",@progbits,_ZNK2kc18impl_fnfile_FnFile8prod_selEv,comdat
	.weak	_ZNK2kc18impl_fnfile_FnFile8prod_selEv # -- Begin function _ZNK2kc18impl_fnfile_FnFile8prod_selEv
	.p2align	5
	.type	_ZNK2kc18impl_fnfile_FnFile8prod_selEv,@function
_ZNK2kc18impl_fnfile_FnFile8prod_selEv: # @_ZNK2kc18impl_fnfile_FnFile8prod_selEv
# %bb.0:
	ori	$a0, $zero, 106
	ret
.Lfunc_end1938:
	.size	_ZNK2kc18impl_fnfile_FnFile8prod_selEv, .Lfunc_end1938-_ZNK2kc18impl_fnfile_FnFile8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc18impl_fnfile_FnFileD0Ev,"axG",@progbits,_ZN2kc18impl_fnfile_FnFileD0Ev,comdat
	.weak	_ZN2kc18impl_fnfile_FnFileD0Ev  # -- Begin function _ZN2kc18impl_fnfile_FnFileD0Ev
	.p2align	5
	.type	_ZN2kc18impl_fnfile_FnFileD0Ev,@function
_ZN2kc18impl_fnfile_FnFileD0Ev:         # @_ZN2kc18impl_fnfile_FnFileD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1939:
	.size	_ZN2kc18impl_fnfile_FnFileD0Ev, .Lfunc_end1939-_ZN2kc18impl_fnfile_FnFileD0Ev
                                        # -- End function
	.section	.text._ZNK2kc12impl_fnfiles8prod_selEv,"axG",@progbits,_ZNK2kc12impl_fnfiles8prod_selEv,comdat
	.weak	_ZNK2kc12impl_fnfiles8prod_selEv # -- Begin function _ZNK2kc12impl_fnfiles8prod_selEv
	.p2align	5
	.type	_ZNK2kc12impl_fnfiles8prod_selEv,@function
_ZNK2kc12impl_fnfiles8prod_selEv:       # @_ZNK2kc12impl_fnfiles8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 105
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1940:
	.size	_ZNK2kc12impl_fnfiles8prod_selEv, .Lfunc_end1940-_ZNK2kc12impl_fnfiles8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc12impl_fnfilesD0Ev,"axG",@progbits,_ZN2kc12impl_fnfilesD0Ev,comdat
	.weak	_ZN2kc12impl_fnfilesD0Ev        # -- Begin function _ZN2kc12impl_fnfilesD0Ev
	.p2align	5
	.type	_ZN2kc12impl_fnfilesD0Ev,@function
_ZN2kc12impl_fnfilesD0Ev:               # @_ZN2kc12impl_fnfilesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1941:
	.size	_ZN2kc12impl_fnfilesD0Ev, .Lfunc_end1941-_ZN2kc12impl_fnfilesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc10impl_terms8prod_selEv,"axG",@progbits,_ZNK2kc10impl_terms8prod_selEv,comdat
	.weak	_ZNK2kc10impl_terms8prod_selEv  # -- Begin function _ZNK2kc10impl_terms8prod_selEv
	.p2align	5
	.type	_ZNK2kc10impl_terms8prod_selEv,@function
_ZNK2kc10impl_terms8prod_selEv:         # @_ZNK2kc10impl_terms8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 103
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1942:
	.size	_ZNK2kc10impl_terms8prod_selEv, .Lfunc_end1942-_ZNK2kc10impl_terms8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc10impl_termsD0Ev,"axG",@progbits,_ZN2kc10impl_termsD0Ev,comdat
	.weak	_ZN2kc10impl_termsD0Ev          # -- Begin function _ZN2kc10impl_termsD0Ev
	.p2align	5
	.type	_ZN2kc10impl_termsD0Ev,@function
_ZN2kc10impl_termsD0Ev:                 # @_ZN2kc10impl_termsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1943:
	.size	_ZN2kc10impl_termsD0Ev, .Lfunc_end1943-_ZN2kc10impl_termsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_term_TIntLiteral8prod_selEv,"axG",@progbits,_ZNK2kc21impl_term_TIntLiteral8prod_selEv,comdat
	.weak	_ZNK2kc21impl_term_TIntLiteral8prod_selEv # -- Begin function _ZNK2kc21impl_term_TIntLiteral8prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_term_TIntLiteral8prod_selEv,@function
_ZNK2kc21impl_term_TIntLiteral8prod_selEv: # @_ZNK2kc21impl_term_TIntLiteral8prod_selEv
# %bb.0:
	ori	$a0, $zero, 101
	ret
.Lfunc_end1944:
	.size	_ZNK2kc21impl_term_TIntLiteral8prod_selEv, .Lfunc_end1944-_ZNK2kc21impl_term_TIntLiteral8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc21impl_term_TIntLiteralD0Ev,"axG",@progbits,_ZN2kc21impl_term_TIntLiteralD0Ev,comdat
	.weak	_ZN2kc21impl_term_TIntLiteralD0Ev # -- Begin function _ZN2kc21impl_term_TIntLiteralD0Ev
	.p2align	5
	.type	_ZN2kc21impl_term_TIntLiteralD0Ev,@function
_ZN2kc21impl_term_TIntLiteralD0Ev:      # @_ZN2kc21impl_term_TIntLiteralD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1945:
	.size	_ZN2kc21impl_term_TIntLiteralD0Ev, .Lfunc_end1945-_ZN2kc21impl_term_TIntLiteralD0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_term_TStringLiteral8prod_selEv,"axG",@progbits,_ZNK2kc24impl_term_TStringLiteral8prod_selEv,comdat
	.weak	_ZNK2kc24impl_term_TStringLiteral8prod_selEv # -- Begin function _ZNK2kc24impl_term_TStringLiteral8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_term_TStringLiteral8prod_selEv,@function
_ZNK2kc24impl_term_TStringLiteral8prod_selEv: # @_ZNK2kc24impl_term_TStringLiteral8prod_selEv
# %bb.0:
	ori	$a0, $zero, 100
	ret
.Lfunc_end1946:
	.size	_ZNK2kc24impl_term_TStringLiteral8prod_selEv, .Lfunc_end1946-_ZNK2kc24impl_term_TStringLiteral8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc24impl_term_TStringLiteralD0Ev,"axG",@progbits,_ZN2kc24impl_term_TStringLiteralD0Ev,comdat
	.weak	_ZN2kc24impl_term_TStringLiteralD0Ev # -- Begin function _ZN2kc24impl_term_TStringLiteralD0Ev
	.p2align	5
	.type	_ZN2kc24impl_term_TStringLiteralD0Ev,@function
_ZN2kc24impl_term_TStringLiteralD0Ev:   # @_ZN2kc24impl_term_TStringLiteralD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1947:
	.size	_ZN2kc24impl_term_TStringLiteralD0Ev, .Lfunc_end1947-_ZN2kc24impl_term_TStringLiteralD0Ev
                                        # -- End function
	.section	.text._ZNK2kc16impl_term_TCTerm8prod_selEv,"axG",@progbits,_ZNK2kc16impl_term_TCTerm8prod_selEv,comdat
	.weak	_ZNK2kc16impl_term_TCTerm8prod_selEv # -- Begin function _ZNK2kc16impl_term_TCTerm8prod_selEv
	.p2align	5
	.type	_ZNK2kc16impl_term_TCTerm8prod_selEv,@function
_ZNK2kc16impl_term_TCTerm8prod_selEv:   # @_ZNK2kc16impl_term_TCTerm8prod_selEv
# %bb.0:
	ori	$a0, $zero, 99
	ret
.Lfunc_end1948:
	.size	_ZNK2kc16impl_term_TCTerm8prod_selEv, .Lfunc_end1948-_ZNK2kc16impl_term_TCTerm8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc16impl_term_TCTermD0Ev,"axG",@progbits,_ZN2kc16impl_term_TCTermD0Ev,comdat
	.weak	_ZN2kc16impl_term_TCTermD0Ev    # -- Begin function _ZN2kc16impl_term_TCTermD0Ev
	.p2align	5
	.type	_ZN2kc16impl_term_TCTermD0Ev,@function
_ZN2kc16impl_term_TCTermD0Ev:           # @_ZN2kc16impl_term_TCTermD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1949:
	.size	_ZN2kc16impl_term_TCTermD0Ev, .Lfunc_end1949-_ZN2kc16impl_term_TCTermD0Ev
                                        # -- End function
	.section	.text._ZNK2kc23impl_term_TMemberVarDot8prod_selEv,"axG",@progbits,_ZNK2kc23impl_term_TMemberVarDot8prod_selEv,comdat
	.weak	_ZNK2kc23impl_term_TMemberVarDot8prod_selEv # -- Begin function _ZNK2kc23impl_term_TMemberVarDot8prod_selEv
	.p2align	5
	.type	_ZNK2kc23impl_term_TMemberVarDot8prod_selEv,@function
_ZNK2kc23impl_term_TMemberVarDot8prod_selEv: # @_ZNK2kc23impl_term_TMemberVarDot8prod_selEv
# %bb.0:
	ori	$a0, $zero, 98
	ret
.Lfunc_end1950:
	.size	_ZNK2kc23impl_term_TMemberVarDot8prod_selEv, .Lfunc_end1950-_ZNK2kc23impl_term_TMemberVarDot8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc23impl_term_TMemberVarDotD0Ev,"axG",@progbits,_ZN2kc23impl_term_TMemberVarDotD0Ev,comdat
	.weak	_ZN2kc23impl_term_TMemberVarDotD0Ev # -- Begin function _ZN2kc23impl_term_TMemberVarDotD0Ev
	.p2align	5
	.type	_ZN2kc23impl_term_TMemberVarDotD0Ev,@function
_ZN2kc23impl_term_TMemberVarDotD0Ev:    # @_ZN2kc23impl_term_TMemberVarDotD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1951:
	.size	_ZN2kc23impl_term_TMemberVarDotD0Ev, .Lfunc_end1951-_ZN2kc23impl_term_TMemberVarDotD0Ev
                                        # -- End function
	.section	.text._ZNK2kc20impl_term_TMemberVar8prod_selEv,"axG",@progbits,_ZNK2kc20impl_term_TMemberVar8prod_selEv,comdat
	.weak	_ZNK2kc20impl_term_TMemberVar8prod_selEv # -- Begin function _ZNK2kc20impl_term_TMemberVar8prod_selEv
	.p2align	5
	.type	_ZNK2kc20impl_term_TMemberVar8prod_selEv,@function
_ZNK2kc20impl_term_TMemberVar8prod_selEv: # @_ZNK2kc20impl_term_TMemberVar8prod_selEv
# %bb.0:
	ori	$a0, $zero, 97
	ret
.Lfunc_end1952:
	.size	_ZNK2kc20impl_term_TMemberVar8prod_selEv, .Lfunc_end1952-_ZNK2kc20impl_term_TMemberVar8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc20impl_term_TMemberVarD0Ev,"axG",@progbits,_ZN2kc20impl_term_TMemberVarD0Ev,comdat
	.weak	_ZN2kc20impl_term_TMemberVarD0Ev # -- Begin function _ZN2kc20impl_term_TMemberVarD0Ev
	.p2align	5
	.type	_ZN2kc20impl_term_TMemberVarD0Ev,@function
_ZN2kc20impl_term_TMemberVarD0Ev:       # @_ZN2kc20impl_term_TMemberVarD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1953:
	.size	_ZN2kc20impl_term_TMemberVarD0Ev, .Lfunc_end1953-_ZN2kc20impl_term_TMemberVarD0Ev
                                        # -- End function
	.section	.text._ZNK2kc20impl_term_TMethodDot8prod_selEv,"axG",@progbits,_ZNK2kc20impl_term_TMethodDot8prod_selEv,comdat
	.weak	_ZNK2kc20impl_term_TMethodDot8prod_selEv # -- Begin function _ZNK2kc20impl_term_TMethodDot8prod_selEv
	.p2align	5
	.type	_ZNK2kc20impl_term_TMethodDot8prod_selEv,@function
_ZNK2kc20impl_term_TMethodDot8prod_selEv: # @_ZNK2kc20impl_term_TMethodDot8prod_selEv
# %bb.0:
	ori	$a0, $zero, 96
	ret
.Lfunc_end1954:
	.size	_ZNK2kc20impl_term_TMethodDot8prod_selEv, .Lfunc_end1954-_ZNK2kc20impl_term_TMethodDot8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc20impl_term_TMethodDotD0Ev,"axG",@progbits,_ZN2kc20impl_term_TMethodDotD0Ev,comdat
	.weak	_ZN2kc20impl_term_TMethodDotD0Ev # -- Begin function _ZN2kc20impl_term_TMethodDotD0Ev
	.p2align	5
	.type	_ZN2kc20impl_term_TMethodDotD0Ev,@function
_ZN2kc20impl_term_TMethodDotD0Ev:       # @_ZN2kc20impl_term_TMethodDotD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1955:
	.size	_ZN2kc20impl_term_TMethodDotD0Ev, .Lfunc_end1955-_ZN2kc20impl_term_TMethodDotD0Ev
                                        # -- End function
	.section	.text._ZNK2kc17impl_term_TMethod8prod_selEv,"axG",@progbits,_ZNK2kc17impl_term_TMethod8prod_selEv,comdat
	.weak	_ZNK2kc17impl_term_TMethod8prod_selEv # -- Begin function _ZNK2kc17impl_term_TMethod8prod_selEv
	.p2align	5
	.type	_ZNK2kc17impl_term_TMethod8prod_selEv,@function
_ZNK2kc17impl_term_TMethod8prod_selEv:  # @_ZNK2kc17impl_term_TMethod8prod_selEv
# %bb.0:
	ori	$a0, $zero, 95
	ret
.Lfunc_end1956:
	.size	_ZNK2kc17impl_term_TMethod8prod_selEv, .Lfunc_end1956-_ZNK2kc17impl_term_TMethod8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc17impl_term_TMethodD0Ev,"axG",@progbits,_ZN2kc17impl_term_TMethodD0Ev,comdat
	.weak	_ZN2kc17impl_term_TMethodD0Ev   # -- Begin function _ZN2kc17impl_term_TMethodD0Ev
	.p2align	5
	.type	_ZN2kc17impl_term_TMethodD0Ev,@function
_ZN2kc17impl_term_TMethodD0Ev:          # @_ZN2kc17impl_term_TMethodD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1957:
	.size	_ZN2kc17impl_term_TMethodD0Ev, .Lfunc_end1957-_ZN2kc17impl_term_TMethodD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_term_TOperator8prod_selEv,"axG",@progbits,_ZNK2kc19impl_term_TOperator8prod_selEv,comdat
	.weak	_ZNK2kc19impl_term_TOperator8prod_selEv # -- Begin function _ZNK2kc19impl_term_TOperator8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_term_TOperator8prod_selEv,@function
_ZNK2kc19impl_term_TOperator8prod_selEv: # @_ZNK2kc19impl_term_TOperator8prod_selEv
# %bb.0:
	ori	$a0, $zero, 94
	ret
.Lfunc_end1958:
	.size	_ZNK2kc19impl_term_TOperator8prod_selEv, .Lfunc_end1958-_ZNK2kc19impl_term_TOperator8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc19impl_term_TOperatorD0Ev,"axG",@progbits,_ZN2kc19impl_term_TOperatorD0Ev,comdat
	.weak	_ZN2kc19impl_term_TOperatorD0Ev # -- Begin function _ZN2kc19impl_term_TOperatorD0Ev
	.p2align	5
	.type	_ZN2kc19impl_term_TOperatorD0Ev,@function
_ZN2kc19impl_term_TOperatorD0Ev:        # @_ZN2kc19impl_term_TOperatorD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1959:
	.size	_ZN2kc19impl_term_TOperatorD0Ev, .Lfunc_end1959-_ZN2kc19impl_term_TOperatorD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_term_TVariable8prod_selEv,"axG",@progbits,_ZNK2kc19impl_term_TVariable8prod_selEv,comdat
	.weak	_ZNK2kc19impl_term_TVariable8prod_selEv # -- Begin function _ZNK2kc19impl_term_TVariable8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_term_TVariable8prod_selEv,@function
_ZNK2kc19impl_term_TVariable8prod_selEv: # @_ZNK2kc19impl_term_TVariable8prod_selEv
# %bb.0:
	ori	$a0, $zero, 93
	ret
.Lfunc_end1960:
	.size	_ZNK2kc19impl_term_TVariable8prod_selEv, .Lfunc_end1960-_ZNK2kc19impl_term_TVariable8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc19impl_term_TVariableD0Ev,"axG",@progbits,_ZN2kc19impl_term_TVariableD0Ev,comdat
	.weak	_ZN2kc19impl_term_TVariableD0Ev # -- Begin function _ZN2kc19impl_term_TVariableD0Ev
	.p2align	5
	.type	_ZN2kc19impl_term_TVariableD0Ev,@function
_ZN2kc19impl_term_TVariableD0Ev:        # @_ZN2kc19impl_term_TVariableD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1961:
	.size	_ZN2kc19impl_term_TVariableD0Ev, .Lfunc_end1961-_ZN2kc19impl_term_TVariableD0Ev
                                        # -- End function
	.section	.text._ZNK2kc13impl_patterns8prod_selEv,"axG",@progbits,_ZNK2kc13impl_patterns8prod_selEv,comdat
	.weak	_ZNK2kc13impl_patterns8prod_selEv # -- Begin function _ZNK2kc13impl_patterns8prod_selEv
	.p2align	5
	.type	_ZNK2kc13impl_patterns8prod_selEv,@function
_ZNK2kc13impl_patterns8prod_selEv:      # @_ZNK2kc13impl_patterns8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 92
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1962:
	.size	_ZNK2kc13impl_patterns8prod_selEv, .Lfunc_end1962-_ZNK2kc13impl_patterns8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc13impl_patternsD0Ev,"axG",@progbits,_ZN2kc13impl_patternsD0Ev,comdat
	.weak	_ZN2kc13impl_patternsD0Ev       # -- Begin function _ZN2kc13impl_patternsD0Ev
	.p2align	5
	.type	_ZN2kc13impl_patternsD0Ev,@function
_ZN2kc13impl_patternsD0Ev:              # @_ZN2kc13impl_patternsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1963:
	.size	_ZN2kc13impl_patternsD0Ev, .Lfunc_end1963-_ZN2kc13impl_patternsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_pattern_PIntLiteral8prod_selEv,"axG",@progbits,_ZNK2kc24impl_pattern_PIntLiteral8prod_selEv,comdat
	.weak	_ZNK2kc24impl_pattern_PIntLiteral8prod_selEv # -- Begin function _ZNK2kc24impl_pattern_PIntLiteral8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_pattern_PIntLiteral8prod_selEv,@function
_ZNK2kc24impl_pattern_PIntLiteral8prod_selEv: # @_ZNK2kc24impl_pattern_PIntLiteral8prod_selEv
# %bb.0:
	ori	$a0, $zero, 90
	ret
.Lfunc_end1964:
	.size	_ZNK2kc24impl_pattern_PIntLiteral8prod_selEv, .Lfunc_end1964-_ZNK2kc24impl_pattern_PIntLiteral8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc24impl_pattern_PIntLiteralD0Ev,"axG",@progbits,_ZN2kc24impl_pattern_PIntLiteralD0Ev,comdat
	.weak	_ZN2kc24impl_pattern_PIntLiteralD0Ev # -- Begin function _ZN2kc24impl_pattern_PIntLiteralD0Ev
	.p2align	5
	.type	_ZN2kc24impl_pattern_PIntLiteralD0Ev,@function
_ZN2kc24impl_pattern_PIntLiteralD0Ev:   # @_ZN2kc24impl_pattern_PIntLiteralD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1965:
	.size	_ZN2kc24impl_pattern_PIntLiteralD0Ev, .Lfunc_end1965-_ZN2kc24impl_pattern_PIntLiteralD0Ev
                                        # -- End function
	.section	.text._ZNK2kc27impl_pattern_PStringLiteral8prod_selEv,"axG",@progbits,_ZNK2kc27impl_pattern_PStringLiteral8prod_selEv,comdat
	.weak	_ZNK2kc27impl_pattern_PStringLiteral8prod_selEv # -- Begin function _ZNK2kc27impl_pattern_PStringLiteral8prod_selEv
	.p2align	5
	.type	_ZNK2kc27impl_pattern_PStringLiteral8prod_selEv,@function
_ZNK2kc27impl_pattern_PStringLiteral8prod_selEv: # @_ZNK2kc27impl_pattern_PStringLiteral8prod_selEv
# %bb.0:
	ori	$a0, $zero, 89
	ret
.Lfunc_end1966:
	.size	_ZNK2kc27impl_pattern_PStringLiteral8prod_selEv, .Lfunc_end1966-_ZNK2kc27impl_pattern_PStringLiteral8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc27impl_pattern_PStringLiteralD0Ev,"axG",@progbits,_ZN2kc27impl_pattern_PStringLiteralD0Ev,comdat
	.weak	_ZN2kc27impl_pattern_PStringLiteralD0Ev # -- Begin function _ZN2kc27impl_pattern_PStringLiteralD0Ev
	.p2align	5
	.type	_ZN2kc27impl_pattern_PStringLiteralD0Ev,@function
_ZN2kc27impl_pattern_PStringLiteralD0Ev: # @_ZN2kc27impl_pattern_PStringLiteralD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1967:
	.size	_ZN2kc27impl_pattern_PStringLiteralD0Ev, .Lfunc_end1967-_ZN2kc27impl_pattern_PStringLiteralD0Ev
                                        # -- End function
	.section	.text._ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv,"axG",@progbits,_ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv,comdat
	.weak	_ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv # -- Begin function _ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv
	.p2align	5
	.type	_ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv,@function
_ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv: # @_ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv
# %bb.0:
	ori	$a0, $zero, 87
	ret
.Lfunc_end1968:
	.size	_ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv, .Lfunc_end1968-_ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc29impl_pattern_PNonLeafVariableD0Ev,"axG",@progbits,_ZN2kc29impl_pattern_PNonLeafVariableD0Ev,comdat
	.weak	_ZN2kc29impl_pattern_PNonLeafVariableD0Ev # -- Begin function _ZN2kc29impl_pattern_PNonLeafVariableD0Ev
	.p2align	5
	.type	_ZN2kc29impl_pattern_PNonLeafVariableD0Ev,@function
_ZN2kc29impl_pattern_PNonLeafVariableD0Ev: # @_ZN2kc29impl_pattern_PNonLeafVariableD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1969:
	.size	_ZN2kc29impl_pattern_PNonLeafVariableD0Ev, .Lfunc_end1969-_ZN2kc29impl_pattern_PNonLeafVariableD0Ev
                                        # -- End function
	.section	.text._ZNK2kc22impl_pattern_POperator8prod_selEv,"axG",@progbits,_ZNK2kc22impl_pattern_POperator8prod_selEv,comdat
	.weak	_ZNK2kc22impl_pattern_POperator8prod_selEv # -- Begin function _ZNK2kc22impl_pattern_POperator8prod_selEv
	.p2align	5
	.type	_ZNK2kc22impl_pattern_POperator8prod_selEv,@function
_ZNK2kc22impl_pattern_POperator8prod_selEv: # @_ZNK2kc22impl_pattern_POperator8prod_selEv
# %bb.0:
	ori	$a0, $zero, 86
	ret
.Lfunc_end1970:
	.size	_ZNK2kc22impl_pattern_POperator8prod_selEv, .Lfunc_end1970-_ZNK2kc22impl_pattern_POperator8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc22impl_pattern_POperatorD0Ev,"axG",@progbits,_ZN2kc22impl_pattern_POperatorD0Ev,comdat
	.weak	_ZN2kc22impl_pattern_POperatorD0Ev # -- Begin function _ZN2kc22impl_pattern_POperatorD0Ev
	.p2align	5
	.type	_ZN2kc22impl_pattern_POperatorD0Ev,@function
_ZN2kc22impl_pattern_POperatorD0Ev:     # @_ZN2kc22impl_pattern_POperatorD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1971:
	.size	_ZN2kc22impl_pattern_POperatorD0Ev, .Lfunc_end1971-_ZN2kc22impl_pattern_POperatorD0Ev
                                        # -- End function
	.section	.text._ZNK2kc22impl_pattern_PVariable8prod_selEv,"axG",@progbits,_ZNK2kc22impl_pattern_PVariable8prod_selEv,comdat
	.weak	_ZNK2kc22impl_pattern_PVariable8prod_selEv # -- Begin function _ZNK2kc22impl_pattern_PVariable8prod_selEv
	.p2align	5
	.type	_ZNK2kc22impl_pattern_PVariable8prod_selEv,@function
_ZNK2kc22impl_pattern_PVariable8prod_selEv: # @_ZNK2kc22impl_pattern_PVariable8prod_selEv
# %bb.0:
	ori	$a0, $zero, 85
	ret
.Lfunc_end1972:
	.size	_ZNK2kc22impl_pattern_PVariable8prod_selEv, .Lfunc_end1972-_ZNK2kc22impl_pattern_PVariable8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc22impl_pattern_PVariableD0Ev,"axG",@progbits,_ZN2kc22impl_pattern_PVariableD0Ev,comdat
	.weak	_ZN2kc22impl_pattern_PVariableD0Ev # -- Begin function _ZN2kc22impl_pattern_PVariableD0Ev
	.p2align	5
	.type	_ZN2kc22impl_pattern_PVariableD0Ev,@function
_ZN2kc22impl_pattern_PVariableD0Ev:     # @_ZN2kc22impl_pattern_PVariableD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1973:
	.size	_ZN2kc22impl_pattern_PVariableD0Ev, .Lfunc_end1973-_ZN2kc22impl_pattern_PVariableD0Ev
                                        # -- End function
	.section	.text._ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv,"axG",@progbits,_ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv,comdat
	.weak	_ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv # -- Begin function _ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv
	.p2align	5
	.type	_ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv,@function
_ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv: # @_ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv
# %bb.0:
	ori	$a0, $zero, 84
	ret
.Lfunc_end1974:
	.size	_ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv, .Lfunc_end1974-_ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc29impl_outmostpattern_OPDefaultD0Ev,"axG",@progbits,_ZN2kc29impl_outmostpattern_OPDefaultD0Ev,comdat
	.weak	_ZN2kc29impl_outmostpattern_OPDefaultD0Ev # -- Begin function _ZN2kc29impl_outmostpattern_OPDefaultD0Ev
	.p2align	5
	.type	_ZN2kc29impl_outmostpattern_OPDefaultD0Ev,@function
_ZN2kc29impl_outmostpattern_OPDefaultD0Ev: # @_ZN2kc29impl_outmostpattern_OPDefaultD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1975:
	.size	_ZN2kc29impl_outmostpattern_OPDefaultD0Ev, .Lfunc_end1975-_ZN2kc29impl_outmostpattern_OPDefaultD0Ev
                                        # -- End function
	.section	.text._ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv,"axG",@progbits,_ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv,comdat
	.weak	_ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv # -- Begin function _ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv
	.p2align	5
	.type	_ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv,@function
_ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv: # @_ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv
# %bb.0:
	ori	$a0, $zero, 83
	ret
.Lfunc_end1976:
	.size	_ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv, .Lfunc_end1976-_ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc30impl_outmostpattern_OPWildcardD0Ev,"axG",@progbits,_ZN2kc30impl_outmostpattern_OPWildcardD0Ev,comdat
	.weak	_ZN2kc30impl_outmostpattern_OPWildcardD0Ev # -- Begin function _ZN2kc30impl_outmostpattern_OPWildcardD0Ev
	.p2align	5
	.type	_ZN2kc30impl_outmostpattern_OPWildcardD0Ev,@function
_ZN2kc30impl_outmostpattern_OPWildcardD0Ev: # @_ZN2kc30impl_outmostpattern_OPWildcardD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1977:
	.size	_ZN2kc30impl_outmostpattern_OPWildcardD0Ev, .Lfunc_end1977-_ZN2kc30impl_outmostpattern_OPWildcardD0Ev
                                        # -- End function
	.section	.text._ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv,"axG",@progbits,_ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv,comdat
	.weak	_ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv # -- Begin function _ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv
	.p2align	5
	.type	_ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv,@function
_ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv: # @_ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv
# %bb.0:
	ori	$a0, $zero, 82
	ret
.Lfunc_end1978:
	.size	_ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv, .Lfunc_end1978-_ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev,"axG",@progbits,_ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev,comdat
	.weak	_ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev # -- Begin function _ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev
	.p2align	5
	.type	_ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev,@function
_ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev: # @_ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1979:
	.size	_ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev, .Lfunc_end1979-_ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev
                                        # -- End function
	.section	.text._ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv,"axG",@progbits,_ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv,comdat
	.weak	_ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv # -- Begin function _ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv
	.p2align	5
	.type	_ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv,@function
_ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv: # @_ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv
# %bb.0:
	ori	$a0, $zero, 81
	ret
.Lfunc_end1980:
	.size	_ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv, .Lfunc_end1980-_ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc30impl_outmostpattern_OPOperatorD0Ev,"axG",@progbits,_ZN2kc30impl_outmostpattern_OPOperatorD0Ev,comdat
	.weak	_ZN2kc30impl_outmostpattern_OPOperatorD0Ev # -- Begin function _ZN2kc30impl_outmostpattern_OPOperatorD0Ev
	.p2align	5
	.type	_ZN2kc30impl_outmostpattern_OPOperatorD0Ev,@function
_ZN2kc30impl_outmostpattern_OPOperatorD0Ev: # @_ZN2kc30impl_outmostpattern_OPOperatorD0Ev
# %bb.0:
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1981:
	.size	_ZN2kc30impl_outmostpattern_OPOperatorD0Ev, .Lfunc_end1981-_ZN2kc30impl_outmostpattern_OPOperatorD0Ev
                                        # -- End function
	.section	.text._ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv,"axG",@progbits,_ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv,comdat
	.weak	_ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv # -- Begin function _ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv
	.p2align	5
	.type	_ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv,@function
_ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv: # @_ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv
# %bb.0:
	ori	$a0, $zero, 80
	ret
.Lfunc_end1982:
	.size	_ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv, .Lfunc_end1982-_ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev,"axG",@progbits,_ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev,comdat
	.weak	_ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev # -- Begin function _ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev
	.p2align	5
	.type	_ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev,@function
_ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev: # @_ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1983:
	.size	_ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev, .Lfunc_end1983-_ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev
                                        # -- End function
	.section	.text._ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv,"axG",@progbits,_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv,comdat
	.weak	_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv # -- Begin function _ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv
	.p2align	5
	.type	_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv,@function
_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv: # @_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv
# %bb.0:
	ori	$a0, $zero, 79
	ret
.Lfunc_end1984:
	.size	_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv, .Lfunc_end1984-_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev,"axG",@progbits,_ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev,comdat
	.weak	_ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev # -- Begin function _ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev
	.p2align	5
	.type	_ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev,@function
_ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev: # @_ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1985:
	.size	_ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev, .Lfunc_end1985-_ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev
                                        # -- End function
	.section	.text._ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv,"axG",@progbits,_ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv,comdat
	.weak	_ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv # -- Begin function _ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv
	.p2align	5
	.type	_ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv,@function
_ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv: # @_ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv
# %bb.0:
	ori	$a0, $zero, 78
	ret
.Lfunc_end1986:
	.size	_ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv, .Lfunc_end1986-_ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev,"axG",@progbits,_ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev,comdat
	.weak	_ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev # -- Begin function _ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev
	.p2align	5
	.type	_ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev,@function
_ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev: # @_ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1987:
	.size	_ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev, .Lfunc_end1987-_ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev
                                        # -- End function
	.section	.text._ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv,"axG",@progbits,_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv,comdat
	.weak	_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv # -- Begin function _ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv
	.p2align	5
	.type	_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv,@function
_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv: # @_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv
# %bb.0:
	ori	$a0, $zero, 77
	ret
.Lfunc_end1988:
	.size	_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv, .Lfunc_end1988-_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev,"axG",@progbits,_ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev,comdat
	.weak	_ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev # -- Begin function _ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev
	.p2align	5
	.type	_ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev,@function
_ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev: # @_ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1989:
	.size	_ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev, .Lfunc_end1989-_ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev
                                        # -- End function
	.section	.text._ZNK2kc20impl_outmostpatterns8prod_selEv,"axG",@progbits,_ZNK2kc20impl_outmostpatterns8prod_selEv,comdat
	.weak	_ZNK2kc20impl_outmostpatterns8prod_selEv # -- Begin function _ZNK2kc20impl_outmostpatterns8prod_selEv
	.p2align	5
	.type	_ZNK2kc20impl_outmostpatterns8prod_selEv,@function
_ZNK2kc20impl_outmostpatterns8prod_selEv: # @_ZNK2kc20impl_outmostpatterns8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 76
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1990:
	.size	_ZNK2kc20impl_outmostpatterns8prod_selEv, .Lfunc_end1990-_ZNK2kc20impl_outmostpatterns8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc20impl_outmostpatternsD0Ev,"axG",@progbits,_ZN2kc20impl_outmostpatternsD0Ev,comdat
	.weak	_ZN2kc20impl_outmostpatternsD0Ev # -- Begin function _ZN2kc20impl_outmostpatternsD0Ev
	.p2align	5
	.type	_ZN2kc20impl_outmostpatternsD0Ev,@function
_ZN2kc20impl_outmostpatternsD0Ev:       # @_ZN2kc20impl_outmostpatternsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1991:
	.size	_ZN2kc20impl_outmostpatternsD0Ev, .Lfunc_end1991-_ZN2kc20impl_outmostpatternsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc17impl_patternchain8prod_selEv,"axG",@progbits,_ZNK2kc17impl_patternchain8prod_selEv,comdat
	.weak	_ZNK2kc17impl_patternchain8prod_selEv # -- Begin function _ZNK2kc17impl_patternchain8prod_selEv
	.p2align	5
	.type	_ZNK2kc17impl_patternchain8prod_selEv,@function
_ZNK2kc17impl_patternchain8prod_selEv:  # @_ZNK2kc17impl_patternchain8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 74
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1992:
	.size	_ZNK2kc17impl_patternchain8prod_selEv, .Lfunc_end1992-_ZNK2kc17impl_patternchain8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc17impl_patternchainD0Ev,"axG",@progbits,_ZN2kc17impl_patternchainD0Ev,comdat
	.weak	_ZN2kc17impl_patternchainD0Ev   # -- Begin function _ZN2kc17impl_patternchainD0Ev
	.p2align	5
	.type	_ZN2kc17impl_patternchainD0Ev,@function
_ZN2kc17impl_patternchainD0Ev:          # @_ZN2kc17impl_patternchainD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1993:
	.size	_ZN2kc17impl_patternchainD0Ev, .Lfunc_end1993-_ZN2kc17impl_patternchainD0Ev
                                        # -- End function
	.section	.text._ZNK2kc18impl_patternchains8prod_selEv,"axG",@progbits,_ZNK2kc18impl_patternchains8prod_selEv,comdat
	.weak	_ZNK2kc18impl_patternchains8prod_selEv # -- Begin function _ZNK2kc18impl_patternchains8prod_selEv
	.p2align	5
	.type	_ZNK2kc18impl_patternchains8prod_selEv,@function
_ZNK2kc18impl_patternchains8prod_selEv: # @_ZNK2kc18impl_patternchains8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 72
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1994:
	.size	_ZNK2kc18impl_patternchains8prod_selEv, .Lfunc_end1994-_ZNK2kc18impl_patternchains8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc18impl_patternchainsD0Ev,"axG",@progbits,_ZN2kc18impl_patternchainsD0Ev,comdat
	.weak	_ZN2kc18impl_patternchainsD0Ev  # -- Begin function _ZN2kc18impl_patternchainsD0Ev
	.p2align	5
	.type	_ZN2kc18impl_patternchainsD0Ev,@function
_ZN2kc18impl_patternchainsD0Ev:         # @_ZN2kc18impl_patternchainsD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1995:
	.size	_ZN2kc18impl_patternchainsD0Ev, .Lfunc_end1995-_ZN2kc18impl_patternchainsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv,"axG",@progbits,_ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv,comdat
	.weak	_ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv # -- Begin function _ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv,@function
_ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv: # @_ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv
# %bb.0:
	ori	$a0, $zero, 70
	ret
.Lfunc_end1996:
	.size	_ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv, .Lfunc_end1996-_ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc32impl_rewriteclause_RewriteClauseD0Ev,"axG",@progbits,_ZN2kc32impl_rewriteclause_RewriteClauseD0Ev,comdat
	.weak	_ZN2kc32impl_rewriteclause_RewriteClauseD0Ev # -- Begin function _ZN2kc32impl_rewriteclause_RewriteClauseD0Ev
	.p2align	5
	.type	_ZN2kc32impl_rewriteclause_RewriteClauseD0Ev,@function
_ZN2kc32impl_rewriteclause_RewriteClauseD0Ev: # @_ZN2kc32impl_rewriteclause_RewriteClauseD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1997:
	.size	_ZN2kc32impl_rewriteclause_RewriteClauseD0Ev, .Lfunc_end1997-_ZN2kc32impl_rewriteclause_RewriteClauseD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_rewriteclauses8prod_selEv,"axG",@progbits,_ZNK2kc19impl_rewriteclauses8prod_selEv,comdat
	.weak	_ZNK2kc19impl_rewriteclauses8prod_selEv # -- Begin function _ZNK2kc19impl_rewriteclauses8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_rewriteclauses8prod_selEv,@function
_ZNK2kc19impl_rewriteclauses8prod_selEv: # @_ZNK2kc19impl_rewriteclauses8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 69
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end1998:
	.size	_ZNK2kc19impl_rewriteclauses8prod_selEv, .Lfunc_end1998-_ZNK2kc19impl_rewriteclauses8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc19impl_rewriteclausesD0Ev,"axG",@progbits,_ZN2kc19impl_rewriteclausesD0Ev,comdat
	.weak	_ZN2kc19impl_rewriteclausesD0Ev # -- Begin function _ZN2kc19impl_rewriteclausesD0Ev
	.p2align	5
	.type	_ZN2kc19impl_rewriteclausesD0Ev,@function
_ZN2kc19impl_rewriteclausesD0Ev:        # @_ZN2kc19impl_rewriteclausesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end1999:
	.size	_ZN2kc19impl_rewriteclausesD0Ev, .Lfunc_end1999-_ZN2kc19impl_rewriteclausesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv,"axG",@progbits,_ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv,comdat
	.weak	_ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv # -- Begin function _ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv,@function
_ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv: # @_ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv
# %bb.0:
	ori	$a0, $zero, 67
	ret
.Lfunc_end2000:
	.size	_ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv, .Lfunc_end2000-_ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev,"axG",@progbits,_ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev,comdat
	.weak	_ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev # -- Begin function _ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev
	.p2align	5
	.type	_ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev,@function
_ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev: # @_ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2001:
	.size	_ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev, .Lfunc_end2001-_ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_rwdeclarations8prod_selEv,"axG",@progbits,_ZNK2kc19impl_rwdeclarations8prod_selEv,comdat
	.weak	_ZNK2kc19impl_rwdeclarations8prod_selEv # -- Begin function _ZNK2kc19impl_rwdeclarations8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_rwdeclarations8prod_selEv,@function
_ZNK2kc19impl_rwdeclarations8prod_selEv: # @_ZNK2kc19impl_rwdeclarations8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 66
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2002:
	.size	_ZNK2kc19impl_rwdeclarations8prod_selEv, .Lfunc_end2002-_ZNK2kc19impl_rwdeclarations8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc19impl_rwdeclarationsD0Ev,"axG",@progbits,_ZN2kc19impl_rwdeclarationsD0Ev,comdat
	.weak	_ZN2kc19impl_rwdeclarationsD0Ev # -- Begin function _ZN2kc19impl_rwdeclarationsD0Ev
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarationsD0Ev,@function
_ZN2kc19impl_rwdeclarationsD0Ev:        # @_ZN2kc19impl_rwdeclarationsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2003:
	.size	_ZN2kc19impl_rwdeclarationsD0Ev, .Lfunc_end2003-_ZN2kc19impl_rwdeclarationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv,"axG",@progbits,_ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv,comdat
	.weak	_ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv # -- Begin function _ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv
	.p2align	5
	.type	_ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv,@function
_ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv: # @_ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv
# %bb.0:
	ori	$a0, $zero, 64
	ret
.Lfunc_end2004:
	.size	_ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv, .Lfunc_end2004-_ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev,"axG",@progbits,_ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev,comdat
	.weak	_ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev # -- Begin function _ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev
	.p2align	5
	.type	_ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev,@function
_ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev: # @_ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2005:
	.size	_ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev, .Lfunc_end2005-_ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_includedeclarations8prod_selEv,"axG",@progbits,_ZNK2kc24impl_includedeclarations8prod_selEv,comdat
	.weak	_ZNK2kc24impl_includedeclarations8prod_selEv # -- Begin function _ZNK2kc24impl_includedeclarations8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_includedeclarations8prod_selEv,@function
_ZNK2kc24impl_includedeclarations8prod_selEv: # @_ZNK2kc24impl_includedeclarations8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 63
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2006:
	.size	_ZNK2kc24impl_includedeclarations8prod_selEv, .Lfunc_end2006-_ZNK2kc24impl_includedeclarations8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc24impl_includedeclarationsD0Ev,"axG",@progbits,_ZN2kc24impl_includedeclarationsD0Ev,comdat
	.weak	_ZN2kc24impl_includedeclarationsD0Ev # -- Begin function _ZN2kc24impl_includedeclarationsD0Ev
	.p2align	5
	.type	_ZN2kc24impl_includedeclarationsD0Ev,@function
_ZN2kc24impl_includedeclarationsD0Ev:   # @_ZN2kc24impl_includedeclarationsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2007:
	.size	_ZN2kc24impl_includedeclarationsD0Ev, .Lfunc_end2007-_ZN2kc24impl_includedeclarationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc28impl_includefile_IncludeFile8prod_selEv,"axG",@progbits,_ZNK2kc28impl_includefile_IncludeFile8prod_selEv,comdat
	.weak	_ZNK2kc28impl_includefile_IncludeFile8prod_selEv # -- Begin function _ZNK2kc28impl_includefile_IncludeFile8prod_selEv
	.p2align	5
	.type	_ZNK2kc28impl_includefile_IncludeFile8prod_selEv,@function
_ZNK2kc28impl_includefile_IncludeFile8prod_selEv: # @_ZNK2kc28impl_includefile_IncludeFile8prod_selEv
# %bb.0:
	ori	$a0, $zero, 61
	ret
.Lfunc_end2008:
	.size	_ZNK2kc28impl_includefile_IncludeFile8prod_selEv, .Lfunc_end2008-_ZNK2kc28impl_includefile_IncludeFile8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc28impl_includefile_IncludeFileD0Ev,"axG",@progbits,_ZN2kc28impl_includefile_IncludeFileD0Ev,comdat
	.weak	_ZN2kc28impl_includefile_IncludeFileD0Ev # -- Begin function _ZN2kc28impl_includefile_IncludeFileD0Ev
	.p2align	5
	.type	_ZN2kc28impl_includefile_IncludeFileD0Ev,@function
_ZN2kc28impl_includefile_IncludeFileD0Ev: # @_ZN2kc28impl_includefile_IncludeFileD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2009:
	.size	_ZN2kc28impl_includefile_IncludeFileD0Ev, .Lfunc_end2009-_ZN2kc28impl_includefile_IncludeFileD0Ev
                                        # -- End function
	.section	.text._ZNK2kc17impl_includefiles8prod_selEv,"axG",@progbits,_ZNK2kc17impl_includefiles8prod_selEv,comdat
	.weak	_ZNK2kc17impl_includefiles8prod_selEv # -- Begin function _ZNK2kc17impl_includefiles8prod_selEv
	.p2align	5
	.type	_ZNK2kc17impl_includefiles8prod_selEv,@function
_ZNK2kc17impl_includefiles8prod_selEv:  # @_ZNK2kc17impl_includefiles8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 60
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2010:
	.size	_ZNK2kc17impl_includefiles8prod_selEv, .Lfunc_end2010-_ZNK2kc17impl_includefiles8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc17impl_includefilesD0Ev,"axG",@progbits,_ZN2kc17impl_includefilesD0Ev,comdat
	.weak	_ZN2kc17impl_includefilesD0Ev   # -- Begin function _ZN2kc17impl_includefilesD0Ev
	.p2align	5
	.type	_ZN2kc17impl_includefilesD0Ev,@function
_ZN2kc17impl_includefilesD0Ev:          # @_ZN2kc17impl_includefilesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2011:
	.size	_ZN2kc17impl_includefilesD0Ev, .Lfunc_end2011-_ZN2kc17impl_includefilesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc11impl_Ctexts8prod_selEv,"axG",@progbits,_ZNK2kc11impl_Ctexts8prod_selEv,comdat
	.weak	_ZNK2kc11impl_Ctexts8prod_selEv # -- Begin function _ZNK2kc11impl_Ctexts8prod_selEv
	.p2align	5
	.type	_ZNK2kc11impl_Ctexts8prod_selEv,@function
_ZNK2kc11impl_Ctexts8prod_selEv:        # @_ZNK2kc11impl_Ctexts8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 58
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2012:
	.size	_ZNK2kc11impl_Ctexts8prod_selEv, .Lfunc_end2012-_ZNK2kc11impl_Ctexts8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc11impl_CtextsD0Ev,"axG",@progbits,_ZN2kc11impl_CtextsD0Ev,comdat
	.weak	_ZN2kc11impl_CtextsD0Ev         # -- Begin function _ZN2kc11impl_CtextsD0Ev
	.p2align	5
	.type	_ZN2kc11impl_CtextsD0Ev,@function
_ZN2kc11impl_CtextsD0Ev:                # @_ZN2kc11impl_CtextsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2013:
	.size	_ZN2kc11impl_CtextsD0Ev, .Lfunc_end2013-_ZN2kc11impl_CtextsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv,"axG",@progbits,_ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv,comdat
	.weak	_ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv # -- Begin function _ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv
	.p2align	5
	.type	_ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv,@function
_ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv: # @_ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv
# %bb.0:
	ori	$a0, $zero, 56
	ret
.Lfunc_end2014:
	.size	_ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv, .Lfunc_end2014-_ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc32impl_idCexpression_IdCexpressionD0Ev,"axG",@progbits,_ZN2kc32impl_idCexpression_IdCexpressionD0Ev,comdat
	.weak	_ZN2kc32impl_idCexpression_IdCexpressionD0Ev # -- Begin function _ZN2kc32impl_idCexpression_IdCexpressionD0Ev
	.p2align	5
	.type	_ZN2kc32impl_idCexpression_IdCexpressionD0Ev,@function
_ZN2kc32impl_idCexpression_IdCexpressionD0Ev: # @_ZN2kc32impl_idCexpression_IdCexpressionD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2015:
	.size	_ZN2kc32impl_idCexpression_IdCexpressionD0Ev, .Lfunc_end2015-_ZN2kc32impl_idCexpression_IdCexpressionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_idCexpressions8prod_selEv,"axG",@progbits,_ZNK2kc19impl_idCexpressions8prod_selEv,comdat
	.weak	_ZNK2kc19impl_idCexpressions8prod_selEv # -- Begin function _ZNK2kc19impl_idCexpressions8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_idCexpressions8prod_selEv,@function
_ZNK2kc19impl_idCexpressions8prod_selEv: # @_ZNK2kc19impl_idCexpressions8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 55
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2016:
	.size	_ZNK2kc19impl_idCexpressions8prod_selEv, .Lfunc_end2016-_ZNK2kc19impl_idCexpressions8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc19impl_idCexpressionsD0Ev,"axG",@progbits,_ZN2kc19impl_idCexpressionsD0Ev,comdat
	.weak	_ZN2kc19impl_idCexpressionsD0Ev # -- Begin function _ZN2kc19impl_idCexpressionsD0Ev
	.p2align	5
	.type	_ZN2kc19impl_idCexpressionsD0Ev,@function
_ZN2kc19impl_idCexpressionsD0Ev:        # @_ZN2kc19impl_idCexpressionsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2017:
	.size	_ZN2kc19impl_idCexpressionsD0Ev, .Lfunc_end2017-_ZN2kc19impl_idCexpressionsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv,"axG",@progbits,_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv,comdat
	.weak	_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv # -- Begin function _ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv
	.p2align	5
	.type	_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv,@function
_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv: # @_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv
# %bb.0:
	ori	$a0, $zero, 52
	ret
.Lfunc_end2018:
	.size	_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv, .Lfunc_end2018-_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev,"axG",@progbits,_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev,comdat
	.weak	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev # -- Begin function _ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev
	.p2align	5
	.type	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev,@function
_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev: # @_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2019:
	.size	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev, .Lfunc_end2019-_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev
                                        # -- End function
	.section	.text._ZNK2kc18impl_CexpressionSQ8prod_selEv,"axG",@progbits,_ZNK2kc18impl_CexpressionSQ8prod_selEv,comdat
	.weak	_ZNK2kc18impl_CexpressionSQ8prod_selEv # -- Begin function _ZNK2kc18impl_CexpressionSQ8prod_selEv
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionSQ8prod_selEv,@function
_ZNK2kc18impl_CexpressionSQ8prod_selEv: # @_ZNK2kc18impl_CexpressionSQ8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 51
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2020:
	.size	_ZNK2kc18impl_CexpressionSQ8prod_selEv, .Lfunc_end2020-_ZNK2kc18impl_CexpressionSQ8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc18impl_CexpressionSQD0Ev,"axG",@progbits,_ZN2kc18impl_CexpressionSQD0Ev,comdat
	.weak	_ZN2kc18impl_CexpressionSQD0Ev  # -- Begin function _ZN2kc18impl_CexpressionSQD0Ev
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQD0Ev,@function
_ZN2kc18impl_CexpressionSQD0Ev:         # @_ZN2kc18impl_CexpressionSQD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2021:
	.size	_ZN2kc18impl_CexpressionSQD0Ev, .Lfunc_end2021-_ZN2kc18impl_CexpressionSQD0Ev
                                        # -- End function
	.section	.text._ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv,"axG",@progbits,_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv,comdat
	.weak	_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv # -- Begin function _ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv
	.p2align	5
	.type	_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv,@function
_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv: # @_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv
# %bb.0:
	ori	$a0, $zero, 48
	ret
.Lfunc_end2022:
	.size	_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv, .Lfunc_end2022-_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev,"axG",@progbits,_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev,comdat
	.weak	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev # -- Begin function _ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev
	.p2align	5
	.type	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev,@function
_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev: # @_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2023:
	.size	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev, .Lfunc_end2023-_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev
                                        # -- End function
	.section	.text._ZNK2kc18impl_CexpressionDQ8prod_selEv,"axG",@progbits,_ZNK2kc18impl_CexpressionDQ8prod_selEv,comdat
	.weak	_ZNK2kc18impl_CexpressionDQ8prod_selEv # -- Begin function _ZNK2kc18impl_CexpressionDQ8prod_selEv
	.p2align	5
	.type	_ZNK2kc18impl_CexpressionDQ8prod_selEv,@function
_ZNK2kc18impl_CexpressionDQ8prod_selEv: # @_ZNK2kc18impl_CexpressionDQ8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 47
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2024:
	.size	_ZNK2kc18impl_CexpressionDQ8prod_selEv, .Lfunc_end2024-_ZNK2kc18impl_CexpressionDQ8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc18impl_CexpressionDQD0Ev,"axG",@progbits,_ZN2kc18impl_CexpressionDQD0Ev,comdat
	.weak	_ZN2kc18impl_CexpressionDQD0Ev  # -- Begin function _ZN2kc18impl_CexpressionDQD0Ev
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQD0Ev,@function
_ZN2kc18impl_CexpressionDQD0Ev:         # @_ZN2kc18impl_CexpressionDQD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2025:
	.size	_ZN2kc18impl_CexpressionDQD0Ev, .Lfunc_end2025-_ZN2kc18impl_CexpressionDQD0Ev
                                        # -- End function
	.section	.text._ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv,"axG",@progbits,_ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv,comdat
	.weak	_ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv # -- Begin function _ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv
	.p2align	5
	.type	_ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv,@function
_ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv: # @_ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv
# %bb.0:
	ori	$a0, $zero, 45
	ret
.Lfunc_end2026:
	.size	_ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv, .Lfunc_end2026-_ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev,"axG",@progbits,_ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev,comdat
	.weak	_ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev # -- Begin function _ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev
	.p2align	5
	.type	_ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev,@function
_ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev: # @_ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2027:
	.size	_ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev, .Lfunc_end2027-_ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev
                                        # -- End function
	.section	.text._ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv,"axG",@progbits,_ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv,comdat
	.weak	_ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv # -- Begin function _ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv
	.p2align	5
	.type	_ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv,@function
_ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv: # @_ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv
# %bb.0:
	ori	$a0, $zero, 44
	ret
.Lfunc_end2028:
	.size	_ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv, .Lfunc_end2028-_ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev,"axG",@progbits,_ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev,comdat
	.weak	_ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev # -- Begin function _ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev
	.p2align	5
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev: # @_ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2029:
	.size	_ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev, .Lfunc_end2029-_ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev
                                        # -- End function
	.section	.text._ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv,"axG",@progbits,_ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv,comdat
	.weak	_ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv # -- Begin function _ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv
	.p2align	5
	.type	_ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv,@function
_ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv: # @_ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv
# %bb.0:
	ori	$a0, $zero, 43
	ret
.Lfunc_end2030:
	.size	_ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv, .Lfunc_end2030-_ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev,"axG",@progbits,_ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev,comdat
	.weak	_ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev,@function
_ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev: # @_ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2031:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev, .Lfunc_end2031-_ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev
                                        # -- End function
	.section	.text._ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv,"axG",@progbits,_ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv,comdat
	.weak	_ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv # -- Begin function _ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv
	.p2align	5
	.type	_ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv,@function
_ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv: # @_ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv
# %bb.0:
	ori	$a0, $zero, 42
	ret
.Lfunc_end2032:
	.size	_ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv, .Lfunc_end2032-_ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev,"axG",@progbits,_ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev,comdat
	.weak	_ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev,@function
_ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev: # @_ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2033:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev, .Lfunc_end2033-_ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev
                                        # -- End function
	.section	.text._ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv,"axG",@progbits,_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv,comdat
	.weak	_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv # -- Begin function _ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv
	.p2align	5
	.type	_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv,@function
_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv: # @_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv
# %bb.0:
	ori	$a0, $zero, 40
	ret
.Lfunc_end2034:
	.size	_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv, .Lfunc_end2034-_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev,"axG",@progbits,_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev,comdat
	.weak	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev # -- Begin function _ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev
	.p2align	5
	.type	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev,@function
_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev: # @_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2035:
	.size	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev, .Lfunc_end2035-_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev
                                        # -- End function
	.section	.text._ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv,"axG",@progbits,_ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv,comdat
	.weak	_ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv # -- Begin function _ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv
	.p2align	5
	.type	_ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv,@function
_ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv: # @_ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv
# %bb.0:
	ori	$a0, $zero, 39
	ret
.Lfunc_end2036:
	.size	_ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv, .Lfunc_end2036-_ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev,"axG",@progbits,_ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev,comdat
	.weak	_ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev # -- Begin function _ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev
	.p2align	5
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev: # @_ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2037:
	.size	_ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev, .Lfunc_end2037-_ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev
                                        # -- End function
	.section	.text._ZNK2kc16impl_Cexpression8prod_selEv,"axG",@progbits,_ZNK2kc16impl_Cexpression8prod_selEv,comdat
	.weak	_ZNK2kc16impl_Cexpression8prod_selEv # -- Begin function _ZNK2kc16impl_Cexpression8prod_selEv
	.p2align	5
	.type	_ZNK2kc16impl_Cexpression8prod_selEv,@function
_ZNK2kc16impl_Cexpression8prod_selEv:   # @_ZNK2kc16impl_Cexpression8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 38
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2038:
	.size	_ZNK2kc16impl_Cexpression8prod_selEv, .Lfunc_end2038-_ZNK2kc16impl_Cexpression8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc16impl_CexpressionD0Ev,"axG",@progbits,_ZN2kc16impl_CexpressionD0Ev,comdat
	.weak	_ZN2kc16impl_CexpressionD0Ev    # -- Begin function _ZN2kc16impl_CexpressionD0Ev
	.p2align	5
	.type	_ZN2kc16impl_CexpressionD0Ev,@function
_ZN2kc16impl_CexpressionD0Ev:           # @_ZN2kc16impl_CexpressionD0Ev
# %bb.0:
	ori	$a1, $zero, 40
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2039:
	.size	_ZN2kc16impl_CexpressionD0Ev, .Lfunc_end2039-_ZN2kc16impl_CexpressionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv,"axG",@progbits,_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv,comdat
	.weak	_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv # -- Begin function _ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv
	.p2align	5
	.type	_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv,@function
_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv: # @_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv
# %bb.0:
	ori	$a0, $zero, 36
	ret
.Lfunc_end2040:
	.size	_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv, .Lfunc_end2040-_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev,"axG",@progbits,_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev,comdat
	.weak	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev # -- Begin function _ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev
	.p2align	5
	.type	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev,@function
_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev: # @_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2041:
	.size	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev, .Lfunc_end2041-_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc24impl_attribute_Attribute8prod_selEv,"axG",@progbits,_ZNK2kc24impl_attribute_Attribute8prod_selEv,comdat
	.weak	_ZNK2kc24impl_attribute_Attribute8prod_selEv # -- Begin function _ZNK2kc24impl_attribute_Attribute8prod_selEv
	.p2align	5
	.type	_ZNK2kc24impl_attribute_Attribute8prod_selEv,@function
_ZNK2kc24impl_attribute_Attribute8prod_selEv: # @_ZNK2kc24impl_attribute_Attribute8prod_selEv
# %bb.0:
	ori	$a0, $zero, 34
	ret
.Lfunc_end2042:
	.size	_ZNK2kc24impl_attribute_Attribute8prod_selEv, .Lfunc_end2042-_ZNK2kc24impl_attribute_Attribute8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc24impl_attribute_AttributeD0Ev,"axG",@progbits,_ZN2kc24impl_attribute_AttributeD0Ev,comdat
	.weak	_ZN2kc24impl_attribute_AttributeD0Ev # -- Begin function _ZN2kc24impl_attribute_AttributeD0Ev
	.p2align	5
	.type	_ZN2kc24impl_attribute_AttributeD0Ev,@function
_ZN2kc24impl_attribute_AttributeD0Ev:   # @_ZN2kc24impl_attribute_AttributeD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2043:
	.size	_ZN2kc24impl_attribute_AttributeD0Ev, .Lfunc_end2043-_ZN2kc24impl_attribute_AttributeD0Ev
                                        # -- End function
	.section	.text._ZNK2kc15impl_attributes8prod_selEv,"axG",@progbits,_ZNK2kc15impl_attributes8prod_selEv,comdat
	.weak	_ZNK2kc15impl_attributes8prod_selEv # -- Begin function _ZNK2kc15impl_attributes8prod_selEv
	.p2align	5
	.type	_ZNK2kc15impl_attributes8prod_selEv,@function
_ZNK2kc15impl_attributes8prod_selEv:    # @_ZNK2kc15impl_attributes8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 33
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2044:
	.size	_ZNK2kc15impl_attributes8prod_selEv, .Lfunc_end2044-_ZNK2kc15impl_attributes8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc15impl_attributesD0Ev,"axG",@progbits,_ZN2kc15impl_attributesD0Ev,comdat
	.weak	_ZN2kc15impl_attributesD0Ev     # -- Begin function _ZN2kc15impl_attributesD0Ev
	.p2align	5
	.type	_ZN2kc15impl_attributesD0Ev,@function
_ZN2kc15impl_attributesD0Ev:            # @_ZN2kc15impl_attributesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2045:
	.size	_ZN2kc15impl_attributesD0Ev, .Lfunc_end2045-_ZN2kc15impl_attributesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv,"axG",@progbits,_ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv,comdat
	.weak	_ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv # -- Begin function _ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv
	.p2align	5
	.type	_ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv,@function
_ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv: # @_ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv
# %bb.0:
	ori	$a0, $zero, 31
	ret
.Lfunc_end2046:
	.size	_ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv, .Lfunc_end2046-_ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc29impl_Ccode_option_CcodeOptionD0Ev,"axG",@progbits,_ZN2kc29impl_Ccode_option_CcodeOptionD0Ev,comdat
	.weak	_ZN2kc29impl_Ccode_option_CcodeOptionD0Ev # -- Begin function _ZN2kc29impl_Ccode_option_CcodeOptionD0Ev
	.p2align	5
	.type	_ZN2kc29impl_Ccode_option_CcodeOptionD0Ev,@function
_ZN2kc29impl_Ccode_option_CcodeOptionD0Ev: # @_ZN2kc29impl_Ccode_option_CcodeOptionD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2047:
	.size	_ZN2kc29impl_Ccode_option_CcodeOptionD0Ev, .Lfunc_end2047-_ZN2kc29impl_Ccode_option_CcodeOptionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc22impl_argument_Argument8prod_selEv,"axG",@progbits,_ZNK2kc22impl_argument_Argument8prod_selEv,comdat
	.weak	_ZNK2kc22impl_argument_Argument8prod_selEv # -- Begin function _ZNK2kc22impl_argument_Argument8prod_selEv
	.p2align	5
	.type	_ZNK2kc22impl_argument_Argument8prod_selEv,@function
_ZNK2kc22impl_argument_Argument8prod_selEv: # @_ZNK2kc22impl_argument_Argument8prod_selEv
# %bb.0:
	ori	$a0, $zero, 30
	ret
.Lfunc_end2048:
	.size	_ZNK2kc22impl_argument_Argument8prod_selEv, .Lfunc_end2048-_ZNK2kc22impl_argument_Argument8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc22impl_argument_ArgumentD0Ev,"axG",@progbits,_ZN2kc22impl_argument_ArgumentD0Ev,comdat
	.weak	_ZN2kc22impl_argument_ArgumentD0Ev # -- Begin function _ZN2kc22impl_argument_ArgumentD0Ev
	.p2align	5
	.type	_ZN2kc22impl_argument_ArgumentD0Ev,@function
_ZN2kc22impl_argument_ArgumentD0Ev:     # @_ZN2kc22impl_argument_ArgumentD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2049:
	.size	_ZN2kc22impl_argument_ArgumentD0Ev, .Lfunc_end2049-_ZN2kc22impl_argument_ArgumentD0Ev
                                        # -- End function
	.section	.text._ZNK2kc14impl_arguments8prod_selEv,"axG",@progbits,_ZNK2kc14impl_arguments8prod_selEv,comdat
	.weak	_ZNK2kc14impl_arguments8prod_selEv # -- Begin function _ZNK2kc14impl_arguments8prod_selEv
	.p2align	5
	.type	_ZNK2kc14impl_arguments8prod_selEv,@function
_ZNK2kc14impl_arguments8prod_selEv:     # @_ZNK2kc14impl_arguments8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	xori	$a0, $a0, 29
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2050:
	.size	_ZNK2kc14impl_arguments8prod_selEv, .Lfunc_end2050-_ZNK2kc14impl_arguments8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc14impl_argumentsD0Ev,"axG",@progbits,_ZN2kc14impl_argumentsD0Ev,comdat
	.weak	_ZN2kc14impl_argumentsD0Ev      # -- Begin function _ZN2kc14impl_argumentsD0Ev
	.p2align	5
	.type	_ZN2kc14impl_argumentsD0Ev,@function
_ZN2kc14impl_argumentsD0Ev:             # @_ZN2kc14impl_argumentsD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2051:
	.size	_ZN2kc14impl_argumentsD0Ev, .Lfunc_end2051-_ZN2kc14impl_argumentsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc28impl_alternative_Alternative8prod_selEv,"axG",@progbits,_ZNK2kc28impl_alternative_Alternative8prod_selEv,comdat
	.weak	_ZNK2kc28impl_alternative_Alternative8prod_selEv # -- Begin function _ZNK2kc28impl_alternative_Alternative8prod_selEv
	.p2align	5
	.type	_ZNK2kc28impl_alternative_Alternative8prod_selEv,@function
_ZNK2kc28impl_alternative_Alternative8prod_selEv: # @_ZNK2kc28impl_alternative_Alternative8prod_selEv
# %bb.0:
	ori	$a0, $zero, 27
	ret
.Lfunc_end2052:
	.size	_ZNK2kc28impl_alternative_Alternative8prod_selEv, .Lfunc_end2052-_ZNK2kc28impl_alternative_Alternative8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc28impl_alternative_AlternativeD0Ev,"axG",@progbits,_ZN2kc28impl_alternative_AlternativeD0Ev,comdat
	.weak	_ZN2kc28impl_alternative_AlternativeD0Ev # -- Begin function _ZN2kc28impl_alternative_AlternativeD0Ev
	.p2align	5
	.type	_ZN2kc28impl_alternative_AlternativeD0Ev,@function
_ZN2kc28impl_alternative_AlternativeD0Ev: # @_ZN2kc28impl_alternative_AlternativeD0Ev
# %bb.0:
	ori	$a1, $zero, 56
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2053:
	.size	_ZN2kc28impl_alternative_AlternativeD0Ev, .Lfunc_end2053-_ZN2kc28impl_alternative_AlternativeD0Ev
                                        # -- End function
	.section	.text._ZNK2kc17impl_alternatives8prod_selEv,"axG",@progbits,_ZNK2kc17impl_alternatives8prod_selEv,comdat
	.weak	_ZNK2kc17impl_alternatives8prod_selEv # -- Begin function _ZNK2kc17impl_alternatives8prod_selEv
	.p2align	5
	.type	_ZNK2kc17impl_alternatives8prod_selEv,@function
_ZNK2kc17impl_alternatives8prod_selEv:  # @_ZNK2kc17impl_alternatives8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 26
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2054:
	.size	_ZNK2kc17impl_alternatives8prod_selEv, .Lfunc_end2054-_ZNK2kc17impl_alternatives8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc17impl_alternativesD0Ev,"axG",@progbits,_ZN2kc17impl_alternativesD0Ev,comdat
	.weak	_ZN2kc17impl_alternativesD0Ev   # -- Begin function _ZN2kc17impl_alternativesD0Ev
	.p2align	5
	.type	_ZN2kc17impl_alternativesD0Ev,@function
_ZN2kc17impl_alternativesD0Ev:          # @_ZN2kc17impl_alternativesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2055:
	.size	_ZN2kc17impl_alternativesD0Ev, .Lfunc_end2055-_ZN2kc17impl_alternativesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv,"axG",@progbits,_ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv,comdat
	.weak	_ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv # -- Begin function _ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv
	.p2align	5
	.type	_ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv,@function
_ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv: # @_ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv
# %bb.0:
	ori	$a0, $zero, 24
	ret
.Lfunc_end2056:
	.size	_ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv, .Lfunc_end2056-_ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev,"axG",@progbits,_ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev,comdat
	.weak	_ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev # -- Begin function _ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev
	.p2align	5
	.type	_ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev,@function
_ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev: # @_ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2057:
	.size	_ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev, .Lfunc_end2057-_ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv,"axG",@progbits,_ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv,comdat
	.weak	_ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv # -- Begin function _ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv
	.p2align	5
	.type	_ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv,@function
_ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv: # @_ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv
# %bb.0:
	ori	$a0, $zero, 23
	ret
.Lfunc_end2058:
	.size	_ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv, .Lfunc_end2058-_ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc40impl_productionblock_NonlistAlternativesD0Ev,"axG",@progbits,_ZN2kc40impl_productionblock_NonlistAlternativesD0Ev,comdat
	.weak	_ZN2kc40impl_productionblock_NonlistAlternativesD0Ev # -- Begin function _ZN2kc40impl_productionblock_NonlistAlternativesD0Ev
	.p2align	5
	.type	_ZN2kc40impl_productionblock_NonlistAlternativesD0Ev,@function
_ZN2kc40impl_productionblock_NonlistAlternativesD0Ev: # @_ZN2kc40impl_productionblock_NonlistAlternativesD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2059:
	.size	_ZN2kc40impl_productionblock_NonlistAlternativesD0Ev, .Lfunc_end2059-_ZN2kc40impl_productionblock_NonlistAlternativesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv,"axG",@progbits,_ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv,comdat
	.weak	_ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv # -- Begin function _ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv
	.p2align	5
	.type	_ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv,@function
_ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv: # @_ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv
# %bb.0:
	ori	$a0, $zero, 22
	ret
.Lfunc_end2060:
	.size	_ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv, .Lfunc_end2060-_ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc37impl_productionblock_ListAlternativesD0Ev,"axG",@progbits,_ZN2kc37impl_productionblock_ListAlternativesD0Ev,comdat
	.weak	_ZN2kc37impl_productionblock_ListAlternativesD0Ev # -- Begin function _ZN2kc37impl_productionblock_ListAlternativesD0Ev
	.p2align	5
	.type	_ZN2kc37impl_productionblock_ListAlternativesD0Ev,@function
_ZN2kc37impl_productionblock_ListAlternativesD0Ev: # @_ZN2kc37impl_productionblock_ListAlternativesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2061:
	.size	_ZN2kc37impl_productionblock_ListAlternativesD0Ev, .Lfunc_end2061-_ZN2kc37impl_productionblock_ListAlternativesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc19impl_storageclasses8prod_selEv,"axG",@progbits,_ZNK2kc19impl_storageclasses8prod_selEv,comdat
	.weak	_ZNK2kc19impl_storageclasses8prod_selEv # -- Begin function _ZNK2kc19impl_storageclasses8prod_selEv
	.p2align	5
	.type	_ZNK2kc19impl_storageclasses8prod_selEv,@function
_ZNK2kc19impl_storageclasses8prod_selEv: # @_ZNK2kc19impl_storageclasses8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 20
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2062:
	.size	_ZNK2kc19impl_storageclasses8prod_selEv, .Lfunc_end2062-_ZNK2kc19impl_storageclasses8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc19impl_storageclassesD0Ev,"axG",@progbits,_ZN2kc19impl_storageclassesD0Ev,comdat
	.weak	_ZN2kc19impl_storageclassesD0Ev # -- Begin function _ZN2kc19impl_storageclassesD0Ev
	.p2align	5
	.type	_ZN2kc19impl_storageclassesD0Ev,@function
_ZN2kc19impl_storageclassesD0Ev:        # @_ZN2kc19impl_storageclassesD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2063:
	.size	_ZN2kc19impl_storageclassesD0Ev, .Lfunc_end2063-_ZN2kc19impl_storageclassesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv,"axG",@progbits,_ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv,comdat
	.weak	_ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv # -- Begin function _ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv
	.p2align	5
	.type	_ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv,@function
_ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv: # @_ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv
# %bb.0:
	ori	$a0, $zero, 18
	ret
.Lfunc_end2064:
	.size	_ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv, .Lfunc_end2064-_ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev,"axG",@progbits,_ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev,comdat
	.weak	_ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev # -- Begin function _ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev
	.p2align	5
	.type	_ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev,@function
_ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev: # @_ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2065:
	.size	_ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev, .Lfunc_end2065-_ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv,"axG",@progbits,_ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv,comdat
	.weak	_ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv # -- Begin function _ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv
	.p2align	5
	.type	_ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv,@function
_ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv: # @_ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv
# %bb.0:
	ori	$a0, $zero, 17
	ret
.Lfunc_end2066:
	.size	_ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv, .Lfunc_end2066-_ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev,"axG",@progbits,_ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev,comdat
	.weak	_ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev # -- Begin function _ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev
	.p2align	5
	.type	_ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev,@function
_ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev: # @_ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2067:
	.size	_ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev, .Lfunc_end2067-_ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev
                                        # -- End function
	.section	.text._ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv,"axG",@progbits,_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv,comdat
	.weak	_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv # -- Begin function _ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv
	.p2align	5
	.type	_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv,@function
_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv: # @_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv
# %bb.0:
	ori	$a0, $zero, 15
	ret
.Lfunc_end2068:
	.size	_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv, .Lfunc_end2068-_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev,"axG",@progbits,_ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev,comdat
	.weak	_ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev # -- Begin function _ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev
	.p2align	5
	.type	_ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev,@function
_ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev: # @_ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev
# %bb.0:
	ori	$a1, $zero, 64
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2069:
	.size	_ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev, .Lfunc_end2069-_ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev
                                        # -- End function
	.section	.text._ZNK2kc16impl_phylumnames8prod_selEv,"axG",@progbits,_ZNK2kc16impl_phylumnames8prod_selEv,comdat
	.weak	_ZNK2kc16impl_phylumnames8prod_selEv # -- Begin function _ZNK2kc16impl_phylumnames8prod_selEv
	.p2align	5
	.type	_ZNK2kc16impl_phylumnames8prod_selEv,@function
_ZNK2kc16impl_phylumnames8prod_selEv:   # @_ZNK2kc16impl_phylumnames8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 14
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2070:
	.size	_ZNK2kc16impl_phylumnames8prod_selEv, .Lfunc_end2070-_ZNK2kc16impl_phylumnames8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc16impl_phylumnamesD0Ev,"axG",@progbits,_ZN2kc16impl_phylumnamesD0Ev,comdat
	.weak	_ZN2kc16impl_phylumnamesD0Ev    # -- Begin function _ZN2kc16impl_phylumnamesD0Ev
	.p2align	5
	.type	_ZN2kc16impl_phylumnamesD0Ev,@function
_ZN2kc16impl_phylumnamesD0Ev:           # @_ZN2kc16impl_phylumnamesD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2071:
	.size	_ZN2kc16impl_phylumnamesD0Ev, .Lfunc_end2071-_ZN2kc16impl_phylumnamesD0Ev
                                        # -- End function
	.section	.text._ZNK2kc23impl_phylumdeclarations8prod_selEv,"axG",@progbits,_ZNK2kc23impl_phylumdeclarations8prod_selEv,comdat
	.weak	_ZNK2kc23impl_phylumdeclarations8prod_selEv # -- Begin function _ZNK2kc23impl_phylumdeclarations8prod_selEv
	.p2align	5
	.type	_ZNK2kc23impl_phylumdeclarations8prod_selEv,@function
_ZNK2kc23impl_phylumdeclarations8prod_selEv: # @_ZNK2kc23impl_phylumdeclarations8prod_selEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 12
	sub.d	$a0, $a1, $a0
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end2072:
	.size	_ZNK2kc23impl_phylumdeclarations8prod_selEv, .Lfunc_end2072-_ZNK2kc23impl_phylumdeclarations8prod_selEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc23impl_phylumdeclarationsD0Ev,"axG",@progbits,_ZN2kc23impl_phylumdeclarationsD0Ev,comdat
	.weak	_ZN2kc23impl_phylumdeclarationsD0Ev # -- Begin function _ZN2kc23impl_phylumdeclarationsD0Ev
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarationsD0Ev,@function
_ZN2kc23impl_phylumdeclarationsD0Ev:    # @_ZN2kc23impl_phylumdeclarationsD0Ev
# %bb.0:
	ori	$a1, $zero, 24
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2073:
	.size	_ZN2kc23impl_phylumdeclarationsD0Ev, .Lfunc_end2073-_ZN2kc23impl_phylumdeclarationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv,"axG",@progbits,_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv,comdat
	.weak	_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv # -- Begin function _ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv
	.p2align	5
	.type	_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv,@function
_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv: # @_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv
# %bb.0:
	ori	$a0, $zero, 10
	ret
.Lfunc_end2074:
	.size	_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv, .Lfunc_end2074-_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev,"axG",@progbits,_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev,comdat
	.weak	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev # -- Begin function _ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev
	.p2align	5
	.type	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev,@function
_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev: # @_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2075:
	.size	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev, .Lfunc_end2075-_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev
                                        # -- End function
	.section	.text._ZNK2kc18impl_STRING_String8prod_selEv,"axG",@progbits,_ZNK2kc18impl_STRING_String8prod_selEv,comdat
	.weak	_ZNK2kc18impl_STRING_String8prod_selEv # -- Begin function _ZNK2kc18impl_STRING_String8prod_selEv
	.p2align	5
	.type	_ZNK2kc18impl_STRING_String8prod_selEv,@function
_ZNK2kc18impl_STRING_String8prod_selEv: # @_ZNK2kc18impl_STRING_String8prod_selEv
# %bb.0:
	ori	$a0, $zero, 9
	ret
.Lfunc_end2076:
	.size	_ZNK2kc18impl_STRING_String8prod_selEv, .Lfunc_end2076-_ZNK2kc18impl_STRING_String8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc18impl_STRING_StringD0Ev,"axG",@progbits,_ZN2kc18impl_STRING_StringD0Ev,comdat
	.weak	_ZN2kc18impl_STRING_StringD0Ev  # -- Begin function _ZN2kc18impl_STRING_StringD0Ev
	.p2align	5
	.type	_ZN2kc18impl_STRING_StringD0Ev,@function
_ZN2kc18impl_STRING_StringD0Ev:         # @_ZN2kc18impl_STRING_StringD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2077:
	.size	_ZN2kc18impl_STRING_StringD0Ev, .Lfunc_end2077-_ZN2kc18impl_STRING_StringD0Ev
                                        # -- End function
	.section	.text._ZNK2kc12impl_INT_Int8prod_selEv,"axG",@progbits,_ZNK2kc12impl_INT_Int8prod_selEv,comdat
	.weak	_ZNK2kc12impl_INT_Int8prod_selEv # -- Begin function _ZNK2kc12impl_INT_Int8prod_selEv
	.p2align	5
	.type	_ZNK2kc12impl_INT_Int8prod_selEv,@function
_ZNK2kc12impl_INT_Int8prod_selEv:       # @_ZNK2kc12impl_INT_Int8prod_selEv
# %bb.0:
	ori	$a0, $zero, 8
	ret
.Lfunc_end2078:
	.size	_ZNK2kc12impl_INT_Int8prod_selEv, .Lfunc_end2078-_ZNK2kc12impl_INT_Int8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc12impl_INT_IntD0Ev,"axG",@progbits,_ZN2kc12impl_INT_IntD0Ev,comdat
	.weak	_ZN2kc12impl_INT_IntD0Ev        # -- Begin function _ZN2kc12impl_INT_IntD0Ev
	.p2align	5
	.type	_ZN2kc12impl_INT_IntD0Ev,@function
_ZN2kc12impl_INT_IntD0Ev:               # @_ZN2kc12impl_INT_IntD0Ev
# %bb.0:
	ori	$a1, $zero, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2079:
	.size	_ZN2kc12impl_INT_IntD0Ev, .Lfunc_end2079-_ZN2kc12impl_INT_IntD0Ev
                                        # -- End function
	.section	.text._ZNK2kc10impl_ID_Id8prod_selEv,"axG",@progbits,_ZNK2kc10impl_ID_Id8prod_selEv,comdat
	.weak	_ZNK2kc10impl_ID_Id8prod_selEv  # -- Begin function _ZNK2kc10impl_ID_Id8prod_selEv
	.p2align	5
	.type	_ZNK2kc10impl_ID_Id8prod_selEv,@function
_ZNK2kc10impl_ID_Id8prod_selEv:         # @_ZNK2kc10impl_ID_Id8prod_selEv
# %bb.0:
	ori	$a0, $zero, 7
	ret
.Lfunc_end2080:
	.size	_ZNK2kc10impl_ID_Id8prod_selEv, .Lfunc_end2080-_ZNK2kc10impl_ID_Id8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc10impl_ID_IdD0Ev,"axG",@progbits,_ZN2kc10impl_ID_IdD0Ev,comdat
	.weak	_ZN2kc10impl_ID_IdD0Ev          # -- Begin function _ZN2kc10impl_ID_IdD0Ev
	.p2align	5
	.type	_ZN2kc10impl_ID_IdD0Ev,@function
_ZN2kc10impl_ID_IdD0Ev:                 # @_ZN2kc10impl_ID_IdD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2081:
	.size	_ZN2kc10impl_ID_IdD0Ev, .Lfunc_end2081-_ZN2kc10impl_ID_IdD0Ev
                                        # -- End function
	.section	.text._ZNK2kc15impl_uniqID_Str8prod_selEv,"axG",@progbits,_ZNK2kc15impl_uniqID_Str8prod_selEv,comdat
	.weak	_ZNK2kc15impl_uniqID_Str8prod_selEv # -- Begin function _ZNK2kc15impl_uniqID_Str8prod_selEv
	.p2align	5
	.type	_ZNK2kc15impl_uniqID_Str8prod_selEv,@function
_ZNK2kc15impl_uniqID_Str8prod_selEv:    # @_ZNK2kc15impl_uniqID_Str8prod_selEv
# %bb.0:
	ori	$a0, $zero, 6
	ret
.Lfunc_end2082:
	.size	_ZNK2kc15impl_uniqID_Str8prod_selEv, .Lfunc_end2082-_ZNK2kc15impl_uniqID_Str8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylumD2Ev,"axG",@progbits,_ZN2kc20impl_abstract_phylumD2Ev,comdat
	.weak	_ZN2kc20impl_abstract_phylumD2Ev # -- Begin function _ZN2kc20impl_abstract_phylumD2Ev
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylumD2Ev,@function
_ZN2kc20impl_abstract_phylumD2Ev:       # @_ZN2kc20impl_abstract_phylumD2Ev
# %bb.0:
	ret
.Lfunc_end2083:
	.size	_ZN2kc20impl_abstract_phylumD2Ev, .Lfunc_end2083-_ZN2kc20impl_abstract_phylumD2Ev
                                        # -- End function
	.section	.text._ZN2kc15impl_uniqID_StrD0Ev,"axG",@progbits,_ZN2kc15impl_uniqID_StrD0Ev,comdat
	.weak	_ZN2kc15impl_uniqID_StrD0Ev     # -- Begin function _ZN2kc15impl_uniqID_StrD0Ev
	.p2align	5
	.type	_ZN2kc15impl_uniqID_StrD0Ev,@function
_ZN2kc15impl_uniqID_StrD0Ev:            # @_ZN2kc15impl_uniqID_StrD0Ev
# %bb.0:
	ori	$a1, $zero, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end2084:
	.size	_ZN2kc15impl_uniqID_StrD0Ev, .Lfunc_end2084-_ZN2kc15impl_uniqID_StrD0Ev
                                        # -- End function
	.section	.text._ZN2kc15hashtable_levelD2Ev,"axG",@progbits,_ZN2kc15hashtable_levelD2Ev,comdat
	.weak	_ZN2kc15hashtable_levelD2Ev     # -- Begin function _ZN2kc15hashtable_levelD2Ev
	.p2align	5
	.type	_ZN2kc15hashtable_levelD2Ev,@function
_ZN2kc15hashtable_levelD2Ev:            # @_ZN2kc15hashtable_levelD2Ev
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	ld.bu	$a1, $a0, 0
.Ltmp3:
	pcaddu18i	$ra, %call36(_ZN2kc15hashtable_level5clearEb)
	jirl	$ra, $ra, 0
.Ltmp4:
# %bb.1:
	ld.d	$a1, $fp, 256
	addi.d	$a0, $fp, 240
.Ltmp6:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp7:
# %bb.2:                                # %_ZNSt3setIPN2kc20impl_abstract_phylumENS0_11phylum_lessIS2_EESaIS2_EED2Ev.exit
	ld.d	$a1, $fp, 208
	addi.d	$a0, $fp, 192
.Ltmp9:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp10:
# %bb.3:                                # %_ZNSt3setIPN2kc21impl_voidptr__VoidPtrENS0_11phylum_lessIS2_EESaIS2_EED2Ev.exit
	ld.d	$a1, $fp, 160
	addi.d	$a0, $fp, 144
.Ltmp12:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp13:
# %bb.4:                                # %_ZNSt3setIPN2kc15impl_real__RealENS0_11phylum_lessIS2_EESaIS2_EED2Ev.exit
	ld.d	$a1, $fp, 112
	addi.d	$a0, $fp, 96
.Ltmp15:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp16:
# %bb.5:                                # %_ZNSt3setIPN2kc17impl_integer__IntENS0_11phylum_lessIS2_EESaIS2_EED2Ev.exit
	ld.d	$a1, $fp, 64
	addi.d	$a0, $fp, 48
.Ltmp18:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp19:
# %bb.6:                                # %_ZNSt3setIPN2kc27impl_nocasestring_NoCaseStrENS0_11phylum_lessIS2_EESaIS2_EED2Ev.exit
	ld.d	$a0, $fp, 40
	beqz	$a0, .LBB2085_16
# %bb.7:                                # %.preheader.i.i.i
	ld.d	$a1, $fp, 24
	ld.d	$a0, $fp, 16
	beq	$a1, $a0, .LBB2085_14
# %bb.8:                                # %.lr.ph12.i.i.i.preheader
	move	$s0, $zero
	b	.LBB2085_10
	.p2align	4, , 16
.LBB2085_9:                             # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB2085_10 Depth=1
	addi.d	$s0, $s0, 1
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	stx.d	$zero, $a0, $s1
	bgeu	$s0, $a2, .LBB2085_14
.LBB2085_10:                            # %.lr.ph12.i.i.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2085_12 Depth 2
	slli.d	$s1, $s0, 3
	ldx.d	$a3, $a0, $s1
	beqz	$a3, .LBB2085_9
# %bb.11:                               # %.lr.ph.i.i.i.preheader
                                        #   in Loop: Header=BB2085_10 Depth=1
	move	$a0, $a3
	.p2align	4, , 16
.LBB2085_12:                            # %.lr.ph.i.i.i
                                        #   Parent Loop BB2085_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s2, $a0, 0
	ori	$a1, $zero, 24
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	bnez	$s2, .LBB2085_12
# %bb.13:                               # %._crit_edge.loopexit.i.i.i
                                        #   in Loop: Header=BB2085_10 Depth=1
	ld.d	$a0, $fp, 16
	ld.d	$a1, $fp, 24
	b	.LBB2085_9
.LBB2085_14:                            # %._crit_edge13.i.i.i
	st.d	$zero, $fp, 40
	beqz	$a0, .LBB2085_17
.LBB2085_15:
	ld.d	$a1, $fp, 32
	sub.d	$a1, $a1, $a0
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB2085_16:                            # %._ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE5clearEv.exit_crit_edge.i.i
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB2085_15
.LBB2085_17:                            # %_ZN9__gnu_cxx8hash_setIN2kc8hashitemENS1_13hash_hashitemENS1_11eq_hashitemESaIS2_EED2Ev.exit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB2085_18:
.Ltmp20:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB2085_19:
.Ltmp17:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB2085_20:
.Ltmp14:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB2085_21:
.Ltmp11:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB2085_22:
.Ltmp8:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB2085_23:
.Ltmp5:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end2085:
	.size	_ZN2kc15hashtable_levelD2Ev, .Lfunc_end2085-_ZN2kc15hashtable_levelD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN2kc15hashtable_levelD2Ev,"aG",@progbits,_ZN2kc15hashtable_levelD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table2085:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Ltmp3-.Lfunc_begin1           # >> Call Site 1 <<
	.uleb128 .Ltmp4-.Ltmp3                  #   Call between .Ltmp3 and .Ltmp4
	.uleb128 .Ltmp5-.Lfunc_begin1           #     jumps to .Ltmp5
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp6-.Lfunc_begin1           # >> Call Site 2 <<
	.uleb128 .Ltmp7-.Ltmp6                  #   Call between .Ltmp6 and .Ltmp7
	.uleb128 .Ltmp8-.Lfunc_begin1           #     jumps to .Ltmp8
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp9-.Lfunc_begin1           # >> Call Site 3 <<
	.uleb128 .Ltmp10-.Ltmp9                 #   Call between .Ltmp9 and .Ltmp10
	.uleb128 .Ltmp11-.Lfunc_begin1          #     jumps to .Ltmp11
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp12-.Lfunc_begin1          # >> Call Site 4 <<
	.uleb128 .Ltmp13-.Ltmp12                #   Call between .Ltmp12 and .Ltmp13
	.uleb128 .Ltmp14-.Lfunc_begin1          #     jumps to .Ltmp14
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp15-.Lfunc_begin1          # >> Call Site 5 <<
	.uleb128 .Ltmp16-.Ltmp15                #   Call between .Ltmp15 and .Ltmp16
	.uleb128 .Ltmp17-.Lfunc_begin1          #     jumps to .Ltmp17
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp18-.Lfunc_begin1          # >> Call Site 6 <<
	.uleb128 .Ltmp19-.Ltmp18                #   Call between .Ltmp18 and .Ltmp19
	.uleb128 .Ltmp20-.Lfunc_begin1          #     jumps to .Ltmp20
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp19-.Lfunc_begin1          # >> Call Site 7 <<
	.uleb128 .Lfunc_end2085-.Ltmp19         #   Call between .Ltmp19 and .Lfunc_end2085
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm,"axG",@progbits,_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm,comdat
	.weak	_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm # -- Begin function _ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm
	.p2align	5
	.type	_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm,@function
_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm: # @_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ori	$a2, $zero, 29
	pcalau12i	$a0, %pc_hi20(_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE)
	addi.d	$a0, $a0, %pc_lo12(_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE)
	.p2align	4, , 16
.LBB2086_1:                             # %_ZSt9__advanceIPKmlEvRT_T0_St26random_access_iterator_tag.exit.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a3, $a2, 1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a0, $a4
	alsl.d	$a5, $a3, $a0, 3
	sltu	$a4, $a4, $a1
	addi.d	$a5, $a5, 8
	nor	$a6, $a3, $zero
	add.d	$a2, $a2, $a6
	maskeqz	$a2, $a2, $a4
	masknez	$a3, $a3, $a4
	or	$a2, $a2, $a3
	maskeqz	$a3, $a5, $a4
	masknez	$a0, $a0, $a4
	or	$a0, $a3, $a0
	bgtz	$a2, .LBB2086_1
# %bb.2:                                # %_ZNK9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE12_M_next_sizeEm.exit
	pcalau12i	$a1, %pc_hi20(_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE)
	addi.d	$a1, $a1, %pc_lo12(_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE)
	addi.d	$a2, $a1, 232
	xor	$a2, $a0, $a2
	sltui	$a2, $a2, 1
	masknez	$a0, $a0, $a2
	addi.d	$a1, $a1, 224
	maskeqz	$a1, $a1, $a2
	or	$a0, $a1, $a0
	ld.d	$s0, $a0, 0
	srli.d	$a0, $s0, 60
	bnez	$a0, .LBB2086_10
# %bb.3:
	ld.d	$a0, $fp, 24
	ld.d	$s2, $fp, 8
	ld.d	$a1, $fp, 16
	sub.d	$s3, $a0, $s2
	srai.d	$a0, $s3, 3
	addi.d	$s1, $fp, 8
	bgeu	$a0, $s0, .LBB2086_9
# %bb.4:                                # %_ZNSt12_Vector_baseIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE11_M_allocateEm.exit.i
	sub.d	$s4, $a1, $s2
	slli.d	$a0, $s0, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 1
	move	$s5, $a0
	blt	$s4, $a1, .LBB2086_6
# %bb.5:
	move	$a0, $s5
	move	$a1, $s2
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB2086_6:                             # %_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.i
	beqz	$s2, .LBB2086_8
# %bb.7:
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB2086_8:                             # %_ZNSt12_Vector_baseIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE13_M_deallocateEPS5_m.exit.i
	st.d	$s5, $fp, 8
	add.d	$a1, $s5, $s4
	st.d	$a1, $fp, 16
	alsl.d	$a0, $s0, $s5, 3
	st.d	$a0, $fp, 24
.LBB2086_9:                             # %_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE7reserveEm.exit
	st.d	$zero, $sp, 8
	addi.d	$a3, $sp, 8
	move	$a0, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_)
	jirl	$ra, $ra, 0
	st.d	$zero, $fp, 32
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB2086_10:
	pcalau12i	$a0, %pc_hi20(.L.str.514)
	addi.d	$a0, $a0, %pc_lo12(.L.str.514)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end2086:
	.size	_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm, .Lfunc_end2086-_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm
	.cfi_endproc
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	5
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZSt9terminatev)
	jirl	$ra, $ra, 0
.Lfunc_end2087:
	.size	__clang_call_terminate, .Lfunc_end2087-__clang_call_terminate
                                        # -- End function
	.section	.text._ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_,"axG",@progbits,_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_,comdat
	.weak	_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_ # -- Begin function _ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_
	.p2align	5
	.type	_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_,@function
_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_: # @_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	st.d	$s7, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	beqz	$a2, .LBB2088_43
# %bb.1:
	move	$s2, $a2
	move	$fp, $a1
	move	$s1, $a0
	ld.d	$s6, $a0, 16
	ld.d	$s0, $a0, 8
	sub.d	$a0, $s6, $s0
	srai.d	$a0, $a0, 3
	bgeu	$a0, $a2, .LBB2088_5
# %bb.2:
	ld.d	$s3, $s1, 0
	sub.d	$a0, $s0, $s3
	srai.d	$a1, $a0, 3
	addi.w	$a0, $zero, -1
	lu52i.d	$a0, $a0, 255
	sub.d	$a2, $a0, $a1
	bltu	$a2, $s2, .LBB2088_54
# %bb.3:                                # %_ZNKSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE12_M_check_lenEmPKc.exit
	sltu	$a2, $s2, $a1
	masknez	$a4, $s2, $a2
	maskeqz	$a2, $a1, $a2
	or	$a2, $a2, $a4
	add.d	$a1, $a2, $a1
	sltu	$a2, $a1, $a2
	sltu	$a4, $a1, $a0
	maskeqz	$a1, $a1, $a4
	masknez	$a4, $a0, $a4
	or	$a1, $a1, $a4
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$s7, $a0, $a1
	sub.d	$s5, $fp, $s3
	beqz	$s7, .LBB2088_30
# %bb.4:
	slli.d	$a0, $s7, 3
	move	$s4, $a3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$a3, $s4
	move	$s4, $a0
	b	.LBB2088_31
.LBB2088_5:
	ld.d	$s4, $a3, 0
	sub.d	$s3, $s0, $fp
	srai.d	$a1, $s3, 3
	bgeu	$s2, $a1, .LBB2088_16
# %bb.6:
	slli.d	$a2, $s2, 3
	ori	$a0, $zero, 2
	sub.d	$s3, $s0, $a2
	blt	$s2, $a0, .LBB2088_48
# %bb.7:
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 8
.LBB2088_8:                             # %_ZSt22__uninitialized_move_aIPPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEES6_SaIS5_EET0_T_S9_S8_RT1_.exit
	alsl.d	$a1, $s2, $a0, 3
	sub.d	$a2, $s3, $fp
	srai.d	$a0, $a2, 3
	ori	$a3, $zero, 2
	st.d	$a1, $s1, 8
	blt	$a0, $a3, .LBB2088_50
# %bb.9:
	slli.d	$a0, $a0, 3
	sub.d	$a0, $s0, $a0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB2088_10:
	addi.d	$a0, $s2, -1
	bstrpick.d	$a1, $a0, 60, 0
	ori	$a2, $zero, 3
	move	$a0, $fp
	bltu	$a1, $a2, .LBB2088_14
# %bb.11:                               # %vector.ph116
	addi.d	$a1, $a1, 1
	bstrpick.d	$a0, $a1, 61, 2
	slli.d	$a2, $a0, 2
	slli.d	$a0, $a0, 5
	add.d	$a0, $fp, $a0
	vreplgr2vr.d	$vr0, $s4
	addi.d	$a3, $fp, 16
	move	$a4, $a2
	.p2align	4, , 16
.LBB2088_12:                            # %vector.body121
                                        # =>This Inner Loop Header: Depth=1
	vst	$vr0, $a3, -16
	vst	$vr0, $a3, 0
	addi.d	$a4, $a4, -4
	addi.d	$a3, $a3, 32
	bnez	$a4, .LBB2088_12
# %bb.13:                               # %middle.block126
	beq	$a1, $a2, .LBB2088_43
.LBB2088_14:                            # %.lr.ph.i.i.i.preheader
	alsl.d	$a1, $s2, $fp, 3
	.p2align	4, , 16
.LBB2088_15:                            # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$s4, $a0, 0
	addi.d	$a0, $a0, 8
	bne	$a0, $a1, .LBB2088_15
	b	.LBB2088_43
.LBB2088_16:
	move	$a0, $s0
	beq	$s2, $a1, .LBB2088_22
# %bb.17:
	sub.d	$a0, $s2, $a1
	slli.d	$a1, $s2, 3
	sub.d	$a1, $a1, $s3
	addi.d	$a2, $a1, -8
	ori	$a3, $zero, 24
	alsl.d	$a0, $a0, $s0, 3
	move	$a1, $s0
	bltu	$a2, $a3, .LBB2088_21
# %bb.18:                               # %vector.ph
	srli.d	$a1, $a2, 3
	addi.d	$a2, $a1, 1
	bstrpick.d	$a1, $a2, 61, 2
	slli.d	$a3, $a1, 2
	slli.d	$a1, $a1, 5
	add.d	$a1, $s0, $a1
	vreplgr2vr.d	$vr0, $s4
	addi.d	$a4, $s0, 16
	move	$a5, $a3
	.p2align	4, , 16
.LBB2088_19:                            # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vst	$vr0, $a4, -16
	vst	$vr0, $a4, 0
	addi.d	$a5, $a5, -4
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB2088_19
# %bb.20:                               # %middle.block
	beq	$a2, $a3, .LBB2088_22
	.p2align	4, , 16
.LBB2088_21:                            # %.lr.ph.i.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	st.d	$s4, $a1, 0
	addi.d	$a1, $a1, 8
	bne	$a1, $a0, .LBB2088_21
.LBB2088_22:                            # %_ZSt24__uninitialized_fill_n_aIPPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEEmS5_S5_ET_S7_T0_RKT1_RSaIT2_E.exit
	ori	$a1, $zero, 9
	st.d	$a0, $s1, 8
	blt	$s3, $a1, .LBB2088_52
# %bb.23:
	move	$a1, $fp
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 8
.LBB2088_24:                            # %_ZSt22__uninitialized_move_aIPPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEES6_SaIS5_EET0_T_S9_S8_RT1_.exit69
	add.d	$a0, $a0, $s3
	st.d	$a0, $s1, 8
	beq	$s0, $fp, .LBB2088_43
# %bb.25:                               # %.lr.ph.i.i.i71.preheader
	addi.d	$a1, $s3, -8
	ori	$a2, $zero, 24
	move	$a0, $fp
	bltu	$a1, $a2, .LBB2088_29
# %bb.26:                               # %vector.ph101
	srli.d	$a0, $a1, 3
	addi.d	$a1, $a0, 1
	bstrpick.d	$a0, $a1, 61, 2
	slli.d	$a2, $a0, 2
	slli.d	$a0, $a0, 5
	add.d	$a0, $fp, $a0
	vreplgr2vr.d	$vr0, $s4
	addi.d	$a3, $fp, 16
	move	$a4, $a2
	.p2align	4, , 16
.LBB2088_27:                            # %vector.body106
                                        # =>This Inner Loop Header: Depth=1
	vst	$vr0, $a3, -16
	vst	$vr0, $a3, 0
	addi.d	$a4, $a4, -4
	addi.d	$a3, $a3, 32
	bnez	$a4, .LBB2088_27
# %bb.28:                               # %middle.block111
	beq	$a1, $a2, .LBB2088_43
	.p2align	4, , 16
.LBB2088_29:                            # %.lr.ph.i.i.i71
                                        # =>This Inner Loop Header: Depth=1
	st.d	$s4, $a0, 0
	addi.d	$a0, $a0, 8
	bne	$a0, $s0, .LBB2088_29
	b	.LBB2088_43
.LBB2088_30:
	move	$s4, $zero
.LBB2088_31:
	add.d	$a0, $s4, $s5
	ld.d	$a1, $a3, 0
	addi.d	$a2, $s2, -1
	bstrpick.d	$a2, $a2, 60, 0
	ori	$a3, $zero, 3
	alsl.d	$s2, $s2, $a0, 3
	bltu	$a2, $a3, .LBB2088_35
# %bb.32:                               # %vector.ph131
	addi.d	$a2, $a2, 1
	bstrpick.d	$a4, $a2, 61, 2
	slli.d	$a3, $a4, 2
	slli.d	$a4, $a4, 5
	add.d	$a0, $a0, $a4
	vreplgr2vr.d	$vr0, $a1
	add.d	$a4, $s5, $s4
	addi.d	$a4, $a4, 16
	move	$a5, $a3
	.p2align	4, , 16
.LBB2088_33:                            # %vector.body136
                                        # =>This Inner Loop Header: Depth=1
	vst	$vr0, $a4, -16
	vst	$vr0, $a4, 0
	addi.d	$a5, $a5, -4
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB2088_33
# %bb.34:                               # %middle.block141
	beq	$a2, $a3, .LBB2088_36
	.p2align	4, , 16
.LBB2088_35:                            # %.lr.ph.i.i.i.i.i.i.i75
                                        # =>This Inner Loop Header: Depth=1
	st.d	$a1, $a0, 0
	addi.d	$a0, $a0, 8
	bne	$a0, $s2, .LBB2088_35
.LBB2088_36:                            # %_ZSt24__uninitialized_fill_n_aIPPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEEmS5_S5_ET_S7_T0_RKT1_RSaIT2_E.exit79
	ori	$a0, $zero, 9
	blt	$s5, $a0, .LBB2088_44
# %bb.37:
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB2088_38:                            # %_ZSt34__uninitialized_move_if_noexcept_aIPPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEES6_SaIS5_EET0_T_S9_S8_RT1_.exit
	sub.d	$s0, $s0, $fp
	ori	$a0, $zero, 9
	blt	$s0, $a0, .LBB2088_46
# %bb.39:
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB2088_40:
	add.d	$fp, $s2, $s0
	beqz	$s3, .LBB2088_42
# %bb.41:
	sub.d	$a1, $s6, $s3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB2088_42:                            # %_ZNSt12_Vector_baseIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE13_M_deallocateEPS5_m.exit
	st.d	$s4, $s1, 0
	st.d	$fp, $s1, 8
	alsl.d	$a0, $s7, $s4, 3
	st.d	$a0, $s1, 16
.LBB2088_43:                            # %_ZSt4fillIPPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEES5_EvT_S7_RKT0_.exit
	ld.d	$s7, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB2088_44:
	ori	$a0, $zero, 8
	bne	$s5, $a0, .LBB2088_38
# %bb.45:
	ld.d	$a0, $s3, 0
	st.d	$a0, $s4, 0
	b	.LBB2088_38
.LBB2088_46:
	ori	$a0, $zero, 8
	bne	$s0, $a0, .LBB2088_40
# %bb.47:
	ld.d	$a0, $fp, 0
	st.d	$a0, $s2, 0
	b	.LBB2088_40
.LBB2088_48:
	ori	$a1, $zero, 1
	move	$a0, $s0
	bne	$s2, $a1, .LBB2088_8
# %bb.49:
	ld.d	$a0, $s3, 0
	st.d	$a0, $s0, 0
	move	$a0, $s0
	b	.LBB2088_8
.LBB2088_50:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB2088_10
# %bb.51:
	ld.d	$a0, $fp, 0
	st.d	$a0, $s0, -8
	b	.LBB2088_10
.LBB2088_52:
	ori	$a1, $zero, 8
	bne	$s3, $a1, .LBB2088_24
# %bb.53:
	ld.d	$a1, $fp, 0
	st.d	$a1, $a0, 0
	b	.LBB2088_24
.LBB2088_54:
	pcalau12i	$a0, %pc_hi20(.L.str.515)
	addi.d	$a0, $a0, %pc_lo12(.L.str.515)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end2088:
	.size	_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_, .Lfunc_end2088-_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE14_M_fill_insertENS0_17__normal_iteratorIPS5_S7_EEmRKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc15hashtable_level5clearEb,"axG",@progbits,_ZN2kc15hashtable_level5clearEb,comdat
	.weak	_ZN2kc15hashtable_level5clearEb # -- Begin function _ZN2kc15hashtable_level5clearEb
	.p2align	5
	.type	_ZN2kc15hashtable_level5clearEb,@function
_ZN2kc15hashtable_level5clearEb:        # @_ZN2kc15hashtable_level5clearEb
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a0
	beqz	$a1, .LBB2089_2
# %bb.1:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc15hashtable_level13clear_entriesEv)
	jirl	$ra, $ra, 0
.LBB2089_2:
	ld.d	$a0, $fp, 40
	beqz	$a0, .LBB2089_10
# %bb.3:                                # %.preheader.i.i
	ld.d	$a1, $fp, 24
	ld.d	$a2, $fp, 16
	beq	$a1, $a2, .LBB2089_9
# %bb.4:                                # %.lr.ph12.i.i.preheader
	move	$s0, $zero
	b	.LBB2089_6
	.p2align	4, , 16
.LBB2089_5:                             # %._crit_edge.i.i
                                        #   in Loop: Header=BB2089_6 Depth=1
	addi.d	$s0, $s0, 1
	sub.d	$a0, $a1, $a2
	srai.d	$a0, $a0, 3
	stx.d	$zero, $a2, $s1
	bgeu	$s0, $a0, .LBB2089_9
.LBB2089_6:                             # %.lr.ph12.i.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2089_7 Depth 2
	slli.d	$s1, $s0, 3
	ldx.d	$a0, $a2, $s1
	beqz	$a0, .LBB2089_5
	.p2align	4, , 16
.LBB2089_7:                             # %.lr.ph.i.i
                                        #   Parent Loop BB2089_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s2, $a0, 0
	ori	$a1, $zero, 24
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	bnez	$s2, .LBB2089_7
# %bb.8:                                # %._crit_edge.loopexit.i.i
                                        #   in Loop: Header=BB2089_6 Depth=1
	ld.d	$a2, $fp, 16
	ld.d	$a1, $fp, 24
	b	.LBB2089_5
.LBB2089_9:                             # %._crit_edge13.i.i
	st.d	$zero, $fp, 40
.LBB2089_10:                            # %_ZN9__gnu_cxx8hash_setIN2kc8hashitemENS1_13hash_hashitemENS1_11eq_hashitemESaIS2_EE5clearEv.exit
	ld.d	$a1, $fp, 64
	addi.d	$a0, $fp, 48
.Ltmp21:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp22:
# %bb.11:                               # %_ZNSt3setIPN2kc27impl_nocasestring_NoCaseStrENS0_11phylum_lessIS2_EESaIS2_EE5clearEv.exit
	addi.d	$a0, $fp, 56
	st.d	$zero, $fp, 64
	st.d	$a0, $fp, 72
	ld.d	$a1, $fp, 112
	st.d	$a0, $fp, 80
	st.d	$zero, $fp, 88
	addi.d	$a0, $fp, 96
.Ltmp24:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp25:
# %bb.12:                               # %_ZNSt3setIPN2kc17impl_integer__IntENS0_11phylum_lessIS2_EESaIS2_EE5clearEv.exit
	addi.d	$a0, $fp, 104
	st.d	$zero, $fp, 112
	st.d	$a0, $fp, 120
	ld.d	$a1, $fp, 160
	st.d	$a0, $fp, 128
	st.d	$zero, $fp, 136
	addi.d	$a0, $fp, 144
.Ltmp27:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp28:
# %bb.13:                               # %_ZNSt3setIPN2kc15impl_real__RealENS0_11phylum_lessIS2_EESaIS2_EE5clearEv.exit
	addi.d	$a0, $fp, 152
	st.d	$zero, $fp, 160
	st.d	$a0, $fp, 168
	ld.d	$a1, $fp, 208
	st.d	$a0, $fp, 176
	st.d	$zero, $fp, 184
	addi.d	$a0, $fp, 192
.Ltmp30:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp31:
# %bb.14:                               # %_ZNSt3setIPN2kc21impl_voidptr__VoidPtrENS0_11phylum_lessIS2_EESaIS2_EE5clearEv.exit
	addi.d	$a0, $fp, 200
	st.d	$zero, $fp, 208
	st.d	$a0, $fp, 216
	ld.d	$a1, $fp, 256
	st.d	$a0, $fp, 224
	st.d	$zero, $fp, 232
	addi.d	$a0, $fp, 240
.Ltmp33:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
.Ltmp34:
# %bb.15:                               # %_ZNSt3setIPN2kc20impl_abstract_phylumENS0_11phylum_lessIS2_EESaIS2_EE5clearEv.exit
	addi.d	$a0, $fp, 248
	st.d	$zero, $fp, 256
	st.d	$a0, $fp, 264
	st.d	$a0, $fp, 272
	st.d	$zero, $fp, 280
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB2089_16:
.Ltmp35:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB2089_17:
.Ltmp32:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB2089_18:
.Ltmp29:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB2089_19:
.Ltmp26:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB2089_20:
.Ltmp23:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end2089:
	.size	_ZN2kc15hashtable_level5clearEb, .Lfunc_end2089-_ZN2kc15hashtable_level5clearEb
	.cfi_endproc
	.section	.gcc_except_table._ZN2kc15hashtable_level5clearEb,"aG",@progbits,_ZN2kc15hashtable_level5clearEb,comdat
	.p2align	2, 0x0
GCC_except_table2089:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin2-.Lfunc_begin2    # >> Call Site 1 <<
	.uleb128 .Ltmp21-.Lfunc_begin2          #   Call between .Lfunc_begin2 and .Ltmp21
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp21-.Lfunc_begin2          # >> Call Site 2 <<
	.uleb128 .Ltmp22-.Ltmp21                #   Call between .Ltmp21 and .Ltmp22
	.uleb128 .Ltmp23-.Lfunc_begin2          #     jumps to .Ltmp23
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp24-.Lfunc_begin2          # >> Call Site 3 <<
	.uleb128 .Ltmp25-.Ltmp24                #   Call between .Ltmp24 and .Ltmp25
	.uleb128 .Ltmp26-.Lfunc_begin2          #     jumps to .Ltmp26
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp27-.Lfunc_begin2          # >> Call Site 4 <<
	.uleb128 .Ltmp28-.Ltmp27                #   Call between .Ltmp27 and .Ltmp28
	.uleb128 .Ltmp29-.Lfunc_begin2          #     jumps to .Ltmp29
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp30-.Lfunc_begin2          # >> Call Site 5 <<
	.uleb128 .Ltmp31-.Ltmp30                #   Call between .Ltmp30 and .Ltmp31
	.uleb128 .Ltmp32-.Lfunc_begin2          #     jumps to .Ltmp32
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp33-.Lfunc_begin2          # >> Call Site 6 <<
	.uleb128 .Ltmp34-.Ltmp33                #   Call between .Ltmp33 and .Ltmp34
	.uleb128 .Ltmp35-.Lfunc_begin2          #     jumps to .Ltmp35
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp34-.Lfunc_begin2          # >> Call Site 7 <<
	.uleb128 .Lfunc_end2089-.Ltmp34         #   Call between .Ltmp34 and .Lfunc_end2089
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end2:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN2kc15hashtable_level13clear_entriesEv,"axG",@progbits,_ZN2kc15hashtable_level13clear_entriesEv,comdat
	.weak	_ZN2kc15hashtable_level13clear_entriesEv # -- Begin function _ZN2kc15hashtable_level13clear_entriesEv
	.p2align	5
	.type	_ZN2kc15hashtable_level13clear_entriesEv,@function
_ZN2kc15hashtable_level13clear_entriesEv: # @_ZN2kc15hashtable_level13clear_entriesEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 16
	beq	$a1, $a0, .LBB2090_4
# %bb.1:                                # %.lr.ph.preheader.i.i
	sub.d	$a1, $a1, $a0
	srai.d	$a1, $a1, 3
	.p2align	4, , 16
.LBB2090_2:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $a0, 0
	bnez	$a2, .LBB2090_25
# %bb.3:                                #   in Loop: Header=BB2090_2 Depth=1
	addi.d	$a1, $a1, -1
	addi.d	$a0, $a0, 8
	bnez	$a1, .LBB2090_2
.LBB2090_4:                             # %_ZSt8for_eachIN9__gnu_cxx25_Hashtable_const_iteratorIN2kc8hashitemES3_NS2_13hash_hashitemESt9_IdentityIS3_ENS2_11eq_hashitemESaIS3_EEEPFvS3_EET0_T_SD_SC_.exit
	ld.d	$a0, $fp, 72
	addi.d	$s0, $fp, 56
	bne	$a0, $s0, .LBB2090_11
.LBB2090_5:                             # %_ZSt8for_eachISt23_Rb_tree_const_iteratorIPN2kc27impl_nocasestring_NoCaseStrEEPFvPKNS1_20impl_abstract_phylumEEET0_T_SB_SA_.exit
	ld.d	$a0, $fp, 120
	addi.d	$s0, $fp, 104
	bne	$a0, $s0, .LBB2090_14
.LBB2090_6:                             # %_ZSt8for_eachISt23_Rb_tree_const_iteratorIPN2kc17impl_integer__IntEEPFvPKNS1_20impl_abstract_phylumEEET0_T_SB_SA_.exit
	ld.d	$a0, $fp, 168
	addi.d	$s0, $fp, 152
	bne	$a0, $s0, .LBB2090_17
.LBB2090_7:                             # %_ZSt8for_eachISt23_Rb_tree_const_iteratorIPN2kc15impl_real__RealEEPFvPKNS1_20impl_abstract_phylumEEET0_T_SB_SA_.exit
	ld.d	$a0, $fp, 216
	addi.d	$s0, $fp, 200
	bne	$a0, $s0, .LBB2090_20
.LBB2090_8:                             # %_ZSt8for_eachISt23_Rb_tree_const_iteratorIPN2kc21impl_voidptr__VoidPtrEEPFvPKNS1_20impl_abstract_phylumEEET0_T_SB_SA_.exit
	ld.d	$a0, $fp, 264
	addi.d	$fp, $fp, 248
	bne	$a0, $fp, .LBB2090_23
.LBB2090_9:                             # %_ZSt8for_eachISt23_Rb_tree_const_iteratorIPN2kc20impl_abstract_phylumEEPFvPKS2_EET0_T_SA_S9_.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
	.p2align	4, , 16
.LBB2090_10:                            # %_ZN2kc9deletefunEPKNS_20impl_abstract_phylumE.exit
                                        #   in Loop: Header=BB2090_11 Depth=1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	beq	$a0, $s0, .LBB2090_5
.LBB2090_11:                            # %.lr.ph.i24
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 32
	beqz	$a1, .LBB2090_10
# %bb.12:                               #   in Loop: Header=BB2090_11 Depth=1
	ld.d	$a2, $a1, 0
	ld.d	$a2, $a2, 64
	move	$s1, $a0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	move	$a0, $s1
	b	.LBB2090_10
	.p2align	4, , 16
.LBB2090_13:                            # %_ZN2kc9deletefunEPKNS_20impl_abstract_phylumE.exit46
                                        #   in Loop: Header=BB2090_14 Depth=1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	beq	$a0, $s0, .LBB2090_6
.LBB2090_14:                            # %.lr.ph.i28
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 32
	beqz	$a1, .LBB2090_13
# %bb.15:                               #   in Loop: Header=BB2090_14 Depth=1
	ld.d	$a2, $a1, 0
	ld.d	$a2, $a2, 64
	move	$s1, $a0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	move	$a0, $s1
	b	.LBB2090_13
	.p2align	4, , 16
.LBB2090_16:                            # %_ZN2kc9deletefunEPKNS_20impl_abstract_phylumE.exit47
                                        #   in Loop: Header=BB2090_17 Depth=1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	beq	$a0, $s0, .LBB2090_7
.LBB2090_17:                            # %.lr.ph.i33
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 32
	beqz	$a1, .LBB2090_16
# %bb.18:                               #   in Loop: Header=BB2090_17 Depth=1
	ld.d	$a2, $a1, 0
	ld.d	$a2, $a2, 64
	move	$s1, $a0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	move	$a0, $s1
	b	.LBB2090_16
	.p2align	4, , 16
.LBB2090_19:                            # %_ZN2kc9deletefunEPKNS_20impl_abstract_phylumE.exit48
                                        #   in Loop: Header=BB2090_20 Depth=1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	beq	$a0, $s0, .LBB2090_8
.LBB2090_20:                            # %.lr.ph.i38
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 32
	beqz	$a1, .LBB2090_19
# %bb.21:                               #   in Loop: Header=BB2090_20 Depth=1
	ld.d	$a2, $a1, 0
	ld.d	$a2, $a2, 64
	move	$s1, $a0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	move	$a0, $s1
	b	.LBB2090_19
	.p2align	4, , 16
.LBB2090_22:                            # %_ZN2kc9deletefunEPKNS_20impl_abstract_phylumE.exit49
                                        #   in Loop: Header=BB2090_23 Depth=1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	beq	$a0, $fp, .LBB2090_9
.LBB2090_23:                            # %.lr.ph.i43
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $a0, 32
	beqz	$a1, .LBB2090_22
# %bb.24:                               #   in Loop: Header=BB2090_23 Depth=1
	ld.d	$a2, $a1, 0
	ld.d	$a2, $a2, 64
	move	$s0, $a0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	move	$a0, $s0
	b	.LBB2090_22
	.p2align	4, , 16
.LBB2090_25:                            # %.lr.ph.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2090_29 Depth 2
	move	$s0, $a2
	ld.d	$a0, $a2, 16
	beqz	$a0, .LBB2090_27
# %bb.26:                               #   in Loop: Header=BB2090_25 Depth=1
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 64
	jirl	$ra, $a1, 0
.LBB2090_27:                            # %_ZN2kc17deletefunhashitemENS_8hashitemE.exit
                                        #   in Loop: Header=BB2090_25 Depth=1
	ld.d	$a2, $s0, 0
	bnez	$a2, .LBB2090_25
# %bb.28:                               # %.lr.ph.i.i23
                                        #   in Loop: Header=BB2090_25 Depth=1
	ld.d	$a0, $fp, 16
	ld.d	$a1, $fp, 24
	ld.d	$a2, $s0, 8
	sub.d	$a1, $a1, $a0
	srai.d	$a1, $a1, 3
	mod.du	$a3, $a2, $a1
	.p2align	4, , 16
.LBB2090_29:                            #   Parent Loop BB2090_25 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a3, $a3, 1
	bgeu	$a3, $a1, .LBB2090_4
# %bb.30:                               #   in Loop: Header=BB2090_29 Depth=2
	slli.d	$a2, $a3, 3
	ldx.d	$a2, $a0, $a2
	beqz	$a2, .LBB2090_29
	b	.LBB2090_25
.Lfunc_end2090:
	.size	_ZN2kc15hashtable_level13clear_entriesEv, .Lfunc_end2090-_ZN2kc15hashtable_level13clear_entriesEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.p2align	5
	.type	_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB2091_4
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	.p2align	4, , 16
.LBB2091_2:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	ori	$a1, $zero, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	bnez	$s1, .LBB2091_2
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB2091_4:                             # %._crit_edge
	ret
.Lfunc_end2091:
	.size	_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end2091-_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.p2align	5
	.type	_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB2092_4
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	.p2align	4, , 16
.LBB2092_2:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	ori	$a1, $zero, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	bnez	$s1, .LBB2092_2
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB2092_4:                             # %._crit_edge
	ret
.Lfunc_end2092:
	.size	_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end2092-_ZNSt8_Rb_treeIPN2kc17impl_integer__IntES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.p2align	5
	.type	_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB2093_4
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	.p2align	4, , 16
.LBB2093_2:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	ori	$a1, $zero, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	bnez	$s1, .LBB2093_2
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB2093_4:                             # %._crit_edge
	ret
.Lfunc_end2093:
	.size	_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end2093-_ZNSt8_Rb_treeIPN2kc15impl_real__RealES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.p2align	5
	.type	_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB2094_4
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	.p2align	4, , 16
.LBB2094_2:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	ori	$a1, $zero, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	bnez	$s1, .LBB2094_2
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB2094_4:                             # %._crit_edge
	ret
.Lfunc_end2094:
	.size	_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end2094-_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,"axG",@progbits,_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,comdat
	.weak	_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E # -- Begin function _ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.p2align	5
	.type	_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,@function
_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E: # @_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB2095_4
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	.p2align	4, , 16
.LBB2095_2:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	ori	$a1, $zero, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	bnez	$s1, .LBB2095_2
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB2095_4:                             # %._crit_edge
	ret
.Lfunc_end2095:
	.size	_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, .Lfunc_end2095-_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE,"axG",@progbits,_ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE,comdat
	.weak	_ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE # -- Begin function _ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE
	.p2align	5
	.type	_ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE,@function
_ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE: # @_ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	st.d	$s7, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a1
	ld.d	$a2, $a1, 8
	ld.bu	$a1, $a2, 0
	move	$s0, $a0
	addi.d	$a0, $a0, 8
	move	$s3, $zero
	beqz	$a1, .LBB2096_3
# %bb.1:                                # %.lr.ph.i.preheader
	addi.d	$a2, $a2, 1
	.p2align	4, , 16
.LBB2096_2:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ext.w.b	$a3, $a1
	ld.bu	$a1, $a2, 0
	alsl.d	$a4, $s3, $s3, 2
	add.d	$s3, $a4, $a3
	addi.d	$a2, $a2, 1
	bnez	$a1, .LBB2096_2
.LBB2096_3:                             # %_ZN2kc8hashitemC2EPNS_20impl_casestring__StrE.exit
	ld.d	$a1, $s0, 40
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 24
	ld.d	$s5, $s0, 16
	sub.d	$a0, $a0, $s5
	srai.d	$a0, $a0, 3
	mod.du	$s6, $s3, $a0
	slli.d	$a0, $s6, 3
	ldx.d	$s4, $s5, $a0
	beqz	$s4, .LBB2096_7
# %bb.4:                                # %.lr.ph.i.i.i
	ld.d	$s1, $fp, 8
	move	$s7, $s4
	.p2align	4, , 16
.LBB2096_5:                             # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s7, 16
	ld.d	$a0, $s2, 8
	move	$a1, $s1
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB2096_8
# %bb.6:                                #   in Loop: Header=BB2096_5 Depth=1
	ld.d	$s7, $s7, 0
	bnez	$s7, .LBB2096_5
.LBB2096_7:                             # %.critedge.i.i.i
	alsl.d	$s1, $s6, $s5, 3
	ori	$a0, $zero, 24
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$s3, $a0, 8
	ld.d	$a1, $s0, 40
	st.d	$fp, $a0, 16
	st.d	$s4, $a0, 0
	st.d	$a0, $s1, 0
	addi.d	$a0, $a1, 1
	st.d	$a0, $s0, 40
	move	$s2, $fp
.LBB2096_8:                             # %_ZN9__gnu_cxx8hash_setIN2kc8hashitemENS1_13hash_hashitemENS1_11eq_hashitemESaIS2_EE6insertERKS2_.exit
	move	$a0, $s2
	ld.d	$s7, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end2096:
	.size	_ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE, .Lfunc_end2096-_ZN2kc15hashtable_level12check_insertEPNS_20impl_casestring__StrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm,"axG",@progbits,_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm,comdat
	.weak	_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm # -- Begin function _ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm
	.p2align	5
	.type	_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm,@function
_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm: # @_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	ld.d	$s3, $a0, 16
	ld.d	$fp, $a0, 8
	sub.d	$a2, $s3, $fp
	srai.d	$s2, $a2, 3
	bgeu	$s2, $a1, .LBB2097_14
# %bb.1:                                # %_ZSt9__advanceIPKmlEvRT_T0_St26random_access_iterator_tag.exit.i.i.i.i.preheader
	ori	$a3, $zero, 29
	pcalau12i	$a2, %pc_hi20(_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE)
	addi.d	$a2, $a2, %pc_lo12(_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE)
	.p2align	4, , 16
.LBB2097_2:                             # %_ZSt9__advanceIPKmlEvRT_T0_St26random_access_iterator_tag.exit.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	srli.d	$a4, $a3, 1
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a2, $a5
	alsl.d	$a6, $a4, $a2, 3
	sltu	$a5, $a5, $a1
	addi.d	$a6, $a6, 8
	nor	$a7, $a4, $zero
	add.d	$a3, $a3, $a7
	maskeqz	$a3, $a3, $a5
	masknez	$a4, $a4, $a5
	or	$a3, $a3, $a4
	maskeqz	$a4, $a6, $a5
	masknez	$a2, $a2, $a5
	or	$a2, $a4, $a2
	bgtz	$a3, .LBB2097_2
# %bb.3:                                # %_ZNK9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE12_M_next_sizeEm.exit
	pcalau12i	$a1, %pc_hi20(_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE)
	addi.d	$a1, $a1, %pc_lo12(_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE)
	addi.d	$a3, $a1, 232
	xor	$a3, $a2, $a3
	sltui	$a3, $a3, 1
	masknez	$a2, $a2, $a3
	addi.d	$a1, $a1, 224
	maskeqz	$a1, $a1, $a3
	or	$a1, $a1, $a2
	ld.d	$s4, $a1, 0
	bgeu	$s2, $s4, .LBB2097_14
# %bb.4:
	move	$s5, $a0
	srli.d	$a0, $s4, 60
	bnez	$a0, .LBB2097_15
# %bb.5:                                # %_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EE17_S_check_init_lenEmRKS6_.exit.i
	slli.d	$s1, $s4, 3
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	move	$a1, $zero
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	alsl.d	$a0, $s4, $s0, 3
	beq	$s3, $fp, .LBB2097_12
# %bb.6:                                # %.lr.ph64.preheader
	move	$a2, $zero
	move	$a1, $s5
	b	.LBB2097_8
	.p2align	4, , 16
.LBB2097_7:                             # %_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EEC2EmRKS5_RKS6_.exit
                                        #   in Loop: Header=BB2097_8 Depth=1
	addi.d	$a2, $a2, 1
	beq	$a2, $s2, .LBB2097_11
.LBB2097_8:                             # %.lr.ph64
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2097_10 Depth 2
	slli.d	$a3, $a2, 3
	ldx.d	$a3, $fp, $a3
	beqz	$a3, .LBB2097_7
# %bb.9:                                # %.lr.ph.preheader
                                        #   in Loop: Header=BB2097_8 Depth=1
	alsl.d	$a4, $a2, $fp, 3
	.p2align	4, , 16
.LBB2097_10:                            # %.lr.ph
                                        #   Parent Loop BB2097_8 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a5, $a3, 8
	ld.d	$a6, $a3, 0
	mod.du	$a5, $a5, $s4
	st.d	$a6, $a4, 0
	slli.d	$a5, $a5, 3
	ldx.d	$a6, $s0, $a5
	st.d	$a6, $a3, 0
	stx.d	$a3, $s0, $a5
	ld.d	$a3, $a4, 0
	bnez	$a3, .LBB2097_10
	b	.LBB2097_7
.LBB2097_11:                            # %_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EEC2EmRKS5_RKS6_.exit._crit_edge.thread
	ld.d	$a2, $a1, 24
	st.d	$s0, $a1, 8
	st.d	$a0, $a1, 16
	st.d	$a0, $a1, 24
	b	.LBB2097_13
.LBB2097_12:                            # %_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EEC2EmRKS5_RKS6_.exit._crit_edge
	ld.d	$a2, $s5, 24
	st.d	$s0, $s5, 8
	st.d	$a0, $s5, 16
	st.d	$a0, $s5, 24
	beqz	$fp, .LBB2097_14
.LBB2097_13:
	sub.d	$a1, $a2, $fp
	move	$a0, $fp
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB2097_14:                            # %_ZNSt6vectorIPN9__gnu_cxx15_Hashtable_nodeIN2kc8hashitemEEESaIS5_EED2Ev.exit
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB2097_15:                            # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a0, $a0, %pc_lo12(.L.str.520)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end2097:
	.size	_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm, .Lfunc_end2097-_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE6resizeEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_,"axG",@progbits,_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_,comdat
	.weak	_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_ # -- Begin function _ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
	.p2align	5
	.type	_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_,@function
_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_: # @_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a0
	ld.d	$a2, $a0, 16
	addi.d	$s0, $a0, 8
	move	$s2, $a1
	move	$s1, $s0
	beqz	$a2, .LBB2098_4
# %bb.1:                                # %.lr.ph.i
	ld.d	$a0, $s2, 0
	ld.d	$s4, $a0, 8
	ori	$s3, $zero, 24
	ori	$s6, $zero, 16
	.p2align	4, , 16
.LBB2098_2:                             # =>This Inner Loop Header: Depth=1
	move	$s1, $a2
	ld.d	$a0, $a2, 32
	ld.d	$s5, $a0, 8
	move	$a0, $s4
	move	$a1, $s5
	pcaddu18i	$ra, %call36(strcasecmp)
	jirl	$ra, $ra, 0
	slti	$a1, $a0, 0
	masknez	$a2, $s3, $a1
	maskeqz	$a1, $s6, $a1
	or	$a1, $a1, $a2
	ldx.d	$a2, $s1, $a1
	bnez	$a2, .LBB2098_2
# %bb.3:                                # %._crit_edge.i
	addi.w	$a1, $zero, -1
	move	$s3, $s1
	blt	$a1, $a0, .LBB2098_6
.LBB2098_4:                             # %._crit_edge.thread.i
	ld.d	$a0, $fp, 24
	beq	$s1, $a0, .LBB2098_7
# %bb.5:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	ld.d	$a0, $a0, 32
	ld.d	$a1, $s2, 0
	ld.d	$s5, $a0, 8
	ld.d	$s4, $a1, 8
.LBB2098_6:
	move	$a0, $s5
	move	$a1, $s4
	pcaddu18i	$ra, %call36(strcasecmp)
	jirl	$ra, $ra, 0
	addi.w	$a1, $zero, -1
	blt	$a1, $a0, .LBB2098_10
.LBB2098_7:                             # %select.unfold
	ld.d	$s5, $s2, 0
	ori	$s2, $zero, 1
	ori	$s4, $zero, 1
	beq	$s1, $s0, .LBB2098_9
# %bb.8:
	ld.d	$a1, $s1, 32
	ld.d	$a0, $s5, 8
	ld.d	$a1, $a1, 8
	pcaddu18i	$ra, %call36(strcasecmp)
	jirl	$ra, $ra, 0
	slti	$s4, $a0, 0
.LBB2098_9:                             # %_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_.exit
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$s5, $a0, 32
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 40
	b	.LBB2098_11
.LBB2098_10:
	move	$s2, $zero
.LBB2098_11:                            # %_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE24_M_get_insert_unique_posERKS2_.exit
	move	$a0, $s3
	move	$a1, $s2
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end2098:
	.size	_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_, .Lfunc_end2098-_ZNSt8_Rb_treeIPN2kc27impl_nocasestring_NoCaseStrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_,"axG",@progbits,_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_,comdat
	.weak	_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_ # -- Begin function _ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
	.p2align	5
	.type	_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_,@function
_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_: # @_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$a0, $a0, 16
	addi.d	$s0, $fp, 8
	move	$s2, $a1
	move	$s1, $s0
	beqz	$a0, .LBB2099_4
# %bb.1:                                # %.lr.ph.i
	ld.d	$a1, $s2, 0
	ld.d	$a1, $a1, 8
	ori	$a3, $zero, 24
	ori	$a4, $zero, 16
	.p2align	4, , 16
.LBB2099_2:                             # =>This Inner Loop Header: Depth=1
	move	$s1, $a0
	ld.d	$a0, $a0, 32
	ld.d	$a2, $a0, 8
	sltu	$a0, $a1, $a2
	masknez	$a5, $a3, $a0
	maskeqz	$a0, $a4, $a0
	or	$a0, $a0, $a5
	ldx.d	$a0, $s1, $a0
	bnez	$a0, .LBB2099_2
# %bb.3:                                # %._crit_edge.i
	move	$a0, $s1
	bgeu	$a1, $a2, .LBB2099_6
.LBB2099_4:                             # %._crit_edge.thread.i
	ld.d	$a0, $fp, 24
	beq	$s1, $a0, .LBB2099_8
# %bb.5:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 32
	ld.d	$a3, $s2, 0
	ld.d	$a2, $a1, 8
	ld.d	$a1, $a3, 8
.LBB2099_6:
	sltu	$a3, $a2, $a1
	masknez	$s3, $a0, $a3
	bltu	$a2, $a1, .LBB2099_9
# %bb.7:
	move	$s2, $zero
	b	.LBB2099_13
.LBB2099_8:
	move	$s3, $zero
.LBB2099_9:                             # %select.unfold
	ld.d	$s5, $s2, 0
	ori	$s2, $zero, 1
	ori	$s4, $zero, 1
	bnez	$s3, .LBB2099_12
# %bb.10:                               # %select.unfold
	ori	$s4, $zero, 1
	beq	$s1, $s0, .LBB2099_12
# %bb.11:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $s5, 8
	ld.d	$a0, $a0, 8
	sltu	$s4, $a1, $a0
.LBB2099_12:                            # %_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_.exit
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$s5, $a0, 32
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 40
.LBB2099_13:                            # %_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE24_M_get_insert_unique_posERKS2_.exit
	move	$a0, $s3
	move	$a1, $s2
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end2099:
	.size	_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_, .Lfunc_end2099-_ZNSt8_Rb_treeIPN2kc21impl_voidptr__VoidPtrES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_,"axG",@progbits,_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_,comdat
	.weak	_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_ # -- Begin function _ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
	.p2align	5
	.type	_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_,@function
_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_: # @_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	ld.d	$a2, $a0, 16
	addi.d	$s0, $a0, 8
	move	$s1, $a1
	move	$s2, $s0
	beqz	$a2, .LBB2100_4
# %bb.1:                                # %.lr.ph.i.preheader
	ori	$s3, $zero, 24
	ori	$s4, $zero, 16
	.p2align	4, , 16
.LBB2100_2:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	move	$s2, $a2
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a2, 32
	pcaddu18i	$ra, %call36(_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_)
	jirl	$ra, $ra, 0
	masknez	$a1, $s3, $a0
	maskeqz	$a2, $s4, $a0
	or	$a1, $a2, $a1
	ldx.d	$a2, $s2, $a1
	bnez	$a2, .LBB2100_2
# %bb.3:                                # %._crit_edge.i
	move	$s4, $s2
	beqz	$a0, .LBB2100_6
.LBB2100_4:                             # %._crit_edge.thread.i
	ld.d	$a0, $fp, 24
	beq	$s2, $a0, .LBB2100_7
# %bb.5:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s4, $a0
.LBB2100_6:
	ld.d	$a0, $s4, 32
	ld.d	$a1, $s1, 0
	pcaddu18i	$ra, %call36(_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB2100_10
.LBB2100_7:                             # %select.unfold
	ori	$s3, $zero, 1
	ori	$s5, $zero, 1
	beq	$s2, $s0, .LBB2100_9
# %bb.8:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $s2, 32
	pcaddu18i	$ra, %call36(_ZN2kc7ht_lessEPNS_20impl_abstract_phylumES1_)
	jirl	$ra, $ra, 0
	move	$s5, $a0
.LBB2100_9:                             # %_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_.exit
	ori	$a0, $zero, 40
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	move	$s4, $a0
	st.d	$a1, $a0, 32
	move	$a0, $s5
	move	$a1, $s4
	move	$a2, $s2
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 40
	b	.LBB2100_11
.LBB2100_10:
	move	$s3, $zero
.LBB2100_11:                            # %_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE24_M_get_insert_unique_posERKS2_.exit
	move	$a0, $s4
	move	$a1, $s3
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end2100:
	.size	_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_, .Lfunc_end2100-_ZNSt8_Rb_treeIPN2kc20impl_abstract_phylumES2_St9_IdentityIS2_ENS0_11phylum_lessIS2_EESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_
	.cfi_endproc
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	5                               # -- Begin function _GLOBAL__sub_I_k.cc
	.type	_GLOBAL__sub_I_k.cc,@function
_GLOBAL__sub_I_k.cc:                    # @_GLOBAL__sub_I_k.cc
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	pcalau12i	$a0, %pc_hi20(_ZN2kcL28kc_not_uniq_static_hashtableE)
	addi.d	$fp, $a0, %pc_lo12(_ZN2kcL28kc_not_uniq_static_hashtableE)
	st.b	$zero, $fp, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 16
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vst	$vr0, $fp, 32
.Ltmp36:
	addi.d	$a0, $fp, 8
	ori	$a1, $zero, 100
	pcaddu18i	$ra, %call36(_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm)
	jirl	$ra, $ra, 0
.Ltmp37:
# %bb.1:                                # %__cxx_global_var_init.exit
	st.w	$zero, $fp, 56
	addi.d	$a0, $fp, 56
	st.d	$zero, $fp, 64
	st.d	$a0, $fp, 72
	st.d	$a0, $fp, 80
	st.d	$zero, $fp, 88
	st.w	$zero, $fp, 104
	addi.d	$a0, $fp, 104
	st.d	$zero, $fp, 112
	st.d	$a0, $fp, 120
	st.d	$a0, $fp, 128
	st.d	$zero, $fp, 136
	st.w	$zero, $fp, 152
	addi.d	$a0, $fp, 152
	st.d	$zero, $fp, 160
	st.d	$a0, $fp, 168
	st.d	$a0, $fp, 176
	st.d	$zero, $fp, 184
	st.w	$zero, $fp, 200
	addi.d	$a0, $fp, 200
	st.d	$zero, $fp, 208
	st.d	$a0, $fp, 216
	st.d	$a0, $fp, 224
	st.d	$zero, $fp, 232
	st.w	$zero, $fp, 248
	addi.d	$a0, $fp, 248
	st.d	$zero, $fp, 256
	st.d	$a0, $fp, 264
	st.d	$a0, $fp, 272
	st.d	$zero, $fp, 280
	addi.d	$a0, $fp, 288
	st.d	$a0, $fp, 296
	st.d	$a0, $fp, 288
	st.d	$zero, $fp, 304
	st.d	$a0, $fp, 312
	st.h	$zero, $fp, 320
	pcalau12i	$a0, %pc_hi20(_ZN2kc18hashtable_struct_tD2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZN2kc18hashtable_struct_tD2Ev)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$a2, $a1, %pc_lo12(__dso_handle)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN2kcL21uniq_static_hashtableE)
	addi.d	$fp, $a0, %pc_lo12(_ZN2kcL21uniq_static_hashtableE)
	st.b	$zero, $fp, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $fp, 16
	vst	$vr0, $fp, 32
.Ltmp39:
	addi.d	$a0, $fp, 8
	ori	$a1, $zero, 100
	pcaddu18i	$ra, %call36(_ZN9__gnu_cxx9hashtableIN2kc8hashitemES2_NS1_13hash_hashitemESt9_IdentityIS2_ENS1_11eq_hashitemESaIS2_EE21_M_initialize_bucketsEm)
	jirl	$ra, $ra, 0
.Ltmp40:
# %bb.2:                                # %__cxx_global_var_init.492.exit
	st.w	$zero, $fp, 56
	addi.d	$a0, $fp, 56
	st.d	$zero, $fp, 64
	st.d	$a0, $fp, 72
	st.d	$a0, $fp, 80
	st.d	$zero, $fp, 88
	st.w	$zero, $fp, 104
	addi.d	$a0, $fp, 104
	st.d	$zero, $fp, 112
	st.d	$a0, $fp, 120
	st.d	$a0, $fp, 128
	st.d	$zero, $fp, 136
	st.w	$zero, $fp, 152
	addi.d	$a0, $fp, 152
	st.d	$zero, $fp, 160
	st.d	$a0, $fp, 168
	st.d	$a0, $fp, 176
	st.d	$zero, $fp, 184
	st.w	$zero, $fp, 200
	addi.d	$a0, $fp, 200
	st.d	$zero, $fp, 208
	st.d	$a0, $fp, 216
	st.d	$a0, $fp, 224
	st.d	$zero, $fp, 232
	st.w	$zero, $fp, 248
	addi.d	$a0, $fp, 248
	st.d	$zero, $fp, 256
	st.d	$a0, $fp, 264
	st.d	$a0, $fp, 272
	st.d	$zero, $fp, 280
	addi.d	$a0, $fp, 288
	st.d	$a0, $fp, 296
	st.d	$a0, $fp, 288
	st.d	$zero, $fp, 304
	st.d	$a0, $fp, 312
	st.h	$zero, $fp, 320
	pcalau12i	$a0, %pc_hi20(_ZN2kc18hashtable_struct_tD2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZN2kc18hashtable_struct_tD2Ev)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$s0, $a1, %pc_lo12(__dso_handle)
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN2kcL14kc_indentationB5cxx11E)
	addi.d	$a1, $a0, %pc_lo12(_ZN2kcL14kc_indentationB5cxx11E)
	pcalau12i	$a0, %got_pc_hi20(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev)
	ld.d	$a0, $a0, %got_pc_lo12(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev)
	addi.d	$a2, $a1, 16
	st.d	$a2, $a1, 0
	st.d	$zero, $a1, 8
	st.b	$zero, $a1, 16
	move	$a2, $s0
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(__cxa_atexit)
	jr	$t8
.LBB2101_3:
.Ltmp41:
	b	.LBB2101_5
.LBB2101_4:
.Ltmp38:
.LBB2101_5:
	ld.d	$a2, $fp, 16
	move	$s0, $a0
	beqz	$a2, .LBB2101_7
# %bb.6:
	addi.d	$a0, $fp, 32
	ld.d	$a0, $a0, 0
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB2101_7:                             # %common.resume
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end2101:
	.size	_GLOBAL__sub_I_k.cc, .Lfunc_end2101-_GLOBAL__sub_I_k.cc
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table2101:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Ltmp36-.Lfunc_begin3          # >> Call Site 1 <<
	.uleb128 .Ltmp37-.Ltmp36                #   Call between .Ltmp36 and .Ltmp37
	.uleb128 .Ltmp38-.Lfunc_begin3          #     jumps to .Ltmp38
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp37-.Lfunc_begin3          # >> Call Site 2 <<
	.uleb128 .Ltmp39-.Ltmp37                #   Call between .Ltmp37 and .Ltmp39
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp39-.Lfunc_begin3          # >> Call Site 3 <<
	.uleb128 .Ltmp40-.Ltmp39                #   Call between .Ltmp39 and .Ltmp40
	.uleb128 .Ltmp41-.Lfunc_begin3          #     jumps to .Ltmp41
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp40-.Lfunc_begin3          # >> Call Site 4 <<
	.uleb128 .Lfunc_end2101-.Ltmp40         #   Call between .Ltmp40 and .Lfunc_end2101
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end3:
	.p2align	2, 0x0
                                        # -- End function
	.type	_ZTIN2kc11impl_uniqIDE,@object  # @_ZTIN2kc11impl_uniqIDE
	.section	.data.rel.ro._ZTIN2kc11impl_uniqIDE,"awG",@progbits,_ZTIN2kc11impl_uniqIDE,comdat
	.weak	_ZTIN2kc11impl_uniqIDE
	.p2align	3, 0x0
_ZTIN2kc11impl_uniqIDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc11impl_uniqIDE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc11impl_uniqIDE, 24

	.type	_ZTSN2kc11impl_uniqIDE,@object  # @_ZTSN2kc11impl_uniqIDE
	.section	.rodata._ZTSN2kc11impl_uniqIDE,"aG",@progbits,_ZTSN2kc11impl_uniqIDE,comdat
	.weak	_ZTSN2kc11impl_uniqIDE
_ZTSN2kc11impl_uniqIDE:
	.asciz	"N2kc11impl_uniqIDE"
	.size	_ZTSN2kc11impl_uniqIDE, 19

	.type	_ZTIN2kc18impl_bindingidmarkE,@object # @_ZTIN2kc18impl_bindingidmarkE
	.section	.data.rel.ro._ZTIN2kc18impl_bindingidmarkE,"awG",@progbits,_ZTIN2kc18impl_bindingidmarkE,comdat
	.weak	_ZTIN2kc18impl_bindingidmarkE
	.p2align	3, 0x0
_ZTIN2kc18impl_bindingidmarkE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_bindingidmarkE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_bindingidmarkE, 24

	.type	_ZTSN2kc18impl_bindingidmarkE,@object # @_ZTSN2kc18impl_bindingidmarkE
	.section	.rodata._ZTSN2kc18impl_bindingidmarkE,"aG",@progbits,_ZTSN2kc18impl_bindingidmarkE,comdat
	.weak	_ZTSN2kc18impl_bindingidmarkE
_ZTSN2kc18impl_bindingidmarkE:
	.asciz	"N2kc18impl_bindingidmarkE"
	.size	_ZTSN2kc18impl_bindingidmarkE, 26

	.type	_ZTIN2kc19impl_bindingidmarksE,@object # @_ZTIN2kc19impl_bindingidmarksE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_bindingidmarksE
	.p2align	3, 0x0
_ZTIN2kc19impl_bindingidmarksE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_bindingidmarksE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc19impl_bindingidmarksE, 24

	.type	_ZTSN2kc19impl_bindingidmarksE,@object # @_ZTSN2kc19impl_bindingidmarksE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_bindingidmarksE
_ZTSN2kc19impl_bindingidmarksE:
	.asciz	"N2kc19impl_bindingidmarksE"
	.size	_ZTSN2kc19impl_bindingidmarksE, 27

	.type	_ZTIN2kc18impl_abstract_listE,@object # @_ZTIN2kc18impl_abstract_listE
	.section	.data.rel.ro._ZTIN2kc18impl_abstract_listE,"awG",@progbits,_ZTIN2kc18impl_abstract_listE,comdat
	.weak	_ZTIN2kc18impl_abstract_listE
	.p2align	3, 0x0
_ZTIN2kc18impl_abstract_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_abstract_listE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_abstract_listE, 24

	.type	_ZTSN2kc18impl_abstract_listE,@object # @_ZTSN2kc18impl_abstract_listE
	.section	.rodata._ZTSN2kc18impl_abstract_listE,"aG",@progbits,_ZTSN2kc18impl_abstract_listE,comdat
	.weak	_ZTSN2kc18impl_abstract_listE
_ZTSN2kc18impl_abstract_listE:
	.asciz	"N2kc18impl_abstract_listE"
	.size	_ZTSN2kc18impl_abstract_listE, 26

	.type	_ZTIN2kc29impl_countedphylumdeclarationE,@object # @_ZTIN2kc29impl_countedphylumdeclarationE
	.section	.data.rel.ro._ZTIN2kc29impl_countedphylumdeclarationE,"awG",@progbits,_ZTIN2kc29impl_countedphylumdeclarationE,comdat
	.weak	_ZTIN2kc29impl_countedphylumdeclarationE
	.p2align	3, 0x0
_ZTIN2kc29impl_countedphylumdeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_countedphylumdeclarationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc29impl_countedphylumdeclarationE, 24

	.type	_ZTSN2kc29impl_countedphylumdeclarationE,@object # @_ZTSN2kc29impl_countedphylumdeclarationE
	.section	.rodata._ZTSN2kc29impl_countedphylumdeclarationE,"aG",@progbits,_ZTSN2kc29impl_countedphylumdeclarationE,comdat
	.weak	_ZTSN2kc29impl_countedphylumdeclarationE
_ZTSN2kc29impl_countedphylumdeclarationE:
	.asciz	"N2kc29impl_countedphylumdeclarationE"
	.size	_ZTSN2kc29impl_countedphylumdeclarationE, 37

	.type	_ZTIN2kc30impl_countedphylumdeclarationsE,@object # @_ZTIN2kc30impl_countedphylumdeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc30impl_countedphylumdeclarationsE
	.p2align	3, 0x0
_ZTIN2kc30impl_countedphylumdeclarationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc30impl_countedphylumdeclarationsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc30impl_countedphylumdeclarationsE, 24

	.type	_ZTSN2kc30impl_countedphylumdeclarationsE,@object # @_ZTSN2kc30impl_countedphylumdeclarationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc30impl_countedphylumdeclarationsE
_ZTSN2kc30impl_countedphylumdeclarationsE:
	.asciz	"N2kc30impl_countedphylumdeclarationsE"
	.size	_ZTSN2kc30impl_countedphylumdeclarationsE, 38

	.type	_ZTIN2kc27impl_addedphylumdeclarationE,@object # @_ZTIN2kc27impl_addedphylumdeclarationE
	.section	.data.rel.ro._ZTIN2kc27impl_addedphylumdeclarationE,"awG",@progbits,_ZTIN2kc27impl_addedphylumdeclarationE,comdat
	.weak	_ZTIN2kc27impl_addedphylumdeclarationE
	.p2align	3, 0x0
_ZTIN2kc27impl_addedphylumdeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_addedphylumdeclarationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc27impl_addedphylumdeclarationE, 24

	.type	_ZTSN2kc27impl_addedphylumdeclarationE,@object # @_ZTSN2kc27impl_addedphylumdeclarationE
	.section	.rodata._ZTSN2kc27impl_addedphylumdeclarationE,"aG",@progbits,_ZTSN2kc27impl_addedphylumdeclarationE,comdat
	.weak	_ZTSN2kc27impl_addedphylumdeclarationE
_ZTSN2kc27impl_addedphylumdeclarationE:
	.asciz	"N2kc27impl_addedphylumdeclarationE"
	.size	_ZTSN2kc27impl_addedphylumdeclarationE, 35

	.type	_ZTIN2kc28impl_addedphylumdeclarationsE,@object # @_ZTIN2kc28impl_addedphylumdeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc28impl_addedphylumdeclarationsE
	.p2align	3, 0x0
_ZTIN2kc28impl_addedphylumdeclarationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc28impl_addedphylumdeclarationsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc28impl_addedphylumdeclarationsE, 24

	.type	_ZTSN2kc28impl_addedphylumdeclarationsE,@object # @_ZTSN2kc28impl_addedphylumdeclarationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc28impl_addedphylumdeclarationsE
_ZTSN2kc28impl_addedphylumdeclarationsE:
	.asciz	"N2kc28impl_addedphylumdeclarationsE"
	.size	_ZTSN2kc28impl_addedphylumdeclarationsE, 36

	.type	_ZTIN2kc18impl_storageoptionE,@object # @_ZTIN2kc18impl_storageoptionE
	.section	.data.rel.ro._ZTIN2kc18impl_storageoptionE,"awG",@progbits,_ZTIN2kc18impl_storageoptionE,comdat
	.weak	_ZTIN2kc18impl_storageoptionE
	.p2align	3, 0x0
_ZTIN2kc18impl_storageoptionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_storageoptionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_storageoptionE, 24

	.type	_ZTSN2kc18impl_storageoptionE,@object # @_ZTSN2kc18impl_storageoptionE
	.section	.rodata._ZTSN2kc18impl_storageoptionE,"aG",@progbits,_ZTSN2kc18impl_storageoptionE,comdat
	.weak	_ZTSN2kc18impl_storageoptionE
_ZTSN2kc18impl_storageoptionE:
	.asciz	"N2kc18impl_storageoptionE"
	.size	_ZTSN2kc18impl_storageoptionE, 26

	.type	_ZTIN2kc7impl_IDE,@object       # @_ZTIN2kc7impl_IDE
	.section	.data.rel.ro._ZTIN2kc7impl_IDE,"awG",@progbits,_ZTIN2kc7impl_IDE,comdat
	.weak	_ZTIN2kc7impl_IDE
	.p2align	3, 0x0
_ZTIN2kc7impl_IDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc7impl_IDE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc7impl_IDE, 24

	.type	_ZTSN2kc7impl_IDE,@object       # @_ZTSN2kc7impl_IDE
	.section	.rodata._ZTSN2kc7impl_IDE,"aG",@progbits,_ZTSN2kc7impl_IDE,comdat
	.weak	_ZTSN2kc7impl_IDE
_ZTSN2kc7impl_IDE:
	.asciz	"N2kc7impl_IDE"
	.size	_ZTSN2kc7impl_IDE, 14

	.type	_ZTIN2kc8impl_INTE,@object      # @_ZTIN2kc8impl_INTE
	.section	.data.rel.ro._ZTIN2kc8impl_INTE,"awG",@progbits,_ZTIN2kc8impl_INTE,comdat
	.weak	_ZTIN2kc8impl_INTE
	.p2align	3, 0x0
_ZTIN2kc8impl_INTE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc8impl_INTE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc8impl_INTE, 24

	.type	_ZTSN2kc8impl_INTE,@object      # @_ZTSN2kc8impl_INTE
	.section	.rodata._ZTSN2kc8impl_INTE,"aG",@progbits,_ZTSN2kc8impl_INTE,comdat
	.weak	_ZTSN2kc8impl_INTE
_ZTSN2kc8impl_INTE:
	.asciz	"N2kc8impl_INTE"
	.size	_ZTSN2kc8impl_INTE, 15

	.type	_ZTIN2kc11impl_IDtypeE,@object  # @_ZTIN2kc11impl_IDtypeE
	.section	.data.rel.ro._ZTIN2kc11impl_IDtypeE,"awG",@progbits,_ZTIN2kc11impl_IDtypeE,comdat
	.weak	_ZTIN2kc11impl_IDtypeE
	.p2align	3, 0x0
_ZTIN2kc11impl_IDtypeE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc11impl_IDtypeE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc11impl_IDtypeE, 24

	.type	_ZTSN2kc11impl_IDtypeE,@object  # @_ZTSN2kc11impl_IDtypeE
	.section	.rodata._ZTSN2kc11impl_IDtypeE,"aG",@progbits,_ZTSN2kc11impl_IDtypeE,comdat
	.weak	_ZTSN2kc11impl_IDtypeE
_ZTSN2kc11impl_IDtypeE:
	.asciz	"N2kc11impl_IDtypeE"
	.size	_ZTSN2kc11impl_IDtypeE, 19

	.type	_ZTIN2kc19impl_withexpressionE,@object # @_ZTIN2kc19impl_withexpressionE
	.section	.data.rel.ro._ZTIN2kc19impl_withexpressionE,"awG",@progbits,_ZTIN2kc19impl_withexpressionE,comdat
	.weak	_ZTIN2kc19impl_withexpressionE
	.p2align	3, 0x0
_ZTIN2kc19impl_withexpressionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_withexpressionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc19impl_withexpressionE, 24

	.type	_ZTSN2kc19impl_withexpressionE,@object # @_ZTSN2kc19impl_withexpressionE
	.section	.rodata._ZTSN2kc19impl_withexpressionE,"aG",@progbits,_ZTSN2kc19impl_withexpressionE,comdat
	.weak	_ZTSN2kc19impl_withexpressionE
_ZTSN2kc19impl_withexpressionE:
	.asciz	"N2kc19impl_withexpressionE"
	.size	_ZTSN2kc19impl_withexpressionE, 27

	.type	_ZTIN2kc13impl_filelineE,@object # @_ZTIN2kc13impl_filelineE
	.section	.data.rel.ro._ZTIN2kc13impl_filelineE,"awG",@progbits,_ZTIN2kc13impl_filelineE,comdat
	.weak	_ZTIN2kc13impl_filelineE
	.p2align	3, 0x0
_ZTIN2kc13impl_filelineE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc13impl_filelineE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc13impl_filelineE, 24

	.type	_ZTSN2kc13impl_filelineE,@object # @_ZTSN2kc13impl_filelineE
	.section	.rodata._ZTSN2kc13impl_filelineE,"aG",@progbits,_ZTSN2kc13impl_filelineE,comdat
	.weak	_ZTSN2kc13impl_filelineE
_ZTSN2kc13impl_filelineE:
	.asciz	"N2kc13impl_filelineE"
	.size	_ZTSN2kc13impl_filelineE, 21

	.type	_ZTIN2kc12impl_problemE,@object # @_ZTIN2kc12impl_problemE
	.section	.data.rel.ro._ZTIN2kc12impl_problemE,"awG",@progbits,_ZTIN2kc12impl_problemE,comdat
	.weak	_ZTIN2kc12impl_problemE
	.p2align	3, 0x0
_ZTIN2kc12impl_problemE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc12impl_problemE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc12impl_problemE, 24

	.type	_ZTSN2kc12impl_problemE,@object # @_ZTSN2kc12impl_problemE
	.section	.rodata._ZTSN2kc12impl_problemE,"aG",@progbits,_ZTSN2kc12impl_problemE,comdat
	.weak	_ZTSN2kc12impl_problemE
_ZTSN2kc12impl_problemE:
	.asciz	"N2kc12impl_problemE"
	.size	_ZTSN2kc12impl_problemE, 20

	.type	_ZTIN2kc19impl_baseclass_listE,@object # @_ZTIN2kc19impl_baseclass_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_baseclass_listE
	.p2align	3, 0x0
_ZTIN2kc19impl_baseclass_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_baseclass_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc19impl_baseclass_listE, 24

	.type	_ZTSN2kc19impl_baseclass_listE,@object # @_ZTSN2kc19impl_baseclass_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_baseclass_listE
_ZTSN2kc19impl_baseclass_listE:
	.asciz	"N2kc19impl_baseclass_listE"
	.size	_ZTSN2kc19impl_baseclass_listE, 27

	.type	_ZTIN2kc19impl_baseclass_declE,@object # @_ZTIN2kc19impl_baseclass_declE
	.section	.data.rel.ro._ZTIN2kc19impl_baseclass_declE,"awG",@progbits,_ZTIN2kc19impl_baseclass_declE,comdat
	.weak	_ZTIN2kc19impl_baseclass_declE
	.p2align	3, 0x0
_ZTIN2kc19impl_baseclass_declE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_baseclass_declE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc19impl_baseclass_declE, 24

	.type	_ZTSN2kc19impl_baseclass_declE,@object # @_ZTSN2kc19impl_baseclass_declE
	.section	.rodata._ZTSN2kc19impl_baseclass_declE,"aG",@progbits,_ZTSN2kc19impl_baseclass_declE,comdat
	.weak	_ZTSN2kc19impl_baseclass_declE
_ZTSN2kc19impl_baseclass_declE:
	.asciz	"N2kc19impl_baseclass_declE"
	.size	_ZTSN2kc19impl_baseclass_declE, 27

	.type	_ZTIN2kc27impl_baseclass_declarationsE,@object # @_ZTIN2kc27impl_baseclass_declarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc27impl_baseclass_declarationsE
	.p2align	3, 0x0
_ZTIN2kc27impl_baseclass_declarationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_baseclass_declarationsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc27impl_baseclass_declarationsE, 24

	.type	_ZTSN2kc27impl_baseclass_declarationsE,@object # @_ZTSN2kc27impl_baseclass_declarationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc27impl_baseclass_declarationsE
_ZTSN2kc27impl_baseclass_declarationsE:
	.asciz	"N2kc27impl_baseclass_declarationsE"
	.size	_ZTSN2kc27impl_baseclass_declarationsE, 35

	.type	_ZTIN2kc27impl_ac_constant_expressionE,@object # @_ZTIN2kc27impl_ac_constant_expressionE
	.section	.data.rel.ro._ZTIN2kc27impl_ac_constant_expressionE,"awG",@progbits,_ZTIN2kc27impl_ac_constant_expressionE,comdat
	.weak	_ZTIN2kc27impl_ac_constant_expressionE
	.p2align	3, 0x0
_ZTIN2kc27impl_ac_constant_expressionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_ac_constant_expressionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc27impl_ac_constant_expressionE, 24

	.type	_ZTSN2kc27impl_ac_constant_expressionE,@object # @_ZTSN2kc27impl_ac_constant_expressionE
	.section	.rodata._ZTSN2kc27impl_ac_constant_expressionE,"aG",@progbits,_ZTSN2kc27impl_ac_constant_expressionE,comdat
	.weak	_ZTSN2kc27impl_ac_constant_expressionE
_ZTSN2kc27impl_ac_constant_expressionE:
	.asciz	"N2kc27impl_ac_constant_expressionE"
	.size	_ZTSN2kc27impl_ac_constant_expressionE, 35

	.type	_ZTIN2kc17impl_ac_base_initE,@object # @_ZTIN2kc17impl_ac_base_initE
	.section	.data.rel.ro._ZTIN2kc17impl_ac_base_initE,"awG",@progbits,_ZTIN2kc17impl_ac_base_initE,comdat
	.weak	_ZTIN2kc17impl_ac_base_initE
	.p2align	3, 0x0
_ZTIN2kc17impl_ac_base_initE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc17impl_ac_base_initE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc17impl_ac_base_initE, 24

	.type	_ZTSN2kc17impl_ac_base_initE,@object # @_ZTSN2kc17impl_ac_base_initE
	.section	.rodata._ZTSN2kc17impl_ac_base_initE,"aG",@progbits,_ZTSN2kc17impl_ac_base_initE,comdat
	.weak	_ZTSN2kc17impl_ac_base_initE
_ZTSN2kc17impl_ac_base_initE:
	.asciz	"N2kc17impl_ac_base_initE"
	.size	_ZTSN2kc17impl_ac_base_initE, 25

	.type	_ZTIN2kc22impl_ac_base_init_listE,@object # @_ZTIN2kc22impl_ac_base_init_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc22impl_ac_base_init_listE
	.p2align	3, 0x0
_ZTIN2kc22impl_ac_base_init_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_ac_base_init_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc22impl_ac_base_init_listE, 24

	.type	_ZTSN2kc22impl_ac_base_init_listE,@object # @_ZTSN2kc22impl_ac_base_init_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc22impl_ac_base_init_listE
_ZTSN2kc22impl_ac_base_init_listE:
	.asciz	"N2kc22impl_ac_base_init_listE"
	.size	_ZTSN2kc22impl_ac_base_init_listE, 30

	.type	_ZTIN2kc32impl_ac_constant_expression_listE,@object # @_ZTIN2kc32impl_ac_constant_expression_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc32impl_ac_constant_expression_listE
	.p2align	3, 0x0
_ZTIN2kc32impl_ac_constant_expression_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_ac_constant_expression_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc32impl_ac_constant_expression_listE, 24

	.type	_ZTSN2kc32impl_ac_constant_expression_listE,@object # @_ZTSN2kc32impl_ac_constant_expression_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_ac_constant_expression_listE
_ZTSN2kc32impl_ac_constant_expression_listE:
	.asciz	"N2kc32impl_ac_constant_expression_listE"
	.size	_ZTSN2kc32impl_ac_constant_expression_listE, 40

	.type	_ZTIN2kc16impl_CexpressionE,@object # @_ZTIN2kc16impl_CexpressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc16impl_CexpressionE
	.p2align	3, 0x0
_ZTIN2kc16impl_CexpressionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc16impl_CexpressionE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc16impl_CexpressionE, 24

	.type	_ZTSN2kc16impl_CexpressionE,@object # @_ZTSN2kc16impl_CexpressionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc16impl_CexpressionE
_ZTSN2kc16impl_CexpressionE:
	.asciz	"N2kc16impl_CexpressionE"
	.size	_ZTSN2kc16impl_CexpressionE, 24

	.type	_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE,@object # @_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE
	.section	.data.rel.ro._ZTIN2kc41impl_ac_direct_abstract_declarator_optionE,"awG",@progbits,_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE,comdat
	.weak	_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE
	.p2align	3, 0x0
_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc41impl_ac_direct_abstract_declarator_optionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE, 24

	.type	_ZTSN2kc41impl_ac_direct_abstract_declarator_optionE,@object # @_ZTSN2kc41impl_ac_direct_abstract_declarator_optionE
	.section	.rodata._ZTSN2kc41impl_ac_direct_abstract_declarator_optionE,"aG",@progbits,_ZTSN2kc41impl_ac_direct_abstract_declarator_optionE,comdat
	.weak	_ZTSN2kc41impl_ac_direct_abstract_declarator_optionE
_ZTSN2kc41impl_ac_direct_abstract_declarator_optionE:
	.asciz	"N2kc41impl_ac_direct_abstract_declarator_optionE"
	.size	_ZTSN2kc41impl_ac_direct_abstract_declarator_optionE, 49

	.type	_ZTIN2kc27impl_ac_parameter_type_listE,@object # @_ZTIN2kc27impl_ac_parameter_type_listE
	.section	.data.rel.ro._ZTIN2kc27impl_ac_parameter_type_listE,"awG",@progbits,_ZTIN2kc27impl_ac_parameter_type_listE,comdat
	.weak	_ZTIN2kc27impl_ac_parameter_type_listE
	.p2align	3, 0x0
_ZTIN2kc27impl_ac_parameter_type_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_ac_parameter_type_listE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc27impl_ac_parameter_type_listE, 24

	.type	_ZTSN2kc27impl_ac_parameter_type_listE,@object # @_ZTSN2kc27impl_ac_parameter_type_listE
	.section	.rodata._ZTSN2kc27impl_ac_parameter_type_listE,"aG",@progbits,_ZTSN2kc27impl_ac_parameter_type_listE,comdat
	.weak	_ZTSN2kc27impl_ac_parameter_type_listE
_ZTSN2kc27impl_ac_parameter_type_listE:
	.asciz	"N2kc27impl_ac_parameter_type_listE"
	.size	_ZTSN2kc27impl_ac_parameter_type_listE, 35

	.type	_ZTIN2kc34impl_ac_constant_expression_optionE,@object # @_ZTIN2kc34impl_ac_constant_expression_optionE
	.section	.data.rel.ro._ZTIN2kc34impl_ac_constant_expression_optionE,"awG",@progbits,_ZTIN2kc34impl_ac_constant_expression_optionE,comdat
	.weak	_ZTIN2kc34impl_ac_constant_expression_optionE
	.p2align	3, 0x0
_ZTIN2kc34impl_ac_constant_expression_optionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc34impl_ac_constant_expression_optionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc34impl_ac_constant_expression_optionE, 24

	.type	_ZTSN2kc34impl_ac_constant_expression_optionE,@object # @_ZTSN2kc34impl_ac_constant_expression_optionE
	.section	.rodata._ZTSN2kc34impl_ac_constant_expression_optionE,"aG",@progbits,_ZTSN2kc34impl_ac_constant_expression_optionE,comdat
	.weak	_ZTSN2kc34impl_ac_constant_expression_optionE
_ZTSN2kc34impl_ac_constant_expression_optionE:
	.asciz	"N2kc34impl_ac_constant_expression_optionE"
	.size	_ZTSN2kc34impl_ac_constant_expression_optionE, 42

	.type	_ZTIN2kc27impl_ac_abstract_declaratorE,@object # @_ZTIN2kc27impl_ac_abstract_declaratorE
	.section	.data.rel.ro._ZTIN2kc27impl_ac_abstract_declaratorE,"awG",@progbits,_ZTIN2kc27impl_ac_abstract_declaratorE,comdat
	.weak	_ZTIN2kc27impl_ac_abstract_declaratorE
	.p2align	3, 0x0
_ZTIN2kc27impl_ac_abstract_declaratorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_ac_abstract_declaratorE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc27impl_ac_abstract_declaratorE, 24

	.type	_ZTSN2kc27impl_ac_abstract_declaratorE,@object # @_ZTSN2kc27impl_ac_abstract_declaratorE
	.section	.rodata._ZTSN2kc27impl_ac_abstract_declaratorE,"aG",@progbits,_ZTSN2kc27impl_ac_abstract_declaratorE,comdat
	.weak	_ZTSN2kc27impl_ac_abstract_declaratorE
_ZTSN2kc27impl_ac_abstract_declaratorE:
	.asciz	"N2kc27impl_ac_abstract_declaratorE"
	.size	_ZTSN2kc27impl_ac_abstract_declaratorE, 35

	.type	_ZTIN2kc34impl_ac_direct_abstract_declaratorE,@object # @_ZTIN2kc34impl_ac_direct_abstract_declaratorE
	.section	.data.rel.ro._ZTIN2kc34impl_ac_direct_abstract_declaratorE,"awG",@progbits,_ZTIN2kc34impl_ac_direct_abstract_declaratorE,comdat
	.weak	_ZTIN2kc34impl_ac_direct_abstract_declaratorE
	.p2align	3, 0x0
_ZTIN2kc34impl_ac_direct_abstract_declaratorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc34impl_ac_direct_abstract_declaratorE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc34impl_ac_direct_abstract_declaratorE, 24

	.type	_ZTSN2kc34impl_ac_direct_abstract_declaratorE,@object # @_ZTSN2kc34impl_ac_direct_abstract_declaratorE
	.section	.rodata._ZTSN2kc34impl_ac_direct_abstract_declaratorE,"aG",@progbits,_ZTSN2kc34impl_ac_direct_abstract_declaratorE,comdat
	.weak	_ZTSN2kc34impl_ac_direct_abstract_declaratorE
_ZTSN2kc34impl_ac_direct_abstract_declaratorE:
	.asciz	"N2kc34impl_ac_direct_abstract_declaratorE"
	.size	_ZTSN2kc34impl_ac_direct_abstract_declaratorE, 42

	.type	_ZTIN2kc22impl_ac_pointer_optionE,@object # @_ZTIN2kc22impl_ac_pointer_optionE
	.section	.data.rel.ro._ZTIN2kc22impl_ac_pointer_optionE,"awG",@progbits,_ZTIN2kc22impl_ac_pointer_optionE,comdat
	.weak	_ZTIN2kc22impl_ac_pointer_optionE
	.p2align	3, 0x0
_ZTIN2kc22impl_ac_pointer_optionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_ac_pointer_optionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc22impl_ac_pointer_optionE, 24

	.type	_ZTSN2kc22impl_ac_pointer_optionE,@object # @_ZTSN2kc22impl_ac_pointer_optionE
	.section	.rodata._ZTSN2kc22impl_ac_pointer_optionE,"aG",@progbits,_ZTSN2kc22impl_ac_pointer_optionE,comdat
	.weak	_ZTSN2kc22impl_ac_pointer_optionE
_ZTSN2kc22impl_ac_pointer_optionE:
	.asciz	"N2kc22impl_ac_pointer_optionE"
	.size	_ZTSN2kc22impl_ac_pointer_optionE, 30

	.type	_ZTIN2kc15impl_ac_pointerE,@object # @_ZTIN2kc15impl_ac_pointerE
	.section	.data.rel.ro._ZTIN2kc15impl_ac_pointerE,"awG",@progbits,_ZTIN2kc15impl_ac_pointerE,comdat
	.weak	_ZTIN2kc15impl_ac_pointerE
	.p2align	3, 0x0
_ZTIN2kc15impl_ac_pointerE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc15impl_ac_pointerE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc15impl_ac_pointerE, 24

	.type	_ZTSN2kc15impl_ac_pointerE,@object # @_ZTSN2kc15impl_ac_pointerE
	.section	.rodata._ZTSN2kc15impl_ac_pointerE,"aG",@progbits,_ZTSN2kc15impl_ac_pointerE,comdat
	.weak	_ZTSN2kc15impl_ac_pointerE
_ZTSN2kc15impl_ac_pointerE:
	.asciz	"N2kc15impl_ac_pointerE"
	.size	_ZTSN2kc15impl_ac_pointerE, 23

	.type	_ZTIN2kc23impl_ac_identifier_listE,@object # @_ZTIN2kc23impl_ac_identifier_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc23impl_ac_identifier_listE
	.p2align	3, 0x0
_ZTIN2kc23impl_ac_identifier_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_ac_identifier_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc23impl_ac_identifier_listE, 24

	.type	_ZTSN2kc23impl_ac_identifier_listE,@object # @_ZTSN2kc23impl_ac_identifier_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc23impl_ac_identifier_listE
_ZTSN2kc23impl_ac_identifier_listE:
	.asciz	"N2kc23impl_ac_identifier_listE"
	.size	_ZTSN2kc23impl_ac_identifier_listE, 31

	.type	_ZTIN2kc30impl_ac_declaration_specifiersE,@object # @_ZTIN2kc30impl_ac_declaration_specifiersE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc30impl_ac_declaration_specifiersE
	.p2align	3, 0x0
_ZTIN2kc30impl_ac_declaration_specifiersE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc30impl_ac_declaration_specifiersE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc30impl_ac_declaration_specifiersE, 24

	.type	_ZTSN2kc30impl_ac_declaration_specifiersE,@object # @_ZTSN2kc30impl_ac_declaration_specifiersE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc30impl_ac_declaration_specifiersE
_ZTSN2kc30impl_ac_declaration_specifiersE:
	.asciz	"N2kc30impl_ac_declaration_specifiersE"
	.size	_ZTSN2kc30impl_ac_declaration_specifiersE, 38

	.type	_ZTIN2kc18impl_ac_declaratorE,@object # @_ZTIN2kc18impl_ac_declaratorE
	.section	.data.rel.ro._ZTIN2kc18impl_ac_declaratorE,"awG",@progbits,_ZTIN2kc18impl_ac_declaratorE,comdat
	.weak	_ZTIN2kc18impl_ac_declaratorE
	.p2align	3, 0x0
_ZTIN2kc18impl_ac_declaratorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_ac_declaratorE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_ac_declaratorE, 24

	.type	_ZTSN2kc18impl_ac_declaratorE,@object # @_ZTSN2kc18impl_ac_declaratorE
	.section	.rodata._ZTSN2kc18impl_ac_declaratorE,"aG",@progbits,_ZTSN2kc18impl_ac_declaratorE,comdat
	.weak	_ZTSN2kc18impl_ac_declaratorE
_ZTSN2kc18impl_ac_declaratorE:
	.asciz	"N2kc18impl_ac_declaratorE"
	.size	_ZTSN2kc18impl_ac_declaratorE, 26

	.type	_ZTIN2kc29impl_ac_parameter_declarationE,@object # @_ZTIN2kc29impl_ac_parameter_declarationE
	.section	.data.rel.ro._ZTIN2kc29impl_ac_parameter_declarationE,"awG",@progbits,_ZTIN2kc29impl_ac_parameter_declarationE,comdat
	.weak	_ZTIN2kc29impl_ac_parameter_declarationE
	.p2align	3, 0x0
_ZTIN2kc29impl_ac_parameter_declarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_ac_parameter_declarationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc29impl_ac_parameter_declarationE, 24

	.type	_ZTSN2kc29impl_ac_parameter_declarationE,@object # @_ZTSN2kc29impl_ac_parameter_declarationE
	.section	.rodata._ZTSN2kc29impl_ac_parameter_declarationE,"aG",@progbits,_ZTSN2kc29impl_ac_parameter_declarationE,comdat
	.weak	_ZTSN2kc29impl_ac_parameter_declarationE
_ZTSN2kc29impl_ac_parameter_declarationE:
	.asciz	"N2kc29impl_ac_parameter_declarationE"
	.size	_ZTSN2kc29impl_ac_parameter_declarationE, 37

	.type	_ZTIN2kc22impl_ac_parameter_listE,@object # @_ZTIN2kc22impl_ac_parameter_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc22impl_ac_parameter_listE
	.p2align	3, 0x0
_ZTIN2kc22impl_ac_parameter_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_ac_parameter_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc22impl_ac_parameter_listE, 24

	.type	_ZTSN2kc22impl_ac_parameter_listE,@object # @_ZTSN2kc22impl_ac_parameter_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc22impl_ac_parameter_listE
_ZTSN2kc22impl_ac_parameter_listE:
	.asciz	"N2kc22impl_ac_parameter_listE"
	.size	_ZTSN2kc22impl_ac_parameter_listE, 30

	.type	_ZTIN2kc22impl_ac_type_qualifierE,@object # @_ZTIN2kc22impl_ac_type_qualifierE
	.section	.data.rel.ro._ZTIN2kc22impl_ac_type_qualifierE,"awG",@progbits,_ZTIN2kc22impl_ac_type_qualifierE,comdat
	.weak	_ZTIN2kc22impl_ac_type_qualifierE
	.p2align	3, 0x0
_ZTIN2kc22impl_ac_type_qualifierE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_ac_type_qualifierE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc22impl_ac_type_qualifierE, 24

	.type	_ZTSN2kc22impl_ac_type_qualifierE,@object # @_ZTSN2kc22impl_ac_type_qualifierE
	.section	.rodata._ZTSN2kc22impl_ac_type_qualifierE,"aG",@progbits,_ZTSN2kc22impl_ac_type_qualifierE,comdat
	.weak	_ZTSN2kc22impl_ac_type_qualifierE
_ZTSN2kc22impl_ac_type_qualifierE:
	.asciz	"N2kc22impl_ac_type_qualifierE"
	.size	_ZTSN2kc22impl_ac_type_qualifierE, 30

	.type	_ZTIN2kc27impl_ac_type_qualifier_listE,@object # @_ZTIN2kc27impl_ac_type_qualifier_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc27impl_ac_type_qualifier_listE
	.p2align	3, 0x0
_ZTIN2kc27impl_ac_type_qualifier_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_ac_type_qualifier_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc27impl_ac_type_qualifier_listE, 24

	.type	_ZTSN2kc27impl_ac_type_qualifier_listE,@object # @_ZTSN2kc27impl_ac_type_qualifier_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc27impl_ac_type_qualifier_listE
_ZTSN2kc27impl_ac_type_qualifier_listE:
	.asciz	"N2kc27impl_ac_type_qualifier_listE"
	.size	_ZTSN2kc27impl_ac_type_qualifier_listE, 35

	.type	_ZTIN2kc28impl_ac_class_qualifier_listE,@object # @_ZTIN2kc28impl_ac_class_qualifier_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc28impl_ac_class_qualifier_listE
	.p2align	3, 0x0
_ZTIN2kc28impl_ac_class_qualifier_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc28impl_ac_class_qualifier_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc28impl_ac_class_qualifier_listE, 24

	.type	_ZTSN2kc28impl_ac_class_qualifier_listE,@object # @_ZTSN2kc28impl_ac_class_qualifier_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc28impl_ac_class_qualifier_listE
_ZTSN2kc28impl_ac_class_qualifier_listE:
	.asciz	"N2kc28impl_ac_class_qualifier_listE"
	.size	_ZTSN2kc28impl_ac_class_qualifier_listE, 36

	.type	_ZTIN2kc25impl_ac_direct_declaratorE,@object # @_ZTIN2kc25impl_ac_direct_declaratorE
	.section	.data.rel.ro._ZTIN2kc25impl_ac_direct_declaratorE,"awG",@progbits,_ZTIN2kc25impl_ac_direct_declaratorE,comdat
	.weak	_ZTIN2kc25impl_ac_direct_declaratorE
	.p2align	3, 0x0
_ZTIN2kc25impl_ac_direct_declaratorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc25impl_ac_direct_declaratorE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc25impl_ac_direct_declaratorE, 24

	.type	_ZTSN2kc25impl_ac_direct_declaratorE,@object # @_ZTSN2kc25impl_ac_direct_declaratorE
	.section	.rodata._ZTSN2kc25impl_ac_direct_declaratorE,"aG",@progbits,_ZTSN2kc25impl_ac_direct_declaratorE,comdat
	.weak	_ZTSN2kc25impl_ac_direct_declaratorE
_ZTSN2kc25impl_ac_direct_declaratorE:
	.asciz	"N2kc25impl_ac_direct_declaratorE"
	.size	_ZTSN2kc25impl_ac_direct_declaratorE, 33

	.type	_ZTIN2kc33impl_ac_class_qualifier_help_listE,@object # @_ZTIN2kc33impl_ac_class_qualifier_help_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc33impl_ac_class_qualifier_help_listE
	.p2align	3, 0x0
_ZTIN2kc33impl_ac_class_qualifier_help_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc33impl_ac_class_qualifier_help_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc33impl_ac_class_qualifier_help_listE, 24

	.type	_ZTSN2kc33impl_ac_class_qualifier_help_listE,@object # @_ZTSN2kc33impl_ac_class_qualifier_help_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc33impl_ac_class_qualifier_help_listE
_ZTSN2kc33impl_ac_class_qualifier_help_listE:
	.asciz	"N2kc33impl_ac_class_qualifier_help_listE"
	.size	_ZTSN2kc33impl_ac_class_qualifier_help_listE, 41

	.type	_ZTIN2kc21impl_ac_operator_nameE,@object # @_ZTIN2kc21impl_ac_operator_nameE
	.section	.data.rel.ro._ZTIN2kc21impl_ac_operator_nameE,"awG",@progbits,_ZTIN2kc21impl_ac_operator_nameE,comdat
	.weak	_ZTIN2kc21impl_ac_operator_nameE
	.p2align	3, 0x0
_ZTIN2kc21impl_ac_operator_nameE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_ac_operator_nameE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc21impl_ac_operator_nameE, 24

	.type	_ZTSN2kc21impl_ac_operator_nameE,@object # @_ZTSN2kc21impl_ac_operator_nameE
	.section	.rodata._ZTSN2kc21impl_ac_operator_nameE,"aG",@progbits,_ZTSN2kc21impl_ac_operator_nameE,comdat
	.weak	_ZTSN2kc21impl_ac_operator_nameE
_ZTSN2kc21impl_ac_operator_nameE:
	.asciz	"N2kc21impl_ac_operator_nameE"
	.size	_ZTSN2kc21impl_ac_operator_nameE, 29

	.type	_ZTIN2kc18impl_ac_ref_optionE,@object # @_ZTIN2kc18impl_ac_ref_optionE
	.section	.data.rel.ro._ZTIN2kc18impl_ac_ref_optionE,"awG",@progbits,_ZTIN2kc18impl_ac_ref_optionE,comdat
	.weak	_ZTIN2kc18impl_ac_ref_optionE
	.p2align	3, 0x0
_ZTIN2kc18impl_ac_ref_optionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_ac_ref_optionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_ac_ref_optionE, 24

	.type	_ZTSN2kc18impl_ac_ref_optionE,@object # @_ZTSN2kc18impl_ac_ref_optionE
	.section	.rodata._ZTSN2kc18impl_ac_ref_optionE,"aG",@progbits,_ZTSN2kc18impl_ac_ref_optionE,comdat
	.weak	_ZTSN2kc18impl_ac_ref_optionE
_ZTSN2kc18impl_ac_ref_optionE:
	.asciz	"N2kc18impl_ac_ref_optionE"
	.size	_ZTSN2kc18impl_ac_ref_optionE, 26

	.type	_ZTIN2kc23impl_ac_init_declaratorE,@object # @_ZTIN2kc23impl_ac_init_declaratorE
	.section	.data.rel.ro._ZTIN2kc23impl_ac_init_declaratorE,"awG",@progbits,_ZTIN2kc23impl_ac_init_declaratorE,comdat
	.weak	_ZTIN2kc23impl_ac_init_declaratorE
	.p2align	3, 0x0
_ZTIN2kc23impl_ac_init_declaratorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_ac_init_declaratorE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc23impl_ac_init_declaratorE, 24

	.type	_ZTSN2kc23impl_ac_init_declaratorE,@object # @_ZTSN2kc23impl_ac_init_declaratorE
	.section	.rodata._ZTSN2kc23impl_ac_init_declaratorE,"aG",@progbits,_ZTSN2kc23impl_ac_init_declaratorE,comdat
	.weak	_ZTSN2kc23impl_ac_init_declaratorE
_ZTSN2kc23impl_ac_init_declaratorE:
	.asciz	"N2kc23impl_ac_init_declaratorE"
	.size	_ZTSN2kc23impl_ac_init_declaratorE, 31

	.type	_ZTIN2kc28impl_ac_init_declarator_listE,@object # @_ZTIN2kc28impl_ac_init_declarator_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc28impl_ac_init_declarator_listE
	.p2align	3, 0x0
_ZTIN2kc28impl_ac_init_declarator_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc28impl_ac_init_declarator_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc28impl_ac_init_declarator_listE, 24

	.type	_ZTSN2kc28impl_ac_init_declarator_listE,@object # @_ZTSN2kc28impl_ac_init_declarator_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc28impl_ac_init_declarator_listE
_ZTSN2kc28impl_ac_init_declarator_listE:
	.asciz	"N2kc28impl_ac_init_declarator_listE"
	.size	_ZTSN2kc28impl_ac_init_declarator_listE, 36

	.type	_ZTIN2kc22impl_ac_type_specifierE,@object # @_ZTIN2kc22impl_ac_type_specifierE
	.section	.data.rel.ro._ZTIN2kc22impl_ac_type_specifierE,"awG",@progbits,_ZTIN2kc22impl_ac_type_specifierE,comdat
	.weak	_ZTIN2kc22impl_ac_type_specifierE
	.p2align	3, 0x0
_ZTIN2kc22impl_ac_type_specifierE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_ac_type_specifierE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc22impl_ac_type_specifierE, 24

	.type	_ZTSN2kc22impl_ac_type_specifierE,@object # @_ZTSN2kc22impl_ac_type_specifierE
	.section	.rodata._ZTSN2kc22impl_ac_type_specifierE,"aG",@progbits,_ZTSN2kc22impl_ac_type_specifierE,comdat
	.weak	_ZTSN2kc22impl_ac_type_specifierE
_ZTSN2kc22impl_ac_type_specifierE:
	.asciz	"N2kc22impl_ac_type_specifierE"
	.size	_ZTSN2kc22impl_ac_type_specifierE, 30

	.type	_ZTIN2kc31impl_ac_storage_class_specifierE,@object # @_ZTIN2kc31impl_ac_storage_class_specifierE
	.section	.data.rel.ro._ZTIN2kc31impl_ac_storage_class_specifierE,"awG",@progbits,_ZTIN2kc31impl_ac_storage_class_specifierE,comdat
	.weak	_ZTIN2kc31impl_ac_storage_class_specifierE
	.p2align	3, 0x0
_ZTIN2kc31impl_ac_storage_class_specifierE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc31impl_ac_storage_class_specifierE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc31impl_ac_storage_class_specifierE, 24

	.type	_ZTSN2kc31impl_ac_storage_class_specifierE,@object # @_ZTSN2kc31impl_ac_storage_class_specifierE
	.section	.rodata._ZTSN2kc31impl_ac_storage_class_specifierE,"aG",@progbits,_ZTSN2kc31impl_ac_storage_class_specifierE,comdat
	.weak	_ZTSN2kc31impl_ac_storage_class_specifierE
_ZTSN2kc31impl_ac_storage_class_specifierE:
	.asciz	"N2kc31impl_ac_storage_class_specifierE"
	.size	_ZTSN2kc31impl_ac_storage_class_specifierE, 39

	.type	_ZTIN2kc29impl_ac_declaration_specifierE,@object # @_ZTIN2kc29impl_ac_declaration_specifierE
	.section	.data.rel.ro._ZTIN2kc29impl_ac_declaration_specifierE,"awG",@progbits,_ZTIN2kc29impl_ac_declaration_specifierE,comdat
	.weak	_ZTIN2kc29impl_ac_declaration_specifierE
	.p2align	3, 0x0
_ZTIN2kc29impl_ac_declaration_specifierE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_ac_declaration_specifierE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc29impl_ac_declaration_specifierE, 24

	.type	_ZTSN2kc29impl_ac_declaration_specifierE,@object # @_ZTSN2kc29impl_ac_declaration_specifierE
	.section	.rodata._ZTSN2kc29impl_ac_declaration_specifierE,"aG",@progbits,_ZTSN2kc29impl_ac_declaration_specifierE,comdat
	.weak	_ZTSN2kc29impl_ac_declaration_specifierE
_ZTSN2kc29impl_ac_declaration_specifierE:
	.asciz	"N2kc29impl_ac_declaration_specifierE"
	.size	_ZTSN2kc29impl_ac_declaration_specifierE, 37

	.type	_ZTIN2kc19impl_ac_declarationE,@object # @_ZTIN2kc19impl_ac_declarationE
	.section	.data.rel.ro._ZTIN2kc19impl_ac_declarationE,"awG",@progbits,_ZTIN2kc19impl_ac_declarationE,comdat
	.weak	_ZTIN2kc19impl_ac_declarationE
	.p2align	3, 0x0
_ZTIN2kc19impl_ac_declarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_ac_declarationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc19impl_ac_declarationE, 24

	.type	_ZTSN2kc19impl_ac_declarationE,@object # @_ZTSN2kc19impl_ac_declarationE
	.section	.rodata._ZTSN2kc19impl_ac_declarationE,"aG",@progbits,_ZTSN2kc19impl_ac_declarationE,comdat
	.weak	_ZTSN2kc19impl_ac_declarationE
_ZTSN2kc19impl_ac_declarationE:
	.asciz	"N2kc19impl_ac_declarationE"
	.size	_ZTSN2kc19impl_ac_declarationE, 27

	.type	_ZTIN2kc24impl_ac_declaration_listE,@object # @_ZTIN2kc24impl_ac_declaration_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_ac_declaration_listE
	.p2align	3, 0x0
_ZTIN2kc24impl_ac_declaration_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_ac_declaration_listE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc24impl_ac_declaration_listE, 24

	.type	_ZTSN2kc24impl_ac_declaration_listE,@object # @_ZTSN2kc24impl_ac_declaration_listE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_ac_declaration_listE
_ZTSN2kc24impl_ac_declaration_listE:
	.asciz	"N2kc24impl_ac_declaration_listE"
	.size	_ZTSN2kc24impl_ac_declaration_listE, 32

	.type	_ZTIN2kc26impl_patternrepresentationE,@object # @_ZTIN2kc26impl_patternrepresentationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc26impl_patternrepresentationE
	.p2align	3, 0x0
_ZTIN2kc26impl_patternrepresentationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc26impl_patternrepresentationE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc26impl_patternrepresentationE, 24

	.type	_ZTSN2kc26impl_patternrepresentationE,@object # @_ZTSN2kc26impl_patternrepresentationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc26impl_patternrepresentationE
_ZTSN2kc26impl_patternrepresentationE:
	.asciz	"N2kc26impl_patternrepresentationE"
	.size	_ZTSN2kc26impl_patternrepresentationE, 34

	.type	_ZTIN2kc18impl_unparseclauseE,@object # @_ZTIN2kc18impl_unparseclauseE
	.section	.data.rel.ro._ZTIN2kc18impl_unparseclauseE,"awG",@progbits,_ZTIN2kc18impl_unparseclauseE,comdat
	.weak	_ZTIN2kc18impl_unparseclauseE
	.p2align	3, 0x0
_ZTIN2kc18impl_unparseclauseE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_unparseclauseE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_unparseclauseE, 24

	.type	_ZTSN2kc18impl_unparseclauseE,@object # @_ZTSN2kc18impl_unparseclauseE
	.section	.rodata._ZTSN2kc18impl_unparseclauseE,"aG",@progbits,_ZTSN2kc18impl_unparseclauseE,comdat
	.weak	_ZTSN2kc18impl_unparseclauseE
_ZTSN2kc18impl_unparseclauseE:
	.asciz	"N2kc18impl_unparseclauseE"
	.size	_ZTSN2kc18impl_unparseclauseE, 26

	.type	_ZTIN2kc20impl_unparsedeclinfoE,@object # @_ZTIN2kc20impl_unparsedeclinfoE
	.section	.data.rel.ro._ZTIN2kc20impl_unparsedeclinfoE,"awG",@progbits,_ZTIN2kc20impl_unparsedeclinfoE,comdat
	.weak	_ZTIN2kc20impl_unparsedeclinfoE
	.p2align	3, 0x0
_ZTIN2kc20impl_unparsedeclinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_unparsedeclinfoE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc20impl_unparsedeclinfoE, 24

	.type	_ZTSN2kc20impl_unparsedeclinfoE,@object # @_ZTSN2kc20impl_unparsedeclinfoE
	.section	.rodata._ZTSN2kc20impl_unparsedeclinfoE,"aG",@progbits,_ZTSN2kc20impl_unparsedeclinfoE,comdat
	.weak	_ZTSN2kc20impl_unparsedeclinfoE
_ZTSN2kc20impl_unparsedeclinfoE:
	.asciz	"N2kc20impl_unparsedeclinfoE"
	.size	_ZTSN2kc20impl_unparsedeclinfoE, 28

	.type	_ZTIN2kc21impl_unparsedeclsinfoE,@object # @_ZTIN2kc21impl_unparsedeclsinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_unparsedeclsinfoE
	.p2align	3, 0x0
_ZTIN2kc21impl_unparsedeclsinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_unparsedeclsinfoE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc21impl_unparsedeclsinfoE, 24

	.type	_ZTSN2kc21impl_unparsedeclsinfoE,@object # @_ZTSN2kc21impl_unparsedeclsinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_unparsedeclsinfoE
_ZTSN2kc21impl_unparsedeclsinfoE:
	.asciz	"N2kc21impl_unparsedeclsinfoE"
	.size	_ZTSN2kc21impl_unparsedeclsinfoE, 29

	.type	_ZTIN2kc20impl_unparseviewinfoE,@object # @_ZTIN2kc20impl_unparseviewinfoE
	.section	.data.rel.ro._ZTIN2kc20impl_unparseviewinfoE,"awG",@progbits,_ZTIN2kc20impl_unparseviewinfoE,comdat
	.weak	_ZTIN2kc20impl_unparseviewinfoE
	.p2align	3, 0x0
_ZTIN2kc20impl_unparseviewinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_unparseviewinfoE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc20impl_unparseviewinfoE, 24

	.type	_ZTSN2kc20impl_unparseviewinfoE,@object # @_ZTSN2kc20impl_unparseviewinfoE
	.section	.rodata._ZTSN2kc20impl_unparseviewinfoE,"aG",@progbits,_ZTSN2kc20impl_unparseviewinfoE,comdat
	.weak	_ZTSN2kc20impl_unparseviewinfoE
_ZTSN2kc20impl_unparseviewinfoE:
	.asciz	"N2kc20impl_unparseviewinfoE"
	.size	_ZTSN2kc20impl_unparseviewinfoE, 28

	.type	_ZTIN2kc21impl_unparseviewsinfoE,@object # @_ZTIN2kc21impl_unparseviewsinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_unparseviewsinfoE
	.p2align	3, 0x0
_ZTIN2kc21impl_unparseviewsinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_unparseviewsinfoE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc21impl_unparseviewsinfoE, 24

	.type	_ZTSN2kc21impl_unparseviewsinfoE,@object # @_ZTSN2kc21impl_unparseviewsinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_unparseviewsinfoE
_ZTSN2kc21impl_unparseviewsinfoE:
	.asciz	"N2kc21impl_unparseviewsinfoE"
	.size	_ZTSN2kc21impl_unparseviewsinfoE, 29

	.type	_ZTIN2kc21impl_rewriterulesinfoE,@object # @_ZTIN2kc21impl_rewriterulesinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_rewriterulesinfoE
	.p2align	3, 0x0
_ZTIN2kc21impl_rewriterulesinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_rewriterulesinfoE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc21impl_rewriterulesinfoE, 24

	.type	_ZTSN2kc21impl_rewriterulesinfoE,@object # @_ZTSN2kc21impl_rewriterulesinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_rewriterulesinfoE
_ZTSN2kc21impl_rewriterulesinfoE:
	.asciz	"N2kc21impl_rewriterulesinfoE"
	.size	_ZTSN2kc21impl_rewriterulesinfoE, 29

	.type	_ZTIN2kc20impl_rewriteviewinfoE,@object # @_ZTIN2kc20impl_rewriteviewinfoE
	.section	.data.rel.ro._ZTIN2kc20impl_rewriteviewinfoE,"awG",@progbits,_ZTIN2kc20impl_rewriteviewinfoE,comdat
	.weak	_ZTIN2kc20impl_rewriteviewinfoE
	.p2align	3, 0x0
_ZTIN2kc20impl_rewriteviewinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_rewriteviewinfoE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc20impl_rewriteviewinfoE, 24

	.type	_ZTSN2kc20impl_rewriteviewinfoE,@object # @_ZTSN2kc20impl_rewriteviewinfoE
	.section	.rodata._ZTSN2kc20impl_rewriteviewinfoE,"aG",@progbits,_ZTSN2kc20impl_rewriteviewinfoE,comdat
	.weak	_ZTSN2kc20impl_rewriteviewinfoE
_ZTSN2kc20impl_rewriteviewinfoE:
	.asciz	"N2kc20impl_rewriteviewinfoE"
	.size	_ZTSN2kc20impl_rewriteviewinfoE, 28

	.type	_ZTIN2kc21impl_rewriteviewsinfoE,@object # @_ZTIN2kc21impl_rewriteviewsinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_rewriteviewsinfoE
	.p2align	3, 0x0
_ZTIN2kc21impl_rewriteviewsinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_rewriteviewsinfoE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc21impl_rewriteviewsinfoE, 24

	.type	_ZTSN2kc21impl_rewriteviewsinfoE,@object # @_ZTSN2kc21impl_rewriteviewsinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_rewriteviewsinfoE
_ZTSN2kc21impl_rewriteviewsinfoE:
	.asciz	"N2kc21impl_rewriteviewsinfoE"
	.size	_ZTSN2kc21impl_rewriteviewsinfoE, 29

	.type	_ZTIN2kc10impl_CtextE,@object   # @_ZTIN2kc10impl_CtextE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc10impl_CtextE
	.p2align	3, 0x0
_ZTIN2kc10impl_CtextE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc10impl_CtextE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc10impl_CtextE, 24

	.type	_ZTSN2kc10impl_CtextE,@object   # @_ZTSN2kc10impl_CtextE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc10impl_CtextE
_ZTSN2kc10impl_CtextE:
	.asciz	"N2kc10impl_CtextE"
	.size	_ZTSN2kc10impl_CtextE, 18

	.type	_ZTIN2kc17impl_withcaseinfoE,@object # @_ZTIN2kc17impl_withcaseinfoE
	.section	.data.rel.ro._ZTIN2kc17impl_withcaseinfoE,"awG",@progbits,_ZTIN2kc17impl_withcaseinfoE,comdat
	.weak	_ZTIN2kc17impl_withcaseinfoE
	.p2align	3, 0x0
_ZTIN2kc17impl_withcaseinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc17impl_withcaseinfoE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc17impl_withcaseinfoE, 24

	.type	_ZTSN2kc17impl_withcaseinfoE,@object # @_ZTSN2kc17impl_withcaseinfoE
	.section	.rodata._ZTSN2kc17impl_withcaseinfoE,"aG",@progbits,_ZTSN2kc17impl_withcaseinfoE,comdat
	.weak	_ZTSN2kc17impl_withcaseinfoE
_ZTSN2kc17impl_withcaseinfoE:
	.asciz	"N2kc17impl_withcaseinfoE"
	.size	_ZTSN2kc17impl_withcaseinfoE, 25

	.type	_ZTIN2kc18impl_withcasesinfoE,@object # @_ZTIN2kc18impl_withcasesinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc18impl_withcasesinfoE
	.p2align	3, 0x0
_ZTIN2kc18impl_withcasesinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_withcasesinfoE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc18impl_withcasesinfoE, 24

	.type	_ZTSN2kc18impl_withcasesinfoE,@object # @_ZTSN2kc18impl_withcasesinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc18impl_withcasesinfoE
_ZTSN2kc18impl_withcasesinfoE:
	.asciz	"N2kc18impl_withcasesinfoE"
	.size	_ZTSN2kc18impl_withcasesinfoE, 26

	.type	_ZTIN2kc18impl_rewriteclauseE,@object # @_ZTIN2kc18impl_rewriteclauseE
	.section	.data.rel.ro._ZTIN2kc18impl_rewriteclauseE,"awG",@progbits,_ZTIN2kc18impl_rewriteclauseE,comdat
	.weak	_ZTIN2kc18impl_rewriteclauseE
	.p2align	3, 0x0
_ZTIN2kc18impl_rewriteclauseE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_rewriteclauseE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_rewriteclauseE, 24

	.type	_ZTSN2kc18impl_rewriteclauseE,@object # @_ZTSN2kc18impl_rewriteclauseE
	.section	.rodata._ZTSN2kc18impl_rewriteclauseE,"aG",@progbits,_ZTSN2kc18impl_rewriteclauseE,comdat
	.weak	_ZTSN2kc18impl_rewriteclauseE
_ZTSN2kc18impl_rewriteclauseE:
	.asciz	"N2kc18impl_rewriteclauseE"
	.size	_ZTSN2kc18impl_rewriteclauseE, 26

	.type	_ZTIN2kc20impl_rewriteruleinfoE,@object # @_ZTIN2kc20impl_rewriteruleinfoE
	.section	.data.rel.ro._ZTIN2kc20impl_rewriteruleinfoE,"awG",@progbits,_ZTIN2kc20impl_rewriteruleinfoE,comdat
	.weak	_ZTIN2kc20impl_rewriteruleinfoE
	.p2align	3, 0x0
_ZTIN2kc20impl_rewriteruleinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_rewriteruleinfoE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc20impl_rewriteruleinfoE, 24

	.type	_ZTSN2kc20impl_rewriteruleinfoE,@object # @_ZTSN2kc20impl_rewriteruleinfoE
	.section	.rodata._ZTSN2kc20impl_rewriteruleinfoE,"aG",@progbits,_ZTSN2kc20impl_rewriteruleinfoE,comdat
	.weak	_ZTSN2kc20impl_rewriteruleinfoE
_ZTSN2kc20impl_rewriteruleinfoE:
	.asciz	"N2kc20impl_rewriteruleinfoE"
	.size	_ZTSN2kc20impl_rewriteruleinfoE, 28

	.type	_ZTIN2kc16impl_argsnumbersE,@object # @_ZTIN2kc16impl_argsnumbersE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc16impl_argsnumbersE
	.p2align	3, 0x0
_ZTIN2kc16impl_argsnumbersE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc16impl_argsnumbersE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc16impl_argsnumbersE, 24

	.type	_ZTSN2kc16impl_argsnumbersE,@object # @_ZTSN2kc16impl_argsnumbersE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc16impl_argsnumbersE
_ZTSN2kc16impl_argsnumbersE:
	.asciz	"N2kc16impl_argsnumbersE"
	.size	_ZTSN2kc16impl_argsnumbersE, 24

	.type	_ZTIN2kc9impl_pathE,@object     # @_ZTIN2kc9impl_pathE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc9impl_pathE
	.p2align	3, 0x0
_ZTIN2kc9impl_pathE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc9impl_pathE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc9impl_pathE, 24

	.type	_ZTSN2kc9impl_pathE,@object     # @_ZTSN2kc9impl_pathE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc9impl_pathE
_ZTSN2kc9impl_pathE:
	.asciz	"N2kc9impl_pathE"
	.size	_ZTSN2kc9impl_pathE, 16

	.type	_ZTIN2kc10impl_pathsE,@object   # @_ZTIN2kc10impl_pathsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc10impl_pathsE
	.p2align	3, 0x0
_ZTIN2kc10impl_pathsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc10impl_pathsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc10impl_pathsE, 24

	.type	_ZTSN2kc10impl_pathsE,@object   # @_ZTSN2kc10impl_pathsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc10impl_pathsE
_ZTSN2kc10impl_pathsE:
	.asciz	"N2kc10impl_pathsE"
	.size	_ZTSN2kc10impl_pathsE, 18

	.type	_ZTIN2kc18impl_CexpressionDQE,@object # @_ZTIN2kc18impl_CexpressionDQE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc18impl_CexpressionDQE
	.p2align	3, 0x0
_ZTIN2kc18impl_CexpressionDQE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_CexpressionDQE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc18impl_CexpressionDQE, 24

	.type	_ZTSN2kc18impl_CexpressionDQE,@object # @_ZTSN2kc18impl_CexpressionDQE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc18impl_CexpressionDQE
_ZTSN2kc18impl_CexpressionDQE:
	.asciz	"N2kc18impl_CexpressionDQE"
	.size	_ZTSN2kc18impl_CexpressionDQE, 26

	.type	_ZTIN2kc31impl_elem_patternrepresentationE,@object # @_ZTIN2kc31impl_elem_patternrepresentationE
	.section	.data.rel.ro._ZTIN2kc31impl_elem_patternrepresentationE,"awG",@progbits,_ZTIN2kc31impl_elem_patternrepresentationE,comdat
	.weak	_ZTIN2kc31impl_elem_patternrepresentationE
	.p2align	3, 0x0
_ZTIN2kc31impl_elem_patternrepresentationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc31impl_elem_patternrepresentationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc31impl_elem_patternrepresentationE, 24

	.type	_ZTSN2kc31impl_elem_patternrepresentationE,@object # @_ZTSN2kc31impl_elem_patternrepresentationE
	.section	.rodata._ZTSN2kc31impl_elem_patternrepresentationE,"aG",@progbits,_ZTSN2kc31impl_elem_patternrepresentationE,comdat
	.weak	_ZTSN2kc31impl_elem_patternrepresentationE
_ZTSN2kc31impl_elem_patternrepresentationE:
	.asciz	"N2kc31impl_elem_patternrepresentationE"
	.size	_ZTSN2kc31impl_elem_patternrepresentationE, 39

	.type	_ZTIN2kc27impl_patternrepresentationsE,@object # @_ZTIN2kc27impl_patternrepresentationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc27impl_patternrepresentationsE
	.p2align	3, 0x0
_ZTIN2kc27impl_patternrepresentationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_patternrepresentationsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc27impl_patternrepresentationsE, 24

	.type	_ZTSN2kc27impl_patternrepresentationsE,@object # @_ZTSN2kc27impl_patternrepresentationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc27impl_patternrepresentationsE
_ZTSN2kc27impl_patternrepresentationsE:
	.asciz	"N2kc27impl_patternrepresentationsE"
	.size	_ZTSN2kc27impl_patternrepresentationsE, 35

	.type	_ZTIN2kc14impl_variablesE,@object # @_ZTIN2kc14impl_variablesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc14impl_variablesE
	.p2align	3, 0x0
_ZTIN2kc14impl_variablesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc14impl_variablesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc14impl_variablesE, 24

	.type	_ZTSN2kc14impl_variablesE,@object # @_ZTSN2kc14impl_variablesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc14impl_variablesE
_ZTSN2kc14impl_variablesE:
	.asciz	"N2kc14impl_variablesE"
	.size	_ZTSN2kc14impl_variablesE, 22

	.type	_ZTIN2kc10impl_phylaE,@object   # @_ZTIN2kc10impl_phylaE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc10impl_phylaE
	.p2align	3, 0x0
_ZTIN2kc10impl_phylaE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc10impl_phylaE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc10impl_phylaE, 24

	.type	_ZTSN2kc10impl_phylaE,@object   # @_ZTSN2kc10impl_phylaE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc10impl_phylaE
_ZTSN2kc10impl_phylaE:
	.asciz	"N2kc10impl_phylaE"
	.size	_ZTSN2kc10impl_phylaE, 18

	.type	_ZTIN2kc14impl_operatorsE,@object # @_ZTIN2kc14impl_operatorsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc14impl_operatorsE
	.p2align	3, 0x0
_ZTIN2kc14impl_operatorsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc14impl_operatorsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc14impl_operatorsE, 24

	.type	_ZTSN2kc14impl_operatorsE,@object # @_ZTSN2kc14impl_operatorsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc14impl_operatorsE
_ZTSN2kc14impl_operatorsE:
	.asciz	"N2kc14impl_operatorsE"
	.size	_ZTSN2kc14impl_operatorsE, 22

	.type	_ZTIN2kc12impl_fnclassE,@object # @_ZTIN2kc12impl_fnclassE
	.section	.data.rel.ro._ZTIN2kc12impl_fnclassE,"awG",@progbits,_ZTIN2kc12impl_fnclassE,comdat
	.weak	_ZTIN2kc12impl_fnclassE
	.p2align	3, 0x0
_ZTIN2kc12impl_fnclassE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc12impl_fnclassE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc12impl_fnclassE, 24

	.type	_ZTSN2kc12impl_fnclassE,@object # @_ZTSN2kc12impl_fnclassE
	.section	.rodata._ZTSN2kc12impl_fnclassE,"aG",@progbits,_ZTSN2kc12impl_fnclassE,comdat
	.weak	_ZTSN2kc12impl_fnclassE
_ZTSN2kc12impl_fnclassE:
	.asciz	"N2kc12impl_fnclassE"
	.size	_ZTSN2kc12impl_fnclassE, 20

	.type	_ZTIN2kc16impl_alternativeE,@object # @_ZTIN2kc16impl_alternativeE
	.section	.data.rel.ro._ZTIN2kc16impl_alternativeE,"awG",@progbits,_ZTIN2kc16impl_alternativeE,comdat
	.weak	_ZTIN2kc16impl_alternativeE
	.p2align	3, 0x0
_ZTIN2kc16impl_alternativeE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc16impl_alternativeE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc16impl_alternativeE, 24

	.type	_ZTSN2kc16impl_alternativeE,@object # @_ZTSN2kc16impl_alternativeE
	.section	.rodata._ZTSN2kc16impl_alternativeE,"aG",@progbits,_ZTSN2kc16impl_alternativeE,comdat
	.weak	_ZTSN2kc16impl_alternativeE
_ZTSN2kc16impl_alternativeE:
	.asciz	"N2kc16impl_alternativeE"
	.size	_ZTSN2kc16impl_alternativeE, 24

	.type	_ZTIN2kc22impl_phylumdeclarationE,@object # @_ZTIN2kc22impl_phylumdeclarationE
	.section	.data.rel.ro._ZTIN2kc22impl_phylumdeclarationE,"awG",@progbits,_ZTIN2kc22impl_phylumdeclarationE,comdat
	.weak	_ZTIN2kc22impl_phylumdeclarationE
	.p2align	3, 0x0
_ZTIN2kc22impl_phylumdeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_phylumdeclarationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc22impl_phylumdeclarationE, 24

	.type	_ZTSN2kc22impl_phylumdeclarationE,@object # @_ZTSN2kc22impl_phylumdeclarationE
	.section	.rodata._ZTSN2kc22impl_phylumdeclarationE,"aG",@progbits,_ZTSN2kc22impl_phylumdeclarationE,comdat
	.weak	_ZTSN2kc22impl_phylumdeclarationE
_ZTSN2kc22impl_phylumdeclarationE:
	.asciz	"N2kc22impl_phylumdeclarationE"
	.size	_ZTSN2kc22impl_phylumdeclarationE, 30

	.type	_ZTIN2kc22impl_scopetypefilelineE,@object # @_ZTIN2kc22impl_scopetypefilelineE
	.section	.data.rel.ro._ZTIN2kc22impl_scopetypefilelineE,"awG",@progbits,_ZTIN2kc22impl_scopetypefilelineE,comdat
	.weak	_ZTIN2kc22impl_scopetypefilelineE
	.p2align	3, 0x0
_ZTIN2kc22impl_scopetypefilelineE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_scopetypefilelineE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc22impl_scopetypefilelineE, 24

	.type	_ZTSN2kc22impl_scopetypefilelineE,@object # @_ZTSN2kc22impl_scopetypefilelineE
	.section	.rodata._ZTSN2kc22impl_scopetypefilelineE,"aG",@progbits,_ZTSN2kc22impl_scopetypefilelineE,comdat
	.weak	_ZTSN2kc22impl_scopetypefilelineE
_ZTSN2kc22impl_scopetypefilelineE:
	.asciz	"N2kc22impl_scopetypefilelineE"
	.size	_ZTSN2kc22impl_scopetypefilelineE, 30

	.type	_ZTIN2kc27impl_scopetypefilelinestackE,@object # @_ZTIN2kc27impl_scopetypefilelinestackE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc27impl_scopetypefilelinestackE
	.p2align	3, 0x0
_ZTIN2kc27impl_scopetypefilelinestackE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_scopetypefilelinestackE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc27impl_scopetypefilelinestackE, 24

	.type	_ZTSN2kc27impl_scopetypefilelinestackE,@object # @_ZTSN2kc27impl_scopetypefilelinestackE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc27impl_scopetypefilelinestackE
_ZTSN2kc27impl_scopetypefilelinestackE:
	.asciz	"N2kc27impl_scopetypefilelinestackE"
	.size	_ZTSN2kc27impl_scopetypefilelinestackE, 35

	.type	_ZTIN2kc18impl_languagenamesE,@object # @_ZTIN2kc18impl_languagenamesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc18impl_languagenamesE
	.p2align	3, 0x0
_ZTIN2kc18impl_languagenamesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_languagenamesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc18impl_languagenamesE, 24

	.type	_ZTSN2kc18impl_languagenamesE,@object # @_ZTSN2kc18impl_languagenamesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc18impl_languagenamesE
_ZTSN2kc18impl_languagenamesE:
	.asciz	"N2kc18impl_languagenamesE"
	.size	_ZTSN2kc18impl_languagenamesE, 26

	.type	_ZTIN2kc18impl_unpattributesE,@object # @_ZTIN2kc18impl_unpattributesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc18impl_unpattributesE
	.p2align	3, 0x0
_ZTIN2kc18impl_unpattributesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_unpattributesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc18impl_unpattributesE, 24

	.type	_ZTSN2kc18impl_unpattributesE,@object # @_ZTSN2kc18impl_unpattributesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc18impl_unpattributesE
_ZTSN2kc18impl_unpattributesE:
	.asciz	"N2kc18impl_unpattributesE"
	.size	_ZTSN2kc18impl_unpattributesE, 26

	.type	_ZTIN2kc19impl_languageoptionE,@object # @_ZTIN2kc19impl_languageoptionE
	.section	.data.rel.ro._ZTIN2kc19impl_languageoptionE,"awG",@progbits,_ZTIN2kc19impl_languageoptionE,comdat
	.weak	_ZTIN2kc19impl_languageoptionE
	.p2align	3, 0x0
_ZTIN2kc19impl_languageoptionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_languageoptionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc19impl_languageoptionE, 24

	.type	_ZTSN2kc19impl_languageoptionE,@object # @_ZTSN2kc19impl_languageoptionE
	.section	.rodata._ZTSN2kc19impl_languageoptionE,"aG",@progbits,_ZTSN2kc19impl_languageoptionE,comdat
	.weak	_ZTSN2kc19impl_languageoptionE
_ZTSN2kc19impl_languageoptionE:
	.asciz	"N2kc19impl_languageoptionE"
	.size	_ZTSN2kc19impl_languageoptionE, 27

	.type	_ZTIN2kc17impl_unparseitemsE,@object # @_ZTIN2kc17impl_unparseitemsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc17impl_unparseitemsE
	.p2align	3, 0x0
_ZTIN2kc17impl_unparseitemsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc17impl_unparseitemsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc17impl_unparseitemsE, 24

	.type	_ZTSN2kc17impl_unparseitemsE,@object # @_ZTSN2kc17impl_unparseitemsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc17impl_unparseitemsE
_ZTSN2kc17impl_unparseitemsE:
	.asciz	"N2kc17impl_unparseitemsE"
	.size	_ZTSN2kc17impl_unparseitemsE, 25

	.type	_ZTIN2kc15impl_unpsubtermE,@object # @_ZTIN2kc15impl_unpsubtermE
	.section	.data.rel.ro._ZTIN2kc15impl_unpsubtermE,"awG",@progbits,_ZTIN2kc15impl_unpsubtermE,comdat
	.weak	_ZTIN2kc15impl_unpsubtermE
	.p2align	3, 0x0
_ZTIN2kc15impl_unpsubtermE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc15impl_unpsubtermE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc15impl_unpsubtermE, 24

	.type	_ZTSN2kc15impl_unpsubtermE,@object # @_ZTSN2kc15impl_unpsubtermE
	.section	.rodata._ZTSN2kc15impl_unpsubtermE,"aG",@progbits,_ZTSN2kc15impl_unpsubtermE,comdat
	.weak	_ZTSN2kc15impl_unpsubtermE
_ZTSN2kc15impl_unpsubtermE:
	.asciz	"N2kc15impl_unpsubtermE"
	.size	_ZTSN2kc15impl_unpsubtermE, 23

	.type	_ZTIN2kc19impl_viewnameoptionE,@object # @_ZTIN2kc19impl_viewnameoptionE
	.section	.data.rel.ro._ZTIN2kc19impl_viewnameoptionE,"awG",@progbits,_ZTIN2kc19impl_viewnameoptionE,comdat
	.weak	_ZTIN2kc19impl_viewnameoptionE
	.p2align	3, 0x0
_ZTIN2kc19impl_viewnameoptionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_viewnameoptionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc19impl_viewnameoptionE, 24

	.type	_ZTSN2kc19impl_viewnameoptionE,@object # @_ZTSN2kc19impl_viewnameoptionE
	.section	.rodata._ZTSN2kc19impl_viewnameoptionE,"aG",@progbits,_ZTSN2kc19impl_viewnameoptionE,comdat
	.weak	_ZTSN2kc19impl_viewnameoptionE
_ZTSN2kc19impl_viewnameoptionE:
	.asciz	"N2kc19impl_viewnameoptionE"
	.size	_ZTSN2kc19impl_viewnameoptionE, 27

	.type	_ZTIN2kc16impl_unparseitemE,@object # @_ZTIN2kc16impl_unparseitemE
	.section	.data.rel.ro._ZTIN2kc16impl_unparseitemE,"awG",@progbits,_ZTIN2kc16impl_unparseitemE,comdat
	.weak	_ZTIN2kc16impl_unparseitemE
	.p2align	3, 0x0
_ZTIN2kc16impl_unparseitemE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc16impl_unparseitemE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc16impl_unparseitemE, 24

	.type	_ZTSN2kc16impl_unparseitemE,@object # @_ZTSN2kc16impl_unparseitemE
	.section	.rodata._ZTSN2kc16impl_unparseitemE,"aG",@progbits,_ZTSN2kc16impl_unparseitemE,comdat
	.weak	_ZTSN2kc16impl_unparseitemE
_ZTSN2kc16impl_unparseitemE:
	.asciz	"N2kc16impl_unparseitemE"
	.size	_ZTSN2kc16impl_unparseitemE, 24

	.type	_ZTIN2kc14impl_viewnamesE,@object # @_ZTIN2kc14impl_viewnamesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc14impl_viewnamesE
	.p2align	3, 0x0
_ZTIN2kc14impl_viewnamesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc14impl_viewnamesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc14impl_viewnamesE, 24

	.type	_ZTSN2kc14impl_viewnamesE,@object # @_ZTSN2kc14impl_viewnamesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc14impl_viewnamesE
_ZTSN2kc14impl_viewnamesE:
	.asciz	"N2kc14impl_viewnamesE"
	.size	_ZTSN2kc14impl_viewnamesE, 22

	.type	_ZTIN2kc19impl_unparseclausesE,@object # @_ZTIN2kc19impl_unparseclausesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_unparseclausesE
	.p2align	3, 0x0
_ZTIN2kc19impl_unparseclausesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_unparseclausesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc19impl_unparseclausesE, 24

	.type	_ZTSN2kc19impl_unparseclausesE,@object # @_ZTSN2kc19impl_unparseclausesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_unparseclausesE
_ZTSN2kc19impl_unparseclausesE:
	.asciz	"N2kc19impl_unparseclausesE"
	.size	_ZTSN2kc19impl_unparseclausesE, 27

	.type	_ZTIN2kc20impl_outmostpatternsE,@object # @_ZTIN2kc20impl_outmostpatternsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc20impl_outmostpatternsE
	.p2align	3, 0x0
_ZTIN2kc20impl_outmostpatternsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_outmostpatternsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc20impl_outmostpatternsE, 24

	.type	_ZTSN2kc20impl_outmostpatternsE,@object # @_ZTSN2kc20impl_outmostpatternsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc20impl_outmostpatternsE
_ZTSN2kc20impl_outmostpatternsE:
	.asciz	"N2kc20impl_outmostpatternsE"
	.size	_ZTSN2kc20impl_outmostpatternsE, 28

	.type	_ZTIN2kc23impl_unparsedeclarationE,@object # @_ZTIN2kc23impl_unparsedeclarationE
	.section	.data.rel.ro._ZTIN2kc23impl_unparsedeclarationE,"awG",@progbits,_ZTIN2kc23impl_unparsedeclarationE,comdat
	.weak	_ZTIN2kc23impl_unparsedeclarationE
	.p2align	3, 0x0
_ZTIN2kc23impl_unparsedeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_unparsedeclarationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc23impl_unparsedeclarationE, 24

	.type	_ZTSN2kc23impl_unparsedeclarationE,@object # @_ZTSN2kc23impl_unparsedeclarationE
	.section	.rodata._ZTSN2kc23impl_unparsedeclarationE,"aG",@progbits,_ZTSN2kc23impl_unparsedeclarationE,comdat
	.weak	_ZTSN2kc23impl_unparsedeclarationE
_ZTSN2kc23impl_unparsedeclarationE:
	.asciz	"N2kc23impl_unparsedeclarationE"
	.size	_ZTSN2kc23impl_unparsedeclarationE, 31

	.type	_ZTIN2kc24impl_unparsedeclarationsE,@object # @_ZTIN2kc24impl_unparsedeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_unparsedeclarationsE
	.p2align	3, 0x0
_ZTIN2kc24impl_unparsedeclarationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_unparsedeclarationsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc24impl_unparsedeclarationsE, 24

	.type	_ZTSN2kc24impl_unparsedeclarationsE,@object # @_ZTSN2kc24impl_unparsedeclarationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_unparsedeclarationsE
_ZTSN2kc24impl_unparsedeclarationsE:
	.asciz	"N2kc24impl_unparsedeclarationsE"
	.size	_ZTSN2kc24impl_unparsedeclarationsE, 32

	.type	_ZTIN2kc18impl_patternchainsE,@object # @_ZTIN2kc18impl_patternchainsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc18impl_patternchainsE
	.p2align	3, 0x0
_ZTIN2kc18impl_patternchainsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_patternchainsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc18impl_patternchainsE, 24

	.type	_ZTSN2kc18impl_patternchainsE,@object # @_ZTSN2kc18impl_patternchainsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc18impl_patternchainsE
_ZTSN2kc18impl_patternchainsE:
	.asciz	"N2kc18impl_patternchainsE"
	.size	_ZTSN2kc18impl_patternchainsE, 26

	.type	_ZTIN2kc13impl_withcaseE,@object # @_ZTIN2kc13impl_withcaseE
	.section	.data.rel.ro._ZTIN2kc13impl_withcaseE,"awG",@progbits,_ZTIN2kc13impl_withcaseE,comdat
	.weak	_ZTIN2kc13impl_withcaseE
	.p2align	3, 0x0
_ZTIN2kc13impl_withcaseE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc13impl_withcaseE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc13impl_withcaseE, 24

	.type	_ZTSN2kc13impl_withcaseE,@object # @_ZTSN2kc13impl_withcaseE
	.section	.rodata._ZTSN2kc13impl_withcaseE,"aG",@progbits,_ZTSN2kc13impl_withcaseE,comdat
	.weak	_ZTSN2kc13impl_withcaseE
_ZTSN2kc13impl_withcaseE:
	.asciz	"N2kc13impl_withcaseE"
	.size	_ZTSN2kc13impl_withcaseE, 21

	.type	_ZTIN2kc14impl_withcasesE,@object # @_ZTIN2kc14impl_withcasesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc14impl_withcasesE
	.p2align	3, 0x0
_ZTIN2kc14impl_withcasesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc14impl_withcasesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc14impl_withcasesE, 24

	.type	_ZTSN2kc14impl_withcasesE,@object # @_ZTSN2kc14impl_withcasesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc14impl_withcasesE
_ZTSN2kc14impl_withcasesE:
	.asciz	"N2kc14impl_withcasesE"
	.size	_ZTSN2kc14impl_withcasesE, 22

	.type	_ZTIN2kc20impl_withexpressionsE,@object # @_ZTIN2kc20impl_withexpressionsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc20impl_withexpressionsE
	.p2align	3, 0x0
_ZTIN2kc20impl_withexpressionsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_withexpressionsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc20impl_withexpressionsE, 24

	.type	_ZTSN2kc20impl_withexpressionsE,@object # @_ZTSN2kc20impl_withexpressionsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc20impl_withexpressionsE
_ZTSN2kc20impl_withexpressionsE:
	.asciz	"N2kc20impl_withexpressionsE"
	.size	_ZTSN2kc20impl_withexpressionsE, 28

	.type	_ZTIN2kc17impl_patternchainE,@object # @_ZTIN2kc17impl_patternchainE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc17impl_patternchainE
	.p2align	3, 0x0
_ZTIN2kc17impl_patternchainE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc17impl_patternchainE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc17impl_patternchainE, 24

	.type	_ZTSN2kc17impl_patternchainE,@object # @_ZTSN2kc17impl_patternchainE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc17impl_patternchainE
_ZTSN2kc17impl_patternchainE:
	.asciz	"N2kc17impl_patternchainE"
	.size	_ZTSN2kc17impl_patternchainE, 25

	.type	_ZTIN2kc19impl_idCexpressionsE,@object # @_ZTIN2kc19impl_idCexpressionsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_idCexpressionsE
	.p2align	3, 0x0
_ZTIN2kc19impl_idCexpressionsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_idCexpressionsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc19impl_idCexpressionsE, 24

	.type	_ZTSN2kc19impl_idCexpressionsE,@object # @_ZTSN2kc19impl_idCexpressionsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_idCexpressionsE
_ZTSN2kc19impl_idCexpressionsE:
	.asciz	"N2kc19impl_idCexpressionsE"
	.size	_ZTSN2kc19impl_idCexpressionsE, 27

	.type	_ZTIN2kc16impl_contextinfoE,@object # @_ZTIN2kc16impl_contextinfoE
	.section	.data.rel.ro._ZTIN2kc16impl_contextinfoE,"awG",@progbits,_ZTIN2kc16impl_contextinfoE,comdat
	.weak	_ZTIN2kc16impl_contextinfoE
	.p2align	3, 0x0
_ZTIN2kc16impl_contextinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc16impl_contextinfoE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc16impl_contextinfoE, 24

	.type	_ZTSN2kc16impl_contextinfoE,@object # @_ZTSN2kc16impl_contextinfoE
	.section	.rodata._ZTSN2kc16impl_contextinfoE,"aG",@progbits,_ZTSN2kc16impl_contextinfoE,comdat
	.weak	_ZTSN2kc16impl_contextinfoE
_ZTSN2kc16impl_contextinfoE:
	.asciz	"N2kc16impl_contextinfoE"
	.size	_ZTSN2kc16impl_contextinfoE, 24

	.type	_ZTIN2kc18impl_foreach_afterE,@object # @_ZTIN2kc18impl_foreach_afterE
	.section	.data.rel.ro._ZTIN2kc18impl_foreach_afterE,"awG",@progbits,_ZTIN2kc18impl_foreach_afterE,comdat
	.weak	_ZTIN2kc18impl_foreach_afterE
	.p2align	3, 0x0
_ZTIN2kc18impl_foreach_afterE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_foreach_afterE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_foreach_afterE, 24

	.type	_ZTSN2kc18impl_foreach_afterE,@object # @_ZTSN2kc18impl_foreach_afterE
	.section	.rodata._ZTSN2kc18impl_foreach_afterE,"aG",@progbits,_ZTSN2kc18impl_foreach_afterE,comdat
	.weak	_ZTSN2kc18impl_foreach_afterE
_ZTSN2kc18impl_foreach_afterE:
	.asciz	"N2kc18impl_foreach_afterE"
	.size	_ZTSN2kc18impl_foreach_afterE, 26

	.type	_ZTIN2kc18impl_CexpressionSQE,@object # @_ZTIN2kc18impl_CexpressionSQE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc18impl_CexpressionSQE
	.p2align	3, 0x0
_ZTIN2kc18impl_CexpressionSQE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_CexpressionSQE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc18impl_CexpressionSQE, 24

	.type	_ZTSN2kc18impl_CexpressionSQE,@object # @_ZTSN2kc18impl_CexpressionSQE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc18impl_CexpressionSQE
_ZTSN2kc18impl_CexpressionSQE:
	.asciz	"N2kc18impl_CexpressionSQE"
	.size	_ZTSN2kc18impl_CexpressionSQE, 26

	.type	_ZTIN2kc15impl_Ctext_elemE,@object # @_ZTIN2kc15impl_Ctext_elemE
	.section	.data.rel.ro._ZTIN2kc15impl_Ctext_elemE,"awG",@progbits,_ZTIN2kc15impl_Ctext_elemE,comdat
	.weak	_ZTIN2kc15impl_Ctext_elemE
	.p2align	3, 0x0
_ZTIN2kc15impl_Ctext_elemE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc15impl_Ctext_elemE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc15impl_Ctext_elemE, 24

	.type	_ZTSN2kc15impl_Ctext_elemE,@object # @_ZTSN2kc15impl_Ctext_elemE
	.section	.rodata._ZTSN2kc15impl_Ctext_elemE,"aG",@progbits,_ZTSN2kc15impl_Ctext_elemE,comdat
	.weak	_ZTSN2kc15impl_Ctext_elemE
_ZTSN2kc15impl_Ctext_elemE:
	.asciz	"N2kc15impl_Ctext_elemE"
	.size	_ZTSN2kc15impl_Ctext_elemE, 23

	.type	_ZTIN2kc26impl_ac_opt_base_init_listE,@object # @_ZTIN2kc26impl_ac_opt_base_init_listE
	.section	.data.rel.ro._ZTIN2kc26impl_ac_opt_base_init_listE,"awG",@progbits,_ZTIN2kc26impl_ac_opt_base_init_listE,comdat
	.weak	_ZTIN2kc26impl_ac_opt_base_init_listE
	.p2align	3, 0x0
_ZTIN2kc26impl_ac_opt_base_init_listE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc26impl_ac_opt_base_init_listE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc26impl_ac_opt_base_init_listE, 24

	.type	_ZTSN2kc26impl_ac_opt_base_init_listE,@object # @_ZTSN2kc26impl_ac_opt_base_init_listE
	.section	.rodata._ZTSN2kc26impl_ac_opt_base_init_listE,"aG",@progbits,_ZTSN2kc26impl_ac_opt_base_init_listE,comdat
	.weak	_ZTSN2kc26impl_ac_opt_base_init_listE
_ZTSN2kc26impl_ac_opt_base_init_listE:
	.asciz	"N2kc26impl_ac_opt_base_init_listE"
	.size	_ZTSN2kc26impl_ac_opt_base_init_listE, 34

	.type	_ZTIN2kc18impl_fndeclarationE,@object # @_ZTIN2kc18impl_fndeclarationE
	.section	.data.rel.ro._ZTIN2kc18impl_fndeclarationE,"awG",@progbits,_ZTIN2kc18impl_fndeclarationE,comdat
	.weak	_ZTIN2kc18impl_fndeclarationE
	.p2align	3, 0x0
_ZTIN2kc18impl_fndeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_fndeclarationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_fndeclarationE, 24

	.type	_ZTSN2kc18impl_fndeclarationE,@object # @_ZTSN2kc18impl_fndeclarationE
	.section	.rodata._ZTSN2kc18impl_fndeclarationE,"aG",@progbits,_ZTSN2kc18impl_fndeclarationE,comdat
	.weak	_ZTSN2kc18impl_fndeclarationE
_ZTSN2kc18impl_fndeclarationE:
	.asciz	"N2kc18impl_fndeclarationE"
	.size	_ZTSN2kc18impl_fndeclarationE, 26

	.type	_ZTIN2kc19impl_fndeclarationsE,@object # @_ZTIN2kc19impl_fndeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_fndeclarationsE
	.p2align	3, 0x0
_ZTIN2kc19impl_fndeclarationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_fndeclarationsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc19impl_fndeclarationsE, 24

	.type	_ZTSN2kc19impl_fndeclarationsE,@object # @_ZTSN2kc19impl_fndeclarationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_fndeclarationsE
_ZTSN2kc19impl_fndeclarationsE:
	.asciz	"N2kc19impl_fndeclarationsE"
	.size	_ZTSN2kc19impl_fndeclarationsE, 27

	.type	_ZTIN2kc11impl_fnfileE,@object  # @_ZTIN2kc11impl_fnfileE
	.section	.data.rel.ro._ZTIN2kc11impl_fnfileE,"awG",@progbits,_ZTIN2kc11impl_fnfileE,comdat
	.weak	_ZTIN2kc11impl_fnfileE
	.p2align	3, 0x0
_ZTIN2kc11impl_fnfileE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc11impl_fnfileE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc11impl_fnfileE, 24

	.type	_ZTSN2kc11impl_fnfileE,@object  # @_ZTSN2kc11impl_fnfileE
	.section	.rodata._ZTSN2kc11impl_fnfileE,"aG",@progbits,_ZTSN2kc11impl_fnfileE,comdat
	.weak	_ZTSN2kc11impl_fnfileE
_ZTSN2kc11impl_fnfileE:
	.asciz	"N2kc11impl_fnfileE"
	.size	_ZTSN2kc11impl_fnfileE, 19

	.type	_ZTIN2kc12impl_fnfilesE,@object # @_ZTIN2kc12impl_fnfilesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc12impl_fnfilesE
	.p2align	3, 0x0
_ZTIN2kc12impl_fnfilesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc12impl_fnfilesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc12impl_fnfilesE, 24

	.type	_ZTSN2kc12impl_fnfilesE,@object # @_ZTSN2kc12impl_fnfilesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc12impl_fnfilesE
_ZTSN2kc12impl_fnfilesE:
	.asciz	"N2kc12impl_fnfilesE"
	.size	_ZTSN2kc12impl_fnfilesE, 20

	.type	_ZTIN2kc9impl_termE,@object     # @_ZTIN2kc9impl_termE
	.section	.data.rel.ro._ZTIN2kc9impl_termE,"awG",@progbits,_ZTIN2kc9impl_termE,comdat
	.weak	_ZTIN2kc9impl_termE
	.p2align	3, 0x0
_ZTIN2kc9impl_termE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc9impl_termE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc9impl_termE, 24

	.type	_ZTSN2kc9impl_termE,@object     # @_ZTSN2kc9impl_termE
	.section	.rodata._ZTSN2kc9impl_termE,"aG",@progbits,_ZTSN2kc9impl_termE,comdat
	.weak	_ZTSN2kc9impl_termE
_ZTSN2kc9impl_termE:
	.asciz	"N2kc9impl_termE"
	.size	_ZTSN2kc9impl_termE, 16

	.type	_ZTIN2kc10impl_termsE,@object   # @_ZTIN2kc10impl_termsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc10impl_termsE
	.p2align	3, 0x0
_ZTIN2kc10impl_termsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc10impl_termsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc10impl_termsE, 24

	.type	_ZTSN2kc10impl_termsE,@object   # @_ZTSN2kc10impl_termsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc10impl_termsE
_ZTSN2kc10impl_termsE:
	.asciz	"N2kc10impl_termsE"
	.size	_ZTSN2kc10impl_termsE, 18

	.type	_ZTIN2kc12impl_patternE,@object # @_ZTIN2kc12impl_patternE
	.section	.data.rel.ro._ZTIN2kc12impl_patternE,"awG",@progbits,_ZTIN2kc12impl_patternE,comdat
	.weak	_ZTIN2kc12impl_patternE
	.p2align	3, 0x0
_ZTIN2kc12impl_patternE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc12impl_patternE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc12impl_patternE, 24

	.type	_ZTSN2kc12impl_patternE,@object # @_ZTSN2kc12impl_patternE
	.section	.rodata._ZTSN2kc12impl_patternE,"aG",@progbits,_ZTSN2kc12impl_patternE,comdat
	.weak	_ZTSN2kc12impl_patternE
_ZTSN2kc12impl_patternE:
	.asciz	"N2kc12impl_patternE"
	.size	_ZTSN2kc12impl_patternE, 20

	.type	_ZTIN2kc13impl_patternsE,@object # @_ZTIN2kc13impl_patternsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc13impl_patternsE
	.p2align	3, 0x0
_ZTIN2kc13impl_patternsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc13impl_patternsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc13impl_patternsE, 24

	.type	_ZTSN2kc13impl_patternsE,@object # @_ZTSN2kc13impl_patternsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc13impl_patternsE
_ZTSN2kc13impl_patternsE:
	.asciz	"N2kc13impl_patternsE"
	.size	_ZTSN2kc13impl_patternsE, 21

	.type	_ZTIN2kc19impl_outmostpatternE,@object # @_ZTIN2kc19impl_outmostpatternE
	.section	.data.rel.ro._ZTIN2kc19impl_outmostpatternE,"awG",@progbits,_ZTIN2kc19impl_outmostpatternE,comdat
	.weak	_ZTIN2kc19impl_outmostpatternE
	.p2align	3, 0x0
_ZTIN2kc19impl_outmostpatternE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_outmostpatternE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc19impl_outmostpatternE, 24

	.type	_ZTSN2kc19impl_outmostpatternE,@object # @_ZTSN2kc19impl_outmostpatternE
	.section	.rodata._ZTSN2kc19impl_outmostpatternE,"aG",@progbits,_ZTSN2kc19impl_outmostpatternE,comdat
	.weak	_ZTSN2kc19impl_outmostpatternE
_ZTSN2kc19impl_outmostpatternE:
	.asciz	"N2kc19impl_outmostpatternE"
	.size	_ZTSN2kc19impl_outmostpatternE, 27

	.type	_ZTIN2kc21impl_patternchainitemE,@object # @_ZTIN2kc21impl_patternchainitemE
	.section	.data.rel.ro._ZTIN2kc21impl_patternchainitemE,"awG",@progbits,_ZTIN2kc21impl_patternchainitemE,comdat
	.weak	_ZTIN2kc21impl_patternchainitemE
	.p2align	3, 0x0
_ZTIN2kc21impl_patternchainitemE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_patternchainitemE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc21impl_patternchainitemE, 24

	.type	_ZTSN2kc21impl_patternchainitemE,@object # @_ZTSN2kc21impl_patternchainitemE
	.section	.rodata._ZTSN2kc21impl_patternchainitemE,"aG",@progbits,_ZTSN2kc21impl_patternchainitemE,comdat
	.weak	_ZTSN2kc21impl_patternchainitemE
_ZTSN2kc21impl_patternchainitemE:
	.asciz	"N2kc21impl_patternchainitemE"
	.size	_ZTSN2kc21impl_patternchainitemE, 29

	.type	_ZTIN2kc19impl_rewriteclausesE,@object # @_ZTIN2kc19impl_rewriteclausesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_rewriteclausesE
	.p2align	3, 0x0
_ZTIN2kc19impl_rewriteclausesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_rewriteclausesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc19impl_rewriteclausesE, 24

	.type	_ZTSN2kc19impl_rewriteclausesE,@object # @_ZTSN2kc19impl_rewriteclausesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_rewriteclausesE
_ZTSN2kc19impl_rewriteclausesE:
	.asciz	"N2kc19impl_rewriteclausesE"
	.size	_ZTSN2kc19impl_rewriteclausesE, 27

	.type	_ZTIN2kc18impl_rwdeclarationE,@object # @_ZTIN2kc18impl_rwdeclarationE
	.section	.data.rel.ro._ZTIN2kc18impl_rwdeclarationE,"awG",@progbits,_ZTIN2kc18impl_rwdeclarationE,comdat
	.weak	_ZTIN2kc18impl_rwdeclarationE
	.p2align	3, 0x0
_ZTIN2kc18impl_rwdeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_rwdeclarationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_rwdeclarationE, 24

	.type	_ZTSN2kc18impl_rwdeclarationE,@object # @_ZTSN2kc18impl_rwdeclarationE
	.section	.rodata._ZTSN2kc18impl_rwdeclarationE,"aG",@progbits,_ZTSN2kc18impl_rwdeclarationE,comdat
	.weak	_ZTSN2kc18impl_rwdeclarationE
_ZTSN2kc18impl_rwdeclarationE:
	.asciz	"N2kc18impl_rwdeclarationE"
	.size	_ZTSN2kc18impl_rwdeclarationE, 26

	.type	_ZTIN2kc19impl_rwdeclarationsE,@object # @_ZTIN2kc19impl_rwdeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_rwdeclarationsE
	.p2align	3, 0x0
_ZTIN2kc19impl_rwdeclarationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_rwdeclarationsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc19impl_rwdeclarationsE, 24

	.type	_ZTSN2kc19impl_rwdeclarationsE,@object # @_ZTSN2kc19impl_rwdeclarationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_rwdeclarationsE
_ZTSN2kc19impl_rwdeclarationsE:
	.asciz	"N2kc19impl_rwdeclarationsE"
	.size	_ZTSN2kc19impl_rwdeclarationsE, 27

	.type	_ZTIN2kc23impl_includedeclarationE,@object # @_ZTIN2kc23impl_includedeclarationE
	.section	.data.rel.ro._ZTIN2kc23impl_includedeclarationE,"awG",@progbits,_ZTIN2kc23impl_includedeclarationE,comdat
	.weak	_ZTIN2kc23impl_includedeclarationE
	.p2align	3, 0x0
_ZTIN2kc23impl_includedeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_includedeclarationE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc23impl_includedeclarationE, 24

	.type	_ZTSN2kc23impl_includedeclarationE,@object # @_ZTSN2kc23impl_includedeclarationE
	.section	.rodata._ZTSN2kc23impl_includedeclarationE,"aG",@progbits,_ZTSN2kc23impl_includedeclarationE,comdat
	.weak	_ZTSN2kc23impl_includedeclarationE
_ZTSN2kc23impl_includedeclarationE:
	.asciz	"N2kc23impl_includedeclarationE"
	.size	_ZTSN2kc23impl_includedeclarationE, 31

	.type	_ZTIN2kc24impl_includedeclarationsE,@object # @_ZTIN2kc24impl_includedeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_includedeclarationsE
	.p2align	3, 0x0
_ZTIN2kc24impl_includedeclarationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_includedeclarationsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc24impl_includedeclarationsE, 24

	.type	_ZTSN2kc24impl_includedeclarationsE,@object # @_ZTSN2kc24impl_includedeclarationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_includedeclarationsE
_ZTSN2kc24impl_includedeclarationsE:
	.asciz	"N2kc24impl_includedeclarationsE"
	.size	_ZTSN2kc24impl_includedeclarationsE, 32

	.type	_ZTIN2kc16impl_includefileE,@object # @_ZTIN2kc16impl_includefileE
	.section	.data.rel.ro._ZTIN2kc16impl_includefileE,"awG",@progbits,_ZTIN2kc16impl_includefileE,comdat
	.weak	_ZTIN2kc16impl_includefileE
	.p2align	3, 0x0
_ZTIN2kc16impl_includefileE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc16impl_includefileE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc16impl_includefileE, 24

	.type	_ZTSN2kc16impl_includefileE,@object # @_ZTSN2kc16impl_includefileE
	.section	.rodata._ZTSN2kc16impl_includefileE,"aG",@progbits,_ZTSN2kc16impl_includefileE,comdat
	.weak	_ZTSN2kc16impl_includefileE
_ZTSN2kc16impl_includefileE:
	.asciz	"N2kc16impl_includefileE"
	.size	_ZTSN2kc16impl_includefileE, 24

	.type	_ZTIN2kc17impl_includefilesE,@object # @_ZTIN2kc17impl_includefilesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc17impl_includefilesE
	.p2align	3, 0x0
_ZTIN2kc17impl_includefilesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc17impl_includefilesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc17impl_includefilesE, 24

	.type	_ZTSN2kc17impl_includefilesE,@object # @_ZTSN2kc17impl_includefilesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc17impl_includefilesE
_ZTSN2kc17impl_includefilesE:
	.asciz	"N2kc17impl_includefilesE"
	.size	_ZTSN2kc17impl_includefilesE, 25

	.type	_ZTIN2kc11impl_CtextsE,@object  # @_ZTIN2kc11impl_CtextsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc11impl_CtextsE
	.p2align	3, 0x0
_ZTIN2kc11impl_CtextsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc11impl_CtextsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc11impl_CtextsE, 24

	.type	_ZTSN2kc11impl_CtextsE,@object  # @_ZTSN2kc11impl_CtextsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc11impl_CtextsE
_ZTSN2kc11impl_CtextsE:
	.asciz	"N2kc11impl_CtextsE"
	.size	_ZTSN2kc11impl_CtextsE, 19

	.type	_ZTIN2kc18impl_idCexpressionE,@object # @_ZTIN2kc18impl_idCexpressionE
	.section	.data.rel.ro._ZTIN2kc18impl_idCexpressionE,"awG",@progbits,_ZTIN2kc18impl_idCexpressionE,comdat
	.weak	_ZTIN2kc18impl_idCexpressionE
	.p2align	3, 0x0
_ZTIN2kc18impl_idCexpressionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_idCexpressionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc18impl_idCexpressionE, 24

	.type	_ZTSN2kc18impl_idCexpressionE,@object # @_ZTSN2kc18impl_idCexpressionE
	.section	.rodata._ZTSN2kc18impl_idCexpressionE,"aG",@progbits,_ZTSN2kc18impl_idCexpressionE,comdat
	.weak	_ZTSN2kc18impl_idCexpressionE
_ZTSN2kc18impl_idCexpressionE:
	.asciz	"N2kc18impl_idCexpressionE"
	.size	_ZTSN2kc18impl_idCexpressionE, 26

	.type	_ZTIN2kc23impl_CexpressionSQ_elemE,@object # @_ZTIN2kc23impl_CexpressionSQ_elemE
	.section	.data.rel.ro._ZTIN2kc23impl_CexpressionSQ_elemE,"awG",@progbits,_ZTIN2kc23impl_CexpressionSQ_elemE,comdat
	.weak	_ZTIN2kc23impl_CexpressionSQ_elemE
	.p2align	3, 0x0
_ZTIN2kc23impl_CexpressionSQ_elemE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_CexpressionSQ_elemE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc23impl_CexpressionSQ_elemE, 24

	.type	_ZTSN2kc23impl_CexpressionSQ_elemE,@object # @_ZTSN2kc23impl_CexpressionSQ_elemE
	.section	.rodata._ZTSN2kc23impl_CexpressionSQ_elemE,"aG",@progbits,_ZTSN2kc23impl_CexpressionSQ_elemE,comdat
	.weak	_ZTSN2kc23impl_CexpressionSQ_elemE
_ZTSN2kc23impl_CexpressionSQ_elemE:
	.asciz	"N2kc23impl_CexpressionSQ_elemE"
	.size	_ZTSN2kc23impl_CexpressionSQ_elemE, 31

	.type	_ZTIN2kc23impl_CexpressionDQ_elemE,@object # @_ZTIN2kc23impl_CexpressionDQ_elemE
	.section	.data.rel.ro._ZTIN2kc23impl_CexpressionDQ_elemE,"awG",@progbits,_ZTIN2kc23impl_CexpressionDQ_elemE,comdat
	.weak	_ZTIN2kc23impl_CexpressionDQ_elemE
	.p2align	3, 0x0
_ZTIN2kc23impl_CexpressionDQ_elemE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_CexpressionDQ_elemE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc23impl_CexpressionDQ_elemE, 24

	.type	_ZTSN2kc23impl_CexpressionDQ_elemE,@object # @_ZTSN2kc23impl_CexpressionDQ_elemE
	.section	.rodata._ZTSN2kc23impl_CexpressionDQ_elemE,"aG",@progbits,_ZTSN2kc23impl_CexpressionDQ_elemE,comdat
	.weak	_ZTSN2kc23impl_CexpressionDQ_elemE
_ZTSN2kc23impl_CexpressionDQ_elemE:
	.asciz	"N2kc23impl_CexpressionDQ_elemE"
	.size	_ZTSN2kc23impl_CexpressionDQ_elemE, 31

	.type	_ZTIN2kc21impl_Cexpression_elemE,@object # @_ZTIN2kc21impl_Cexpression_elemE
	.section	.data.rel.ro._ZTIN2kc21impl_Cexpression_elemE,"awG",@progbits,_ZTIN2kc21impl_Cexpression_elemE,comdat
	.weak	_ZTIN2kc21impl_Cexpression_elemE
	.p2align	3, 0x0
_ZTIN2kc21impl_Cexpression_elemE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_Cexpression_elemE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc21impl_Cexpression_elemE, 24

	.type	_ZTSN2kc21impl_Cexpression_elemE,@object # @_ZTSN2kc21impl_Cexpression_elemE
	.section	.rodata._ZTSN2kc21impl_Cexpression_elemE,"aG",@progbits,_ZTSN2kc21impl_Cexpression_elemE,comdat
	.weak	_ZTSN2kc21impl_Cexpression_elemE
_ZTSN2kc21impl_Cexpression_elemE:
	.asciz	"N2kc21impl_Cexpression_elemE"
	.size	_ZTSN2kc21impl_Cexpression_elemE, 29

	.type	_ZTIN2kc36impl_attribute_initialisation_optionE,@object # @_ZTIN2kc36impl_attribute_initialisation_optionE
	.section	.data.rel.ro._ZTIN2kc36impl_attribute_initialisation_optionE,"awG",@progbits,_ZTIN2kc36impl_attribute_initialisation_optionE,comdat
	.weak	_ZTIN2kc36impl_attribute_initialisation_optionE
	.p2align	3, 0x0
_ZTIN2kc36impl_attribute_initialisation_optionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc36impl_attribute_initialisation_optionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc36impl_attribute_initialisation_optionE, 24

	.type	_ZTSN2kc36impl_attribute_initialisation_optionE,@object # @_ZTSN2kc36impl_attribute_initialisation_optionE
	.section	.rodata._ZTSN2kc36impl_attribute_initialisation_optionE,"aG",@progbits,_ZTSN2kc36impl_attribute_initialisation_optionE,comdat
	.weak	_ZTSN2kc36impl_attribute_initialisation_optionE
_ZTSN2kc36impl_attribute_initialisation_optionE:
	.asciz	"N2kc36impl_attribute_initialisation_optionE"
	.size	_ZTSN2kc36impl_attribute_initialisation_optionE, 44

	.type	_ZTIN2kc14impl_attributeE,@object # @_ZTIN2kc14impl_attributeE
	.section	.data.rel.ro._ZTIN2kc14impl_attributeE,"awG",@progbits,_ZTIN2kc14impl_attributeE,comdat
	.weak	_ZTIN2kc14impl_attributeE
	.p2align	3, 0x0
_ZTIN2kc14impl_attributeE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc14impl_attributeE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc14impl_attributeE, 24

	.type	_ZTSN2kc14impl_attributeE,@object # @_ZTSN2kc14impl_attributeE
	.section	.rodata._ZTSN2kc14impl_attributeE,"aG",@progbits,_ZTSN2kc14impl_attributeE,comdat
	.weak	_ZTSN2kc14impl_attributeE
_ZTSN2kc14impl_attributeE:
	.asciz	"N2kc14impl_attributeE"
	.size	_ZTSN2kc14impl_attributeE, 22

	.type	_ZTIN2kc15impl_attributesE,@object # @_ZTIN2kc15impl_attributesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc15impl_attributesE
	.p2align	3, 0x0
_ZTIN2kc15impl_attributesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc15impl_attributesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc15impl_attributesE, 24

	.type	_ZTSN2kc15impl_attributesE,@object # @_ZTSN2kc15impl_attributesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc15impl_attributesE
_ZTSN2kc15impl_attributesE:
	.asciz	"N2kc15impl_attributesE"
	.size	_ZTSN2kc15impl_attributesE, 23

	.type	_ZTIN2kc14impl_argumentsE,@object # @_ZTIN2kc14impl_argumentsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc14impl_argumentsE
	.p2align	3, 0x0
_ZTIN2kc14impl_argumentsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc14impl_argumentsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc14impl_argumentsE, 24

	.type	_ZTSN2kc14impl_argumentsE,@object # @_ZTSN2kc14impl_argumentsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc14impl_argumentsE
_ZTSN2kc14impl_argumentsE:
	.asciz	"N2kc14impl_argumentsE"
	.size	_ZTSN2kc14impl_argumentsE, 22

	.type	_ZTIN2kc17impl_alternativesE,@object # @_ZTIN2kc17impl_alternativesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc17impl_alternativesE
	.p2align	3, 0x0
_ZTIN2kc17impl_alternativesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc17impl_alternativesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc17impl_alternativesE, 24

	.type	_ZTSN2kc17impl_alternativesE,@object # @_ZTSN2kc17impl_alternativesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc17impl_alternativesE
_ZTSN2kc17impl_alternativesE:
	.asciz	"N2kc17impl_alternativesE"
	.size	_ZTSN2kc17impl_alternativesE, 25

	.type	_ZTIN2kc19impl_storageclassesE,@object # @_ZTIN2kc19impl_storageclassesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_storageclassesE
	.p2align	3, 0x0
_ZTIN2kc19impl_storageclassesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_storageclassesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc19impl_storageclassesE, 24

	.type	_ZTSN2kc19impl_storageclassesE,@object # @_ZTSN2kc19impl_storageclassesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_storageclassesE
_ZTSN2kc19impl_storageclassesE:
	.asciz	"N2kc19impl_storageclassesE"
	.size	_ZTSN2kc19impl_storageclassesE, 27

	.type	_ZTIN2kc20impl_productionblockE,@object # @_ZTIN2kc20impl_productionblockE
	.section	.data.rel.ro._ZTIN2kc20impl_productionblockE,"awG",@progbits,_ZTIN2kc20impl_productionblockE,comdat
	.weak	_ZTIN2kc20impl_productionblockE
	.p2align	3, 0x0
_ZTIN2kc20impl_productionblockE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_productionblockE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc20impl_productionblockE, 24

	.type	_ZTSN2kc20impl_productionblockE,@object # @_ZTSN2kc20impl_productionblockE
	.section	.rodata._ZTSN2kc20impl_productionblockE,"aG",@progbits,_ZTSN2kc20impl_productionblockE,comdat
	.weak	_ZTSN2kc20impl_productionblockE
_ZTSN2kc20impl_productionblockE:
	.asciz	"N2kc20impl_productionblockE"
	.size	_ZTSN2kc20impl_productionblockE, 28

	.type	_ZTIN2kc17impl_Ccode_optionE,@object # @_ZTIN2kc17impl_Ccode_optionE
	.section	.data.rel.ro._ZTIN2kc17impl_Ccode_optionE,"awG",@progbits,_ZTIN2kc17impl_Ccode_optionE,comdat
	.weak	_ZTIN2kc17impl_Ccode_optionE
	.p2align	3, 0x0
_ZTIN2kc17impl_Ccode_optionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc17impl_Ccode_optionE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc17impl_Ccode_optionE, 24

	.type	_ZTSN2kc17impl_Ccode_optionE,@object # @_ZTSN2kc17impl_Ccode_optionE
	.section	.rodata._ZTSN2kc17impl_Ccode_optionE,"aG",@progbits,_ZTSN2kc17impl_Ccode_optionE,comdat
	.weak	_ZTSN2kc17impl_Ccode_optionE
_ZTSN2kc17impl_Ccode_optionE:
	.asciz	"N2kc17impl_Ccode_optionE"
	.size	_ZTSN2kc17impl_Ccode_optionE, 25

	.type	_ZTIN2kc16impl_phylumnamesE,@object # @_ZTIN2kc16impl_phylumnamesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc16impl_phylumnamesE
	.p2align	3, 0x0
_ZTIN2kc16impl_phylumnamesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc16impl_phylumnamesE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc16impl_phylumnamesE, 24

	.type	_ZTSN2kc16impl_phylumnamesE,@object # @_ZTSN2kc16impl_phylumnamesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc16impl_phylumnamesE
_ZTSN2kc16impl_phylumnamesE:
	.asciz	"N2kc16impl_phylumnamesE"
	.size	_ZTSN2kc16impl_phylumnamesE, 24

	.type	_ZTIN2kc23impl_phylumdeclarationsE,@object # @_ZTIN2kc23impl_phylumdeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc23impl_phylumdeclarationsE
	.p2align	3, 0x0
_ZTIN2kc23impl_phylumdeclarationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_phylumdeclarationsE
	.dword	_ZTIN2kc18impl_abstract_listE
	.size	_ZTIN2kc23impl_phylumdeclarationsE, 24

	.type	_ZTSN2kc23impl_phylumdeclarationsE,@object # @_ZTSN2kc23impl_phylumdeclarationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc23impl_phylumdeclarationsE
_ZTSN2kc23impl_phylumdeclarationsE:
	.asciz	"N2kc23impl_phylumdeclarationsE"
	.size	_ZTSN2kc23impl_phylumdeclarationsE, 31

	.type	_ZTIN2kc11impl_STRINGE,@object  # @_ZTIN2kc11impl_STRINGE
	.section	.data.rel.ro._ZTIN2kc11impl_STRINGE,"awG",@progbits,_ZTIN2kc11impl_STRINGE,comdat
	.weak	_ZTIN2kc11impl_STRINGE
	.p2align	3, 0x0
_ZTIN2kc11impl_STRINGE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc11impl_STRINGE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc11impl_STRINGE, 24

	.type	_ZTSN2kc11impl_STRINGE,@object  # @_ZTSN2kc11impl_STRINGE
	.section	.rodata._ZTSN2kc11impl_STRINGE,"aG",@progbits,_ZTSN2kc11impl_STRINGE,comdat
	.weak	_ZTSN2kc11impl_STRINGE
_ZTSN2kc11impl_STRINGE:
	.asciz	"N2kc11impl_STRINGE"
	.size	_ZTSN2kc11impl_STRINGE, 19

	.type	_ZTIN2kc13impl_charrunsE,@object # @_ZTIN2kc13impl_charrunsE
	.section	.data.rel.ro._ZTIN2kc13impl_charrunsE,"awG",@progbits,_ZTIN2kc13impl_charrunsE,comdat
	.weak	_ZTIN2kc13impl_charrunsE
	.p2align	3, 0x0
_ZTIN2kc13impl_charrunsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc13impl_charrunsE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc13impl_charrunsE, 24

	.type	_ZTSN2kc13impl_charrunsE,@object # @_ZTSN2kc13impl_charrunsE
	.section	.rodata._ZTSN2kc13impl_charrunsE,"aG",@progbits,_ZTSN2kc13impl_charrunsE,comdat
	.weak	_ZTSN2kc13impl_charrunsE
_ZTSN2kc13impl_charrunsE:
	.asciz	"N2kc13impl_charrunsE"
	.size	_ZTSN2kc13impl_charrunsE, 21

	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.space	1
	.size	.L.str, 1

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"nocasestring"
	.size	.L.str.1, 13

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"casestring"
	.size	.L.str.2, 11

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"real"
	.size	.L.str.3, 5

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	"integer"
	.size	.L.str.4, 8

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"voidptr"
	.size	.L.str.5, 8

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"uniqID"
	.size	.L.str.6, 7

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	"ID"
	.size	.L.str.7, 3

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"INT"
	.size	.L.str.8, 4

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"STRING"
	.size	.L.str.9, 7

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"phylumdeclarationsroot"
	.size	.L.str.10, 23

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	"phylumdeclarations"
	.size	.L.str.11, 19

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	"phylumnames"
	.size	.L.str.12, 12

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"phylumdeclaration"
	.size	.L.str.13, 18

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"storageoption"
	.size	.L.str.14, 14

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"storageclasses"
	.size	.L.str.15, 15

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"productionblock"
	.size	.L.str.16, 16

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	"alternatives"
	.size	.L.str.17, 13

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	"alternative"
	.size	.L.str.18, 12

	.type	.L.str.19,@object               # @.str.19
.L.str.19:
	.asciz	"arguments"
	.size	.L.str.19, 10

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"argument"
	.size	.L.str.20, 9

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"Ccode_option"
	.size	.L.str.21, 13

	.type	.L.str.22,@object               # @.str.22
.L.str.22:
	.asciz	"attributes"
	.size	.L.str.22, 11

	.type	.L.str.23,@object               # @.str.23
.L.str.23:
	.asciz	"attribute"
	.size	.L.str.23, 10

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"attribute_initialisation_option"
	.size	.L.str.24, 32

	.type	.L.str.25,@object               # @.str.25
.L.str.25:
	.asciz	"Cexpression"
	.size	.L.str.25, 12

	.type	.L.str.26,@object               # @.str.26
.L.str.26:
	.asciz	"Cexpression_elem"
	.size	.L.str.26, 17

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"CexpressionDQ"
	.size	.L.str.27, 14

	.type	.L.str.28,@object               # @.str.28
.L.str.28:
	.asciz	"CexpressionDQ_elem"
	.size	.L.str.28, 19

	.type	.L.str.29,@object               # @.str.29
.L.str.29:
	.asciz	"CexpressionSQ"
	.size	.L.str.29, 14

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"CexpressionSQ_elem"
	.size	.L.str.30, 19

	.type	.L.str.31,@object               # @.str.31
.L.str.31:
	.asciz	"idCexpressions"
	.size	.L.str.31, 15

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	"idCexpression"
	.size	.L.str.32, 14

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"Ctexts"
	.size	.L.str.33, 7

	.type	.L.str.34,@object               # @.str.34
.L.str.34:
	.asciz	"includefiles"
	.size	.L.str.34, 13

	.type	.L.str.35,@object               # @.str.35
.L.str.35:
	.asciz	"includefile"
	.size	.L.str.35, 12

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	"includedeclarations"
	.size	.L.str.36, 20

	.type	.L.str.37,@object               # @.str.37
.L.str.37:
	.asciz	"includedeclaration"
	.size	.L.str.37, 19

	.type	.L.str.38,@object               # @.str.38
.L.str.38:
	.asciz	"rwdeclarations"
	.size	.L.str.38, 15

	.type	.L.str.39,@object               # @.str.39
.L.str.39:
	.asciz	"rwdeclaration"
	.size	.L.str.39, 14

	.type	.L.str.40,@object               # @.str.40
.L.str.40:
	.asciz	"rewriteclauses"
	.size	.L.str.40, 15

	.type	.L.str.41,@object               # @.str.41
.L.str.41:
	.asciz	"rewriteclause"
	.size	.L.str.41, 14

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	"patternchains"
	.size	.L.str.42, 14

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	"patternchain"
	.size	.L.str.43, 13

	.type	.L.str.44,@object               # @.str.44
.L.str.44:
	.asciz	"outmostpatterns"
	.size	.L.str.44, 16

	.type	.L.str.45,@object               # @.str.45
.L.str.45:
	.asciz	"patternchainitem"
	.size	.L.str.45, 17

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	"outmostpattern"
	.size	.L.str.46, 15

	.type	.L.str.47,@object               # @.str.47
.L.str.47:
	.asciz	"pattern"
	.size	.L.str.47, 8

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	"patterns"
	.size	.L.str.48, 9

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	"term"
	.size	.L.str.49, 5

	.type	.L.str.50,@object               # @.str.50
.L.str.50:
	.asciz	"terms"
	.size	.L.str.50, 6

	.type	.L.str.51,@object               # @.str.51
.L.str.51:
	.asciz	"fnfiles"
	.size	.L.str.51, 8

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	"fnfile"
	.size	.L.str.52, 7

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	"fndeclarations"
	.size	.L.str.53, 15

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	"fndeclaration"
	.size	.L.str.54, 14

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"fnclass"
	.size	.L.str.55, 8

	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"Ctext"
	.size	.L.str.56, 6

	.type	.L.str.57,@object               # @.str.57
.L.str.57:
	.asciz	"Ctext_elem"
	.size	.L.str.57, 11

	.type	.L.str.58,@object               # @.str.58
.L.str.58:
	.asciz	"foreach_after"
	.size	.L.str.58, 14

	.type	.L.str.59,@object               # @.str.59
.L.str.59:
	.asciz	"contextinfo"
	.size	.L.str.59, 12

	.type	.L.str.60,@object               # @.str.60
.L.str.60:
	.asciz	"withexpressions"
	.size	.L.str.60, 16

	.type	.L.str.61,@object               # @.str.61
.L.str.61:
	.asciz	"withexpression"
	.size	.L.str.61, 15

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	"withcases"
	.size	.L.str.62, 10

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"withcase"
	.size	.L.str.63, 9

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"unparsedeclarations"
	.size	.L.str.64, 20

	.type	.L.str.65,@object               # @.str.65
.L.str.65:
	.asciz	"unparsedeclaration"
	.size	.L.str.65, 19

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"unparseclauses"
	.size	.L.str.66, 15

	.type	.L.str.67,@object               # @.str.67
.L.str.67:
	.asciz	"unparseclause"
	.size	.L.str.67, 14

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"viewnames"
	.size	.L.str.68, 10

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	"unparseitems"
	.size	.L.str.69, 13

	.type	.L.str.70,@object               # @.str.70
.L.str.70:
	.asciz	"unparseitem"
	.size	.L.str.70, 12

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	"unpsubterm"
	.size	.L.str.71, 11

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	"unpattributes"
	.size	.L.str.72, 14

	.type	.L.str.73,@object               # @.str.73
.L.str.73:
	.asciz	"viewnameoption"
	.size	.L.str.73, 15

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	"languageoption"
	.size	.L.str.74, 15

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	"languagenames"
	.size	.L.str.75, 14

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	"fileline"
	.size	.L.str.76, 9

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	"scopetypefilelinestack"
	.size	.L.str.77, 23

	.type	.L.str.78,@object               # @.str.78
.L.str.78:
	.asciz	"scopetypefileline"
	.size	.L.str.78, 18

	.type	.L.str.79,@object               # @.str.79
.L.str.79:
	.asciz	"IDtype"
	.size	.L.str.79, 7

	.type	.L.str.80,@object               # @.str.80
.L.str.80:
	.asciz	"operators"
	.size	.L.str.80, 10

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	"phyla"
	.size	.L.str.81, 6

	.type	.L.str.82,@object               # @.str.82
.L.str.82:
	.asciz	"variables"
	.size	.L.str.82, 10

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"dollarvarstatus"
	.size	.L.str.83, 16

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.asciz	"tribool"
	.size	.L.str.84, 8

	.type	.L.str.85,@object               # @.str.85
.L.str.85:
	.asciz	"patternrepresentations"
	.size	.L.str.85, 23

	.type	.L.str.86,@object               # @.str.86
.L.str.86:
	.asciz	"patternrepresentation"
	.size	.L.str.86, 22

	.type	.L.str.87,@object               # @.str.87
.L.str.87:
	.asciz	"elem_patternrepresentation"
	.size	.L.str.87, 27

	.type	.L.str.88,@object               # @.str.88
.L.str.88:
	.asciz	"path"
	.size	.L.str.88, 5

	.type	.L.str.89,@object               # @.str.89
.L.str.89:
	.asciz	"paths"
	.size	.L.str.89, 6

	.type	.L.str.90,@object               # @.str.90
.L.str.90:
	.asciz	"argsnumbers"
	.size	.L.str.90, 12

	.type	.L.str.91,@object               # @.str.91
.L.str.91:
	.asciz	"rewriterulesinfo"
	.size	.L.str.91, 17

	.type	.L.str.92,@object               # @.str.92
.L.str.92:
	.asciz	"rewriteruleinfo"
	.size	.L.str.92, 16

	.type	.L.str.93,@object               # @.str.93
.L.str.93:
	.asciz	"withcasesinfo"
	.size	.L.str.93, 14

	.type	.L.str.94,@object               # @.str.94
.L.str.94:
	.asciz	"withcaseinfo"
	.size	.L.str.94, 13

	.type	.L.str.95,@object               # @.str.95
.L.str.95:
	.asciz	"rewriteviewsinfo"
	.size	.L.str.95, 17

	.type	.L.str.96,@object               # @.str.96
.L.str.96:
	.asciz	"rewriteviewinfo"
	.size	.L.str.96, 16

	.type	.L.str.97,@object               # @.str.97
.L.str.97:
	.asciz	"unparseviewsinfo"
	.size	.L.str.97, 17

	.type	.L.str.98,@object               # @.str.98
.L.str.98:
	.asciz	"unparseviewinfo"
	.size	.L.str.98, 16

	.type	.L.str.99,@object               # @.str.99
.L.str.99:
	.asciz	"unparsedeclsinfo"
	.size	.L.str.99, 17

	.type	.L.str.100,@object              # @.str.100
.L.str.100:
	.asciz	"unparsedeclinfo"
	.size	.L.str.100, 16

	.type	.L.str.101,@object              # @.str.101
.L.str.101:
	.asciz	"ac_declaration"
	.size	.L.str.101, 15

	.type	.L.str.102,@object              # @.str.102
.L.str.102:
	.asciz	"ac_declaration_list"
	.size	.L.str.102, 20

	.type	.L.str.103,@object              # @.str.103
.L.str.103:
	.asciz	"ac_declaration_specifiers"
	.size	.L.str.103, 26

	.type	.L.str.104,@object              # @.str.104
.L.str.104:
	.asciz	"ac_declaration_specifier"
	.size	.L.str.104, 25

	.type	.L.str.105,@object              # @.str.105
.L.str.105:
	.asciz	"ac_storage_class_specifier"
	.size	.L.str.105, 27

	.type	.L.str.106,@object              # @.str.106
.L.str.106:
	.asciz	"ac_type_specifier"
	.size	.L.str.106, 18

	.type	.L.str.107,@object              # @.str.107
.L.str.107:
	.asciz	"ac_type_qualifier"
	.size	.L.str.107, 18

	.type	.L.str.108,@object              # @.str.108
.L.str.108:
	.asciz	"ac_init_declarator_list"
	.size	.L.str.108, 24

	.type	.L.str.109,@object              # @.str.109
.L.str.109:
	.asciz	"ac_init_declarator"
	.size	.L.str.109, 19

	.type	.L.str.110,@object              # @.str.110
.L.str.110:
	.asciz	"ac_declarator"
	.size	.L.str.110, 14

	.type	.L.str.111,@object              # @.str.111
.L.str.111:
	.asciz	"ac_direct_declarator"
	.size	.L.str.111, 21

	.type	.L.str.112,@object              # @.str.112
.L.str.112:
	.asciz	"ac_pointer_option"
	.size	.L.str.112, 18

	.type	.L.str.113,@object              # @.str.113
.L.str.113:
	.asciz	"ac_pointer"
	.size	.L.str.113, 11

	.type	.L.str.114,@object              # @.str.114
.L.str.114:
	.asciz	"ac_ref_option"
	.size	.L.str.114, 14

	.type	.L.str.115,@object              # @.str.115
.L.str.115:
	.asciz	"ac_operator_name"
	.size	.L.str.115, 17

	.type	.L.str.116,@object              # @.str.116
.L.str.116:
	.asciz	"ac_class_qualifier_help_list"
	.size	.L.str.116, 29

	.type	.L.str.117,@object              # @.str.117
.L.str.117:
	.asciz	"ac_class_qualifier_list"
	.size	.L.str.117, 24

	.type	.L.str.118,@object              # @.str.118
.L.str.118:
	.asciz	"ac_type_qualifier_list"
	.size	.L.str.118, 23

	.type	.L.str.119,@object              # @.str.119
.L.str.119:
	.asciz	"ac_parameter_type_list"
	.size	.L.str.119, 23

	.type	.L.str.120,@object              # @.str.120
.L.str.120:
	.asciz	"ac_parameter_list"
	.size	.L.str.120, 18

	.type	.L.str.121,@object              # @.str.121
.L.str.121:
	.asciz	"ac_parameter_declaration"
	.size	.L.str.121, 25

	.type	.L.str.122,@object              # @.str.122
.L.str.122:
	.asciz	"ac_identifier_list"
	.size	.L.str.122, 19

	.type	.L.str.123,@object              # @.str.123
.L.str.123:
	.asciz	"ac_abstract_declarator"
	.size	.L.str.123, 23

	.type	.L.str.124,@object              # @.str.124
.L.str.124:
	.asciz	"ac_direct_abstract_declarator_option"
	.size	.L.str.124, 37

	.type	.L.str.125,@object              # @.str.125
.L.str.125:
	.asciz	"ac_direct_abstract_declarator"
	.size	.L.str.125, 30

	.type	.L.str.126,@object              # @.str.126
.L.str.126:
	.asciz	"ac_constant_expression_option"
	.size	.L.str.126, 30

	.type	.L.str.127,@object              # @.str.127
.L.str.127:
	.asciz	"ac_constant_expression"
	.size	.L.str.127, 23

	.type	.L.str.128,@object              # @.str.128
.L.str.128:
	.asciz	"ac_constant_expression_list"
	.size	.L.str.128, 28

	.type	.L.str.129,@object              # @.str.129
.L.str.129:
	.asciz	"ac_opt_base_init_list"
	.size	.L.str.129, 22

	.type	.L.str.130,@object              # @.str.130
.L.str.130:
	.asciz	"ac_base_init_list"
	.size	.L.str.130, 18

	.type	.L.str.131,@object              # @.str.131
.L.str.131:
	.asciz	"ac_base_init"
	.size	.L.str.131, 13

	.type	.L.str.132,@object              # @.str.132
.L.str.132:
	.asciz	"baseclass_declarations"
	.size	.L.str.132, 23

	.type	.L.str.133,@object              # @.str.133
.L.str.133:
	.asciz	"baseclass_decl"
	.size	.L.str.133, 15

	.type	.L.str.134,@object              # @.str.134
.L.str.134:
	.asciz	"baseclass_list"
	.size	.L.str.134, 15

	.type	.L.str.135,@object              # @.str.135
.L.str.135:
	.asciz	"error"
	.size	.L.str.135, 6

	.type	.L.str.136,@object              # @.str.136
.L.str.136:
	.asciz	"problem"
	.size	.L.str.136, 8

	.type	.L.str.137,@object              # @.str.137
.L.str.137:
	.asciz	"addedphylumdeclarations"
	.size	.L.str.137, 24

	.type	.L.str.138,@object              # @.str.138
.L.str.138:
	.asciz	"addedphylumdeclaration"
	.size	.L.str.138, 23

	.type	.L.str.139,@object              # @.str.139
.L.str.139:
	.asciz	"countedphylumdeclarations"
	.size	.L.str.139, 26

	.type	.L.str.140,@object              # @.str.140
.L.str.140:
	.asciz	"countedphylumdeclaration"
	.size	.L.str.140, 25

	.type	.L.str.141,@object              # @.str.141
.L.str.141:
	.asciz	"charruns"
	.size	.L.str.141, 9

	.type	.L.str.142,@object              # @.str.142
.L.str.142:
	.asciz	"bindingidmarks"
	.size	.L.str.142, 15

	.type	.L.str.143,@object              # @.str.143
.L.str.143:
	.asciz	"bindingidmark"
	.size	.L.str.143, 14

	.type	_ZN2kc11phylum_infoE,@object    # @_ZN2kc11phylum_infoE
	.data
	.globl	_ZN2kc11phylum_infoE
	.p2align	3, 0x0
_ZN2kc11phylum_infoE:
	.dword	.L.str
	.word	0                               # 0x0
	.word	0                               # 0x0
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.1
	.word	1                               # 0x1
	.word	1                               # 0x1
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.3
	.word	3                               # 0x3
	.word	3                               # 0x3
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.4
	.word	4                               # 0x4
	.word	4                               # 0x4
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.5
	.word	5                               # 0x5
	.word	5                               # 0x5
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.6
	.word	6                               # 0x6
	.word	6                               # 0x6
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.7
	.word	7                               # 0x7
	.word	7                               # 0x7
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.8
	.word	8                               # 0x8
	.word	8                               # 0x8
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.9
	.word	9                               # 0x9
	.word	9                               # 0x9
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.10
	.word	10                              # 0xa
	.word	10                              # 0xa
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.11
	.word	11                              # 0xb
	.word	12                              # 0xc
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.12
	.word	13                              # 0xd
	.word	14                              # 0xe
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.13
	.word	15                              # 0xf
	.word	15                              # 0xf
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.14
	.word	16                              # 0x10
	.word	18                              # 0x12
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.15
	.word	19                              # 0x13
	.word	20                              # 0x14
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.16
	.word	21                              # 0x15
	.word	24                              # 0x18
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.17
	.word	25                              # 0x19
	.word	26                              # 0x1a
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.18
	.word	27                              # 0x1b
	.word	27                              # 0x1b
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.19
	.word	28                              # 0x1c
	.word	29                              # 0x1d
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.20
	.word	30                              # 0x1e
	.word	30                              # 0x1e
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.21
	.word	31                              # 0x1f
	.word	31                              # 0x1f
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.22
	.word	32                              # 0x20
	.word	33                              # 0x21
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.23
	.word	34                              # 0x22
	.word	34                              # 0x22
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.24
	.word	35                              # 0x23
	.word	36                              # 0x24
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.25
	.word	37                              # 0x25
	.word	38                              # 0x26
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.26
	.word	39                              # 0x27
	.word	45                              # 0x2d
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.27
	.word	46                              # 0x2e
	.word	47                              # 0x2f
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.28
	.word	48                              # 0x30
	.word	49                              # 0x31
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.29
	.word	50                              # 0x32
	.word	51                              # 0x33
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.30
	.word	52                              # 0x34
	.word	53                              # 0x35
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.31
	.word	54                              # 0x36
	.word	55                              # 0x37
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.32
	.word	56                              # 0x38
	.word	56                              # 0x38
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.33
	.word	57                              # 0x39
	.word	58                              # 0x3a
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.34
	.word	59                              # 0x3b
	.word	60                              # 0x3c
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.35
	.word	61                              # 0x3d
	.word	61                              # 0x3d
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.36
	.word	62                              # 0x3e
	.word	63                              # 0x3f
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.37
	.word	64                              # 0x40
	.word	64                              # 0x40
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.38
	.word	65                              # 0x41
	.word	66                              # 0x42
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.39
	.word	67                              # 0x43
	.word	67                              # 0x43
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.40
	.word	68                              # 0x44
	.word	69                              # 0x45
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.41
	.word	70                              # 0x46
	.word	70                              # 0x46
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.42
	.word	71                              # 0x47
	.word	72                              # 0x48
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.43
	.word	73                              # 0x49
	.word	74                              # 0x4a
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.44
	.word	75                              # 0x4b
	.word	76                              # 0x4c
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.45
	.word	77                              # 0x4d
	.word	79                              # 0x4f
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.46
	.word	80                              # 0x50
	.word	84                              # 0x54
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.47
	.word	85                              # 0x55
	.word	90                              # 0x5a
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.48
	.word	91                              # 0x5b
	.word	92                              # 0x5c
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.49
	.word	93                              # 0x5d
	.word	101                             # 0x65
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.50
	.word	102                             # 0x66
	.word	103                             # 0x67
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.51
	.word	104                             # 0x68
	.word	105                             # 0x69
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.52
	.word	106                             # 0x6a
	.word	106                             # 0x6a
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.53
	.word	107                             # 0x6b
	.word	108                             # 0x6c
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.54
	.word	109                             # 0x6d
	.word	110                             # 0x6e
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.55
	.word	111                             # 0x6f
	.word	116                             # 0x74
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.56
	.word	117                             # 0x75
	.word	118                             # 0x76
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.57
	.word	119                             # 0x77
	.word	126                             # 0x7e
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.58
	.word	127                             # 0x7f
	.word	128                             # 0x80
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.59
	.word	129                             # 0x81
	.word	130                             # 0x82
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.60
	.word	131                             # 0x83
	.word	132                             # 0x84
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.61
	.word	133                             # 0x85
	.word	134                             # 0x86
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.62
	.word	135                             # 0x87
	.word	136                             # 0x88
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.63
	.word	137                             # 0x89
	.word	137                             # 0x89
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.64
	.word	138                             # 0x8a
	.word	139                             # 0x8b
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.65
	.word	140                             # 0x8c
	.word	140                             # 0x8c
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.66
	.word	141                             # 0x8d
	.word	142                             # 0x8e
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.67
	.word	143                             # 0x8f
	.word	143                             # 0x8f
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.68
	.word	144                             # 0x90
	.word	145                             # 0x91
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.69
	.word	146                             # 0x92
	.word	147                             # 0x93
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.70
	.word	148                             # 0x94
	.word	152                             # 0x98
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.71
	.word	153                             # 0x99
	.word	157                             # 0x9d
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.72
	.word	158                             # 0x9e
	.word	159                             # 0x9f
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.73
	.word	160                             # 0xa0
	.word	161                             # 0xa1
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.74
	.word	162                             # 0xa2
	.word	163                             # 0xa3
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.75
	.word	164                             # 0xa4
	.word	165                             # 0xa5
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.76
	.word	166                             # 0xa6
	.word	168                             # 0xa8
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.77
	.word	169                             # 0xa9
	.word	170                             # 0xaa
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.78
	.word	171                             # 0xab
	.word	171                             # 0xab
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.79
	.word	172                             # 0xac
	.word	186                             # 0xba
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.80
	.word	187                             # 0xbb
	.word	188                             # 0xbc
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.81
	.word	189                             # 0xbd
	.word	190                             # 0xbe
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.82
	.word	191                             # 0xbf
	.word	192                             # 0xc0
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.83
	.word	193                             # 0xc1
	.word	194                             # 0xc2
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.84
	.word	195                             # 0xc3
	.word	197                             # 0xc5
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.85
	.word	198                             # 0xc6
	.word	199                             # 0xc7
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.86
	.word	200                             # 0xc8
	.word	201                             # 0xc9
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.87
	.word	202                             # 0xca
	.word	210                             # 0xd2
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.88
	.word	211                             # 0xd3
	.word	212                             # 0xd4
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.89
	.word	213                             # 0xd5
	.word	214                             # 0xd6
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.90
	.word	215                             # 0xd7
	.word	216                             # 0xd8
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.91
	.word	217                             # 0xd9
	.word	218                             # 0xda
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.92
	.word	219                             # 0xdb
	.word	219                             # 0xdb
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.93
	.word	220                             # 0xdc
	.word	221                             # 0xdd
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.94
	.word	222                             # 0xde
	.word	222                             # 0xde
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.95
	.word	223                             # 0xdf
	.word	224                             # 0xe0
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.96
	.word	225                             # 0xe1
	.word	225                             # 0xe1
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.97
	.word	226                             # 0xe2
	.word	227                             # 0xe3
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.98
	.word	228                             # 0xe4
	.word	228                             # 0xe4
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.99
	.word	229                             # 0xe5
	.word	230                             # 0xe6
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.100
	.word	231                             # 0xe7
	.word	231                             # 0xe7
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.101
	.word	232                             # 0xe8
	.word	232                             # 0xe8
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.102
	.word	233                             # 0xe9
	.word	234                             # 0xea
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.103
	.word	235                             # 0xeb
	.word	236                             # 0xec
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.104
	.word	237                             # 0xed
	.word	239                             # 0xef
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.105
	.word	240                             # 0xf0
	.word	245                             # 0xf5
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.106
	.word	246                             # 0xf6
	.word	246                             # 0xf6
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.107
	.word	247                             # 0xf7
	.word	250                             # 0xfa
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.108
	.word	251                             # 0xfb
	.word	252                             # 0xfc
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.109
	.word	253                             # 0xfd
	.word	253                             # 0xfd
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.110
	.word	254                             # 0xfe
	.word	254                             # 0xfe
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.111
	.word	255                             # 0xff
	.word	262                             # 0x106
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.112
	.word	263                             # 0x107
	.word	264                             # 0x108
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.113
	.word	265                             # 0x109
	.word	266                             # 0x10a
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.114
	.word	267                             # 0x10b
	.word	268                             # 0x10c
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.115
	.word	269                             # 0x10d
	.word	269                             # 0x10d
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.116
	.word	270                             # 0x10e
	.word	271                             # 0x10f
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.117
	.word	272                             # 0x110
	.word	273                             # 0x111
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.118
	.word	274                             # 0x112
	.word	275                             # 0x113
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.119
	.word	276                             # 0x114
	.word	277                             # 0x115
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.120
	.word	278                             # 0x116
	.word	279                             # 0x117
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.121
	.word	280                             # 0x118
	.word	281                             # 0x119
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.122
	.word	282                             # 0x11a
	.word	283                             # 0x11b
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.123
	.word	284                             # 0x11c
	.word	285                             # 0x11d
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.124
	.word	286                             # 0x11e
	.word	287                             # 0x11f
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.125
	.word	288                             # 0x120
	.word	290                             # 0x122
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.126
	.word	291                             # 0x123
	.word	292                             # 0x124
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.127
	.word	293                             # 0x125
	.word	293                             # 0x125
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.128
	.word	294                             # 0x126
	.word	295                             # 0x127
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.129
	.word	296                             # 0x128
	.word	297                             # 0x129
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.130
	.word	298                             # 0x12a
	.word	299                             # 0x12b
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.131
	.word	300                             # 0x12c
	.word	300                             # 0x12c
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.132
	.word	301                             # 0x12d
	.word	302                             # 0x12e
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.133
	.word	303                             # 0x12f
	.word	303                             # 0x12f
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.134
	.word	304                             # 0x130
	.word	305                             # 0x131
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.135
	.word	306                             # 0x132
	.word	308                             # 0x134
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.136
	.word	309                             # 0x135
	.word	326                             # 0x146
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.137
	.word	327                             # 0x147
	.word	328                             # 0x148
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.138
	.word	329                             # 0x149
	.word	329                             # 0x149
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.139
	.word	330                             # 0x14a
	.word	331                             # 0x14b
	.word	0                               # 0x0
	.space	4
	.dword	.L.str.140
	.word	332                             # 0x14c
	.word	332                             # 0x14c
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.141
	.word	333                             # 0x14d
	.word	335                             # 0x14f
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.142
	.word	336                             # 0x150
	.word	337                             # 0x151
	.word	1                               # 0x1
	.space	4
	.dword	.L.str.143
	.word	338                             # 0x152
	.word	338                             # 0x152
	.word	1                               # 0x1
	.space	4
	.dword	.L.str
	.word	0                               # 0x0
	.word	0                               # 0x0
	.word	0                               # 0x0
	.space	4
	.size	_ZN2kc11phylum_infoE, 3480

	.type	.L.str.145,@object              # @.str.145
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.145:
	.asciz	"NoCaseStr"
	.size	.L.str.145, 10

	.type	.L.str.146,@object              # @.str.146
.L.str.146:
	.asciz	"_Str"
	.size	.L.str.146, 5

	.type	.L.str.147,@object              # @.str.147
.L.str.147:
	.asciz	"_Real"
	.size	.L.str.147, 6

	.type	.L.str.148,@object              # @.str.148
.L.str.148:
	.asciz	"_Int"
	.size	.L.str.148, 5

	.type	.L.str.149,@object              # @.str.149
.L.str.149:
	.asciz	"_VoidPtr"
	.size	.L.str.149, 9

	.type	.L.str.150,@object              # @.str.150
.L.str.150:
	.asciz	"Str"
	.size	.L.str.150, 4

	.type	_ZN2kcL15kc_subphyla_StrE,@object # @_ZN2kcL15kc_subphyla_StrE
	.data
	.p2align	2, 0x0
_ZN2kcL15kc_subphyla_StrE:
	.word	2                               # 0x2
	.size	_ZN2kcL15kc_subphyla_StrE, 4

	.type	.L.str.151,@object              # @.str.151
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.151:
	.asciz	"Id"
	.size	.L.str.151, 3

	.type	_ZN2kcL14kc_subphyla_IdE,@object # @_ZN2kcL14kc_subphyla_IdE
	.data
	.p2align	2, 0x0
_ZN2kcL14kc_subphyla_IdE:
	.word	6                               # 0x6
	.size	_ZN2kcL14kc_subphyla_IdE, 4

	.type	.L.str.152,@object              # @.str.152
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.152:
	.asciz	"Int"
	.size	.L.str.152, 4

	.type	_ZN2kcL15kc_subphyla_IntE,@object # @_ZN2kcL15kc_subphyla_IntE
	.data
	.p2align	2, 0x0
_ZN2kcL15kc_subphyla_IntE:
	.word	4                               # 0x4
	.size	_ZN2kcL15kc_subphyla_IntE, 4

	.type	.L.str.153,@object              # @.str.153
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.153:
	.asciz	"String"
	.size	.L.str.153, 7

	.type	_ZN2kcL18kc_subphyla_StringE,@object # @_ZN2kcL18kc_subphyla_StringE
	.data
	.p2align	2, 0x0
_ZN2kcL18kc_subphyla_StringE:
	.word	2                               # 0x2
	.size	_ZN2kcL18kc_subphyla_StringE, 4

	.type	.L.str.154,@object              # @.str.154
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.154:
	.asciz	"PhylumDeclarations"
	.size	.L.str.154, 19

	.type	_ZN2kcL30kc_subphyla_PhylumDeclarationsE,@object # @_ZN2kcL30kc_subphyla_PhylumDeclarationsE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_PhylumDeclarationsE:
	.word	11                              # 0xb
	.size	_ZN2kcL30kc_subphyla_PhylumDeclarationsE, 4

	.type	.L.str.155,@object              # @.str.155
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.155:
	.asciz	"Nilphylumdeclarations"
	.size	.L.str.155, 22

	.type	.L.str.156,@object              # @.str.156
.L.str.156:
	.asciz	"Consphylumdeclarations"
	.size	.L.str.156, 23

	.type	_ZN2kcL34kc_subphyla_ConsphylumdeclarationsE,@object # @_ZN2kcL34kc_subphyla_ConsphylumdeclarationsE
	.data
	.p2align	2, 0x0
_ZN2kcL34kc_subphyla_ConsphylumdeclarationsE:
	.word	13                              # 0xd
	.word	11                              # 0xb
	.size	_ZN2kcL34kc_subphyla_ConsphylumdeclarationsE, 8

	.type	.L.str.157,@object              # @.str.157
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.157:
	.asciz	"Nilphylumnames"
	.size	.L.str.157, 15

	.type	.L.str.158,@object              # @.str.158
.L.str.158:
	.asciz	"Consphylumnames"
	.size	.L.str.158, 16

	.type	_ZN2kcL27kc_subphyla_ConsphylumnamesE,@object # @_ZN2kcL27kc_subphyla_ConsphylumnamesE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_ConsphylumnamesE:
	.word	7                               # 0x7
	.word	12                              # 0xc
	.size	_ZN2kcL27kc_subphyla_ConsphylumnamesE, 8

	.type	.L.str.159,@object              # @.str.159
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.159:
	.asciz	"PhylumDeclaration"
	.size	.L.str.159, 18

	.type	_ZN2kcL29kc_subphyla_PhylumDeclarationE,@object # @_ZN2kcL29kc_subphyla_PhylumDeclarationE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_PhylumDeclarationE:
	.word	7                               # 0x7
	.word	14                              # 0xe
	.word	16                              # 0x10
	.word	21                              # 0x15
	.size	_ZN2kcL29kc_subphyla_PhylumDeclarationE, 16

	.type	.L.str.160,@object              # @.str.160
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.160:
	.asciz	"NoStorageOption"
	.size	.L.str.160, 16

	.type	.L.str.161,@object              # @.str.161
.L.str.161:
	.asciz	"NegativeStorageOption"
	.size	.L.str.161, 22

	.type	_ZN2kcL33kc_subphyla_NegativeStorageOptionE,@object # @_ZN2kcL33kc_subphyla_NegativeStorageOptionE
	.data
	.p2align	2, 0x0
_ZN2kcL33kc_subphyla_NegativeStorageOptionE:
	.word	7                               # 0x7
	.size	_ZN2kcL33kc_subphyla_NegativeStorageOptionE, 4

	.type	.L.str.162,@object              # @.str.162
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.162:
	.asciz	"PositiveStorageOption"
	.size	.L.str.162, 22

	.type	_ZN2kcL33kc_subphyla_PositiveStorageOptionE,@object # @_ZN2kcL33kc_subphyla_PositiveStorageOptionE
	.data
	.p2align	2, 0x0
_ZN2kcL33kc_subphyla_PositiveStorageOptionE:
	.word	7                               # 0x7
	.size	_ZN2kcL33kc_subphyla_PositiveStorageOptionE, 4

	.type	.L.str.163,@object              # @.str.163
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.163:
	.asciz	"Nilstorageclasses"
	.size	.L.str.163, 18

	.type	.L.str.164,@object              # @.str.164
.L.str.164:
	.asciz	"Consstorageclasses"
	.size	.L.str.164, 19

	.type	_ZN2kcL30kc_subphyla_ConsstorageclassesE,@object # @_ZN2kcL30kc_subphyla_ConsstorageclassesE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_ConsstorageclassesE:
	.word	7                               # 0x7
	.word	15                              # 0xf
	.size	_ZN2kcL30kc_subphyla_ConsstorageclassesE, 8

	.type	.L.str.165,@object              # @.str.165
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.165:
	.asciz	"Emptyproductionblock"
	.size	.L.str.165, 21

	.type	.L.str.166,@object              # @.str.166
.L.str.166:
	.asciz	"ListAlternatives"
	.size	.L.str.166, 17

	.type	_ZN2kcL28kc_subphyla_ListAlternativesE,@object # @_ZN2kcL28kc_subphyla_ListAlternativesE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_ListAlternativesE:
	.word	17                              # 0x11
	.word	7                               # 0x7
	.size	_ZN2kcL28kc_subphyla_ListAlternativesE, 8

	.type	.L.str.167,@object              # @.str.167
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.167:
	.asciz	"NonlistAlternatives"
	.size	.L.str.167, 20

	.type	_ZN2kcL31kc_subphyla_NonlistAlternativesE,@object # @_ZN2kcL31kc_subphyla_NonlistAlternativesE
	.data
	.p2align	2, 0x0
_ZN2kcL31kc_subphyla_NonlistAlternativesE:
	.word	17                              # 0x11
	.size	_ZN2kcL31kc_subphyla_NonlistAlternativesE, 4

	.type	.L.str.168,@object              # @.str.168
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.168:
	.asciz	"PredefinedAlternatives"
	.size	.L.str.168, 23

	.type	_ZN2kcL34kc_subphyla_PredefinedAlternativesE,@object # @_ZN2kcL34kc_subphyla_PredefinedAlternativesE
	.data
	.p2align	2, 0x0
_ZN2kcL34kc_subphyla_PredefinedAlternativesE:
	.word	17                              # 0x11
	.size	_ZN2kcL34kc_subphyla_PredefinedAlternativesE, 4

	.type	.L.str.169,@object              # @.str.169
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.169:
	.asciz	"Nilalternatives"
	.size	.L.str.169, 16

	.type	.L.str.170,@object              # @.str.170
.L.str.170:
	.asciz	"Consalternatives"
	.size	.L.str.170, 17

	.type	_ZN2kcL28kc_subphyla_ConsalternativesE,@object # @_ZN2kcL28kc_subphyla_ConsalternativesE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_ConsalternativesE:
	.word	18                              # 0x12
	.word	17                              # 0x11
	.size	_ZN2kcL28kc_subphyla_ConsalternativesE, 8

	.type	.L.str.171,@object              # @.str.171
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.171:
	.asciz	"Alternative"
	.size	.L.str.171, 12

	.type	_ZN2kcL23kc_subphyla_AlternativeE,@object # @_ZN2kcL23kc_subphyla_AlternativeE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_AlternativeE:
	.word	7                               # 0x7
	.word	19                              # 0x13
	.size	_ZN2kcL23kc_subphyla_AlternativeE, 8

	.type	.L.str.172,@object              # @.str.172
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.172:
	.asciz	"Nilarguments"
	.size	.L.str.172, 13

	.type	.L.str.173,@object              # @.str.173
.L.str.173:
	.asciz	"Consarguments"
	.size	.L.str.173, 14

	.type	_ZN2kcL25kc_subphyla_ConsargumentsE,@object # @_ZN2kcL25kc_subphyla_ConsargumentsE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_ConsargumentsE:
	.word	7                               # 0x7
	.word	19                              # 0x13
	.size	_ZN2kcL25kc_subphyla_ConsargumentsE, 8

	.type	.L.str.174,@object              # @.str.174
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.174:
	.asciz	"Argument"
	.size	.L.str.174, 9

	.type	_ZN2kcL20kc_subphyla_ArgumentE,@object # @_ZN2kcL20kc_subphyla_ArgumentE
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_ArgumentE:
	.word	7                               # 0x7
	.word	4                               # 0x4
	.size	_ZN2kcL20kc_subphyla_ArgumentE, 8

	.type	.L.str.175,@object              # @.str.175
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.175:
	.asciz	"CcodeOption"
	.size	.L.str.175, 12

	.type	_ZN2kcL23kc_subphyla_CcodeOptionE,@object # @_ZN2kcL23kc_subphyla_CcodeOptionE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_CcodeOptionE:
	.word	22                              # 0x16
	.word	33                              # 0x21
	.size	_ZN2kcL23kc_subphyla_CcodeOptionE, 8

	.type	.L.str.176,@object              # @.str.176
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.176:
	.asciz	"Nilattributes"
	.size	.L.str.176, 14

	.type	.L.str.177,@object              # @.str.177
.L.str.177:
	.asciz	"Consattributes"
	.size	.L.str.177, 15

	.type	_ZN2kcL26kc_subphyla_ConsattributesE,@object # @_ZN2kcL26kc_subphyla_ConsattributesE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_ConsattributesE:
	.word	23                              # 0x17
	.word	22                              # 0x16
	.size	_ZN2kcL26kc_subphyla_ConsattributesE, 8

	.type	.L.str.178,@object              # @.str.178
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.178:
	.asciz	"Attribute"
	.size	.L.str.178, 10

	.type	_ZN2kcL21kc_subphyla_AttributeE,@object # @_ZN2kcL21kc_subphyla_AttributeE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_AttributeE:
	.word	7                               # 0x7
	.word	7                               # 0x7
	.word	24                              # 0x18
	.size	_ZN2kcL21kc_subphyla_AttributeE, 12

	.type	.L.str.179,@object              # @.str.179
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.179:
	.asciz	"Noattribute_initialisation"
	.size	.L.str.179, 27

	.type	.L.str.180,@object              # @.str.180
.L.str.180:
	.asciz	"Yesattribute_initialisation"
	.size	.L.str.180, 28

	.type	_ZN2kcL39kc_subphyla_Yesattribute_initialisationE,@object # @_ZN2kcL39kc_subphyla_Yesattribute_initialisationE
	.data
	.p2align	2, 0x0
_ZN2kcL39kc_subphyla_Yesattribute_initialisationE:
	.word	25                              # 0x19
	.size	_ZN2kcL39kc_subphyla_Yesattribute_initialisationE, 4

	.type	.L.str.181,@object              # @.str.181
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.181:
	.asciz	"NilCexpression"
	.size	.L.str.181, 15

	.type	.L.str.182,@object              # @.str.182
.L.str.182:
	.asciz	"ConsCexpression"
	.size	.L.str.182, 16

	.type	_ZN2kcL27kc_subphyla_ConsCexpressionE,@object # @_ZN2kcL27kc_subphyla_ConsCexpressionE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_ConsCexpressionE:
	.word	26                              # 0x1a
	.word	25                              # 0x19
	.size	_ZN2kcL27kc_subphyla_ConsCexpressionE, 8

	.type	.L.str.183,@object              # @.str.183
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.183:
	.asciz	"CExpressionPart"
	.size	.L.str.183, 16

	.type	_ZN2kcL27kc_subphyla_CExpressionPartE,@object # @_ZN2kcL27kc_subphyla_CExpressionPartE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_CExpressionPartE:
	.word	2                               # 0x2
	.size	_ZN2kcL27kc_subphyla_CExpressionPartE, 4

	.type	.L.str.184,@object              # @.str.184
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.184:
	.asciz	"CExpressionDollarvar"
	.size	.L.str.184, 21

	.type	_ZN2kcL32kc_subphyla_CExpressionDollarvarE,@object # @_ZN2kcL32kc_subphyla_CExpressionDollarvarE
	.data
	.p2align	2, 0x0
_ZN2kcL32kc_subphyla_CExpressionDollarvarE:
	.word	8                               # 0x8
	.size	_ZN2kcL32kc_subphyla_CExpressionDollarvarE, 4

	.type	.L.str.185,@object              # @.str.185
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.185:
	.asciz	"CExpressionNl"
	.size	.L.str.185, 14

	.type	.L.str.186,@object              # @.str.186
.L.str.186:
	.asciz	"CExpressionDQ"
	.size	.L.str.186, 14

	.type	_ZN2kcL25kc_subphyla_CExpressionDQE,@object # @_ZN2kcL25kc_subphyla_CExpressionDQE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_CExpressionDQE:
	.word	27                              # 0x1b
	.size	_ZN2kcL25kc_subphyla_CExpressionDQE, 4

	.type	.L.str.187,@object              # @.str.187
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.187:
	.asciz	"CExpressionSQ"
	.size	.L.str.187, 14

	.type	_ZN2kcL25kc_subphyla_CExpressionSQE,@object # @_ZN2kcL25kc_subphyla_CExpressionSQE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_CExpressionSQE:
	.word	29                              # 0x1d
	.size	_ZN2kcL25kc_subphyla_CExpressionSQE, 4

	.type	.L.str.188,@object              # @.str.188
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.188:
	.asciz	"CExpressionPack"
	.size	.L.str.188, 16

	.type	_ZN2kcL27kc_subphyla_CExpressionPackE,@object # @_ZN2kcL27kc_subphyla_CExpressionPackE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_CExpressionPackE:
	.word	25                              # 0x19
	.size	_ZN2kcL27kc_subphyla_CExpressionPackE, 4

	.type	.L.str.189,@object              # @.str.189
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.189:
	.asciz	"CExpressionArray"
	.size	.L.str.189, 17

	.type	_ZN2kcL28kc_subphyla_CExpressionArrayE,@object # @_ZN2kcL28kc_subphyla_CExpressionArrayE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_CExpressionArrayE:
	.word	25                              # 0x19
	.size	_ZN2kcL28kc_subphyla_CExpressionArrayE, 4

	.type	.L.str.190,@object              # @.str.190
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.190:
	.asciz	"NilCexpressionDQ"
	.size	.L.str.190, 17

	.type	.L.str.191,@object              # @.str.191
.L.str.191:
	.asciz	"ConsCexpressionDQ"
	.size	.L.str.191, 18

	.type	_ZN2kcL29kc_subphyla_ConsCexpressionDQE,@object # @_ZN2kcL29kc_subphyla_ConsCexpressionDQE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_ConsCexpressionDQE:
	.word	28                              # 0x1c
	.word	27                              # 0x1b
	.size	_ZN2kcL29kc_subphyla_ConsCexpressionDQE, 8

	.type	.L.str.192,@object              # @.str.192
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.192:
	.asciz	"CExpressionDQPart"
	.size	.L.str.192, 18

	.type	_ZN2kcL29kc_subphyla_CExpressionDQPartE,@object # @_ZN2kcL29kc_subphyla_CExpressionDQPartE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_CExpressionDQPartE:
	.word	2                               # 0x2
	.size	_ZN2kcL29kc_subphyla_CExpressionDQPartE, 4

	.type	.L.str.193,@object              # @.str.193
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.193:
	.asciz	"CExpressionDQNl"
	.size	.L.str.193, 16

	.type	.L.str.194,@object              # @.str.194
.L.str.194:
	.asciz	"NilCexpressionSQ"
	.size	.L.str.194, 17

	.type	.L.str.195,@object              # @.str.195
.L.str.195:
	.asciz	"ConsCexpressionSQ"
	.size	.L.str.195, 18

	.type	_ZN2kcL29kc_subphyla_ConsCexpressionSQE,@object # @_ZN2kcL29kc_subphyla_ConsCexpressionSQE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_ConsCexpressionSQE:
	.word	30                              # 0x1e
	.word	29                              # 0x1d
	.size	_ZN2kcL29kc_subphyla_ConsCexpressionSQE, 8

	.type	.L.str.196,@object              # @.str.196
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.196:
	.asciz	"CExpressionSQPart"
	.size	.L.str.196, 18

	.type	_ZN2kcL29kc_subphyla_CExpressionSQPartE,@object # @_ZN2kcL29kc_subphyla_CExpressionSQPartE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_CExpressionSQPartE:
	.word	2                               # 0x2
	.size	_ZN2kcL29kc_subphyla_CExpressionSQPartE, 4

	.type	.L.str.197,@object              # @.str.197
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.197:
	.asciz	"CExpressionSQNl"
	.size	.L.str.197, 16

	.type	.L.str.198,@object              # @.str.198
.L.str.198:
	.asciz	"NilidCexpressions"
	.size	.L.str.198, 18

	.type	.L.str.199,@object              # @.str.199
.L.str.199:
	.asciz	"ConsidCexpressions"
	.size	.L.str.199, 19

	.type	_ZN2kcL30kc_subphyla_ConsidCexpressionsE,@object # @_ZN2kcL30kc_subphyla_ConsidCexpressionsE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_ConsidCexpressionsE:
	.word	32                              # 0x20
	.word	31                              # 0x1f
	.size	_ZN2kcL30kc_subphyla_ConsidCexpressionsE, 8

	.type	.L.str.200,@object              # @.str.200
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.200:
	.asciz	"IdCexpression"
	.size	.L.str.200, 14

	.type	_ZN2kcL25kc_subphyla_IdCexpressionE,@object # @_ZN2kcL25kc_subphyla_IdCexpressionE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_IdCexpressionE:
	.word	7                               # 0x7
	.word	25                              # 0x19
	.size	_ZN2kcL25kc_subphyla_IdCexpressionE, 8

	.type	.L.str.201,@object              # @.str.201
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.201:
	.asciz	"NilCtexts"
	.size	.L.str.201, 10

	.type	.L.str.202,@object              # @.str.202
.L.str.202:
	.asciz	"ConsCtexts"
	.size	.L.str.202, 11

	.type	_ZN2kcL22kc_subphyla_ConsCtextsE,@object # @_ZN2kcL22kc_subphyla_ConsCtextsE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_ConsCtextsE:
	.word	56                              # 0x38
	.word	33                              # 0x21
	.size	_ZN2kcL22kc_subphyla_ConsCtextsE, 8

	.type	.L.str.203,@object              # @.str.203
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.203:
	.asciz	"Nilincludefiles"
	.size	.L.str.203, 16

	.type	.L.str.204,@object              # @.str.204
.L.str.204:
	.asciz	"Consincludefiles"
	.size	.L.str.204, 17

	.type	_ZN2kcL28kc_subphyla_ConsincludefilesE,@object # @_ZN2kcL28kc_subphyla_ConsincludefilesE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_ConsincludefilesE:
	.word	35                              # 0x23
	.word	34                              # 0x22
	.size	_ZN2kcL28kc_subphyla_ConsincludefilesE, 8

	.type	.L.str.205,@object              # @.str.205
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.205:
	.asciz	"IncludeFile"
	.size	.L.str.205, 12

	.type	_ZN2kcL23kc_subphyla_IncludeFileE,@object # @_ZN2kcL23kc_subphyla_IncludeFileE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_IncludeFileE:
	.word	2                               # 0x2
	.size	_ZN2kcL23kc_subphyla_IncludeFileE, 4

	.type	.L.str.206,@object              # @.str.206
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.206:
	.asciz	"Nilincludedeclarations"
	.size	.L.str.206, 23

	.type	.L.str.207,@object              # @.str.207
.L.str.207:
	.asciz	"Consincludedeclarations"
	.size	.L.str.207, 24

	.type	_ZN2kcL35kc_subphyla_ConsincludedeclarationsE,@object # @_ZN2kcL35kc_subphyla_ConsincludedeclarationsE
	.data
	.p2align	2, 0x0
_ZN2kcL35kc_subphyla_ConsincludedeclarationsE:
	.word	37                              # 0x25
	.word	36                              # 0x24
	.size	_ZN2kcL35kc_subphyla_ConsincludedeclarationsE, 8

	.type	.L.str.208,@object              # @.str.208
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.208:
	.asciz	"IncludeDeclaration"
	.size	.L.str.208, 19

	.type	_ZN2kcL30kc_subphyla_IncludeDeclarationE,@object # @_ZN2kcL30kc_subphyla_IncludeDeclarationE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_IncludeDeclarationE:
	.word	2                               # 0x2
	.size	_ZN2kcL30kc_subphyla_IncludeDeclarationE, 4

	.type	.L.str.209,@object              # @.str.209
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.209:
	.asciz	"Nilrwdeclarations"
	.size	.L.str.209, 18

	.type	.L.str.210,@object              # @.str.210
.L.str.210:
	.asciz	"Consrwdeclarations"
	.size	.L.str.210, 19

	.type	_ZN2kcL30kc_subphyla_ConsrwdeclarationsE,@object # @_ZN2kcL30kc_subphyla_ConsrwdeclarationsE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_ConsrwdeclarationsE:
	.word	39                              # 0x27
	.word	38                              # 0x26
	.size	_ZN2kcL30kc_subphyla_ConsrwdeclarationsE, 8

	.type	.L.str.211,@object              # @.str.211
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.211:
	.asciz	"RwDeclaration"
	.size	.L.str.211, 14

	.type	_ZN2kcL25kc_subphyla_RwDeclarationE,@object # @_ZN2kcL25kc_subphyla_RwDeclarationE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_RwDeclarationE:
	.word	44                              # 0x2c
	.word	40                              # 0x28
	.size	_ZN2kcL25kc_subphyla_RwDeclarationE, 8

	.type	.L.str.212,@object              # @.str.212
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.212:
	.asciz	"Nilrewriteclauses"
	.size	.L.str.212, 18

	.type	.L.str.213,@object              # @.str.213
.L.str.213:
	.asciz	"Consrewriteclauses"
	.size	.L.str.213, 19

	.type	_ZN2kcL30kc_subphyla_ConsrewriteclausesE,@object # @_ZN2kcL30kc_subphyla_ConsrewriteclausesE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_ConsrewriteclausesE:
	.word	41                              # 0x29
	.word	40                              # 0x28
	.size	_ZN2kcL30kc_subphyla_ConsrewriteclausesE, 8

	.type	.L.str.214,@object              # @.str.214
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.214:
	.asciz	"RewriteClause"
	.size	.L.str.214, 14

	.type	_ZN2kcL25kc_subphyla_RewriteClauseE,@object # @_ZN2kcL25kc_subphyla_RewriteClauseE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_RewriteClauseE:
	.word	68                              # 0x44
	.word	49                              # 0x31
	.size	_ZN2kcL25kc_subphyla_RewriteClauseE, 8

	.type	.L.str.215,@object              # @.str.215
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.215:
	.asciz	"Nilpatternchains"
	.size	.L.str.215, 17

	.type	.L.str.216,@object              # @.str.216
.L.str.216:
	.asciz	"Conspatternchains"
	.size	.L.str.216, 18

	.type	_ZN2kcL29kc_subphyla_ConspatternchainsE,@object # @_ZN2kcL29kc_subphyla_ConspatternchainsE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_ConspatternchainsE:
	.word	43                              # 0x2b
	.word	42                              # 0x2a
	.size	_ZN2kcL29kc_subphyla_ConspatternchainsE, 8

	.type	.L.str.217,@object              # @.str.217
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.217:
	.asciz	"Nilpatternchain"
	.size	.L.str.217, 16

	.type	.L.str.218,@object              # @.str.218
.L.str.218:
	.asciz	"Conspatternchain"
	.size	.L.str.218, 17

	.type	_ZN2kcL28kc_subphyla_ConspatternchainE,@object # @_ZN2kcL28kc_subphyla_ConspatternchainE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_ConspatternchainE:
	.word	45                              # 0x2d
	.word	43                              # 0x2b
	.size	_ZN2kcL28kc_subphyla_ConspatternchainE, 8

	.type	.L.str.219,@object              # @.str.219
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.219:
	.asciz	"Niloutmostpatterns"
	.size	.L.str.219, 19

	.type	.L.str.220,@object              # @.str.220
.L.str.220:
	.asciz	"Consoutmostpatterns"
	.size	.L.str.220, 20

	.type	_ZN2kcL31kc_subphyla_ConsoutmostpatternsE,@object # @_ZN2kcL31kc_subphyla_ConsoutmostpatternsE
	.data
	.p2align	2, 0x0
_ZN2kcL31kc_subphyla_ConsoutmostpatternsE:
	.word	46                              # 0x2e
	.word	44                              # 0x2c
	.size	_ZN2kcL31kc_subphyla_ConsoutmostpatternsE, 8

	.type	.L.str.221,@object              # @.str.221
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.221:
	.asciz	"PatternchainitemOutmost"
	.size	.L.str.221, 24

	.type	_ZN2kcL35kc_subphyla_PatternchainitemOutmostE,@object # @_ZN2kcL35kc_subphyla_PatternchainitemOutmostE
	.data
	.p2align	2, 0x0
_ZN2kcL35kc_subphyla_PatternchainitemOutmostE:
	.word	46                              # 0x2e
	.size	_ZN2kcL35kc_subphyla_PatternchainitemOutmostE, 4

	.type	.L.str.222,@object              # @.str.222
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.222:
	.asciz	"PatternchainitemGroup"
	.size	.L.str.222, 22

	.type	_ZN2kcL33kc_subphyla_PatternchainitemGroupE,@object # @_ZN2kcL33kc_subphyla_PatternchainitemGroupE
	.data
	.p2align	2, 0x0
_ZN2kcL33kc_subphyla_PatternchainitemGroupE:
	.word	42                              # 0x2a
	.size	_ZN2kcL33kc_subphyla_PatternchainitemGroupE, 4

	.type	.L.str.223,@object              # @.str.223
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.223:
	.asciz	"PatternchainitemDollarid"
	.size	.L.str.223, 25

	.type	_ZN2kcL36kc_subphyla_PatternchainitemDollaridE,@object # @_ZN2kcL36kc_subphyla_PatternchainitemDollaridE
	.data
	.p2align	2, 0x0
_ZN2kcL36kc_subphyla_PatternchainitemDollaridE:
	.word	7                               # 0x7
	.size	_ZN2kcL36kc_subphyla_PatternchainitemDollaridE, 4

	.type	.L.str.224,@object              # @.str.224
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.224:
	.asciz	"OPOperatorWildcard"
	.size	.L.str.224, 19

	.type	_ZN2kcL30kc_subphyla_OPOperatorWildcardE,@object # @_ZN2kcL30kc_subphyla_OPOperatorWildcardE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_OPOperatorWildcardE:
	.word	7                               # 0x7
	.word	25                              # 0x19
	.size	_ZN2kcL30kc_subphyla_OPOperatorWildcardE, 8

	.type	.L.str.225,@object              # @.str.225
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.225:
	.asciz	"OPOperator"
	.size	.L.str.225, 11

	.type	_ZN2kcL22kc_subphyla_OPOperatorE,@object # @_ZN2kcL22kc_subphyla_OPOperatorE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_OPOperatorE:
	.word	7                               # 0x7
	.word	48                              # 0x30
	.word	25                              # 0x19
	.size	_ZN2kcL22kc_subphyla_OPOperatorE, 12

	.type	.L.str.226,@object              # @.str.226
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.226:
	.asciz	"OPNonLeafVariable"
	.size	.L.str.226, 18

	.type	_ZN2kcL29kc_subphyla_OPNonLeafVariableE,@object # @_ZN2kcL29kc_subphyla_OPNonLeafVariableE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_OPNonLeafVariableE:
	.word	7                               # 0x7
	.word	46                              # 0x2e
	.size	_ZN2kcL29kc_subphyla_OPNonLeafVariableE, 8

	.type	.L.str.227,@object              # @.str.227
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.227:
	.asciz	"OPWildcard"
	.size	.L.str.227, 11

	.type	_ZN2kcL22kc_subphyla_OPWildcardE,@object # @_ZN2kcL22kc_subphyla_OPWildcardE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_OPWildcardE:
	.word	25                              # 0x19
	.size	_ZN2kcL22kc_subphyla_OPWildcardE, 4

	.type	.L.str.228,@object              # @.str.228
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.228:
	.asciz	"OPDefault"
	.size	.L.str.228, 10

	.type	_ZN2kcL21kc_subphyla_OPDefaultE,@object # @_ZN2kcL21kc_subphyla_OPDefaultE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_OPDefaultE:
	.word	25                              # 0x19
	.size	_ZN2kcL21kc_subphyla_OPDefaultE, 4

	.type	.L.str.229,@object              # @.str.229
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.229:
	.asciz	"PVariable"
	.size	.L.str.229, 10

	.type	_ZN2kcL21kc_subphyla_PVariableE,@object # @_ZN2kcL21kc_subphyla_PVariableE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_PVariableE:
	.word	7                               # 0x7
	.size	_ZN2kcL21kc_subphyla_PVariableE, 4

	.type	.L.str.230,@object              # @.str.230
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.230:
	.asciz	"POperator"
	.size	.L.str.230, 10

	.type	_ZN2kcL21kc_subphyla_POperatorE,@object # @_ZN2kcL21kc_subphyla_POperatorE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_POperatorE:
	.word	7                               # 0x7
	.word	48                              # 0x30
	.size	_ZN2kcL21kc_subphyla_POperatorE, 8

	.type	.L.str.231,@object              # @.str.231
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.231:
	.asciz	"PNonLeafVariable"
	.size	.L.str.231, 17

	.type	_ZN2kcL28kc_subphyla_PNonLeafVariableE,@object # @_ZN2kcL28kc_subphyla_PNonLeafVariableE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_PNonLeafVariableE:
	.word	7                               # 0x7
	.word	47                              # 0x2f
	.size	_ZN2kcL28kc_subphyla_PNonLeafVariableE, 8

	.type	.L.str.232,@object              # @.str.232
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.232:
	.asciz	"PWildcard"
	.size	.L.str.232, 10

	.type	.L.str.233,@object              # @.str.233
.L.str.233:
	.asciz	"PStringLiteral"
	.size	.L.str.233, 15

	.type	_ZN2kcL26kc_subphyla_PStringLiteralE,@object # @_ZN2kcL26kc_subphyla_PStringLiteralE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_PStringLiteralE:
	.word	27                              # 0x1b
	.size	_ZN2kcL26kc_subphyla_PStringLiteralE, 4

	.type	.L.str.234,@object              # @.str.234
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.234:
	.asciz	"PIntLiteral"
	.size	.L.str.234, 12

	.type	_ZN2kcL23kc_subphyla_PIntLiteralE,@object # @_ZN2kcL23kc_subphyla_PIntLiteralE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_PIntLiteralE:
	.word	8                               # 0x8
	.size	_ZN2kcL23kc_subphyla_PIntLiteralE, 4

	.type	.L.str.235,@object              # @.str.235
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.235:
	.asciz	"Nilpatterns"
	.size	.L.str.235, 12

	.type	.L.str.236,@object              # @.str.236
.L.str.236:
	.asciz	"Conspatterns"
	.size	.L.str.236, 13

	.type	_ZN2kcL24kc_subphyla_ConspatternsE,@object # @_ZN2kcL24kc_subphyla_ConspatternsE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_ConspatternsE:
	.word	47                              # 0x2f
	.word	48                              # 0x30
	.size	_ZN2kcL24kc_subphyla_ConspatternsE, 8

	.type	.L.str.237,@object              # @.str.237
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.237:
	.asciz	"TVariable"
	.size	.L.str.237, 10

	.type	_ZN2kcL21kc_subphyla_TVariableE,@object # @_ZN2kcL21kc_subphyla_TVariableE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_TVariableE:
	.word	7                               # 0x7
	.size	_ZN2kcL21kc_subphyla_TVariableE, 4

	.type	.L.str.238,@object              # @.str.238
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.238:
	.asciz	"TOperator"
	.size	.L.str.238, 10

	.type	_ZN2kcL21kc_subphyla_TOperatorE,@object # @_ZN2kcL21kc_subphyla_TOperatorE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_TOperatorE:
	.word	7                               # 0x7
	.word	50                              # 0x32
	.size	_ZN2kcL21kc_subphyla_TOperatorE, 8

	.type	.L.str.239,@object              # @.str.239
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.239:
	.asciz	"TMethod"
	.size	.L.str.239, 8

	.type	_ZN2kcL19kc_subphyla_TMethodE,@object # @_ZN2kcL19kc_subphyla_TMethodE
	.data
	.p2align	2, 0x0
_ZN2kcL19kc_subphyla_TMethodE:
	.word	49                              # 0x31
	.word	7                               # 0x7
	.word	50                              # 0x32
	.size	_ZN2kcL19kc_subphyla_TMethodE, 12

	.type	.L.str.240,@object              # @.str.240
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.240:
	.asciz	"TMethodDot"
	.size	.L.str.240, 11

	.type	_ZN2kcL22kc_subphyla_TMethodDotE,@object # @_ZN2kcL22kc_subphyla_TMethodDotE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_TMethodDotE:
	.word	49                              # 0x31
	.word	7                               # 0x7
	.word	50                              # 0x32
	.size	_ZN2kcL22kc_subphyla_TMethodDotE, 12

	.type	.L.str.241,@object              # @.str.241
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.241:
	.asciz	"TMemberVar"
	.size	.L.str.241, 11

	.type	_ZN2kcL22kc_subphyla_TMemberVarE,@object # @_ZN2kcL22kc_subphyla_TMemberVarE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_TMemberVarE:
	.word	49                              # 0x31
	.word	7                               # 0x7
	.size	_ZN2kcL22kc_subphyla_TMemberVarE, 8

	.type	.L.str.242,@object              # @.str.242
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.242:
	.asciz	"TMemberVarDot"
	.size	.L.str.242, 14

	.type	_ZN2kcL25kc_subphyla_TMemberVarDotE,@object # @_ZN2kcL25kc_subphyla_TMemberVarDotE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_TMemberVarDotE:
	.word	49                              # 0x31
	.word	7                               # 0x7
	.size	_ZN2kcL25kc_subphyla_TMemberVarDotE, 8

	.type	.L.str.243,@object              # @.str.243
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.243:
	.asciz	"TCTerm"
	.size	.L.str.243, 7

	.type	_ZN2kcL18kc_subphyla_TCTermE,@object # @_ZN2kcL18kc_subphyla_TCTermE
	.data
	.p2align	2, 0x0
_ZN2kcL18kc_subphyla_TCTermE:
	.word	29                              # 0x1d
	.size	_ZN2kcL18kc_subphyla_TCTermE, 4

	.type	.L.str.244,@object              # @.str.244
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.244:
	.asciz	"TStringLiteral"
	.size	.L.str.244, 15

	.type	_ZN2kcL26kc_subphyla_TStringLiteralE,@object # @_ZN2kcL26kc_subphyla_TStringLiteralE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_TStringLiteralE:
	.word	27                              # 0x1b
	.size	_ZN2kcL26kc_subphyla_TStringLiteralE, 4

	.type	.L.str.245,@object              # @.str.245
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.245:
	.asciz	"TIntLiteral"
	.size	.L.str.245, 12

	.type	_ZN2kcL23kc_subphyla_TIntLiteralE,@object # @_ZN2kcL23kc_subphyla_TIntLiteralE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_TIntLiteralE:
	.word	8                               # 0x8
	.size	_ZN2kcL23kc_subphyla_TIntLiteralE, 4

	.type	.L.str.246,@object              # @.str.246
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.246:
	.asciz	"Nilterms"
	.size	.L.str.246, 9

	.type	.L.str.247,@object              # @.str.247
.L.str.247:
	.asciz	"Consterms"
	.size	.L.str.247, 10

	.type	_ZN2kcL21kc_subphyla_ConstermsE,@object # @_ZN2kcL21kc_subphyla_ConstermsE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_ConstermsE:
	.word	49                              # 0x31
	.word	50                              # 0x32
	.size	_ZN2kcL21kc_subphyla_ConstermsE, 8

	.type	.L.str.248,@object              # @.str.248
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.248:
	.asciz	"Nilfnfiles"
	.size	.L.str.248, 11

	.type	.L.str.249,@object              # @.str.249
.L.str.249:
	.asciz	"Consfnfiles"
	.size	.L.str.249, 12

	.type	_ZN2kcL23kc_subphyla_ConsfnfilesE,@object # @_ZN2kcL23kc_subphyla_ConsfnfilesE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_ConsfnfilesE:
	.word	52                              # 0x34
	.word	51                              # 0x33
	.size	_ZN2kcL23kc_subphyla_ConsfnfilesE, 8

	.type	.L.str.250,@object              # @.str.250
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.250:
	.asciz	"FnFile"
	.size	.L.str.250, 7

	.type	_ZN2kcL18kc_subphyla_FnFileE,@object # @_ZN2kcL18kc_subphyla_FnFileE
	.data
	.p2align	2, 0x0
_ZN2kcL18kc_subphyla_FnFileE:
	.word	2                               # 0x2
	.size	_ZN2kcL18kc_subphyla_FnFileE, 4

	.type	.L.str.251,@object              # @.str.251
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.251:
	.asciz	"Nilfndeclarations"
	.size	.L.str.251, 18

	.type	.L.str.252,@object              # @.str.252
.L.str.252:
	.asciz	"Consfndeclarations"
	.size	.L.str.252, 19

	.type	_ZN2kcL30kc_subphyla_ConsfndeclarationsE,@object # @_ZN2kcL30kc_subphyla_ConsfndeclarationsE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_ConsfndeclarationsE:
	.word	54                              # 0x36
	.word	53                              # 0x35
	.size	_ZN2kcL30kc_subphyla_ConsfndeclarationsE, 8

	.type	.L.str.253,@object              # @.str.253
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.253:
	.asciz	"FnAcDeclaration"
	.size	.L.str.253, 16

	.type	_ZN2kcL27kc_subphyla_FnAcDeclarationE,@object # @_ZN2kcL27kc_subphyla_FnAcDeclarationE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_FnAcDeclarationE:
	.word	103                             # 0x67
	.word	110                             # 0x6e
	.word	102                             # 0x66
	.word	129                             # 0x81
	.word	56                              # 0x38
	.word	7                               # 0x7
	.word	55                              # 0x37
	.size	_ZN2kcL27kc_subphyla_FnAcDeclarationE, 28

	.type	.L.str.254,@object              # @.str.254
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.254:
	.asciz	"AcMemberDeclaration"
	.size	.L.str.254, 20

	.type	_ZN2kcL31kc_subphyla_AcMemberDeclarationE,@object # @_ZN2kcL31kc_subphyla_AcMemberDeclarationE
	.data
	.p2align	2, 0x0
_ZN2kcL31kc_subphyla_AcMemberDeclarationE:
	.word	103                             # 0x67
	.word	110                             # 0x6e
	.word	126                             # 0x7e
	.word	55                              # 0x37
	.size	_ZN2kcL31kc_subphyla_AcMemberDeclarationE, 16

	.type	.L.str.255,@object              # @.str.255
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.255:
	.asciz	"GlobalFn"
	.size	.L.str.255, 9

	.type	.L.str.256,@object              # @.str.256
.L.str.256:
	.asciz	"StaticFn"
	.size	.L.str.256, 9

	.type	_ZN2kcL20kc_subphyla_StaticFnE,@object # @_ZN2kcL20kc_subphyla_StaticFnE
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_StaticFnE:
	.word	2                               # 0x2
	.size	_ZN2kcL20kc_subphyla_StaticFnE, 4

	.type	.L.str.257,@object              # @.str.257
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.257:
	.asciz	"MemberFn"
	.size	.L.str.257, 9

	.type	.L.str.258,@object              # @.str.258
.L.str.258:
	.asciz	"ConstructorFn"
	.size	.L.str.258, 14

	.type	.L.str.259,@object              # @.str.259
.L.str.259:
	.asciz	"DestructorFn"
	.size	.L.str.259, 13

	.type	.L.str.260,@object              # @.str.260
.L.str.260:
	.asciz	"ConvOperatorFn"
	.size	.L.str.260, 15

	.type	.L.str.261,@object              # @.str.261
.L.str.261:
	.asciz	"NilCtext"
	.size	.L.str.261, 9

	.type	.L.str.262,@object              # @.str.262
.L.str.262:
	.asciz	"ConsCtext"
	.size	.L.str.262, 10

	.type	_ZN2kcL21kc_subphyla_ConsCtextE,@object # @_ZN2kcL21kc_subphyla_ConsCtextE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_ConsCtextE:
	.word	57                              # 0x39
	.word	56                              # 0x38
	.size	_ZN2kcL21kc_subphyla_ConsCtextE, 8

	.type	.L.str.263,@object              # @.str.263
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.263:
	.asciz	"CTextLine"
	.size	.L.str.263, 10

	.type	_ZN2kcL21kc_subphyla_CTextLineE,@object # @_ZN2kcL21kc_subphyla_CTextLineE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_CTextLineE:
	.word	2                               # 0x2
	.size	_ZN2kcL21kc_subphyla_CTextLineE, 4

	.type	.L.str.264,@object              # @.str.264
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.264:
	.asciz	"CTextDollarVar"
	.size	.L.str.264, 15

	.type	_ZN2kcL26kc_subphyla_CTextDollarVarE,@object # @_ZN2kcL26kc_subphyla_CTextDollarVarE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_CTextDollarVarE:
	.word	8                               # 0x8
	.size	_ZN2kcL26kc_subphyla_CTextDollarVarE, 4

	.type	.L.str.265,@object              # @.str.265
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.265:
	.asciz	"CTextNl"
	.size	.L.str.265, 8

	.type	_ZN2kcL19kc_subphyla_CTextNlE,@object # @_ZN2kcL19kc_subphyla_CTextNlE
	.data
	.p2align	2, 0x0
_ZN2kcL19kc_subphyla_CTextNlE:
	.word	4                               # 0x4
	.size	_ZN2kcL19kc_subphyla_CTextNlE, 4

	.type	.L.str.266,@object              # @.str.266
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.266:
	.asciz	"CTextCexpressionDQ"
	.size	.L.str.266, 19

	.type	_ZN2kcL30kc_subphyla_CTextCexpressionDQE,@object # @_ZN2kcL30kc_subphyla_CTextCexpressionDQE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_CTextCexpressionDQE:
	.word	27                              # 0x1b
	.size	_ZN2kcL30kc_subphyla_CTextCexpressionDQE, 4

	.type	.L.str.267,@object              # @.str.267
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.267:
	.asciz	"CTextCexpressionSQ"
	.size	.L.str.267, 19

	.type	_ZN2kcL30kc_subphyla_CTextCexpressionSQE,@object # @_ZN2kcL30kc_subphyla_CTextCexpressionSQE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_CTextCexpressionSQE:
	.word	29                              # 0x1d
	.size	_ZN2kcL30kc_subphyla_CTextCexpressionSQE, 4

	.type	.L.str.268,@object              # @.str.268
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.268:
	.asciz	"CTextCbody"
	.size	.L.str.268, 11

	.type	_ZN2kcL22kc_subphyla_CTextCbodyE,@object # @_ZN2kcL22kc_subphyla_CTextCbodyE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_CTextCbodyE:
	.word	56                              # 0x38
	.size	_ZN2kcL22kc_subphyla_CTextCbodyE, 4

	.type	.L.str.269,@object              # @.str.269
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.269:
	.asciz	"CTextForeachexpression"
	.size	.L.str.269, 23

	.type	_ZN2kcL34kc_subphyla_CTextForeachexpressionE,@object # @_ZN2kcL34kc_subphyla_CTextForeachexpressionE
	.data
	.p2align	2, 0x0
_ZN2kcL34kc_subphyla_CTextForeachexpressionE:
	.word	43                              # 0x2b
	.word	31                              # 0x1f
	.word	60                              # 0x3c
	.word	56                              # 0x38
	.word	58                              # 0x3a
	.size	_ZN2kcL34kc_subphyla_CTextForeachexpressionE, 20

	.type	.L.str.270,@object              # @.str.270
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.270:
	.asciz	"CTextWithexpression"
	.size	.L.str.270, 20

	.type	_ZN2kcL31kc_subphyla_CTextWithexpressionE,@object # @_ZN2kcL31kc_subphyla_CTextWithexpressionE
	.data
	.p2align	2, 0x0
_ZN2kcL31kc_subphyla_CTextWithexpressionE:
	.word	60                              # 0x3c
	.word	62                              # 0x3e
	.word	59                              # 0x3b
	.size	_ZN2kcL31kc_subphyla_CTextWithexpressionE, 12

	.type	.L.str.271,@object              # @.str.271
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.271:
	.asciz	"NoForeachAfter"
	.size	.L.str.271, 15

	.type	.L.str.272,@object              # @.str.272
.L.str.272:
	.asciz	"ForeachAfter"
	.size	.L.str.272, 13

	.type	_ZN2kcL24kc_subphyla_ForeachAfterE,@object # @_ZN2kcL24kc_subphyla_ForeachAfterE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_ForeachAfterE:
	.word	43                              # 0x2b
	.word	31                              # 0x1f
	.word	60                              # 0x3c
	.word	56                              # 0x38
	.size	_ZN2kcL24kc_subphyla_ForeachAfterE, 16

	.type	.L.str.273,@object              # @.str.273
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.273:
	.asciz	"InForeachContext"
	.size	.L.str.273, 17

	.type	_ZN2kcL28kc_subphyla_InForeachContextE,@object # @_ZN2kcL28kc_subphyla_InForeachContextE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_InForeachContextE:
	.word	43                              # 0x2b
	.size	_ZN2kcL28kc_subphyla_InForeachContextE, 4

	.type	.L.str.274,@object              # @.str.274
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.274:
	.asciz	"NotInForeachContext"
	.size	.L.str.274, 20

	.type	.L.str.275,@object              # @.str.275
.L.str.275:
	.asciz	"Nilwithexpressions"
	.size	.L.str.275, 19

	.type	.L.str.276,@object              # @.str.276
.L.str.276:
	.asciz	"Conswithexpressions"
	.size	.L.str.276, 20

	.type	_ZN2kcL31kc_subphyla_ConswithexpressionsE,@object # @_ZN2kcL31kc_subphyla_ConswithexpressionsE
	.data
	.p2align	2, 0x0
_ZN2kcL31kc_subphyla_ConswithexpressionsE:
	.word	61                              # 0x3d
	.word	60                              # 0x3c
	.size	_ZN2kcL31kc_subphyla_ConswithexpressionsE, 8

	.type	.L.str.277,@object              # @.str.277
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.277:
	.asciz	"WEVariable"
	.size	.L.str.277, 11

	.type	_ZN2kcL22kc_subphyla_WEVariableE,@object # @_ZN2kcL22kc_subphyla_WEVariableE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_WEVariableE:
	.word	7                               # 0x7
	.size	_ZN2kcL22kc_subphyla_WEVariableE, 4

	.type	.L.str.278,@object              # @.str.278
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.278:
	.asciz	"WECexpression"
	.size	.L.str.278, 14

	.type	_ZN2kcL25kc_subphyla_WECexpressionE,@object # @_ZN2kcL25kc_subphyla_WECexpressionE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_WECexpressionE:
	.word	25                              # 0x19
	.size	_ZN2kcL25kc_subphyla_WECexpressionE, 4

	.type	.L.str.279,@object              # @.str.279
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.279:
	.asciz	"Nilwithcases"
	.size	.L.str.279, 13

	.type	.L.str.280,@object              # @.str.280
.L.str.280:
	.asciz	"Conswithcases"
	.size	.L.str.280, 14

	.type	_ZN2kcL25kc_subphyla_ConswithcasesE,@object # @_ZN2kcL25kc_subphyla_ConswithcasesE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_ConswithcasesE:
	.word	63                              # 0x3f
	.word	62                              # 0x3e
	.size	_ZN2kcL25kc_subphyla_ConswithcasesE, 8

	.type	.L.str.281,@object              # @.str.281
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.281:
	.asciz	"Withcase"
	.size	.L.str.281, 9

	.type	_ZN2kcL20kc_subphyla_WithcaseE,@object # @_ZN2kcL20kc_subphyla_WithcaseE
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_WithcaseE:
	.word	42                              # 0x2a
	.word	56                              # 0x38
	.size	_ZN2kcL20kc_subphyla_WithcaseE, 8

	.type	.L.str.282,@object              # @.str.282
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.282:
	.asciz	"Nilunparsedeclarations"
	.size	.L.str.282, 23

	.type	.L.str.283,@object              # @.str.283
.L.str.283:
	.asciz	"Consunparsedeclarations"
	.size	.L.str.283, 24

	.type	_ZN2kcL35kc_subphyla_ConsunparsedeclarationsE,@object # @_ZN2kcL35kc_subphyla_ConsunparsedeclarationsE
	.data
	.p2align	2, 0x0
_ZN2kcL35kc_subphyla_ConsunparsedeclarationsE:
	.word	65                              # 0x41
	.word	64                              # 0x40
	.size	_ZN2kcL35kc_subphyla_ConsunparsedeclarationsE, 8

	.type	.L.str.284,@object              # @.str.284
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.284:
	.asciz	"UnparseDeclaration"
	.size	.L.str.284, 19

	.type	_ZN2kcL30kc_subphyla_UnparseDeclarationE,@object # @_ZN2kcL30kc_subphyla_UnparseDeclarationE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_UnparseDeclarationE:
	.word	44                              # 0x2c
	.word	66                              # 0x42
	.size	_ZN2kcL30kc_subphyla_UnparseDeclarationE, 8

	.type	.L.str.285,@object              # @.str.285
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.285:
	.asciz	"Nilunparseclauses"
	.size	.L.str.285, 18

	.type	.L.str.286,@object              # @.str.286
.L.str.286:
	.asciz	"Consunparseclauses"
	.size	.L.str.286, 19

	.type	_ZN2kcL30kc_subphyla_ConsunparseclausesE,@object # @_ZN2kcL30kc_subphyla_ConsunparseclausesE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_ConsunparseclausesE:
	.word	67                              # 0x43
	.word	66                              # 0x42
	.size	_ZN2kcL30kc_subphyla_ConsunparseclausesE, 8

	.type	.L.str.287,@object              # @.str.287
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.287:
	.asciz	"UnparseClause"
	.size	.L.str.287, 14

	.type	_ZN2kcL25kc_subphyla_UnparseClauseE,@object # @_ZN2kcL25kc_subphyla_UnparseClauseE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_UnparseClauseE:
	.word	68                              # 0x44
	.word	69                              # 0x45
	.size	_ZN2kcL25kc_subphyla_UnparseClauseE, 8

	.type	.L.str.288,@object              # @.str.288
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.288:
	.asciz	"Nilviewnames"
	.size	.L.str.288, 13

	.type	.L.str.289,@object              # @.str.289
.L.str.289:
	.asciz	"Consviewnames"
	.size	.L.str.289, 14

	.type	_ZN2kcL25kc_subphyla_ConsviewnamesE,@object # @_ZN2kcL25kc_subphyla_ConsviewnamesE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_ConsviewnamesE:
	.word	7                               # 0x7
	.word	68                              # 0x44
	.size	_ZN2kcL25kc_subphyla_ConsviewnamesE, 8

	.type	.L.str.290,@object              # @.str.290
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.290:
	.asciz	"Nilunparseitems"
	.size	.L.str.290, 16

	.type	.L.str.291,@object              # @.str.291
.L.str.291:
	.asciz	"Consunparseitems"
	.size	.L.str.291, 17

	.type	_ZN2kcL28kc_subphyla_ConsunparseitemsE,@object # @_ZN2kcL28kc_subphyla_ConsunparseitemsE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_ConsunparseitemsE:
	.word	70                              # 0x46
	.word	69                              # 0x45
	.size	_ZN2kcL28kc_subphyla_ConsunparseitemsE, 8

	.type	.L.str.292,@object              # @.str.292
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.292:
	.asciz	"UnpStr"
	.size	.L.str.292, 7

	.type	_ZN2kcL18kc_subphyla_UnpStrE,@object # @_ZN2kcL18kc_subphyla_UnpStrE
	.data
	.p2align	2, 0x0
_ZN2kcL18kc_subphyla_UnpStrE:
	.word	74                              # 0x4a
	.word	27                              # 0x1b
	.word	73                              # 0x49
	.size	_ZN2kcL18kc_subphyla_UnpStrE, 12

	.type	.L.str.293,@object              # @.str.293
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.293:
	.asciz	"UnpSubexpr"
	.size	.L.str.293, 11

	.type	_ZN2kcL22kc_subphyla_UnpSubexprE,@object # @_ZN2kcL22kc_subphyla_UnpSubexprE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_UnpSubexprE:
	.word	74                              # 0x4a
	.word	71                              # 0x47
	.word	73                              # 0x49
	.size	_ZN2kcL22kc_subphyla_UnpSubexprE, 12

	.type	.L.str.294,@object              # @.str.294
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.294:
	.asciz	"UnpCtext"
	.size	.L.str.294, 9

	.type	_ZN2kcL20kc_subphyla_UnpCtextE,@object # @_ZN2kcL20kc_subphyla_UnpCtextE
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_UnpCtextE:
	.word	74                              # 0x4a
	.word	56                              # 0x38
	.size	_ZN2kcL20kc_subphyla_UnpCtextE, 8

	.type	.L.str.295,@object              # @.str.295
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.295:
	.asciz	"UnpBody"
	.size	.L.str.295, 8

	.type	_ZN2kcL19kc_subphyla_UnpBodyE,@object # @_ZN2kcL19kc_subphyla_UnpBodyE
	.data
	.p2align	2, 0x0
_ZN2kcL19kc_subphyla_UnpBodyE:
	.word	74                              # 0x4a
	.word	69                              # 0x45
	.size	_ZN2kcL19kc_subphyla_UnpBodyE, 8

	.type	.L.str.296,@object              # @.str.296
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.296:
	.asciz	"UViewVarDecl"
	.size	.L.str.296, 13

	.type	_ZN2kcL24kc_subphyla_UViewVarDeclE,@object # @_ZN2kcL24kc_subphyla_UViewVarDeclE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_UViewVarDeclE:
	.word	7                               # 0x7
	.word	7                               # 0x7
	.word	25                              # 0x19
	.size	_ZN2kcL24kc_subphyla_UViewVarDeclE, 12

	.type	.L.str.297,@object              # @.str.297
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.297:
	.asciz	"UnpSubTerm"
	.size	.L.str.297, 11

	.type	_ZN2kcL22kc_subphyla_UnpSubTermE,@object # @_ZN2kcL22kc_subphyla_UnpSubTermE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_UnpSubTermE:
	.word	7                               # 0x7
	.size	_ZN2kcL22kc_subphyla_UnpSubTermE, 4

	.type	.L.str.298,@object              # @.str.298
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.298:
	.asciz	"UnpDollarvarTerm"
	.size	.L.str.298, 17

	.type	_ZN2kcL28kc_subphyla_UnpDollarvarTermE,@object # @_ZN2kcL28kc_subphyla_UnpDollarvarTermE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_UnpDollarvarTermE:
	.word	8                               # 0x8
	.size	_ZN2kcL28kc_subphyla_UnpDollarvarTermE, 4

	.type	.L.str.299,@object              # @.str.299
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.299:
	.asciz	"UnpSubAttr"
	.size	.L.str.299, 11

	.type	_ZN2kcL22kc_subphyla_UnpSubAttrE,@object # @_ZN2kcL22kc_subphyla_UnpSubAttrE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_UnpSubAttrE:
	.word	7                               # 0x7
	.word	72                              # 0x48
	.size	_ZN2kcL22kc_subphyla_UnpSubAttrE, 8

	.type	.L.str.300,@object              # @.str.300
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.300:
	.asciz	"UnpDollarvarAttr"
	.size	.L.str.300, 17

	.type	_ZN2kcL28kc_subphyla_UnpDollarvarAttrE,@object # @_ZN2kcL28kc_subphyla_UnpDollarvarAttrE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_UnpDollarvarAttrE:
	.word	8                               # 0x8
	.word	72                              # 0x48
	.size	_ZN2kcL28kc_subphyla_UnpDollarvarAttrE, 8

	.type	.L.str.301,@object              # @.str.301
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.301:
	.asciz	"UnpCastedVariable"
	.size	.L.str.301, 18

	.type	_ZN2kcL29kc_subphyla_UnpCastedVariableE,@object # @_ZN2kcL29kc_subphyla_UnpCastedVariableE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_UnpCastedVariableE:
	.word	7                               # 0x7
	.word	7                               # 0x7
	.size	_ZN2kcL29kc_subphyla_UnpCastedVariableE, 8

	.type	.L.str.302,@object              # @.str.302
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.302:
	.asciz	"Nilunpattributes"
	.size	.L.str.302, 17

	.type	.L.str.303,@object              # @.str.303
.L.str.303:
	.asciz	"Consunpattributes"
	.size	.L.str.303, 18

	.type	_ZN2kcL29kc_subphyla_ConsunpattributesE,@object # @_ZN2kcL29kc_subphyla_ConsunpattributesE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_ConsunpattributesE:
	.word	7                               # 0x7
	.word	72                              # 0x48
	.size	_ZN2kcL29kc_subphyla_ConsunpattributesE, 8

	.type	.L.str.304,@object              # @.str.304
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.304:
	.asciz	"NoViewname"
	.size	.L.str.304, 11

	.type	.L.str.305,@object              # @.str.305
.L.str.305:
	.asciz	"YesViewname"
	.size	.L.str.305, 12

	.type	_ZN2kcL23kc_subphyla_YesViewnameE,@object # @_ZN2kcL23kc_subphyla_YesViewnameE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_YesViewnameE:
	.word	7                               # 0x7
	.size	_ZN2kcL23kc_subphyla_YesViewnameE, 4

	.type	.L.str.306,@object              # @.str.306
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.306:
	.asciz	"NoLanguagename"
	.size	.L.str.306, 15

	.type	.L.str.307,@object              # @.str.307
.L.str.307:
	.asciz	"LanguageList"
	.size	.L.str.307, 13

	.type	_ZN2kcL24kc_subphyla_LanguageListE,@object # @_ZN2kcL24kc_subphyla_LanguageListE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_LanguageListE:
	.word	75                              # 0x4b
	.size	_ZN2kcL24kc_subphyla_LanguageListE, 4

	.type	.L.str.308,@object              # @.str.308
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.308:
	.asciz	"Nillanguagenames"
	.size	.L.str.308, 17

	.type	.L.str.309,@object              # @.str.309
.L.str.309:
	.asciz	"Conslanguagenames"
	.size	.L.str.309, 18

	.type	_ZN2kcL29kc_subphyla_ConslanguagenamesE,@object # @_ZN2kcL29kc_subphyla_ConslanguagenamesE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_ConslanguagenamesE:
	.word	7                               # 0x7
	.word	75                              # 0x4b
	.size	_ZN2kcL29kc_subphyla_ConslanguagenamesE, 8

	.type	.L.str.310,@object              # @.str.310
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.310:
	.asciz	"FileLine"
	.size	.L.str.310, 9

	.type	.L.str.311,@object              # @.str.311
.L.str.311:
	.asciz	"NoFileLine"
	.size	.L.str.311, 11

	.type	.L.str.312,@object              # @.str.312
.L.str.312:
	.asciz	"PosNoFileLine"
	.size	.L.str.312, 14

	.type	.L.str.313,@object              # @.str.313
.L.str.313:
	.asciz	"Nilscopetypefilelinestack"
	.size	.L.str.313, 26

	.type	.L.str.314,@object              # @.str.314
.L.str.314:
	.asciz	"Consscopetypefilelinestack"
	.size	.L.str.314, 27

	.type	_ZN2kcL38kc_subphyla_ConsscopetypefilelinestackE,@object # @_ZN2kcL38kc_subphyla_ConsscopetypefilelinestackE
	.data
	.p2align	2, 0x0
_ZN2kcL38kc_subphyla_ConsscopetypefilelinestackE:
	.word	78                              # 0x4e
	.word	77                              # 0x4d
	.size	_ZN2kcL38kc_subphyla_ConsscopetypefilelinestackE, 8

	.type	.L.str.315,@object              # @.str.315
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.315:
	.asciz	"ScopeTypeFileLine"
	.size	.L.str.315, 18

	.type	_ZN2kcL29kc_subphyla_ScopeTypeFileLineE,@object # @_ZN2kcL29kc_subphyla_ScopeTypeFileLineE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_ScopeTypeFileLineE:
	.word	4                               # 0x4
	.word	79                              # 0x4f
	.word	2                               # 0x2
	.word	4                               # 0x4
	.size	_ZN2kcL29kc_subphyla_ScopeTypeFileLineE, 16

	.type	.L.str.316,@object              # @.str.316
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.316:
	.asciz	"ITUnknown"
	.size	.L.str.316, 10

	.type	.L.str.317,@object              # @.str.317
.L.str.317:
	.asciz	"ITPredefinedPhylum"
	.size	.L.str.317, 19

	.type	_ZN2kcL30kc_subphyla_ITPredefinedPhylumE,@object # @_ZN2kcL30kc_subphyla_ITPredefinedPhylumE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_ITPredefinedPhylumE:
	.word	13                              # 0xd
	.size	_ZN2kcL30kc_subphyla_ITPredefinedPhylumE, 4

	.type	.L.str.318,@object              # @.str.318
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.318:
	.asciz	"ITUserPhylum"
	.size	.L.str.318, 13

	.type	_ZN2kcL24kc_subphyla_ITUserPhylumE,@object # @_ZN2kcL24kc_subphyla_ITUserPhylumE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_ITUserPhylumE:
	.word	13                              # 0xd
	.size	_ZN2kcL24kc_subphyla_ITUserPhylumE, 4

	.type	.L.str.319,@object              # @.str.319
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.319:
	.asciz	"ITPredefinedOperator"
	.size	.L.str.319, 21

	.type	_ZN2kcL32kc_subphyla_ITPredefinedOperatorE,@object # @_ZN2kcL32kc_subphyla_ITPredefinedOperatorE
	.data
	.p2align	2, 0x0
_ZN2kcL32kc_subphyla_ITPredefinedOperatorE:
	.word	18                              # 0x12
	.word	7                               # 0x7
	.size	_ZN2kcL32kc_subphyla_ITPredefinedOperatorE, 8

	.type	.L.str.320,@object              # @.str.320
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.320:
	.asciz	"ITUserOperator"
	.size	.L.str.320, 15

	.type	_ZN2kcL26kc_subphyla_ITUserOperatorE,@object # @_ZN2kcL26kc_subphyla_ITUserOperatorE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_ITUserOperatorE:
	.word	18                              # 0x12
	.word	7                               # 0x7
	.size	_ZN2kcL26kc_subphyla_ITUserOperatorE, 8

	.type	.L.str.321,@object              # @.str.321
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.321:
	.asciz	"ITPredefinedStorageClass"
	.size	.L.str.321, 25

	.type	.L.str.322,@object              # @.str.322
.L.str.322:
	.asciz	"ITStorageClass"
	.size	.L.str.322, 15

	.type	.L.str.323,@object              # @.str.323
.L.str.323:
	.asciz	"ITPredefinedUView"
	.size	.L.str.323, 18

	.type	.L.str.324,@object              # @.str.324
.L.str.324:
	.asciz	"ITUserUView"
	.size	.L.str.324, 12

	.type	.L.str.325,@object              # @.str.325
.L.str.325:
	.asciz	"ITUViewVar"
	.size	.L.str.325, 11

	.type	.L.str.326,@object              # @.str.326
.L.str.326:
	.asciz	"ITPredefinedRView"
	.size	.L.str.326, 18

	.type	.L.str.327,@object              # @.str.327
.L.str.327:
	.asciz	"ITUserRView"
	.size	.L.str.327, 12

	.type	.L.str.328,@object              # @.str.328
.L.str.328:
	.asciz	"ITUserFunction"
	.size	.L.str.328, 15

	.type	_ZN2kcL26kc_subphyla_ITUserFunctionE,@object # @_ZN2kcL26kc_subphyla_ITUserFunctionE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_ITUserFunctionE:
	.word	55                              # 0x37
	.size	_ZN2kcL26kc_subphyla_ITUserFunctionE, 4

	.type	.L.str.329,@object              # @.str.329
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.329:
	.asciz	"ITPatternVariable"
	.size	.L.str.329, 18

	.type	_ZN2kcL29kc_subphyla_ITPatternVariableE,@object # @_ZN2kcL29kc_subphyla_ITPatternVariableE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_ITPatternVariableE:
	.word	7                               # 0x7
	.word	4                               # 0x4
	.size	_ZN2kcL29kc_subphyla_ITPatternVariableE, 8

	.type	.L.str.330,@object              # @.str.330
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.330:
	.asciz	"ITLanguageName"
	.size	.L.str.330, 15

	.type	_ZN2kcL26kc_subphyla_ITLanguageNameE,@object # @_ZN2kcL26kc_subphyla_ITLanguageNameE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_ITLanguageNameE:
	.word	4                               # 0x4
	.size	_ZN2kcL26kc_subphyla_ITLanguageNameE, 4

	.type	.L.str.331,@object              # @.str.331
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.331:
	.asciz	"Niloperators"
	.size	.L.str.331, 13

	.type	.L.str.332,@object              # @.str.332
.L.str.332:
	.asciz	"Consoperators"
	.size	.L.str.332, 14

	.type	_ZN2kcL25kc_subphyla_ConsoperatorsE,@object # @_ZN2kcL25kc_subphyla_ConsoperatorsE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_ConsoperatorsE:
	.word	7                               # 0x7
	.word	80                              # 0x50
	.size	_ZN2kcL25kc_subphyla_ConsoperatorsE, 8

	.type	.L.str.333,@object              # @.str.333
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.333:
	.asciz	"Nilphyla"
	.size	.L.str.333, 9

	.type	.L.str.334,@object              # @.str.334
.L.str.334:
	.asciz	"Consphyla"
	.size	.L.str.334, 10

	.type	_ZN2kcL21kc_subphyla_ConsphylaE,@object # @_ZN2kcL21kc_subphyla_ConsphylaE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_ConsphylaE:
	.word	7                               # 0x7
	.word	81                              # 0x51
	.size	_ZN2kcL21kc_subphyla_ConsphylaE, 8

	.type	.L.str.335,@object              # @.str.335
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.335:
	.asciz	"Nilvariables"
	.size	.L.str.335, 13

	.type	.L.str.336,@object              # @.str.336
.L.str.336:
	.asciz	"Consvariables"
	.size	.L.str.336, 14

	.type	_ZN2kcL25kc_subphyla_ConsvariablesE,@object # @_ZN2kcL25kc_subphyla_ConsvariablesE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_ConsvariablesE:
	.word	7                               # 0x7
	.word	82                              # 0x52
	.size	_ZN2kcL25kc_subphyla_ConsvariablesE, 8

	.type	.L.str.337,@object              # @.str.337
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.337:
	.asciz	"DVAllowed"
	.size	.L.str.337, 10

	.type	.L.str.338,@object              # @.str.338
.L.str.338:
	.asciz	"DVDisallowed"
	.size	.L.str.338, 13

	.type	.L.str.339,@object              # @.str.339
.L.str.339:
	.asciz	"Equal"
	.size	.L.str.339, 6

	.type	.L.str.340,@object              # @.str.340
.L.str.340:
	.asciz	"Smaller"
	.size	.L.str.340, 8

	.type	.L.str.341,@object              # @.str.341
.L.str.341:
	.asciz	"Bigger"
	.size	.L.str.341, 7

	.type	.L.str.342,@object              # @.str.342
.L.str.342:
	.asciz	"Nilpatternrepresentations"
	.size	.L.str.342, 26

	.type	.L.str.343,@object              # @.str.343
.L.str.343:
	.asciz	"Conspatternrepresentations"
	.size	.L.str.343, 27

	.type	_ZN2kcL38kc_subphyla_ConspatternrepresentationsE,@object # @_ZN2kcL38kc_subphyla_ConspatternrepresentationsE
	.data
	.p2align	2, 0x0
_ZN2kcL38kc_subphyla_ConspatternrepresentationsE:
	.word	86                              # 0x56
	.word	85                              # 0x55
	.size	_ZN2kcL38kc_subphyla_ConspatternrepresentationsE, 8

	.type	.L.str.344,@object              # @.str.344
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.344:
	.asciz	"Nilpatternrepresentation"
	.size	.L.str.344, 25

	.type	.L.str.345,@object              # @.str.345
.L.str.345:
	.asciz	"Conspatternrepresentation"
	.size	.L.str.345, 26

	.type	_ZN2kcL37kc_subphyla_ConspatternrepresentationE,@object # @_ZN2kcL37kc_subphyla_ConspatternrepresentationE
	.data
	.p2align	2, 0x0
_ZN2kcL37kc_subphyla_ConspatternrepresentationE:
	.word	87                              # 0x57
	.word	86                              # 0x56
	.size	_ZN2kcL37kc_subphyla_ConspatternrepresentationE, 8

	.type	.L.str.346,@object              # @.str.346
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.346:
	.asciz	"PRBinding"
	.size	.L.str.346, 10

	.type	_ZN2kcL21kc_subphyla_PRBindingE,@object # @_ZN2kcL21kc_subphyla_PRBindingE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_PRBindingE:
	.word	88                              # 0x58
	.word	7                               # 0x7
	.size	_ZN2kcL21kc_subphyla_PRBindingE, 8

	.type	.L.str.347,@object              # @.str.347
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.347:
	.asciz	"PRVarPredicate"
	.size	.L.str.347, 15

	.type	_ZN2kcL26kc_subphyla_PRVarPredicateE,@object # @_ZN2kcL26kc_subphyla_PRVarPredicateE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_PRVarPredicateE:
	.word	89                              # 0x59
	.word	7                               # 0x7
	.word	86                              # 0x56
	.size	_ZN2kcL26kc_subphyla_PRVarPredicateE, 12

	.type	.L.str.348,@object              # @.str.348
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.348:
	.asciz	"PROperPredicate"
	.size	.L.str.348, 16

	.type	_ZN2kcL27kc_subphyla_PROperPredicateE,@object # @_ZN2kcL27kc_subphyla_PROperPredicateE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_PROperPredicateE:
	.word	88                              # 0x58
	.word	7                               # 0x7
	.size	_ZN2kcL27kc_subphyla_PROperPredicateE, 8

	.type	.L.str.349,@object              # @.str.349
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.349:
	.asciz	"PRUserPredicate"
	.size	.L.str.349, 16

	.type	_ZN2kcL27kc_subphyla_PRUserPredicateE,@object # @_ZN2kcL27kc_subphyla_PRUserPredicateE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_PRUserPredicateE:
	.word	25                              # 0x19
	.size	_ZN2kcL27kc_subphyla_PRUserPredicateE, 4

	.type	.L.str.350,@object              # @.str.350
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.350:
	.asciz	"PRNonLeafBinding"
	.size	.L.str.350, 17

	.type	_ZN2kcL28kc_subphyla_PRNonLeafBindingE,@object # @_ZN2kcL28kc_subphyla_PRNonLeafBindingE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_PRNonLeafBindingE:
	.word	88                              # 0x58
	.word	7                               # 0x7
	.word	86                              # 0x56
	.size	_ZN2kcL28kc_subphyla_PRNonLeafBindingE, 12

	.type	.L.str.351,@object              # @.str.351
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.351:
	.asciz	"PRWildcard"
	.size	.L.str.351, 11

	.type	_ZN2kcL22kc_subphyla_PRWildcardE,@object # @_ZN2kcL22kc_subphyla_PRWildcardE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_PRWildcardE:
	.word	88                              # 0x58
	.size	_ZN2kcL22kc_subphyla_PRWildcardE, 4

	.type	.L.str.352,@object              # @.str.352
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.352:
	.asciz	"PRDefault"
	.size	.L.str.352, 10

	.type	.L.str.353,@object              # @.str.353
.L.str.353:
	.asciz	"PRStringLiteral"
	.size	.L.str.353, 16

	.type	_ZN2kcL27kc_subphyla_PRStringLiteralE,@object # @_ZN2kcL27kc_subphyla_PRStringLiteralE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_PRStringLiteralE:
	.word	88                              # 0x58
	.word	27                              # 0x1b
	.size	_ZN2kcL27kc_subphyla_PRStringLiteralE, 8

	.type	.L.str.354,@object              # @.str.354
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.354:
	.asciz	"PRIntLiteral"
	.size	.L.str.354, 13

	.type	_ZN2kcL24kc_subphyla_PRIntLiteralE,@object # @_ZN2kcL24kc_subphyla_PRIntLiteralE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_PRIntLiteralE:
	.word	88                              # 0x58
	.word	8                               # 0x8
	.size	_ZN2kcL24kc_subphyla_PRIntLiteralE, 8

	.type	.L.str.355,@object              # @.str.355
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.355:
	.asciz	"Nilpath"
	.size	.L.str.355, 8

	.type	.L.str.356,@object              # @.str.356
.L.str.356:
	.asciz	"Conspath"
	.size	.L.str.356, 9

	.type	_ZN2kcL20kc_subphyla_ConspathE,@object # @_ZN2kcL20kc_subphyla_ConspathE
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_ConspathE:
	.word	4                               # 0x4
	.word	88                              # 0x58
	.size	_ZN2kcL20kc_subphyla_ConspathE, 8

	.type	.L.str.357,@object              # @.str.357
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.357:
	.asciz	"Nilpaths"
	.size	.L.str.357, 9

	.type	.L.str.358,@object              # @.str.358
.L.str.358:
	.asciz	"Conspaths"
	.size	.L.str.358, 10

	.type	_ZN2kcL21kc_subphyla_ConspathsE,@object # @_ZN2kcL21kc_subphyla_ConspathsE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_ConspathsE:
	.word	88                              # 0x58
	.word	89                              # 0x59
	.size	_ZN2kcL21kc_subphyla_ConspathsE, 8

	.type	.L.str.359,@object              # @.str.359
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.359:
	.asciz	"Nilargsnumbers"
	.size	.L.str.359, 15

	.type	.L.str.360,@object              # @.str.360
.L.str.360:
	.asciz	"Consargsnumbers"
	.size	.L.str.360, 16

	.type	_ZN2kcL27kc_subphyla_ConsargsnumbersE,@object # @_ZN2kcL27kc_subphyla_ConsargsnumbersE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_ConsargsnumbersE:
	.word	4                               # 0x4
	.word	90                              # 0x5a
	.size	_ZN2kcL27kc_subphyla_ConsargsnumbersE, 8

	.type	.L.str.361,@object              # @.str.361
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.361:
	.asciz	"Nilrewriterulesinfo"
	.size	.L.str.361, 20

	.type	.L.str.362,@object              # @.str.362
.L.str.362:
	.asciz	"Consrewriterulesinfo"
	.size	.L.str.362, 21

	.type	_ZN2kcL32kc_subphyla_ConsrewriterulesinfoE,@object # @_ZN2kcL32kc_subphyla_ConsrewriterulesinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL32kc_subphyla_ConsrewriterulesinfoE:
	.word	92                              # 0x5c
	.word	91                              # 0x5b
	.size	_ZN2kcL32kc_subphyla_ConsrewriterulesinfoE, 8

	.type	.L.str.363,@object              # @.str.363
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.363:
	.asciz	"Rewriteruleinfo"
	.size	.L.str.363, 16

	.type	_ZN2kcL27kc_subphyla_RewriteruleinfoE,@object # @_ZN2kcL27kc_subphyla_RewriteruleinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_RewriteruleinfoE:
	.word	86                              # 0x56
	.word	86                              # 0x56
	.word	41                              # 0x29
	.size	_ZN2kcL27kc_subphyla_RewriteruleinfoE, 12

	.type	.L.str.364,@object              # @.str.364
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.364:
	.asciz	"Nilwithcasesinfo"
	.size	.L.str.364, 17

	.type	.L.str.365,@object              # @.str.365
.L.str.365:
	.asciz	"Conswithcasesinfo"
	.size	.L.str.365, 18

	.type	_ZN2kcL29kc_subphyla_ConswithcasesinfoE,@object # @_ZN2kcL29kc_subphyla_ConswithcasesinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_ConswithcasesinfoE:
	.word	94                              # 0x5e
	.word	93                              # 0x5d
	.size	_ZN2kcL29kc_subphyla_ConswithcasesinfoE, 8

	.type	.L.str.366,@object              # @.str.366
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.366:
	.asciz	"Withcaseinfo"
	.size	.L.str.366, 13

	.type	_ZN2kcL24kc_subphyla_WithcaseinfoE,@object # @_ZN2kcL24kc_subphyla_WithcaseinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_WithcaseinfoE:
	.word	86                              # 0x56
	.word	86                              # 0x56
	.word	56                              # 0x38
	.size	_ZN2kcL24kc_subphyla_WithcaseinfoE, 12

	.type	.L.str.367,@object              # @.str.367
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.367:
	.asciz	"Nilrewriteviewsinfo"
	.size	.L.str.367, 20

	.type	.L.str.368,@object              # @.str.368
.L.str.368:
	.asciz	"Consrewriteviewsinfo"
	.size	.L.str.368, 21

	.type	_ZN2kcL32kc_subphyla_ConsrewriteviewsinfoE,@object # @_ZN2kcL32kc_subphyla_ConsrewriteviewsinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL32kc_subphyla_ConsrewriteviewsinfoE:
	.word	96                              # 0x60
	.word	95                              # 0x5f
	.size	_ZN2kcL32kc_subphyla_ConsrewriteviewsinfoE, 8

	.type	.L.str.369,@object              # @.str.369
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.369:
	.asciz	"Rewriteviewinfo"
	.size	.L.str.369, 16

	.type	_ZN2kcL27kc_subphyla_RewriteviewinfoE,@object # @_ZN2kcL27kc_subphyla_RewriteviewinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_RewriteviewinfoE:
	.word	7                               # 0x7
	.word	91                              # 0x5b
	.size	_ZN2kcL27kc_subphyla_RewriteviewinfoE, 8

	.type	.L.str.370,@object              # @.str.370
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.370:
	.asciz	"Nilunparseviewsinfo"
	.size	.L.str.370, 20

	.type	.L.str.371,@object              # @.str.371
.L.str.371:
	.asciz	"Consunparseviewsinfo"
	.size	.L.str.371, 21

	.type	_ZN2kcL32kc_subphyla_ConsunparseviewsinfoE,@object # @_ZN2kcL32kc_subphyla_ConsunparseviewsinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL32kc_subphyla_ConsunparseviewsinfoE:
	.word	98                              # 0x62
	.word	97                              # 0x61
	.size	_ZN2kcL32kc_subphyla_ConsunparseviewsinfoE, 8

	.type	.L.str.372,@object              # @.str.372
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.372:
	.asciz	"Unparseviewinfo"
	.size	.L.str.372, 16

	.type	_ZN2kcL27kc_subphyla_UnparseviewinfoE,@object # @_ZN2kcL27kc_subphyla_UnparseviewinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_UnparseviewinfoE:
	.word	7                               # 0x7
	.word	99                              # 0x63
	.size	_ZN2kcL27kc_subphyla_UnparseviewinfoE, 8

	.type	.L.str.373,@object              # @.str.373
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.373:
	.asciz	"Nilunparsedeclsinfo"
	.size	.L.str.373, 20

	.type	.L.str.374,@object              # @.str.374
.L.str.374:
	.asciz	"Consunparsedeclsinfo"
	.size	.L.str.374, 21

	.type	_ZN2kcL32kc_subphyla_ConsunparsedeclsinfoE,@object # @_ZN2kcL32kc_subphyla_ConsunparsedeclsinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL32kc_subphyla_ConsunparsedeclsinfoE:
	.word	100                             # 0x64
	.word	99                              # 0x63
	.size	_ZN2kcL32kc_subphyla_ConsunparsedeclsinfoE, 8

	.type	.L.str.375,@object              # @.str.375
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.375:
	.asciz	"Unparsedeclinfo"
	.size	.L.str.375, 16

	.type	_ZN2kcL27kc_subphyla_UnparsedeclinfoE,@object # @_ZN2kcL27kc_subphyla_UnparsedeclinfoE
	.data
	.p2align	2, 0x0
_ZN2kcL27kc_subphyla_UnparsedeclinfoE:
	.word	86                              # 0x56
	.word	86                              # 0x56
	.word	67                              # 0x43
	.size	_ZN2kcL27kc_subphyla_UnparsedeclinfoE, 12

	.type	.L.str.376,@object              # @.str.376
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.376:
	.asciz	"AcDeclaration"
	.size	.L.str.376, 14

	.type	_ZN2kcL25kc_subphyla_AcDeclarationE,@object # @_ZN2kcL25kc_subphyla_AcDeclarationE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_AcDeclarationE:
	.word	103                             # 0x67
	.word	108                             # 0x6c
	.size	_ZN2kcL25kc_subphyla_AcDeclarationE, 8

	.type	.L.str.377,@object              # @.str.377
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.377:
	.asciz	"Nilac_declaration_list"
	.size	.L.str.377, 23

	.type	.L.str.378,@object              # @.str.378
.L.str.378:
	.asciz	"Consac_declaration_list"
	.size	.L.str.378, 24

	.type	_ZN2kcL35kc_subphyla_Consac_declaration_listE,@object # @_ZN2kcL35kc_subphyla_Consac_declaration_listE
	.data
	.p2align	2, 0x0
_ZN2kcL35kc_subphyla_Consac_declaration_listE:
	.word	101                             # 0x65
	.word	102                             # 0x66
	.size	_ZN2kcL35kc_subphyla_Consac_declaration_listE, 8

	.type	.L.str.379,@object              # @.str.379
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.379:
	.asciz	"Nilac_declaration_specifiers"
	.size	.L.str.379, 29

	.type	.L.str.380,@object              # @.str.380
.L.str.380:
	.asciz	"Consac_declaration_specifiers"
	.size	.L.str.380, 30

	.type	_ZN2kcL41kc_subphyla_Consac_declaration_specifiersE,@object # @_ZN2kcL41kc_subphyla_Consac_declaration_specifiersE
	.data
	.p2align	2, 0x0
_ZN2kcL41kc_subphyla_Consac_declaration_specifiersE:
	.word	104                             # 0x68
	.word	103                             # 0x67
	.size	_ZN2kcL41kc_subphyla_Consac_declaration_specifiersE, 8

	.type	.L.str.381,@object              # @.str.381
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.381:
	.asciz	"AcDeclSpecStorageSpec"
	.size	.L.str.381, 22

	.type	_ZN2kcL33kc_subphyla_AcDeclSpecStorageSpecE,@object # @_ZN2kcL33kc_subphyla_AcDeclSpecStorageSpecE
	.data
	.p2align	2, 0x0
_ZN2kcL33kc_subphyla_AcDeclSpecStorageSpecE:
	.word	105                             # 0x69
	.size	_ZN2kcL33kc_subphyla_AcDeclSpecStorageSpecE, 4

	.type	.L.str.382,@object              # @.str.382
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.382:
	.asciz	"AcDeclSpecTypeSpec"
	.size	.L.str.382, 19

	.type	_ZN2kcL30kc_subphyla_AcDeclSpecTypeSpecE,@object # @_ZN2kcL30kc_subphyla_AcDeclSpecTypeSpecE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_AcDeclSpecTypeSpecE:
	.word	106                             # 0x6a
	.size	_ZN2kcL30kc_subphyla_AcDeclSpecTypeSpecE, 4

	.type	.L.str.383,@object              # @.str.383
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.383:
	.asciz	"AcDeclSpecTypeQual"
	.size	.L.str.383, 19

	.type	_ZN2kcL30kc_subphyla_AcDeclSpecTypeQualE,@object # @_ZN2kcL30kc_subphyla_AcDeclSpecTypeQualE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_AcDeclSpecTypeQualE:
	.word	107                             # 0x6b
	.size	_ZN2kcL30kc_subphyla_AcDeclSpecTypeQualE, 4

	.type	.L.str.384,@object              # @.str.384
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.384:
	.asciz	"AcAuto"
	.size	.L.str.384, 7

	.type	.L.str.385,@object              # @.str.385
.L.str.385:
	.asciz	"AcRegister"
	.size	.L.str.385, 11

	.type	.L.str.386,@object              # @.str.386
.L.str.386:
	.asciz	"AcStatic"
	.size	.L.str.386, 9

	.type	.L.str.387,@object              # @.str.387
.L.str.387:
	.asciz	"AcExtern"
	.size	.L.str.387, 9

	.type	.L.str.388,@object              # @.str.388
.L.str.388:
	.asciz	"AcTypedef"
	.size	.L.str.388, 10

	.type	.L.str.389,@object              # @.str.389
.L.str.389:
	.asciz	"AcVirtual"
	.size	.L.str.389, 10

	.type	.L.str.390,@object              # @.str.390
.L.str.390:
	.asciz	"AcTypeSpec"
	.size	.L.str.390, 11

	.type	_ZN2kcL22kc_subphyla_AcTypeSpecE,@object # @_ZN2kcL22kc_subphyla_AcTypeSpecE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_AcTypeSpecE:
	.word	7                               # 0x7
	.size	_ZN2kcL22kc_subphyla_AcTypeSpecE, 4

	.type	.L.str.391,@object              # @.str.391
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.391:
	.asciz	"AcConst"
	.size	.L.str.391, 8

	.type	.L.str.392,@object              # @.str.392
.L.str.392:
	.asciz	"AcVolatile"
	.size	.L.str.392, 11

	.type	.L.str.393,@object              # @.str.393
.L.str.393:
	.asciz	"AcUnsigned"
	.size	.L.str.393, 11

	.type	.L.str.394,@object              # @.str.394
.L.str.394:
	.asciz	"AcNoQualifier"
	.size	.L.str.394, 14

	.type	.L.str.395,@object              # @.str.395
.L.str.395:
	.asciz	"Nilac_init_declarator_list"
	.size	.L.str.395, 27

	.type	.L.str.396,@object              # @.str.396
.L.str.396:
	.asciz	"Consac_init_declarator_list"
	.size	.L.str.396, 28

	.type	_ZN2kcL39kc_subphyla_Consac_init_declarator_listE,@object # @_ZN2kcL39kc_subphyla_Consac_init_declarator_listE
	.data
	.p2align	2, 0x0
_ZN2kcL39kc_subphyla_Consac_init_declarator_listE:
	.word	109                             # 0x6d
	.word	108                             # 0x6c
	.size	_ZN2kcL39kc_subphyla_Consac_init_declarator_listE, 8

	.type	.L.str.397,@object              # @.str.397
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.397:
	.asciz	"AcInitDecl"
	.size	.L.str.397, 11

	.type	_ZN2kcL22kc_subphyla_AcInitDeclE,@object # @_ZN2kcL22kc_subphyla_AcInitDeclE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_AcInitDeclE:
	.word	110                             # 0x6e
	.size	_ZN2kcL22kc_subphyla_AcInitDeclE, 4

	.type	.L.str.398,@object              # @.str.398
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.398:
	.asciz	"AcDeclarator"
	.size	.L.str.398, 13

	.type	_ZN2kcL24kc_subphyla_AcDeclaratorE,@object # @_ZN2kcL24kc_subphyla_AcDeclaratorE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_AcDeclaratorE:
	.word	112                             # 0x70
	.word	114                             # 0x72
	.word	111                             # 0x6f
	.size	_ZN2kcL24kc_subphyla_AcDeclaratorE, 12

	.type	.L.str.399,@object              # @.str.399
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.399:
	.asciz	"AcDirectDeclId"
	.size	.L.str.399, 15

	.type	_ZN2kcL26kc_subphyla_AcDirectDeclIdE,@object # @_ZN2kcL26kc_subphyla_AcDirectDeclIdE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_AcDirectDeclIdE:
	.word	7                               # 0x7
	.size	_ZN2kcL26kc_subphyla_AcDirectDeclIdE, 4

	.type	.L.str.400,@object              # @.str.400
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.400:
	.asciz	"AcDirectDeclPack"
	.size	.L.str.400, 17

	.type	_ZN2kcL28kc_subphyla_AcDirectDeclPackE,@object # @_ZN2kcL28kc_subphyla_AcDirectDeclPackE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_AcDirectDeclPackE:
	.word	110                             # 0x6e
	.size	_ZN2kcL28kc_subphyla_AcDirectDeclPackE, 4

	.type	.L.str.401,@object              # @.str.401
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.401:
	.asciz	"AcDirectDeclArray"
	.size	.L.str.401, 18

	.type	_ZN2kcL29kc_subphyla_AcDirectDeclArrayE,@object # @_ZN2kcL29kc_subphyla_AcDirectDeclArrayE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_AcDirectDeclArrayE:
	.word	111                             # 0x6f
	.word	126                             # 0x7e
	.size	_ZN2kcL29kc_subphyla_AcDirectDeclArrayE, 8

	.type	.L.str.402,@object              # @.str.402
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.402:
	.asciz	"AcDirectDeclProto"
	.size	.L.str.402, 18

	.type	_ZN2kcL29kc_subphyla_AcDirectDeclProtoE,@object # @_ZN2kcL29kc_subphyla_AcDirectDeclProtoE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_AcDirectDeclProtoE:
	.word	111                             # 0x6f
	.word	119                             # 0x77
	.size	_ZN2kcL29kc_subphyla_AcDirectDeclProtoE, 8

	.type	.L.str.403,@object              # @.str.403
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.403:
	.asciz	"AcQualifiedDeclProto"
	.size	.L.str.403, 21

	.type	_ZN2kcL32kc_subphyla_AcQualifiedDeclProtoE,@object # @_ZN2kcL32kc_subphyla_AcQualifiedDeclProtoE
	.data
	.p2align	2, 0x0
_ZN2kcL32kc_subphyla_AcQualifiedDeclProtoE:
	.word	117                             # 0x75
	.word	111                             # 0x6f
	.word	119                             # 0x77
	.word	107                             # 0x6b
	.size	_ZN2kcL32kc_subphyla_AcQualifiedDeclProtoE, 16

	.type	.L.str.404,@object              # @.str.404
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.404:
	.asciz	"AcMemberDecl"
	.size	.L.str.404, 13

	.type	_ZN2kcL24kc_subphyla_AcMemberDeclE,@object # @_ZN2kcL24kc_subphyla_AcMemberDeclE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_AcMemberDeclE:
	.word	7                               # 0x7
	.word	7                               # 0x7
	.word	128                             # 0x80
	.size	_ZN2kcL24kc_subphyla_AcMemberDeclE, 12

	.type	.L.str.405,@object              # @.str.405
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.405:
	.asciz	"AcConvOperatorDecl"
	.size	.L.str.405, 19

	.type	_ZN2kcL30kc_subphyla_AcConvOperatorDeclE,@object # @_ZN2kcL30kc_subphyla_AcConvOperatorDeclE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_AcConvOperatorDeclE:
	.word	7                               # 0x7
	.word	7                               # 0x7
	.size	_ZN2kcL30kc_subphyla_AcConvOperatorDeclE, 8

	.type	.L.str.406,@object              # @.str.406
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.406:
	.asciz	"AcOperatorDeclId"
	.size	.L.str.406, 17

	.type	_ZN2kcL28kc_subphyla_AcOperatorDeclIdE,@object # @_ZN2kcL28kc_subphyla_AcOperatorDeclIdE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_AcOperatorDeclIdE:
	.word	115                             # 0x73
	.size	_ZN2kcL28kc_subphyla_AcOperatorDeclIdE, 4

	.type	.L.str.407,@object              # @.str.407
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.407:
	.asciz	"Nopointer"
	.size	.L.str.407, 10

	.type	.L.str.408,@object              # @.str.408
.L.str.408:
	.asciz	"Yespointer"
	.size	.L.str.408, 11

	.type	_ZN2kcL22kc_subphyla_YespointerE,@object # @_ZN2kcL22kc_subphyla_YespointerE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_YespointerE:
	.word	113                             # 0x71
	.size	_ZN2kcL22kc_subphyla_YespointerE, 4

	.type	.L.str.409,@object              # @.str.409
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.409:
	.asciz	"AcPointerNil"
	.size	.L.str.409, 13

	.type	_ZN2kcL24kc_subphyla_AcPointerNilE,@object # @_ZN2kcL24kc_subphyla_AcPointerNilE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_AcPointerNilE:
	.word	118                             # 0x76
	.size	_ZN2kcL24kc_subphyla_AcPointerNilE, 4

	.type	.L.str.410,@object              # @.str.410
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.410:
	.asciz	"AcPointerCons"
	.size	.L.str.410, 14

	.type	_ZN2kcL25kc_subphyla_AcPointerConsE,@object # @_ZN2kcL25kc_subphyla_AcPointerConsE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_AcPointerConsE:
	.word	118                             # 0x76
	.word	113                             # 0x71
	.size	_ZN2kcL25kc_subphyla_AcPointerConsE, 8

	.type	.L.str.411,@object              # @.str.411
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.411:
	.asciz	"AcNoRef"
	.size	.L.str.411, 8

	.type	.L.str.412,@object              # @.str.412
.L.str.412:
	.asciz	"AcRef"
	.size	.L.str.412, 6

	.type	.L.str.413,@object              # @.str.413
.L.str.413:
	.asciz	"AcOperatorName"
	.size	.L.str.413, 15

	.type	_ZN2kcL26kc_subphyla_AcOperatorNameE,@object # @_ZN2kcL26kc_subphyla_AcOperatorNameE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_AcOperatorNameE:
	.word	2                               # 0x2
	.size	_ZN2kcL26kc_subphyla_AcOperatorNameE, 4

	.type	.L.str.414,@object              # @.str.414
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.414:
	.asciz	"Nilac_class_qualifier_help_list"
	.size	.L.str.414, 32

	.type	.L.str.415,@object              # @.str.415
.L.str.415:
	.asciz	"Consac_class_qualifier_help_list"
	.size	.L.str.415, 33

	.type	_ZN2kcL44kc_subphyla_Consac_class_qualifier_help_listE,@object # @_ZN2kcL44kc_subphyla_Consac_class_qualifier_help_listE
	.data
	.p2align	2, 0x0
_ZN2kcL44kc_subphyla_Consac_class_qualifier_help_listE:
	.word	111                             # 0x6f
	.word	116                             # 0x74
	.size	_ZN2kcL44kc_subphyla_Consac_class_qualifier_help_listE, 8

	.type	.L.str.416,@object              # @.str.416
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.416:
	.asciz	"Nilac_class_qualifier_list"
	.size	.L.str.416, 27

	.type	.L.str.417,@object              # @.str.417
.L.str.417:
	.asciz	"Consac_class_qualifier_list"
	.size	.L.str.417, 28

	.type	_ZN2kcL39kc_subphyla_Consac_class_qualifier_listE,@object # @_ZN2kcL39kc_subphyla_Consac_class_qualifier_listE
	.data
	.p2align	2, 0x0
_ZN2kcL39kc_subphyla_Consac_class_qualifier_listE:
	.word	7                               # 0x7
	.word	117                             # 0x75
	.size	_ZN2kcL39kc_subphyla_Consac_class_qualifier_listE, 8

	.type	.L.str.418,@object              # @.str.418
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.418:
	.asciz	"Nilac_type_qualifier_list"
	.size	.L.str.418, 26

	.type	.L.str.419,@object              # @.str.419
.L.str.419:
	.asciz	"Consac_type_qualifier_list"
	.size	.L.str.419, 27

	.type	_ZN2kcL38kc_subphyla_Consac_type_qualifier_listE,@object # @_ZN2kcL38kc_subphyla_Consac_type_qualifier_listE
	.data
	.p2align	2, 0x0
_ZN2kcL38kc_subphyla_Consac_type_qualifier_listE:
	.word	107                             # 0x6b
	.word	118                             # 0x76
	.size	_ZN2kcL38kc_subphyla_Consac_type_qualifier_listE, 8

	.type	.L.str.420,@object              # @.str.420
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.420:
	.asciz	"AcParList"
	.size	.L.str.420, 10

	.type	_ZN2kcL21kc_subphyla_AcParListE,@object # @_ZN2kcL21kc_subphyla_AcParListE
	.data
	.p2align	2, 0x0
_ZN2kcL21kc_subphyla_AcParListE:
	.word	120                             # 0x78
	.size	_ZN2kcL21kc_subphyla_AcParListE, 4

	.type	.L.str.421,@object              # @.str.421
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.421:
	.asciz	"AcParList3Dot"
	.size	.L.str.421, 14

	.type	_ZN2kcL25kc_subphyla_AcParList3DotE,@object # @_ZN2kcL25kc_subphyla_AcParList3DotE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_AcParList3DotE:
	.word	120                             # 0x78
	.size	_ZN2kcL25kc_subphyla_AcParList3DotE, 4

	.type	.L.str.422,@object              # @.str.422
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.422:
	.asciz	"Nilac_parameter_list"
	.size	.L.str.422, 21

	.type	.L.str.423,@object              # @.str.423
.L.str.423:
	.asciz	"Consac_parameter_list"
	.size	.L.str.423, 22

	.type	_ZN2kcL33kc_subphyla_Consac_parameter_listE,@object # @_ZN2kcL33kc_subphyla_Consac_parameter_listE
	.data
	.p2align	2, 0x0
_ZN2kcL33kc_subphyla_Consac_parameter_listE:
	.word	121                             # 0x79
	.word	120                             # 0x78
	.size	_ZN2kcL33kc_subphyla_Consac_parameter_listE, 8

	.type	.L.str.424,@object              # @.str.424
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.424:
	.asciz	"AcParDeclDecl"
	.size	.L.str.424, 14

	.type	_ZN2kcL25kc_subphyla_AcParDeclDeclE,@object # @_ZN2kcL25kc_subphyla_AcParDeclDeclE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_AcParDeclDeclE:
	.word	103                             # 0x67
	.word	110                             # 0x6e
	.word	126                             # 0x7e
	.size	_ZN2kcL25kc_subphyla_AcParDeclDeclE, 12

	.type	.L.str.425,@object              # @.str.425
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.425:
	.asciz	"AcParDeclAbsdecl"
	.size	.L.str.425, 17

	.type	_ZN2kcL28kc_subphyla_AcParDeclAbsdeclE,@object # @_ZN2kcL28kc_subphyla_AcParDeclAbsdeclE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_AcParDeclAbsdeclE:
	.word	103                             # 0x67
	.word	123                             # 0x7b
	.word	126                             # 0x7e
	.size	_ZN2kcL28kc_subphyla_AcParDeclAbsdeclE, 12

	.type	.L.str.426,@object              # @.str.426
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.426:
	.asciz	"Nilac_identifier_list"
	.size	.L.str.426, 22

	.type	.L.str.427,@object              # @.str.427
.L.str.427:
	.asciz	"Consac_identifier_list"
	.size	.L.str.427, 23

	.type	_ZN2kcL34kc_subphyla_Consac_identifier_listE,@object # @_ZN2kcL34kc_subphyla_Consac_identifier_listE
	.data
	.p2align	2, 0x0
_ZN2kcL34kc_subphyla_Consac_identifier_listE:
	.word	7                               # 0x7
	.word	122                             # 0x7a
	.size	_ZN2kcL34kc_subphyla_Consac_identifier_listE, 8

	.type	.L.str.428,@object              # @.str.428
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.428:
	.asciz	"AcAbsdeclPointer"
	.size	.L.str.428, 17

	.type	_ZN2kcL28kc_subphyla_AcAbsdeclPointerE,@object # @_ZN2kcL28kc_subphyla_AcAbsdeclPointerE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_AcAbsdeclPointerE:
	.word	113                             # 0x71
	.size	_ZN2kcL28kc_subphyla_AcAbsdeclPointerE, 4

	.type	.L.str.429,@object              # @.str.429
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.429:
	.asciz	"AcAbsdeclDirdecl"
	.size	.L.str.429, 17

	.type	_ZN2kcL28kc_subphyla_AcAbsdeclDirdeclE,@object # @_ZN2kcL28kc_subphyla_AcAbsdeclDirdeclE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_AcAbsdeclDirdeclE:
	.word	112                             # 0x70
	.word	125                             # 0x7d
	.size	_ZN2kcL28kc_subphyla_AcAbsdeclDirdeclE, 8

	.type	.L.str.430,@object              # @.str.430
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.430:
	.asciz	"Noac_direct_abstract_declarator"
	.size	.L.str.430, 32

	.type	.L.str.431,@object              # @.str.431
.L.str.431:
	.asciz	"Yesac_direct_abstract_declarator"
	.size	.L.str.431, 33

	.type	_ZN2kcL44kc_subphyla_Yesac_direct_abstract_declaratorE,@object # @_ZN2kcL44kc_subphyla_Yesac_direct_abstract_declaratorE
	.data
	.p2align	2, 0x0
_ZN2kcL44kc_subphyla_Yesac_direct_abstract_declaratorE:
	.word	125                             # 0x7d
	.size	_ZN2kcL44kc_subphyla_Yesac_direct_abstract_declaratorE, 4

	.type	.L.str.432,@object              # @.str.432
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.432:
	.asciz	"AcDirAbsdeclPack"
	.size	.L.str.432, 17

	.type	_ZN2kcL28kc_subphyla_AcDirAbsdeclPackE,@object # @_ZN2kcL28kc_subphyla_AcDirAbsdeclPackE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_AcDirAbsdeclPackE:
	.word	123                             # 0x7b
	.size	_ZN2kcL28kc_subphyla_AcDirAbsdeclPackE, 4

	.type	.L.str.433,@object              # @.str.433
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.433:
	.asciz	"AcDirAbsdeclArray"
	.size	.L.str.433, 18

	.type	_ZN2kcL29kc_subphyla_AcDirAbsdeclArrayE,@object # @_ZN2kcL29kc_subphyla_AcDirAbsdeclArrayE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_AcDirAbsdeclArrayE:
	.word	124                             # 0x7c
	.word	126                             # 0x7e
	.size	_ZN2kcL29kc_subphyla_AcDirAbsdeclArrayE, 8

	.type	.L.str.434,@object              # @.str.434
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.434:
	.asciz	"AcDirAbsdeclFn"
	.size	.L.str.434, 15

	.type	_ZN2kcL26kc_subphyla_AcDirAbsdeclFnE,@object # @_ZN2kcL26kc_subphyla_AcDirAbsdeclFnE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_AcDirAbsdeclFnE:
	.word	124                             # 0x7c
	.word	119                             # 0x77
	.size	_ZN2kcL26kc_subphyla_AcDirAbsdeclFnE, 8

	.type	.L.str.435,@object              # @.str.435
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.435:
	.asciz	"Yesac_constant_expression"
	.size	.L.str.435, 26

	.type	_ZN2kcL37kc_subphyla_Yesac_constant_expressionE,@object # @_ZN2kcL37kc_subphyla_Yesac_constant_expressionE
	.data
	.p2align	2, 0x0
_ZN2kcL37kc_subphyla_Yesac_constant_expressionE:
	.word	127                             # 0x7f
	.size	_ZN2kcL37kc_subphyla_Yesac_constant_expressionE, 4

	.type	.L.str.436,@object              # @.str.436
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.436:
	.asciz	"Noac_constant_expression"
	.size	.L.str.436, 25

	.type	.L.str.437,@object              # @.str.437
.L.str.437:
	.asciz	"AcConstExpr"
	.size	.L.str.437, 12

	.type	_ZN2kcL23kc_subphyla_AcConstExprE,@object # @_ZN2kcL23kc_subphyla_AcConstExprE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_AcConstExprE:
	.word	25                              # 0x19
	.size	_ZN2kcL23kc_subphyla_AcConstExprE, 4

	.type	.L.str.438,@object              # @.str.438
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.438:
	.asciz	"Nilac_constant_expression_list"
	.size	.L.str.438, 31

	.type	.L.str.439,@object              # @.str.439
.L.str.439:
	.asciz	"Consac_constant_expression_list"
	.size	.L.str.439, 32

	.type	_ZN2kcL43kc_subphyla_Consac_constant_expression_listE,@object # @_ZN2kcL43kc_subphyla_Consac_constant_expression_listE
	.data
	.p2align	2, 0x0
_ZN2kcL43kc_subphyla_Consac_constant_expression_listE:
	.word	127                             # 0x7f
	.word	128                             # 0x80
	.size	_ZN2kcL43kc_subphyla_Consac_constant_expression_listE, 8

	.type	.L.str.440,@object              # @.str.440
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.440:
	.asciz	"AcNoBaseInit"
	.size	.L.str.440, 13

	.type	.L.str.441,@object              # @.str.441
.L.str.441:
	.asciz	"AcYesBaseInit"
	.size	.L.str.441, 14

	.type	_ZN2kcL25kc_subphyla_AcYesBaseInitE,@object # @_ZN2kcL25kc_subphyla_AcYesBaseInitE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_AcYesBaseInitE:
	.word	130                             # 0x82
	.size	_ZN2kcL25kc_subphyla_AcYesBaseInitE, 4

	.type	.L.str.442,@object              # @.str.442
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.442:
	.asciz	"Nilac_base_init_list"
	.size	.L.str.442, 21

	.type	.L.str.443,@object              # @.str.443
.L.str.443:
	.asciz	"Consac_base_init_list"
	.size	.L.str.443, 22

	.type	_ZN2kcL33kc_subphyla_Consac_base_init_listE,@object # @_ZN2kcL33kc_subphyla_Consac_base_init_listE
	.data
	.p2align	2, 0x0
_ZN2kcL33kc_subphyla_Consac_base_init_listE:
	.word	131                             # 0x83
	.word	130                             # 0x82
	.size	_ZN2kcL33kc_subphyla_Consac_base_init_listE, 8

	.type	.L.str.444,@object              # @.str.444
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.444:
	.asciz	"AcBaseInit"
	.size	.L.str.444, 11

	.type	_ZN2kcL22kc_subphyla_AcBaseInitE,@object # @_ZN2kcL22kc_subphyla_AcBaseInitE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_AcBaseInitE:
	.word	7                               # 0x7
	.word	127                             # 0x7f
	.size	_ZN2kcL22kc_subphyla_AcBaseInitE, 8

	.type	.L.str.445,@object              # @.str.445
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.445:
	.asciz	"Nilbaseclass_declarations"
	.size	.L.str.445, 26

	.type	.L.str.446,@object              # @.str.446
.L.str.446:
	.asciz	"Consbaseclass_declarations"
	.size	.L.str.446, 27

	.type	_ZN2kcL38kc_subphyla_Consbaseclass_declarationsE,@object # @_ZN2kcL38kc_subphyla_Consbaseclass_declarationsE
	.data
	.p2align	2, 0x0
_ZN2kcL38kc_subphyla_Consbaseclass_declarationsE:
	.word	133                             # 0x85
	.word	132                             # 0x84
	.size	_ZN2kcL38kc_subphyla_Consbaseclass_declarationsE, 8

	.type	.L.str.447,@object              # @.str.447
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.447:
	.asciz	"BaseClassDecl"
	.size	.L.str.447, 14

	.type	_ZN2kcL25kc_subphyla_BaseClassDeclE,@object # @_ZN2kcL25kc_subphyla_BaseClassDeclE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_BaseClassDeclE:
	.word	7                               # 0x7
	.word	134                             # 0x86
	.size	_ZN2kcL25kc_subphyla_BaseClassDeclE, 8

	.type	.L.str.448,@object              # @.str.448
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.448:
	.asciz	"Nilbaseclass_list"
	.size	.L.str.448, 18

	.type	.L.str.449,@object              # @.str.449
.L.str.449:
	.asciz	"Consbaseclass_list"
	.size	.L.str.449, 19

	.type	_ZN2kcL30kc_subphyla_Consbaseclass_listE,@object # @_ZN2kcL30kc_subphyla_Consbaseclass_listE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_Consbaseclass_listE:
	.word	7                               # 0x7
	.word	134                             # 0x86
	.size	_ZN2kcL30kc_subphyla_Consbaseclass_listE, 8

	.type	.L.str.450,@object              # @.str.450
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.450:
	.asciz	"Fatal"
	.size	.L.str.450, 6

	.type	_ZN2kcL17kc_subphyla_FatalE,@object # @_ZN2kcL17kc_subphyla_FatalE
	.data
	.p2align	2, 0x0
_ZN2kcL17kc_subphyla_FatalE:
	.word	76                              # 0x4c
	.word	136                             # 0x88
	.size	_ZN2kcL17kc_subphyla_FatalE, 8

	.type	.L.str.451,@object              # @.str.451
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.451:
	.asciz	"NonFatal"
	.size	.L.str.451, 9

	.type	_ZN2kcL20kc_subphyla_NonFatalE,@object # @_ZN2kcL20kc_subphyla_NonFatalE
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_NonFatalE:
	.word	76                              # 0x4c
	.word	136                             # 0x88
	.size	_ZN2kcL20kc_subphyla_NonFatalE, 8

	.type	.L.str.452,@object              # @.str.452
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.452:
	.asciz	"Warning"
	.size	.L.str.452, 8

	.type	_ZN2kcL19kc_subphyla_WarningE,@object # @_ZN2kcL19kc_subphyla_WarningE
	.data
	.p2align	2, 0x0
_ZN2kcL19kc_subphyla_WarningE:
	.word	76                              # 0x4c
	.word	136                             # 0x88
	.size	_ZN2kcL19kc_subphyla_WarningE, 8

	.type	.L.str.453,@object              # @.str.453
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.453:
	.asciz	"Problem1"
	.size	.L.str.453, 9

	.type	_ZN2kcL20kc_subphyla_Problem1E,@object # @_ZN2kcL20kc_subphyla_Problem1E
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_Problem1E:
	.word	2                               # 0x2
	.size	_ZN2kcL20kc_subphyla_Problem1E, 4

	.type	.L.str.454,@object              # @.str.454
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.454:
	.asciz	"Problem1ID"
	.size	.L.str.454, 11

	.type	_ZN2kcL22kc_subphyla_Problem1IDE,@object # @_ZN2kcL22kc_subphyla_Problem1IDE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_Problem1IDE:
	.word	2                               # 0x2
	.word	7                               # 0x7
	.size	_ZN2kcL22kc_subphyla_Problem1IDE, 8

	.type	.L.str.455,@object              # @.str.455
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.455:
	.asciz	"Problem1tID"
	.size	.L.str.455, 12

	.type	_ZN2kcL23kc_subphyla_Problem1tIDE,@object # @_ZN2kcL23kc_subphyla_Problem1tIDE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_Problem1tIDE:
	.word	2                               # 0x2
	.word	7                               # 0x7
	.size	_ZN2kcL23kc_subphyla_Problem1tIDE, 8

	.type	.L.str.456,@object              # @.str.456
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.456:
	.asciz	"Problem1we"
	.size	.L.str.456, 11

	.type	_ZN2kcL22kc_subphyla_Problem1weE,@object # @_ZN2kcL22kc_subphyla_Problem1weE
	.data
	.p2align	2, 0x0
_ZN2kcL22kc_subphyla_Problem1weE:
	.word	2                               # 0x2
	.word	61                              # 0x3d
	.size	_ZN2kcL22kc_subphyla_Problem1weE, 8

	.type	.L.str.457,@object              # @.str.457
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.457:
	.asciz	"Problem1ID1ID"
	.size	.L.str.457, 14

	.type	_ZN2kcL25kc_subphyla_Problem1ID1IDE,@object # @_ZN2kcL25kc_subphyla_Problem1ID1IDE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_Problem1ID1IDE:
	.word	2                               # 0x2
	.word	7                               # 0x7
	.word	2                               # 0x2
	.word	7                               # 0x7
	.size	_ZN2kcL25kc_subphyla_Problem1ID1IDE, 16

	.type	.L.str.458,@object              # @.str.458
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.458:
	.asciz	"Problem1t1ID"
	.size	.L.str.458, 13

	.type	_ZN2kcL24kc_subphyla_Problem1t1IDE,@object # @_ZN2kcL24kc_subphyla_Problem1t1IDE
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_Problem1t1IDE:
	.word	2                               # 0x2
	.word	79                              # 0x4f
	.word	2                               # 0x2
	.word	7                               # 0x7
	.size	_ZN2kcL24kc_subphyla_Problem1t1IDE, 16

	.type	.L.str.459,@object              # @.str.459
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.459:
	.asciz	"Problem1INT"
	.size	.L.str.459, 12

	.type	_ZN2kcL23kc_subphyla_Problem1INTE,@object # @_ZN2kcL23kc_subphyla_Problem1INTE
	.data
	.p2align	2, 0x0
_ZN2kcL23kc_subphyla_Problem1INTE:
	.word	2                               # 0x2
	.word	8                               # 0x8
	.size	_ZN2kcL23kc_subphyla_Problem1INTE, 8

	.type	.L.str.460,@object              # @.str.460
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.460:
	.asciz	"Problem1int1"
	.size	.L.str.460, 13

	.type	_ZN2kcL24kc_subphyla_Problem1int1E,@object # @_ZN2kcL24kc_subphyla_Problem1int1E
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_Problem1int1E:
	.word	2                               # 0x2
	.word	4                               # 0x4
	.word	2                               # 0x2
	.size	_ZN2kcL24kc_subphyla_Problem1int1E, 12

	.type	.L.str.461,@object              # @.str.461
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.461:
	.asciz	"Problem1INT1ID"
	.size	.L.str.461, 15

	.type	_ZN2kcL26kc_subphyla_Problem1INT1IDE,@object # @_ZN2kcL26kc_subphyla_Problem1INT1IDE
	.data
	.p2align	2, 0x0
_ZN2kcL26kc_subphyla_Problem1INT1IDE:
	.word	2                               # 0x2
	.word	8                               # 0x8
	.word	2                               # 0x2
	.word	7                               # 0x7
	.size	_ZN2kcL26kc_subphyla_Problem1INT1IDE, 16

	.type	.L.str.462,@object              # @.str.462
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.462:
	.asciz	"Problem1ID1ID1ID"
	.size	.L.str.462, 17

	.type	_ZN2kcL28kc_subphyla_Problem1ID1ID1IDE,@object # @_ZN2kcL28kc_subphyla_Problem1ID1ID1IDE
	.data
	.p2align	2, 0x0
_ZN2kcL28kc_subphyla_Problem1ID1ID1IDE:
	.word	2                               # 0x2
	.word	7                               # 0x7
	.word	2                               # 0x2
	.word	7                               # 0x7
	.word	2                               # 0x2
	.word	7                               # 0x7
	.size	_ZN2kcL28kc_subphyla_Problem1ID1ID1IDE, 24

	.type	.L.str.463,@object              # @.str.463
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.463:
	.asciz	"Problem1INT1ID1ID"
	.size	.L.str.463, 18

	.type	_ZN2kcL29kc_subphyla_Problem1INT1ID1IDE,@object # @_ZN2kcL29kc_subphyla_Problem1INT1ID1IDE
	.data
	.p2align	2, 0x0
_ZN2kcL29kc_subphyla_Problem1INT1ID1IDE:
	.word	2                               # 0x2
	.word	8                               # 0x8
	.word	2                               # 0x2
	.word	7                               # 0x7
	.word	2                               # 0x2
	.word	7                               # 0x7
	.size	_ZN2kcL29kc_subphyla_Problem1INT1ID1IDE, 24

	.type	.L.str.464,@object              # @.str.464
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.464:
	.asciz	"Problem1storageoption1ID"
	.size	.L.str.464, 25

	.type	_ZN2kcL36kc_subphyla_Problem1storageoption1IDE,@object # @_ZN2kcL36kc_subphyla_Problem1storageoption1IDE
	.data
	.p2align	2, 0x0
_ZN2kcL36kc_subphyla_Problem1storageoption1IDE:
	.word	2                               # 0x2
	.word	14                              # 0xe
	.word	2                               # 0x2
	.word	7                               # 0x7
	.size	_ZN2kcL36kc_subphyla_Problem1storageoption1IDE, 16

	.type	.L.str.465,@object              # @.str.465
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.465:
	.asciz	"Problem2"
	.size	.L.str.465, 9

	.type	_ZN2kcL20kc_subphyla_Problem2E,@object # @_ZN2kcL20kc_subphyla_Problem2E
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_Problem2E:
	.word	2                               # 0x2
	.word	2                               # 0x2
	.size	_ZN2kcL20kc_subphyla_Problem2E, 8

	.type	.L.str.466,@object              # @.str.466
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.466:
	.asciz	"Problem3"
	.size	.L.str.466, 9

	.type	_ZN2kcL20kc_subphyla_Problem3E,@object # @_ZN2kcL20kc_subphyla_Problem3E
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_Problem3E:
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.size	_ZN2kcL20kc_subphyla_Problem3E, 12

	.type	.L.str.467,@object              # @.str.467
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.467:
	.asciz	"Problem3int1"
	.size	.L.str.467, 13

	.type	_ZN2kcL24kc_subphyla_Problem3int1E,@object # @_ZN2kcL24kc_subphyla_Problem3int1E
	.data
	.p2align	2, 0x0
_ZN2kcL24kc_subphyla_Problem3int1E:
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	4                               # 0x4
	.word	2                               # 0x2
	.size	_ZN2kcL24kc_subphyla_Problem3int1E, 20

	.type	.L.str.468,@object              # @.str.468
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.468:
	.asciz	"Problem4"
	.size	.L.str.468, 9

	.type	_ZN2kcL20kc_subphyla_Problem4E,@object # @_ZN2kcL20kc_subphyla_Problem4E
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_Problem4E:
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.size	_ZN2kcL20kc_subphyla_Problem4E, 16

	.type	.L.str.469,@object              # @.str.469
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.469:
	.asciz	"Problem5"
	.size	.L.str.469, 9

	.type	_ZN2kcL20kc_subphyla_Problem5E,@object # @_ZN2kcL20kc_subphyla_Problem5E
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_Problem5E:
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.size	_ZN2kcL20kc_subphyla_Problem5E, 20

	.type	.L.str.470,@object              # @.str.470
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.470:
	.asciz	"Problem6"
	.size	.L.str.470, 9

	.type	_ZN2kcL20kc_subphyla_Problem6E,@object # @_ZN2kcL20kc_subphyla_Problem6E
	.data
	.p2align	2, 0x0
_ZN2kcL20kc_subphyla_Problem6E:
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.word	2                               # 0x2
	.size	_ZN2kcL20kc_subphyla_Problem6E, 24

	.type	.L.str.471,@object              # @.str.471
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.471:
	.asciz	"Niladdedphylumdeclarations"
	.size	.L.str.471, 27

	.type	.L.str.472,@object              # @.str.472
.L.str.472:
	.asciz	"Consaddedphylumdeclarations"
	.size	.L.str.472, 28

	.type	_ZN2kcL39kc_subphyla_ConsaddedphylumdeclarationsE,@object # @_ZN2kcL39kc_subphyla_ConsaddedphylumdeclarationsE
	.data
	.p2align	2, 0x0
_ZN2kcL39kc_subphyla_ConsaddedphylumdeclarationsE:
	.word	138                             # 0x8a
	.word	137                             # 0x89
	.size	_ZN2kcL39kc_subphyla_ConsaddedphylumdeclarationsE, 8

	.type	.L.str.473,@object              # @.str.473
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.473:
	.asciz	"AddedPhylumdeclaration"
	.size	.L.str.473, 23

	.type	_ZN2kcL34kc_subphyla_AddedPhylumdeclarationE,@object # @_ZN2kcL34kc_subphyla_AddedPhylumdeclarationE
	.data
	.p2align	2, 0x0
_ZN2kcL34kc_subphyla_AddedPhylumdeclarationE:
	.word	6                               # 0x6
	.size	_ZN2kcL34kc_subphyla_AddedPhylumdeclarationE, 4

	.type	.L.str.474,@object              # @.str.474
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.474:
	.asciz	"Nilcountedphylumdeclarations"
	.size	.L.str.474, 29

	.type	.L.str.475,@object              # @.str.475
.L.str.475:
	.asciz	"Conscountedphylumdeclarations"
	.size	.L.str.475, 30

	.type	_ZN2kcL41kc_subphyla_ConscountedphylumdeclarationsE,@object # @_ZN2kcL41kc_subphyla_ConscountedphylumdeclarationsE
	.data
	.p2align	2, 0x0
_ZN2kcL41kc_subphyla_ConscountedphylumdeclarationsE:
	.word	140                             # 0x8c
	.word	139                             # 0x8b
	.size	_ZN2kcL41kc_subphyla_ConscountedphylumdeclarationsE, 8

	.type	.L.str.476,@object              # @.str.476
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.476:
	.asciz	"CountedPhylumdeclaration"
	.size	.L.str.476, 25

	.type	_ZN2kcL36kc_subphyla_CountedPhylumdeclarationE,@object # @_ZN2kcL36kc_subphyla_CountedPhylumdeclarationE
	.data
	.p2align	2, 0x0
_ZN2kcL36kc_subphyla_CountedPhylumdeclarationE:
	.word	6                               # 0x6
	.size	_ZN2kcL36kc_subphyla_CountedPhylumdeclarationE, 4

	.type	.L.str.477,@object              # @.str.477
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.477:
	.asciz	"Newlines"
	.size	.L.str.477, 9

	.type	.L.str.478,@object              # @.str.478
.L.str.478:
	.asciz	"QuotedNewlines"
	.size	.L.str.478, 15

	.type	.L.str.479,@object              # @.str.479
.L.str.479:
	.asciz	"Stars"
	.size	.L.str.479, 6

	.type	.L.str.480,@object              # @.str.480
.L.str.480:
	.asciz	"Nilbindingidmarks"
	.size	.L.str.480, 18

	.type	.L.str.481,@object              # @.str.481
.L.str.481:
	.asciz	"Consbindingidmarks"
	.size	.L.str.481, 19

	.type	_ZN2kcL30kc_subphyla_ConsbindingidmarksE,@object # @_ZN2kcL30kc_subphyla_ConsbindingidmarksE
	.data
	.p2align	2, 0x0
_ZN2kcL30kc_subphyla_ConsbindingidmarksE:
	.word	143                             # 0x8f
	.word	142                             # 0x8e
	.size	_ZN2kcL30kc_subphyla_ConsbindingidmarksE, 8

	.type	.L.str.482,@object              # @.str.482
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.482:
	.asciz	"BindingIdMark"
	.size	.L.str.482, 14

	.type	_ZN2kcL25kc_subphyla_BindingIdMarkE,@object # @_ZN2kcL25kc_subphyla_BindingIdMarkE
	.data
	.p2align	2, 0x0
_ZN2kcL25kc_subphyla_BindingIdMarkE:
	.word	6                               # 0x6
	.size	_ZN2kcL25kc_subphyla_BindingIdMarkE, 4

	.type	_ZN2kc13operator_infoE,@object  # @_ZN2kc13operator_infoE
	.globl	_ZN2kc13operator_infoE
	.p2align	3, 0x0
_ZN2kc13operator_infoE:
	.dword	.L.str
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	0                               # 0x0
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	0                               # 0x0
	.dword	.L.str.145
	.dword	0                               # 0x0
	.byte	1                               # 0x1
	.space	3
	.word	1                               # 0x1
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.146
	.dword	0                               # 0x0
	.byte	1                               # 0x1
	.space	3
	.word	2                               # 0x2
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.147
	.dword	0                               # 0x0
	.byte	1                               # 0x1
	.space	3
	.word	3                               # 0x3
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.148
	.dword	0                               # 0x0
	.byte	1                               # 0x1
	.space	3
	.word	4                               # 0x4
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.149
	.dword	0                               # 0x0
	.byte	1                               # 0x1
	.space	3
	.word	5                               # 0x5
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.150
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	6                               # 0x6
	.dword	_ZN2kcL15kc_subphyla_StrE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.151
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	7                               # 0x7
	.dword	_ZN2kcL14kc_subphyla_IdE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.152
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	8                               # 0x8
	.dword	_ZN2kcL15kc_subphyla_IntE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.153
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	9                               # 0x9
	.dword	_ZN2kcL18kc_subphyla_StringE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.154
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	10                              # 0xa
	.dword	_ZN2kcL30kc_subphyla_PhylumDeclarationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.155
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	11                              # 0xb
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.156
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	11                              # 0xb
	.dword	_ZN2kcL34kc_subphyla_ConsphylumdeclarationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.157
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	12                              # 0xc
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.158
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	12                              # 0xc
	.dword	_ZN2kcL27kc_subphyla_ConsphylumnamesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.159
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	13                              # 0xd
	.dword	_ZN2kcL29kc_subphyla_PhylumDeclarationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	64                              # 0x40
	.dword	.L.str.160
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	14                              # 0xe
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.161
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	14                              # 0xe
	.dword	_ZN2kcL33kc_subphyla_NegativeStorageOptionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.162
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	14                              # 0xe
	.dword	_ZN2kcL33kc_subphyla_PositiveStorageOptionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.163
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	15                              # 0xf
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.164
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	15                              # 0xf
	.dword	_ZN2kcL30kc_subphyla_ConsstorageclassesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.165
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	16                              # 0x10
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.166
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	16                              # 0x10
	.dword	_ZN2kcL28kc_subphyla_ListAlternativesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.167
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	16                              # 0x10
	.dword	_ZN2kcL31kc_subphyla_NonlistAlternativesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.168
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	16                              # 0x10
	.dword	_ZN2kcL34kc_subphyla_PredefinedAlternativesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.169
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	17                              # 0x11
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.170
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	17                              # 0x11
	.dword	_ZN2kcL28kc_subphyla_ConsalternativesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.171
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	18                              # 0x12
	.dword	_ZN2kcL23kc_subphyla_AlternativeE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	56                              # 0x38
	.dword	.L.str.172
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	19                              # 0x13
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.173
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	19                              # 0x13
	.dword	_ZN2kcL25kc_subphyla_ConsargumentsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.174
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	20                              # 0x14
	.dword	_ZN2kcL20kc_subphyla_ArgumentE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.175
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	21                              # 0x15
	.dword	_ZN2kcL23kc_subphyla_CcodeOptionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.176
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	22                              # 0x16
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.177
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	22                              # 0x16
	.dword	_ZN2kcL26kc_subphyla_ConsattributesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.178
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	23                              # 0x17
	.dword	_ZN2kcL21kc_subphyla_AttributeE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.179
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	24                              # 0x18
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.180
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	24                              # 0x18
	.dword	_ZN2kcL39kc_subphyla_Yesattribute_initialisationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.181
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	25                              # 0x19
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.182
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	25                              # 0x19
	.dword	_ZN2kcL27kc_subphyla_ConsCexpressionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.183
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	26                              # 0x1a
	.dword	_ZN2kcL27kc_subphyla_CExpressionPartE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.184
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	26                              # 0x1a
	.dword	_ZN2kcL32kc_subphyla_CExpressionDollarvarE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.185
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	26                              # 0x1a
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.186
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	26                              # 0x1a
	.dword	_ZN2kcL25kc_subphyla_CExpressionDQE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.187
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	26                              # 0x1a
	.dword	_ZN2kcL25kc_subphyla_CExpressionSQE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.188
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	26                              # 0x1a
	.dword	_ZN2kcL27kc_subphyla_CExpressionPackE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.189
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	26                              # 0x1a
	.dword	_ZN2kcL28kc_subphyla_CExpressionArrayE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.190
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	27                              # 0x1b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.191
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	27                              # 0x1b
	.dword	_ZN2kcL29kc_subphyla_ConsCexpressionDQE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.192
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	28                              # 0x1c
	.dword	_ZN2kcL29kc_subphyla_CExpressionDQPartE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.193
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	28                              # 0x1c
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.194
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	29                              # 0x1d
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.195
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	29                              # 0x1d
	.dword	_ZN2kcL29kc_subphyla_ConsCexpressionSQE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.196
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	30                              # 0x1e
	.dword	_ZN2kcL29kc_subphyla_CExpressionSQPartE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.197
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	30                              # 0x1e
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.198
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	31                              # 0x1f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.199
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	31                              # 0x1f
	.dword	_ZN2kcL30kc_subphyla_ConsidCexpressionsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.200
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	32                              # 0x20
	.dword	_ZN2kcL25kc_subphyla_IdCexpressionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.201
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	33                              # 0x21
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.202
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	33                              # 0x21
	.dword	_ZN2kcL22kc_subphyla_ConsCtextsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.203
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	34                              # 0x22
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.204
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	34                              # 0x22
	.dword	_ZN2kcL28kc_subphyla_ConsincludefilesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.205
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	35                              # 0x23
	.dword	_ZN2kcL23kc_subphyla_IncludeFileE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.206
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	36                              # 0x24
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.207
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	36                              # 0x24
	.dword	_ZN2kcL35kc_subphyla_ConsincludedeclarationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.208
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	37                              # 0x25
	.dword	_ZN2kcL30kc_subphyla_IncludeDeclarationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.209
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	38                              # 0x26
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.210
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	38                              # 0x26
	.dword	_ZN2kcL30kc_subphyla_ConsrwdeclarationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.211
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	39                              # 0x27
	.dword	_ZN2kcL25kc_subphyla_RwDeclarationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.212
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	40                              # 0x28
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.213
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	40                              # 0x28
	.dword	_ZN2kcL30kc_subphyla_ConsrewriteclausesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.214
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	41                              # 0x29
	.dword	_ZN2kcL25kc_subphyla_RewriteClauseE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.215
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	42                              # 0x2a
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.216
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	42                              # 0x2a
	.dword	_ZN2kcL29kc_subphyla_ConspatternchainsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.217
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	43                              # 0x2b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.218
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	43                              # 0x2b
	.dword	_ZN2kcL28kc_subphyla_ConspatternchainE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.219
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	44                              # 0x2c
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.220
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	44                              # 0x2c
	.dword	_ZN2kcL31kc_subphyla_ConsoutmostpatternsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.221
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	45                              # 0x2d
	.dword	_ZN2kcL35kc_subphyla_PatternchainitemOutmostE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.222
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	45                              # 0x2d
	.dword	_ZN2kcL33kc_subphyla_PatternchainitemGroupE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.223
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	45                              # 0x2d
	.dword	_ZN2kcL36kc_subphyla_PatternchainitemDollaridE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.224
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	46                              # 0x2e
	.dword	_ZN2kcL30kc_subphyla_OPOperatorWildcardE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.225
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	46                              # 0x2e
	.dword	_ZN2kcL22kc_subphyla_OPOperatorE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	56                              # 0x38
	.dword	.L.str.226
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	46                              # 0x2e
	.dword	_ZN2kcL29kc_subphyla_OPNonLeafVariableE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.227
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	46                              # 0x2e
	.dword	_ZN2kcL22kc_subphyla_OPWildcardE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.228
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	46                              # 0x2e
	.dword	_ZN2kcL21kc_subphyla_OPDefaultE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.229
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	47                              # 0x2f
	.dword	_ZN2kcL21kc_subphyla_PVariableE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.230
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	47                              # 0x2f
	.dword	_ZN2kcL21kc_subphyla_POperatorE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.231
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	47                              # 0x2f
	.dword	_ZN2kcL28kc_subphyla_PNonLeafVariableE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.232
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	47                              # 0x2f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.233
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	47                              # 0x2f
	.dword	_ZN2kcL26kc_subphyla_PStringLiteralE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.234
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	47                              # 0x2f
	.dword	_ZN2kcL23kc_subphyla_PIntLiteralE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.235
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	48                              # 0x30
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.236
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	48                              # 0x30
	.dword	_ZN2kcL24kc_subphyla_ConspatternsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.237
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	49                              # 0x31
	.dword	_ZN2kcL21kc_subphyla_TVariableE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.238
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	49                              # 0x31
	.dword	_ZN2kcL21kc_subphyla_TOperatorE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.239
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	49                              # 0x31
	.dword	_ZN2kcL19kc_subphyla_TMethodE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.240
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	49                              # 0x31
	.dword	_ZN2kcL22kc_subphyla_TMethodDotE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.241
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	49                              # 0x31
	.dword	_ZN2kcL22kc_subphyla_TMemberVarE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.242
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	49                              # 0x31
	.dword	_ZN2kcL25kc_subphyla_TMemberVarDotE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.243
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	49                              # 0x31
	.dword	_ZN2kcL18kc_subphyla_TCTermE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.244
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	49                              # 0x31
	.dword	_ZN2kcL26kc_subphyla_TStringLiteralE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.245
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	49                              # 0x31
	.dword	_ZN2kcL23kc_subphyla_TIntLiteralE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.246
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	50                              # 0x32
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.247
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	50                              # 0x32
	.dword	_ZN2kcL21kc_subphyla_ConstermsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.248
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	51                              # 0x33
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.249
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	51                              # 0x33
	.dword	_ZN2kcL23kc_subphyla_ConsfnfilesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.250
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	52                              # 0x34
	.dword	_ZN2kcL18kc_subphyla_FnFileE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.251
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	53                              # 0x35
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.252
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	53                              # 0x35
	.dword	_ZN2kcL30kc_subphyla_ConsfndeclarationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.253
	.dword	7                               # 0x7
	.byte	0                               # 0x0
	.space	3
	.word	54                              # 0x36
	.dword	_ZN2kcL27kc_subphyla_FnAcDeclarationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	96                              # 0x60
	.dword	.L.str.254
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	54                              # 0x36
	.dword	_ZN2kcL31kc_subphyla_AcMemberDeclarationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	72                              # 0x48
	.dword	.L.str.255
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	55                              # 0x37
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.256
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	55                              # 0x37
	.dword	_ZN2kcL20kc_subphyla_StaticFnE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.257
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	55                              # 0x37
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.258
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	55                              # 0x37
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.259
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	55                              # 0x37
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.260
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	55                              # 0x37
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.261
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	56                              # 0x38
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.262
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	56                              # 0x38
	.dword	_ZN2kcL21kc_subphyla_ConsCtextE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.263
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	57                              # 0x39
	.dword	_ZN2kcL21kc_subphyla_CTextLineE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.264
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	57                              # 0x39
	.dword	_ZN2kcL26kc_subphyla_CTextDollarVarE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.265
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	57                              # 0x39
	.dword	_ZN2kcL19kc_subphyla_CTextNlE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.266
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	57                              # 0x39
	.dword	_ZN2kcL30kc_subphyla_CTextCexpressionDQE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.267
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	57                              # 0x39
	.dword	_ZN2kcL30kc_subphyla_CTextCexpressionSQE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.268
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	57                              # 0x39
	.dword	_ZN2kcL22kc_subphyla_CTextCbodyE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.269
	.dword	5                               # 0x5
	.byte	0                               # 0x0
	.space	3
	.word	57                              # 0x39
	.dword	_ZN2kcL34kc_subphyla_CTextForeachexpressionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	64                              # 0x40
	.dword	.L.str.270
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	57                              # 0x39
	.dword	_ZN2kcL31kc_subphyla_CTextWithexpressionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.271
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	58                              # 0x3a
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.272
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	58                              # 0x3a
	.dword	_ZN2kcL24kc_subphyla_ForeachAfterE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	56                              # 0x38
	.dword	.L.str.273
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	59                              # 0x3b
	.dword	_ZN2kcL28kc_subphyla_InForeachContextE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.274
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	59                              # 0x3b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.275
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	60                              # 0x3c
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.276
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	60                              # 0x3c
	.dword	_ZN2kcL31kc_subphyla_ConswithexpressionsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.277
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	61                              # 0x3d
	.dword	_ZN2kcL22kc_subphyla_WEVariableE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.278
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	61                              # 0x3d
	.dword	_ZN2kcL25kc_subphyla_WECexpressionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.279
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	62                              # 0x3e
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.280
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	62                              # 0x3e
	.dword	_ZN2kcL25kc_subphyla_ConswithcasesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.281
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	63                              # 0x3f
	.dword	_ZN2kcL20kc_subphyla_WithcaseE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.282
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	64                              # 0x40
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.283
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	64                              # 0x40
	.dword	_ZN2kcL35kc_subphyla_ConsunparsedeclarationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.284
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	65                              # 0x41
	.dword	_ZN2kcL30kc_subphyla_UnparseDeclarationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.285
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	66                              # 0x42
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.286
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	66                              # 0x42
	.dword	_ZN2kcL30kc_subphyla_ConsunparseclausesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.287
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	67                              # 0x43
	.dword	_ZN2kcL25kc_subphyla_UnparseClauseE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.288
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	68                              # 0x44
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.289
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	68                              # 0x44
	.dword	_ZN2kcL25kc_subphyla_ConsviewnamesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.290
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	69                              # 0x45
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.291
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	69                              # 0x45
	.dword	_ZN2kcL28kc_subphyla_ConsunparseitemsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.292
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	70                              # 0x46
	.dword	_ZN2kcL18kc_subphyla_UnpStrE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.293
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	70                              # 0x46
	.dword	_ZN2kcL22kc_subphyla_UnpSubexprE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.294
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	70                              # 0x46
	.dword	_ZN2kcL20kc_subphyla_UnpCtextE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.295
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	70                              # 0x46
	.dword	_ZN2kcL19kc_subphyla_UnpBodyE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.296
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	70                              # 0x46
	.dword	_ZN2kcL24kc_subphyla_UViewVarDeclE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.297
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	71                              # 0x47
	.dword	_ZN2kcL22kc_subphyla_UnpSubTermE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.298
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	71                              # 0x47
	.dword	_ZN2kcL28kc_subphyla_UnpDollarvarTermE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.299
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	71                              # 0x47
	.dword	_ZN2kcL22kc_subphyla_UnpSubAttrE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.300
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	71                              # 0x47
	.dword	_ZN2kcL28kc_subphyla_UnpDollarvarAttrE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.301
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	71                              # 0x47
	.dword	_ZN2kcL29kc_subphyla_UnpCastedVariableE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.302
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	72                              # 0x48
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.303
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	72                              # 0x48
	.dword	_ZN2kcL29kc_subphyla_ConsunpattributesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.304
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	73                              # 0x49
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.305
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	73                              # 0x49
	.dword	_ZN2kcL23kc_subphyla_YesViewnameE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.306
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	74                              # 0x4a
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.307
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	74                              # 0x4a
	.dword	_ZN2kcL24kc_subphyla_LanguageListE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.308
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	75                              # 0x4b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.309
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	75                              # 0x4b
	.dword	_ZN2kcL29kc_subphyla_ConslanguagenamesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.310
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	76                              # 0x4c
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.311
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	76                              # 0x4c
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.312
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	76                              # 0x4c
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.313
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	77                              # 0x4d
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.314
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	77                              # 0x4d
	.dword	_ZN2kcL38kc_subphyla_ConsscopetypefilelinestackE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.315
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	78                              # 0x4e
	.dword	_ZN2kcL29kc_subphyla_ScopeTypeFileLineE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.316
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.317
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	_ZN2kcL30kc_subphyla_ITPredefinedPhylumE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.318
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	_ZN2kcL24kc_subphyla_ITUserPhylumE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.319
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	_ZN2kcL32kc_subphyla_ITPredefinedOperatorE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.320
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	_ZN2kcL26kc_subphyla_ITUserOperatorE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.321
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.322
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.323
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.324
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.325
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.326
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.327
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.328
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	_ZN2kcL26kc_subphyla_ITUserFunctionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.329
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	_ZN2kcL29kc_subphyla_ITPatternVariableE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.330
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	79                              # 0x4f
	.dword	_ZN2kcL26kc_subphyla_ITLanguageNameE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.331
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	80                              # 0x50
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.332
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	80                              # 0x50
	.dword	_ZN2kcL25kc_subphyla_ConsoperatorsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.333
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	81                              # 0x51
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.334
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	81                              # 0x51
	.dword	_ZN2kcL21kc_subphyla_ConsphylaE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.335
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	82                              # 0x52
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.336
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	82                              # 0x52
	.dword	_ZN2kcL25kc_subphyla_ConsvariablesE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.337
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	83                              # 0x53
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.338
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	83                              # 0x53
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.339
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	84                              # 0x54
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.340
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	84                              # 0x54
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.341
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	84                              # 0x54
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.342
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	85                              # 0x55
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.343
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	85                              # 0x55
	.dword	_ZN2kcL38kc_subphyla_ConspatternrepresentationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.344
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	86                              # 0x56
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.345
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	86                              # 0x56
	.dword	_ZN2kcL37kc_subphyla_ConspatternrepresentationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.346
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	87                              # 0x57
	.dword	_ZN2kcL21kc_subphyla_PRBindingE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.347
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	87                              # 0x57
	.dword	_ZN2kcL26kc_subphyla_PRVarPredicateE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	56                              # 0x38
	.dword	.L.str.348
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	87                              # 0x57
	.dword	_ZN2kcL27kc_subphyla_PROperPredicateE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.349
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	87                              # 0x57
	.dword	_ZN2kcL27kc_subphyla_PRUserPredicateE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.350
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	87                              # 0x57
	.dword	_ZN2kcL28kc_subphyla_PRNonLeafBindingE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	56                              # 0x38
	.dword	.L.str.351
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	87                              # 0x57
	.dword	_ZN2kcL22kc_subphyla_PRWildcardE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.352
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	87                              # 0x57
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.353
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	87                              # 0x57
	.dword	_ZN2kcL27kc_subphyla_PRStringLiteralE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.354
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	87                              # 0x57
	.dword	_ZN2kcL24kc_subphyla_PRIntLiteralE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.355
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	88                              # 0x58
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.356
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	88                              # 0x58
	.dword	_ZN2kcL20kc_subphyla_ConspathE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.357
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	89                              # 0x59
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.358
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	89                              # 0x59
	.dword	_ZN2kcL21kc_subphyla_ConspathsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.359
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	90                              # 0x5a
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.360
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	90                              # 0x5a
	.dword	_ZN2kcL27kc_subphyla_ConsargsnumbersE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.361
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	91                              # 0x5b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.362
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	91                              # 0x5b
	.dword	_ZN2kcL32kc_subphyla_ConsrewriterulesinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.363
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	92                              # 0x5c
	.dword	_ZN2kcL27kc_subphyla_RewriteruleinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.364
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	93                              # 0x5d
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.365
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	93                              # 0x5d
	.dword	_ZN2kcL29kc_subphyla_ConswithcasesinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.366
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	94                              # 0x5e
	.dword	_ZN2kcL24kc_subphyla_WithcaseinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.367
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	95                              # 0x5f
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.368
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	95                              # 0x5f
	.dword	_ZN2kcL32kc_subphyla_ConsrewriteviewsinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.369
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	96                              # 0x60
	.dword	_ZN2kcL27kc_subphyla_RewriteviewinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.370
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	97                              # 0x61
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.371
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	97                              # 0x61
	.dword	_ZN2kcL32kc_subphyla_ConsunparseviewsinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.372
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	98                              # 0x62
	.dword	_ZN2kcL27kc_subphyla_UnparseviewinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.373
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	99                              # 0x63
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.374
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	99                              # 0x63
	.dword	_ZN2kcL32kc_subphyla_ConsunparsedeclsinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.375
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	100                             # 0x64
	.dword	_ZN2kcL27kc_subphyla_UnparsedeclinfoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.376
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	101                             # 0x65
	.dword	_ZN2kcL25kc_subphyla_AcDeclarationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.377
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	102                             # 0x66
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.378
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	102                             # 0x66
	.dword	_ZN2kcL35kc_subphyla_Consac_declaration_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.379
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	103                             # 0x67
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.380
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	103                             # 0x67
	.dword	_ZN2kcL41kc_subphyla_Consac_declaration_specifiersE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.381
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	104                             # 0x68
	.dword	_ZN2kcL33kc_subphyla_AcDeclSpecStorageSpecE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.382
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	104                             # 0x68
	.dword	_ZN2kcL30kc_subphyla_AcDeclSpecTypeSpecE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.383
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	104                             # 0x68
	.dword	_ZN2kcL30kc_subphyla_AcDeclSpecTypeQualE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.384
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	105                             # 0x69
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.385
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	105                             # 0x69
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.386
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	105                             # 0x69
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.387
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	105                             # 0x69
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.388
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	105                             # 0x69
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.389
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	105                             # 0x69
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.390
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	106                             # 0x6a
	.dword	_ZN2kcL22kc_subphyla_AcTypeSpecE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.391
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	107                             # 0x6b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.392
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	107                             # 0x6b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.393
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	107                             # 0x6b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.394
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	107                             # 0x6b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.395
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	108                             # 0x6c
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.396
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	108                             # 0x6c
	.dword	_ZN2kcL39kc_subphyla_Consac_init_declarator_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.397
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	109                             # 0x6d
	.dword	_ZN2kcL22kc_subphyla_AcInitDeclE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.398
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	110                             # 0x6e
	.dword	_ZN2kcL24kc_subphyla_AcDeclaratorE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.399
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	111                             # 0x6f
	.dword	_ZN2kcL26kc_subphyla_AcDirectDeclIdE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.400
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	111                             # 0x6f
	.dword	_ZN2kcL28kc_subphyla_AcDirectDeclPackE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.401
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	111                             # 0x6f
	.dword	_ZN2kcL29kc_subphyla_AcDirectDeclArrayE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.402
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	111                             # 0x6f
	.dword	_ZN2kcL29kc_subphyla_AcDirectDeclProtoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.403
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	111                             # 0x6f
	.dword	_ZN2kcL32kc_subphyla_AcQualifiedDeclProtoE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.404
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	111                             # 0x6f
	.dword	_ZN2kcL24kc_subphyla_AcMemberDeclE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.405
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	111                             # 0x6f
	.dword	_ZN2kcL30kc_subphyla_AcConvOperatorDeclE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.406
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	111                             # 0x6f
	.dword	_ZN2kcL28kc_subphyla_AcOperatorDeclIdE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.407
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	112                             # 0x70
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.408
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	112                             # 0x70
	.dword	_ZN2kcL22kc_subphyla_YespointerE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.409
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	113                             # 0x71
	.dword	_ZN2kcL24kc_subphyla_AcPointerNilE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.410
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	113                             # 0x71
	.dword	_ZN2kcL25kc_subphyla_AcPointerConsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.411
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	114                             # 0x72
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.412
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	114                             # 0x72
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.413
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	115                             # 0x73
	.dword	_ZN2kcL26kc_subphyla_AcOperatorNameE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.414
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	116                             # 0x74
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.415
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	116                             # 0x74
	.dword	_ZN2kcL44kc_subphyla_Consac_class_qualifier_help_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.416
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	117                             # 0x75
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.417
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	117                             # 0x75
	.dword	_ZN2kcL39kc_subphyla_Consac_class_qualifier_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.418
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	118                             # 0x76
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.419
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	118                             # 0x76
	.dword	_ZN2kcL38kc_subphyla_Consac_type_qualifier_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.420
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	119                             # 0x77
	.dword	_ZN2kcL21kc_subphyla_AcParListE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.421
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	119                             # 0x77
	.dword	_ZN2kcL25kc_subphyla_AcParList3DotE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.422
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	120                             # 0x78
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.423
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	120                             # 0x78
	.dword	_ZN2kcL33kc_subphyla_Consac_parameter_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.424
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	121                             # 0x79
	.dword	_ZN2kcL25kc_subphyla_AcParDeclDeclE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.425
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	121                             # 0x79
	.dword	_ZN2kcL28kc_subphyla_AcParDeclAbsdeclE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.426
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	122                             # 0x7a
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.427
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	122                             # 0x7a
	.dword	_ZN2kcL34kc_subphyla_Consac_identifier_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.428
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	123                             # 0x7b
	.dword	_ZN2kcL28kc_subphyla_AcAbsdeclPointerE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.429
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	123                             # 0x7b
	.dword	_ZN2kcL28kc_subphyla_AcAbsdeclDirdeclE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.430
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	124                             # 0x7c
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.431
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	124                             # 0x7c
	.dword	_ZN2kcL44kc_subphyla_Yesac_direct_abstract_declaratorE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.432
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	125                             # 0x7d
	.dword	_ZN2kcL28kc_subphyla_AcDirAbsdeclPackE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.433
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	125                             # 0x7d
	.dword	_ZN2kcL29kc_subphyla_AcDirAbsdeclArrayE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.434
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	125                             # 0x7d
	.dword	_ZN2kcL26kc_subphyla_AcDirAbsdeclFnE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.435
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	126                             # 0x7e
	.dword	_ZN2kcL37kc_subphyla_Yesac_constant_expressionE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.436
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	126                             # 0x7e
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.437
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	127                             # 0x7f
	.dword	_ZN2kcL23kc_subphyla_AcConstExprE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.438
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	128                             # 0x80
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.439
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	128                             # 0x80
	.dword	_ZN2kcL43kc_subphyla_Consac_constant_expression_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.440
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	129                             # 0x81
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	8                               # 0x8
	.dword	.L.str.441
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	129                             # 0x81
	.dword	_ZN2kcL25kc_subphyla_AcYesBaseInitE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.442
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	130                             # 0x82
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.443
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	130                             # 0x82
	.dword	_ZN2kcL33kc_subphyla_Consac_base_init_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.444
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	131                             # 0x83
	.dword	_ZN2kcL22kc_subphyla_AcBaseInitE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.445
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	132                             # 0x84
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.446
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	132                             # 0x84
	.dword	_ZN2kcL38kc_subphyla_Consbaseclass_declarationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.447
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	133                             # 0x85
	.dword	_ZN2kcL25kc_subphyla_BaseClassDeclE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.448
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	134                             # 0x86
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.449
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	134                             # 0x86
	.dword	_ZN2kcL30kc_subphyla_Consbaseclass_listE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.450
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	135                             # 0x87
	.dword	_ZN2kcL17kc_subphyla_FatalE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.451
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	135                             # 0x87
	.dword	_ZN2kcL20kc_subphyla_NonFatalE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.452
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	135                             # 0x87
	.dword	_ZN2kcL19kc_subphyla_WarningE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.453
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL20kc_subphyla_Problem1E
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.454
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL22kc_subphyla_Problem1IDE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.455
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL23kc_subphyla_Problem1tIDE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.456
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL22kc_subphyla_Problem1weE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.457
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL25kc_subphyla_Problem1ID1IDE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.458
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL24kc_subphyla_Problem1t1IDE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.459
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL23kc_subphyla_Problem1INTE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.460
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL24kc_subphyla_Problem1int1E
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.461
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL26kc_subphyla_Problem1INT1IDE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.462
	.dword	6                               # 0x6
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL28kc_subphyla_Problem1ID1ID1IDE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	56                              # 0x38
	.dword	.L.str.463
	.dword	6                               # 0x6
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL29kc_subphyla_Problem1INT1ID1IDE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	56                              # 0x38
	.dword	.L.str.464
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL36kc_subphyla_Problem1storageoption1IDE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.465
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL20kc_subphyla_Problem2E
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.466
	.dword	3                               # 0x3
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL20kc_subphyla_Problem3E
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	32                              # 0x20
	.dword	.L.str.467
	.dword	5                               # 0x5
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL24kc_subphyla_Problem3int1E
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.468
	.dword	4                               # 0x4
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL20kc_subphyla_Problem4E
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	40                              # 0x28
	.dword	.L.str.469
	.dword	5                               # 0x5
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL20kc_subphyla_Problem5E
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	48                              # 0x30
	.dword	.L.str.470
	.dword	6                               # 0x6
	.byte	0                               # 0x0
	.space	3
	.word	136                             # 0x88
	.dword	_ZN2kcL20kc_subphyla_Problem6E
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	56                              # 0x38
	.dword	.L.str.471
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	137                             # 0x89
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.472
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	137                             # 0x89
	.dword	_ZN2kcL39kc_subphyla_ConsaddedphylumdeclarationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.473
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	138                             # 0x8a
	.dword	_ZN2kcL34kc_subphyla_AddedPhylumdeclarationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.474
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	139                             # 0x8b
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.475
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	139                             # 0x8b
	.dword	_ZN2kcL41kc_subphyla_ConscountedphylumdeclarationsE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.476
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	140                             # 0x8c
	.dword	_ZN2kcL36kc_subphyla_CountedPhylumdeclarationE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.477
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	141                             # 0x8d
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.478
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	141                             # 0x8d
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.479
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	141                             # 0x8d
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	16                              # 0x10
	.dword	.L.str.480
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	142                             # 0x8e
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.481
	.dword	2                               # 0x2
	.byte	0                               # 0x0
	.space	3
	.word	142                             # 0x8e
	.dword	_ZN2kcL30kc_subphyla_ConsbindingidmarksE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str.482
	.dword	1                               # 0x1
	.byte	0                               # 0x0
	.space	3
	.word	143                             # 0x8f
	.dword	_ZN2kcL25kc_subphyla_BindingIdMarkE
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	24                              # 0x18
	.dword	.L.str
	.dword	0                               # 0x0
	.byte	0                               # 0x0
	.space	3
	.word	0                               # 0x0
	.dword	0
	.word	0                               # 0x0
	.space	4
	.dword	0
	.dword	0                               # 0x0
	.size	_ZN2kc13operator_infoE, 19040

	.type	_ZN2kcL23phylumstorageclass_uniqE,@object # @_ZN2kcL23phylumstorageclass_uniqE
	.p2align	2, 0x0
_ZN2kcL23phylumstorageclass_uniqE:
	.word	0                               # 0x0
	.word	1                               # 0x1
	.word	2                               # 0x2
	.word	3                               # 0x3
	.word	4                               # 0x4
	.word	5                               # 0x5
	.word	6                               # 0x6
	.word	35                              # 0x23
	.word	52                              # 0x34
	.word	140                             # 0x8c
	.word	141                             # 0x8d
	.word	142                             # 0x8e
	.word	143                             # 0x8f
	.word	144                             # 0x90
	.size	_ZN2kcL23phylumstorageclass_uniqE, 56

	.type	_ZN2kc11kc_UniqInfoE,@object    # @_ZN2kc11kc_UniqInfoE
	.globl	_ZN2kc11kc_UniqInfoE
	.p2align	3, 0x0
_ZN2kc11kc_UniqInfoE:
	.dword	0
	.dword	_ZN2kcL23phylumstorageclass_uniqE
	.size	_ZN2kc11kc_UniqInfoE, 16

	.type	.L.str.484,@object              # @.str.484
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.484:
	.asciz	"Internal Error: no default action defined in function %s at %s:%d\n"
	.size	.L.str.484, 67

	.type	.L.str.485,@object              # @.str.485
.L.str.485:
	.asciz	"Internal Error: function %s does not return a value, at %s:%d"
	.size	.L.str.485, 62

	.type	.L.str.486,@object              # @.str.486
.L.str.486:
	.asciz	"Internal Error: Assertion failed at %s:%d\n"
	.size	.L.str.486, 43

	.type	.L.str.487,@object              # @.str.487
.L.str.487:
	.asciz	"Internal Error: Assertion failed at file %s:%d: %s\n"
	.size	.L.str.487, 52

	.type	.L.str.488,@object              # @.str.488
.L.str.488:
	.asciz	"Internal Error: Assertion failed at %s:%d: pointer %s is NULL\n"
	.size	.L.str.488, 63

	.type	.L.str.489,@object              # @.str.489
.L.str.489:
	.asciz	"Internal Error: Assertion failed at %s:%d: illegal value for (%s) %s%s: %d not a valid operator\n"
	.size	.L.str.489, 97

	.type	.L.str.490,@object              # @.str.490
.L.str.490:
	.asciz	"Internal Error: Assertion failed at %s:%d: illegal value for (%s) %s%s: %s (%d) is a value of %s\n"
	.size	.L.str.490, 98

	.type	.L.str.491,@object              # @.str.491
.L.str.491:
	.asciz	"Internal Error: invalid operator code in %s%s at %s:%d: %s\n"
	.size	.L.str.491, 60

	.type	_ZN2kc27impl_nocasestring_NoCaseStr11phylum_sel_E,@object # @_ZN2kc27impl_nocasestring_NoCaseStr11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc27impl_nocasestring_NoCaseStr11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_nocasestring_NoCaseStr11phylum_sel_E:
	.word	1                               # 0x1
	.size	_ZN2kc27impl_nocasestring_NoCaseStr11phylum_sel_E, 4

	.type	_ZN2kc20impl_casestring__Str11phylum_sel_E,@object # @_ZN2kc20impl_casestring__Str11phylum_sel_E
	.globl	_ZN2kc20impl_casestring__Str11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc20impl_casestring__Str11phylum_sel_E:
	.word	2                               # 0x2
	.size	_ZN2kc20impl_casestring__Str11phylum_sel_E, 4

	.type	_ZN2kc15impl_real__Real11phylum_sel_E,@object # @_ZN2kc15impl_real__Real11phylum_sel_E
	.globl	_ZN2kc15impl_real__Real11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc15impl_real__Real11phylum_sel_E:
	.word	3                               # 0x3
	.size	_ZN2kc15impl_real__Real11phylum_sel_E, 4

	.type	_ZN2kc17impl_integer__Int11phylum_sel_E,@object # @_ZN2kc17impl_integer__Int11phylum_sel_E
	.globl	_ZN2kc17impl_integer__Int11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc17impl_integer__Int11phylum_sel_E:
	.word	4                               # 0x4
	.size	_ZN2kc17impl_integer__Int11phylum_sel_E, 4

	.type	_ZN2kc21impl_voidptr__VoidPtr11phylum_sel_E,@object # @_ZN2kc21impl_voidptr__VoidPtr11phylum_sel_E
	.globl	_ZN2kc21impl_voidptr__VoidPtr11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc21impl_voidptr__VoidPtr11phylum_sel_E:
	.word	5                               # 0x5
	.size	_ZN2kc21impl_voidptr__VoidPtr11phylum_sel_E, 4

	.type	_ZN2kc11impl_uniqID11phylum_sel_E,@object # @_ZN2kc11impl_uniqID11phylum_sel_E
	.globl	_ZN2kc11impl_uniqID11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc11impl_uniqID11phylum_sel_E:
	.word	6                               # 0x6
	.size	_ZN2kc11impl_uniqID11phylum_sel_E, 4

	.type	_ZTVN2kc15impl_uniqID_StrE,@object # @_ZTVN2kc15impl_uniqID_StrE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc15impl_uniqID_StrE
	.p2align	3, 0x0
_ZTVN2kc15impl_uniqID_StrE:
	.dword	0
	.dword	_ZTIN2kc15impl_uniqID_StrE
	.dword	_ZNK2kc15impl_uniqID_Str8prod_selEv
	.dword	_ZNK2kc15impl_uniqID_Str9subphylumEi
	.dword	_ZN2kc15impl_uniqID_Str13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc15impl_uniqID_Str7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc15impl_uniqID_StrD0Ev
	.dword	_ZN2kc15impl_uniqID_Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc15impl_uniqID_StrE, 104

	.type	_ZN2kc7impl_ID11phylum_sel_E,@object # @_ZN2kc7impl_ID11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc7impl_ID11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc7impl_ID11phylum_sel_E:
	.word	7                               # 0x7
	.size	_ZN2kc7impl_ID11phylum_sel_E, 4

	.type	_ZTVN2kc10impl_ID_IdE,@object   # @_ZTVN2kc10impl_ID_IdE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc10impl_ID_IdE
	.p2align	3, 0x0
_ZTVN2kc10impl_ID_IdE:
	.dword	0
	.dword	_ZTIN2kc10impl_ID_IdE
	.dword	_ZNK2kc10impl_ID_Id8prod_selEv
	.dword	_ZNK2kc10impl_ID_Id9subphylumEi
	.dword	_ZN2kc10impl_ID_Id13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc10impl_ID_Id7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc10impl_ID_IdD0Ev
	.dword	_ZN2kc10impl_ID_Id10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc10impl_ID_IdE, 104

	.type	_ZN2kc8impl_INT11phylum_sel_E,@object # @_ZN2kc8impl_INT11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc8impl_INT11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc8impl_INT11phylum_sel_E:
	.word	8                               # 0x8
	.size	_ZN2kc8impl_INT11phylum_sel_E, 4

	.type	_ZTVN2kc12impl_INT_IntE,@object # @_ZTVN2kc12impl_INT_IntE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc12impl_INT_IntE
	.p2align	3, 0x0
_ZTVN2kc12impl_INT_IntE:
	.dword	0
	.dword	_ZTIN2kc12impl_INT_IntE
	.dword	_ZNK2kc12impl_INT_Int8prod_selEv
	.dword	_ZNK2kc12impl_INT_Int9subphylumEi
	.dword	_ZN2kc12impl_INT_Int13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc12impl_INT_Int7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc12impl_INT_IntD0Ev
	.dword	_ZN2kc12impl_INT_Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc12impl_INT_IntE, 104

	.type	_ZN2kc11impl_STRING11phylum_sel_E,@object # @_ZN2kc11impl_STRING11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc11impl_STRING11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc11impl_STRING11phylum_sel_E:
	.word	9                               # 0x9
	.size	_ZN2kc11impl_STRING11phylum_sel_E, 4

	.type	_ZTVN2kc18impl_STRING_StringE,@object # @_ZTVN2kc18impl_STRING_StringE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc18impl_STRING_StringE
	.p2align	3, 0x0
_ZTVN2kc18impl_STRING_StringE:
	.dword	0
	.dword	_ZTIN2kc18impl_STRING_StringE
	.dword	_ZNK2kc18impl_STRING_String8prod_selEv
	.dword	_ZNK2kc18impl_STRING_String9subphylumEi
	.dword	_ZN2kc18impl_STRING_String13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc18impl_STRING_String7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc18impl_STRING_StringD0Ev
	.dword	_ZN2kc18impl_STRING_String10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc18impl_STRING_StringE, 104

	.type	_ZN2kc27impl_phylumdeclarationsroot11phylum_sel_E,@object # @_ZN2kc27impl_phylumdeclarationsroot11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc27impl_phylumdeclarationsroot11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_phylumdeclarationsroot11phylum_sel_E:
	.word	10                              # 0xa
	.size	_ZN2kc27impl_phylumdeclarationsroot11phylum_sel_E, 4

	.type	_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE,@object # @_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
	.p2align	3, 0x0
_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE:
	.dword	0
	.dword	_ZTIN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
	.dword	_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations8prod_selEv
	.dword	_ZNK2kc46impl_phylumdeclarationsroot_PhylumDeclarations9subphylumEi
	.dword	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsD0Ev
	.dword	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE, 104

	.type	_ZN2kc23impl_phylumdeclarations11phylum_sel_E,@object # @_ZN2kc23impl_phylumdeclarations11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc23impl_phylumdeclarations11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc23impl_phylumdeclarations11phylum_sel_E:
	.word	11                              # 0xb
	.size	_ZN2kc23impl_phylumdeclarations11phylum_sel_E, 4

	.type	_ZTVN2kc23impl_phylumdeclarationsE,@object # @_ZTVN2kc23impl_phylumdeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc23impl_phylumdeclarationsE
	.p2align	3, 0x0
_ZTVN2kc23impl_phylumdeclarationsE:
	.dword	0
	.dword	_ZTIN2kc23impl_phylumdeclarationsE
	.dword	_ZNK2kc23impl_phylumdeclarations8prod_selEv
	.dword	_ZNK2kc23impl_phylumdeclarations9subphylumEi
	.dword	_ZN2kc23impl_phylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc23impl_phylumdeclarations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc23impl_phylumdeclarationsD0Ev
	.dword	_ZN2kc23impl_phylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc23impl_phylumdeclarations6is_nilEv
	.dword	_ZNK2kc23impl_phylumdeclarations7reverseEv
	.size	_ZTVN2kc23impl_phylumdeclarationsE, 120

	.type	_ZN2kc16impl_phylumnames11phylum_sel_E,@object # @_ZN2kc16impl_phylumnames11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc16impl_phylumnames11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc16impl_phylumnames11phylum_sel_E:
	.word	12                              # 0xc
	.size	_ZN2kc16impl_phylumnames11phylum_sel_E, 4

	.type	_ZTVN2kc16impl_phylumnamesE,@object # @_ZTVN2kc16impl_phylumnamesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc16impl_phylumnamesE
	.p2align	3, 0x0
_ZTVN2kc16impl_phylumnamesE:
	.dword	0
	.dword	_ZTIN2kc16impl_phylumnamesE
	.dword	_ZNK2kc16impl_phylumnames8prod_selEv
	.dword	_ZNK2kc16impl_phylumnames9subphylumEi
	.dword	_ZN2kc16impl_phylumnames13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc16impl_phylumnames7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc16impl_phylumnamesD0Ev
	.dword	_ZN2kc16impl_phylumnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc16impl_phylumnames6is_nilEv
	.dword	_ZNK2kc16impl_phylumnames7reverseEv
	.size	_ZTVN2kc16impl_phylumnamesE, 120

	.type	_ZN2kc22impl_phylumdeclaration11phylum_sel_E,@object # @_ZN2kc22impl_phylumdeclaration11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc22impl_phylumdeclaration11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc22impl_phylumdeclaration11phylum_sel_E:
	.word	13                              # 0xd
	.size	_ZN2kc22impl_phylumdeclaration11phylum_sel_E, 4

	.type	_ZTVN2kc40impl_phylumdeclaration_PhylumDeclarationE,@object # @_ZTVN2kc40impl_phylumdeclaration_PhylumDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc40impl_phylumdeclaration_PhylumDeclarationE
	.p2align	3, 0x0
_ZTVN2kc40impl_phylumdeclaration_PhylumDeclarationE:
	.dword	0
	.dword	_ZTIN2kc40impl_phylumdeclaration_PhylumDeclarationE
	.dword	_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration8prod_selEv
	.dword	_ZNK2kc40impl_phylumdeclaration_PhylumDeclaration9subphylumEi
	.dword	_ZN2kc40impl_phylumdeclaration_PhylumDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc40impl_phylumdeclaration_PhylumDeclaration7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc40impl_phylumdeclaration_PhylumDeclarationD0Ev
	.dword	_ZN2kc40impl_phylumdeclaration_PhylumDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc40impl_phylumdeclaration_PhylumDeclarationE, 104

	.type	_ZN2kc18impl_storageoption11phylum_sel_E,@object # @_ZN2kc18impl_storageoption11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_storageoption11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_storageoption11phylum_sel_E:
	.word	14                              # 0xe
	.size	_ZN2kc18impl_storageoption11phylum_sel_E, 4

	.type	_ZTVN2kc40impl_storageoption_PositiveStorageOptionE,@object # @_ZTVN2kc40impl_storageoption_PositiveStorageOptionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc40impl_storageoption_PositiveStorageOptionE
	.p2align	3, 0x0
_ZTVN2kc40impl_storageoption_PositiveStorageOptionE:
	.dword	0
	.dword	_ZTIN2kc40impl_storageoption_PositiveStorageOptionE
	.dword	_ZNK2kc40impl_storageoption_PositiveStorageOption8prod_selEv
	.dword	_ZNK2kc40impl_storageoption_PositiveStorageOption9subphylumEi
	.dword	_ZN2kc40impl_storageoption_PositiveStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc40impl_storageoption_PositiveStorageOption7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc40impl_storageoption_PositiveStorageOptionD0Ev
	.dword	_ZN2kc40impl_storageoption_PositiveStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc40impl_storageoption_PositiveStorageOptionE, 104

	.type	_ZTVN2kc40impl_storageoption_NegativeStorageOptionE,@object # @_ZTVN2kc40impl_storageoption_NegativeStorageOptionE
	.globl	_ZTVN2kc40impl_storageoption_NegativeStorageOptionE
	.p2align	3, 0x0
_ZTVN2kc40impl_storageoption_NegativeStorageOptionE:
	.dword	0
	.dword	_ZTIN2kc40impl_storageoption_NegativeStorageOptionE
	.dword	_ZNK2kc40impl_storageoption_NegativeStorageOption8prod_selEv
	.dword	_ZNK2kc40impl_storageoption_NegativeStorageOption9subphylumEi
	.dword	_ZN2kc40impl_storageoption_NegativeStorageOption13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc40impl_storageoption_NegativeStorageOption7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc40impl_storageoption_NegativeStorageOptionD0Ev
	.dword	_ZN2kc40impl_storageoption_NegativeStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc40impl_storageoption_NegativeStorageOptionE, 104

	.type	_ZN2kc19impl_storageclasses11phylum_sel_E,@object # @_ZN2kc19impl_storageclasses11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_storageclasses11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_storageclasses11phylum_sel_E:
	.word	15                              # 0xf
	.size	_ZN2kc19impl_storageclasses11phylum_sel_E, 4

	.type	_ZTVN2kc19impl_storageclassesE,@object # @_ZTVN2kc19impl_storageclassesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc19impl_storageclassesE
	.p2align	3, 0x0
_ZTVN2kc19impl_storageclassesE:
	.dword	0
	.dword	_ZTIN2kc19impl_storageclassesE
	.dword	_ZNK2kc19impl_storageclasses8prod_selEv
	.dword	_ZNK2kc19impl_storageclasses9subphylumEi
	.dword	_ZN2kc19impl_storageclasses13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_storageclasses7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_storageclassesD0Ev
	.dword	_ZN2kc19impl_storageclasses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc19impl_storageclasses6is_nilEv
	.dword	_ZNK2kc19impl_storageclasses7reverseEv
	.size	_ZTVN2kc19impl_storageclassesE, 120

	.type	_ZN2kc20impl_productionblock11phylum_sel_E,@object # @_ZN2kc20impl_productionblock11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc20impl_productionblock11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc20impl_productionblock11phylum_sel_E:
	.word	16                              # 0x10
	.size	_ZN2kc20impl_productionblock11phylum_sel_E, 4

	.type	_ZTVN2kc43impl_productionblock_PredefinedAlternativesE,@object # @_ZTVN2kc43impl_productionblock_PredefinedAlternativesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc43impl_productionblock_PredefinedAlternativesE
	.p2align	3, 0x0
_ZTVN2kc43impl_productionblock_PredefinedAlternativesE:
	.dword	0
	.dword	_ZTIN2kc43impl_productionblock_PredefinedAlternativesE
	.dword	_ZNK2kc43impl_productionblock_PredefinedAlternatives8prod_selEv
	.dword	_ZNK2kc43impl_productionblock_PredefinedAlternatives9subphylumEi
	.dword	_ZN2kc43impl_productionblock_PredefinedAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc43impl_productionblock_PredefinedAlternatives7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc43impl_productionblock_PredefinedAlternativesD0Ev
	.dword	_ZN2kc43impl_productionblock_PredefinedAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc43impl_productionblock_PredefinedAlternativesE, 104

	.type	_ZTVN2kc40impl_productionblock_NonlistAlternativesE,@object # @_ZTVN2kc40impl_productionblock_NonlistAlternativesE
	.globl	_ZTVN2kc40impl_productionblock_NonlistAlternativesE
	.p2align	3, 0x0
_ZTVN2kc40impl_productionblock_NonlistAlternativesE:
	.dword	0
	.dword	_ZTIN2kc40impl_productionblock_NonlistAlternativesE
	.dword	_ZNK2kc40impl_productionblock_NonlistAlternatives8prod_selEv
	.dword	_ZNK2kc40impl_productionblock_NonlistAlternatives9subphylumEi
	.dword	_ZN2kc40impl_productionblock_NonlistAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc40impl_productionblock_NonlistAlternatives7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc40impl_productionblock_NonlistAlternativesD0Ev
	.dword	_ZN2kc40impl_productionblock_NonlistAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc40impl_productionblock_NonlistAlternativesE, 104

	.type	_ZTVN2kc37impl_productionblock_ListAlternativesE,@object # @_ZTVN2kc37impl_productionblock_ListAlternativesE
	.globl	_ZTVN2kc37impl_productionblock_ListAlternativesE
	.p2align	3, 0x0
_ZTVN2kc37impl_productionblock_ListAlternativesE:
	.dword	0
	.dword	_ZTIN2kc37impl_productionblock_ListAlternativesE
	.dword	_ZNK2kc37impl_productionblock_ListAlternatives8prod_selEv
	.dword	_ZNK2kc37impl_productionblock_ListAlternatives9subphylumEi
	.dword	_ZN2kc37impl_productionblock_ListAlternatives13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc37impl_productionblock_ListAlternatives7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc37impl_productionblock_ListAlternativesD0Ev
	.dword	_ZN2kc37impl_productionblock_ListAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc37impl_productionblock_ListAlternativesE, 104

	.type	_ZN2kc17impl_alternatives11phylum_sel_E,@object # @_ZN2kc17impl_alternatives11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc17impl_alternatives11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc17impl_alternatives11phylum_sel_E:
	.word	17                              # 0x11
	.size	_ZN2kc17impl_alternatives11phylum_sel_E, 4

	.type	_ZTVN2kc17impl_alternativesE,@object # @_ZTVN2kc17impl_alternativesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc17impl_alternativesE
	.p2align	3, 0x0
_ZTVN2kc17impl_alternativesE:
	.dword	0
	.dword	_ZTIN2kc17impl_alternativesE
	.dword	_ZNK2kc17impl_alternatives8prod_selEv
	.dword	_ZNK2kc17impl_alternatives9subphylumEi
	.dword	_ZN2kc17impl_alternatives13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc17impl_alternatives7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc17impl_alternativesD0Ev
	.dword	_ZN2kc17impl_alternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc17impl_alternatives6is_nilEv
	.dword	_ZNK2kc17impl_alternatives7reverseEv
	.size	_ZTVN2kc17impl_alternativesE, 120

	.type	_ZN2kc16impl_alternative11phylum_sel_E,@object # @_ZN2kc16impl_alternative11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc16impl_alternative11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc16impl_alternative11phylum_sel_E:
	.word	18                              # 0x12
	.size	_ZN2kc16impl_alternative11phylum_sel_E, 4

	.type	_ZTVN2kc28impl_alternative_AlternativeE,@object # @_ZTVN2kc28impl_alternative_AlternativeE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc28impl_alternative_AlternativeE
	.p2align	3, 0x0
_ZTVN2kc28impl_alternative_AlternativeE:
	.dword	0
	.dword	_ZTIN2kc28impl_alternative_AlternativeE
	.dword	_ZNK2kc28impl_alternative_Alternative8prod_selEv
	.dword	_ZNK2kc28impl_alternative_Alternative9subphylumEi
	.dword	_ZN2kc28impl_alternative_Alternative13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc28impl_alternative_Alternative7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc28impl_alternative_AlternativeD0Ev
	.dword	_ZN2kc28impl_alternative_Alternative10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc28impl_alternative_AlternativeE, 104

	.type	_ZN2kc14impl_arguments11phylum_sel_E,@object # @_ZN2kc14impl_arguments11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc14impl_arguments11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc14impl_arguments11phylum_sel_E:
	.word	19                              # 0x13
	.size	_ZN2kc14impl_arguments11phylum_sel_E, 4

	.type	_ZTVN2kc14impl_argumentsE,@object # @_ZTVN2kc14impl_argumentsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc14impl_argumentsE
	.p2align	3, 0x0
_ZTVN2kc14impl_argumentsE:
	.dword	0
	.dword	_ZTIN2kc14impl_argumentsE
	.dword	_ZNK2kc14impl_arguments8prod_selEv
	.dword	_ZNK2kc14impl_arguments9subphylumEi
	.dword	_ZN2kc14impl_arguments13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc14impl_arguments7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc14impl_argumentsD0Ev
	.dword	_ZN2kc14impl_arguments10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc14impl_arguments6is_nilEv
	.dword	_ZNK2kc14impl_arguments7reverseEv
	.size	_ZTVN2kc14impl_argumentsE, 120

	.type	_ZN2kc13impl_argument11phylum_sel_E,@object # @_ZN2kc13impl_argument11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc13impl_argument11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc13impl_argument11phylum_sel_E:
	.word	20                              # 0x14
	.size	_ZN2kc13impl_argument11phylum_sel_E, 4

	.type	_ZTVN2kc22impl_argument_ArgumentE,@object # @_ZTVN2kc22impl_argument_ArgumentE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc22impl_argument_ArgumentE
	.p2align	3, 0x0
_ZTVN2kc22impl_argument_ArgumentE:
	.dword	0
	.dword	_ZTIN2kc22impl_argument_ArgumentE
	.dword	_ZNK2kc22impl_argument_Argument8prod_selEv
	.dword	_ZNK2kc22impl_argument_Argument9subphylumEi
	.dword	_ZN2kc22impl_argument_Argument13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc22impl_argument_Argument7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc22impl_argument_ArgumentD0Ev
	.dword	_ZN2kc22impl_argument_Argument10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc22impl_argument_ArgumentE, 104

	.type	_ZN2kc17impl_Ccode_option11phylum_sel_E,@object # @_ZN2kc17impl_Ccode_option11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc17impl_Ccode_option11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc17impl_Ccode_option11phylum_sel_E:
	.word	21                              # 0x15
	.size	_ZN2kc17impl_Ccode_option11phylum_sel_E, 4

	.type	_ZTVN2kc29impl_Ccode_option_CcodeOptionE,@object # @_ZTVN2kc29impl_Ccode_option_CcodeOptionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc29impl_Ccode_option_CcodeOptionE
	.p2align	3, 0x0
_ZTVN2kc29impl_Ccode_option_CcodeOptionE:
	.dword	0
	.dword	_ZTIN2kc29impl_Ccode_option_CcodeOptionE
	.dword	_ZNK2kc29impl_Ccode_option_CcodeOption8prod_selEv
	.dword	_ZNK2kc29impl_Ccode_option_CcodeOption9subphylumEi
	.dword	_ZN2kc29impl_Ccode_option_CcodeOption13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc29impl_Ccode_option_CcodeOption7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc29impl_Ccode_option_CcodeOptionD0Ev
	.dword	_ZN2kc29impl_Ccode_option_CcodeOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc29impl_Ccode_option_CcodeOptionE, 104

	.type	_ZN2kc15impl_attributes11phylum_sel_E,@object # @_ZN2kc15impl_attributes11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc15impl_attributes11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc15impl_attributes11phylum_sel_E:
	.word	22                              # 0x16
	.size	_ZN2kc15impl_attributes11phylum_sel_E, 4

	.type	_ZTVN2kc15impl_attributesE,@object # @_ZTVN2kc15impl_attributesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc15impl_attributesE
	.p2align	3, 0x0
_ZTVN2kc15impl_attributesE:
	.dword	0
	.dword	_ZTIN2kc15impl_attributesE
	.dword	_ZNK2kc15impl_attributes8prod_selEv
	.dword	_ZNK2kc15impl_attributes9subphylumEi
	.dword	_ZN2kc15impl_attributes13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc15impl_attributes7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc15impl_attributesD0Ev
	.dword	_ZN2kc15impl_attributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc15impl_attributes6is_nilEv
	.dword	_ZNK2kc15impl_attributes7reverseEv
	.size	_ZTVN2kc15impl_attributesE, 120

	.type	_ZN2kc14impl_attribute11phylum_sel_E,@object # @_ZN2kc14impl_attribute11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc14impl_attribute11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc14impl_attribute11phylum_sel_E:
	.word	23                              # 0x17
	.size	_ZN2kc14impl_attribute11phylum_sel_E, 4

	.type	_ZTVN2kc24impl_attribute_AttributeE,@object # @_ZTVN2kc24impl_attribute_AttributeE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc24impl_attribute_AttributeE
	.p2align	3, 0x0
_ZTVN2kc24impl_attribute_AttributeE:
	.dword	0
	.dword	_ZTIN2kc24impl_attribute_AttributeE
	.dword	_ZNK2kc24impl_attribute_Attribute8prod_selEv
	.dword	_ZNK2kc24impl_attribute_Attribute9subphylumEi
	.dword	_ZN2kc24impl_attribute_Attribute13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_attribute_Attribute7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_attribute_AttributeD0Ev
	.dword	_ZN2kc24impl_attribute_Attribute10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc24impl_attribute_AttributeE, 104

	.type	_ZN2kc36impl_attribute_initialisation_option11phylum_sel_E,@object # @_ZN2kc36impl_attribute_initialisation_option11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc36impl_attribute_initialisation_option11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc36impl_attribute_initialisation_option11phylum_sel_E:
	.word	24                              # 0x18
	.size	_ZN2kc36impl_attribute_initialisation_option11phylum_sel_E, 4

	.type	_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE,@object # @_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
	.p2align	3, 0x0
_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE:
	.dword	0
	.dword	_ZTIN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
	.dword	_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation8prod_selEv
	.dword	_ZNK2kc64impl_attribute_initialisation_option_Yesattribute_initialisation9subphylumEi
	.dword	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationD0Ev
	.dword	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE, 104

	.type	_ZN2kc16impl_Cexpression11phylum_sel_E,@object # @_ZN2kc16impl_Cexpression11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc16impl_Cexpression11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc16impl_Cexpression11phylum_sel_E:
	.word	25                              # 0x19
	.size	_ZN2kc16impl_Cexpression11phylum_sel_E, 4

	.type	_ZTVN2kc16impl_CexpressionE,@object # @_ZTVN2kc16impl_CexpressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc16impl_CexpressionE
	.p2align	3, 0x0
_ZTVN2kc16impl_CexpressionE:
	.dword	0
	.dword	_ZTIN2kc16impl_CexpressionE
	.dword	_ZNK2kc16impl_Cexpression8prod_selEv
	.dword	_ZNK2kc16impl_Cexpression9subphylumEi
	.dword	_ZN2kc16impl_Cexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc16impl_Cexpression7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc16impl_CexpressionD0Ev
	.dword	_ZN2kc16impl_Cexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc16impl_Cexpression6is_nilEv
	.dword	_ZNK2kc16impl_Cexpression7reverseEv
	.size	_ZTVN2kc16impl_CexpressionE, 120

	.type	_ZN2kc21impl_Cexpression_elem11phylum_sel_E,@object # @_ZN2kc21impl_Cexpression_elem11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc21impl_Cexpression_elem11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc21impl_Cexpression_elem11phylum_sel_E:
	.word	26                              # 0x1a
	.size	_ZN2kc21impl_Cexpression_elem11phylum_sel_E, 4

	.type	_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE,@object # @_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE
	.p2align	3, 0x0
_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE:
	.dword	0
	.dword	_ZTIN2kc38impl_Cexpression_elem_CExpressionArrayE
	.dword	_ZNK2kc38impl_Cexpression_elem_CExpressionArray8prod_selEv
	.dword	_ZNK2kc38impl_Cexpression_elem_CExpressionArray9subphylumEi
	.dword	_ZN2kc38impl_Cexpression_elem_CExpressionArray13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc38impl_Cexpression_elem_CExpressionArray7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc38impl_Cexpression_elem_CExpressionArrayD0Ev
	.dword	_ZN2kc38impl_Cexpression_elem_CExpressionArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc38impl_Cexpression_elem_CExpressionArrayE, 104

	.type	_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE,@object # @_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE
	.globl	_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE
	.p2align	3, 0x0
_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE:
	.dword	0
	.dword	_ZTIN2kc37impl_Cexpression_elem_CExpressionPackE
	.dword	_ZNK2kc37impl_Cexpression_elem_CExpressionPack8prod_selEv
	.dword	_ZNK2kc37impl_Cexpression_elem_CExpressionPack9subphylumEi
	.dword	_ZN2kc37impl_Cexpression_elem_CExpressionPack13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc37impl_Cexpression_elem_CExpressionPack7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc37impl_Cexpression_elem_CExpressionPackD0Ev
	.dword	_ZN2kc37impl_Cexpression_elem_CExpressionPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc37impl_Cexpression_elem_CExpressionPackE, 104

	.type	_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE,@object # @_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE
	.globl	_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE
	.p2align	3, 0x0
_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE:
	.dword	0
	.dword	_ZTIN2kc35impl_Cexpression_elem_CExpressionSQE
	.dword	_ZNK2kc35impl_Cexpression_elem_CExpressionSQ8prod_selEv
	.dword	_ZNK2kc35impl_Cexpression_elem_CExpressionSQ9subphylumEi
	.dword	_ZN2kc35impl_Cexpression_elem_CExpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc35impl_Cexpression_elem_CExpressionSQ7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc35impl_Cexpression_elem_CExpressionSQD0Ev
	.dword	_ZN2kc35impl_Cexpression_elem_CExpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc35impl_Cexpression_elem_CExpressionSQE, 104

	.type	_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE,@object # @_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE
	.globl	_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE
	.p2align	3, 0x0
_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE:
	.dword	0
	.dword	_ZTIN2kc35impl_Cexpression_elem_CExpressionDQE
	.dword	_ZNK2kc35impl_Cexpression_elem_CExpressionDQ8prod_selEv
	.dword	_ZNK2kc35impl_Cexpression_elem_CExpressionDQ9subphylumEi
	.dword	_ZN2kc35impl_Cexpression_elem_CExpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc35impl_Cexpression_elem_CExpressionDQ7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc35impl_Cexpression_elem_CExpressionDQD0Ev
	.dword	_ZN2kc35impl_Cexpression_elem_CExpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc35impl_Cexpression_elem_CExpressionDQE, 104

	.type	_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE,@object # @_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE
	.globl	_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE
	.p2align	3, 0x0
_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE:
	.dword	0
	.dword	_ZTIN2kc42impl_Cexpression_elem_CExpressionDollarvarE
	.dword	_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar8prod_selEv
	.dword	_ZNK2kc42impl_Cexpression_elem_CExpressionDollarvar9subphylumEi
	.dword	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarD0Ev
	.dword	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc42impl_Cexpression_elem_CExpressionDollarvarE, 104

	.type	_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE,@object # @_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE
	.globl	_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE
	.p2align	3, 0x0
_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE:
	.dword	0
	.dword	_ZTIN2kc37impl_Cexpression_elem_CExpressionPartE
	.dword	_ZNK2kc37impl_Cexpression_elem_CExpressionPart8prod_selEv
	.dword	_ZNK2kc37impl_Cexpression_elem_CExpressionPart9subphylumEi
	.dword	_ZN2kc37impl_Cexpression_elem_CExpressionPart13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc37impl_Cexpression_elem_CExpressionPart7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc37impl_Cexpression_elem_CExpressionPartD0Ev
	.dword	_ZN2kc37impl_Cexpression_elem_CExpressionPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc37impl_Cexpression_elem_CExpressionPartE, 104

	.type	_ZN2kc18impl_CexpressionDQ11phylum_sel_E,@object # @_ZN2kc18impl_CexpressionDQ11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_CexpressionDQ11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_CexpressionDQ11phylum_sel_E:
	.word	27                              # 0x1b
	.size	_ZN2kc18impl_CexpressionDQ11phylum_sel_E, 4

	.type	_ZTVN2kc18impl_CexpressionDQE,@object # @_ZTVN2kc18impl_CexpressionDQE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc18impl_CexpressionDQE
	.p2align	3, 0x0
_ZTVN2kc18impl_CexpressionDQE:
	.dword	0
	.dword	_ZTIN2kc18impl_CexpressionDQE
	.dword	_ZNK2kc18impl_CexpressionDQ8prod_selEv
	.dword	_ZNK2kc18impl_CexpressionDQ9subphylumEi
	.dword	_ZN2kc18impl_CexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc18impl_CexpressionDQ7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc18impl_CexpressionDQD0Ev
	.dword	_ZN2kc18impl_CexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc18impl_CexpressionDQ6is_nilEv
	.dword	_ZNK2kc18impl_CexpressionDQ7reverseEv
	.size	_ZTVN2kc18impl_CexpressionDQE, 120

	.type	_ZN2kc23impl_CexpressionDQ_elem11phylum_sel_E,@object # @_ZN2kc23impl_CexpressionDQ_elem11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc23impl_CexpressionDQ_elem11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc23impl_CexpressionDQ_elem11phylum_sel_E:
	.word	28                              # 0x1c
	.size	_ZN2kc23impl_CexpressionDQ_elem11phylum_sel_E, 4

	.type	_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE,@object # @_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
	.p2align	3, 0x0
_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE:
	.dword	0
	.dword	_ZTIN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
	.dword	_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart8prod_selEv
	.dword	_ZNK2kc41impl_CexpressionDQ_elem_CExpressionDQPart9subphylumEi
	.dword	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartD0Ev
	.dword	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE, 104

	.type	_ZN2kc18impl_CexpressionSQ11phylum_sel_E,@object # @_ZN2kc18impl_CexpressionSQ11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_CexpressionSQ11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_CexpressionSQ11phylum_sel_E:
	.word	29                              # 0x1d
	.size	_ZN2kc18impl_CexpressionSQ11phylum_sel_E, 4

	.type	_ZTVN2kc18impl_CexpressionSQE,@object # @_ZTVN2kc18impl_CexpressionSQE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc18impl_CexpressionSQE
	.p2align	3, 0x0
_ZTVN2kc18impl_CexpressionSQE:
	.dword	0
	.dword	_ZTIN2kc18impl_CexpressionSQE
	.dword	_ZNK2kc18impl_CexpressionSQ8prod_selEv
	.dword	_ZNK2kc18impl_CexpressionSQ9subphylumEi
	.dword	_ZN2kc18impl_CexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc18impl_CexpressionSQ7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc18impl_CexpressionSQD0Ev
	.dword	_ZN2kc18impl_CexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc18impl_CexpressionSQ6is_nilEv
	.dword	_ZNK2kc18impl_CexpressionSQ7reverseEv
	.size	_ZTVN2kc18impl_CexpressionSQE, 120

	.type	_ZN2kc23impl_CexpressionSQ_elem11phylum_sel_E,@object # @_ZN2kc23impl_CexpressionSQ_elem11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc23impl_CexpressionSQ_elem11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc23impl_CexpressionSQ_elem11phylum_sel_E:
	.word	30                              # 0x1e
	.size	_ZN2kc23impl_CexpressionSQ_elem11phylum_sel_E, 4

	.type	_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE,@object # @_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
	.p2align	3, 0x0
_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE:
	.dword	0
	.dword	_ZTIN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
	.dword	_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart8prod_selEv
	.dword	_ZNK2kc41impl_CexpressionSQ_elem_CExpressionSQPart9subphylumEi
	.dword	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartD0Ev
	.dword	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE, 104

	.type	_ZN2kc19impl_idCexpressions11phylum_sel_E,@object # @_ZN2kc19impl_idCexpressions11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_idCexpressions11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_idCexpressions11phylum_sel_E:
	.word	31                              # 0x1f
	.size	_ZN2kc19impl_idCexpressions11phylum_sel_E, 4

	.type	_ZTVN2kc19impl_idCexpressionsE,@object # @_ZTVN2kc19impl_idCexpressionsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc19impl_idCexpressionsE
	.p2align	3, 0x0
_ZTVN2kc19impl_idCexpressionsE:
	.dword	0
	.dword	_ZTIN2kc19impl_idCexpressionsE
	.dword	_ZNK2kc19impl_idCexpressions8prod_selEv
	.dword	_ZNK2kc19impl_idCexpressions9subphylumEi
	.dword	_ZN2kc19impl_idCexpressions13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_idCexpressions7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_idCexpressionsD0Ev
	.dword	_ZN2kc19impl_idCexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc19impl_idCexpressions6is_nilEv
	.dword	_ZNK2kc19impl_idCexpressions7reverseEv
	.size	_ZTVN2kc19impl_idCexpressionsE, 120

	.type	_ZN2kc18impl_idCexpression11phylum_sel_E,@object # @_ZN2kc18impl_idCexpression11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_idCexpression11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_idCexpression11phylum_sel_E:
	.word	32                              # 0x20
	.size	_ZN2kc18impl_idCexpression11phylum_sel_E, 4

	.type	_ZTVN2kc32impl_idCexpression_IdCexpressionE,@object # @_ZTVN2kc32impl_idCexpression_IdCexpressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc32impl_idCexpression_IdCexpressionE
	.p2align	3, 0x0
_ZTVN2kc32impl_idCexpression_IdCexpressionE:
	.dword	0
	.dword	_ZTIN2kc32impl_idCexpression_IdCexpressionE
	.dword	_ZNK2kc32impl_idCexpression_IdCexpression8prod_selEv
	.dword	_ZNK2kc32impl_idCexpression_IdCexpression9subphylumEi
	.dword	_ZN2kc32impl_idCexpression_IdCexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_idCexpression_IdCexpression7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_idCexpression_IdCexpressionD0Ev
	.dword	_ZN2kc32impl_idCexpression_IdCexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc32impl_idCexpression_IdCexpressionE, 104

	.type	_ZN2kc11impl_Ctexts11phylum_sel_E,@object # @_ZN2kc11impl_Ctexts11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc11impl_Ctexts11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc11impl_Ctexts11phylum_sel_E:
	.word	33                              # 0x21
	.size	_ZN2kc11impl_Ctexts11phylum_sel_E, 4

	.type	_ZTVN2kc11impl_CtextsE,@object  # @_ZTVN2kc11impl_CtextsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc11impl_CtextsE
	.p2align	3, 0x0
_ZTVN2kc11impl_CtextsE:
	.dword	0
	.dword	_ZTIN2kc11impl_CtextsE
	.dword	_ZNK2kc11impl_Ctexts8prod_selEv
	.dword	_ZNK2kc11impl_Ctexts9subphylumEi
	.dword	_ZN2kc11impl_Ctexts13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc11impl_Ctexts7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc11impl_CtextsD0Ev
	.dword	_ZN2kc11impl_Ctexts10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc11impl_Ctexts6is_nilEv
	.dword	_ZNK2kc11impl_Ctexts7reverseEv
	.size	_ZTVN2kc11impl_CtextsE, 120

	.type	_ZN2kc17impl_includefiles11phylum_sel_E,@object # @_ZN2kc17impl_includefiles11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc17impl_includefiles11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc17impl_includefiles11phylum_sel_E:
	.word	34                              # 0x22
	.size	_ZN2kc17impl_includefiles11phylum_sel_E, 4

	.type	_ZTVN2kc17impl_includefilesE,@object # @_ZTVN2kc17impl_includefilesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc17impl_includefilesE
	.p2align	3, 0x0
_ZTVN2kc17impl_includefilesE:
	.dword	0
	.dword	_ZTIN2kc17impl_includefilesE
	.dword	_ZNK2kc17impl_includefiles8prod_selEv
	.dword	_ZNK2kc17impl_includefiles9subphylumEi
	.dword	_ZN2kc17impl_includefiles13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc17impl_includefiles7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc17impl_includefilesD0Ev
	.dword	_ZN2kc17impl_includefiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc17impl_includefiles6is_nilEv
	.dword	_ZNK2kc17impl_includefiles7reverseEv
	.size	_ZTVN2kc17impl_includefilesE, 120

	.type	_ZN2kc16impl_includefile11phylum_sel_E,@object # @_ZN2kc16impl_includefile11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc16impl_includefile11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc16impl_includefile11phylum_sel_E:
	.word	35                              # 0x23
	.size	_ZN2kc16impl_includefile11phylum_sel_E, 4

	.type	_ZTVN2kc28impl_includefile_IncludeFileE,@object # @_ZTVN2kc28impl_includefile_IncludeFileE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc28impl_includefile_IncludeFileE
	.p2align	3, 0x0
_ZTVN2kc28impl_includefile_IncludeFileE:
	.dword	0
	.dword	_ZTIN2kc28impl_includefile_IncludeFileE
	.dword	_ZNK2kc28impl_includefile_IncludeFile8prod_selEv
	.dword	_ZNK2kc28impl_includefile_IncludeFile9subphylumEi
	.dword	_ZN2kc28impl_includefile_IncludeFile13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc28impl_includefile_IncludeFile7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc28impl_includefile_IncludeFileD0Ev
	.dword	_ZN2kc28impl_includefile_IncludeFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc28impl_includefile_IncludeFileE, 104

	.type	_ZN2kc24impl_includedeclarations11phylum_sel_E,@object # @_ZN2kc24impl_includedeclarations11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc24impl_includedeclarations11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc24impl_includedeclarations11phylum_sel_E:
	.word	36                              # 0x24
	.size	_ZN2kc24impl_includedeclarations11phylum_sel_E, 4

	.type	_ZTVN2kc24impl_includedeclarationsE,@object # @_ZTVN2kc24impl_includedeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc24impl_includedeclarationsE
	.p2align	3, 0x0
_ZTVN2kc24impl_includedeclarationsE:
	.dword	0
	.dword	_ZTIN2kc24impl_includedeclarationsE
	.dword	_ZNK2kc24impl_includedeclarations8prod_selEv
	.dword	_ZNK2kc24impl_includedeclarations9subphylumEi
	.dword	_ZN2kc24impl_includedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_includedeclarations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_includedeclarationsD0Ev
	.dword	_ZN2kc24impl_includedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc24impl_includedeclarations6is_nilEv
	.dword	_ZNK2kc24impl_includedeclarations7reverseEv
	.size	_ZTVN2kc24impl_includedeclarationsE, 120

	.type	_ZN2kc23impl_includedeclaration11phylum_sel_E,@object # @_ZN2kc23impl_includedeclaration11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc23impl_includedeclaration11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc23impl_includedeclaration11phylum_sel_E:
	.word	37                              # 0x25
	.size	_ZN2kc23impl_includedeclaration11phylum_sel_E, 4

	.type	_ZTVN2kc42impl_includedeclaration_IncludeDeclarationE,@object # @_ZTVN2kc42impl_includedeclaration_IncludeDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc42impl_includedeclaration_IncludeDeclarationE
	.p2align	3, 0x0
_ZTVN2kc42impl_includedeclaration_IncludeDeclarationE:
	.dword	0
	.dword	_ZTIN2kc42impl_includedeclaration_IncludeDeclarationE
	.dword	_ZNK2kc42impl_includedeclaration_IncludeDeclaration8prod_selEv
	.dword	_ZNK2kc42impl_includedeclaration_IncludeDeclaration9subphylumEi
	.dword	_ZN2kc42impl_includedeclaration_IncludeDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc42impl_includedeclaration_IncludeDeclaration7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc42impl_includedeclaration_IncludeDeclarationD0Ev
	.dword	_ZN2kc42impl_includedeclaration_IncludeDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc42impl_includedeclaration_IncludeDeclarationE, 104

	.type	_ZN2kc19impl_rwdeclarations11phylum_sel_E,@object # @_ZN2kc19impl_rwdeclarations11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_rwdeclarations11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_rwdeclarations11phylum_sel_E:
	.word	38                              # 0x26
	.size	_ZN2kc19impl_rwdeclarations11phylum_sel_E, 4

	.type	_ZTVN2kc19impl_rwdeclarationsE,@object # @_ZTVN2kc19impl_rwdeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc19impl_rwdeclarationsE
	.p2align	3, 0x0
_ZTVN2kc19impl_rwdeclarationsE:
	.dword	0
	.dword	_ZTIN2kc19impl_rwdeclarationsE
	.dword	_ZNK2kc19impl_rwdeclarations8prod_selEv
	.dword	_ZNK2kc19impl_rwdeclarations9subphylumEi
	.dword	_ZN2kc19impl_rwdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_rwdeclarations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_rwdeclarationsD0Ev
	.dword	_ZN2kc19impl_rwdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc19impl_rwdeclarations6is_nilEv
	.dword	_ZNK2kc19impl_rwdeclarations7reverseEv
	.size	_ZTVN2kc19impl_rwdeclarationsE, 120

	.type	_ZN2kc18impl_rwdeclaration11phylum_sel_E,@object # @_ZN2kc18impl_rwdeclaration11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_rwdeclaration11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_rwdeclaration11phylum_sel_E:
	.word	39                              # 0x27
	.size	_ZN2kc18impl_rwdeclaration11phylum_sel_E, 4

	.type	_ZTVN2kc32impl_rwdeclaration_RwDeclarationE,@object # @_ZTVN2kc32impl_rwdeclaration_RwDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc32impl_rwdeclaration_RwDeclarationE
	.p2align	3, 0x0
_ZTVN2kc32impl_rwdeclaration_RwDeclarationE:
	.dword	0
	.dword	_ZTIN2kc32impl_rwdeclaration_RwDeclarationE
	.dword	_ZNK2kc32impl_rwdeclaration_RwDeclaration8prod_selEv
	.dword	_ZNK2kc32impl_rwdeclaration_RwDeclaration9subphylumEi
	.dword	_ZN2kc32impl_rwdeclaration_RwDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_rwdeclaration_RwDeclaration7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_rwdeclaration_RwDeclarationD0Ev
	.dword	_ZN2kc32impl_rwdeclaration_RwDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc32impl_rwdeclaration_RwDeclarationE, 104

	.type	_ZN2kc19impl_rewriteclauses11phylum_sel_E,@object # @_ZN2kc19impl_rewriteclauses11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_rewriteclauses11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_rewriteclauses11phylum_sel_E:
	.word	40                              # 0x28
	.size	_ZN2kc19impl_rewriteclauses11phylum_sel_E, 4

	.type	_ZTVN2kc19impl_rewriteclausesE,@object # @_ZTVN2kc19impl_rewriteclausesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc19impl_rewriteclausesE
	.p2align	3, 0x0
_ZTVN2kc19impl_rewriteclausesE:
	.dword	0
	.dword	_ZTIN2kc19impl_rewriteclausesE
	.dword	_ZNK2kc19impl_rewriteclauses8prod_selEv
	.dword	_ZNK2kc19impl_rewriteclauses9subphylumEi
	.dword	_ZN2kc19impl_rewriteclauses13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_rewriteclauses7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_rewriteclausesD0Ev
	.dword	_ZN2kc19impl_rewriteclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc19impl_rewriteclauses6is_nilEv
	.dword	_ZNK2kc19impl_rewriteclauses7reverseEv
	.size	_ZTVN2kc19impl_rewriteclausesE, 120

	.type	_ZN2kc18impl_rewriteclause11phylum_sel_E,@object # @_ZN2kc18impl_rewriteclause11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_rewriteclause11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_rewriteclause11phylum_sel_E:
	.word	41                              # 0x29
	.size	_ZN2kc18impl_rewriteclause11phylum_sel_E, 4

	.type	_ZTVN2kc32impl_rewriteclause_RewriteClauseE,@object # @_ZTVN2kc32impl_rewriteclause_RewriteClauseE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc32impl_rewriteclause_RewriteClauseE
	.p2align	3, 0x0
_ZTVN2kc32impl_rewriteclause_RewriteClauseE:
	.dword	0
	.dword	_ZTIN2kc32impl_rewriteclause_RewriteClauseE
	.dword	_ZNK2kc32impl_rewriteclause_RewriteClause8prod_selEv
	.dword	_ZNK2kc32impl_rewriteclause_RewriteClause9subphylumEi
	.dword	_ZN2kc32impl_rewriteclause_RewriteClause13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_rewriteclause_RewriteClause7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_rewriteclause_RewriteClauseD0Ev
	.dword	_ZN2kc32impl_rewriteclause_RewriteClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc32impl_rewriteclause_RewriteClauseE, 104

	.type	_ZN2kc18impl_patternchains11phylum_sel_E,@object # @_ZN2kc18impl_patternchains11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_patternchains11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_patternchains11phylum_sel_E:
	.word	42                              # 0x2a
	.size	_ZN2kc18impl_patternchains11phylum_sel_E, 4

	.type	_ZTVN2kc18impl_patternchainsE,@object # @_ZTVN2kc18impl_patternchainsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc18impl_patternchainsE
	.p2align	3, 0x0
_ZTVN2kc18impl_patternchainsE:
	.dword	0
	.dword	_ZTIN2kc18impl_patternchainsE
	.dword	_ZNK2kc18impl_patternchains8prod_selEv
	.dword	_ZNK2kc18impl_patternchains9subphylumEi
	.dword	_ZN2kc18impl_patternchains13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc18impl_patternchains7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc18impl_patternchainsD0Ev
	.dword	_ZN2kc18impl_patternchains10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc18impl_patternchains6is_nilEv
	.dword	_ZNK2kc18impl_patternchains7reverseEv
	.size	_ZTVN2kc18impl_patternchainsE, 120

	.type	_ZN2kc17impl_patternchain11phylum_sel_E,@object # @_ZN2kc17impl_patternchain11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc17impl_patternchain11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc17impl_patternchain11phylum_sel_E:
	.word	43                              # 0x2b
	.size	_ZN2kc17impl_patternchain11phylum_sel_E, 4

	.type	_ZTVN2kc17impl_patternchainE,@object # @_ZTVN2kc17impl_patternchainE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc17impl_patternchainE
	.p2align	3, 0x0
_ZTVN2kc17impl_patternchainE:
	.dword	0
	.dword	_ZTIN2kc17impl_patternchainE
	.dword	_ZNK2kc17impl_patternchain8prod_selEv
	.dword	_ZNK2kc17impl_patternchain9subphylumEi
	.dword	_ZN2kc17impl_patternchain13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc17impl_patternchain7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc17impl_patternchainD0Ev
	.dword	_ZN2kc17impl_patternchain10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc17impl_patternchain6is_nilEv
	.dword	_ZNK2kc17impl_patternchain7reverseEv
	.size	_ZTVN2kc17impl_patternchainE, 120

	.type	_ZN2kc20impl_outmostpatterns11phylum_sel_E,@object # @_ZN2kc20impl_outmostpatterns11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc20impl_outmostpatterns11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc20impl_outmostpatterns11phylum_sel_E:
	.word	44                              # 0x2c
	.size	_ZN2kc20impl_outmostpatterns11phylum_sel_E, 4

	.type	_ZTVN2kc20impl_outmostpatternsE,@object # @_ZTVN2kc20impl_outmostpatternsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc20impl_outmostpatternsE
	.p2align	3, 0x0
_ZTVN2kc20impl_outmostpatternsE:
	.dword	0
	.dword	_ZTIN2kc20impl_outmostpatternsE
	.dword	_ZNK2kc20impl_outmostpatterns8prod_selEv
	.dword	_ZNK2kc20impl_outmostpatterns9subphylumEi
	.dword	_ZN2kc20impl_outmostpatterns13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc20impl_outmostpatterns7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc20impl_outmostpatternsD0Ev
	.dword	_ZN2kc20impl_outmostpatterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc20impl_outmostpatterns6is_nilEv
	.dword	_ZNK2kc20impl_outmostpatterns7reverseEv
	.size	_ZTVN2kc20impl_outmostpatternsE, 120

	.type	_ZN2kc21impl_patternchainitem11phylum_sel_E,@object # @_ZN2kc21impl_patternchainitem11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc21impl_patternchainitem11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc21impl_patternchainitem11phylum_sel_E:
	.word	45                              # 0x2d
	.size	_ZN2kc21impl_patternchainitem11phylum_sel_E, 4

	.type	_ZTVN2kc46impl_patternchainitem_PatternchainitemDollaridE,@object # @_ZTVN2kc46impl_patternchainitem_PatternchainitemDollaridE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc46impl_patternchainitem_PatternchainitemDollaridE
	.p2align	3, 0x0
_ZTVN2kc46impl_patternchainitem_PatternchainitemDollaridE:
	.dword	0
	.dword	_ZTIN2kc46impl_patternchainitem_PatternchainitemDollaridE
	.dword	_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid8prod_selEv
	.dword	_ZNK2kc46impl_patternchainitem_PatternchainitemDollarid9subphylumEi
	.dword	_ZN2kc46impl_patternchainitem_PatternchainitemDollarid13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc46impl_patternchainitem_PatternchainitemDollarid7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc46impl_patternchainitem_PatternchainitemDollaridD0Ev
	.dword	_ZN2kc46impl_patternchainitem_PatternchainitemDollarid10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc46impl_patternchainitem_PatternchainitemDollaridE, 104

	.type	_ZTVN2kc43impl_patternchainitem_PatternchainitemGroupE,@object # @_ZTVN2kc43impl_patternchainitem_PatternchainitemGroupE
	.globl	_ZTVN2kc43impl_patternchainitem_PatternchainitemGroupE
	.p2align	3, 0x0
_ZTVN2kc43impl_patternchainitem_PatternchainitemGroupE:
	.dword	0
	.dword	_ZTIN2kc43impl_patternchainitem_PatternchainitemGroupE
	.dword	_ZNK2kc43impl_patternchainitem_PatternchainitemGroup8prod_selEv
	.dword	_ZNK2kc43impl_patternchainitem_PatternchainitemGroup9subphylumEi
	.dword	_ZN2kc43impl_patternchainitem_PatternchainitemGroup13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc43impl_patternchainitem_PatternchainitemGroup7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc43impl_patternchainitem_PatternchainitemGroupD0Ev
	.dword	_ZN2kc43impl_patternchainitem_PatternchainitemGroup10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc43impl_patternchainitem_PatternchainitemGroupE, 104

	.type	_ZTVN2kc45impl_patternchainitem_PatternchainitemOutmostE,@object # @_ZTVN2kc45impl_patternchainitem_PatternchainitemOutmostE
	.globl	_ZTVN2kc45impl_patternchainitem_PatternchainitemOutmostE
	.p2align	3, 0x0
_ZTVN2kc45impl_patternchainitem_PatternchainitemOutmostE:
	.dword	0
	.dword	_ZTIN2kc45impl_patternchainitem_PatternchainitemOutmostE
	.dword	_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost8prod_selEv
	.dword	_ZNK2kc45impl_patternchainitem_PatternchainitemOutmost9subphylumEi
	.dword	_ZN2kc45impl_patternchainitem_PatternchainitemOutmost13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc45impl_patternchainitem_PatternchainitemOutmost7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc45impl_patternchainitem_PatternchainitemOutmostD0Ev
	.dword	_ZN2kc45impl_patternchainitem_PatternchainitemOutmost10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc45impl_patternchainitem_PatternchainitemOutmostE, 104

	.type	_ZN2kc19impl_outmostpattern11phylum_sel_E,@object # @_ZN2kc19impl_outmostpattern11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_outmostpattern11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_outmostpattern11phylum_sel_E:
	.word	46                              # 0x2e
	.size	_ZN2kc19impl_outmostpattern11phylum_sel_E, 4

	.type	_ZTVN2kc29impl_outmostpattern_OPDefaultE,@object # @_ZTVN2kc29impl_outmostpattern_OPDefaultE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc29impl_outmostpattern_OPDefaultE
	.p2align	3, 0x0
_ZTVN2kc29impl_outmostpattern_OPDefaultE:
	.dword	0
	.dword	_ZTIN2kc29impl_outmostpattern_OPDefaultE
	.dword	_ZNK2kc29impl_outmostpattern_OPDefault8prod_selEv
	.dword	_ZNK2kc29impl_outmostpattern_OPDefault9subphylumEi
	.dword	_ZN2kc29impl_outmostpattern_OPDefault13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc29impl_outmostpattern_OPDefault7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc29impl_outmostpattern_OPDefaultD0Ev
	.dword	_ZN2kc29impl_outmostpattern_OPDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc29impl_outmostpattern_OPDefaultE, 104

	.type	_ZTVN2kc30impl_outmostpattern_OPWildcardE,@object # @_ZTVN2kc30impl_outmostpattern_OPWildcardE
	.globl	_ZTVN2kc30impl_outmostpattern_OPWildcardE
	.p2align	3, 0x0
_ZTVN2kc30impl_outmostpattern_OPWildcardE:
	.dword	0
	.dword	_ZTIN2kc30impl_outmostpattern_OPWildcardE
	.dword	_ZNK2kc30impl_outmostpattern_OPWildcard8prod_selEv
	.dword	_ZNK2kc30impl_outmostpattern_OPWildcard9subphylumEi
	.dword	_ZN2kc30impl_outmostpattern_OPWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc30impl_outmostpattern_OPWildcard7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc30impl_outmostpattern_OPWildcardD0Ev
	.dword	_ZN2kc30impl_outmostpattern_OPWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc30impl_outmostpattern_OPWildcardE, 104

	.type	_ZTVN2kc37impl_outmostpattern_OPNonLeafVariableE,@object # @_ZTVN2kc37impl_outmostpattern_OPNonLeafVariableE
	.globl	_ZTVN2kc37impl_outmostpattern_OPNonLeafVariableE
	.p2align	3, 0x0
_ZTVN2kc37impl_outmostpattern_OPNonLeafVariableE:
	.dword	0
	.dword	_ZTIN2kc37impl_outmostpattern_OPNonLeafVariableE
	.dword	_ZNK2kc37impl_outmostpattern_OPNonLeafVariable8prod_selEv
	.dword	_ZNK2kc37impl_outmostpattern_OPNonLeafVariable9subphylumEi
	.dword	_ZN2kc37impl_outmostpattern_OPNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc37impl_outmostpattern_OPNonLeafVariable7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc37impl_outmostpattern_OPNonLeafVariableD0Ev
	.dword	_ZN2kc37impl_outmostpattern_OPNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc37impl_outmostpattern_OPNonLeafVariableE, 104

	.type	_ZTVN2kc30impl_outmostpattern_OPOperatorE,@object # @_ZTVN2kc30impl_outmostpattern_OPOperatorE
	.globl	_ZTVN2kc30impl_outmostpattern_OPOperatorE
	.p2align	3, 0x0
_ZTVN2kc30impl_outmostpattern_OPOperatorE:
	.dword	0
	.dword	_ZTIN2kc30impl_outmostpattern_OPOperatorE
	.dword	_ZNK2kc30impl_outmostpattern_OPOperator8prod_selEv
	.dword	_ZNK2kc30impl_outmostpattern_OPOperator9subphylumEi
	.dword	_ZN2kc30impl_outmostpattern_OPOperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc30impl_outmostpattern_OPOperator7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc30impl_outmostpattern_OPOperatorD0Ev
	.dword	_ZN2kc30impl_outmostpattern_OPOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc30impl_outmostpattern_OPOperatorE, 104

	.type	_ZTVN2kc38impl_outmostpattern_OPOperatorWildcardE,@object # @_ZTVN2kc38impl_outmostpattern_OPOperatorWildcardE
	.globl	_ZTVN2kc38impl_outmostpattern_OPOperatorWildcardE
	.p2align	3, 0x0
_ZTVN2kc38impl_outmostpattern_OPOperatorWildcardE:
	.dword	0
	.dword	_ZTIN2kc38impl_outmostpattern_OPOperatorWildcardE
	.dword	_ZNK2kc38impl_outmostpattern_OPOperatorWildcard8prod_selEv
	.dword	_ZNK2kc38impl_outmostpattern_OPOperatorWildcard9subphylumEi
	.dword	_ZN2kc38impl_outmostpattern_OPOperatorWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc38impl_outmostpattern_OPOperatorWildcard7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc38impl_outmostpattern_OPOperatorWildcardD0Ev
	.dword	_ZN2kc38impl_outmostpattern_OPOperatorWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc38impl_outmostpattern_OPOperatorWildcardE, 104

	.type	_ZN2kc12impl_pattern11phylum_sel_E,@object # @_ZN2kc12impl_pattern11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc12impl_pattern11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc12impl_pattern11phylum_sel_E:
	.word	47                              # 0x2f
	.size	_ZN2kc12impl_pattern11phylum_sel_E, 4

	.type	_ZTVN2kc24impl_pattern_PIntLiteralE,@object # @_ZTVN2kc24impl_pattern_PIntLiteralE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc24impl_pattern_PIntLiteralE
	.p2align	3, 0x0
_ZTVN2kc24impl_pattern_PIntLiteralE:
	.dword	0
	.dword	_ZTIN2kc24impl_pattern_PIntLiteralE
	.dword	_ZNK2kc24impl_pattern_PIntLiteral8prod_selEv
	.dword	_ZNK2kc24impl_pattern_PIntLiteral9subphylumEi
	.dword	_ZN2kc24impl_pattern_PIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_pattern_PIntLiteral7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_pattern_PIntLiteralD0Ev
	.dword	_ZN2kc24impl_pattern_PIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc24impl_pattern_PIntLiteralE, 104

	.type	_ZTVN2kc27impl_pattern_PStringLiteralE,@object # @_ZTVN2kc27impl_pattern_PStringLiteralE
	.globl	_ZTVN2kc27impl_pattern_PStringLiteralE
	.p2align	3, 0x0
_ZTVN2kc27impl_pattern_PStringLiteralE:
	.dword	0
	.dword	_ZTIN2kc27impl_pattern_PStringLiteralE
	.dword	_ZNK2kc27impl_pattern_PStringLiteral8prod_selEv
	.dword	_ZNK2kc27impl_pattern_PStringLiteral9subphylumEi
	.dword	_ZN2kc27impl_pattern_PStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc27impl_pattern_PStringLiteral7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc27impl_pattern_PStringLiteralD0Ev
	.dword	_ZN2kc27impl_pattern_PStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc27impl_pattern_PStringLiteralE, 104

	.type	_ZTVN2kc29impl_pattern_PNonLeafVariableE,@object # @_ZTVN2kc29impl_pattern_PNonLeafVariableE
	.globl	_ZTVN2kc29impl_pattern_PNonLeafVariableE
	.p2align	3, 0x0
_ZTVN2kc29impl_pattern_PNonLeafVariableE:
	.dword	0
	.dword	_ZTIN2kc29impl_pattern_PNonLeafVariableE
	.dword	_ZNK2kc29impl_pattern_PNonLeafVariable8prod_selEv
	.dword	_ZNK2kc29impl_pattern_PNonLeafVariable9subphylumEi
	.dword	_ZN2kc29impl_pattern_PNonLeafVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc29impl_pattern_PNonLeafVariable7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc29impl_pattern_PNonLeafVariableD0Ev
	.dword	_ZN2kc29impl_pattern_PNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc29impl_pattern_PNonLeafVariableE, 104

	.type	_ZTVN2kc22impl_pattern_POperatorE,@object # @_ZTVN2kc22impl_pattern_POperatorE
	.globl	_ZTVN2kc22impl_pattern_POperatorE
	.p2align	3, 0x0
_ZTVN2kc22impl_pattern_POperatorE:
	.dword	0
	.dword	_ZTIN2kc22impl_pattern_POperatorE
	.dword	_ZNK2kc22impl_pattern_POperator8prod_selEv
	.dword	_ZNK2kc22impl_pattern_POperator9subphylumEi
	.dword	_ZN2kc22impl_pattern_POperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc22impl_pattern_POperator7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc22impl_pattern_POperatorD0Ev
	.dword	_ZN2kc22impl_pattern_POperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc22impl_pattern_POperatorE, 104

	.type	_ZTVN2kc22impl_pattern_PVariableE,@object # @_ZTVN2kc22impl_pattern_PVariableE
	.globl	_ZTVN2kc22impl_pattern_PVariableE
	.p2align	3, 0x0
_ZTVN2kc22impl_pattern_PVariableE:
	.dword	0
	.dword	_ZTIN2kc22impl_pattern_PVariableE
	.dword	_ZNK2kc22impl_pattern_PVariable8prod_selEv
	.dword	_ZNK2kc22impl_pattern_PVariable9subphylumEi
	.dword	_ZN2kc22impl_pattern_PVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc22impl_pattern_PVariable7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc22impl_pattern_PVariableD0Ev
	.dword	_ZN2kc22impl_pattern_PVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc22impl_pattern_PVariableE, 104

	.type	_ZN2kc13impl_patterns11phylum_sel_E,@object # @_ZN2kc13impl_patterns11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc13impl_patterns11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc13impl_patterns11phylum_sel_E:
	.word	48                              # 0x30
	.size	_ZN2kc13impl_patterns11phylum_sel_E, 4

	.type	_ZTVN2kc13impl_patternsE,@object # @_ZTVN2kc13impl_patternsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc13impl_patternsE
	.p2align	3, 0x0
_ZTVN2kc13impl_patternsE:
	.dword	0
	.dword	_ZTIN2kc13impl_patternsE
	.dword	_ZNK2kc13impl_patterns8prod_selEv
	.dword	_ZNK2kc13impl_patterns9subphylumEi
	.dword	_ZN2kc13impl_patterns13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc13impl_patterns7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc13impl_patternsD0Ev
	.dword	_ZN2kc13impl_patterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc13impl_patterns6is_nilEv
	.dword	_ZNK2kc13impl_patterns7reverseEv
	.size	_ZTVN2kc13impl_patternsE, 120

	.type	_ZN2kc9impl_term11phylum_sel_E,@object # @_ZN2kc9impl_term11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc9impl_term11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc9impl_term11phylum_sel_E:
	.word	49                              # 0x31
	.size	_ZN2kc9impl_term11phylum_sel_E, 4

	.type	_ZTVN2kc21impl_term_TIntLiteralE,@object # @_ZTVN2kc21impl_term_TIntLiteralE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc21impl_term_TIntLiteralE
	.p2align	3, 0x0
_ZTVN2kc21impl_term_TIntLiteralE:
	.dword	0
	.dword	_ZTIN2kc21impl_term_TIntLiteralE
	.dword	_ZNK2kc21impl_term_TIntLiteral8prod_selEv
	.dword	_ZNK2kc21impl_term_TIntLiteral9subphylumEi
	.dword	_ZN2kc21impl_term_TIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_term_TIntLiteral7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_term_TIntLiteralD0Ev
	.dword	_ZN2kc21impl_term_TIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc21impl_term_TIntLiteralE, 104

	.type	_ZTVN2kc24impl_term_TStringLiteralE,@object # @_ZTVN2kc24impl_term_TStringLiteralE
	.globl	_ZTVN2kc24impl_term_TStringLiteralE
	.p2align	3, 0x0
_ZTVN2kc24impl_term_TStringLiteralE:
	.dword	0
	.dword	_ZTIN2kc24impl_term_TStringLiteralE
	.dword	_ZNK2kc24impl_term_TStringLiteral8prod_selEv
	.dword	_ZNK2kc24impl_term_TStringLiteral9subphylumEi
	.dword	_ZN2kc24impl_term_TStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_term_TStringLiteral7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_term_TStringLiteralD0Ev
	.dword	_ZN2kc24impl_term_TStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc24impl_term_TStringLiteralE, 104

	.type	_ZTVN2kc16impl_term_TCTermE,@object # @_ZTVN2kc16impl_term_TCTermE
	.globl	_ZTVN2kc16impl_term_TCTermE
	.p2align	3, 0x0
_ZTVN2kc16impl_term_TCTermE:
	.dword	0
	.dword	_ZTIN2kc16impl_term_TCTermE
	.dword	_ZNK2kc16impl_term_TCTerm8prod_selEv
	.dword	_ZNK2kc16impl_term_TCTerm9subphylumEi
	.dword	_ZN2kc16impl_term_TCTerm13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc16impl_term_TCTerm7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc16impl_term_TCTermD0Ev
	.dword	_ZN2kc16impl_term_TCTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc16impl_term_TCTermE, 104

	.type	_ZTVN2kc23impl_term_TMemberVarDotE,@object # @_ZTVN2kc23impl_term_TMemberVarDotE
	.globl	_ZTVN2kc23impl_term_TMemberVarDotE
	.p2align	3, 0x0
_ZTVN2kc23impl_term_TMemberVarDotE:
	.dword	0
	.dword	_ZTIN2kc23impl_term_TMemberVarDotE
	.dword	_ZNK2kc23impl_term_TMemberVarDot8prod_selEv
	.dword	_ZNK2kc23impl_term_TMemberVarDot9subphylumEi
	.dword	_ZN2kc23impl_term_TMemberVarDot13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc23impl_term_TMemberVarDot7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc23impl_term_TMemberVarDotD0Ev
	.dword	_ZN2kc23impl_term_TMemberVarDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc23impl_term_TMemberVarDotE, 104

	.type	_ZTVN2kc20impl_term_TMemberVarE,@object # @_ZTVN2kc20impl_term_TMemberVarE
	.globl	_ZTVN2kc20impl_term_TMemberVarE
	.p2align	3, 0x0
_ZTVN2kc20impl_term_TMemberVarE:
	.dword	0
	.dword	_ZTIN2kc20impl_term_TMemberVarE
	.dword	_ZNK2kc20impl_term_TMemberVar8prod_selEv
	.dword	_ZNK2kc20impl_term_TMemberVar9subphylumEi
	.dword	_ZN2kc20impl_term_TMemberVar13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc20impl_term_TMemberVar7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc20impl_term_TMemberVarD0Ev
	.dword	_ZN2kc20impl_term_TMemberVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc20impl_term_TMemberVarE, 104

	.type	_ZTVN2kc20impl_term_TMethodDotE,@object # @_ZTVN2kc20impl_term_TMethodDotE
	.globl	_ZTVN2kc20impl_term_TMethodDotE
	.p2align	3, 0x0
_ZTVN2kc20impl_term_TMethodDotE:
	.dword	0
	.dword	_ZTIN2kc20impl_term_TMethodDotE
	.dword	_ZNK2kc20impl_term_TMethodDot8prod_selEv
	.dword	_ZNK2kc20impl_term_TMethodDot9subphylumEi
	.dword	_ZN2kc20impl_term_TMethodDot13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc20impl_term_TMethodDot7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc20impl_term_TMethodDotD0Ev
	.dword	_ZN2kc20impl_term_TMethodDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc20impl_term_TMethodDotE, 104

	.type	_ZTVN2kc17impl_term_TMethodE,@object # @_ZTVN2kc17impl_term_TMethodE
	.globl	_ZTVN2kc17impl_term_TMethodE
	.p2align	3, 0x0
_ZTVN2kc17impl_term_TMethodE:
	.dword	0
	.dword	_ZTIN2kc17impl_term_TMethodE
	.dword	_ZNK2kc17impl_term_TMethod8prod_selEv
	.dword	_ZNK2kc17impl_term_TMethod9subphylumEi
	.dword	_ZN2kc17impl_term_TMethod13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc17impl_term_TMethod7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc17impl_term_TMethodD0Ev
	.dword	_ZN2kc17impl_term_TMethod10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc17impl_term_TMethodE, 104

	.type	_ZTVN2kc19impl_term_TOperatorE,@object # @_ZTVN2kc19impl_term_TOperatorE
	.globl	_ZTVN2kc19impl_term_TOperatorE
	.p2align	3, 0x0
_ZTVN2kc19impl_term_TOperatorE:
	.dword	0
	.dword	_ZTIN2kc19impl_term_TOperatorE
	.dword	_ZNK2kc19impl_term_TOperator8prod_selEv
	.dword	_ZNK2kc19impl_term_TOperator9subphylumEi
	.dword	_ZN2kc19impl_term_TOperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_term_TOperator7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_term_TOperatorD0Ev
	.dword	_ZN2kc19impl_term_TOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc19impl_term_TOperatorE, 104

	.type	_ZTVN2kc19impl_term_TVariableE,@object # @_ZTVN2kc19impl_term_TVariableE
	.globl	_ZTVN2kc19impl_term_TVariableE
	.p2align	3, 0x0
_ZTVN2kc19impl_term_TVariableE:
	.dword	0
	.dword	_ZTIN2kc19impl_term_TVariableE
	.dword	_ZNK2kc19impl_term_TVariable8prod_selEv
	.dword	_ZNK2kc19impl_term_TVariable9subphylumEi
	.dword	_ZN2kc19impl_term_TVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_term_TVariable7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_term_TVariableD0Ev
	.dword	_ZN2kc19impl_term_TVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc19impl_term_TVariableE, 104

	.type	_ZN2kc10impl_terms11phylum_sel_E,@object # @_ZN2kc10impl_terms11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc10impl_terms11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc10impl_terms11phylum_sel_E:
	.word	50                              # 0x32
	.size	_ZN2kc10impl_terms11phylum_sel_E, 4

	.type	_ZTVN2kc10impl_termsE,@object   # @_ZTVN2kc10impl_termsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc10impl_termsE
	.p2align	3, 0x0
_ZTVN2kc10impl_termsE:
	.dword	0
	.dword	_ZTIN2kc10impl_termsE
	.dword	_ZNK2kc10impl_terms8prod_selEv
	.dword	_ZNK2kc10impl_terms9subphylumEi
	.dword	_ZN2kc10impl_terms13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc10impl_terms7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc10impl_termsD0Ev
	.dword	_ZN2kc10impl_terms10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc10impl_terms6is_nilEv
	.dword	_ZNK2kc10impl_terms7reverseEv
	.size	_ZTVN2kc10impl_termsE, 120

	.type	_ZN2kc12impl_fnfiles11phylum_sel_E,@object # @_ZN2kc12impl_fnfiles11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc12impl_fnfiles11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc12impl_fnfiles11phylum_sel_E:
	.word	51                              # 0x33
	.size	_ZN2kc12impl_fnfiles11phylum_sel_E, 4

	.type	_ZTVN2kc12impl_fnfilesE,@object # @_ZTVN2kc12impl_fnfilesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc12impl_fnfilesE
	.p2align	3, 0x0
_ZTVN2kc12impl_fnfilesE:
	.dword	0
	.dword	_ZTIN2kc12impl_fnfilesE
	.dword	_ZNK2kc12impl_fnfiles8prod_selEv
	.dword	_ZNK2kc12impl_fnfiles9subphylumEi
	.dword	_ZN2kc12impl_fnfiles13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc12impl_fnfiles7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc12impl_fnfilesD0Ev
	.dword	_ZN2kc12impl_fnfiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc12impl_fnfiles6is_nilEv
	.dword	_ZNK2kc12impl_fnfiles7reverseEv
	.size	_ZTVN2kc12impl_fnfilesE, 120

	.type	_ZN2kc11impl_fnfile11phylum_sel_E,@object # @_ZN2kc11impl_fnfile11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc11impl_fnfile11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc11impl_fnfile11phylum_sel_E:
	.word	52                              # 0x34
	.size	_ZN2kc11impl_fnfile11phylum_sel_E, 4

	.type	_ZTVN2kc18impl_fnfile_FnFileE,@object # @_ZTVN2kc18impl_fnfile_FnFileE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc18impl_fnfile_FnFileE
	.p2align	3, 0x0
_ZTVN2kc18impl_fnfile_FnFileE:
	.dword	0
	.dword	_ZTIN2kc18impl_fnfile_FnFileE
	.dword	_ZNK2kc18impl_fnfile_FnFile8prod_selEv
	.dword	_ZNK2kc18impl_fnfile_FnFile9subphylumEi
	.dword	_ZN2kc18impl_fnfile_FnFile13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc18impl_fnfile_FnFile7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc18impl_fnfile_FnFileD0Ev
	.dword	_ZN2kc18impl_fnfile_FnFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc18impl_fnfile_FnFileE, 104

	.type	_ZN2kc19impl_fndeclarations11phylum_sel_E,@object # @_ZN2kc19impl_fndeclarations11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_fndeclarations11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_fndeclarations11phylum_sel_E:
	.word	53                              # 0x35
	.size	_ZN2kc19impl_fndeclarations11phylum_sel_E, 4

	.type	_ZTVN2kc19impl_fndeclarationsE,@object # @_ZTVN2kc19impl_fndeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc19impl_fndeclarationsE
	.p2align	3, 0x0
_ZTVN2kc19impl_fndeclarationsE:
	.dword	0
	.dword	_ZTIN2kc19impl_fndeclarationsE
	.dword	_ZNK2kc19impl_fndeclarations8prod_selEv
	.dword	_ZNK2kc19impl_fndeclarations9subphylumEi
	.dword	_ZN2kc19impl_fndeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_fndeclarations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_fndeclarationsD0Ev
	.dword	_ZN2kc19impl_fndeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc19impl_fndeclarations6is_nilEv
	.dword	_ZNK2kc19impl_fndeclarations7reverseEv
	.size	_ZTVN2kc19impl_fndeclarationsE, 120

	.type	_ZN2kc18impl_fndeclaration11phylum_sel_E,@object # @_ZN2kc18impl_fndeclaration11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_fndeclaration11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_fndeclaration11phylum_sel_E:
	.word	54                              # 0x36
	.size	_ZN2kc18impl_fndeclaration11phylum_sel_E, 4

	.type	_ZTVN2kc38impl_fndeclaration_AcMemberDeclarationE,@object # @_ZTVN2kc38impl_fndeclaration_AcMemberDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc38impl_fndeclaration_AcMemberDeclarationE
	.p2align	3, 0x0
_ZTVN2kc38impl_fndeclaration_AcMemberDeclarationE:
	.dword	0
	.dword	_ZTIN2kc38impl_fndeclaration_AcMemberDeclarationE
	.dword	_ZNK2kc38impl_fndeclaration_AcMemberDeclaration8prod_selEv
	.dword	_ZNK2kc38impl_fndeclaration_AcMemberDeclaration9subphylumEi
	.dword	_ZN2kc38impl_fndeclaration_AcMemberDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc38impl_fndeclaration_AcMemberDeclaration7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc38impl_fndeclaration_AcMemberDeclarationD0Ev
	.dword	_ZN2kc38impl_fndeclaration_AcMemberDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc38impl_fndeclaration_AcMemberDeclarationE, 104

	.type	_ZTVN2kc34impl_fndeclaration_FnAcDeclarationE,@object # @_ZTVN2kc34impl_fndeclaration_FnAcDeclarationE
	.globl	_ZTVN2kc34impl_fndeclaration_FnAcDeclarationE
	.p2align	3, 0x0
_ZTVN2kc34impl_fndeclaration_FnAcDeclarationE:
	.dword	0
	.dword	_ZTIN2kc34impl_fndeclaration_FnAcDeclarationE
	.dword	_ZNK2kc34impl_fndeclaration_FnAcDeclaration8prod_selEv
	.dword	_ZNK2kc34impl_fndeclaration_FnAcDeclaration9subphylumEi
	.dword	_ZN2kc34impl_fndeclaration_FnAcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc34impl_fndeclaration_FnAcDeclaration7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc34impl_fndeclaration_FnAcDeclarationD0Ev
	.dword	_ZN2kc34impl_fndeclaration_FnAcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc34impl_fndeclaration_FnAcDeclarationE, 104

	.type	_ZN2kc12impl_fnclass11phylum_sel_E,@object # @_ZN2kc12impl_fnclass11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc12impl_fnclass11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc12impl_fnclass11phylum_sel_E:
	.word	55                              # 0x37
	.size	_ZN2kc12impl_fnclass11phylum_sel_E, 4

	.type	_ZTVN2kc21impl_fnclass_StaticFnE,@object # @_ZTVN2kc21impl_fnclass_StaticFnE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc21impl_fnclass_StaticFnE
	.p2align	3, 0x0
_ZTVN2kc21impl_fnclass_StaticFnE:
	.dword	0
	.dword	_ZTIN2kc21impl_fnclass_StaticFnE
	.dword	_ZNK2kc21impl_fnclass_StaticFn8prod_selEv
	.dword	_ZNK2kc21impl_fnclass_StaticFn9subphylumEi
	.dword	_ZN2kc21impl_fnclass_StaticFn13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_fnclass_StaticFn7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_fnclass_StaticFnD0Ev
	.dword	_ZN2kc21impl_fnclass_StaticFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc21impl_fnclass_StaticFnE, 104

	.type	_ZN2kc10impl_Ctext11phylum_sel_E,@object # @_ZN2kc10impl_Ctext11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc10impl_Ctext11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc10impl_Ctext11phylum_sel_E:
	.word	56                              # 0x38
	.size	_ZN2kc10impl_Ctext11phylum_sel_E, 4

	.type	_ZTVN2kc10impl_CtextE,@object   # @_ZTVN2kc10impl_CtextE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc10impl_CtextE
	.p2align	3, 0x0
_ZTVN2kc10impl_CtextE:
	.dword	0
	.dword	_ZTIN2kc10impl_CtextE
	.dword	_ZNK2kc10impl_Ctext8prod_selEv
	.dword	_ZNK2kc10impl_Ctext9subphylumEi
	.dword	_ZN2kc10impl_Ctext13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc10impl_Ctext7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc10impl_CtextD0Ev
	.dword	_ZN2kc10impl_Ctext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc10impl_Ctext6is_nilEv
	.dword	_ZNK2kc10impl_Ctext7reverseEv
	.size	_ZTVN2kc10impl_CtextE, 120

	.type	_ZN2kc15impl_Ctext_elem11phylum_sel_E,@object # @_ZN2kc15impl_Ctext_elem11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc15impl_Ctext_elem11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc15impl_Ctext_elem11phylum_sel_E:
	.word	57                              # 0x39
	.size	_ZN2kc15impl_Ctext_elem11phylum_sel_E, 4

	.type	_ZTVN2kc35impl_Ctext_elem_CTextWithexpressionE,@object # @_ZTVN2kc35impl_Ctext_elem_CTextWithexpressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc35impl_Ctext_elem_CTextWithexpressionE
	.p2align	3, 0x0
_ZTVN2kc35impl_Ctext_elem_CTextWithexpressionE:
	.dword	0
	.dword	_ZTIN2kc35impl_Ctext_elem_CTextWithexpressionE
	.dword	_ZNK2kc35impl_Ctext_elem_CTextWithexpression8prod_selEv
	.dword	_ZNK2kc35impl_Ctext_elem_CTextWithexpression9subphylumEi
	.dword	_ZN2kc35impl_Ctext_elem_CTextWithexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc35impl_Ctext_elem_CTextWithexpression7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc35impl_Ctext_elem_CTextWithexpressionD0Ev
	.dword	_ZN2kc35impl_Ctext_elem_CTextWithexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc35impl_Ctext_elem_CTextWithexpressionE, 104

	.type	_ZTVN2kc38impl_Ctext_elem_CTextForeachexpressionE,@object # @_ZTVN2kc38impl_Ctext_elem_CTextForeachexpressionE
	.globl	_ZTVN2kc38impl_Ctext_elem_CTextForeachexpressionE
	.p2align	3, 0x0
_ZTVN2kc38impl_Ctext_elem_CTextForeachexpressionE:
	.dword	0
	.dword	_ZTIN2kc38impl_Ctext_elem_CTextForeachexpressionE
	.dword	_ZNK2kc38impl_Ctext_elem_CTextForeachexpression8prod_selEv
	.dword	_ZNK2kc38impl_Ctext_elem_CTextForeachexpression9subphylumEi
	.dword	_ZN2kc38impl_Ctext_elem_CTextForeachexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc38impl_Ctext_elem_CTextForeachexpression7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc38impl_Ctext_elem_CTextForeachexpressionD0Ev
	.dword	_ZN2kc38impl_Ctext_elem_CTextForeachexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc38impl_Ctext_elem_CTextForeachexpressionE, 104

	.type	_ZTVN2kc26impl_Ctext_elem_CTextCbodyE,@object # @_ZTVN2kc26impl_Ctext_elem_CTextCbodyE
	.globl	_ZTVN2kc26impl_Ctext_elem_CTextCbodyE
	.p2align	3, 0x0
_ZTVN2kc26impl_Ctext_elem_CTextCbodyE:
	.dword	0
	.dword	_ZTIN2kc26impl_Ctext_elem_CTextCbodyE
	.dword	_ZNK2kc26impl_Ctext_elem_CTextCbody8prod_selEv
	.dword	_ZNK2kc26impl_Ctext_elem_CTextCbody9subphylumEi
	.dword	_ZN2kc26impl_Ctext_elem_CTextCbody13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc26impl_Ctext_elem_CTextCbody7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc26impl_Ctext_elem_CTextCbodyD0Ev
	.dword	_ZN2kc26impl_Ctext_elem_CTextCbody10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc26impl_Ctext_elem_CTextCbodyE, 104

	.type	_ZTVN2kc34impl_Ctext_elem_CTextCexpressionSQE,@object # @_ZTVN2kc34impl_Ctext_elem_CTextCexpressionSQE
	.globl	_ZTVN2kc34impl_Ctext_elem_CTextCexpressionSQE
	.p2align	3, 0x0
_ZTVN2kc34impl_Ctext_elem_CTextCexpressionSQE:
	.dword	0
	.dword	_ZTIN2kc34impl_Ctext_elem_CTextCexpressionSQE
	.dword	_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ8prod_selEv
	.dword	_ZNK2kc34impl_Ctext_elem_CTextCexpressionSQ9subphylumEi
	.dword	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQD0Ev
	.dword	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc34impl_Ctext_elem_CTextCexpressionSQE, 104

	.type	_ZTVN2kc34impl_Ctext_elem_CTextCexpressionDQE,@object # @_ZTVN2kc34impl_Ctext_elem_CTextCexpressionDQE
	.globl	_ZTVN2kc34impl_Ctext_elem_CTextCexpressionDQE
	.p2align	3, 0x0
_ZTVN2kc34impl_Ctext_elem_CTextCexpressionDQE:
	.dword	0
	.dword	_ZTIN2kc34impl_Ctext_elem_CTextCexpressionDQE
	.dword	_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ8prod_selEv
	.dword	_ZNK2kc34impl_Ctext_elem_CTextCexpressionDQ9subphylumEi
	.dword	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQD0Ev
	.dword	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc34impl_Ctext_elem_CTextCexpressionDQE, 104

	.type	_ZTVN2kc23impl_Ctext_elem_CTextNlE,@object # @_ZTVN2kc23impl_Ctext_elem_CTextNlE
	.globl	_ZTVN2kc23impl_Ctext_elem_CTextNlE
	.p2align	3, 0x0
_ZTVN2kc23impl_Ctext_elem_CTextNlE:
	.dword	0
	.dword	_ZTIN2kc23impl_Ctext_elem_CTextNlE
	.dword	_ZNK2kc23impl_Ctext_elem_CTextNl8prod_selEv
	.dword	_ZNK2kc23impl_Ctext_elem_CTextNl9subphylumEi
	.dword	_ZN2kc23impl_Ctext_elem_CTextNl13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc23impl_Ctext_elem_CTextNl7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc23impl_Ctext_elem_CTextNlD0Ev
	.dword	_ZN2kc23impl_Ctext_elem_CTextNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc23impl_Ctext_elem_CTextNlE, 104

	.type	_ZTVN2kc30impl_Ctext_elem_CTextDollarVarE,@object # @_ZTVN2kc30impl_Ctext_elem_CTextDollarVarE
	.globl	_ZTVN2kc30impl_Ctext_elem_CTextDollarVarE
	.p2align	3, 0x0
_ZTVN2kc30impl_Ctext_elem_CTextDollarVarE:
	.dword	0
	.dword	_ZTIN2kc30impl_Ctext_elem_CTextDollarVarE
	.dword	_ZNK2kc30impl_Ctext_elem_CTextDollarVar8prod_selEv
	.dword	_ZNK2kc30impl_Ctext_elem_CTextDollarVar9subphylumEi
	.dword	_ZN2kc30impl_Ctext_elem_CTextDollarVar13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc30impl_Ctext_elem_CTextDollarVar7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc30impl_Ctext_elem_CTextDollarVarD0Ev
	.dword	_ZN2kc30impl_Ctext_elem_CTextDollarVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc30impl_Ctext_elem_CTextDollarVarE, 104

	.type	_ZTVN2kc25impl_Ctext_elem_CTextLineE,@object # @_ZTVN2kc25impl_Ctext_elem_CTextLineE
	.globl	_ZTVN2kc25impl_Ctext_elem_CTextLineE
	.p2align	3, 0x0
_ZTVN2kc25impl_Ctext_elem_CTextLineE:
	.dword	0
	.dword	_ZTIN2kc25impl_Ctext_elem_CTextLineE
	.dword	_ZNK2kc25impl_Ctext_elem_CTextLine8prod_selEv
	.dword	_ZNK2kc25impl_Ctext_elem_CTextLine9subphylumEi
	.dword	_ZN2kc25impl_Ctext_elem_CTextLine13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc25impl_Ctext_elem_CTextLine7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc25impl_Ctext_elem_CTextLineD0Ev
	.dword	_ZN2kc25impl_Ctext_elem_CTextLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc25impl_Ctext_elem_CTextLineE, 104

	.type	_ZN2kc18impl_foreach_after11phylum_sel_E,@object # @_ZN2kc18impl_foreach_after11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_foreach_after11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_foreach_after11phylum_sel_E:
	.word	58                              # 0x3a
	.size	_ZN2kc18impl_foreach_after11phylum_sel_E, 4

	.type	_ZTVN2kc31impl_foreach_after_ForeachAfterE,@object # @_ZTVN2kc31impl_foreach_after_ForeachAfterE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc31impl_foreach_after_ForeachAfterE
	.p2align	3, 0x0
_ZTVN2kc31impl_foreach_after_ForeachAfterE:
	.dword	0
	.dword	_ZTIN2kc31impl_foreach_after_ForeachAfterE
	.dword	_ZNK2kc31impl_foreach_after_ForeachAfter8prod_selEv
	.dword	_ZNK2kc31impl_foreach_after_ForeachAfter9subphylumEi
	.dword	_ZN2kc31impl_foreach_after_ForeachAfter13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc31impl_foreach_after_ForeachAfter7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc31impl_foreach_after_ForeachAfterD0Ev
	.dword	_ZN2kc31impl_foreach_after_ForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc31impl_foreach_after_ForeachAfterE, 104

	.type	_ZN2kc16impl_contextinfo11phylum_sel_E,@object # @_ZN2kc16impl_contextinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc16impl_contextinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc16impl_contextinfo11phylum_sel_E:
	.word	59                              # 0x3b
	.size	_ZN2kc16impl_contextinfo11phylum_sel_E, 4

	.type	_ZTVN2kc33impl_contextinfo_InForeachContextE,@object # @_ZTVN2kc33impl_contextinfo_InForeachContextE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc33impl_contextinfo_InForeachContextE
	.p2align	3, 0x0
_ZTVN2kc33impl_contextinfo_InForeachContextE:
	.dword	0
	.dword	_ZTIN2kc33impl_contextinfo_InForeachContextE
	.dword	_ZNK2kc33impl_contextinfo_InForeachContext8prod_selEv
	.dword	_ZNK2kc33impl_contextinfo_InForeachContext9subphylumEi
	.dword	_ZN2kc33impl_contextinfo_InForeachContext13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc33impl_contextinfo_InForeachContext7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc33impl_contextinfo_InForeachContextD0Ev
	.dword	_ZN2kc33impl_contextinfo_InForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc33impl_contextinfo_InForeachContextE, 104

	.type	_ZN2kc20impl_withexpressions11phylum_sel_E,@object # @_ZN2kc20impl_withexpressions11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc20impl_withexpressions11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc20impl_withexpressions11phylum_sel_E:
	.word	60                              # 0x3c
	.size	_ZN2kc20impl_withexpressions11phylum_sel_E, 4

	.type	_ZTVN2kc20impl_withexpressionsE,@object # @_ZTVN2kc20impl_withexpressionsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc20impl_withexpressionsE
	.p2align	3, 0x0
_ZTVN2kc20impl_withexpressionsE:
	.dword	0
	.dword	_ZTIN2kc20impl_withexpressionsE
	.dword	_ZNK2kc20impl_withexpressions8prod_selEv
	.dword	_ZNK2kc20impl_withexpressions9subphylumEi
	.dword	_ZN2kc20impl_withexpressions13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc20impl_withexpressions7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc20impl_withexpressionsD0Ev
	.dword	_ZN2kc20impl_withexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc20impl_withexpressions6is_nilEv
	.dword	_ZNK2kc20impl_withexpressions7reverseEv
	.size	_ZTVN2kc20impl_withexpressionsE, 120

	.type	_ZN2kc19impl_withexpression11phylum_sel_E,@object # @_ZN2kc19impl_withexpression11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_withexpression11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_withexpression11phylum_sel_E:
	.word	61                              # 0x3d
	.size	_ZN2kc19impl_withexpression11phylum_sel_E, 4

	.type	_ZTVN2kc33impl_withexpression_WECexpressionE,@object # @_ZTVN2kc33impl_withexpression_WECexpressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc33impl_withexpression_WECexpressionE
	.p2align	3, 0x0
_ZTVN2kc33impl_withexpression_WECexpressionE:
	.dword	0
	.dword	_ZTIN2kc33impl_withexpression_WECexpressionE
	.dword	_ZNK2kc33impl_withexpression_WECexpression8prod_selEv
	.dword	_ZNK2kc33impl_withexpression_WECexpression9subphylumEi
	.dword	_ZN2kc33impl_withexpression_WECexpression13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc33impl_withexpression_WECexpression7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc33impl_withexpression_WECexpressionD0Ev
	.dword	_ZN2kc33impl_withexpression_WECexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc33impl_withexpression_WECexpressionE, 104

	.type	_ZTVN2kc30impl_withexpression_WEVariableE,@object # @_ZTVN2kc30impl_withexpression_WEVariableE
	.globl	_ZTVN2kc30impl_withexpression_WEVariableE
	.p2align	3, 0x0
_ZTVN2kc30impl_withexpression_WEVariableE:
	.dword	0
	.dword	_ZTIN2kc30impl_withexpression_WEVariableE
	.dword	_ZNK2kc30impl_withexpression_WEVariable8prod_selEv
	.dword	_ZNK2kc30impl_withexpression_WEVariable9subphylumEi
	.dword	_ZN2kc30impl_withexpression_WEVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc30impl_withexpression_WEVariable7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc30impl_withexpression_WEVariableD0Ev
	.dword	_ZN2kc30impl_withexpression_WEVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc30impl_withexpression_WEVariableE, 104

	.type	_ZN2kc14impl_withcases11phylum_sel_E,@object # @_ZN2kc14impl_withcases11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc14impl_withcases11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc14impl_withcases11phylum_sel_E:
	.word	62                              # 0x3e
	.size	_ZN2kc14impl_withcases11phylum_sel_E, 4

	.type	_ZTVN2kc14impl_withcasesE,@object # @_ZTVN2kc14impl_withcasesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc14impl_withcasesE
	.p2align	3, 0x0
_ZTVN2kc14impl_withcasesE:
	.dword	0
	.dword	_ZTIN2kc14impl_withcasesE
	.dword	_ZNK2kc14impl_withcases8prod_selEv
	.dword	_ZNK2kc14impl_withcases9subphylumEi
	.dword	_ZN2kc14impl_withcases13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc14impl_withcases7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc14impl_withcasesD0Ev
	.dword	_ZN2kc14impl_withcases10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc14impl_withcases6is_nilEv
	.dword	_ZNK2kc14impl_withcases7reverseEv
	.size	_ZTVN2kc14impl_withcasesE, 120

	.type	_ZN2kc13impl_withcase11phylum_sel_E,@object # @_ZN2kc13impl_withcase11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc13impl_withcase11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc13impl_withcase11phylum_sel_E:
	.word	63                              # 0x3f
	.size	_ZN2kc13impl_withcase11phylum_sel_E, 4

	.type	_ZTVN2kc22impl_withcase_WithcaseE,@object # @_ZTVN2kc22impl_withcase_WithcaseE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc22impl_withcase_WithcaseE
	.p2align	3, 0x0
_ZTVN2kc22impl_withcase_WithcaseE:
	.dword	0
	.dword	_ZTIN2kc22impl_withcase_WithcaseE
	.dword	_ZNK2kc22impl_withcase_Withcase8prod_selEv
	.dword	_ZNK2kc22impl_withcase_Withcase9subphylumEi
	.dword	_ZN2kc22impl_withcase_Withcase13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc22impl_withcase_Withcase7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc22impl_withcase_WithcaseD0Ev
	.dword	_ZN2kc22impl_withcase_Withcase10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc22impl_withcase_WithcaseE, 104

	.type	_ZN2kc24impl_unparsedeclarations11phylum_sel_E,@object # @_ZN2kc24impl_unparsedeclarations11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc24impl_unparsedeclarations11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc24impl_unparsedeclarations11phylum_sel_E:
	.word	64                              # 0x40
	.size	_ZN2kc24impl_unparsedeclarations11phylum_sel_E, 4

	.type	_ZTVN2kc24impl_unparsedeclarationsE,@object # @_ZTVN2kc24impl_unparsedeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc24impl_unparsedeclarationsE
	.p2align	3, 0x0
_ZTVN2kc24impl_unparsedeclarationsE:
	.dword	0
	.dword	_ZTIN2kc24impl_unparsedeclarationsE
	.dword	_ZNK2kc24impl_unparsedeclarations8prod_selEv
	.dword	_ZNK2kc24impl_unparsedeclarations9subphylumEi
	.dword	_ZN2kc24impl_unparsedeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_unparsedeclarations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_unparsedeclarationsD0Ev
	.dword	_ZN2kc24impl_unparsedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc24impl_unparsedeclarations6is_nilEv
	.dword	_ZNK2kc24impl_unparsedeclarations7reverseEv
	.size	_ZTVN2kc24impl_unparsedeclarationsE, 120

	.type	_ZN2kc23impl_unparsedeclaration11phylum_sel_E,@object # @_ZN2kc23impl_unparsedeclaration11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc23impl_unparsedeclaration11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc23impl_unparsedeclaration11phylum_sel_E:
	.word	65                              # 0x41
	.size	_ZN2kc23impl_unparsedeclaration11phylum_sel_E, 4

	.type	_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE,@object # @_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE
	.p2align	3, 0x0
_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE:
	.dword	0
	.dword	_ZTIN2kc42impl_unparsedeclaration_UnparseDeclarationE
	.dword	_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration8prod_selEv
	.dword	_ZNK2kc42impl_unparsedeclaration_UnparseDeclaration9subphylumEi
	.dword	_ZN2kc42impl_unparsedeclaration_UnparseDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc42impl_unparsedeclaration_UnparseDeclaration7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc42impl_unparsedeclaration_UnparseDeclarationD0Ev
	.dword	_ZN2kc42impl_unparsedeclaration_UnparseDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc42impl_unparsedeclaration_UnparseDeclarationE, 104

	.type	_ZN2kc19impl_unparseclauses11phylum_sel_E,@object # @_ZN2kc19impl_unparseclauses11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_unparseclauses11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_unparseclauses11phylum_sel_E:
	.word	66                              # 0x42
	.size	_ZN2kc19impl_unparseclauses11phylum_sel_E, 4

	.type	_ZTVN2kc19impl_unparseclausesE,@object # @_ZTVN2kc19impl_unparseclausesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc19impl_unparseclausesE
	.p2align	3, 0x0
_ZTVN2kc19impl_unparseclausesE:
	.dword	0
	.dword	_ZTIN2kc19impl_unparseclausesE
	.dword	_ZNK2kc19impl_unparseclauses8prod_selEv
	.dword	_ZNK2kc19impl_unparseclauses9subphylumEi
	.dword	_ZN2kc19impl_unparseclauses13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_unparseclauses7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_unparseclausesD0Ev
	.dword	_ZN2kc19impl_unparseclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc19impl_unparseclauses6is_nilEv
	.dword	_ZNK2kc19impl_unparseclauses7reverseEv
	.size	_ZTVN2kc19impl_unparseclausesE, 120

	.type	_ZN2kc18impl_unparseclause11phylum_sel_E,@object # @_ZN2kc18impl_unparseclause11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_unparseclause11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_unparseclause11phylum_sel_E:
	.word	67                              # 0x43
	.size	_ZN2kc18impl_unparseclause11phylum_sel_E, 4

	.type	_ZTVN2kc32impl_unparseclause_UnparseClauseE,@object # @_ZTVN2kc32impl_unparseclause_UnparseClauseE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc32impl_unparseclause_UnparseClauseE
	.p2align	3, 0x0
_ZTVN2kc32impl_unparseclause_UnparseClauseE:
	.dword	0
	.dword	_ZTIN2kc32impl_unparseclause_UnparseClauseE
	.dword	_ZNK2kc32impl_unparseclause_UnparseClause8prod_selEv
	.dword	_ZNK2kc32impl_unparseclause_UnparseClause9subphylumEi
	.dword	_ZN2kc32impl_unparseclause_UnparseClause13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_unparseclause_UnparseClause7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_unparseclause_UnparseClauseD0Ev
	.dword	_ZN2kc32impl_unparseclause_UnparseClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc32impl_unparseclause_UnparseClauseE, 104

	.type	_ZN2kc14impl_viewnames11phylum_sel_E,@object # @_ZN2kc14impl_viewnames11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc14impl_viewnames11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc14impl_viewnames11phylum_sel_E:
	.word	68                              # 0x44
	.size	_ZN2kc14impl_viewnames11phylum_sel_E, 4

	.type	_ZTVN2kc14impl_viewnamesE,@object # @_ZTVN2kc14impl_viewnamesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc14impl_viewnamesE
	.p2align	3, 0x0
_ZTVN2kc14impl_viewnamesE:
	.dword	0
	.dword	_ZTIN2kc14impl_viewnamesE
	.dword	_ZNK2kc14impl_viewnames8prod_selEv
	.dword	_ZNK2kc14impl_viewnames9subphylumEi
	.dword	_ZN2kc14impl_viewnames13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc14impl_viewnames7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc14impl_viewnamesD0Ev
	.dword	_ZN2kc14impl_viewnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc14impl_viewnames6is_nilEv
	.dword	_ZNK2kc14impl_viewnames7reverseEv
	.size	_ZTVN2kc14impl_viewnamesE, 120

	.type	_ZN2kc17impl_unparseitems11phylum_sel_E,@object # @_ZN2kc17impl_unparseitems11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc17impl_unparseitems11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc17impl_unparseitems11phylum_sel_E:
	.word	69                              # 0x45
	.size	_ZN2kc17impl_unparseitems11phylum_sel_E, 4

	.type	_ZTVN2kc17impl_unparseitemsE,@object # @_ZTVN2kc17impl_unparseitemsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc17impl_unparseitemsE
	.p2align	3, 0x0
_ZTVN2kc17impl_unparseitemsE:
	.dword	0
	.dword	_ZTIN2kc17impl_unparseitemsE
	.dword	_ZNK2kc17impl_unparseitems8prod_selEv
	.dword	_ZNK2kc17impl_unparseitems9subphylumEi
	.dword	_ZN2kc17impl_unparseitems13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc17impl_unparseitems7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc17impl_unparseitemsD0Ev
	.dword	_ZN2kc17impl_unparseitems10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc17impl_unparseitems6is_nilEv
	.dword	_ZNK2kc17impl_unparseitems7reverseEv
	.size	_ZTVN2kc17impl_unparseitemsE, 120

	.type	_ZN2kc16impl_unparseitem11phylum_sel_E,@object # @_ZN2kc16impl_unparseitem11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc16impl_unparseitem11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc16impl_unparseitem11phylum_sel_E:
	.word	70                              # 0x46
	.size	_ZN2kc16impl_unparseitem11phylum_sel_E, 4

	.type	_ZTVN2kc29impl_unparseitem_UViewVarDeclE,@object # @_ZTVN2kc29impl_unparseitem_UViewVarDeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc29impl_unparseitem_UViewVarDeclE
	.p2align	3, 0x0
_ZTVN2kc29impl_unparseitem_UViewVarDeclE:
	.dword	0
	.dword	_ZTIN2kc29impl_unparseitem_UViewVarDeclE
	.dword	_ZNK2kc29impl_unparseitem_UViewVarDecl8prod_selEv
	.dword	_ZNK2kc29impl_unparseitem_UViewVarDecl9subphylumEi
	.dword	_ZN2kc29impl_unparseitem_UViewVarDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc29impl_unparseitem_UViewVarDecl7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc29impl_unparseitem_UViewVarDeclD0Ev
	.dword	_ZN2kc29impl_unparseitem_UViewVarDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc29impl_unparseitem_UViewVarDeclE, 104

	.type	_ZTVN2kc24impl_unparseitem_UnpBodyE,@object # @_ZTVN2kc24impl_unparseitem_UnpBodyE
	.globl	_ZTVN2kc24impl_unparseitem_UnpBodyE
	.p2align	3, 0x0
_ZTVN2kc24impl_unparseitem_UnpBodyE:
	.dword	0
	.dword	_ZTIN2kc24impl_unparseitem_UnpBodyE
	.dword	_ZNK2kc24impl_unparseitem_UnpBody8prod_selEv
	.dword	_ZNK2kc24impl_unparseitem_UnpBody9subphylumEi
	.dword	_ZN2kc24impl_unparseitem_UnpBody13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_unparseitem_UnpBody7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_unparseitem_UnpBodyD0Ev
	.dword	_ZN2kc24impl_unparseitem_UnpBody10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc24impl_unparseitem_UnpBodyE, 104

	.type	_ZTVN2kc25impl_unparseitem_UnpCtextE,@object # @_ZTVN2kc25impl_unparseitem_UnpCtextE
	.globl	_ZTVN2kc25impl_unparseitem_UnpCtextE
	.p2align	3, 0x0
_ZTVN2kc25impl_unparseitem_UnpCtextE:
	.dword	0
	.dword	_ZTIN2kc25impl_unparseitem_UnpCtextE
	.dword	_ZNK2kc25impl_unparseitem_UnpCtext8prod_selEv
	.dword	_ZNK2kc25impl_unparseitem_UnpCtext9subphylumEi
	.dword	_ZN2kc25impl_unparseitem_UnpCtext13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc25impl_unparseitem_UnpCtext7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc25impl_unparseitem_UnpCtextD0Ev
	.dword	_ZN2kc25impl_unparseitem_UnpCtext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc25impl_unparseitem_UnpCtextE, 104

	.type	_ZTVN2kc27impl_unparseitem_UnpSubexprE,@object # @_ZTVN2kc27impl_unparseitem_UnpSubexprE
	.globl	_ZTVN2kc27impl_unparseitem_UnpSubexprE
	.p2align	3, 0x0
_ZTVN2kc27impl_unparseitem_UnpSubexprE:
	.dword	0
	.dword	_ZTIN2kc27impl_unparseitem_UnpSubexprE
	.dword	_ZNK2kc27impl_unparseitem_UnpSubexpr8prod_selEv
	.dword	_ZNK2kc27impl_unparseitem_UnpSubexpr9subphylumEi
	.dword	_ZN2kc27impl_unparseitem_UnpSubexpr13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc27impl_unparseitem_UnpSubexpr7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc27impl_unparseitem_UnpSubexprD0Ev
	.dword	_ZN2kc27impl_unparseitem_UnpSubexpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc27impl_unparseitem_UnpSubexprE, 104

	.type	_ZTVN2kc23impl_unparseitem_UnpStrE,@object # @_ZTVN2kc23impl_unparseitem_UnpStrE
	.globl	_ZTVN2kc23impl_unparseitem_UnpStrE
	.p2align	3, 0x0
_ZTVN2kc23impl_unparseitem_UnpStrE:
	.dword	0
	.dword	_ZTIN2kc23impl_unparseitem_UnpStrE
	.dword	_ZNK2kc23impl_unparseitem_UnpStr8prod_selEv
	.dword	_ZNK2kc23impl_unparseitem_UnpStr9subphylumEi
	.dword	_ZN2kc23impl_unparseitem_UnpStr13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc23impl_unparseitem_UnpStr7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc23impl_unparseitem_UnpStrD0Ev
	.dword	_ZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc23impl_unparseitem_UnpStrE, 104

	.type	_ZN2kc15impl_unpsubterm11phylum_sel_E,@object # @_ZN2kc15impl_unpsubterm11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc15impl_unpsubterm11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc15impl_unpsubterm11phylum_sel_E:
	.word	71                              # 0x47
	.size	_ZN2kc15impl_unpsubterm11phylum_sel_E, 4

	.type	_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE,@object # @_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE
	.p2align	3, 0x0
_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE:
	.dword	0
	.dword	_ZTIN2kc33impl_unpsubterm_UnpCastedVariableE
	.dword	_ZNK2kc33impl_unpsubterm_UnpCastedVariable8prod_selEv
	.dword	_ZNK2kc33impl_unpsubterm_UnpCastedVariable9subphylumEi
	.dword	_ZN2kc33impl_unpsubterm_UnpCastedVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc33impl_unpsubterm_UnpCastedVariable7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc33impl_unpsubterm_UnpCastedVariableD0Ev
	.dword	_ZN2kc33impl_unpsubterm_UnpCastedVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc33impl_unpsubterm_UnpCastedVariableE, 104

	.type	_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE,@object # @_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE
	.globl	_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE
	.p2align	3, 0x0
_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE:
	.dword	0
	.dword	_ZTIN2kc32impl_unpsubterm_UnpDollarvarAttrE
	.dword	_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr8prod_selEv
	.dword	_ZNK2kc32impl_unpsubterm_UnpDollarvarAttr9subphylumEi
	.dword	_ZN2kc32impl_unpsubterm_UnpDollarvarAttr13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_unpsubterm_UnpDollarvarAttr7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_unpsubterm_UnpDollarvarAttrD0Ev
	.dword	_ZN2kc32impl_unpsubterm_UnpDollarvarAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc32impl_unpsubterm_UnpDollarvarAttrE, 104

	.type	_ZTVN2kc26impl_unpsubterm_UnpSubAttrE,@object # @_ZTVN2kc26impl_unpsubterm_UnpSubAttrE
	.globl	_ZTVN2kc26impl_unpsubterm_UnpSubAttrE
	.p2align	3, 0x0
_ZTVN2kc26impl_unpsubterm_UnpSubAttrE:
	.dword	0
	.dword	_ZTIN2kc26impl_unpsubterm_UnpSubAttrE
	.dword	_ZNK2kc26impl_unpsubterm_UnpSubAttr8prod_selEv
	.dword	_ZNK2kc26impl_unpsubterm_UnpSubAttr9subphylumEi
	.dword	_ZN2kc26impl_unpsubterm_UnpSubAttr13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc26impl_unpsubterm_UnpSubAttr7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc26impl_unpsubterm_UnpSubAttrD0Ev
	.dword	_ZN2kc26impl_unpsubterm_UnpSubAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc26impl_unpsubterm_UnpSubAttrE, 104

	.type	_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE,@object # @_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE
	.globl	_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE
	.p2align	3, 0x0
_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE:
	.dword	0
	.dword	_ZTIN2kc32impl_unpsubterm_UnpDollarvarTermE
	.dword	_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm8prod_selEv
	.dword	_ZNK2kc32impl_unpsubterm_UnpDollarvarTerm9subphylumEi
	.dword	_ZN2kc32impl_unpsubterm_UnpDollarvarTerm13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_unpsubterm_UnpDollarvarTerm7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_unpsubterm_UnpDollarvarTermD0Ev
	.dword	_ZN2kc32impl_unpsubterm_UnpDollarvarTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc32impl_unpsubterm_UnpDollarvarTermE, 104

	.type	_ZTVN2kc26impl_unpsubterm_UnpSubTermE,@object # @_ZTVN2kc26impl_unpsubterm_UnpSubTermE
	.globl	_ZTVN2kc26impl_unpsubterm_UnpSubTermE
	.p2align	3, 0x0
_ZTVN2kc26impl_unpsubterm_UnpSubTermE:
	.dword	0
	.dword	_ZTIN2kc26impl_unpsubterm_UnpSubTermE
	.dword	_ZNK2kc26impl_unpsubterm_UnpSubTerm8prod_selEv
	.dword	_ZNK2kc26impl_unpsubterm_UnpSubTerm9subphylumEi
	.dword	_ZN2kc26impl_unpsubterm_UnpSubTerm13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc26impl_unpsubterm_UnpSubTerm7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc26impl_unpsubterm_UnpSubTermD0Ev
	.dword	_ZN2kc26impl_unpsubterm_UnpSubTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc26impl_unpsubterm_UnpSubTermE, 104

	.type	_ZN2kc18impl_unpattributes11phylum_sel_E,@object # @_ZN2kc18impl_unpattributes11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_unpattributes11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_unpattributes11phylum_sel_E:
	.word	72                              # 0x48
	.size	_ZN2kc18impl_unpattributes11phylum_sel_E, 4

	.type	_ZTVN2kc18impl_unpattributesE,@object # @_ZTVN2kc18impl_unpattributesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc18impl_unpattributesE
	.p2align	3, 0x0
_ZTVN2kc18impl_unpattributesE:
	.dword	0
	.dword	_ZTIN2kc18impl_unpattributesE
	.dword	_ZNK2kc18impl_unpattributes8prod_selEv
	.dword	_ZNK2kc18impl_unpattributes9subphylumEi
	.dword	_ZN2kc18impl_unpattributes13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc18impl_unpattributes7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc18impl_unpattributesD0Ev
	.dword	_ZN2kc18impl_unpattributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc18impl_unpattributes6is_nilEv
	.dword	_ZNK2kc18impl_unpattributes7reverseEv
	.size	_ZTVN2kc18impl_unpattributesE, 120

	.type	_ZN2kc19impl_viewnameoption11phylum_sel_E,@object # @_ZN2kc19impl_viewnameoption11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_viewnameoption11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_viewnameoption11phylum_sel_E:
	.word	73                              # 0x49
	.size	_ZN2kc19impl_viewnameoption11phylum_sel_E, 4

	.type	_ZTVN2kc31impl_viewnameoption_YesViewnameE,@object # @_ZTVN2kc31impl_viewnameoption_YesViewnameE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc31impl_viewnameoption_YesViewnameE
	.p2align	3, 0x0
_ZTVN2kc31impl_viewnameoption_YesViewnameE:
	.dword	0
	.dword	_ZTIN2kc31impl_viewnameoption_YesViewnameE
	.dword	_ZNK2kc31impl_viewnameoption_YesViewname8prod_selEv
	.dword	_ZNK2kc31impl_viewnameoption_YesViewname9subphylumEi
	.dword	_ZN2kc31impl_viewnameoption_YesViewname13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc31impl_viewnameoption_YesViewname7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc31impl_viewnameoption_YesViewnameD0Ev
	.dword	_ZN2kc31impl_viewnameoption_YesViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc31impl_viewnameoption_YesViewnameE, 104

	.type	_ZN2kc19impl_languageoption11phylum_sel_E,@object # @_ZN2kc19impl_languageoption11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_languageoption11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_languageoption11phylum_sel_E:
	.word	74                              # 0x4a
	.size	_ZN2kc19impl_languageoption11phylum_sel_E, 4

	.type	_ZTVN2kc32impl_languageoption_LanguageListE,@object # @_ZTVN2kc32impl_languageoption_LanguageListE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc32impl_languageoption_LanguageListE
	.p2align	3, 0x0
_ZTVN2kc32impl_languageoption_LanguageListE:
	.dword	0
	.dword	_ZTIN2kc32impl_languageoption_LanguageListE
	.dword	_ZNK2kc32impl_languageoption_LanguageList8prod_selEv
	.dword	_ZNK2kc32impl_languageoption_LanguageList9subphylumEi
	.dword	_ZN2kc32impl_languageoption_LanguageList13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_languageoption_LanguageList7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_languageoption_LanguageListD0Ev
	.dword	_ZN2kc32impl_languageoption_LanguageList10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc32impl_languageoption_LanguageListE, 104

	.type	_ZN2kc18impl_languagenames11phylum_sel_E,@object # @_ZN2kc18impl_languagenames11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_languagenames11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_languagenames11phylum_sel_E:
	.word	75                              # 0x4b
	.size	_ZN2kc18impl_languagenames11phylum_sel_E, 4

	.type	_ZTVN2kc18impl_languagenamesE,@object # @_ZTVN2kc18impl_languagenamesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc18impl_languagenamesE
	.p2align	3, 0x0
_ZTVN2kc18impl_languagenamesE:
	.dword	0
	.dword	_ZTIN2kc18impl_languagenamesE
	.dword	_ZNK2kc18impl_languagenames8prod_selEv
	.dword	_ZNK2kc18impl_languagenames9subphylumEi
	.dword	_ZN2kc18impl_languagenames13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc18impl_languagenames7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc18impl_languagenamesD0Ev
	.dword	_ZN2kc18impl_languagenames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc18impl_languagenames6is_nilEv
	.dword	_ZNK2kc18impl_languagenames7reverseEv
	.size	_ZTVN2kc18impl_languagenamesE, 120

	.type	_ZN2kc13impl_fileline11phylum_sel_E,@object # @_ZN2kc13impl_fileline11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc13impl_fileline11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc13impl_fileline11phylum_sel_E:
	.word	76                              # 0x4c
	.size	_ZN2kc13impl_fileline11phylum_sel_E, 4

	.type	_ZN2kc27impl_scopetypefilelinestack11phylum_sel_E,@object # @_ZN2kc27impl_scopetypefilelinestack11phylum_sel_E
	.globl	_ZN2kc27impl_scopetypefilelinestack11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_scopetypefilelinestack11phylum_sel_E:
	.word	77                              # 0x4d
	.size	_ZN2kc27impl_scopetypefilelinestack11phylum_sel_E, 4

	.type	_ZTVN2kc27impl_scopetypefilelinestackE,@object # @_ZTVN2kc27impl_scopetypefilelinestackE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc27impl_scopetypefilelinestackE
	.p2align	3, 0x0
_ZTVN2kc27impl_scopetypefilelinestackE:
	.dword	0
	.dword	_ZTIN2kc27impl_scopetypefilelinestackE
	.dword	_ZNK2kc27impl_scopetypefilelinestack8prod_selEv
	.dword	_ZNK2kc27impl_scopetypefilelinestack9subphylumEi
	.dword	_ZN2kc27impl_scopetypefilelinestack13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc27impl_scopetypefilelinestack7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc27impl_scopetypefilelinestackD0Ev
	.dword	_ZN2kc27impl_scopetypefilelinestack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc27impl_scopetypefilelinestack6is_nilEv
	.dword	_ZNK2kc27impl_scopetypefilelinestack7reverseEv
	.size	_ZTVN2kc27impl_scopetypefilelinestackE, 120

	.type	_ZN2kc22impl_scopetypefileline11phylum_sel_E,@object # @_ZN2kc22impl_scopetypefileline11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc22impl_scopetypefileline11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc22impl_scopetypefileline11phylum_sel_E:
	.word	78                              # 0x4e
	.size	_ZN2kc22impl_scopetypefileline11phylum_sel_E, 4

	.type	_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE,@object # @_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE
	.p2align	3, 0x0
_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE:
	.dword	0
	.dword	_ZTIN2kc40impl_scopetypefileline_ScopeTypeFileLineE
	.dword	_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine8prod_selEv
	.dword	_ZNK2kc40impl_scopetypefileline_ScopeTypeFileLine9subphylumEi
	.dword	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineD0Ev
	.dword	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc40impl_scopetypefileline_ScopeTypeFileLineE, 104

	.type	_ZN2kc11impl_IDtype11phylum_sel_E,@object # @_ZN2kc11impl_IDtype11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc11impl_IDtype11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc11impl_IDtype11phylum_sel_E:
	.word	79                              # 0x4f
	.size	_ZN2kc11impl_IDtype11phylum_sel_E, 4

	.type	_ZTVN2kc26impl_IDtype_ITLanguageNameE,@object # @_ZTVN2kc26impl_IDtype_ITLanguageNameE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc26impl_IDtype_ITLanguageNameE
	.p2align	3, 0x0
_ZTVN2kc26impl_IDtype_ITLanguageNameE:
	.dword	0
	.dword	_ZTIN2kc26impl_IDtype_ITLanguageNameE
	.dword	_ZNK2kc26impl_IDtype_ITLanguageName8prod_selEv
	.dword	_ZNK2kc26impl_IDtype_ITLanguageName9subphylumEi
	.dword	_ZN2kc26impl_IDtype_ITLanguageName13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc26impl_IDtype_ITLanguageName7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc26impl_IDtype_ITLanguageNameD0Ev
	.dword	_ZN2kc26impl_IDtype_ITLanguageName10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc26impl_IDtype_ITLanguageNameE, 104

	.type	_ZTVN2kc29impl_IDtype_ITPatternVariableE,@object # @_ZTVN2kc29impl_IDtype_ITPatternVariableE
	.globl	_ZTVN2kc29impl_IDtype_ITPatternVariableE
	.p2align	3, 0x0
_ZTVN2kc29impl_IDtype_ITPatternVariableE:
	.dword	0
	.dword	_ZTIN2kc29impl_IDtype_ITPatternVariableE
	.dword	_ZNK2kc29impl_IDtype_ITPatternVariable8prod_selEv
	.dword	_ZNK2kc29impl_IDtype_ITPatternVariable9subphylumEi
	.dword	_ZN2kc29impl_IDtype_ITPatternVariable13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc29impl_IDtype_ITPatternVariable7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc29impl_IDtype_ITPatternVariableD0Ev
	.dword	_ZN2kc29impl_IDtype_ITPatternVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc29impl_IDtype_ITPatternVariableE, 104

	.type	_ZTVN2kc26impl_IDtype_ITUserFunctionE,@object # @_ZTVN2kc26impl_IDtype_ITUserFunctionE
	.globl	_ZTVN2kc26impl_IDtype_ITUserFunctionE
	.p2align	3, 0x0
_ZTVN2kc26impl_IDtype_ITUserFunctionE:
	.dword	0
	.dword	_ZTIN2kc26impl_IDtype_ITUserFunctionE
	.dword	_ZNK2kc26impl_IDtype_ITUserFunction8prod_selEv
	.dword	_ZNK2kc26impl_IDtype_ITUserFunction9subphylumEi
	.dword	_ZN2kc26impl_IDtype_ITUserFunction13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc26impl_IDtype_ITUserFunction7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc26impl_IDtype_ITUserFunctionD0Ev
	.dword	_ZN2kc26impl_IDtype_ITUserFunction10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc26impl_IDtype_ITUserFunctionE, 104

	.type	_ZTVN2kc26impl_IDtype_ITUserOperatorE,@object # @_ZTVN2kc26impl_IDtype_ITUserOperatorE
	.globl	_ZTVN2kc26impl_IDtype_ITUserOperatorE
	.p2align	3, 0x0
_ZTVN2kc26impl_IDtype_ITUserOperatorE:
	.dword	0
	.dword	_ZTIN2kc26impl_IDtype_ITUserOperatorE
	.dword	_ZNK2kc26impl_IDtype_ITUserOperator8prod_selEv
	.dword	_ZNK2kc26impl_IDtype_ITUserOperator9subphylumEi
	.dword	_ZN2kc26impl_IDtype_ITUserOperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc26impl_IDtype_ITUserOperator7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc26impl_IDtype_ITUserOperatorD0Ev
	.dword	_ZN2kc26impl_IDtype_ITUserOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc26impl_IDtype_ITUserOperatorE, 104

	.type	_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE,@object # @_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE
	.globl	_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE
	.p2align	3, 0x0
_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE:
	.dword	0
	.dword	_ZTIN2kc32impl_IDtype_ITPredefinedOperatorE
	.dword	_ZNK2kc32impl_IDtype_ITPredefinedOperator8prod_selEv
	.dword	_ZNK2kc32impl_IDtype_ITPredefinedOperator9subphylumEi
	.dword	_ZN2kc32impl_IDtype_ITPredefinedOperator13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_IDtype_ITPredefinedOperator7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_IDtype_ITPredefinedOperatorD0Ev
	.dword	_ZN2kc32impl_IDtype_ITPredefinedOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc32impl_IDtype_ITPredefinedOperatorE, 104

	.type	_ZTVN2kc24impl_IDtype_ITUserPhylumE,@object # @_ZTVN2kc24impl_IDtype_ITUserPhylumE
	.globl	_ZTVN2kc24impl_IDtype_ITUserPhylumE
	.p2align	3, 0x0
_ZTVN2kc24impl_IDtype_ITUserPhylumE:
	.dword	0
	.dword	_ZTIN2kc24impl_IDtype_ITUserPhylumE
	.dword	_ZNK2kc24impl_IDtype_ITUserPhylum8prod_selEv
	.dword	_ZNK2kc24impl_IDtype_ITUserPhylum9subphylumEi
	.dword	_ZN2kc24impl_IDtype_ITUserPhylum13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_IDtype_ITUserPhylum7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_IDtype_ITUserPhylumD0Ev
	.dword	_ZN2kc24impl_IDtype_ITUserPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc24impl_IDtype_ITUserPhylumE, 104

	.type	_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE,@object # @_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE
	.globl	_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE
	.p2align	3, 0x0
_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE:
	.dword	0
	.dword	_ZTIN2kc30impl_IDtype_ITPredefinedPhylumE
	.dword	_ZNK2kc30impl_IDtype_ITPredefinedPhylum8prod_selEv
	.dword	_ZNK2kc30impl_IDtype_ITPredefinedPhylum9subphylumEi
	.dword	_ZN2kc30impl_IDtype_ITPredefinedPhylum13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc30impl_IDtype_ITPredefinedPhylum7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc30impl_IDtype_ITPredefinedPhylumD0Ev
	.dword	_ZN2kc30impl_IDtype_ITPredefinedPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc30impl_IDtype_ITPredefinedPhylumE, 104

	.type	_ZN2kc14impl_operators11phylum_sel_E,@object # @_ZN2kc14impl_operators11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc14impl_operators11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc14impl_operators11phylum_sel_E:
	.word	80                              # 0x50
	.size	_ZN2kc14impl_operators11phylum_sel_E, 4

	.type	_ZTVN2kc14impl_operatorsE,@object # @_ZTVN2kc14impl_operatorsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc14impl_operatorsE
	.p2align	3, 0x0
_ZTVN2kc14impl_operatorsE:
	.dword	0
	.dword	_ZTIN2kc14impl_operatorsE
	.dword	_ZNK2kc14impl_operators8prod_selEv
	.dword	_ZNK2kc14impl_operators9subphylumEi
	.dword	_ZN2kc14impl_operators13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc14impl_operators7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc14impl_operatorsD0Ev
	.dword	_ZN2kc14impl_operators10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc14impl_operators6is_nilEv
	.dword	_ZNK2kc14impl_operators7reverseEv
	.size	_ZTVN2kc14impl_operatorsE, 120

	.type	_ZN2kc10impl_phyla11phylum_sel_E,@object # @_ZN2kc10impl_phyla11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc10impl_phyla11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc10impl_phyla11phylum_sel_E:
	.word	81                              # 0x51
	.size	_ZN2kc10impl_phyla11phylum_sel_E, 4

	.type	_ZTVN2kc10impl_phylaE,@object   # @_ZTVN2kc10impl_phylaE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc10impl_phylaE
	.p2align	3, 0x0
_ZTVN2kc10impl_phylaE:
	.dword	0
	.dword	_ZTIN2kc10impl_phylaE
	.dword	_ZNK2kc10impl_phyla8prod_selEv
	.dword	_ZNK2kc10impl_phyla9subphylumEi
	.dword	_ZN2kc10impl_phyla13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc10impl_phyla7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc10impl_phylaD0Ev
	.dword	_ZN2kc10impl_phyla10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc10impl_phyla6is_nilEv
	.dword	_ZNK2kc10impl_phyla7reverseEv
	.size	_ZTVN2kc10impl_phylaE, 120

	.type	_ZN2kc14impl_variables11phylum_sel_E,@object # @_ZN2kc14impl_variables11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc14impl_variables11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc14impl_variables11phylum_sel_E:
	.word	82                              # 0x52
	.size	_ZN2kc14impl_variables11phylum_sel_E, 4

	.type	_ZTVN2kc14impl_variablesE,@object # @_ZTVN2kc14impl_variablesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc14impl_variablesE
	.p2align	3, 0x0
_ZTVN2kc14impl_variablesE:
	.dword	0
	.dword	_ZTIN2kc14impl_variablesE
	.dword	_ZNK2kc14impl_variables8prod_selEv
	.dword	_ZNK2kc14impl_variables9subphylumEi
	.dword	_ZN2kc14impl_variables13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc14impl_variables7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc14impl_variablesD0Ev
	.dword	_ZN2kc14impl_variables10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc14impl_variables6is_nilEv
	.dword	_ZNK2kc14impl_variables7reverseEv
	.size	_ZTVN2kc14impl_variablesE, 120

	.type	_ZN2kc20impl_dollarvarstatus11phylum_sel_E,@object # @_ZN2kc20impl_dollarvarstatus11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc20impl_dollarvarstatus11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc20impl_dollarvarstatus11phylum_sel_E:
	.word	83                              # 0x53
	.size	_ZN2kc20impl_dollarvarstatus11phylum_sel_E, 4

	.type	_ZN2kc12impl_tribool11phylum_sel_E,@object # @_ZN2kc12impl_tribool11phylum_sel_E
	.globl	_ZN2kc12impl_tribool11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc12impl_tribool11phylum_sel_E:
	.word	84                              # 0x54
	.size	_ZN2kc12impl_tribool11phylum_sel_E, 4

	.type	_ZN2kc27impl_patternrepresentations11phylum_sel_E,@object # @_ZN2kc27impl_patternrepresentations11phylum_sel_E
	.globl	_ZN2kc27impl_patternrepresentations11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_patternrepresentations11phylum_sel_E:
	.word	85                              # 0x55
	.size	_ZN2kc27impl_patternrepresentations11phylum_sel_E, 4

	.type	_ZTVN2kc27impl_patternrepresentationsE,@object # @_ZTVN2kc27impl_patternrepresentationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc27impl_patternrepresentationsE
	.p2align	3, 0x0
_ZTVN2kc27impl_patternrepresentationsE:
	.dword	0
	.dword	_ZTIN2kc27impl_patternrepresentationsE
	.dword	_ZNK2kc27impl_patternrepresentations8prod_selEv
	.dword	_ZNK2kc27impl_patternrepresentations9subphylumEi
	.dword	_ZN2kc27impl_patternrepresentations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc27impl_patternrepresentations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc27impl_patternrepresentationsD0Ev
	.dword	_ZN2kc27impl_patternrepresentations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc27impl_patternrepresentations6is_nilEv
	.dword	_ZNK2kc27impl_patternrepresentations7reverseEv
	.size	_ZTVN2kc27impl_patternrepresentationsE, 120

	.type	_ZN2kc26impl_patternrepresentation11phylum_sel_E,@object # @_ZN2kc26impl_patternrepresentation11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc26impl_patternrepresentation11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc26impl_patternrepresentation11phylum_sel_E:
	.word	86                              # 0x56
	.size	_ZN2kc26impl_patternrepresentation11phylum_sel_E, 4

	.type	_ZTVN2kc26impl_patternrepresentationE,@object # @_ZTVN2kc26impl_patternrepresentationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc26impl_patternrepresentationE
	.p2align	3, 0x0
_ZTVN2kc26impl_patternrepresentationE:
	.dword	0
	.dword	_ZTIN2kc26impl_patternrepresentationE
	.dword	_ZNK2kc26impl_patternrepresentation8prod_selEv
	.dword	_ZNK2kc26impl_patternrepresentation9subphylumEi
	.dword	_ZN2kc26impl_patternrepresentation13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc26impl_patternrepresentation7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc26impl_patternrepresentationD0Ev
	.dword	_ZN2kc26impl_patternrepresentation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc26impl_patternrepresentation6is_nilEv
	.dword	_ZNK2kc26impl_patternrepresentation7reverseEv
	.size	_ZTVN2kc26impl_patternrepresentationE, 120

	.type	_ZN2kc31impl_elem_patternrepresentation11phylum_sel_E,@object # @_ZN2kc31impl_elem_patternrepresentation11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc31impl_elem_patternrepresentation11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc31impl_elem_patternrepresentation11phylum_sel_E:
	.word	87                              # 0x57
	.size	_ZN2kc31impl_elem_patternrepresentation11phylum_sel_E, 4

	.type	_ZTVN2kc44impl_elem_patternrepresentation_PRIntLiteralE,@object # @_ZTVN2kc44impl_elem_patternrepresentation_PRIntLiteralE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc44impl_elem_patternrepresentation_PRIntLiteralE
	.p2align	3, 0x0
_ZTVN2kc44impl_elem_patternrepresentation_PRIntLiteralE:
	.dword	0
	.dword	_ZTIN2kc44impl_elem_patternrepresentation_PRIntLiteralE
	.dword	_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral8prod_selEv
	.dword	_ZNK2kc44impl_elem_patternrepresentation_PRIntLiteral9subphylumEi
	.dword	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralD0Ev
	.dword	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc44impl_elem_patternrepresentation_PRIntLiteralE, 104

	.type	_ZTVN2kc47impl_elem_patternrepresentation_PRStringLiteralE,@object # @_ZTVN2kc47impl_elem_patternrepresentation_PRStringLiteralE
	.globl	_ZTVN2kc47impl_elem_patternrepresentation_PRStringLiteralE
	.p2align	3, 0x0
_ZTVN2kc47impl_elem_patternrepresentation_PRStringLiteralE:
	.dword	0
	.dword	_ZTIN2kc47impl_elem_patternrepresentation_PRStringLiteralE
	.dword	_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral8prod_selEv
	.dword	_ZNK2kc47impl_elem_patternrepresentation_PRStringLiteral9subphylumEi
	.dword	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralD0Ev
	.dword	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc47impl_elem_patternrepresentation_PRStringLiteralE, 104

	.type	_ZTVN2kc42impl_elem_patternrepresentation_PRWildcardE,@object # @_ZTVN2kc42impl_elem_patternrepresentation_PRWildcardE
	.globl	_ZTVN2kc42impl_elem_patternrepresentation_PRWildcardE
	.p2align	3, 0x0
_ZTVN2kc42impl_elem_patternrepresentation_PRWildcardE:
	.dword	0
	.dword	_ZTIN2kc42impl_elem_patternrepresentation_PRWildcardE
	.dword	_ZNK2kc42impl_elem_patternrepresentation_PRWildcard8prod_selEv
	.dword	_ZNK2kc42impl_elem_patternrepresentation_PRWildcard9subphylumEi
	.dword	_ZN2kc42impl_elem_patternrepresentation_PRWildcard13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc42impl_elem_patternrepresentation_PRWildcard7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc42impl_elem_patternrepresentation_PRWildcardD0Ev
	.dword	_ZN2kc42impl_elem_patternrepresentation_PRWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc42impl_elem_patternrepresentation_PRWildcardE, 104

	.type	_ZTVN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE,@object # @_ZTVN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
	.globl	_ZTVN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
	.p2align	3, 0x0
_ZTVN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE:
	.dword	0
	.dword	_ZTIN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
	.dword	_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding8prod_selEv
	.dword	_ZNK2kc48impl_elem_patternrepresentation_PRNonLeafBinding9subphylumEi
	.dword	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingD0Ev
	.dword	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE, 104

	.type	_ZTVN2kc47impl_elem_patternrepresentation_PRUserPredicateE,@object # @_ZTVN2kc47impl_elem_patternrepresentation_PRUserPredicateE
	.globl	_ZTVN2kc47impl_elem_patternrepresentation_PRUserPredicateE
	.p2align	3, 0x0
_ZTVN2kc47impl_elem_patternrepresentation_PRUserPredicateE:
	.dword	0
	.dword	_ZTIN2kc47impl_elem_patternrepresentation_PRUserPredicateE
	.dword	_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate8prod_selEv
	.dword	_ZNK2kc47impl_elem_patternrepresentation_PRUserPredicate9subphylumEi
	.dword	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateD0Ev
	.dword	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc47impl_elem_patternrepresentation_PRUserPredicateE, 104

	.type	_ZTVN2kc47impl_elem_patternrepresentation_PROperPredicateE,@object # @_ZTVN2kc47impl_elem_patternrepresentation_PROperPredicateE
	.globl	_ZTVN2kc47impl_elem_patternrepresentation_PROperPredicateE
	.p2align	3, 0x0
_ZTVN2kc47impl_elem_patternrepresentation_PROperPredicateE:
	.dword	0
	.dword	_ZTIN2kc47impl_elem_patternrepresentation_PROperPredicateE
	.dword	_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate8prod_selEv
	.dword	_ZNK2kc47impl_elem_patternrepresentation_PROperPredicate9subphylumEi
	.dword	_ZN2kc47impl_elem_patternrepresentation_PROperPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc47impl_elem_patternrepresentation_PROperPredicate7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc47impl_elem_patternrepresentation_PROperPredicateD0Ev
	.dword	_ZN2kc47impl_elem_patternrepresentation_PROperPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc47impl_elem_patternrepresentation_PROperPredicateE, 104

	.type	_ZTVN2kc46impl_elem_patternrepresentation_PRVarPredicateE,@object # @_ZTVN2kc46impl_elem_patternrepresentation_PRVarPredicateE
	.globl	_ZTVN2kc46impl_elem_patternrepresentation_PRVarPredicateE
	.p2align	3, 0x0
_ZTVN2kc46impl_elem_patternrepresentation_PRVarPredicateE:
	.dword	0
	.dword	_ZTIN2kc46impl_elem_patternrepresentation_PRVarPredicateE
	.dword	_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate8prod_selEv
	.dword	_ZNK2kc46impl_elem_patternrepresentation_PRVarPredicate9subphylumEi
	.dword	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateD0Ev
	.dword	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc46impl_elem_patternrepresentation_PRVarPredicateE, 104

	.type	_ZTVN2kc41impl_elem_patternrepresentation_PRBindingE,@object # @_ZTVN2kc41impl_elem_patternrepresentation_PRBindingE
	.globl	_ZTVN2kc41impl_elem_patternrepresentation_PRBindingE
	.p2align	3, 0x0
_ZTVN2kc41impl_elem_patternrepresentation_PRBindingE:
	.dword	0
	.dword	_ZTIN2kc41impl_elem_patternrepresentation_PRBindingE
	.dword	_ZNK2kc41impl_elem_patternrepresentation_PRBinding8prod_selEv
	.dword	_ZNK2kc41impl_elem_patternrepresentation_PRBinding9subphylumEi
	.dword	_ZN2kc41impl_elem_patternrepresentation_PRBinding13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc41impl_elem_patternrepresentation_PRBinding7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc41impl_elem_patternrepresentation_PRBindingD0Ev
	.dword	_ZN2kc41impl_elem_patternrepresentation_PRBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc41impl_elem_patternrepresentation_PRBindingE, 104

	.type	_ZN2kc9impl_path11phylum_sel_E,@object # @_ZN2kc9impl_path11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc9impl_path11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc9impl_path11phylum_sel_E:
	.word	88                              # 0x58
	.size	_ZN2kc9impl_path11phylum_sel_E, 4

	.type	_ZTVN2kc9impl_pathE,@object     # @_ZTVN2kc9impl_pathE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc9impl_pathE
	.p2align	3, 0x0
_ZTVN2kc9impl_pathE:
	.dword	0
	.dword	_ZTIN2kc9impl_pathE
	.dword	_ZNK2kc9impl_path8prod_selEv
	.dword	_ZNK2kc9impl_path9subphylumEi
	.dword	_ZN2kc9impl_path13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc9impl_path7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc9impl_pathD0Ev
	.dword	_ZN2kc9impl_path10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc9impl_path6is_nilEv
	.dword	_ZNK2kc9impl_path7reverseEv
	.size	_ZTVN2kc9impl_pathE, 120

	.type	_ZN2kc10impl_paths11phylum_sel_E,@object # @_ZN2kc10impl_paths11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc10impl_paths11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc10impl_paths11phylum_sel_E:
	.word	89                              # 0x59
	.size	_ZN2kc10impl_paths11phylum_sel_E, 4

	.type	_ZTVN2kc10impl_pathsE,@object   # @_ZTVN2kc10impl_pathsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc10impl_pathsE
	.p2align	3, 0x0
_ZTVN2kc10impl_pathsE:
	.dword	0
	.dword	_ZTIN2kc10impl_pathsE
	.dword	_ZNK2kc10impl_paths8prod_selEv
	.dword	_ZNK2kc10impl_paths9subphylumEi
	.dword	_ZN2kc10impl_paths13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc10impl_paths7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc10impl_pathsD0Ev
	.dword	_ZN2kc10impl_paths10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc10impl_paths6is_nilEv
	.dword	_ZNK2kc10impl_paths7reverseEv
	.size	_ZTVN2kc10impl_pathsE, 120

	.type	_ZN2kc16impl_argsnumbers11phylum_sel_E,@object # @_ZN2kc16impl_argsnumbers11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc16impl_argsnumbers11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc16impl_argsnumbers11phylum_sel_E:
	.word	90                              # 0x5a
	.size	_ZN2kc16impl_argsnumbers11phylum_sel_E, 4

	.type	_ZTVN2kc16impl_argsnumbersE,@object # @_ZTVN2kc16impl_argsnumbersE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc16impl_argsnumbersE
	.p2align	3, 0x0
_ZTVN2kc16impl_argsnumbersE:
	.dword	0
	.dword	_ZTIN2kc16impl_argsnumbersE
	.dword	_ZNK2kc16impl_argsnumbers8prod_selEv
	.dword	_ZNK2kc16impl_argsnumbers9subphylumEi
	.dword	_ZN2kc16impl_argsnumbers13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc16impl_argsnumbers7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc16impl_argsnumbersD0Ev
	.dword	_ZN2kc16impl_argsnumbers10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc16impl_argsnumbers6is_nilEv
	.dword	_ZNK2kc16impl_argsnumbers7reverseEv
	.size	_ZTVN2kc16impl_argsnumbersE, 120

	.type	_ZN2kc21impl_rewriterulesinfo11phylum_sel_E,@object # @_ZN2kc21impl_rewriterulesinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc21impl_rewriterulesinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc21impl_rewriterulesinfo11phylum_sel_E:
	.word	91                              # 0x5b
	.size	_ZN2kc21impl_rewriterulesinfo11phylum_sel_E, 4

	.type	_ZTVN2kc21impl_rewriterulesinfoE,@object # @_ZTVN2kc21impl_rewriterulesinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc21impl_rewriterulesinfoE
	.p2align	3, 0x0
_ZTVN2kc21impl_rewriterulesinfoE:
	.dword	0
	.dword	_ZTIN2kc21impl_rewriterulesinfoE
	.dword	_ZNK2kc21impl_rewriterulesinfo8prod_selEv
	.dword	_ZNK2kc21impl_rewriterulesinfo9subphylumEi
	.dword	_ZN2kc21impl_rewriterulesinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_rewriterulesinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_rewriterulesinfoD0Ev
	.dword	_ZN2kc21impl_rewriterulesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc21impl_rewriterulesinfo6is_nilEv
	.dword	_ZNK2kc21impl_rewriterulesinfo7reverseEv
	.size	_ZTVN2kc21impl_rewriterulesinfoE, 120

	.type	_ZN2kc20impl_rewriteruleinfo11phylum_sel_E,@object # @_ZN2kc20impl_rewriteruleinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc20impl_rewriteruleinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc20impl_rewriteruleinfo11phylum_sel_E:
	.word	92                              # 0x5c
	.size	_ZN2kc20impl_rewriteruleinfo11phylum_sel_E, 4

	.type	_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE,@object # @_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE
	.p2align	3, 0x0
_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE:
	.dword	0
	.dword	_ZTIN2kc36impl_rewriteruleinfo_RewriteruleinfoE
	.dword	_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo8prod_selEv
	.dword	_ZNK2kc36impl_rewriteruleinfo_Rewriteruleinfo9subphylumEi
	.dword	_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoD0Ev
	.dword	_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc36impl_rewriteruleinfo_RewriteruleinfoE, 104

	.type	_ZN2kc18impl_withcasesinfo11phylum_sel_E,@object # @_ZN2kc18impl_withcasesinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_withcasesinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_withcasesinfo11phylum_sel_E:
	.word	93                              # 0x5d
	.size	_ZN2kc18impl_withcasesinfo11phylum_sel_E, 4

	.type	_ZTVN2kc18impl_withcasesinfoE,@object # @_ZTVN2kc18impl_withcasesinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc18impl_withcasesinfoE
	.p2align	3, 0x0
_ZTVN2kc18impl_withcasesinfoE:
	.dword	0
	.dword	_ZTIN2kc18impl_withcasesinfoE
	.dword	_ZNK2kc18impl_withcasesinfo8prod_selEv
	.dword	_ZNK2kc18impl_withcasesinfo9subphylumEi
	.dword	_ZN2kc18impl_withcasesinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc18impl_withcasesinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc18impl_withcasesinfoD0Ev
	.dword	_ZN2kc18impl_withcasesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc18impl_withcasesinfo6is_nilEv
	.dword	_ZNK2kc18impl_withcasesinfo7reverseEv
	.size	_ZTVN2kc18impl_withcasesinfoE, 120

	.type	_ZN2kc17impl_withcaseinfo11phylum_sel_E,@object # @_ZN2kc17impl_withcaseinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc17impl_withcaseinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc17impl_withcaseinfo11phylum_sel_E:
	.word	94                              # 0x5e
	.size	_ZN2kc17impl_withcaseinfo11phylum_sel_E, 4

	.type	_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE,@object # @_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE
	.p2align	3, 0x0
_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE:
	.dword	0
	.dword	_ZTIN2kc30impl_withcaseinfo_WithcaseinfoE
	.dword	_ZNK2kc30impl_withcaseinfo_Withcaseinfo8prod_selEv
	.dword	_ZNK2kc30impl_withcaseinfo_Withcaseinfo9subphylumEi
	.dword	_ZN2kc30impl_withcaseinfo_Withcaseinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc30impl_withcaseinfo_Withcaseinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc30impl_withcaseinfo_WithcaseinfoD0Ev
	.dword	_ZN2kc30impl_withcaseinfo_Withcaseinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc30impl_withcaseinfo_WithcaseinfoE, 104

	.type	_ZN2kc21impl_rewriteviewsinfo11phylum_sel_E,@object # @_ZN2kc21impl_rewriteviewsinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc21impl_rewriteviewsinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc21impl_rewriteviewsinfo11phylum_sel_E:
	.word	95                              # 0x5f
	.size	_ZN2kc21impl_rewriteviewsinfo11phylum_sel_E, 4

	.type	_ZTVN2kc21impl_rewriteviewsinfoE,@object # @_ZTVN2kc21impl_rewriteviewsinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc21impl_rewriteviewsinfoE
	.p2align	3, 0x0
_ZTVN2kc21impl_rewriteviewsinfoE:
	.dword	0
	.dword	_ZTIN2kc21impl_rewriteviewsinfoE
	.dword	_ZNK2kc21impl_rewriteviewsinfo8prod_selEv
	.dword	_ZNK2kc21impl_rewriteviewsinfo9subphylumEi
	.dword	_ZN2kc21impl_rewriteviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_rewriteviewsinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_rewriteviewsinfoD0Ev
	.dword	_ZN2kc21impl_rewriteviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc21impl_rewriteviewsinfo6is_nilEv
	.dword	_ZNK2kc21impl_rewriteviewsinfo7reverseEv
	.size	_ZTVN2kc21impl_rewriteviewsinfoE, 120

	.type	_ZN2kc20impl_rewriteviewinfo11phylum_sel_E,@object # @_ZN2kc20impl_rewriteviewinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc20impl_rewriteviewinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc20impl_rewriteviewinfo11phylum_sel_E:
	.word	96                              # 0x60
	.size	_ZN2kc20impl_rewriteviewinfo11phylum_sel_E, 4

	.type	_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE,@object # @_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE
	.p2align	3, 0x0
_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE:
	.dword	0
	.dword	_ZTIN2kc36impl_rewriteviewinfo_RewriteviewinfoE
	.dword	_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo8prod_selEv
	.dword	_ZNK2kc36impl_rewriteviewinfo_Rewriteviewinfo9subphylumEi
	.dword	_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoD0Ev
	.dword	_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc36impl_rewriteviewinfo_RewriteviewinfoE, 104

	.type	_ZN2kc21impl_unparseviewsinfo11phylum_sel_E,@object # @_ZN2kc21impl_unparseviewsinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc21impl_unparseviewsinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc21impl_unparseviewsinfo11phylum_sel_E:
	.word	97                              # 0x61
	.size	_ZN2kc21impl_unparseviewsinfo11phylum_sel_E, 4

	.type	_ZTVN2kc21impl_unparseviewsinfoE,@object # @_ZTVN2kc21impl_unparseviewsinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc21impl_unparseviewsinfoE
	.p2align	3, 0x0
_ZTVN2kc21impl_unparseviewsinfoE:
	.dword	0
	.dword	_ZTIN2kc21impl_unparseviewsinfoE
	.dword	_ZNK2kc21impl_unparseviewsinfo8prod_selEv
	.dword	_ZNK2kc21impl_unparseviewsinfo9subphylumEi
	.dword	_ZN2kc21impl_unparseviewsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_unparseviewsinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_unparseviewsinfoD0Ev
	.dword	_ZN2kc21impl_unparseviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc21impl_unparseviewsinfo6is_nilEv
	.dword	_ZNK2kc21impl_unparseviewsinfo7reverseEv
	.size	_ZTVN2kc21impl_unparseviewsinfoE, 120

	.type	_ZN2kc20impl_unparseviewinfo11phylum_sel_E,@object # @_ZN2kc20impl_unparseviewinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc20impl_unparseviewinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc20impl_unparseviewinfo11phylum_sel_E:
	.word	98                              # 0x62
	.size	_ZN2kc20impl_unparseviewinfo11phylum_sel_E, 4

	.type	_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE,@object # @_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE
	.p2align	3, 0x0
_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE:
	.dword	0
	.dword	_ZTIN2kc36impl_unparseviewinfo_UnparseviewinfoE
	.dword	_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo8prod_selEv
	.dword	_ZNK2kc36impl_unparseviewinfo_Unparseviewinfo9subphylumEi
	.dword	_ZN2kc36impl_unparseviewinfo_Unparseviewinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc36impl_unparseviewinfo_Unparseviewinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc36impl_unparseviewinfo_UnparseviewinfoD0Ev
	.dword	_ZN2kc36impl_unparseviewinfo_Unparseviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc36impl_unparseviewinfo_UnparseviewinfoE, 104

	.type	_ZN2kc21impl_unparsedeclsinfo11phylum_sel_E,@object # @_ZN2kc21impl_unparsedeclsinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc21impl_unparsedeclsinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc21impl_unparsedeclsinfo11phylum_sel_E:
	.word	99                              # 0x63
	.size	_ZN2kc21impl_unparsedeclsinfo11phylum_sel_E, 4

	.type	_ZTVN2kc21impl_unparsedeclsinfoE,@object # @_ZTVN2kc21impl_unparsedeclsinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc21impl_unparsedeclsinfoE
	.p2align	3, 0x0
_ZTVN2kc21impl_unparsedeclsinfoE:
	.dword	0
	.dword	_ZTIN2kc21impl_unparsedeclsinfoE
	.dword	_ZNK2kc21impl_unparsedeclsinfo8prod_selEv
	.dword	_ZNK2kc21impl_unparsedeclsinfo9subphylumEi
	.dword	_ZN2kc21impl_unparsedeclsinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_unparsedeclsinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_unparsedeclsinfoD0Ev
	.dword	_ZN2kc21impl_unparsedeclsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc21impl_unparsedeclsinfo6is_nilEv
	.dword	_ZNK2kc21impl_unparsedeclsinfo7reverseEv
	.size	_ZTVN2kc21impl_unparsedeclsinfoE, 120

	.type	_ZN2kc20impl_unparsedeclinfo11phylum_sel_E,@object # @_ZN2kc20impl_unparsedeclinfo11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc20impl_unparsedeclinfo11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc20impl_unparsedeclinfo11phylum_sel_E:
	.word	100                             # 0x64
	.size	_ZN2kc20impl_unparsedeclinfo11phylum_sel_E, 4

	.type	_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE,@object # @_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
	.p2align	3, 0x0
_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE:
	.dword	0
	.dword	_ZTIN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
	.dword	_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo8prod_selEv
	.dword	_ZNK2kc36impl_unparsedeclinfo_Unparsedeclinfo9subphylumEi
	.dword	_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoD0Ev
	.dword	_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc36impl_unparsedeclinfo_UnparsedeclinfoE, 104

	.type	_ZN2kc19impl_ac_declaration11phylum_sel_E,@object # @_ZN2kc19impl_ac_declaration11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_ac_declaration11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_ac_declaration11phylum_sel_E:
	.word	101                             # 0x65
	.size	_ZN2kc19impl_ac_declaration11phylum_sel_E, 4

	.type	_ZTVN2kc33impl_ac_declaration_AcDeclarationE,@object # @_ZTVN2kc33impl_ac_declaration_AcDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc33impl_ac_declaration_AcDeclarationE
	.p2align	3, 0x0
_ZTVN2kc33impl_ac_declaration_AcDeclarationE:
	.dword	0
	.dword	_ZTIN2kc33impl_ac_declaration_AcDeclarationE
	.dword	_ZNK2kc33impl_ac_declaration_AcDeclaration8prod_selEv
	.dword	_ZNK2kc33impl_ac_declaration_AcDeclaration9subphylumEi
	.dword	_ZN2kc33impl_ac_declaration_AcDeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc33impl_ac_declaration_AcDeclaration7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc33impl_ac_declaration_AcDeclarationD0Ev
	.dword	_ZN2kc33impl_ac_declaration_AcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc33impl_ac_declaration_AcDeclarationE, 104

	.type	_ZN2kc24impl_ac_declaration_list11phylum_sel_E,@object # @_ZN2kc24impl_ac_declaration_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc24impl_ac_declaration_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc24impl_ac_declaration_list11phylum_sel_E:
	.word	102                             # 0x66
	.size	_ZN2kc24impl_ac_declaration_list11phylum_sel_E, 4

	.type	_ZTVN2kc24impl_ac_declaration_listE,@object # @_ZTVN2kc24impl_ac_declaration_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc24impl_ac_declaration_listE
	.p2align	3, 0x0
_ZTVN2kc24impl_ac_declaration_listE:
	.dword	0
	.dword	_ZTIN2kc24impl_ac_declaration_listE
	.dword	_ZNK2kc24impl_ac_declaration_list8prod_selEv
	.dword	_ZNK2kc24impl_ac_declaration_list9subphylumEi
	.dword	_ZN2kc24impl_ac_declaration_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_ac_declaration_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_ac_declaration_listD0Ev
	.dword	_ZN2kc24impl_ac_declaration_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc24impl_ac_declaration_list6is_nilEv
	.dword	_ZNK2kc24impl_ac_declaration_list7reverseEv
	.size	_ZTVN2kc24impl_ac_declaration_listE, 120

	.type	_ZN2kc30impl_ac_declaration_specifiers11phylum_sel_E,@object # @_ZN2kc30impl_ac_declaration_specifiers11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc30impl_ac_declaration_specifiers11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc30impl_ac_declaration_specifiers11phylum_sel_E:
	.word	103                             # 0x67
	.size	_ZN2kc30impl_ac_declaration_specifiers11phylum_sel_E, 4

	.type	_ZTVN2kc30impl_ac_declaration_specifiersE,@object # @_ZTVN2kc30impl_ac_declaration_specifiersE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc30impl_ac_declaration_specifiersE
	.p2align	3, 0x0
_ZTVN2kc30impl_ac_declaration_specifiersE:
	.dword	0
	.dword	_ZTIN2kc30impl_ac_declaration_specifiersE
	.dword	_ZNK2kc30impl_ac_declaration_specifiers8prod_selEv
	.dword	_ZNK2kc30impl_ac_declaration_specifiers9subphylumEi
	.dword	_ZN2kc30impl_ac_declaration_specifiers13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc30impl_ac_declaration_specifiers7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc30impl_ac_declaration_specifiersD0Ev
	.dword	_ZN2kc30impl_ac_declaration_specifiers10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc30impl_ac_declaration_specifiers6is_nilEv
	.dword	_ZNK2kc30impl_ac_declaration_specifiers7reverseEv
	.size	_ZTVN2kc30impl_ac_declaration_specifiersE, 120

	.type	_ZN2kc29impl_ac_declaration_specifier11phylum_sel_E,@object # @_ZN2kc29impl_ac_declaration_specifier11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc29impl_ac_declaration_specifier11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc29impl_ac_declaration_specifier11phylum_sel_E:
	.word	104                             # 0x68
	.size	_ZN2kc29impl_ac_declaration_specifier11phylum_sel_E, 4

	.type	_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE,@object # @_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
	.p2align	3, 0x0
_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE:
	.dword	0
	.dword	_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
	.dword	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual8prod_selEv
	.dword	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual9subphylumEi
	.dword	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualD0Ev
	.dword	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE, 104

	.type	_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE,@object # @_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
	.globl	_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
	.p2align	3, 0x0
_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE:
	.dword	0
	.dword	_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
	.dword	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec8prod_selEv
	.dword	_ZNK2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec9subphylumEi
	.dword	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecD0Ev
	.dword	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE, 104

	.type	_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE,@object # @_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
	.globl	_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
	.p2align	3, 0x0
_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE:
	.dword	0
	.dword	_ZTIN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
	.dword	_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec8prod_selEv
	.dword	_ZNK2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec9subphylumEi
	.dword	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecD0Ev
	.dword	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE, 104

	.type	_ZN2kc31impl_ac_storage_class_specifier11phylum_sel_E,@object # @_ZN2kc31impl_ac_storage_class_specifier11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc31impl_ac_storage_class_specifier11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc31impl_ac_storage_class_specifier11phylum_sel_E:
	.word	105                             # 0x69
	.size	_ZN2kc31impl_ac_storage_class_specifier11phylum_sel_E, 4

	.type	_ZN2kc22impl_ac_type_specifier11phylum_sel_E,@object # @_ZN2kc22impl_ac_type_specifier11phylum_sel_E
	.globl	_ZN2kc22impl_ac_type_specifier11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc22impl_ac_type_specifier11phylum_sel_E:
	.word	106                             # 0x6a
	.size	_ZN2kc22impl_ac_type_specifier11phylum_sel_E, 4

	.type	_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE,@object # @_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE
	.p2align	3, 0x0
_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE:
	.dword	0
	.dword	_ZTIN2kc33impl_ac_type_specifier_AcTypeSpecE
	.dword	_ZNK2kc33impl_ac_type_specifier_AcTypeSpec8prod_selEv
	.dword	_ZNK2kc33impl_ac_type_specifier_AcTypeSpec9subphylumEi
	.dword	_ZN2kc33impl_ac_type_specifier_AcTypeSpec13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc33impl_ac_type_specifier_AcTypeSpec7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc33impl_ac_type_specifier_AcTypeSpecD0Ev
	.dword	_ZN2kc33impl_ac_type_specifier_AcTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc33impl_ac_type_specifier_AcTypeSpecE, 104

	.type	_ZN2kc22impl_ac_type_qualifier11phylum_sel_E,@object # @_ZN2kc22impl_ac_type_qualifier11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc22impl_ac_type_qualifier11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc22impl_ac_type_qualifier11phylum_sel_E:
	.word	107                             # 0x6b
	.size	_ZN2kc22impl_ac_type_qualifier11phylum_sel_E, 4

	.type	_ZN2kc28impl_ac_init_declarator_list11phylum_sel_E,@object # @_ZN2kc28impl_ac_init_declarator_list11phylum_sel_E
	.globl	_ZN2kc28impl_ac_init_declarator_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc28impl_ac_init_declarator_list11phylum_sel_E:
	.word	108                             # 0x6c
	.size	_ZN2kc28impl_ac_init_declarator_list11phylum_sel_E, 4

	.type	_ZTVN2kc28impl_ac_init_declarator_listE,@object # @_ZTVN2kc28impl_ac_init_declarator_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc28impl_ac_init_declarator_listE
	.p2align	3, 0x0
_ZTVN2kc28impl_ac_init_declarator_listE:
	.dword	0
	.dword	_ZTIN2kc28impl_ac_init_declarator_listE
	.dword	_ZNK2kc28impl_ac_init_declarator_list8prod_selEv
	.dword	_ZNK2kc28impl_ac_init_declarator_list9subphylumEi
	.dword	_ZN2kc28impl_ac_init_declarator_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc28impl_ac_init_declarator_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc28impl_ac_init_declarator_listD0Ev
	.dword	_ZN2kc28impl_ac_init_declarator_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc28impl_ac_init_declarator_list6is_nilEv
	.dword	_ZNK2kc28impl_ac_init_declarator_list7reverseEv
	.size	_ZTVN2kc28impl_ac_init_declarator_listE, 120

	.type	_ZN2kc23impl_ac_init_declarator11phylum_sel_E,@object # @_ZN2kc23impl_ac_init_declarator11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc23impl_ac_init_declarator11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc23impl_ac_init_declarator11phylum_sel_E:
	.word	109                             # 0x6d
	.size	_ZN2kc23impl_ac_init_declarator11phylum_sel_E, 4

	.type	_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE,@object # @_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE
	.p2align	3, 0x0
_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE:
	.dword	0
	.dword	_ZTIN2kc34impl_ac_init_declarator_AcInitDeclE
	.dword	_ZNK2kc34impl_ac_init_declarator_AcInitDecl8prod_selEv
	.dword	_ZNK2kc34impl_ac_init_declarator_AcInitDecl9subphylumEi
	.dword	_ZN2kc34impl_ac_init_declarator_AcInitDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc34impl_ac_init_declarator_AcInitDecl7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc34impl_ac_init_declarator_AcInitDeclD0Ev
	.dword	_ZN2kc34impl_ac_init_declarator_AcInitDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc34impl_ac_init_declarator_AcInitDeclE, 104

	.type	_ZN2kc18impl_ac_declarator11phylum_sel_E,@object # @_ZN2kc18impl_ac_declarator11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_ac_declarator11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_ac_declarator11phylum_sel_E:
	.word	110                             # 0x6e
	.size	_ZN2kc18impl_ac_declarator11phylum_sel_E, 4

	.type	_ZTVN2kc31impl_ac_declarator_AcDeclaratorE,@object # @_ZTVN2kc31impl_ac_declarator_AcDeclaratorE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc31impl_ac_declarator_AcDeclaratorE
	.p2align	3, 0x0
_ZTVN2kc31impl_ac_declarator_AcDeclaratorE:
	.dword	0
	.dword	_ZTIN2kc31impl_ac_declarator_AcDeclaratorE
	.dword	_ZNK2kc31impl_ac_declarator_AcDeclarator8prod_selEv
	.dword	_ZNK2kc31impl_ac_declarator_AcDeclarator9subphylumEi
	.dword	_ZN2kc31impl_ac_declarator_AcDeclarator13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc31impl_ac_declarator_AcDeclarator7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc31impl_ac_declarator_AcDeclaratorD0Ev
	.dword	_ZN2kc31impl_ac_declarator_AcDeclarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc31impl_ac_declarator_AcDeclaratorE, 104

	.type	_ZN2kc25impl_ac_direct_declarator11phylum_sel_E,@object # @_ZN2kc25impl_ac_direct_declarator11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc25impl_ac_direct_declarator11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc25impl_ac_direct_declarator11phylum_sel_E:
	.word	111                             # 0x6f
	.size	_ZN2kc25impl_ac_direct_declarator11phylum_sel_E, 4

	.type	_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE,@object # @_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
	.p2align	3, 0x0
_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE:
	.dword	0
	.dword	_ZTIN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
	.dword	_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId8prod_selEv
	.dword	_ZNK2kc42impl_ac_direct_declarator_AcOperatorDeclId9subphylumEi
	.dword	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdD0Ev
	.dword	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE, 104

	.type	_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE,@object # @_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
	.globl	_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
	.p2align	3, 0x0
_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE:
	.dword	0
	.dword	_ZTIN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
	.dword	_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl8prod_selEv
	.dword	_ZNK2kc44impl_ac_direct_declarator_AcConvOperatorDecl9subphylumEi
	.dword	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclD0Ev
	.dword	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE, 104

	.type	_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE,@object # @_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE
	.globl	_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE
	.p2align	3, 0x0
_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE:
	.dword	0
	.dword	_ZTIN2kc38impl_ac_direct_declarator_AcMemberDeclE
	.dword	_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl8prod_selEv
	.dword	_ZNK2kc38impl_ac_direct_declarator_AcMemberDecl9subphylumEi
	.dword	_ZN2kc38impl_ac_direct_declarator_AcMemberDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc38impl_ac_direct_declarator_AcMemberDecl7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc38impl_ac_direct_declarator_AcMemberDeclD0Ev
	.dword	_ZN2kc38impl_ac_direct_declarator_AcMemberDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc38impl_ac_direct_declarator_AcMemberDeclE, 104

	.type	_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE,@object # @_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
	.globl	_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
	.p2align	3, 0x0
_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE:
	.dword	0
	.dword	_ZTIN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
	.dword	_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto8prod_selEv
	.dword	_ZNK2kc46impl_ac_direct_declarator_AcQualifiedDeclProto9subphylumEi
	.dword	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoD0Ev
	.dword	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE, 104

	.type	_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE,@object # @_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
	.globl	_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
	.p2align	3, 0x0
_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE:
	.dword	0
	.dword	_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
	.dword	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto8prod_selEv
	.dword	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclProto9subphylumEi
	.dword	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoD0Ev
	.dword	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE, 104

	.type	_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE,@object # @_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
	.globl	_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
	.p2align	3, 0x0
_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE:
	.dword	0
	.dword	_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
	.dword	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray8prod_selEv
	.dword	_ZNK2kc43impl_ac_direct_declarator_AcDirectDeclArray9subphylumEi
	.dword	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayD0Ev
	.dword	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE, 104

	.type	_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE,@object # @_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
	.globl	_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
	.p2align	3, 0x0
_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE:
	.dword	0
	.dword	_ZTIN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
	.dword	_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack8prod_selEv
	.dword	_ZNK2kc42impl_ac_direct_declarator_AcDirectDeclPack9subphylumEi
	.dword	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackD0Ev
	.dword	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc42impl_ac_direct_declarator_AcDirectDeclPackE, 104

	.type	_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE,@object # @_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
	.globl	_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
	.p2align	3, 0x0
_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE:
	.dword	0
	.dword	_ZTIN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
	.dword	_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId8prod_selEv
	.dword	_ZNK2kc40impl_ac_direct_declarator_AcDirectDeclId9subphylumEi
	.dword	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdD0Ev
	.dword	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc40impl_ac_direct_declarator_AcDirectDeclIdE, 104

	.type	_ZN2kc22impl_ac_pointer_option11phylum_sel_E,@object # @_ZN2kc22impl_ac_pointer_option11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc22impl_ac_pointer_option11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc22impl_ac_pointer_option11phylum_sel_E:
	.word	112                             # 0x70
	.size	_ZN2kc22impl_ac_pointer_option11phylum_sel_E, 4

	.type	_ZTVN2kc33impl_ac_pointer_option_YespointerE,@object # @_ZTVN2kc33impl_ac_pointer_option_YespointerE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc33impl_ac_pointer_option_YespointerE
	.p2align	3, 0x0
_ZTVN2kc33impl_ac_pointer_option_YespointerE:
	.dword	0
	.dword	_ZTIN2kc33impl_ac_pointer_option_YespointerE
	.dword	_ZNK2kc33impl_ac_pointer_option_Yespointer8prod_selEv
	.dword	_ZNK2kc33impl_ac_pointer_option_Yespointer9subphylumEi
	.dword	_ZN2kc33impl_ac_pointer_option_Yespointer13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc33impl_ac_pointer_option_Yespointer7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc33impl_ac_pointer_option_YespointerD0Ev
	.dword	_ZN2kc33impl_ac_pointer_option_Yespointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc33impl_ac_pointer_option_YespointerE, 104

	.type	_ZN2kc15impl_ac_pointer11phylum_sel_E,@object # @_ZN2kc15impl_ac_pointer11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc15impl_ac_pointer11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc15impl_ac_pointer11phylum_sel_E:
	.word	113                             # 0x71
	.size	_ZN2kc15impl_ac_pointer11phylum_sel_E, 4

	.type	_ZTVN2kc29impl_ac_pointer_AcPointerConsE,@object # @_ZTVN2kc29impl_ac_pointer_AcPointerConsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc29impl_ac_pointer_AcPointerConsE
	.p2align	3, 0x0
_ZTVN2kc29impl_ac_pointer_AcPointerConsE:
	.dword	0
	.dword	_ZTIN2kc29impl_ac_pointer_AcPointerConsE
	.dword	_ZNK2kc29impl_ac_pointer_AcPointerCons8prod_selEv
	.dword	_ZNK2kc29impl_ac_pointer_AcPointerCons9subphylumEi
	.dword	_ZN2kc29impl_ac_pointer_AcPointerCons13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc29impl_ac_pointer_AcPointerCons7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc29impl_ac_pointer_AcPointerConsD0Ev
	.dword	_ZN2kc29impl_ac_pointer_AcPointerCons10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc29impl_ac_pointer_AcPointerConsE, 104

	.type	_ZTVN2kc28impl_ac_pointer_AcPointerNilE,@object # @_ZTVN2kc28impl_ac_pointer_AcPointerNilE
	.globl	_ZTVN2kc28impl_ac_pointer_AcPointerNilE
	.p2align	3, 0x0
_ZTVN2kc28impl_ac_pointer_AcPointerNilE:
	.dword	0
	.dword	_ZTIN2kc28impl_ac_pointer_AcPointerNilE
	.dword	_ZNK2kc28impl_ac_pointer_AcPointerNil8prod_selEv
	.dword	_ZNK2kc28impl_ac_pointer_AcPointerNil9subphylumEi
	.dword	_ZN2kc28impl_ac_pointer_AcPointerNil13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc28impl_ac_pointer_AcPointerNil7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc28impl_ac_pointer_AcPointerNilD0Ev
	.dword	_ZN2kc28impl_ac_pointer_AcPointerNil10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc28impl_ac_pointer_AcPointerNilE, 104

	.type	_ZN2kc18impl_ac_ref_option11phylum_sel_E,@object # @_ZN2kc18impl_ac_ref_option11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_ac_ref_option11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_ac_ref_option11phylum_sel_E:
	.word	114                             # 0x72
	.size	_ZN2kc18impl_ac_ref_option11phylum_sel_E, 4

	.type	_ZN2kc21impl_ac_operator_name11phylum_sel_E,@object # @_ZN2kc21impl_ac_operator_name11phylum_sel_E
	.globl	_ZN2kc21impl_ac_operator_name11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc21impl_ac_operator_name11phylum_sel_E:
	.word	115                             # 0x73
	.size	_ZN2kc21impl_ac_operator_name11phylum_sel_E, 4

	.type	_ZTVN2kc36impl_ac_operator_name_AcOperatorNameE,@object # @_ZTVN2kc36impl_ac_operator_name_AcOperatorNameE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc36impl_ac_operator_name_AcOperatorNameE
	.p2align	3, 0x0
_ZTVN2kc36impl_ac_operator_name_AcOperatorNameE:
	.dword	0
	.dword	_ZTIN2kc36impl_ac_operator_name_AcOperatorNameE
	.dword	_ZNK2kc36impl_ac_operator_name_AcOperatorName8prod_selEv
	.dword	_ZNK2kc36impl_ac_operator_name_AcOperatorName9subphylumEi
	.dword	_ZN2kc36impl_ac_operator_name_AcOperatorName13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc36impl_ac_operator_name_AcOperatorName7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc36impl_ac_operator_name_AcOperatorNameD0Ev
	.dword	_ZN2kc36impl_ac_operator_name_AcOperatorName10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc36impl_ac_operator_name_AcOperatorNameE, 104

	.type	_ZN2kc33impl_ac_class_qualifier_help_list11phylum_sel_E,@object # @_ZN2kc33impl_ac_class_qualifier_help_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc33impl_ac_class_qualifier_help_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc33impl_ac_class_qualifier_help_list11phylum_sel_E:
	.word	116                             # 0x74
	.size	_ZN2kc33impl_ac_class_qualifier_help_list11phylum_sel_E, 4

	.type	_ZTVN2kc33impl_ac_class_qualifier_help_listE,@object # @_ZTVN2kc33impl_ac_class_qualifier_help_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc33impl_ac_class_qualifier_help_listE
	.p2align	3, 0x0
_ZTVN2kc33impl_ac_class_qualifier_help_listE:
	.dword	0
	.dword	_ZTIN2kc33impl_ac_class_qualifier_help_listE
	.dword	_ZNK2kc33impl_ac_class_qualifier_help_list8prod_selEv
	.dword	_ZNK2kc33impl_ac_class_qualifier_help_list9subphylumEi
	.dword	_ZN2kc33impl_ac_class_qualifier_help_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc33impl_ac_class_qualifier_help_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc33impl_ac_class_qualifier_help_listD0Ev
	.dword	_ZN2kc33impl_ac_class_qualifier_help_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc33impl_ac_class_qualifier_help_list6is_nilEv
	.dword	_ZNK2kc33impl_ac_class_qualifier_help_list7reverseEv
	.size	_ZTVN2kc33impl_ac_class_qualifier_help_listE, 120

	.type	_ZN2kc28impl_ac_class_qualifier_list11phylum_sel_E,@object # @_ZN2kc28impl_ac_class_qualifier_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc28impl_ac_class_qualifier_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc28impl_ac_class_qualifier_list11phylum_sel_E:
	.word	117                             # 0x75
	.size	_ZN2kc28impl_ac_class_qualifier_list11phylum_sel_E, 4

	.type	_ZTVN2kc28impl_ac_class_qualifier_listE,@object # @_ZTVN2kc28impl_ac_class_qualifier_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc28impl_ac_class_qualifier_listE
	.p2align	3, 0x0
_ZTVN2kc28impl_ac_class_qualifier_listE:
	.dword	0
	.dword	_ZTIN2kc28impl_ac_class_qualifier_listE
	.dword	_ZNK2kc28impl_ac_class_qualifier_list8prod_selEv
	.dword	_ZNK2kc28impl_ac_class_qualifier_list9subphylumEi
	.dword	_ZN2kc28impl_ac_class_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc28impl_ac_class_qualifier_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc28impl_ac_class_qualifier_listD0Ev
	.dword	_ZN2kc28impl_ac_class_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc28impl_ac_class_qualifier_list6is_nilEv
	.dword	_ZNK2kc28impl_ac_class_qualifier_list7reverseEv
	.size	_ZTVN2kc28impl_ac_class_qualifier_listE, 120

	.type	_ZN2kc27impl_ac_type_qualifier_list11phylum_sel_E,@object # @_ZN2kc27impl_ac_type_qualifier_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc27impl_ac_type_qualifier_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_ac_type_qualifier_list11phylum_sel_E:
	.word	118                             # 0x76
	.size	_ZN2kc27impl_ac_type_qualifier_list11phylum_sel_E, 4

	.type	_ZTVN2kc27impl_ac_type_qualifier_listE,@object # @_ZTVN2kc27impl_ac_type_qualifier_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc27impl_ac_type_qualifier_listE
	.p2align	3, 0x0
_ZTVN2kc27impl_ac_type_qualifier_listE:
	.dword	0
	.dword	_ZTIN2kc27impl_ac_type_qualifier_listE
	.dword	_ZNK2kc27impl_ac_type_qualifier_list8prod_selEv
	.dword	_ZNK2kc27impl_ac_type_qualifier_list9subphylumEi
	.dword	_ZN2kc27impl_ac_type_qualifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc27impl_ac_type_qualifier_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc27impl_ac_type_qualifier_listD0Ev
	.dword	_ZN2kc27impl_ac_type_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc27impl_ac_type_qualifier_list6is_nilEv
	.dword	_ZNK2kc27impl_ac_type_qualifier_list7reverseEv
	.size	_ZTVN2kc27impl_ac_type_qualifier_listE, 120

	.type	_ZN2kc27impl_ac_parameter_type_list11phylum_sel_E,@object # @_ZN2kc27impl_ac_parameter_type_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc27impl_ac_parameter_type_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_ac_parameter_type_list11phylum_sel_E:
	.word	119                             # 0x77
	.size	_ZN2kc27impl_ac_parameter_type_list11phylum_sel_E, 4

	.type	_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE,@object # @_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE
	.p2align	3, 0x0
_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE:
	.dword	0
	.dword	_ZTIN2kc41impl_ac_parameter_type_list_AcParList3DotE
	.dword	_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot8prod_selEv
	.dword	_ZNK2kc41impl_ac_parameter_type_list_AcParList3Dot9subphylumEi
	.dword	_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc41impl_ac_parameter_type_list_AcParList3DotD0Ev
	.dword	_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc41impl_ac_parameter_type_list_AcParList3DotE, 104

	.type	_ZTVN2kc37impl_ac_parameter_type_list_AcParListE,@object # @_ZTVN2kc37impl_ac_parameter_type_list_AcParListE
	.globl	_ZTVN2kc37impl_ac_parameter_type_list_AcParListE
	.p2align	3, 0x0
_ZTVN2kc37impl_ac_parameter_type_list_AcParListE:
	.dword	0
	.dword	_ZTIN2kc37impl_ac_parameter_type_list_AcParListE
	.dword	_ZNK2kc37impl_ac_parameter_type_list_AcParList8prod_selEv
	.dword	_ZNK2kc37impl_ac_parameter_type_list_AcParList9subphylumEi
	.dword	_ZN2kc37impl_ac_parameter_type_list_AcParList13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc37impl_ac_parameter_type_list_AcParList7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc37impl_ac_parameter_type_list_AcParListD0Ev
	.dword	_ZN2kc37impl_ac_parameter_type_list_AcParList10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc37impl_ac_parameter_type_list_AcParListE, 104

	.type	_ZN2kc22impl_ac_parameter_list11phylum_sel_E,@object # @_ZN2kc22impl_ac_parameter_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc22impl_ac_parameter_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc22impl_ac_parameter_list11phylum_sel_E:
	.word	120                             # 0x78
	.size	_ZN2kc22impl_ac_parameter_list11phylum_sel_E, 4

	.type	_ZTVN2kc22impl_ac_parameter_listE,@object # @_ZTVN2kc22impl_ac_parameter_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc22impl_ac_parameter_listE
	.p2align	3, 0x0
_ZTVN2kc22impl_ac_parameter_listE:
	.dword	0
	.dword	_ZTIN2kc22impl_ac_parameter_listE
	.dword	_ZNK2kc22impl_ac_parameter_list8prod_selEv
	.dword	_ZNK2kc22impl_ac_parameter_list9subphylumEi
	.dword	_ZN2kc22impl_ac_parameter_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc22impl_ac_parameter_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc22impl_ac_parameter_listD0Ev
	.dword	_ZN2kc22impl_ac_parameter_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc22impl_ac_parameter_list6is_nilEv
	.dword	_ZNK2kc22impl_ac_parameter_list7reverseEv
	.size	_ZTVN2kc22impl_ac_parameter_listE, 120

	.type	_ZN2kc29impl_ac_parameter_declaration11phylum_sel_E,@object # @_ZN2kc29impl_ac_parameter_declaration11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc29impl_ac_parameter_declaration11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc29impl_ac_parameter_declaration11phylum_sel_E:
	.word	121                             # 0x79
	.size	_ZN2kc29impl_ac_parameter_declaration11phylum_sel_E, 4

	.type	_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE,@object # @_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
	.p2align	3, 0x0
_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE:
	.dword	0
	.dword	_ZTIN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
	.dword	_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl8prod_selEv
	.dword	_ZNK2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl9subphylumEi
	.dword	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclD0Ev
	.dword	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE, 104

	.type	_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE,@object # @_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
	.globl	_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
	.p2align	3, 0x0
_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE:
	.dword	0
	.dword	_ZTIN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
	.dword	_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl8prod_selEv
	.dword	_ZNK2kc43impl_ac_parameter_declaration_AcParDeclDecl9subphylumEi
	.dword	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclD0Ev
	.dword	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc43impl_ac_parameter_declaration_AcParDeclDeclE, 104

	.type	_ZN2kc23impl_ac_identifier_list11phylum_sel_E,@object # @_ZN2kc23impl_ac_identifier_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc23impl_ac_identifier_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc23impl_ac_identifier_list11phylum_sel_E:
	.word	122                             # 0x7a
	.size	_ZN2kc23impl_ac_identifier_list11phylum_sel_E, 4

	.type	_ZTVN2kc23impl_ac_identifier_listE,@object # @_ZTVN2kc23impl_ac_identifier_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc23impl_ac_identifier_listE
	.p2align	3, 0x0
_ZTVN2kc23impl_ac_identifier_listE:
	.dword	0
	.dword	_ZTIN2kc23impl_ac_identifier_listE
	.dword	_ZNK2kc23impl_ac_identifier_list8prod_selEv
	.dword	_ZNK2kc23impl_ac_identifier_list9subphylumEi
	.dword	_ZN2kc23impl_ac_identifier_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc23impl_ac_identifier_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc23impl_ac_identifier_listD0Ev
	.dword	_ZN2kc23impl_ac_identifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc23impl_ac_identifier_list6is_nilEv
	.dword	_ZNK2kc23impl_ac_identifier_list7reverseEv
	.size	_ZTVN2kc23impl_ac_identifier_listE, 120

	.type	_ZN2kc27impl_ac_abstract_declarator11phylum_sel_E,@object # @_ZN2kc27impl_ac_abstract_declarator11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc27impl_ac_abstract_declarator11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_ac_abstract_declarator11phylum_sel_E:
	.word	123                             # 0x7b
	.size	_ZN2kc27impl_ac_abstract_declarator11phylum_sel_E, 4

	.type	_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE,@object # @_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
	.p2align	3, 0x0
_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE:
	.dword	0
	.dword	_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
	.dword	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl8prod_selEv
	.dword	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl9subphylumEi
	.dword	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclD0Ev
	.dword	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE, 104

	.type	_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE,@object # @_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
	.globl	_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
	.p2align	3, 0x0
_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE:
	.dword	0
	.dword	_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
	.dword	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer8prod_selEv
	.dword	_ZNK2kc44impl_ac_abstract_declarator_AcAbsdeclPointer9subphylumEi
	.dword	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerD0Ev
	.dword	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE, 104

	.type	_ZN2kc41impl_ac_direct_abstract_declarator_option11phylum_sel_E,@object # @_ZN2kc41impl_ac_direct_abstract_declarator_option11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc41impl_ac_direct_abstract_declarator_option11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc41impl_ac_direct_abstract_declarator_option11phylum_sel_E:
	.word	124                             # 0x7c
	.size	_ZN2kc41impl_ac_direct_abstract_declarator_option11phylum_sel_E, 4

	.type	_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE,@object # @_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
	.p2align	3, 0x0
_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE:
	.dword	0
	.dword	_ZTIN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
	.dword	_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator8prod_selEv
	.dword	_ZNK2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator9subphylumEi
	.dword	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorD0Ev
	.dword	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE, 104

	.type	_ZN2kc34impl_ac_direct_abstract_declarator11phylum_sel_E,@object # @_ZN2kc34impl_ac_direct_abstract_declarator11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc34impl_ac_direct_abstract_declarator11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc34impl_ac_direct_abstract_declarator11phylum_sel_E:
	.word	125                             # 0x7d
	.size	_ZN2kc34impl_ac_direct_abstract_declarator11phylum_sel_E, 4

	.type	_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE,@object # @_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
	.p2align	3, 0x0
_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE:
	.dword	0
	.dword	_ZTIN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
	.dword	_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn8prod_selEv
	.dword	_ZNK2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn9subphylumEi
	.dword	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnD0Ev
	.dword	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE, 104

	.type	_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE,@object # @_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
	.globl	_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
	.p2align	3, 0x0
_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE:
	.dword	0
	.dword	_ZTIN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
	.dword	_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray8prod_selEv
	.dword	_ZNK2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray9subphylumEi
	.dword	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayD0Ev
	.dword	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE, 104

	.type	_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE,@object # @_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
	.globl	_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
	.p2align	3, 0x0
_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE:
	.dword	0
	.dword	_ZTIN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
	.dword	_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack8prod_selEv
	.dword	_ZNK2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack9subphylumEi
	.dword	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackD0Ev
	.dword	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE, 104

	.type	_ZN2kc34impl_ac_constant_expression_option11phylum_sel_E,@object # @_ZN2kc34impl_ac_constant_expression_option11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc34impl_ac_constant_expression_option11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc34impl_ac_constant_expression_option11phylum_sel_E:
	.word	126                             # 0x7e
	.size	_ZN2kc34impl_ac_constant_expression_option11phylum_sel_E, 4

	.type	_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE,@object # @_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
	.p2align	3, 0x0
_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE:
	.dword	0
	.dword	_ZTIN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
	.dword	_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression8prod_selEv
	.dword	_ZNK2kc60impl_ac_constant_expression_option_Yesac_constant_expression9subphylumEi
	.dword	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionD0Ev
	.dword	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE, 104

	.type	_ZN2kc27impl_ac_constant_expression11phylum_sel_E,@object # @_ZN2kc27impl_ac_constant_expression11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc27impl_ac_constant_expression11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_ac_constant_expression11phylum_sel_E:
	.word	127                             # 0x7f
	.size	_ZN2kc27impl_ac_constant_expression11phylum_sel_E, 4

	.type	_ZTVN2kc39impl_ac_constant_expression_AcConstExprE,@object # @_ZTVN2kc39impl_ac_constant_expression_AcConstExprE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc39impl_ac_constant_expression_AcConstExprE
	.p2align	3, 0x0
_ZTVN2kc39impl_ac_constant_expression_AcConstExprE:
	.dword	0
	.dword	_ZTIN2kc39impl_ac_constant_expression_AcConstExprE
	.dword	_ZNK2kc39impl_ac_constant_expression_AcConstExpr8prod_selEv
	.dword	_ZNK2kc39impl_ac_constant_expression_AcConstExpr9subphylumEi
	.dword	_ZN2kc39impl_ac_constant_expression_AcConstExpr13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc39impl_ac_constant_expression_AcConstExpr7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc39impl_ac_constant_expression_AcConstExprD0Ev
	.dword	_ZN2kc39impl_ac_constant_expression_AcConstExpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc39impl_ac_constant_expression_AcConstExprE, 104

	.type	_ZN2kc32impl_ac_constant_expression_list11phylum_sel_E,@object # @_ZN2kc32impl_ac_constant_expression_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc32impl_ac_constant_expression_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc32impl_ac_constant_expression_list11phylum_sel_E:
	.word	128                             # 0x80
	.size	_ZN2kc32impl_ac_constant_expression_list11phylum_sel_E, 4

	.type	_ZTVN2kc32impl_ac_constant_expression_listE,@object # @_ZTVN2kc32impl_ac_constant_expression_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc32impl_ac_constant_expression_listE
	.p2align	3, 0x0
_ZTVN2kc32impl_ac_constant_expression_listE:
	.dword	0
	.dword	_ZTIN2kc32impl_ac_constant_expression_listE
	.dword	_ZNK2kc32impl_ac_constant_expression_list8prod_selEv
	.dword	_ZNK2kc32impl_ac_constant_expression_list9subphylumEi
	.dword	_ZN2kc32impl_ac_constant_expression_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_ac_constant_expression_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_ac_constant_expression_listD0Ev
	.dword	_ZN2kc32impl_ac_constant_expression_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc32impl_ac_constant_expression_list6is_nilEv
	.dword	_ZNK2kc32impl_ac_constant_expression_list7reverseEv
	.size	_ZTVN2kc32impl_ac_constant_expression_listE, 120

	.type	_ZN2kc26impl_ac_opt_base_init_list11phylum_sel_E,@object # @_ZN2kc26impl_ac_opt_base_init_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc26impl_ac_opt_base_init_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc26impl_ac_opt_base_init_list11phylum_sel_E:
	.word	129                             # 0x81
	.size	_ZN2kc26impl_ac_opt_base_init_list11phylum_sel_E, 4

	.type	_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE,@object # @_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
	.p2align	3, 0x0
_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE:
	.dword	0
	.dword	_ZTIN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
	.dword	_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit8prod_selEv
	.dword	_ZNK2kc40impl_ac_opt_base_init_list_AcYesBaseInit9subphylumEi
	.dword	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitD0Ev
	.dword	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE, 104

	.type	_ZN2kc22impl_ac_base_init_list11phylum_sel_E,@object # @_ZN2kc22impl_ac_base_init_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc22impl_ac_base_init_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc22impl_ac_base_init_list11phylum_sel_E:
	.word	130                             # 0x82
	.size	_ZN2kc22impl_ac_base_init_list11phylum_sel_E, 4

	.type	_ZTVN2kc22impl_ac_base_init_listE,@object # @_ZTVN2kc22impl_ac_base_init_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc22impl_ac_base_init_listE
	.p2align	3, 0x0
_ZTVN2kc22impl_ac_base_init_listE:
	.dword	0
	.dword	_ZTIN2kc22impl_ac_base_init_listE
	.dword	_ZNK2kc22impl_ac_base_init_list8prod_selEv
	.dword	_ZNK2kc22impl_ac_base_init_list9subphylumEi
	.dword	_ZN2kc22impl_ac_base_init_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc22impl_ac_base_init_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc22impl_ac_base_init_listD0Ev
	.dword	_ZN2kc22impl_ac_base_init_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc22impl_ac_base_init_list6is_nilEv
	.dword	_ZNK2kc22impl_ac_base_init_list7reverseEv
	.size	_ZTVN2kc22impl_ac_base_init_listE, 120

	.type	_ZN2kc17impl_ac_base_init11phylum_sel_E,@object # @_ZN2kc17impl_ac_base_init11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc17impl_ac_base_init11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc17impl_ac_base_init11phylum_sel_E:
	.word	131                             # 0x83
	.size	_ZN2kc17impl_ac_base_init11phylum_sel_E, 4

	.type	_ZTVN2kc28impl_ac_base_init_AcBaseInitE,@object # @_ZTVN2kc28impl_ac_base_init_AcBaseInitE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc28impl_ac_base_init_AcBaseInitE
	.p2align	3, 0x0
_ZTVN2kc28impl_ac_base_init_AcBaseInitE:
	.dword	0
	.dword	_ZTIN2kc28impl_ac_base_init_AcBaseInitE
	.dword	_ZNK2kc28impl_ac_base_init_AcBaseInit8prod_selEv
	.dword	_ZNK2kc28impl_ac_base_init_AcBaseInit9subphylumEi
	.dword	_ZN2kc28impl_ac_base_init_AcBaseInit13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc28impl_ac_base_init_AcBaseInit7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc28impl_ac_base_init_AcBaseInitD0Ev
	.dword	_ZN2kc28impl_ac_base_init_AcBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc28impl_ac_base_init_AcBaseInitE, 104

	.type	_ZN2kc27impl_baseclass_declarations11phylum_sel_E,@object # @_ZN2kc27impl_baseclass_declarations11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc27impl_baseclass_declarations11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_baseclass_declarations11phylum_sel_E:
	.word	132                             # 0x84
	.size	_ZN2kc27impl_baseclass_declarations11phylum_sel_E, 4

	.type	_ZTVN2kc27impl_baseclass_declarationsE,@object # @_ZTVN2kc27impl_baseclass_declarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc27impl_baseclass_declarationsE
	.p2align	3, 0x0
_ZTVN2kc27impl_baseclass_declarationsE:
	.dword	0
	.dword	_ZTIN2kc27impl_baseclass_declarationsE
	.dword	_ZNK2kc27impl_baseclass_declarations8prod_selEv
	.dword	_ZNK2kc27impl_baseclass_declarations9subphylumEi
	.dword	_ZN2kc27impl_baseclass_declarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc27impl_baseclass_declarations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc27impl_baseclass_declarationsD0Ev
	.dword	_ZN2kc27impl_baseclass_declarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc27impl_baseclass_declarations6is_nilEv
	.dword	_ZNK2kc27impl_baseclass_declarations7reverseEv
	.size	_ZTVN2kc27impl_baseclass_declarationsE, 120

	.type	_ZN2kc19impl_baseclass_decl11phylum_sel_E,@object # @_ZN2kc19impl_baseclass_decl11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_baseclass_decl11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_baseclass_decl11phylum_sel_E:
	.word	133                             # 0x85
	.size	_ZN2kc19impl_baseclass_decl11phylum_sel_E, 4

	.type	_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE,@object # @_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE
	.p2align	3, 0x0
_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE:
	.dword	0
	.dword	_ZTIN2kc33impl_baseclass_decl_BaseClassDeclE
	.dword	_ZNK2kc33impl_baseclass_decl_BaseClassDecl8prod_selEv
	.dword	_ZNK2kc33impl_baseclass_decl_BaseClassDecl9subphylumEi
	.dword	_ZN2kc33impl_baseclass_decl_BaseClassDecl13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc33impl_baseclass_decl_BaseClassDecl7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc33impl_baseclass_decl_BaseClassDeclD0Ev
	.dword	_ZN2kc33impl_baseclass_decl_BaseClassDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc33impl_baseclass_decl_BaseClassDeclE, 104

	.type	_ZN2kc19impl_baseclass_list11phylum_sel_E,@object # @_ZN2kc19impl_baseclass_list11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc19impl_baseclass_list11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_baseclass_list11phylum_sel_E:
	.word	134                             # 0x86
	.size	_ZN2kc19impl_baseclass_list11phylum_sel_E, 4

	.type	_ZTVN2kc19impl_baseclass_listE,@object # @_ZTVN2kc19impl_baseclass_listE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc19impl_baseclass_listE
	.p2align	3, 0x0
_ZTVN2kc19impl_baseclass_listE:
	.dword	0
	.dword	_ZTIN2kc19impl_baseclass_listE
	.dword	_ZNK2kc19impl_baseclass_list8prod_selEv
	.dword	_ZNK2kc19impl_baseclass_list9subphylumEi
	.dword	_ZN2kc19impl_baseclass_list13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_baseclass_list7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_baseclass_listD0Ev
	.dword	_ZN2kc19impl_baseclass_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc19impl_baseclass_list6is_nilEv
	.dword	_ZNK2kc19impl_baseclass_list7reverseEv
	.size	_ZTVN2kc19impl_baseclass_listE, 120

	.type	_ZN2kc10impl_error11phylum_sel_E,@object # @_ZN2kc10impl_error11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc10impl_error11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc10impl_error11phylum_sel_E:
	.word	135                             # 0x87
	.size	_ZN2kc10impl_error11phylum_sel_E, 4

	.type	_ZTVN2kc18impl_error_WarningE,@object # @_ZTVN2kc18impl_error_WarningE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc18impl_error_WarningE
	.p2align	3, 0x0
_ZTVN2kc18impl_error_WarningE:
	.dword	0
	.dword	_ZTIN2kc18impl_error_WarningE
	.dword	_ZNK2kc18impl_error_Warning8prod_selEv
	.dword	_ZNK2kc18impl_error_Warning9subphylumEi
	.dword	_ZN2kc18impl_error_Warning13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc18impl_error_Warning7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc18impl_error_WarningD0Ev
	.dword	_ZN2kc18impl_error_Warning10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc18impl_error_WarningE, 104

	.type	_ZTVN2kc19impl_error_NonFatalE,@object # @_ZTVN2kc19impl_error_NonFatalE
	.globl	_ZTVN2kc19impl_error_NonFatalE
	.p2align	3, 0x0
_ZTVN2kc19impl_error_NonFatalE:
	.dword	0
	.dword	_ZTIN2kc19impl_error_NonFatalE
	.dword	_ZNK2kc19impl_error_NonFatal8prod_selEv
	.dword	_ZNK2kc19impl_error_NonFatal9subphylumEi
	.dword	_ZN2kc19impl_error_NonFatal13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_error_NonFatal7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_error_NonFatalD0Ev
	.dword	_ZN2kc19impl_error_NonFatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc19impl_error_NonFatalE, 104

	.type	_ZTVN2kc16impl_error_FatalE,@object # @_ZTVN2kc16impl_error_FatalE
	.globl	_ZTVN2kc16impl_error_FatalE
	.p2align	3, 0x0
_ZTVN2kc16impl_error_FatalE:
	.dword	0
	.dword	_ZTIN2kc16impl_error_FatalE
	.dword	_ZNK2kc16impl_error_Fatal8prod_selEv
	.dword	_ZNK2kc16impl_error_Fatal9subphylumEi
	.dword	_ZN2kc16impl_error_Fatal13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc16impl_error_Fatal7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc16impl_error_FatalD0Ev
	.dword	_ZN2kc16impl_error_Fatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc16impl_error_FatalE, 104

	.type	_ZN2kc12impl_problem11phylum_sel_E,@object # @_ZN2kc12impl_problem11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc12impl_problem11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc12impl_problem11phylum_sel_E:
	.word	136                             # 0x88
	.size	_ZN2kc12impl_problem11phylum_sel_E, 4

	.type	_ZTVN2kc21impl_problem_Problem6E,@object # @_ZTVN2kc21impl_problem_Problem6E
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc21impl_problem_Problem6E
	.p2align	3, 0x0
_ZTVN2kc21impl_problem_Problem6E:
	.dword	0
	.dword	_ZTIN2kc21impl_problem_Problem6E
	.dword	_ZNK2kc21impl_problem_Problem68prod_selEv
	.dword	_ZNK2kc21impl_problem_Problem69subphylumEi
	.dword	_ZN2kc21impl_problem_Problem613set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_problem_Problem67rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_problem_Problem6D0Ev
	.dword	_ZN2kc21impl_problem_Problem610do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc21impl_problem_Problem6E, 104

	.type	_ZTVN2kc21impl_problem_Problem5E,@object # @_ZTVN2kc21impl_problem_Problem5E
	.globl	_ZTVN2kc21impl_problem_Problem5E
	.p2align	3, 0x0
_ZTVN2kc21impl_problem_Problem5E:
	.dword	0
	.dword	_ZTIN2kc21impl_problem_Problem5E
	.dword	_ZNK2kc21impl_problem_Problem58prod_selEv
	.dword	_ZNK2kc21impl_problem_Problem59subphylumEi
	.dword	_ZN2kc21impl_problem_Problem513set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_problem_Problem57rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_problem_Problem5D0Ev
	.dword	_ZN2kc21impl_problem_Problem510do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc21impl_problem_Problem5E, 104

	.type	_ZTVN2kc21impl_problem_Problem4E,@object # @_ZTVN2kc21impl_problem_Problem4E
	.globl	_ZTVN2kc21impl_problem_Problem4E
	.p2align	3, 0x0
_ZTVN2kc21impl_problem_Problem4E:
	.dword	0
	.dword	_ZTIN2kc21impl_problem_Problem4E
	.dword	_ZNK2kc21impl_problem_Problem48prod_selEv
	.dword	_ZNK2kc21impl_problem_Problem49subphylumEi
	.dword	_ZN2kc21impl_problem_Problem413set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_problem_Problem47rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_problem_Problem4D0Ev
	.dword	_ZN2kc21impl_problem_Problem410do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc21impl_problem_Problem4E, 104

	.type	_ZTVN2kc25impl_problem_Problem3int1E,@object # @_ZTVN2kc25impl_problem_Problem3int1E
	.globl	_ZTVN2kc25impl_problem_Problem3int1E
	.p2align	3, 0x0
_ZTVN2kc25impl_problem_Problem3int1E:
	.dword	0
	.dword	_ZTIN2kc25impl_problem_Problem3int1E
	.dword	_ZNK2kc25impl_problem_Problem3int18prod_selEv
	.dword	_ZNK2kc25impl_problem_Problem3int19subphylumEi
	.dword	_ZN2kc25impl_problem_Problem3int113set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc25impl_problem_Problem3int17rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc25impl_problem_Problem3int1D0Ev
	.dword	_ZN2kc25impl_problem_Problem3int110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc25impl_problem_Problem3int1E, 104

	.type	_ZTVN2kc21impl_problem_Problem3E,@object # @_ZTVN2kc21impl_problem_Problem3E
	.globl	_ZTVN2kc21impl_problem_Problem3E
	.p2align	3, 0x0
_ZTVN2kc21impl_problem_Problem3E:
	.dword	0
	.dword	_ZTIN2kc21impl_problem_Problem3E
	.dword	_ZNK2kc21impl_problem_Problem38prod_selEv
	.dword	_ZNK2kc21impl_problem_Problem39subphylumEi
	.dword	_ZN2kc21impl_problem_Problem313set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_problem_Problem37rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_problem_Problem3D0Ev
	.dword	_ZN2kc21impl_problem_Problem310do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc21impl_problem_Problem3E, 104

	.type	_ZTVN2kc21impl_problem_Problem2E,@object # @_ZTVN2kc21impl_problem_Problem2E
	.globl	_ZTVN2kc21impl_problem_Problem2E
	.p2align	3, 0x0
_ZTVN2kc21impl_problem_Problem2E:
	.dword	0
	.dword	_ZTIN2kc21impl_problem_Problem2E
	.dword	_ZNK2kc21impl_problem_Problem28prod_selEv
	.dword	_ZNK2kc21impl_problem_Problem29subphylumEi
	.dword	_ZN2kc21impl_problem_Problem213set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_problem_Problem27rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_problem_Problem2D0Ev
	.dword	_ZN2kc21impl_problem_Problem210do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc21impl_problem_Problem2E, 104

	.type	_ZTVN2kc37impl_problem_Problem1storageoption1IDE,@object # @_ZTVN2kc37impl_problem_Problem1storageoption1IDE
	.globl	_ZTVN2kc37impl_problem_Problem1storageoption1IDE
	.p2align	3, 0x0
_ZTVN2kc37impl_problem_Problem1storageoption1IDE:
	.dword	0
	.dword	_ZTIN2kc37impl_problem_Problem1storageoption1IDE
	.dword	_ZNK2kc37impl_problem_Problem1storageoption1ID8prod_selEv
	.dword	_ZNK2kc37impl_problem_Problem1storageoption1ID9subphylumEi
	.dword	_ZN2kc37impl_problem_Problem1storageoption1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc37impl_problem_Problem1storageoption1ID7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc37impl_problem_Problem1storageoption1IDD0Ev
	.dword	_ZN2kc37impl_problem_Problem1storageoption1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc37impl_problem_Problem1storageoption1IDE, 104

	.type	_ZTVN2kc30impl_problem_Problem1INT1ID1IDE,@object # @_ZTVN2kc30impl_problem_Problem1INT1ID1IDE
	.globl	_ZTVN2kc30impl_problem_Problem1INT1ID1IDE
	.p2align	3, 0x0
_ZTVN2kc30impl_problem_Problem1INT1ID1IDE:
	.dword	0
	.dword	_ZTIN2kc30impl_problem_Problem1INT1ID1IDE
	.dword	_ZNK2kc30impl_problem_Problem1INT1ID1ID8prod_selEv
	.dword	_ZNK2kc30impl_problem_Problem1INT1ID1ID9subphylumEi
	.dword	_ZN2kc30impl_problem_Problem1INT1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc30impl_problem_Problem1INT1ID1ID7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc30impl_problem_Problem1INT1ID1IDD0Ev
	.dword	_ZN2kc30impl_problem_Problem1INT1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc30impl_problem_Problem1INT1ID1IDE, 104

	.type	_ZTVN2kc29impl_problem_Problem1ID1ID1IDE,@object # @_ZTVN2kc29impl_problem_Problem1ID1ID1IDE
	.globl	_ZTVN2kc29impl_problem_Problem1ID1ID1IDE
	.p2align	3, 0x0
_ZTVN2kc29impl_problem_Problem1ID1ID1IDE:
	.dword	0
	.dword	_ZTIN2kc29impl_problem_Problem1ID1ID1IDE
	.dword	_ZNK2kc29impl_problem_Problem1ID1ID1ID8prod_selEv
	.dword	_ZNK2kc29impl_problem_Problem1ID1ID1ID9subphylumEi
	.dword	_ZN2kc29impl_problem_Problem1ID1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc29impl_problem_Problem1ID1ID1ID7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc29impl_problem_Problem1ID1ID1IDD0Ev
	.dword	_ZN2kc29impl_problem_Problem1ID1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc29impl_problem_Problem1ID1ID1IDE, 104

	.type	_ZTVN2kc27impl_problem_Problem1INT1IDE,@object # @_ZTVN2kc27impl_problem_Problem1INT1IDE
	.globl	_ZTVN2kc27impl_problem_Problem1INT1IDE
	.p2align	3, 0x0
_ZTVN2kc27impl_problem_Problem1INT1IDE:
	.dword	0
	.dword	_ZTIN2kc27impl_problem_Problem1INT1IDE
	.dword	_ZNK2kc27impl_problem_Problem1INT1ID8prod_selEv
	.dword	_ZNK2kc27impl_problem_Problem1INT1ID9subphylumEi
	.dword	_ZN2kc27impl_problem_Problem1INT1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc27impl_problem_Problem1INT1ID7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc27impl_problem_Problem1INT1IDD0Ev
	.dword	_ZN2kc27impl_problem_Problem1INT1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc27impl_problem_Problem1INT1IDE, 104

	.type	_ZTVN2kc25impl_problem_Problem1int1E,@object # @_ZTVN2kc25impl_problem_Problem1int1E
	.globl	_ZTVN2kc25impl_problem_Problem1int1E
	.p2align	3, 0x0
_ZTVN2kc25impl_problem_Problem1int1E:
	.dword	0
	.dword	_ZTIN2kc25impl_problem_Problem1int1E
	.dword	_ZNK2kc25impl_problem_Problem1int18prod_selEv
	.dword	_ZNK2kc25impl_problem_Problem1int19subphylumEi
	.dword	_ZN2kc25impl_problem_Problem1int113set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc25impl_problem_Problem1int17rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc25impl_problem_Problem1int1D0Ev
	.dword	_ZN2kc25impl_problem_Problem1int110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc25impl_problem_Problem1int1E, 104

	.type	_ZTVN2kc24impl_problem_Problem1INTE,@object # @_ZTVN2kc24impl_problem_Problem1INTE
	.globl	_ZTVN2kc24impl_problem_Problem1INTE
	.p2align	3, 0x0
_ZTVN2kc24impl_problem_Problem1INTE:
	.dword	0
	.dword	_ZTIN2kc24impl_problem_Problem1INTE
	.dword	_ZNK2kc24impl_problem_Problem1INT8prod_selEv
	.dword	_ZNK2kc24impl_problem_Problem1INT9subphylumEi
	.dword	_ZN2kc24impl_problem_Problem1INT13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_problem_Problem1INT7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_problem_Problem1INTD0Ev
	.dword	_ZN2kc24impl_problem_Problem1INT10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc24impl_problem_Problem1INTE, 104

	.type	_ZTVN2kc25impl_problem_Problem1t1IDE,@object # @_ZTVN2kc25impl_problem_Problem1t1IDE
	.globl	_ZTVN2kc25impl_problem_Problem1t1IDE
	.p2align	3, 0x0
_ZTVN2kc25impl_problem_Problem1t1IDE:
	.dword	0
	.dword	_ZTIN2kc25impl_problem_Problem1t1IDE
	.dword	_ZNK2kc25impl_problem_Problem1t1ID8prod_selEv
	.dword	_ZNK2kc25impl_problem_Problem1t1ID9subphylumEi
	.dword	_ZN2kc25impl_problem_Problem1t1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc25impl_problem_Problem1t1ID7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc25impl_problem_Problem1t1IDD0Ev
	.dword	_ZN2kc25impl_problem_Problem1t1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc25impl_problem_Problem1t1IDE, 104

	.type	_ZTVN2kc26impl_problem_Problem1ID1IDE,@object # @_ZTVN2kc26impl_problem_Problem1ID1IDE
	.globl	_ZTVN2kc26impl_problem_Problem1ID1IDE
	.p2align	3, 0x0
_ZTVN2kc26impl_problem_Problem1ID1IDE:
	.dword	0
	.dword	_ZTIN2kc26impl_problem_Problem1ID1IDE
	.dword	_ZNK2kc26impl_problem_Problem1ID1ID8prod_selEv
	.dword	_ZNK2kc26impl_problem_Problem1ID1ID9subphylumEi
	.dword	_ZN2kc26impl_problem_Problem1ID1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc26impl_problem_Problem1ID1ID7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc26impl_problem_Problem1ID1IDD0Ev
	.dword	_ZN2kc26impl_problem_Problem1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc26impl_problem_Problem1ID1IDE, 104

	.type	_ZTVN2kc23impl_problem_Problem1weE,@object # @_ZTVN2kc23impl_problem_Problem1weE
	.globl	_ZTVN2kc23impl_problem_Problem1weE
	.p2align	3, 0x0
_ZTVN2kc23impl_problem_Problem1weE:
	.dword	0
	.dword	_ZTIN2kc23impl_problem_Problem1weE
	.dword	_ZNK2kc23impl_problem_Problem1we8prod_selEv
	.dword	_ZNK2kc23impl_problem_Problem1we9subphylumEi
	.dword	_ZN2kc23impl_problem_Problem1we13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc23impl_problem_Problem1we7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc23impl_problem_Problem1weD0Ev
	.dword	_ZN2kc23impl_problem_Problem1we10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc23impl_problem_Problem1weE, 104

	.type	_ZTVN2kc24impl_problem_Problem1tIDE,@object # @_ZTVN2kc24impl_problem_Problem1tIDE
	.globl	_ZTVN2kc24impl_problem_Problem1tIDE
	.p2align	3, 0x0
_ZTVN2kc24impl_problem_Problem1tIDE:
	.dword	0
	.dword	_ZTIN2kc24impl_problem_Problem1tIDE
	.dword	_ZNK2kc24impl_problem_Problem1tID8prod_selEv
	.dword	_ZNK2kc24impl_problem_Problem1tID9subphylumEi
	.dword	_ZN2kc24impl_problem_Problem1tID13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc24impl_problem_Problem1tID7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc24impl_problem_Problem1tIDD0Ev
	.dword	_ZN2kc24impl_problem_Problem1tID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc24impl_problem_Problem1tIDE, 104

	.type	_ZTVN2kc23impl_problem_Problem1IDE,@object # @_ZTVN2kc23impl_problem_Problem1IDE
	.globl	_ZTVN2kc23impl_problem_Problem1IDE
	.p2align	3, 0x0
_ZTVN2kc23impl_problem_Problem1IDE:
	.dword	0
	.dword	_ZTIN2kc23impl_problem_Problem1IDE
	.dword	_ZNK2kc23impl_problem_Problem1ID8prod_selEv
	.dword	_ZNK2kc23impl_problem_Problem1ID9subphylumEi
	.dword	_ZN2kc23impl_problem_Problem1ID13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc23impl_problem_Problem1ID7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc23impl_problem_Problem1IDD0Ev
	.dword	_ZN2kc23impl_problem_Problem1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc23impl_problem_Problem1IDE, 104

	.type	_ZTVN2kc21impl_problem_Problem1E,@object # @_ZTVN2kc21impl_problem_Problem1E
	.globl	_ZTVN2kc21impl_problem_Problem1E
	.p2align	3, 0x0
_ZTVN2kc21impl_problem_Problem1E:
	.dword	0
	.dword	_ZTIN2kc21impl_problem_Problem1E
	.dword	_ZNK2kc21impl_problem_Problem18prod_selEv
	.dword	_ZNK2kc21impl_problem_Problem19subphylumEi
	.dword	_ZN2kc21impl_problem_Problem113set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc21impl_problem_Problem17rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_problem_Problem1D0Ev
	.dword	_ZN2kc21impl_problem_Problem110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc21impl_problem_Problem1E, 104

	.type	_ZN2kc28impl_addedphylumdeclarations11phylum_sel_E,@object # @_ZN2kc28impl_addedphylumdeclarations11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc28impl_addedphylumdeclarations11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc28impl_addedphylumdeclarations11phylum_sel_E:
	.word	137                             # 0x89
	.size	_ZN2kc28impl_addedphylumdeclarations11phylum_sel_E, 4

	.type	_ZTVN2kc28impl_addedphylumdeclarationsE,@object # @_ZTVN2kc28impl_addedphylumdeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc28impl_addedphylumdeclarationsE
	.p2align	3, 0x0
_ZTVN2kc28impl_addedphylumdeclarationsE:
	.dword	0
	.dword	_ZTIN2kc28impl_addedphylumdeclarationsE
	.dword	_ZNK2kc28impl_addedphylumdeclarations8prod_selEv
	.dword	_ZNK2kc28impl_addedphylumdeclarations9subphylumEi
	.dword	_ZN2kc28impl_addedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc28impl_addedphylumdeclarations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc28impl_addedphylumdeclarationsD0Ev
	.dword	_ZN2kc28impl_addedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc28impl_addedphylumdeclarations6is_nilEv
	.dword	_ZNK2kc28impl_addedphylumdeclarations7reverseEv
	.size	_ZTVN2kc28impl_addedphylumdeclarationsE, 120

	.type	_ZN2kc27impl_addedphylumdeclaration11phylum_sel_E,@object # @_ZN2kc27impl_addedphylumdeclaration11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc27impl_addedphylumdeclaration11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc27impl_addedphylumdeclaration11phylum_sel_E:
	.word	138                             # 0x8a
	.size	_ZN2kc27impl_addedphylumdeclaration11phylum_sel_E, 4

	.type	_ZTVN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE,@object # @_ZTVN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
	.p2align	3, 0x0
_ZTVN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE:
	.dword	0
	.dword	_ZTIN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
	.dword	_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration8prod_selEv
	.dword	_ZNK2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration9subphylumEi
	.dword	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationD0Ev
	.dword	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE, 104

	.type	_ZN2kc30impl_countedphylumdeclarations11phylum_sel_E,@object # @_ZN2kc30impl_countedphylumdeclarations11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc30impl_countedphylumdeclarations11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc30impl_countedphylumdeclarations11phylum_sel_E:
	.word	139                             # 0x8b
	.size	_ZN2kc30impl_countedphylumdeclarations11phylum_sel_E, 4

	.type	_ZTVN2kc30impl_countedphylumdeclarationsE,@object # @_ZTVN2kc30impl_countedphylumdeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc30impl_countedphylumdeclarationsE
	.p2align	3, 0x0
_ZTVN2kc30impl_countedphylumdeclarationsE:
	.dword	0
	.dword	_ZTIN2kc30impl_countedphylumdeclarationsE
	.dword	_ZNK2kc30impl_countedphylumdeclarations8prod_selEv
	.dword	_ZNK2kc30impl_countedphylumdeclarations9subphylumEi
	.dword	_ZN2kc30impl_countedphylumdeclarations13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc30impl_countedphylumdeclarations7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc30impl_countedphylumdeclarationsD0Ev
	.dword	_ZN2kc30impl_countedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc30impl_countedphylumdeclarations6is_nilEv
	.dword	_ZNK2kc30impl_countedphylumdeclarations7reverseEv
	.size	_ZTVN2kc30impl_countedphylumdeclarationsE, 120

	.type	_ZN2kc29impl_countedphylumdeclaration11phylum_sel_E,@object # @_ZN2kc29impl_countedphylumdeclaration11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc29impl_countedphylumdeclaration11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc29impl_countedphylumdeclaration11phylum_sel_E:
	.word	140                             # 0x8c
	.size	_ZN2kc29impl_countedphylumdeclaration11phylum_sel_E, 4

	.type	_ZTVN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE,@object # @_ZTVN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
	.p2align	3, 0x0
_ZTVN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE:
	.dword	0
	.dword	_ZTIN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
	.dword	_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration8prod_selEv
	.dword	_ZNK2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration9subphylumEi
	.dword	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationD0Ev
	.dword	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE, 104

	.type	_ZN2kc13impl_charruns11phylum_sel_E,@object # @_ZN2kc13impl_charruns11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc13impl_charruns11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc13impl_charruns11phylum_sel_E:
	.word	141                             # 0x8d
	.size	_ZN2kc13impl_charruns11phylum_sel_E, 4

	.type	_ZN2kc19impl_bindingidmarks11phylum_sel_E,@object # @_ZN2kc19impl_bindingidmarks11phylum_sel_E
	.globl	_ZN2kc19impl_bindingidmarks11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc19impl_bindingidmarks11phylum_sel_E:
	.word	142                             # 0x8e
	.size	_ZN2kc19impl_bindingidmarks11phylum_sel_E, 4

	.type	_ZTVN2kc19impl_bindingidmarksE,@object # @_ZTVN2kc19impl_bindingidmarksE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc19impl_bindingidmarksE
	.p2align	3, 0x0
_ZTVN2kc19impl_bindingidmarksE:
	.dword	0
	.dword	_ZTIN2kc19impl_bindingidmarksE
	.dword	_ZNK2kc19impl_bindingidmarks8prod_selEv
	.dword	_ZNK2kc19impl_bindingidmarks9subphylumEi
	.dword	_ZN2kc19impl_bindingidmarks13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc19impl_bindingidmarks7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc19impl_bindingidmarksD0Ev
	.dword	_ZN2kc19impl_bindingidmarks10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZNK2kc19impl_bindingidmarks6is_nilEv
	.dword	_ZNK2kc19impl_bindingidmarks7reverseEv
	.size	_ZTVN2kc19impl_bindingidmarksE, 120

	.type	_ZN2kc18impl_bindingidmark11phylum_sel_E,@object # @_ZN2kc18impl_bindingidmark11phylum_sel_E
	.section	.rodata,"a",@progbits
	.globl	_ZN2kc18impl_bindingidmark11phylum_sel_E
	.p2align	2, 0x0
_ZN2kc18impl_bindingidmark11phylum_sel_E:
	.word	143                             # 0x8f
	.size	_ZN2kc18impl_bindingidmark11phylum_sel_E, 4

	.type	_ZTVN2kc32impl_bindingidmark_BindingIdMarkE,@object # @_ZTVN2kc32impl_bindingidmark_BindingIdMarkE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc32impl_bindingidmark_BindingIdMarkE
	.p2align	3, 0x0
_ZTVN2kc32impl_bindingidmark_BindingIdMarkE:
	.dword	0
	.dword	_ZTIN2kc32impl_bindingidmark_BindingIdMarkE
	.dword	_ZNK2kc32impl_bindingidmark_BindingIdMark8prod_selEv
	.dword	_ZNK2kc32impl_bindingidmark_BindingIdMark9subphylumEi
	.dword	_ZN2kc32impl_bindingidmark_BindingIdMark13set_subphylumEiPNS_20impl_abstract_phylumE
	.dword	_ZN2kc32impl_bindingidmark_BindingIdMark7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc32impl_bindingidmark_BindingIdMarkD0Ev
	.dword	_ZN2kc32impl_bindingidmark_BindingIdMark10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc32impl_bindingidmark_BindingIdMarkE, 104

	.type	_ZN2kcL28kc_not_uniq_static_hashtableE,@object # @_ZN2kcL28kc_not_uniq_static_hashtableE
	.local	_ZN2kcL28kc_not_uniq_static_hashtableE
	.comm	_ZN2kcL28kc_not_uniq_static_hashtableE,328,8
	.hidden	__dso_handle
	.type	_ZN2kcL21uniq_static_hashtableE,@object # @_ZN2kcL21uniq_static_hashtableE
	.local	_ZN2kcL21uniq_static_hashtableE
	.comm	_ZN2kcL21uniq_static_hashtableE,328,8
	.type	_ZN2kc26kc_storageclass_still_uniqE,@object # @_ZN2kc26kc_storageclass_still_uniqE
	.data
	.globl	_ZN2kc26kc_storageclass_still_uniqE
_ZN2kc26kc_storageclass_still_uniqE:
	.space	2,1
	.size	_ZN2kc26kc_storageclass_still_uniqE, 2

	.type	_ZN2kc10hashtablesE,@object     # @_ZN2kc10hashtablesE
	.globl	_ZN2kc10hashtablesE
	.p2align	3, 0x0
_ZN2kc10hashtablesE:
	.dword	_ZN2kcL28kc_not_uniq_static_hashtableE
	.dword	_ZN2kcL21uniq_static_hashtableE
	.size	_ZN2kc10hashtablesE, 16

	.type	.L.str.494,@object              # @.str.494
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.494:
	.asciz	"kc_not_uniq"
	.size	.L.str.494, 12

	.type	.L.str.495,@object              # @.str.495
.L.str.495:
	.asciz	"uniq"
	.size	.L.str.495, 5

	.type	_ZN2kc20kc_storageclassnamesE,@object # @_ZN2kc20kc_storageclassnamesE
	.data
	.globl	_ZN2kc20kc_storageclassnamesE
	.p2align	3, 0x0
_ZN2kc20kc_storageclassnamesE:
	.dword	.L.str.494
	.dword	.L.str.495
	.size	_ZN2kc20kc_storageclassnamesE, 16

	.type	.L.str.496,@object              # @.str.496
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.496:
	.asciz	"/home/tangyan/code/auto-tests/loong-opt-cov-ts/test-suite/llvm-test-suite/MultiSource/Applications/kimwitu++/k.cc"
	.size	.L.str.496, 114

	.type	.L.str.497,@object              # @.str.497
.L.str.497:
	.asciz	"Cannot create this kind of phylum - predefined phyla must be handled seperately"
	.size	.L.str.497, 80

	.type	.L.str.498,@object              # @.str.498
.L.str.498:
	.asciz	"Cannot create this kind of phylum - unkown operator id"
	.size	.L.str.498, 55

	.type	.L.str.499,@object              # @.str.499
.L.str.499:
	.asciz	"Cannot select attribute for this kind of phylum - has no attributes"
	.size	.L.str.499, 68

	.type	_ZN2kcL14kc_indentationB5cxx11E,@object # @_ZN2kcL14kc_indentationB5cxx11E
	.local	_ZN2kcL14kc_indentationB5cxx11E
	.comm	_ZN2kcL14kc_indentationB5cxx11E,32,8
	.type	_ZTIN2kc20impl_abstract_phylumE,@object # @_ZTIN2kc20impl_abstract_phylumE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc20impl_abstract_phylumE
	.p2align	3, 0x0
_ZTIN2kc20impl_abstract_phylumE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc20impl_abstract_phylumE, 16

	.type	_ZTSN2kc20impl_abstract_phylumE,@object # @_ZTSN2kc20impl_abstract_phylumE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc20impl_abstract_phylumE
_ZTSN2kc20impl_abstract_phylumE:
	.asciz	"N2kc20impl_abstract_phylumE"
	.size	_ZTSN2kc20impl_abstract_phylumE, 28

	.type	.L.str.502,@object              # @.str.502
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.502:
	.asciz	"| "
	.size	.L.str.502, 3

	.type	.L.str.503,@object              # @.str.503
.L.str.503:
	.asciz	"%s%p\n"
	.size	.L.str.503, 6

	.type	.L.str.504,@object              # @.str.504
.L.str.504:
	.asciz	"%s%s\n"
	.size	.L.str.504, 6

	.type	.L.str.505,@object              # @.str.505
.L.str.505:
	.asciz	"%s%i\n"
	.size	.L.str.505, 6

	.type	.L.str.506,@object              # @.str.506
.L.str.506:
	.asciz	"%s%f\n"
	.size	.L.str.506, 6

	.type	.L.str.507,@object              # @.str.507
.L.str.507:
	.asciz	"  "
	.size	.L.str.507, 3

	.type	.L.str.508,@object              # @.str.508
.L.str.508:
	.asciz	"`-"
	.size	.L.str.508, 3

	.type	.L.str.509,@object              # @.str.509
.L.str.509:
	.asciz	"|-"
	.size	.L.str.509, 3

	.type	.L.str.510,@object              # @.str.510
.L.str.510:
	.asciz	"Internal Error: list::last was called with argument Nil%s\n"
	.size	.L.str.510, 59

	.type	.L.str.511,@object              # @.str.511
.L.str.511:
	.asciz	"Internal Error: unknown phylum number: %d"
	.size	.L.str.511, 42

	.type	.L.str.512,@object              # @.str.512
.L.str.512:
	.asciz	"Internal Error: unknown operator number: %d"
	.size	.L.str.512, 44

	.type	.L.str.513,@object              # @.str.513
.L.str.513:
	.asciz	"unexpected number of sub-phyla"
	.size	.L.str.513, 31

	.type	_ZTVN2kc20impl_abstract_phylumE,@object # @_ZTVN2kc20impl_abstract_phylumE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc20impl_abstract_phylumE
	.p2align	3, 0x0
_ZTVN2kc20impl_abstract_phylumE:
	.dword	0
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.dword	__cxa_pure_virtual
	.dword	_ZNK2kc20impl_abstract_phylum9subphylumEi
	.dword	_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_
	.dword	_ZN2kc20impl_abstract_phylum7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc20impl_abstract_phylumD0Ev
	.dword	__cxa_pure_virtual
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc20impl_abstract_phylumE, 104

	.type	_ZTIN2kc32impl_bindingidmark_BindingIdMarkE,@object # @_ZTIN2kc32impl_bindingidmark_BindingIdMarkE
	.globl	_ZTIN2kc32impl_bindingidmark_BindingIdMarkE
	.p2align	3, 0x0
_ZTIN2kc32impl_bindingidmark_BindingIdMarkE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_bindingidmark_BindingIdMarkE
	.dword	_ZTIN2kc18impl_bindingidmarkE
	.size	_ZTIN2kc32impl_bindingidmark_BindingIdMarkE, 24

	.type	_ZTSN2kc32impl_bindingidmark_BindingIdMarkE,@object # @_ZTSN2kc32impl_bindingidmark_BindingIdMarkE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_bindingidmark_BindingIdMarkE
_ZTSN2kc32impl_bindingidmark_BindingIdMarkE:
	.asciz	"N2kc32impl_bindingidmark_BindingIdMarkE"
	.size	_ZTSN2kc32impl_bindingidmark_BindingIdMarkE, 40

	.type	_ZTIN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE,@object # @_ZTIN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
	.p2align	3, 0x0
_ZTIN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
	.dword	_ZTIN2kc29impl_countedphylumdeclarationE
	.size	_ZTIN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE, 24

	.type	_ZTSN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE,@object # @_ZTSN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
_ZTSN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE:
	.asciz	"N2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE"
	.size	_ZTSN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE, 62

	.type	_ZTIN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE,@object # @_ZTIN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
	.p2align	3, 0x0
_ZTIN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
	.dword	_ZTIN2kc27impl_addedphylumdeclarationE
	.size	_ZTIN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE, 24

	.type	_ZTSN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE,@object # @_ZTSN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
_ZTSN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE:
	.asciz	"N2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE"
	.size	_ZTSN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE, 58

	.type	_ZTIN2kc21impl_problem_Problem6E,@object # @_ZTIN2kc21impl_problem_Problem6E
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_problem_Problem6E
	.p2align	3, 0x0
_ZTIN2kc21impl_problem_Problem6E:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_problem_Problem6E
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc21impl_problem_Problem6E, 24

	.type	_ZTSN2kc21impl_problem_Problem6E,@object # @_ZTSN2kc21impl_problem_Problem6E
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_problem_Problem6E
_ZTSN2kc21impl_problem_Problem6E:
	.asciz	"N2kc21impl_problem_Problem6E"
	.size	_ZTSN2kc21impl_problem_Problem6E, 29

	.type	_ZTIN2kc21impl_problem_Problem5E,@object # @_ZTIN2kc21impl_problem_Problem5E
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_problem_Problem5E
	.p2align	3, 0x0
_ZTIN2kc21impl_problem_Problem5E:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_problem_Problem5E
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc21impl_problem_Problem5E, 24

	.type	_ZTSN2kc21impl_problem_Problem5E,@object # @_ZTSN2kc21impl_problem_Problem5E
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_problem_Problem5E
_ZTSN2kc21impl_problem_Problem5E:
	.asciz	"N2kc21impl_problem_Problem5E"
	.size	_ZTSN2kc21impl_problem_Problem5E, 29

	.type	_ZTIN2kc21impl_problem_Problem4E,@object # @_ZTIN2kc21impl_problem_Problem4E
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_problem_Problem4E
	.p2align	3, 0x0
_ZTIN2kc21impl_problem_Problem4E:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_problem_Problem4E
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc21impl_problem_Problem4E, 24

	.type	_ZTSN2kc21impl_problem_Problem4E,@object # @_ZTSN2kc21impl_problem_Problem4E
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_problem_Problem4E
_ZTSN2kc21impl_problem_Problem4E:
	.asciz	"N2kc21impl_problem_Problem4E"
	.size	_ZTSN2kc21impl_problem_Problem4E, 29

	.type	_ZTIN2kc25impl_problem_Problem3int1E,@object # @_ZTIN2kc25impl_problem_Problem3int1E
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc25impl_problem_Problem3int1E
	.p2align	3, 0x0
_ZTIN2kc25impl_problem_Problem3int1E:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc25impl_problem_Problem3int1E
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc25impl_problem_Problem3int1E, 24

	.type	_ZTSN2kc25impl_problem_Problem3int1E,@object # @_ZTSN2kc25impl_problem_Problem3int1E
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc25impl_problem_Problem3int1E
_ZTSN2kc25impl_problem_Problem3int1E:
	.asciz	"N2kc25impl_problem_Problem3int1E"
	.size	_ZTSN2kc25impl_problem_Problem3int1E, 33

	.type	_ZTIN2kc21impl_problem_Problem3E,@object # @_ZTIN2kc21impl_problem_Problem3E
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_problem_Problem3E
	.p2align	3, 0x0
_ZTIN2kc21impl_problem_Problem3E:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_problem_Problem3E
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc21impl_problem_Problem3E, 24

	.type	_ZTSN2kc21impl_problem_Problem3E,@object # @_ZTSN2kc21impl_problem_Problem3E
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_problem_Problem3E
_ZTSN2kc21impl_problem_Problem3E:
	.asciz	"N2kc21impl_problem_Problem3E"
	.size	_ZTSN2kc21impl_problem_Problem3E, 29

	.type	_ZTIN2kc21impl_problem_Problem2E,@object # @_ZTIN2kc21impl_problem_Problem2E
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_problem_Problem2E
	.p2align	3, 0x0
_ZTIN2kc21impl_problem_Problem2E:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_problem_Problem2E
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc21impl_problem_Problem2E, 24

	.type	_ZTSN2kc21impl_problem_Problem2E,@object # @_ZTSN2kc21impl_problem_Problem2E
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_problem_Problem2E
_ZTSN2kc21impl_problem_Problem2E:
	.asciz	"N2kc21impl_problem_Problem2E"
	.size	_ZTSN2kc21impl_problem_Problem2E, 29

	.type	_ZTIN2kc37impl_problem_Problem1storageoption1IDE,@object # @_ZTIN2kc37impl_problem_Problem1storageoption1IDE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc37impl_problem_Problem1storageoption1IDE
	.p2align	3, 0x0
_ZTIN2kc37impl_problem_Problem1storageoption1IDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc37impl_problem_Problem1storageoption1IDE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc37impl_problem_Problem1storageoption1IDE, 24

	.type	_ZTSN2kc37impl_problem_Problem1storageoption1IDE,@object # @_ZTSN2kc37impl_problem_Problem1storageoption1IDE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc37impl_problem_Problem1storageoption1IDE
_ZTSN2kc37impl_problem_Problem1storageoption1IDE:
	.asciz	"N2kc37impl_problem_Problem1storageoption1IDE"
	.size	_ZTSN2kc37impl_problem_Problem1storageoption1IDE, 45

	.type	_ZTIN2kc30impl_problem_Problem1INT1ID1IDE,@object # @_ZTIN2kc30impl_problem_Problem1INT1ID1IDE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc30impl_problem_Problem1INT1ID1IDE
	.p2align	3, 0x0
_ZTIN2kc30impl_problem_Problem1INT1ID1IDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc30impl_problem_Problem1INT1ID1IDE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc30impl_problem_Problem1INT1ID1IDE, 24

	.type	_ZTSN2kc30impl_problem_Problem1INT1ID1IDE,@object # @_ZTSN2kc30impl_problem_Problem1INT1ID1IDE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc30impl_problem_Problem1INT1ID1IDE
_ZTSN2kc30impl_problem_Problem1INT1ID1IDE:
	.asciz	"N2kc30impl_problem_Problem1INT1ID1IDE"
	.size	_ZTSN2kc30impl_problem_Problem1INT1ID1IDE, 38

	.type	_ZTIN2kc29impl_problem_Problem1ID1ID1IDE,@object # @_ZTIN2kc29impl_problem_Problem1ID1ID1IDE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc29impl_problem_Problem1ID1ID1IDE
	.p2align	3, 0x0
_ZTIN2kc29impl_problem_Problem1ID1ID1IDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_problem_Problem1ID1ID1IDE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc29impl_problem_Problem1ID1ID1IDE, 24

	.type	_ZTSN2kc29impl_problem_Problem1ID1ID1IDE,@object # @_ZTSN2kc29impl_problem_Problem1ID1ID1IDE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc29impl_problem_Problem1ID1ID1IDE
_ZTSN2kc29impl_problem_Problem1ID1ID1IDE:
	.asciz	"N2kc29impl_problem_Problem1ID1ID1IDE"
	.size	_ZTSN2kc29impl_problem_Problem1ID1ID1IDE, 37

	.type	_ZTIN2kc27impl_problem_Problem1INT1IDE,@object # @_ZTIN2kc27impl_problem_Problem1INT1IDE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc27impl_problem_Problem1INT1IDE
	.p2align	3, 0x0
_ZTIN2kc27impl_problem_Problem1INT1IDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_problem_Problem1INT1IDE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc27impl_problem_Problem1INT1IDE, 24

	.type	_ZTSN2kc27impl_problem_Problem1INT1IDE,@object # @_ZTSN2kc27impl_problem_Problem1INT1IDE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc27impl_problem_Problem1INT1IDE
_ZTSN2kc27impl_problem_Problem1INT1IDE:
	.asciz	"N2kc27impl_problem_Problem1INT1IDE"
	.size	_ZTSN2kc27impl_problem_Problem1INT1IDE, 35

	.type	_ZTIN2kc25impl_problem_Problem1int1E,@object # @_ZTIN2kc25impl_problem_Problem1int1E
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc25impl_problem_Problem1int1E
	.p2align	3, 0x0
_ZTIN2kc25impl_problem_Problem1int1E:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc25impl_problem_Problem1int1E
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc25impl_problem_Problem1int1E, 24

	.type	_ZTSN2kc25impl_problem_Problem1int1E,@object # @_ZTSN2kc25impl_problem_Problem1int1E
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc25impl_problem_Problem1int1E
_ZTSN2kc25impl_problem_Problem1int1E:
	.asciz	"N2kc25impl_problem_Problem1int1E"
	.size	_ZTSN2kc25impl_problem_Problem1int1E, 33

	.type	_ZTIN2kc24impl_problem_Problem1INTE,@object # @_ZTIN2kc24impl_problem_Problem1INTE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_problem_Problem1INTE
	.p2align	3, 0x0
_ZTIN2kc24impl_problem_Problem1INTE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_problem_Problem1INTE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc24impl_problem_Problem1INTE, 24

	.type	_ZTSN2kc24impl_problem_Problem1INTE,@object # @_ZTSN2kc24impl_problem_Problem1INTE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_problem_Problem1INTE
_ZTSN2kc24impl_problem_Problem1INTE:
	.asciz	"N2kc24impl_problem_Problem1INTE"
	.size	_ZTSN2kc24impl_problem_Problem1INTE, 32

	.type	_ZTIN2kc25impl_problem_Problem1t1IDE,@object # @_ZTIN2kc25impl_problem_Problem1t1IDE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc25impl_problem_Problem1t1IDE
	.p2align	3, 0x0
_ZTIN2kc25impl_problem_Problem1t1IDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc25impl_problem_Problem1t1IDE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc25impl_problem_Problem1t1IDE, 24

	.type	_ZTSN2kc25impl_problem_Problem1t1IDE,@object # @_ZTSN2kc25impl_problem_Problem1t1IDE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc25impl_problem_Problem1t1IDE
_ZTSN2kc25impl_problem_Problem1t1IDE:
	.asciz	"N2kc25impl_problem_Problem1t1IDE"
	.size	_ZTSN2kc25impl_problem_Problem1t1IDE, 33

	.type	_ZTIN2kc26impl_problem_Problem1ID1IDE,@object # @_ZTIN2kc26impl_problem_Problem1ID1IDE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc26impl_problem_Problem1ID1IDE
	.p2align	3, 0x0
_ZTIN2kc26impl_problem_Problem1ID1IDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc26impl_problem_Problem1ID1IDE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc26impl_problem_Problem1ID1IDE, 24

	.type	_ZTSN2kc26impl_problem_Problem1ID1IDE,@object # @_ZTSN2kc26impl_problem_Problem1ID1IDE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc26impl_problem_Problem1ID1IDE
_ZTSN2kc26impl_problem_Problem1ID1IDE:
	.asciz	"N2kc26impl_problem_Problem1ID1IDE"
	.size	_ZTSN2kc26impl_problem_Problem1ID1IDE, 34

	.type	_ZTIN2kc23impl_problem_Problem1weE,@object # @_ZTIN2kc23impl_problem_Problem1weE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc23impl_problem_Problem1weE
	.p2align	3, 0x0
_ZTIN2kc23impl_problem_Problem1weE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_problem_Problem1weE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc23impl_problem_Problem1weE, 24

	.type	_ZTSN2kc23impl_problem_Problem1weE,@object # @_ZTSN2kc23impl_problem_Problem1weE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc23impl_problem_Problem1weE
_ZTSN2kc23impl_problem_Problem1weE:
	.asciz	"N2kc23impl_problem_Problem1weE"
	.size	_ZTSN2kc23impl_problem_Problem1weE, 31

	.type	_ZTIN2kc24impl_problem_Problem1tIDE,@object # @_ZTIN2kc24impl_problem_Problem1tIDE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_problem_Problem1tIDE
	.p2align	3, 0x0
_ZTIN2kc24impl_problem_Problem1tIDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_problem_Problem1tIDE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc24impl_problem_Problem1tIDE, 24

	.type	_ZTSN2kc24impl_problem_Problem1tIDE,@object # @_ZTSN2kc24impl_problem_Problem1tIDE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_problem_Problem1tIDE
_ZTSN2kc24impl_problem_Problem1tIDE:
	.asciz	"N2kc24impl_problem_Problem1tIDE"
	.size	_ZTSN2kc24impl_problem_Problem1tIDE, 32

	.type	_ZTIN2kc23impl_problem_Problem1IDE,@object # @_ZTIN2kc23impl_problem_Problem1IDE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc23impl_problem_Problem1IDE
	.p2align	3, 0x0
_ZTIN2kc23impl_problem_Problem1IDE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_problem_Problem1IDE
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc23impl_problem_Problem1IDE, 24

	.type	_ZTSN2kc23impl_problem_Problem1IDE,@object # @_ZTSN2kc23impl_problem_Problem1IDE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc23impl_problem_Problem1IDE
_ZTSN2kc23impl_problem_Problem1IDE:
	.asciz	"N2kc23impl_problem_Problem1IDE"
	.size	_ZTSN2kc23impl_problem_Problem1IDE, 31

	.type	_ZTIN2kc21impl_problem_Problem1E,@object # @_ZTIN2kc21impl_problem_Problem1E
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_problem_Problem1E
	.p2align	3, 0x0
_ZTIN2kc21impl_problem_Problem1E:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_problem_Problem1E
	.dword	_ZTIN2kc12impl_problemE
	.size	_ZTIN2kc21impl_problem_Problem1E, 24

	.type	_ZTSN2kc21impl_problem_Problem1E,@object # @_ZTSN2kc21impl_problem_Problem1E
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_problem_Problem1E
_ZTSN2kc21impl_problem_Problem1E:
	.asciz	"N2kc21impl_problem_Problem1E"
	.size	_ZTSN2kc21impl_problem_Problem1E, 29

	.type	_ZTIN2kc18impl_error_WarningE,@object # @_ZTIN2kc18impl_error_WarningE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc18impl_error_WarningE
	.p2align	3, 0x0
_ZTIN2kc18impl_error_WarningE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_error_WarningE
	.dword	_ZTIN2kc10impl_errorE
	.size	_ZTIN2kc18impl_error_WarningE, 24

	.type	_ZTSN2kc18impl_error_WarningE,@object # @_ZTSN2kc18impl_error_WarningE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc18impl_error_WarningE
_ZTSN2kc18impl_error_WarningE:
	.asciz	"N2kc18impl_error_WarningE"
	.size	_ZTSN2kc18impl_error_WarningE, 26

	.type	_ZTIN2kc10impl_errorE,@object   # @_ZTIN2kc10impl_errorE
	.section	.data.rel.ro._ZTIN2kc10impl_errorE,"awG",@progbits,_ZTIN2kc10impl_errorE,comdat
	.weak	_ZTIN2kc10impl_errorE
	.p2align	3, 0x0
_ZTIN2kc10impl_errorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc10impl_errorE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc10impl_errorE, 24

	.type	_ZTSN2kc10impl_errorE,@object   # @_ZTSN2kc10impl_errorE
	.section	.rodata._ZTSN2kc10impl_errorE,"aG",@progbits,_ZTSN2kc10impl_errorE,comdat
	.weak	_ZTSN2kc10impl_errorE
_ZTSN2kc10impl_errorE:
	.asciz	"N2kc10impl_errorE"
	.size	_ZTSN2kc10impl_errorE, 18

	.type	_ZTIN2kc19impl_error_NonFatalE,@object # @_ZTIN2kc19impl_error_NonFatalE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_error_NonFatalE
	.p2align	3, 0x0
_ZTIN2kc19impl_error_NonFatalE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_error_NonFatalE
	.dword	_ZTIN2kc10impl_errorE
	.size	_ZTIN2kc19impl_error_NonFatalE, 24

	.type	_ZTSN2kc19impl_error_NonFatalE,@object # @_ZTSN2kc19impl_error_NonFatalE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_error_NonFatalE
_ZTSN2kc19impl_error_NonFatalE:
	.asciz	"N2kc19impl_error_NonFatalE"
	.size	_ZTSN2kc19impl_error_NonFatalE, 27

	.type	_ZTIN2kc16impl_error_FatalE,@object # @_ZTIN2kc16impl_error_FatalE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc16impl_error_FatalE
	.p2align	3, 0x0
_ZTIN2kc16impl_error_FatalE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc16impl_error_FatalE
	.dword	_ZTIN2kc10impl_errorE
	.size	_ZTIN2kc16impl_error_FatalE, 24

	.type	_ZTSN2kc16impl_error_FatalE,@object # @_ZTSN2kc16impl_error_FatalE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc16impl_error_FatalE
_ZTSN2kc16impl_error_FatalE:
	.asciz	"N2kc16impl_error_FatalE"
	.size	_ZTSN2kc16impl_error_FatalE, 24

	.type	_ZTIN2kc33impl_baseclass_decl_BaseClassDeclE,@object # @_ZTIN2kc33impl_baseclass_decl_BaseClassDeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc33impl_baseclass_decl_BaseClassDeclE
	.p2align	3, 0x0
_ZTIN2kc33impl_baseclass_decl_BaseClassDeclE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc33impl_baseclass_decl_BaseClassDeclE
	.dword	_ZTIN2kc19impl_baseclass_declE
	.size	_ZTIN2kc33impl_baseclass_decl_BaseClassDeclE, 24

	.type	_ZTSN2kc33impl_baseclass_decl_BaseClassDeclE,@object # @_ZTSN2kc33impl_baseclass_decl_BaseClassDeclE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc33impl_baseclass_decl_BaseClassDeclE
_ZTSN2kc33impl_baseclass_decl_BaseClassDeclE:
	.asciz	"N2kc33impl_baseclass_decl_BaseClassDeclE"
	.size	_ZTSN2kc33impl_baseclass_decl_BaseClassDeclE, 41

	.type	_ZTIN2kc28impl_ac_base_init_AcBaseInitE,@object # @_ZTIN2kc28impl_ac_base_init_AcBaseInitE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc28impl_ac_base_init_AcBaseInitE
	.p2align	3, 0x0
_ZTIN2kc28impl_ac_base_init_AcBaseInitE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc28impl_ac_base_init_AcBaseInitE
	.dword	_ZTIN2kc17impl_ac_base_initE
	.size	_ZTIN2kc28impl_ac_base_init_AcBaseInitE, 24

	.type	_ZTSN2kc28impl_ac_base_init_AcBaseInitE,@object # @_ZTSN2kc28impl_ac_base_init_AcBaseInitE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc28impl_ac_base_init_AcBaseInitE
_ZTSN2kc28impl_ac_base_init_AcBaseInitE:
	.asciz	"N2kc28impl_ac_base_init_AcBaseInitE"
	.size	_ZTSN2kc28impl_ac_base_init_AcBaseInitE, 36

	.type	_ZTIN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE,@object # @_ZTIN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
	.p2align	3, 0x0
_ZTIN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
	.dword	_ZTIN2kc26impl_ac_opt_base_init_listE
	.size	_ZTIN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE, 24

	.type	_ZTSN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE,@object # @_ZTSN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
_ZTSN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE:
	.asciz	"N2kc40impl_ac_opt_base_init_list_AcYesBaseInitE"
	.size	_ZTSN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE, 48

	.type	_ZTIN2kc39impl_ac_constant_expression_AcConstExprE,@object # @_ZTIN2kc39impl_ac_constant_expression_AcConstExprE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc39impl_ac_constant_expression_AcConstExprE
	.p2align	3, 0x0
_ZTIN2kc39impl_ac_constant_expression_AcConstExprE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc39impl_ac_constant_expression_AcConstExprE
	.dword	_ZTIN2kc27impl_ac_constant_expressionE
	.size	_ZTIN2kc39impl_ac_constant_expression_AcConstExprE, 24

	.type	_ZTSN2kc39impl_ac_constant_expression_AcConstExprE,@object # @_ZTSN2kc39impl_ac_constant_expression_AcConstExprE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc39impl_ac_constant_expression_AcConstExprE
_ZTSN2kc39impl_ac_constant_expression_AcConstExprE:
	.asciz	"N2kc39impl_ac_constant_expression_AcConstExprE"
	.size	_ZTSN2kc39impl_ac_constant_expression_AcConstExprE, 47

	.type	_ZTIN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE,@object # @_ZTIN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
	.p2align	3, 0x0
_ZTIN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
	.dword	_ZTIN2kc34impl_ac_constant_expression_optionE
	.size	_ZTIN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE, 24

	.type	_ZTSN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE,@object # @_ZTSN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
_ZTSN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE:
	.asciz	"N2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE"
	.size	_ZTSN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE, 68

	.type	_ZTIN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE,@object # @_ZTIN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
	.p2align	3, 0x0
_ZTIN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
	.dword	_ZTIN2kc34impl_ac_direct_abstract_declaratorE
	.size	_ZTIN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE, 24

	.type	_ZTSN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE,@object # @_ZTSN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
_ZTSN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE:
	.asciz	"N2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE"
	.size	_ZTSN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE, 57

	.type	_ZTIN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE,@object # @_ZTIN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
	.p2align	3, 0x0
_ZTIN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
	.dword	_ZTIN2kc34impl_ac_direct_abstract_declaratorE
	.size	_ZTIN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE, 24

	.type	_ZTSN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE,@object # @_ZTSN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
_ZTSN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE:
	.asciz	"N2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE"
	.size	_ZTSN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE, 60

	.type	_ZTIN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE,@object # @_ZTIN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
	.p2align	3, 0x0
_ZTIN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
	.dword	_ZTIN2kc34impl_ac_direct_abstract_declaratorE
	.size	_ZTIN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE, 24

	.type	_ZTSN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE,@object # @_ZTSN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
_ZTSN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE:
	.asciz	"N2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE"
	.size	_ZTSN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE, 59

	.type	_ZTIN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE,@object # @_ZTIN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
	.p2align	3, 0x0
_ZTIN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
	.dword	_ZTIN2kc41impl_ac_direct_abstract_declarator_optionE
	.size	_ZTIN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE, 24

	.type	_ZTSN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE,@object # @_ZTSN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
_ZTSN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE:
	.asciz	"N2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE"
	.size	_ZTSN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE, 82

	.type	_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE,@object # @_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
	.p2align	3, 0x0
_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
	.dword	_ZTIN2kc27impl_ac_abstract_declaratorE
	.size	_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE, 24

	.type	_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE,@object # @_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE:
	.asciz	"N2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE"
	.size	_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE, 52

	.type	_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE,@object # @_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
	.p2align	3, 0x0
_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
	.dword	_ZTIN2kc27impl_ac_abstract_declaratorE
	.size	_ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE, 24

	.type	_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE,@object # @_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE:
	.asciz	"N2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE"
	.size	_ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE, 52

	.type	_ZTIN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE,@object # @_ZTIN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
	.p2align	3, 0x0
_ZTIN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
	.dword	_ZTIN2kc29impl_ac_parameter_declarationE
	.size	_ZTIN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE, 24

	.type	_ZTSN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE,@object # @_ZTSN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
_ZTSN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE:
	.asciz	"N2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE"
	.size	_ZTSN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE, 54

	.type	_ZTIN2kc43impl_ac_parameter_declaration_AcParDeclDeclE,@object # @_ZTIN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
	.p2align	3, 0x0
_ZTIN2kc43impl_ac_parameter_declaration_AcParDeclDeclE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
	.dword	_ZTIN2kc29impl_ac_parameter_declarationE
	.size	_ZTIN2kc43impl_ac_parameter_declaration_AcParDeclDeclE, 24

	.type	_ZTSN2kc43impl_ac_parameter_declaration_AcParDeclDeclE,@object # @_ZTSN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
_ZTSN2kc43impl_ac_parameter_declaration_AcParDeclDeclE:
	.asciz	"N2kc43impl_ac_parameter_declaration_AcParDeclDeclE"
	.size	_ZTSN2kc43impl_ac_parameter_declaration_AcParDeclDeclE, 51

	.type	_ZTIN2kc41impl_ac_parameter_type_list_AcParList3DotE,@object # @_ZTIN2kc41impl_ac_parameter_type_list_AcParList3DotE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc41impl_ac_parameter_type_list_AcParList3DotE
	.p2align	3, 0x0
_ZTIN2kc41impl_ac_parameter_type_list_AcParList3DotE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc41impl_ac_parameter_type_list_AcParList3DotE
	.dword	_ZTIN2kc27impl_ac_parameter_type_listE
	.size	_ZTIN2kc41impl_ac_parameter_type_list_AcParList3DotE, 24

	.type	_ZTSN2kc41impl_ac_parameter_type_list_AcParList3DotE,@object # @_ZTSN2kc41impl_ac_parameter_type_list_AcParList3DotE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc41impl_ac_parameter_type_list_AcParList3DotE
_ZTSN2kc41impl_ac_parameter_type_list_AcParList3DotE:
	.asciz	"N2kc41impl_ac_parameter_type_list_AcParList3DotE"
	.size	_ZTSN2kc41impl_ac_parameter_type_list_AcParList3DotE, 49

	.type	_ZTIN2kc37impl_ac_parameter_type_list_AcParListE,@object # @_ZTIN2kc37impl_ac_parameter_type_list_AcParListE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc37impl_ac_parameter_type_list_AcParListE
	.p2align	3, 0x0
_ZTIN2kc37impl_ac_parameter_type_list_AcParListE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc37impl_ac_parameter_type_list_AcParListE
	.dword	_ZTIN2kc27impl_ac_parameter_type_listE
	.size	_ZTIN2kc37impl_ac_parameter_type_list_AcParListE, 24

	.type	_ZTSN2kc37impl_ac_parameter_type_list_AcParListE,@object # @_ZTSN2kc37impl_ac_parameter_type_list_AcParListE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc37impl_ac_parameter_type_list_AcParListE
_ZTSN2kc37impl_ac_parameter_type_list_AcParListE:
	.asciz	"N2kc37impl_ac_parameter_type_list_AcParListE"
	.size	_ZTSN2kc37impl_ac_parameter_type_list_AcParListE, 45

	.type	_ZTIN2kc36impl_ac_operator_name_AcOperatorNameE,@object # @_ZTIN2kc36impl_ac_operator_name_AcOperatorNameE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc36impl_ac_operator_name_AcOperatorNameE
	.p2align	3, 0x0
_ZTIN2kc36impl_ac_operator_name_AcOperatorNameE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc36impl_ac_operator_name_AcOperatorNameE
	.dword	_ZTIN2kc21impl_ac_operator_nameE
	.size	_ZTIN2kc36impl_ac_operator_name_AcOperatorNameE, 24

	.type	_ZTSN2kc36impl_ac_operator_name_AcOperatorNameE,@object # @_ZTSN2kc36impl_ac_operator_name_AcOperatorNameE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc36impl_ac_operator_name_AcOperatorNameE
_ZTSN2kc36impl_ac_operator_name_AcOperatorNameE:
	.asciz	"N2kc36impl_ac_operator_name_AcOperatorNameE"
	.size	_ZTSN2kc36impl_ac_operator_name_AcOperatorNameE, 44

	.type	_ZTIN2kc29impl_ac_pointer_AcPointerConsE,@object # @_ZTIN2kc29impl_ac_pointer_AcPointerConsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc29impl_ac_pointer_AcPointerConsE
	.p2align	3, 0x0
_ZTIN2kc29impl_ac_pointer_AcPointerConsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_ac_pointer_AcPointerConsE
	.dword	_ZTIN2kc15impl_ac_pointerE
	.size	_ZTIN2kc29impl_ac_pointer_AcPointerConsE, 24

	.type	_ZTSN2kc29impl_ac_pointer_AcPointerConsE,@object # @_ZTSN2kc29impl_ac_pointer_AcPointerConsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc29impl_ac_pointer_AcPointerConsE
_ZTSN2kc29impl_ac_pointer_AcPointerConsE:
	.asciz	"N2kc29impl_ac_pointer_AcPointerConsE"
	.size	_ZTSN2kc29impl_ac_pointer_AcPointerConsE, 37

	.type	_ZTIN2kc28impl_ac_pointer_AcPointerNilE,@object # @_ZTIN2kc28impl_ac_pointer_AcPointerNilE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc28impl_ac_pointer_AcPointerNilE
	.p2align	3, 0x0
_ZTIN2kc28impl_ac_pointer_AcPointerNilE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc28impl_ac_pointer_AcPointerNilE
	.dword	_ZTIN2kc15impl_ac_pointerE
	.size	_ZTIN2kc28impl_ac_pointer_AcPointerNilE, 24

	.type	_ZTSN2kc28impl_ac_pointer_AcPointerNilE,@object # @_ZTSN2kc28impl_ac_pointer_AcPointerNilE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc28impl_ac_pointer_AcPointerNilE
_ZTSN2kc28impl_ac_pointer_AcPointerNilE:
	.asciz	"N2kc28impl_ac_pointer_AcPointerNilE"
	.size	_ZTSN2kc28impl_ac_pointer_AcPointerNilE, 36

	.type	_ZTIN2kc33impl_ac_pointer_option_YespointerE,@object # @_ZTIN2kc33impl_ac_pointer_option_YespointerE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc33impl_ac_pointer_option_YespointerE
	.p2align	3, 0x0
_ZTIN2kc33impl_ac_pointer_option_YespointerE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc33impl_ac_pointer_option_YespointerE
	.dword	_ZTIN2kc22impl_ac_pointer_optionE
	.size	_ZTIN2kc33impl_ac_pointer_option_YespointerE, 24

	.type	_ZTSN2kc33impl_ac_pointer_option_YespointerE,@object # @_ZTSN2kc33impl_ac_pointer_option_YespointerE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc33impl_ac_pointer_option_YespointerE
_ZTSN2kc33impl_ac_pointer_option_YespointerE:
	.asciz	"N2kc33impl_ac_pointer_option_YespointerE"
	.size	_ZTSN2kc33impl_ac_pointer_option_YespointerE, 41

	.type	_ZTIN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE,@object # @_ZTIN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
	.p2align	3, 0x0
_ZTIN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
	.dword	_ZTIN2kc25impl_ac_direct_declaratorE
	.size	_ZTIN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE, 24

	.type	_ZTSN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE,@object # @_ZTSN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
_ZTSN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE:
	.asciz	"N2kc42impl_ac_direct_declarator_AcOperatorDeclIdE"
	.size	_ZTSN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE, 50

	.type	_ZTIN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE,@object # @_ZTIN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
	.p2align	3, 0x0
_ZTIN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
	.dword	_ZTIN2kc25impl_ac_direct_declaratorE
	.size	_ZTIN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE, 24

	.type	_ZTSN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE,@object # @_ZTSN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
_ZTSN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE:
	.asciz	"N2kc44impl_ac_direct_declarator_AcConvOperatorDeclE"
	.size	_ZTSN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE, 52

	.type	_ZTIN2kc38impl_ac_direct_declarator_AcMemberDeclE,@object # @_ZTIN2kc38impl_ac_direct_declarator_AcMemberDeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc38impl_ac_direct_declarator_AcMemberDeclE
	.p2align	3, 0x0
_ZTIN2kc38impl_ac_direct_declarator_AcMemberDeclE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc38impl_ac_direct_declarator_AcMemberDeclE
	.dword	_ZTIN2kc25impl_ac_direct_declaratorE
	.size	_ZTIN2kc38impl_ac_direct_declarator_AcMemberDeclE, 24

	.type	_ZTSN2kc38impl_ac_direct_declarator_AcMemberDeclE,@object # @_ZTSN2kc38impl_ac_direct_declarator_AcMemberDeclE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc38impl_ac_direct_declarator_AcMemberDeclE
_ZTSN2kc38impl_ac_direct_declarator_AcMemberDeclE:
	.asciz	"N2kc38impl_ac_direct_declarator_AcMemberDeclE"
	.size	_ZTSN2kc38impl_ac_direct_declarator_AcMemberDeclE, 46

	.type	_ZTIN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE,@object # @_ZTIN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
	.p2align	3, 0x0
_ZTIN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
	.dword	_ZTIN2kc25impl_ac_direct_declaratorE
	.size	_ZTIN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE, 24

	.type	_ZTSN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE,@object # @_ZTSN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
_ZTSN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE:
	.asciz	"N2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE"
	.size	_ZTSN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE, 54

	.type	_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE,@object # @_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
	.p2align	3, 0x0
_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
	.dword	_ZTIN2kc25impl_ac_direct_declaratorE
	.size	_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE, 24

	.type	_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE,@object # @_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE:
	.asciz	"N2kc43impl_ac_direct_declarator_AcDirectDeclProtoE"
	.size	_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE, 51

	.type	_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE,@object # @_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
	.p2align	3, 0x0
_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
	.dword	_ZTIN2kc25impl_ac_direct_declaratorE
	.size	_ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE, 24

	.type	_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE,@object # @_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE:
	.asciz	"N2kc43impl_ac_direct_declarator_AcDirectDeclArrayE"
	.size	_ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE, 51

	.type	_ZTIN2kc42impl_ac_direct_declarator_AcDirectDeclPackE,@object # @_ZTIN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
	.p2align	3, 0x0
_ZTIN2kc42impl_ac_direct_declarator_AcDirectDeclPackE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
	.dword	_ZTIN2kc25impl_ac_direct_declaratorE
	.size	_ZTIN2kc42impl_ac_direct_declarator_AcDirectDeclPackE, 24

	.type	_ZTSN2kc42impl_ac_direct_declarator_AcDirectDeclPackE,@object # @_ZTSN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
_ZTSN2kc42impl_ac_direct_declarator_AcDirectDeclPackE:
	.asciz	"N2kc42impl_ac_direct_declarator_AcDirectDeclPackE"
	.size	_ZTSN2kc42impl_ac_direct_declarator_AcDirectDeclPackE, 50

	.type	_ZTIN2kc40impl_ac_direct_declarator_AcDirectDeclIdE,@object # @_ZTIN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
	.p2align	3, 0x0
_ZTIN2kc40impl_ac_direct_declarator_AcDirectDeclIdE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
	.dword	_ZTIN2kc25impl_ac_direct_declaratorE
	.size	_ZTIN2kc40impl_ac_direct_declarator_AcDirectDeclIdE, 24

	.type	_ZTSN2kc40impl_ac_direct_declarator_AcDirectDeclIdE,@object # @_ZTSN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
_ZTSN2kc40impl_ac_direct_declarator_AcDirectDeclIdE:
	.asciz	"N2kc40impl_ac_direct_declarator_AcDirectDeclIdE"
	.size	_ZTSN2kc40impl_ac_direct_declarator_AcDirectDeclIdE, 48

	.type	_ZTIN2kc31impl_ac_declarator_AcDeclaratorE,@object # @_ZTIN2kc31impl_ac_declarator_AcDeclaratorE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc31impl_ac_declarator_AcDeclaratorE
	.p2align	3, 0x0
_ZTIN2kc31impl_ac_declarator_AcDeclaratorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc31impl_ac_declarator_AcDeclaratorE
	.dword	_ZTIN2kc18impl_ac_declaratorE
	.size	_ZTIN2kc31impl_ac_declarator_AcDeclaratorE, 24

	.type	_ZTSN2kc31impl_ac_declarator_AcDeclaratorE,@object # @_ZTSN2kc31impl_ac_declarator_AcDeclaratorE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc31impl_ac_declarator_AcDeclaratorE
_ZTSN2kc31impl_ac_declarator_AcDeclaratorE:
	.asciz	"N2kc31impl_ac_declarator_AcDeclaratorE"
	.size	_ZTSN2kc31impl_ac_declarator_AcDeclaratorE, 39

	.type	_ZTIN2kc34impl_ac_init_declarator_AcInitDeclE,@object # @_ZTIN2kc34impl_ac_init_declarator_AcInitDeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc34impl_ac_init_declarator_AcInitDeclE
	.p2align	3, 0x0
_ZTIN2kc34impl_ac_init_declarator_AcInitDeclE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc34impl_ac_init_declarator_AcInitDeclE
	.dword	_ZTIN2kc23impl_ac_init_declaratorE
	.size	_ZTIN2kc34impl_ac_init_declarator_AcInitDeclE, 24

	.type	_ZTSN2kc34impl_ac_init_declarator_AcInitDeclE,@object # @_ZTSN2kc34impl_ac_init_declarator_AcInitDeclE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc34impl_ac_init_declarator_AcInitDeclE
_ZTSN2kc34impl_ac_init_declarator_AcInitDeclE:
	.asciz	"N2kc34impl_ac_init_declarator_AcInitDeclE"
	.size	_ZTSN2kc34impl_ac_init_declarator_AcInitDeclE, 42

	.type	_ZTIN2kc33impl_ac_type_specifier_AcTypeSpecE,@object # @_ZTIN2kc33impl_ac_type_specifier_AcTypeSpecE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc33impl_ac_type_specifier_AcTypeSpecE
	.p2align	3, 0x0
_ZTIN2kc33impl_ac_type_specifier_AcTypeSpecE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc33impl_ac_type_specifier_AcTypeSpecE
	.dword	_ZTIN2kc22impl_ac_type_specifierE
	.size	_ZTIN2kc33impl_ac_type_specifier_AcTypeSpecE, 24

	.type	_ZTSN2kc33impl_ac_type_specifier_AcTypeSpecE,@object # @_ZTSN2kc33impl_ac_type_specifier_AcTypeSpecE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc33impl_ac_type_specifier_AcTypeSpecE
_ZTSN2kc33impl_ac_type_specifier_AcTypeSpecE:
	.asciz	"N2kc33impl_ac_type_specifier_AcTypeSpecE"
	.size	_ZTSN2kc33impl_ac_type_specifier_AcTypeSpecE, 41

	.type	_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE,@object # @_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
	.p2align	3, 0x0
_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
	.dword	_ZTIN2kc29impl_ac_declaration_specifierE
	.size	_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE, 24

	.type	_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE,@object # @_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE:
	.asciz	"N2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE"
	.size	_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE, 56

	.type	_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE,@object # @_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
	.p2align	3, 0x0
_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
	.dword	_ZTIN2kc29impl_ac_declaration_specifierE
	.size	_ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE, 24

	.type	_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE,@object # @_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE:
	.asciz	"N2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE"
	.size	_ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE, 56

	.type	_ZTIN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE,@object # @_ZTIN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
	.p2align	3, 0x0
_ZTIN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
	.dword	_ZTIN2kc29impl_ac_declaration_specifierE
	.size	_ZTIN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE, 24

	.type	_ZTSN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE,@object # @_ZTSN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
_ZTSN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE:
	.asciz	"N2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE"
	.size	_ZTSN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE, 59

	.type	_ZTIN2kc33impl_ac_declaration_AcDeclarationE,@object # @_ZTIN2kc33impl_ac_declaration_AcDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc33impl_ac_declaration_AcDeclarationE
	.p2align	3, 0x0
_ZTIN2kc33impl_ac_declaration_AcDeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc33impl_ac_declaration_AcDeclarationE
	.dword	_ZTIN2kc19impl_ac_declarationE
	.size	_ZTIN2kc33impl_ac_declaration_AcDeclarationE, 24

	.type	_ZTSN2kc33impl_ac_declaration_AcDeclarationE,@object # @_ZTSN2kc33impl_ac_declaration_AcDeclarationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc33impl_ac_declaration_AcDeclarationE
_ZTSN2kc33impl_ac_declaration_AcDeclarationE:
	.asciz	"N2kc33impl_ac_declaration_AcDeclarationE"
	.size	_ZTSN2kc33impl_ac_declaration_AcDeclarationE, 41

	.type	_ZTIN2kc36impl_unparsedeclinfo_UnparsedeclinfoE,@object # @_ZTIN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
	.p2align	3, 0x0
_ZTIN2kc36impl_unparsedeclinfo_UnparsedeclinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
	.dword	_ZTIN2kc20impl_unparsedeclinfoE
	.size	_ZTIN2kc36impl_unparsedeclinfo_UnparsedeclinfoE, 24

	.type	_ZTSN2kc36impl_unparsedeclinfo_UnparsedeclinfoE,@object # @_ZTSN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
_ZTSN2kc36impl_unparsedeclinfo_UnparsedeclinfoE:
	.asciz	"N2kc36impl_unparsedeclinfo_UnparsedeclinfoE"
	.size	_ZTSN2kc36impl_unparsedeclinfo_UnparsedeclinfoE, 44

	.type	_ZTIN2kc36impl_unparseviewinfo_UnparseviewinfoE,@object # @_ZTIN2kc36impl_unparseviewinfo_UnparseviewinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc36impl_unparseviewinfo_UnparseviewinfoE
	.p2align	3, 0x0
_ZTIN2kc36impl_unparseviewinfo_UnparseviewinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc36impl_unparseviewinfo_UnparseviewinfoE
	.dword	_ZTIN2kc20impl_unparseviewinfoE
	.size	_ZTIN2kc36impl_unparseviewinfo_UnparseviewinfoE, 24

	.type	_ZTSN2kc36impl_unparseviewinfo_UnparseviewinfoE,@object # @_ZTSN2kc36impl_unparseviewinfo_UnparseviewinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc36impl_unparseviewinfo_UnparseviewinfoE
_ZTSN2kc36impl_unparseviewinfo_UnparseviewinfoE:
	.asciz	"N2kc36impl_unparseviewinfo_UnparseviewinfoE"
	.size	_ZTSN2kc36impl_unparseviewinfo_UnparseviewinfoE, 44

	.type	_ZTIN2kc36impl_rewriteviewinfo_RewriteviewinfoE,@object # @_ZTIN2kc36impl_rewriteviewinfo_RewriteviewinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc36impl_rewriteviewinfo_RewriteviewinfoE
	.p2align	3, 0x0
_ZTIN2kc36impl_rewriteviewinfo_RewriteviewinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc36impl_rewriteviewinfo_RewriteviewinfoE
	.dword	_ZTIN2kc20impl_rewriteviewinfoE
	.size	_ZTIN2kc36impl_rewriteviewinfo_RewriteviewinfoE, 24

	.type	_ZTSN2kc36impl_rewriteviewinfo_RewriteviewinfoE,@object # @_ZTSN2kc36impl_rewriteviewinfo_RewriteviewinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc36impl_rewriteviewinfo_RewriteviewinfoE
_ZTSN2kc36impl_rewriteviewinfo_RewriteviewinfoE:
	.asciz	"N2kc36impl_rewriteviewinfo_RewriteviewinfoE"
	.size	_ZTSN2kc36impl_rewriteviewinfo_RewriteviewinfoE, 44

	.type	_ZTIN2kc30impl_withcaseinfo_WithcaseinfoE,@object # @_ZTIN2kc30impl_withcaseinfo_WithcaseinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc30impl_withcaseinfo_WithcaseinfoE
	.p2align	3, 0x0
_ZTIN2kc30impl_withcaseinfo_WithcaseinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc30impl_withcaseinfo_WithcaseinfoE
	.dword	_ZTIN2kc17impl_withcaseinfoE
	.size	_ZTIN2kc30impl_withcaseinfo_WithcaseinfoE, 24

	.type	_ZTSN2kc30impl_withcaseinfo_WithcaseinfoE,@object # @_ZTSN2kc30impl_withcaseinfo_WithcaseinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc30impl_withcaseinfo_WithcaseinfoE
_ZTSN2kc30impl_withcaseinfo_WithcaseinfoE:
	.asciz	"N2kc30impl_withcaseinfo_WithcaseinfoE"
	.size	_ZTSN2kc30impl_withcaseinfo_WithcaseinfoE, 38

	.type	_ZTIN2kc36impl_rewriteruleinfo_RewriteruleinfoE,@object # @_ZTIN2kc36impl_rewriteruleinfo_RewriteruleinfoE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc36impl_rewriteruleinfo_RewriteruleinfoE
	.p2align	3, 0x0
_ZTIN2kc36impl_rewriteruleinfo_RewriteruleinfoE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc36impl_rewriteruleinfo_RewriteruleinfoE
	.dword	_ZTIN2kc20impl_rewriteruleinfoE
	.size	_ZTIN2kc36impl_rewriteruleinfo_RewriteruleinfoE, 24

	.type	_ZTSN2kc36impl_rewriteruleinfo_RewriteruleinfoE,@object # @_ZTSN2kc36impl_rewriteruleinfo_RewriteruleinfoE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc36impl_rewriteruleinfo_RewriteruleinfoE
_ZTSN2kc36impl_rewriteruleinfo_RewriteruleinfoE:
	.asciz	"N2kc36impl_rewriteruleinfo_RewriteruleinfoE"
	.size	_ZTSN2kc36impl_rewriteruleinfo_RewriteruleinfoE, 44

	.type	_ZTIN2kc44impl_elem_patternrepresentation_PRIntLiteralE,@object # @_ZTIN2kc44impl_elem_patternrepresentation_PRIntLiteralE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc44impl_elem_patternrepresentation_PRIntLiteralE
	.p2align	3, 0x0
_ZTIN2kc44impl_elem_patternrepresentation_PRIntLiteralE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc44impl_elem_patternrepresentation_PRIntLiteralE
	.dword	_ZTIN2kc31impl_elem_patternrepresentationE
	.size	_ZTIN2kc44impl_elem_patternrepresentation_PRIntLiteralE, 24

	.type	_ZTSN2kc44impl_elem_patternrepresentation_PRIntLiteralE,@object # @_ZTSN2kc44impl_elem_patternrepresentation_PRIntLiteralE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc44impl_elem_patternrepresentation_PRIntLiteralE
_ZTSN2kc44impl_elem_patternrepresentation_PRIntLiteralE:
	.asciz	"N2kc44impl_elem_patternrepresentation_PRIntLiteralE"
	.size	_ZTSN2kc44impl_elem_patternrepresentation_PRIntLiteralE, 52

	.type	_ZTIN2kc47impl_elem_patternrepresentation_PRStringLiteralE,@object # @_ZTIN2kc47impl_elem_patternrepresentation_PRStringLiteralE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc47impl_elem_patternrepresentation_PRStringLiteralE
	.p2align	3, 0x0
_ZTIN2kc47impl_elem_patternrepresentation_PRStringLiteralE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc47impl_elem_patternrepresentation_PRStringLiteralE
	.dword	_ZTIN2kc31impl_elem_patternrepresentationE
	.size	_ZTIN2kc47impl_elem_patternrepresentation_PRStringLiteralE, 24

	.type	_ZTSN2kc47impl_elem_patternrepresentation_PRStringLiteralE,@object # @_ZTSN2kc47impl_elem_patternrepresentation_PRStringLiteralE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc47impl_elem_patternrepresentation_PRStringLiteralE
_ZTSN2kc47impl_elem_patternrepresentation_PRStringLiteralE:
	.asciz	"N2kc47impl_elem_patternrepresentation_PRStringLiteralE"
	.size	_ZTSN2kc47impl_elem_patternrepresentation_PRStringLiteralE, 55

	.type	_ZTIN2kc42impl_elem_patternrepresentation_PRWildcardE,@object # @_ZTIN2kc42impl_elem_patternrepresentation_PRWildcardE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc42impl_elem_patternrepresentation_PRWildcardE
	.p2align	3, 0x0
_ZTIN2kc42impl_elem_patternrepresentation_PRWildcardE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc42impl_elem_patternrepresentation_PRWildcardE
	.dword	_ZTIN2kc31impl_elem_patternrepresentationE
	.size	_ZTIN2kc42impl_elem_patternrepresentation_PRWildcardE, 24

	.type	_ZTSN2kc42impl_elem_patternrepresentation_PRWildcardE,@object # @_ZTSN2kc42impl_elem_patternrepresentation_PRWildcardE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc42impl_elem_patternrepresentation_PRWildcardE
_ZTSN2kc42impl_elem_patternrepresentation_PRWildcardE:
	.asciz	"N2kc42impl_elem_patternrepresentation_PRWildcardE"
	.size	_ZTSN2kc42impl_elem_patternrepresentation_PRWildcardE, 50

	.type	_ZTIN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE,@object # @_ZTIN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
	.p2align	3, 0x0
_ZTIN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
	.dword	_ZTIN2kc31impl_elem_patternrepresentationE
	.size	_ZTIN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE, 24

	.type	_ZTSN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE,@object # @_ZTSN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
_ZTSN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE:
	.asciz	"N2kc48impl_elem_patternrepresentation_PRNonLeafBindingE"
	.size	_ZTSN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE, 56

	.type	_ZTIN2kc47impl_elem_patternrepresentation_PRUserPredicateE,@object # @_ZTIN2kc47impl_elem_patternrepresentation_PRUserPredicateE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc47impl_elem_patternrepresentation_PRUserPredicateE
	.p2align	3, 0x0
_ZTIN2kc47impl_elem_patternrepresentation_PRUserPredicateE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc47impl_elem_patternrepresentation_PRUserPredicateE
	.dword	_ZTIN2kc31impl_elem_patternrepresentationE
	.size	_ZTIN2kc47impl_elem_patternrepresentation_PRUserPredicateE, 24

	.type	_ZTSN2kc47impl_elem_patternrepresentation_PRUserPredicateE,@object # @_ZTSN2kc47impl_elem_patternrepresentation_PRUserPredicateE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc47impl_elem_patternrepresentation_PRUserPredicateE
_ZTSN2kc47impl_elem_patternrepresentation_PRUserPredicateE:
	.asciz	"N2kc47impl_elem_patternrepresentation_PRUserPredicateE"
	.size	_ZTSN2kc47impl_elem_patternrepresentation_PRUserPredicateE, 55

	.type	_ZTIN2kc47impl_elem_patternrepresentation_PROperPredicateE,@object # @_ZTIN2kc47impl_elem_patternrepresentation_PROperPredicateE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc47impl_elem_patternrepresentation_PROperPredicateE
	.p2align	3, 0x0
_ZTIN2kc47impl_elem_patternrepresentation_PROperPredicateE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc47impl_elem_patternrepresentation_PROperPredicateE
	.dword	_ZTIN2kc31impl_elem_patternrepresentationE
	.size	_ZTIN2kc47impl_elem_patternrepresentation_PROperPredicateE, 24

	.type	_ZTSN2kc47impl_elem_patternrepresentation_PROperPredicateE,@object # @_ZTSN2kc47impl_elem_patternrepresentation_PROperPredicateE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc47impl_elem_patternrepresentation_PROperPredicateE
_ZTSN2kc47impl_elem_patternrepresentation_PROperPredicateE:
	.asciz	"N2kc47impl_elem_patternrepresentation_PROperPredicateE"
	.size	_ZTSN2kc47impl_elem_patternrepresentation_PROperPredicateE, 55

	.type	_ZTIN2kc46impl_elem_patternrepresentation_PRVarPredicateE,@object # @_ZTIN2kc46impl_elem_patternrepresentation_PRVarPredicateE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc46impl_elem_patternrepresentation_PRVarPredicateE
	.p2align	3, 0x0
_ZTIN2kc46impl_elem_patternrepresentation_PRVarPredicateE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc46impl_elem_patternrepresentation_PRVarPredicateE
	.dword	_ZTIN2kc31impl_elem_patternrepresentationE
	.size	_ZTIN2kc46impl_elem_patternrepresentation_PRVarPredicateE, 24

	.type	_ZTSN2kc46impl_elem_patternrepresentation_PRVarPredicateE,@object # @_ZTSN2kc46impl_elem_patternrepresentation_PRVarPredicateE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc46impl_elem_patternrepresentation_PRVarPredicateE
_ZTSN2kc46impl_elem_patternrepresentation_PRVarPredicateE:
	.asciz	"N2kc46impl_elem_patternrepresentation_PRVarPredicateE"
	.size	_ZTSN2kc46impl_elem_patternrepresentation_PRVarPredicateE, 54

	.type	_ZTIN2kc41impl_elem_patternrepresentation_PRBindingE,@object # @_ZTIN2kc41impl_elem_patternrepresentation_PRBindingE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc41impl_elem_patternrepresentation_PRBindingE
	.p2align	3, 0x0
_ZTIN2kc41impl_elem_patternrepresentation_PRBindingE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc41impl_elem_patternrepresentation_PRBindingE
	.dword	_ZTIN2kc31impl_elem_patternrepresentationE
	.size	_ZTIN2kc41impl_elem_patternrepresentation_PRBindingE, 24

	.type	_ZTSN2kc41impl_elem_patternrepresentation_PRBindingE,@object # @_ZTSN2kc41impl_elem_patternrepresentation_PRBindingE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc41impl_elem_patternrepresentation_PRBindingE
_ZTSN2kc41impl_elem_patternrepresentation_PRBindingE:
	.asciz	"N2kc41impl_elem_patternrepresentation_PRBindingE"
	.size	_ZTSN2kc41impl_elem_patternrepresentation_PRBindingE, 49

	.type	_ZTIN2kc26impl_IDtype_ITLanguageNameE,@object # @_ZTIN2kc26impl_IDtype_ITLanguageNameE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc26impl_IDtype_ITLanguageNameE
	.p2align	3, 0x0
_ZTIN2kc26impl_IDtype_ITLanguageNameE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc26impl_IDtype_ITLanguageNameE
	.dword	_ZTIN2kc11impl_IDtypeE
	.size	_ZTIN2kc26impl_IDtype_ITLanguageNameE, 24

	.type	_ZTSN2kc26impl_IDtype_ITLanguageNameE,@object # @_ZTSN2kc26impl_IDtype_ITLanguageNameE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc26impl_IDtype_ITLanguageNameE
_ZTSN2kc26impl_IDtype_ITLanguageNameE:
	.asciz	"N2kc26impl_IDtype_ITLanguageNameE"
	.size	_ZTSN2kc26impl_IDtype_ITLanguageNameE, 34

	.type	_ZTIN2kc29impl_IDtype_ITPatternVariableE,@object # @_ZTIN2kc29impl_IDtype_ITPatternVariableE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc29impl_IDtype_ITPatternVariableE
	.p2align	3, 0x0
_ZTIN2kc29impl_IDtype_ITPatternVariableE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_IDtype_ITPatternVariableE
	.dword	_ZTIN2kc11impl_IDtypeE
	.size	_ZTIN2kc29impl_IDtype_ITPatternVariableE, 24

	.type	_ZTSN2kc29impl_IDtype_ITPatternVariableE,@object # @_ZTSN2kc29impl_IDtype_ITPatternVariableE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc29impl_IDtype_ITPatternVariableE
_ZTSN2kc29impl_IDtype_ITPatternVariableE:
	.asciz	"N2kc29impl_IDtype_ITPatternVariableE"
	.size	_ZTSN2kc29impl_IDtype_ITPatternVariableE, 37

	.type	_ZTIN2kc26impl_IDtype_ITUserFunctionE,@object # @_ZTIN2kc26impl_IDtype_ITUserFunctionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc26impl_IDtype_ITUserFunctionE
	.p2align	3, 0x0
_ZTIN2kc26impl_IDtype_ITUserFunctionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc26impl_IDtype_ITUserFunctionE
	.dword	_ZTIN2kc11impl_IDtypeE
	.size	_ZTIN2kc26impl_IDtype_ITUserFunctionE, 24

	.type	_ZTSN2kc26impl_IDtype_ITUserFunctionE,@object # @_ZTSN2kc26impl_IDtype_ITUserFunctionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc26impl_IDtype_ITUserFunctionE
_ZTSN2kc26impl_IDtype_ITUserFunctionE:
	.asciz	"N2kc26impl_IDtype_ITUserFunctionE"
	.size	_ZTSN2kc26impl_IDtype_ITUserFunctionE, 34

	.type	_ZTIN2kc26impl_IDtype_ITUserOperatorE,@object # @_ZTIN2kc26impl_IDtype_ITUserOperatorE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc26impl_IDtype_ITUserOperatorE
	.p2align	3, 0x0
_ZTIN2kc26impl_IDtype_ITUserOperatorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc26impl_IDtype_ITUserOperatorE
	.dword	_ZTIN2kc11impl_IDtypeE
	.size	_ZTIN2kc26impl_IDtype_ITUserOperatorE, 24

	.type	_ZTSN2kc26impl_IDtype_ITUserOperatorE,@object # @_ZTSN2kc26impl_IDtype_ITUserOperatorE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc26impl_IDtype_ITUserOperatorE
_ZTSN2kc26impl_IDtype_ITUserOperatorE:
	.asciz	"N2kc26impl_IDtype_ITUserOperatorE"
	.size	_ZTSN2kc26impl_IDtype_ITUserOperatorE, 34

	.type	_ZTIN2kc32impl_IDtype_ITPredefinedOperatorE,@object # @_ZTIN2kc32impl_IDtype_ITPredefinedOperatorE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc32impl_IDtype_ITPredefinedOperatorE
	.p2align	3, 0x0
_ZTIN2kc32impl_IDtype_ITPredefinedOperatorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_IDtype_ITPredefinedOperatorE
	.dword	_ZTIN2kc11impl_IDtypeE
	.size	_ZTIN2kc32impl_IDtype_ITPredefinedOperatorE, 24

	.type	_ZTSN2kc32impl_IDtype_ITPredefinedOperatorE,@object # @_ZTSN2kc32impl_IDtype_ITPredefinedOperatorE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_IDtype_ITPredefinedOperatorE
_ZTSN2kc32impl_IDtype_ITPredefinedOperatorE:
	.asciz	"N2kc32impl_IDtype_ITPredefinedOperatorE"
	.size	_ZTSN2kc32impl_IDtype_ITPredefinedOperatorE, 40

	.type	_ZTIN2kc24impl_IDtype_ITUserPhylumE,@object # @_ZTIN2kc24impl_IDtype_ITUserPhylumE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_IDtype_ITUserPhylumE
	.p2align	3, 0x0
_ZTIN2kc24impl_IDtype_ITUserPhylumE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_IDtype_ITUserPhylumE
	.dword	_ZTIN2kc11impl_IDtypeE
	.size	_ZTIN2kc24impl_IDtype_ITUserPhylumE, 24

	.type	_ZTSN2kc24impl_IDtype_ITUserPhylumE,@object # @_ZTSN2kc24impl_IDtype_ITUserPhylumE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_IDtype_ITUserPhylumE
_ZTSN2kc24impl_IDtype_ITUserPhylumE:
	.asciz	"N2kc24impl_IDtype_ITUserPhylumE"
	.size	_ZTSN2kc24impl_IDtype_ITUserPhylumE, 32

	.type	_ZTIN2kc30impl_IDtype_ITPredefinedPhylumE,@object # @_ZTIN2kc30impl_IDtype_ITPredefinedPhylumE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc30impl_IDtype_ITPredefinedPhylumE
	.p2align	3, 0x0
_ZTIN2kc30impl_IDtype_ITPredefinedPhylumE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc30impl_IDtype_ITPredefinedPhylumE
	.dword	_ZTIN2kc11impl_IDtypeE
	.size	_ZTIN2kc30impl_IDtype_ITPredefinedPhylumE, 24

	.type	_ZTSN2kc30impl_IDtype_ITPredefinedPhylumE,@object # @_ZTSN2kc30impl_IDtype_ITPredefinedPhylumE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc30impl_IDtype_ITPredefinedPhylumE
_ZTSN2kc30impl_IDtype_ITPredefinedPhylumE:
	.asciz	"N2kc30impl_IDtype_ITPredefinedPhylumE"
	.size	_ZTSN2kc30impl_IDtype_ITPredefinedPhylumE, 38

	.type	_ZTIN2kc40impl_scopetypefileline_ScopeTypeFileLineE,@object # @_ZTIN2kc40impl_scopetypefileline_ScopeTypeFileLineE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc40impl_scopetypefileline_ScopeTypeFileLineE
	.p2align	3, 0x0
_ZTIN2kc40impl_scopetypefileline_ScopeTypeFileLineE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc40impl_scopetypefileline_ScopeTypeFileLineE
	.dword	_ZTIN2kc22impl_scopetypefilelineE
	.size	_ZTIN2kc40impl_scopetypefileline_ScopeTypeFileLineE, 24

	.type	_ZTSN2kc40impl_scopetypefileline_ScopeTypeFileLineE,@object # @_ZTSN2kc40impl_scopetypefileline_ScopeTypeFileLineE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc40impl_scopetypefileline_ScopeTypeFileLineE
_ZTSN2kc40impl_scopetypefileline_ScopeTypeFileLineE:
	.asciz	"N2kc40impl_scopetypefileline_ScopeTypeFileLineE"
	.size	_ZTSN2kc40impl_scopetypefileline_ScopeTypeFileLineE, 48

	.type	_ZTIN2kc32impl_languageoption_LanguageListE,@object # @_ZTIN2kc32impl_languageoption_LanguageListE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc32impl_languageoption_LanguageListE
	.p2align	3, 0x0
_ZTIN2kc32impl_languageoption_LanguageListE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_languageoption_LanguageListE
	.dword	_ZTIN2kc19impl_languageoptionE
	.size	_ZTIN2kc32impl_languageoption_LanguageListE, 24

	.type	_ZTSN2kc32impl_languageoption_LanguageListE,@object # @_ZTSN2kc32impl_languageoption_LanguageListE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_languageoption_LanguageListE
_ZTSN2kc32impl_languageoption_LanguageListE:
	.asciz	"N2kc32impl_languageoption_LanguageListE"
	.size	_ZTSN2kc32impl_languageoption_LanguageListE, 40

	.type	_ZTIN2kc31impl_viewnameoption_YesViewnameE,@object # @_ZTIN2kc31impl_viewnameoption_YesViewnameE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc31impl_viewnameoption_YesViewnameE
	.p2align	3, 0x0
_ZTIN2kc31impl_viewnameoption_YesViewnameE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc31impl_viewnameoption_YesViewnameE
	.dword	_ZTIN2kc19impl_viewnameoptionE
	.size	_ZTIN2kc31impl_viewnameoption_YesViewnameE, 24

	.type	_ZTSN2kc31impl_viewnameoption_YesViewnameE,@object # @_ZTSN2kc31impl_viewnameoption_YesViewnameE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc31impl_viewnameoption_YesViewnameE
_ZTSN2kc31impl_viewnameoption_YesViewnameE:
	.asciz	"N2kc31impl_viewnameoption_YesViewnameE"
	.size	_ZTSN2kc31impl_viewnameoption_YesViewnameE, 39

	.type	_ZTIN2kc33impl_unpsubterm_UnpCastedVariableE,@object # @_ZTIN2kc33impl_unpsubterm_UnpCastedVariableE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc33impl_unpsubterm_UnpCastedVariableE
	.p2align	3, 0x0
_ZTIN2kc33impl_unpsubterm_UnpCastedVariableE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc33impl_unpsubterm_UnpCastedVariableE
	.dword	_ZTIN2kc15impl_unpsubtermE
	.size	_ZTIN2kc33impl_unpsubterm_UnpCastedVariableE, 24

	.type	_ZTSN2kc33impl_unpsubterm_UnpCastedVariableE,@object # @_ZTSN2kc33impl_unpsubterm_UnpCastedVariableE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc33impl_unpsubterm_UnpCastedVariableE
_ZTSN2kc33impl_unpsubterm_UnpCastedVariableE:
	.asciz	"N2kc33impl_unpsubterm_UnpCastedVariableE"
	.size	_ZTSN2kc33impl_unpsubterm_UnpCastedVariableE, 41

	.type	_ZTIN2kc32impl_unpsubterm_UnpDollarvarAttrE,@object # @_ZTIN2kc32impl_unpsubterm_UnpDollarvarAttrE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc32impl_unpsubterm_UnpDollarvarAttrE
	.p2align	3, 0x0
_ZTIN2kc32impl_unpsubterm_UnpDollarvarAttrE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_unpsubterm_UnpDollarvarAttrE
	.dword	_ZTIN2kc15impl_unpsubtermE
	.size	_ZTIN2kc32impl_unpsubterm_UnpDollarvarAttrE, 24

	.type	_ZTSN2kc32impl_unpsubterm_UnpDollarvarAttrE,@object # @_ZTSN2kc32impl_unpsubterm_UnpDollarvarAttrE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_unpsubterm_UnpDollarvarAttrE
_ZTSN2kc32impl_unpsubterm_UnpDollarvarAttrE:
	.asciz	"N2kc32impl_unpsubterm_UnpDollarvarAttrE"
	.size	_ZTSN2kc32impl_unpsubterm_UnpDollarvarAttrE, 40

	.type	_ZTIN2kc26impl_unpsubterm_UnpSubAttrE,@object # @_ZTIN2kc26impl_unpsubterm_UnpSubAttrE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc26impl_unpsubterm_UnpSubAttrE
	.p2align	3, 0x0
_ZTIN2kc26impl_unpsubterm_UnpSubAttrE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc26impl_unpsubterm_UnpSubAttrE
	.dword	_ZTIN2kc15impl_unpsubtermE
	.size	_ZTIN2kc26impl_unpsubterm_UnpSubAttrE, 24

	.type	_ZTSN2kc26impl_unpsubterm_UnpSubAttrE,@object # @_ZTSN2kc26impl_unpsubterm_UnpSubAttrE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc26impl_unpsubterm_UnpSubAttrE
_ZTSN2kc26impl_unpsubterm_UnpSubAttrE:
	.asciz	"N2kc26impl_unpsubterm_UnpSubAttrE"
	.size	_ZTSN2kc26impl_unpsubterm_UnpSubAttrE, 34

	.type	_ZTIN2kc32impl_unpsubterm_UnpDollarvarTermE,@object # @_ZTIN2kc32impl_unpsubterm_UnpDollarvarTermE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc32impl_unpsubterm_UnpDollarvarTermE
	.p2align	3, 0x0
_ZTIN2kc32impl_unpsubterm_UnpDollarvarTermE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_unpsubterm_UnpDollarvarTermE
	.dword	_ZTIN2kc15impl_unpsubtermE
	.size	_ZTIN2kc32impl_unpsubterm_UnpDollarvarTermE, 24

	.type	_ZTSN2kc32impl_unpsubterm_UnpDollarvarTermE,@object # @_ZTSN2kc32impl_unpsubterm_UnpDollarvarTermE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_unpsubterm_UnpDollarvarTermE
_ZTSN2kc32impl_unpsubterm_UnpDollarvarTermE:
	.asciz	"N2kc32impl_unpsubterm_UnpDollarvarTermE"
	.size	_ZTSN2kc32impl_unpsubterm_UnpDollarvarTermE, 40

	.type	_ZTIN2kc26impl_unpsubterm_UnpSubTermE,@object # @_ZTIN2kc26impl_unpsubterm_UnpSubTermE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc26impl_unpsubterm_UnpSubTermE
	.p2align	3, 0x0
_ZTIN2kc26impl_unpsubterm_UnpSubTermE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc26impl_unpsubterm_UnpSubTermE
	.dword	_ZTIN2kc15impl_unpsubtermE
	.size	_ZTIN2kc26impl_unpsubterm_UnpSubTermE, 24

	.type	_ZTSN2kc26impl_unpsubterm_UnpSubTermE,@object # @_ZTSN2kc26impl_unpsubterm_UnpSubTermE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc26impl_unpsubterm_UnpSubTermE
_ZTSN2kc26impl_unpsubterm_UnpSubTermE:
	.asciz	"N2kc26impl_unpsubterm_UnpSubTermE"
	.size	_ZTSN2kc26impl_unpsubterm_UnpSubTermE, 34

	.type	_ZTIN2kc29impl_unparseitem_UViewVarDeclE,@object # @_ZTIN2kc29impl_unparseitem_UViewVarDeclE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc29impl_unparseitem_UViewVarDeclE
	.p2align	3, 0x0
_ZTIN2kc29impl_unparseitem_UViewVarDeclE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_unparseitem_UViewVarDeclE
	.dword	_ZTIN2kc16impl_unparseitemE
	.size	_ZTIN2kc29impl_unparseitem_UViewVarDeclE, 24

	.type	_ZTSN2kc29impl_unparseitem_UViewVarDeclE,@object # @_ZTSN2kc29impl_unparseitem_UViewVarDeclE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc29impl_unparseitem_UViewVarDeclE
_ZTSN2kc29impl_unparseitem_UViewVarDeclE:
	.asciz	"N2kc29impl_unparseitem_UViewVarDeclE"
	.size	_ZTSN2kc29impl_unparseitem_UViewVarDeclE, 37

	.type	_ZTIN2kc24impl_unparseitem_UnpBodyE,@object # @_ZTIN2kc24impl_unparseitem_UnpBodyE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_unparseitem_UnpBodyE
	.p2align	3, 0x0
_ZTIN2kc24impl_unparseitem_UnpBodyE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_unparseitem_UnpBodyE
	.dword	_ZTIN2kc16impl_unparseitemE
	.size	_ZTIN2kc24impl_unparseitem_UnpBodyE, 24

	.type	_ZTSN2kc24impl_unparseitem_UnpBodyE,@object # @_ZTSN2kc24impl_unparseitem_UnpBodyE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_unparseitem_UnpBodyE
_ZTSN2kc24impl_unparseitem_UnpBodyE:
	.asciz	"N2kc24impl_unparseitem_UnpBodyE"
	.size	_ZTSN2kc24impl_unparseitem_UnpBodyE, 32

	.type	_ZTIN2kc25impl_unparseitem_UnpCtextE,@object # @_ZTIN2kc25impl_unparseitem_UnpCtextE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc25impl_unparseitem_UnpCtextE
	.p2align	3, 0x0
_ZTIN2kc25impl_unparseitem_UnpCtextE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc25impl_unparseitem_UnpCtextE
	.dword	_ZTIN2kc16impl_unparseitemE
	.size	_ZTIN2kc25impl_unparseitem_UnpCtextE, 24

	.type	_ZTSN2kc25impl_unparseitem_UnpCtextE,@object # @_ZTSN2kc25impl_unparseitem_UnpCtextE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc25impl_unparseitem_UnpCtextE
_ZTSN2kc25impl_unparseitem_UnpCtextE:
	.asciz	"N2kc25impl_unparseitem_UnpCtextE"
	.size	_ZTSN2kc25impl_unparseitem_UnpCtextE, 33

	.type	_ZTIN2kc27impl_unparseitem_UnpSubexprE,@object # @_ZTIN2kc27impl_unparseitem_UnpSubexprE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc27impl_unparseitem_UnpSubexprE
	.p2align	3, 0x0
_ZTIN2kc27impl_unparseitem_UnpSubexprE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_unparseitem_UnpSubexprE
	.dword	_ZTIN2kc16impl_unparseitemE
	.size	_ZTIN2kc27impl_unparseitem_UnpSubexprE, 24

	.type	_ZTSN2kc27impl_unparseitem_UnpSubexprE,@object # @_ZTSN2kc27impl_unparseitem_UnpSubexprE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc27impl_unparseitem_UnpSubexprE
_ZTSN2kc27impl_unparseitem_UnpSubexprE:
	.asciz	"N2kc27impl_unparseitem_UnpSubexprE"
	.size	_ZTSN2kc27impl_unparseitem_UnpSubexprE, 35

	.type	_ZTIN2kc23impl_unparseitem_UnpStrE,@object # @_ZTIN2kc23impl_unparseitem_UnpStrE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc23impl_unparseitem_UnpStrE
	.p2align	3, 0x0
_ZTIN2kc23impl_unparseitem_UnpStrE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_unparseitem_UnpStrE
	.dword	_ZTIN2kc16impl_unparseitemE
	.size	_ZTIN2kc23impl_unparseitem_UnpStrE, 24

	.type	_ZTSN2kc23impl_unparseitem_UnpStrE,@object # @_ZTSN2kc23impl_unparseitem_UnpStrE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc23impl_unparseitem_UnpStrE
_ZTSN2kc23impl_unparseitem_UnpStrE:
	.asciz	"N2kc23impl_unparseitem_UnpStrE"
	.size	_ZTSN2kc23impl_unparseitem_UnpStrE, 31

	.type	_ZTIN2kc32impl_unparseclause_UnparseClauseE,@object # @_ZTIN2kc32impl_unparseclause_UnparseClauseE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc32impl_unparseclause_UnparseClauseE
	.p2align	3, 0x0
_ZTIN2kc32impl_unparseclause_UnparseClauseE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_unparseclause_UnparseClauseE
	.dword	_ZTIN2kc18impl_unparseclauseE
	.size	_ZTIN2kc32impl_unparseclause_UnparseClauseE, 24

	.type	_ZTSN2kc32impl_unparseclause_UnparseClauseE,@object # @_ZTSN2kc32impl_unparseclause_UnparseClauseE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_unparseclause_UnparseClauseE
_ZTSN2kc32impl_unparseclause_UnparseClauseE:
	.asciz	"N2kc32impl_unparseclause_UnparseClauseE"
	.size	_ZTSN2kc32impl_unparseclause_UnparseClauseE, 40

	.type	_ZTIN2kc42impl_unparsedeclaration_UnparseDeclarationE,@object # @_ZTIN2kc42impl_unparsedeclaration_UnparseDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc42impl_unparsedeclaration_UnparseDeclarationE
	.p2align	3, 0x0
_ZTIN2kc42impl_unparsedeclaration_UnparseDeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc42impl_unparsedeclaration_UnparseDeclarationE
	.dword	_ZTIN2kc23impl_unparsedeclarationE
	.size	_ZTIN2kc42impl_unparsedeclaration_UnparseDeclarationE, 24

	.type	_ZTSN2kc42impl_unparsedeclaration_UnparseDeclarationE,@object # @_ZTSN2kc42impl_unparsedeclaration_UnparseDeclarationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc42impl_unparsedeclaration_UnparseDeclarationE
_ZTSN2kc42impl_unparsedeclaration_UnparseDeclarationE:
	.asciz	"N2kc42impl_unparsedeclaration_UnparseDeclarationE"
	.size	_ZTSN2kc42impl_unparsedeclaration_UnparseDeclarationE, 50

	.type	_ZTIN2kc22impl_withcase_WithcaseE,@object # @_ZTIN2kc22impl_withcase_WithcaseE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc22impl_withcase_WithcaseE
	.p2align	3, 0x0
_ZTIN2kc22impl_withcase_WithcaseE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_withcase_WithcaseE
	.dword	_ZTIN2kc13impl_withcaseE
	.size	_ZTIN2kc22impl_withcase_WithcaseE, 24

	.type	_ZTSN2kc22impl_withcase_WithcaseE,@object # @_ZTSN2kc22impl_withcase_WithcaseE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc22impl_withcase_WithcaseE
_ZTSN2kc22impl_withcase_WithcaseE:
	.asciz	"N2kc22impl_withcase_WithcaseE"
	.size	_ZTSN2kc22impl_withcase_WithcaseE, 30

	.type	_ZTIN2kc33impl_withexpression_WECexpressionE,@object # @_ZTIN2kc33impl_withexpression_WECexpressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc33impl_withexpression_WECexpressionE
	.p2align	3, 0x0
_ZTIN2kc33impl_withexpression_WECexpressionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc33impl_withexpression_WECexpressionE
	.dword	_ZTIN2kc19impl_withexpressionE
	.size	_ZTIN2kc33impl_withexpression_WECexpressionE, 24

	.type	_ZTSN2kc33impl_withexpression_WECexpressionE,@object # @_ZTSN2kc33impl_withexpression_WECexpressionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc33impl_withexpression_WECexpressionE
_ZTSN2kc33impl_withexpression_WECexpressionE:
	.asciz	"N2kc33impl_withexpression_WECexpressionE"
	.size	_ZTSN2kc33impl_withexpression_WECexpressionE, 41

	.type	_ZTIN2kc30impl_withexpression_WEVariableE,@object # @_ZTIN2kc30impl_withexpression_WEVariableE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc30impl_withexpression_WEVariableE
	.p2align	3, 0x0
_ZTIN2kc30impl_withexpression_WEVariableE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc30impl_withexpression_WEVariableE
	.dword	_ZTIN2kc19impl_withexpressionE
	.size	_ZTIN2kc30impl_withexpression_WEVariableE, 24

	.type	_ZTSN2kc30impl_withexpression_WEVariableE,@object # @_ZTSN2kc30impl_withexpression_WEVariableE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc30impl_withexpression_WEVariableE
_ZTSN2kc30impl_withexpression_WEVariableE:
	.asciz	"N2kc30impl_withexpression_WEVariableE"
	.size	_ZTSN2kc30impl_withexpression_WEVariableE, 38

	.type	_ZTIN2kc33impl_contextinfo_InForeachContextE,@object # @_ZTIN2kc33impl_contextinfo_InForeachContextE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc33impl_contextinfo_InForeachContextE
	.p2align	3, 0x0
_ZTIN2kc33impl_contextinfo_InForeachContextE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc33impl_contextinfo_InForeachContextE
	.dword	_ZTIN2kc16impl_contextinfoE
	.size	_ZTIN2kc33impl_contextinfo_InForeachContextE, 24

	.type	_ZTSN2kc33impl_contextinfo_InForeachContextE,@object # @_ZTSN2kc33impl_contextinfo_InForeachContextE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc33impl_contextinfo_InForeachContextE
_ZTSN2kc33impl_contextinfo_InForeachContextE:
	.asciz	"N2kc33impl_contextinfo_InForeachContextE"
	.size	_ZTSN2kc33impl_contextinfo_InForeachContextE, 41

	.type	_ZTIN2kc31impl_foreach_after_ForeachAfterE,@object # @_ZTIN2kc31impl_foreach_after_ForeachAfterE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc31impl_foreach_after_ForeachAfterE
	.p2align	3, 0x0
_ZTIN2kc31impl_foreach_after_ForeachAfterE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc31impl_foreach_after_ForeachAfterE
	.dword	_ZTIN2kc18impl_foreach_afterE
	.size	_ZTIN2kc31impl_foreach_after_ForeachAfterE, 24

	.type	_ZTSN2kc31impl_foreach_after_ForeachAfterE,@object # @_ZTSN2kc31impl_foreach_after_ForeachAfterE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc31impl_foreach_after_ForeachAfterE
_ZTSN2kc31impl_foreach_after_ForeachAfterE:
	.asciz	"N2kc31impl_foreach_after_ForeachAfterE"
	.size	_ZTSN2kc31impl_foreach_after_ForeachAfterE, 39

	.type	_ZTIN2kc35impl_Ctext_elem_CTextWithexpressionE,@object # @_ZTIN2kc35impl_Ctext_elem_CTextWithexpressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc35impl_Ctext_elem_CTextWithexpressionE
	.p2align	3, 0x0
_ZTIN2kc35impl_Ctext_elem_CTextWithexpressionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc35impl_Ctext_elem_CTextWithexpressionE
	.dword	_ZTIN2kc15impl_Ctext_elemE
	.size	_ZTIN2kc35impl_Ctext_elem_CTextWithexpressionE, 24

	.type	_ZTSN2kc35impl_Ctext_elem_CTextWithexpressionE,@object # @_ZTSN2kc35impl_Ctext_elem_CTextWithexpressionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc35impl_Ctext_elem_CTextWithexpressionE
_ZTSN2kc35impl_Ctext_elem_CTextWithexpressionE:
	.asciz	"N2kc35impl_Ctext_elem_CTextWithexpressionE"
	.size	_ZTSN2kc35impl_Ctext_elem_CTextWithexpressionE, 43

	.type	_ZTIN2kc38impl_Ctext_elem_CTextForeachexpressionE,@object # @_ZTIN2kc38impl_Ctext_elem_CTextForeachexpressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc38impl_Ctext_elem_CTextForeachexpressionE
	.p2align	3, 0x0
_ZTIN2kc38impl_Ctext_elem_CTextForeachexpressionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc38impl_Ctext_elem_CTextForeachexpressionE
	.dword	_ZTIN2kc15impl_Ctext_elemE
	.size	_ZTIN2kc38impl_Ctext_elem_CTextForeachexpressionE, 24

	.type	_ZTSN2kc38impl_Ctext_elem_CTextForeachexpressionE,@object # @_ZTSN2kc38impl_Ctext_elem_CTextForeachexpressionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc38impl_Ctext_elem_CTextForeachexpressionE
_ZTSN2kc38impl_Ctext_elem_CTextForeachexpressionE:
	.asciz	"N2kc38impl_Ctext_elem_CTextForeachexpressionE"
	.size	_ZTSN2kc38impl_Ctext_elem_CTextForeachexpressionE, 46

	.type	_ZTIN2kc26impl_Ctext_elem_CTextCbodyE,@object # @_ZTIN2kc26impl_Ctext_elem_CTextCbodyE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc26impl_Ctext_elem_CTextCbodyE
	.p2align	3, 0x0
_ZTIN2kc26impl_Ctext_elem_CTextCbodyE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc26impl_Ctext_elem_CTextCbodyE
	.dword	_ZTIN2kc15impl_Ctext_elemE
	.size	_ZTIN2kc26impl_Ctext_elem_CTextCbodyE, 24

	.type	_ZTSN2kc26impl_Ctext_elem_CTextCbodyE,@object # @_ZTSN2kc26impl_Ctext_elem_CTextCbodyE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc26impl_Ctext_elem_CTextCbodyE
_ZTSN2kc26impl_Ctext_elem_CTextCbodyE:
	.asciz	"N2kc26impl_Ctext_elem_CTextCbodyE"
	.size	_ZTSN2kc26impl_Ctext_elem_CTextCbodyE, 34

	.type	_ZTIN2kc34impl_Ctext_elem_CTextCexpressionSQE,@object # @_ZTIN2kc34impl_Ctext_elem_CTextCexpressionSQE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc34impl_Ctext_elem_CTextCexpressionSQE
	.p2align	3, 0x0
_ZTIN2kc34impl_Ctext_elem_CTextCexpressionSQE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc34impl_Ctext_elem_CTextCexpressionSQE
	.dword	_ZTIN2kc15impl_Ctext_elemE
	.size	_ZTIN2kc34impl_Ctext_elem_CTextCexpressionSQE, 24

	.type	_ZTSN2kc34impl_Ctext_elem_CTextCexpressionSQE,@object # @_ZTSN2kc34impl_Ctext_elem_CTextCexpressionSQE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc34impl_Ctext_elem_CTextCexpressionSQE
_ZTSN2kc34impl_Ctext_elem_CTextCexpressionSQE:
	.asciz	"N2kc34impl_Ctext_elem_CTextCexpressionSQE"
	.size	_ZTSN2kc34impl_Ctext_elem_CTextCexpressionSQE, 42

	.type	_ZTIN2kc34impl_Ctext_elem_CTextCexpressionDQE,@object # @_ZTIN2kc34impl_Ctext_elem_CTextCexpressionDQE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc34impl_Ctext_elem_CTextCexpressionDQE
	.p2align	3, 0x0
_ZTIN2kc34impl_Ctext_elem_CTextCexpressionDQE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc34impl_Ctext_elem_CTextCexpressionDQE
	.dword	_ZTIN2kc15impl_Ctext_elemE
	.size	_ZTIN2kc34impl_Ctext_elem_CTextCexpressionDQE, 24

	.type	_ZTSN2kc34impl_Ctext_elem_CTextCexpressionDQE,@object # @_ZTSN2kc34impl_Ctext_elem_CTextCexpressionDQE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc34impl_Ctext_elem_CTextCexpressionDQE
_ZTSN2kc34impl_Ctext_elem_CTextCexpressionDQE:
	.asciz	"N2kc34impl_Ctext_elem_CTextCexpressionDQE"
	.size	_ZTSN2kc34impl_Ctext_elem_CTextCexpressionDQE, 42

	.type	_ZTIN2kc23impl_Ctext_elem_CTextNlE,@object # @_ZTIN2kc23impl_Ctext_elem_CTextNlE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc23impl_Ctext_elem_CTextNlE
	.p2align	3, 0x0
_ZTIN2kc23impl_Ctext_elem_CTextNlE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_Ctext_elem_CTextNlE
	.dword	_ZTIN2kc15impl_Ctext_elemE
	.size	_ZTIN2kc23impl_Ctext_elem_CTextNlE, 24

	.type	_ZTSN2kc23impl_Ctext_elem_CTextNlE,@object # @_ZTSN2kc23impl_Ctext_elem_CTextNlE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc23impl_Ctext_elem_CTextNlE
_ZTSN2kc23impl_Ctext_elem_CTextNlE:
	.asciz	"N2kc23impl_Ctext_elem_CTextNlE"
	.size	_ZTSN2kc23impl_Ctext_elem_CTextNlE, 31

	.type	_ZTIN2kc30impl_Ctext_elem_CTextDollarVarE,@object # @_ZTIN2kc30impl_Ctext_elem_CTextDollarVarE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc30impl_Ctext_elem_CTextDollarVarE
	.p2align	3, 0x0
_ZTIN2kc30impl_Ctext_elem_CTextDollarVarE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc30impl_Ctext_elem_CTextDollarVarE
	.dword	_ZTIN2kc15impl_Ctext_elemE
	.size	_ZTIN2kc30impl_Ctext_elem_CTextDollarVarE, 24

	.type	_ZTSN2kc30impl_Ctext_elem_CTextDollarVarE,@object # @_ZTSN2kc30impl_Ctext_elem_CTextDollarVarE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc30impl_Ctext_elem_CTextDollarVarE
_ZTSN2kc30impl_Ctext_elem_CTextDollarVarE:
	.asciz	"N2kc30impl_Ctext_elem_CTextDollarVarE"
	.size	_ZTSN2kc30impl_Ctext_elem_CTextDollarVarE, 38

	.type	_ZTIN2kc25impl_Ctext_elem_CTextLineE,@object # @_ZTIN2kc25impl_Ctext_elem_CTextLineE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc25impl_Ctext_elem_CTextLineE
	.p2align	3, 0x0
_ZTIN2kc25impl_Ctext_elem_CTextLineE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc25impl_Ctext_elem_CTextLineE
	.dword	_ZTIN2kc15impl_Ctext_elemE
	.size	_ZTIN2kc25impl_Ctext_elem_CTextLineE, 24

	.type	_ZTSN2kc25impl_Ctext_elem_CTextLineE,@object # @_ZTSN2kc25impl_Ctext_elem_CTextLineE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc25impl_Ctext_elem_CTextLineE
_ZTSN2kc25impl_Ctext_elem_CTextLineE:
	.asciz	"N2kc25impl_Ctext_elem_CTextLineE"
	.size	_ZTSN2kc25impl_Ctext_elem_CTextLineE, 33

	.type	_ZTIN2kc21impl_fnclass_StaticFnE,@object # @_ZTIN2kc21impl_fnclass_StaticFnE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_fnclass_StaticFnE
	.p2align	3, 0x0
_ZTIN2kc21impl_fnclass_StaticFnE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_fnclass_StaticFnE
	.dword	_ZTIN2kc12impl_fnclassE
	.size	_ZTIN2kc21impl_fnclass_StaticFnE, 24

	.type	_ZTSN2kc21impl_fnclass_StaticFnE,@object # @_ZTSN2kc21impl_fnclass_StaticFnE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_fnclass_StaticFnE
_ZTSN2kc21impl_fnclass_StaticFnE:
	.asciz	"N2kc21impl_fnclass_StaticFnE"
	.size	_ZTSN2kc21impl_fnclass_StaticFnE, 29

	.type	_ZTIN2kc38impl_fndeclaration_AcMemberDeclarationE,@object # @_ZTIN2kc38impl_fndeclaration_AcMemberDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc38impl_fndeclaration_AcMemberDeclarationE
	.p2align	3, 0x0
_ZTIN2kc38impl_fndeclaration_AcMemberDeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc38impl_fndeclaration_AcMemberDeclarationE
	.dword	_ZTIN2kc18impl_fndeclarationE
	.size	_ZTIN2kc38impl_fndeclaration_AcMemberDeclarationE, 24

	.type	_ZTSN2kc38impl_fndeclaration_AcMemberDeclarationE,@object # @_ZTSN2kc38impl_fndeclaration_AcMemberDeclarationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc38impl_fndeclaration_AcMemberDeclarationE
_ZTSN2kc38impl_fndeclaration_AcMemberDeclarationE:
	.asciz	"N2kc38impl_fndeclaration_AcMemberDeclarationE"
	.size	_ZTSN2kc38impl_fndeclaration_AcMemberDeclarationE, 46

	.type	_ZTIN2kc34impl_fndeclaration_FnAcDeclarationE,@object # @_ZTIN2kc34impl_fndeclaration_FnAcDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc34impl_fndeclaration_FnAcDeclarationE
	.p2align	3, 0x0
_ZTIN2kc34impl_fndeclaration_FnAcDeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc34impl_fndeclaration_FnAcDeclarationE
	.dword	_ZTIN2kc18impl_fndeclarationE
	.size	_ZTIN2kc34impl_fndeclaration_FnAcDeclarationE, 24

	.type	_ZTSN2kc34impl_fndeclaration_FnAcDeclarationE,@object # @_ZTSN2kc34impl_fndeclaration_FnAcDeclarationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc34impl_fndeclaration_FnAcDeclarationE
_ZTSN2kc34impl_fndeclaration_FnAcDeclarationE:
	.asciz	"N2kc34impl_fndeclaration_FnAcDeclarationE"
	.size	_ZTSN2kc34impl_fndeclaration_FnAcDeclarationE, 42

	.type	_ZTIN2kc18impl_fnfile_FnFileE,@object # @_ZTIN2kc18impl_fnfile_FnFileE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc18impl_fnfile_FnFileE
	.p2align	3, 0x0
_ZTIN2kc18impl_fnfile_FnFileE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_fnfile_FnFileE
	.dword	_ZTIN2kc11impl_fnfileE
	.size	_ZTIN2kc18impl_fnfile_FnFileE, 24

	.type	_ZTSN2kc18impl_fnfile_FnFileE,@object # @_ZTSN2kc18impl_fnfile_FnFileE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc18impl_fnfile_FnFileE
_ZTSN2kc18impl_fnfile_FnFileE:
	.asciz	"N2kc18impl_fnfile_FnFileE"
	.size	_ZTSN2kc18impl_fnfile_FnFileE, 26

	.type	_ZTIN2kc21impl_term_TIntLiteralE,@object # @_ZTIN2kc21impl_term_TIntLiteralE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc21impl_term_TIntLiteralE
	.p2align	3, 0x0
_ZTIN2kc21impl_term_TIntLiteralE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_term_TIntLiteralE
	.dword	_ZTIN2kc9impl_termE
	.size	_ZTIN2kc21impl_term_TIntLiteralE, 24

	.type	_ZTSN2kc21impl_term_TIntLiteralE,@object # @_ZTSN2kc21impl_term_TIntLiteralE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_term_TIntLiteralE
_ZTSN2kc21impl_term_TIntLiteralE:
	.asciz	"N2kc21impl_term_TIntLiteralE"
	.size	_ZTSN2kc21impl_term_TIntLiteralE, 29

	.type	_ZTIN2kc24impl_term_TStringLiteralE,@object # @_ZTIN2kc24impl_term_TStringLiteralE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_term_TStringLiteralE
	.p2align	3, 0x0
_ZTIN2kc24impl_term_TStringLiteralE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_term_TStringLiteralE
	.dword	_ZTIN2kc9impl_termE
	.size	_ZTIN2kc24impl_term_TStringLiteralE, 24

	.type	_ZTSN2kc24impl_term_TStringLiteralE,@object # @_ZTSN2kc24impl_term_TStringLiteralE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_term_TStringLiteralE
_ZTSN2kc24impl_term_TStringLiteralE:
	.asciz	"N2kc24impl_term_TStringLiteralE"
	.size	_ZTSN2kc24impl_term_TStringLiteralE, 32

	.type	_ZTIN2kc16impl_term_TCTermE,@object # @_ZTIN2kc16impl_term_TCTermE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc16impl_term_TCTermE
	.p2align	3, 0x0
_ZTIN2kc16impl_term_TCTermE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc16impl_term_TCTermE
	.dword	_ZTIN2kc9impl_termE
	.size	_ZTIN2kc16impl_term_TCTermE, 24

	.type	_ZTSN2kc16impl_term_TCTermE,@object # @_ZTSN2kc16impl_term_TCTermE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc16impl_term_TCTermE
_ZTSN2kc16impl_term_TCTermE:
	.asciz	"N2kc16impl_term_TCTermE"
	.size	_ZTSN2kc16impl_term_TCTermE, 24

	.type	_ZTIN2kc23impl_term_TMemberVarDotE,@object # @_ZTIN2kc23impl_term_TMemberVarDotE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc23impl_term_TMemberVarDotE
	.p2align	3, 0x0
_ZTIN2kc23impl_term_TMemberVarDotE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc23impl_term_TMemberVarDotE
	.dword	_ZTIN2kc9impl_termE
	.size	_ZTIN2kc23impl_term_TMemberVarDotE, 24

	.type	_ZTSN2kc23impl_term_TMemberVarDotE,@object # @_ZTSN2kc23impl_term_TMemberVarDotE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc23impl_term_TMemberVarDotE
_ZTSN2kc23impl_term_TMemberVarDotE:
	.asciz	"N2kc23impl_term_TMemberVarDotE"
	.size	_ZTSN2kc23impl_term_TMemberVarDotE, 31

	.type	_ZTIN2kc20impl_term_TMemberVarE,@object # @_ZTIN2kc20impl_term_TMemberVarE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc20impl_term_TMemberVarE
	.p2align	3, 0x0
_ZTIN2kc20impl_term_TMemberVarE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_term_TMemberVarE
	.dword	_ZTIN2kc9impl_termE
	.size	_ZTIN2kc20impl_term_TMemberVarE, 24

	.type	_ZTSN2kc20impl_term_TMemberVarE,@object # @_ZTSN2kc20impl_term_TMemberVarE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc20impl_term_TMemberVarE
_ZTSN2kc20impl_term_TMemberVarE:
	.asciz	"N2kc20impl_term_TMemberVarE"
	.size	_ZTSN2kc20impl_term_TMemberVarE, 28

	.type	_ZTIN2kc20impl_term_TMethodDotE,@object # @_ZTIN2kc20impl_term_TMethodDotE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc20impl_term_TMethodDotE
	.p2align	3, 0x0
_ZTIN2kc20impl_term_TMethodDotE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_term_TMethodDotE
	.dword	_ZTIN2kc9impl_termE
	.size	_ZTIN2kc20impl_term_TMethodDotE, 24

	.type	_ZTSN2kc20impl_term_TMethodDotE,@object # @_ZTSN2kc20impl_term_TMethodDotE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc20impl_term_TMethodDotE
_ZTSN2kc20impl_term_TMethodDotE:
	.asciz	"N2kc20impl_term_TMethodDotE"
	.size	_ZTSN2kc20impl_term_TMethodDotE, 28

	.type	_ZTIN2kc17impl_term_TMethodE,@object # @_ZTIN2kc17impl_term_TMethodE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc17impl_term_TMethodE
	.p2align	3, 0x0
_ZTIN2kc17impl_term_TMethodE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc17impl_term_TMethodE
	.dword	_ZTIN2kc9impl_termE
	.size	_ZTIN2kc17impl_term_TMethodE, 24

	.type	_ZTSN2kc17impl_term_TMethodE,@object # @_ZTSN2kc17impl_term_TMethodE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc17impl_term_TMethodE
_ZTSN2kc17impl_term_TMethodE:
	.asciz	"N2kc17impl_term_TMethodE"
	.size	_ZTSN2kc17impl_term_TMethodE, 25

	.type	_ZTIN2kc19impl_term_TOperatorE,@object # @_ZTIN2kc19impl_term_TOperatorE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_term_TOperatorE
	.p2align	3, 0x0
_ZTIN2kc19impl_term_TOperatorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_term_TOperatorE
	.dword	_ZTIN2kc9impl_termE
	.size	_ZTIN2kc19impl_term_TOperatorE, 24

	.type	_ZTSN2kc19impl_term_TOperatorE,@object # @_ZTSN2kc19impl_term_TOperatorE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_term_TOperatorE
_ZTSN2kc19impl_term_TOperatorE:
	.asciz	"N2kc19impl_term_TOperatorE"
	.size	_ZTSN2kc19impl_term_TOperatorE, 27

	.type	_ZTIN2kc19impl_term_TVariableE,@object # @_ZTIN2kc19impl_term_TVariableE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc19impl_term_TVariableE
	.p2align	3, 0x0
_ZTIN2kc19impl_term_TVariableE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc19impl_term_TVariableE
	.dword	_ZTIN2kc9impl_termE
	.size	_ZTIN2kc19impl_term_TVariableE, 24

	.type	_ZTSN2kc19impl_term_TVariableE,@object # @_ZTSN2kc19impl_term_TVariableE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc19impl_term_TVariableE
_ZTSN2kc19impl_term_TVariableE:
	.asciz	"N2kc19impl_term_TVariableE"
	.size	_ZTSN2kc19impl_term_TVariableE, 27

	.type	_ZTIN2kc24impl_pattern_PIntLiteralE,@object # @_ZTIN2kc24impl_pattern_PIntLiteralE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_pattern_PIntLiteralE
	.p2align	3, 0x0
_ZTIN2kc24impl_pattern_PIntLiteralE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_pattern_PIntLiteralE
	.dword	_ZTIN2kc12impl_patternE
	.size	_ZTIN2kc24impl_pattern_PIntLiteralE, 24

	.type	_ZTSN2kc24impl_pattern_PIntLiteralE,@object # @_ZTSN2kc24impl_pattern_PIntLiteralE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_pattern_PIntLiteralE
_ZTSN2kc24impl_pattern_PIntLiteralE:
	.asciz	"N2kc24impl_pattern_PIntLiteralE"
	.size	_ZTSN2kc24impl_pattern_PIntLiteralE, 32

	.type	_ZTIN2kc27impl_pattern_PStringLiteralE,@object # @_ZTIN2kc27impl_pattern_PStringLiteralE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc27impl_pattern_PStringLiteralE
	.p2align	3, 0x0
_ZTIN2kc27impl_pattern_PStringLiteralE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_pattern_PStringLiteralE
	.dword	_ZTIN2kc12impl_patternE
	.size	_ZTIN2kc27impl_pattern_PStringLiteralE, 24

	.type	_ZTSN2kc27impl_pattern_PStringLiteralE,@object # @_ZTSN2kc27impl_pattern_PStringLiteralE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc27impl_pattern_PStringLiteralE
_ZTSN2kc27impl_pattern_PStringLiteralE:
	.asciz	"N2kc27impl_pattern_PStringLiteralE"
	.size	_ZTSN2kc27impl_pattern_PStringLiteralE, 35

	.type	_ZTIN2kc29impl_pattern_PNonLeafVariableE,@object # @_ZTIN2kc29impl_pattern_PNonLeafVariableE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc29impl_pattern_PNonLeafVariableE
	.p2align	3, 0x0
_ZTIN2kc29impl_pattern_PNonLeafVariableE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_pattern_PNonLeafVariableE
	.dword	_ZTIN2kc12impl_patternE
	.size	_ZTIN2kc29impl_pattern_PNonLeafVariableE, 24

	.type	_ZTSN2kc29impl_pattern_PNonLeafVariableE,@object # @_ZTSN2kc29impl_pattern_PNonLeafVariableE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc29impl_pattern_PNonLeafVariableE
_ZTSN2kc29impl_pattern_PNonLeafVariableE:
	.asciz	"N2kc29impl_pattern_PNonLeafVariableE"
	.size	_ZTSN2kc29impl_pattern_PNonLeafVariableE, 37

	.type	_ZTIN2kc22impl_pattern_POperatorE,@object # @_ZTIN2kc22impl_pattern_POperatorE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc22impl_pattern_POperatorE
	.p2align	3, 0x0
_ZTIN2kc22impl_pattern_POperatorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_pattern_POperatorE
	.dword	_ZTIN2kc12impl_patternE
	.size	_ZTIN2kc22impl_pattern_POperatorE, 24

	.type	_ZTSN2kc22impl_pattern_POperatorE,@object # @_ZTSN2kc22impl_pattern_POperatorE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc22impl_pattern_POperatorE
_ZTSN2kc22impl_pattern_POperatorE:
	.asciz	"N2kc22impl_pattern_POperatorE"
	.size	_ZTSN2kc22impl_pattern_POperatorE, 30

	.type	_ZTIN2kc22impl_pattern_PVariableE,@object # @_ZTIN2kc22impl_pattern_PVariableE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc22impl_pattern_PVariableE
	.p2align	3, 0x0
_ZTIN2kc22impl_pattern_PVariableE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_pattern_PVariableE
	.dword	_ZTIN2kc12impl_patternE
	.size	_ZTIN2kc22impl_pattern_PVariableE, 24

	.type	_ZTSN2kc22impl_pattern_PVariableE,@object # @_ZTSN2kc22impl_pattern_PVariableE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc22impl_pattern_PVariableE
_ZTSN2kc22impl_pattern_PVariableE:
	.asciz	"N2kc22impl_pattern_PVariableE"
	.size	_ZTSN2kc22impl_pattern_PVariableE, 30

	.type	_ZTIN2kc29impl_outmostpattern_OPDefaultE,@object # @_ZTIN2kc29impl_outmostpattern_OPDefaultE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc29impl_outmostpattern_OPDefaultE
	.p2align	3, 0x0
_ZTIN2kc29impl_outmostpattern_OPDefaultE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_outmostpattern_OPDefaultE
	.dword	_ZTIN2kc19impl_outmostpatternE
	.size	_ZTIN2kc29impl_outmostpattern_OPDefaultE, 24

	.type	_ZTSN2kc29impl_outmostpattern_OPDefaultE,@object # @_ZTSN2kc29impl_outmostpattern_OPDefaultE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc29impl_outmostpattern_OPDefaultE
_ZTSN2kc29impl_outmostpattern_OPDefaultE:
	.asciz	"N2kc29impl_outmostpattern_OPDefaultE"
	.size	_ZTSN2kc29impl_outmostpattern_OPDefaultE, 37

	.type	_ZTIN2kc30impl_outmostpattern_OPWildcardE,@object # @_ZTIN2kc30impl_outmostpattern_OPWildcardE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc30impl_outmostpattern_OPWildcardE
	.p2align	3, 0x0
_ZTIN2kc30impl_outmostpattern_OPWildcardE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc30impl_outmostpattern_OPWildcardE
	.dword	_ZTIN2kc19impl_outmostpatternE
	.size	_ZTIN2kc30impl_outmostpattern_OPWildcardE, 24

	.type	_ZTSN2kc30impl_outmostpattern_OPWildcardE,@object # @_ZTSN2kc30impl_outmostpattern_OPWildcardE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc30impl_outmostpattern_OPWildcardE
_ZTSN2kc30impl_outmostpattern_OPWildcardE:
	.asciz	"N2kc30impl_outmostpattern_OPWildcardE"
	.size	_ZTSN2kc30impl_outmostpattern_OPWildcardE, 38

	.type	_ZTIN2kc37impl_outmostpattern_OPNonLeafVariableE,@object # @_ZTIN2kc37impl_outmostpattern_OPNonLeafVariableE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc37impl_outmostpattern_OPNonLeafVariableE
	.p2align	3, 0x0
_ZTIN2kc37impl_outmostpattern_OPNonLeafVariableE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc37impl_outmostpattern_OPNonLeafVariableE
	.dword	_ZTIN2kc19impl_outmostpatternE
	.size	_ZTIN2kc37impl_outmostpattern_OPNonLeafVariableE, 24

	.type	_ZTSN2kc37impl_outmostpattern_OPNonLeafVariableE,@object # @_ZTSN2kc37impl_outmostpattern_OPNonLeafVariableE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc37impl_outmostpattern_OPNonLeafVariableE
_ZTSN2kc37impl_outmostpattern_OPNonLeafVariableE:
	.asciz	"N2kc37impl_outmostpattern_OPNonLeafVariableE"
	.size	_ZTSN2kc37impl_outmostpattern_OPNonLeafVariableE, 45

	.type	_ZTIN2kc30impl_outmostpattern_OPOperatorE,@object # @_ZTIN2kc30impl_outmostpattern_OPOperatorE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc30impl_outmostpattern_OPOperatorE
	.p2align	3, 0x0
_ZTIN2kc30impl_outmostpattern_OPOperatorE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc30impl_outmostpattern_OPOperatorE
	.dword	_ZTIN2kc19impl_outmostpatternE
	.size	_ZTIN2kc30impl_outmostpattern_OPOperatorE, 24

	.type	_ZTSN2kc30impl_outmostpattern_OPOperatorE,@object # @_ZTSN2kc30impl_outmostpattern_OPOperatorE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc30impl_outmostpattern_OPOperatorE
_ZTSN2kc30impl_outmostpattern_OPOperatorE:
	.asciz	"N2kc30impl_outmostpattern_OPOperatorE"
	.size	_ZTSN2kc30impl_outmostpattern_OPOperatorE, 38

	.type	_ZTIN2kc38impl_outmostpattern_OPOperatorWildcardE,@object # @_ZTIN2kc38impl_outmostpattern_OPOperatorWildcardE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc38impl_outmostpattern_OPOperatorWildcardE
	.p2align	3, 0x0
_ZTIN2kc38impl_outmostpattern_OPOperatorWildcardE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc38impl_outmostpattern_OPOperatorWildcardE
	.dword	_ZTIN2kc19impl_outmostpatternE
	.size	_ZTIN2kc38impl_outmostpattern_OPOperatorWildcardE, 24

	.type	_ZTSN2kc38impl_outmostpattern_OPOperatorWildcardE,@object # @_ZTSN2kc38impl_outmostpattern_OPOperatorWildcardE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc38impl_outmostpattern_OPOperatorWildcardE
_ZTSN2kc38impl_outmostpattern_OPOperatorWildcardE:
	.asciz	"N2kc38impl_outmostpattern_OPOperatorWildcardE"
	.size	_ZTSN2kc38impl_outmostpattern_OPOperatorWildcardE, 46

	.type	_ZTIN2kc46impl_patternchainitem_PatternchainitemDollaridE,@object # @_ZTIN2kc46impl_patternchainitem_PatternchainitemDollaridE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc46impl_patternchainitem_PatternchainitemDollaridE
	.p2align	3, 0x0
_ZTIN2kc46impl_patternchainitem_PatternchainitemDollaridE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc46impl_patternchainitem_PatternchainitemDollaridE
	.dword	_ZTIN2kc21impl_patternchainitemE
	.size	_ZTIN2kc46impl_patternchainitem_PatternchainitemDollaridE, 24

	.type	_ZTSN2kc46impl_patternchainitem_PatternchainitemDollaridE,@object # @_ZTSN2kc46impl_patternchainitem_PatternchainitemDollaridE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc46impl_patternchainitem_PatternchainitemDollaridE
_ZTSN2kc46impl_patternchainitem_PatternchainitemDollaridE:
	.asciz	"N2kc46impl_patternchainitem_PatternchainitemDollaridE"
	.size	_ZTSN2kc46impl_patternchainitem_PatternchainitemDollaridE, 54

	.type	_ZTIN2kc43impl_patternchainitem_PatternchainitemGroupE,@object # @_ZTIN2kc43impl_patternchainitem_PatternchainitemGroupE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc43impl_patternchainitem_PatternchainitemGroupE
	.p2align	3, 0x0
_ZTIN2kc43impl_patternchainitem_PatternchainitemGroupE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc43impl_patternchainitem_PatternchainitemGroupE
	.dword	_ZTIN2kc21impl_patternchainitemE
	.size	_ZTIN2kc43impl_patternchainitem_PatternchainitemGroupE, 24

	.type	_ZTSN2kc43impl_patternchainitem_PatternchainitemGroupE,@object # @_ZTSN2kc43impl_patternchainitem_PatternchainitemGroupE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc43impl_patternchainitem_PatternchainitemGroupE
_ZTSN2kc43impl_patternchainitem_PatternchainitemGroupE:
	.asciz	"N2kc43impl_patternchainitem_PatternchainitemGroupE"
	.size	_ZTSN2kc43impl_patternchainitem_PatternchainitemGroupE, 51

	.type	_ZTIN2kc45impl_patternchainitem_PatternchainitemOutmostE,@object # @_ZTIN2kc45impl_patternchainitem_PatternchainitemOutmostE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc45impl_patternchainitem_PatternchainitemOutmostE
	.p2align	3, 0x0
_ZTIN2kc45impl_patternchainitem_PatternchainitemOutmostE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc45impl_patternchainitem_PatternchainitemOutmostE
	.dword	_ZTIN2kc21impl_patternchainitemE
	.size	_ZTIN2kc45impl_patternchainitem_PatternchainitemOutmostE, 24

	.type	_ZTSN2kc45impl_patternchainitem_PatternchainitemOutmostE,@object # @_ZTSN2kc45impl_patternchainitem_PatternchainitemOutmostE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc45impl_patternchainitem_PatternchainitemOutmostE
_ZTSN2kc45impl_patternchainitem_PatternchainitemOutmostE:
	.asciz	"N2kc45impl_patternchainitem_PatternchainitemOutmostE"
	.size	_ZTSN2kc45impl_patternchainitem_PatternchainitemOutmostE, 53

	.type	_ZTIN2kc32impl_rewriteclause_RewriteClauseE,@object # @_ZTIN2kc32impl_rewriteclause_RewriteClauseE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc32impl_rewriteclause_RewriteClauseE
	.p2align	3, 0x0
_ZTIN2kc32impl_rewriteclause_RewriteClauseE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_rewriteclause_RewriteClauseE
	.dword	_ZTIN2kc18impl_rewriteclauseE
	.size	_ZTIN2kc32impl_rewriteclause_RewriteClauseE, 24

	.type	_ZTSN2kc32impl_rewriteclause_RewriteClauseE,@object # @_ZTSN2kc32impl_rewriteclause_RewriteClauseE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_rewriteclause_RewriteClauseE
_ZTSN2kc32impl_rewriteclause_RewriteClauseE:
	.asciz	"N2kc32impl_rewriteclause_RewriteClauseE"
	.size	_ZTSN2kc32impl_rewriteclause_RewriteClauseE, 40

	.type	_ZTIN2kc32impl_rwdeclaration_RwDeclarationE,@object # @_ZTIN2kc32impl_rwdeclaration_RwDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc32impl_rwdeclaration_RwDeclarationE
	.p2align	3, 0x0
_ZTIN2kc32impl_rwdeclaration_RwDeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_rwdeclaration_RwDeclarationE
	.dword	_ZTIN2kc18impl_rwdeclarationE
	.size	_ZTIN2kc32impl_rwdeclaration_RwDeclarationE, 24

	.type	_ZTSN2kc32impl_rwdeclaration_RwDeclarationE,@object # @_ZTSN2kc32impl_rwdeclaration_RwDeclarationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_rwdeclaration_RwDeclarationE
_ZTSN2kc32impl_rwdeclaration_RwDeclarationE:
	.asciz	"N2kc32impl_rwdeclaration_RwDeclarationE"
	.size	_ZTSN2kc32impl_rwdeclaration_RwDeclarationE, 40

	.type	_ZTIN2kc42impl_includedeclaration_IncludeDeclarationE,@object # @_ZTIN2kc42impl_includedeclaration_IncludeDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc42impl_includedeclaration_IncludeDeclarationE
	.p2align	3, 0x0
_ZTIN2kc42impl_includedeclaration_IncludeDeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc42impl_includedeclaration_IncludeDeclarationE
	.dword	_ZTIN2kc23impl_includedeclarationE
	.size	_ZTIN2kc42impl_includedeclaration_IncludeDeclarationE, 24

	.type	_ZTSN2kc42impl_includedeclaration_IncludeDeclarationE,@object # @_ZTSN2kc42impl_includedeclaration_IncludeDeclarationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc42impl_includedeclaration_IncludeDeclarationE
_ZTSN2kc42impl_includedeclaration_IncludeDeclarationE:
	.asciz	"N2kc42impl_includedeclaration_IncludeDeclarationE"
	.size	_ZTSN2kc42impl_includedeclaration_IncludeDeclarationE, 50

	.type	_ZTIN2kc28impl_includefile_IncludeFileE,@object # @_ZTIN2kc28impl_includefile_IncludeFileE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc28impl_includefile_IncludeFileE
	.p2align	3, 0x0
_ZTIN2kc28impl_includefile_IncludeFileE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc28impl_includefile_IncludeFileE
	.dword	_ZTIN2kc16impl_includefileE
	.size	_ZTIN2kc28impl_includefile_IncludeFileE, 24

	.type	_ZTSN2kc28impl_includefile_IncludeFileE,@object # @_ZTSN2kc28impl_includefile_IncludeFileE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc28impl_includefile_IncludeFileE
_ZTSN2kc28impl_includefile_IncludeFileE:
	.asciz	"N2kc28impl_includefile_IncludeFileE"
	.size	_ZTSN2kc28impl_includefile_IncludeFileE, 36

	.type	_ZTIN2kc32impl_idCexpression_IdCexpressionE,@object # @_ZTIN2kc32impl_idCexpression_IdCexpressionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc32impl_idCexpression_IdCexpressionE
	.p2align	3, 0x0
_ZTIN2kc32impl_idCexpression_IdCexpressionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32impl_idCexpression_IdCexpressionE
	.dword	_ZTIN2kc18impl_idCexpressionE
	.size	_ZTIN2kc32impl_idCexpression_IdCexpressionE, 24

	.type	_ZTSN2kc32impl_idCexpression_IdCexpressionE,@object # @_ZTSN2kc32impl_idCexpression_IdCexpressionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc32impl_idCexpression_IdCexpressionE
_ZTSN2kc32impl_idCexpression_IdCexpressionE:
	.asciz	"N2kc32impl_idCexpression_IdCexpressionE"
	.size	_ZTSN2kc32impl_idCexpression_IdCexpressionE, 40

	.type	_ZTIN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE,@object # @_ZTIN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
	.p2align	3, 0x0
_ZTIN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
	.dword	_ZTIN2kc23impl_CexpressionSQ_elemE
	.size	_ZTIN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE, 24

	.type	_ZTSN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE,@object # @_ZTSN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
_ZTSN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE:
	.asciz	"N2kc41impl_CexpressionSQ_elem_CExpressionSQPartE"
	.size	_ZTSN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE, 49

	.type	_ZTIN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE,@object # @_ZTIN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
	.p2align	3, 0x0
_ZTIN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
	.dword	_ZTIN2kc23impl_CexpressionDQ_elemE
	.size	_ZTIN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE, 24

	.type	_ZTSN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE,@object # @_ZTSN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
_ZTSN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE:
	.asciz	"N2kc41impl_CexpressionDQ_elem_CExpressionDQPartE"
	.size	_ZTSN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE, 49

	.type	_ZTIN2kc38impl_Cexpression_elem_CExpressionArrayE,@object # @_ZTIN2kc38impl_Cexpression_elem_CExpressionArrayE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc38impl_Cexpression_elem_CExpressionArrayE
	.p2align	3, 0x0
_ZTIN2kc38impl_Cexpression_elem_CExpressionArrayE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc38impl_Cexpression_elem_CExpressionArrayE
	.dword	_ZTIN2kc21impl_Cexpression_elemE
	.size	_ZTIN2kc38impl_Cexpression_elem_CExpressionArrayE, 24

	.type	_ZTSN2kc38impl_Cexpression_elem_CExpressionArrayE,@object # @_ZTSN2kc38impl_Cexpression_elem_CExpressionArrayE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc38impl_Cexpression_elem_CExpressionArrayE
_ZTSN2kc38impl_Cexpression_elem_CExpressionArrayE:
	.asciz	"N2kc38impl_Cexpression_elem_CExpressionArrayE"
	.size	_ZTSN2kc38impl_Cexpression_elem_CExpressionArrayE, 46

	.type	_ZTIN2kc37impl_Cexpression_elem_CExpressionPackE,@object # @_ZTIN2kc37impl_Cexpression_elem_CExpressionPackE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc37impl_Cexpression_elem_CExpressionPackE
	.p2align	3, 0x0
_ZTIN2kc37impl_Cexpression_elem_CExpressionPackE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc37impl_Cexpression_elem_CExpressionPackE
	.dword	_ZTIN2kc21impl_Cexpression_elemE
	.size	_ZTIN2kc37impl_Cexpression_elem_CExpressionPackE, 24

	.type	_ZTSN2kc37impl_Cexpression_elem_CExpressionPackE,@object # @_ZTSN2kc37impl_Cexpression_elem_CExpressionPackE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc37impl_Cexpression_elem_CExpressionPackE
_ZTSN2kc37impl_Cexpression_elem_CExpressionPackE:
	.asciz	"N2kc37impl_Cexpression_elem_CExpressionPackE"
	.size	_ZTSN2kc37impl_Cexpression_elem_CExpressionPackE, 45

	.type	_ZTIN2kc35impl_Cexpression_elem_CExpressionSQE,@object # @_ZTIN2kc35impl_Cexpression_elem_CExpressionSQE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc35impl_Cexpression_elem_CExpressionSQE
	.p2align	3, 0x0
_ZTIN2kc35impl_Cexpression_elem_CExpressionSQE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc35impl_Cexpression_elem_CExpressionSQE
	.dword	_ZTIN2kc21impl_Cexpression_elemE
	.size	_ZTIN2kc35impl_Cexpression_elem_CExpressionSQE, 24

	.type	_ZTSN2kc35impl_Cexpression_elem_CExpressionSQE,@object # @_ZTSN2kc35impl_Cexpression_elem_CExpressionSQE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc35impl_Cexpression_elem_CExpressionSQE
_ZTSN2kc35impl_Cexpression_elem_CExpressionSQE:
	.asciz	"N2kc35impl_Cexpression_elem_CExpressionSQE"
	.size	_ZTSN2kc35impl_Cexpression_elem_CExpressionSQE, 43

	.type	_ZTIN2kc35impl_Cexpression_elem_CExpressionDQE,@object # @_ZTIN2kc35impl_Cexpression_elem_CExpressionDQE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc35impl_Cexpression_elem_CExpressionDQE
	.p2align	3, 0x0
_ZTIN2kc35impl_Cexpression_elem_CExpressionDQE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc35impl_Cexpression_elem_CExpressionDQE
	.dword	_ZTIN2kc21impl_Cexpression_elemE
	.size	_ZTIN2kc35impl_Cexpression_elem_CExpressionDQE, 24

	.type	_ZTSN2kc35impl_Cexpression_elem_CExpressionDQE,@object # @_ZTSN2kc35impl_Cexpression_elem_CExpressionDQE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc35impl_Cexpression_elem_CExpressionDQE
_ZTSN2kc35impl_Cexpression_elem_CExpressionDQE:
	.asciz	"N2kc35impl_Cexpression_elem_CExpressionDQE"
	.size	_ZTSN2kc35impl_Cexpression_elem_CExpressionDQE, 43

	.type	_ZTIN2kc42impl_Cexpression_elem_CExpressionDollarvarE,@object # @_ZTIN2kc42impl_Cexpression_elem_CExpressionDollarvarE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc42impl_Cexpression_elem_CExpressionDollarvarE
	.p2align	3, 0x0
_ZTIN2kc42impl_Cexpression_elem_CExpressionDollarvarE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc42impl_Cexpression_elem_CExpressionDollarvarE
	.dword	_ZTIN2kc21impl_Cexpression_elemE
	.size	_ZTIN2kc42impl_Cexpression_elem_CExpressionDollarvarE, 24

	.type	_ZTSN2kc42impl_Cexpression_elem_CExpressionDollarvarE,@object # @_ZTSN2kc42impl_Cexpression_elem_CExpressionDollarvarE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc42impl_Cexpression_elem_CExpressionDollarvarE
_ZTSN2kc42impl_Cexpression_elem_CExpressionDollarvarE:
	.asciz	"N2kc42impl_Cexpression_elem_CExpressionDollarvarE"
	.size	_ZTSN2kc42impl_Cexpression_elem_CExpressionDollarvarE, 50

	.type	_ZTIN2kc37impl_Cexpression_elem_CExpressionPartE,@object # @_ZTIN2kc37impl_Cexpression_elem_CExpressionPartE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc37impl_Cexpression_elem_CExpressionPartE
	.p2align	3, 0x0
_ZTIN2kc37impl_Cexpression_elem_CExpressionPartE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc37impl_Cexpression_elem_CExpressionPartE
	.dword	_ZTIN2kc21impl_Cexpression_elemE
	.size	_ZTIN2kc37impl_Cexpression_elem_CExpressionPartE, 24

	.type	_ZTSN2kc37impl_Cexpression_elem_CExpressionPartE,@object # @_ZTSN2kc37impl_Cexpression_elem_CExpressionPartE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc37impl_Cexpression_elem_CExpressionPartE
_ZTSN2kc37impl_Cexpression_elem_CExpressionPartE:
	.asciz	"N2kc37impl_Cexpression_elem_CExpressionPartE"
	.size	_ZTSN2kc37impl_Cexpression_elem_CExpressionPartE, 45

	.type	_ZTIN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE,@object # @_ZTIN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
	.p2align	3, 0x0
_ZTIN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
	.dword	_ZTIN2kc36impl_attribute_initialisation_optionE
	.size	_ZTIN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE, 24

	.type	_ZTSN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE,@object # @_ZTSN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
_ZTSN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE:
	.asciz	"N2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE"
	.size	_ZTSN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE, 72

	.type	_ZTIN2kc24impl_attribute_AttributeE,@object # @_ZTIN2kc24impl_attribute_AttributeE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc24impl_attribute_AttributeE
	.p2align	3, 0x0
_ZTIN2kc24impl_attribute_AttributeE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc24impl_attribute_AttributeE
	.dword	_ZTIN2kc14impl_attributeE
	.size	_ZTIN2kc24impl_attribute_AttributeE, 24

	.type	_ZTSN2kc24impl_attribute_AttributeE,@object # @_ZTSN2kc24impl_attribute_AttributeE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc24impl_attribute_AttributeE
_ZTSN2kc24impl_attribute_AttributeE:
	.asciz	"N2kc24impl_attribute_AttributeE"
	.size	_ZTSN2kc24impl_attribute_AttributeE, 32

	.type	_ZTIN2kc29impl_Ccode_option_CcodeOptionE,@object # @_ZTIN2kc29impl_Ccode_option_CcodeOptionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc29impl_Ccode_option_CcodeOptionE
	.p2align	3, 0x0
_ZTIN2kc29impl_Ccode_option_CcodeOptionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc29impl_Ccode_option_CcodeOptionE
	.dword	_ZTIN2kc17impl_Ccode_optionE
	.size	_ZTIN2kc29impl_Ccode_option_CcodeOptionE, 24

	.type	_ZTSN2kc29impl_Ccode_option_CcodeOptionE,@object # @_ZTSN2kc29impl_Ccode_option_CcodeOptionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc29impl_Ccode_option_CcodeOptionE
_ZTSN2kc29impl_Ccode_option_CcodeOptionE:
	.asciz	"N2kc29impl_Ccode_option_CcodeOptionE"
	.size	_ZTSN2kc29impl_Ccode_option_CcodeOptionE, 37

	.type	_ZTIN2kc22impl_argument_ArgumentE,@object # @_ZTIN2kc22impl_argument_ArgumentE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc22impl_argument_ArgumentE
	.p2align	3, 0x0
_ZTIN2kc22impl_argument_ArgumentE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc22impl_argument_ArgumentE
	.dword	_ZTIN2kc13impl_argumentE
	.size	_ZTIN2kc22impl_argument_ArgumentE, 24

	.type	_ZTSN2kc22impl_argument_ArgumentE,@object # @_ZTSN2kc22impl_argument_ArgumentE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc22impl_argument_ArgumentE
_ZTSN2kc22impl_argument_ArgumentE:
	.asciz	"N2kc22impl_argument_ArgumentE"
	.size	_ZTSN2kc22impl_argument_ArgumentE, 30

	.type	_ZTIN2kc13impl_argumentE,@object # @_ZTIN2kc13impl_argumentE
	.section	.data.rel.ro._ZTIN2kc13impl_argumentE,"awG",@progbits,_ZTIN2kc13impl_argumentE,comdat
	.weak	_ZTIN2kc13impl_argumentE
	.p2align	3, 0x0
_ZTIN2kc13impl_argumentE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc13impl_argumentE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc13impl_argumentE, 24

	.type	_ZTSN2kc13impl_argumentE,@object # @_ZTSN2kc13impl_argumentE
	.section	.rodata._ZTSN2kc13impl_argumentE,"aG",@progbits,_ZTSN2kc13impl_argumentE,comdat
	.weak	_ZTSN2kc13impl_argumentE
_ZTSN2kc13impl_argumentE:
	.asciz	"N2kc13impl_argumentE"
	.size	_ZTSN2kc13impl_argumentE, 21

	.type	_ZTIN2kc28impl_alternative_AlternativeE,@object # @_ZTIN2kc28impl_alternative_AlternativeE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc28impl_alternative_AlternativeE
	.p2align	3, 0x0
_ZTIN2kc28impl_alternative_AlternativeE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc28impl_alternative_AlternativeE
	.dword	_ZTIN2kc16impl_alternativeE
	.size	_ZTIN2kc28impl_alternative_AlternativeE, 24

	.type	_ZTSN2kc28impl_alternative_AlternativeE,@object # @_ZTSN2kc28impl_alternative_AlternativeE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc28impl_alternative_AlternativeE
_ZTSN2kc28impl_alternative_AlternativeE:
	.asciz	"N2kc28impl_alternative_AlternativeE"
	.size	_ZTSN2kc28impl_alternative_AlternativeE, 36

	.type	_ZTIN2kc43impl_productionblock_PredefinedAlternativesE,@object # @_ZTIN2kc43impl_productionblock_PredefinedAlternativesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc43impl_productionblock_PredefinedAlternativesE
	.p2align	3, 0x0
_ZTIN2kc43impl_productionblock_PredefinedAlternativesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc43impl_productionblock_PredefinedAlternativesE
	.dword	_ZTIN2kc20impl_productionblockE
	.size	_ZTIN2kc43impl_productionblock_PredefinedAlternativesE, 24

	.type	_ZTSN2kc43impl_productionblock_PredefinedAlternativesE,@object # @_ZTSN2kc43impl_productionblock_PredefinedAlternativesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc43impl_productionblock_PredefinedAlternativesE
_ZTSN2kc43impl_productionblock_PredefinedAlternativesE:
	.asciz	"N2kc43impl_productionblock_PredefinedAlternativesE"
	.size	_ZTSN2kc43impl_productionblock_PredefinedAlternativesE, 51

	.type	_ZTIN2kc40impl_productionblock_NonlistAlternativesE,@object # @_ZTIN2kc40impl_productionblock_NonlistAlternativesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc40impl_productionblock_NonlistAlternativesE
	.p2align	3, 0x0
_ZTIN2kc40impl_productionblock_NonlistAlternativesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc40impl_productionblock_NonlistAlternativesE
	.dword	_ZTIN2kc20impl_productionblockE
	.size	_ZTIN2kc40impl_productionblock_NonlistAlternativesE, 24

	.type	_ZTSN2kc40impl_productionblock_NonlistAlternativesE,@object # @_ZTSN2kc40impl_productionblock_NonlistAlternativesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc40impl_productionblock_NonlistAlternativesE
_ZTSN2kc40impl_productionblock_NonlistAlternativesE:
	.asciz	"N2kc40impl_productionblock_NonlistAlternativesE"
	.size	_ZTSN2kc40impl_productionblock_NonlistAlternativesE, 48

	.type	_ZTIN2kc37impl_productionblock_ListAlternativesE,@object # @_ZTIN2kc37impl_productionblock_ListAlternativesE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc37impl_productionblock_ListAlternativesE
	.p2align	3, 0x0
_ZTIN2kc37impl_productionblock_ListAlternativesE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc37impl_productionblock_ListAlternativesE
	.dword	_ZTIN2kc20impl_productionblockE
	.size	_ZTIN2kc37impl_productionblock_ListAlternativesE, 24

	.type	_ZTSN2kc37impl_productionblock_ListAlternativesE,@object # @_ZTSN2kc37impl_productionblock_ListAlternativesE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc37impl_productionblock_ListAlternativesE
_ZTSN2kc37impl_productionblock_ListAlternativesE:
	.asciz	"N2kc37impl_productionblock_ListAlternativesE"
	.size	_ZTSN2kc37impl_productionblock_ListAlternativesE, 45

	.type	_ZTIN2kc40impl_storageoption_PositiveStorageOptionE,@object # @_ZTIN2kc40impl_storageoption_PositiveStorageOptionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc40impl_storageoption_PositiveStorageOptionE
	.p2align	3, 0x0
_ZTIN2kc40impl_storageoption_PositiveStorageOptionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc40impl_storageoption_PositiveStorageOptionE
	.dword	_ZTIN2kc18impl_storageoptionE
	.size	_ZTIN2kc40impl_storageoption_PositiveStorageOptionE, 24

	.type	_ZTSN2kc40impl_storageoption_PositiveStorageOptionE,@object # @_ZTSN2kc40impl_storageoption_PositiveStorageOptionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc40impl_storageoption_PositiveStorageOptionE
_ZTSN2kc40impl_storageoption_PositiveStorageOptionE:
	.asciz	"N2kc40impl_storageoption_PositiveStorageOptionE"
	.size	_ZTSN2kc40impl_storageoption_PositiveStorageOptionE, 48

	.type	_ZTIN2kc40impl_storageoption_NegativeStorageOptionE,@object # @_ZTIN2kc40impl_storageoption_NegativeStorageOptionE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc40impl_storageoption_NegativeStorageOptionE
	.p2align	3, 0x0
_ZTIN2kc40impl_storageoption_NegativeStorageOptionE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc40impl_storageoption_NegativeStorageOptionE
	.dword	_ZTIN2kc18impl_storageoptionE
	.size	_ZTIN2kc40impl_storageoption_NegativeStorageOptionE, 24

	.type	_ZTSN2kc40impl_storageoption_NegativeStorageOptionE,@object # @_ZTSN2kc40impl_storageoption_NegativeStorageOptionE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc40impl_storageoption_NegativeStorageOptionE
_ZTSN2kc40impl_storageoption_NegativeStorageOptionE:
	.asciz	"N2kc40impl_storageoption_NegativeStorageOptionE"
	.size	_ZTSN2kc40impl_storageoption_NegativeStorageOptionE, 48

	.type	_ZTIN2kc40impl_phylumdeclaration_PhylumDeclarationE,@object # @_ZTIN2kc40impl_phylumdeclaration_PhylumDeclarationE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc40impl_phylumdeclaration_PhylumDeclarationE
	.p2align	3, 0x0
_ZTIN2kc40impl_phylumdeclaration_PhylumDeclarationE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc40impl_phylumdeclaration_PhylumDeclarationE
	.dword	_ZTIN2kc22impl_phylumdeclarationE
	.size	_ZTIN2kc40impl_phylumdeclaration_PhylumDeclarationE, 24

	.type	_ZTSN2kc40impl_phylumdeclaration_PhylumDeclarationE,@object # @_ZTSN2kc40impl_phylumdeclaration_PhylumDeclarationE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc40impl_phylumdeclaration_PhylumDeclarationE
_ZTSN2kc40impl_phylumdeclaration_PhylumDeclarationE:
	.asciz	"N2kc40impl_phylumdeclaration_PhylumDeclarationE"
	.size	_ZTSN2kc40impl_phylumdeclaration_PhylumDeclarationE, 48

	.type	_ZTIN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE,@object # @_ZTIN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
	.p2align	3, 0x0
_ZTIN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
	.dword	_ZTIN2kc27impl_phylumdeclarationsrootE
	.size	_ZTIN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE, 24

	.type	_ZTSN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE,@object # @_ZTSN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
_ZTSN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE:
	.asciz	"N2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE"
	.size	_ZTSN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE, 54

	.type	_ZTIN2kc27impl_phylumdeclarationsrootE,@object # @_ZTIN2kc27impl_phylumdeclarationsrootE
	.section	.data.rel.ro._ZTIN2kc27impl_phylumdeclarationsrootE,"awG",@progbits,_ZTIN2kc27impl_phylumdeclarationsrootE,comdat
	.weak	_ZTIN2kc27impl_phylumdeclarationsrootE
	.p2align	3, 0x0
_ZTIN2kc27impl_phylumdeclarationsrootE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_phylumdeclarationsrootE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc27impl_phylumdeclarationsrootE, 24

	.type	_ZTSN2kc27impl_phylumdeclarationsrootE,@object # @_ZTSN2kc27impl_phylumdeclarationsrootE
	.section	.rodata._ZTSN2kc27impl_phylumdeclarationsrootE,"aG",@progbits,_ZTSN2kc27impl_phylumdeclarationsrootE,comdat
	.weak	_ZTSN2kc27impl_phylumdeclarationsrootE
_ZTSN2kc27impl_phylumdeclarationsrootE:
	.asciz	"N2kc27impl_phylumdeclarationsrootE"
	.size	_ZTSN2kc27impl_phylumdeclarationsrootE, 35

	.type	_ZTIN2kc18impl_STRING_StringE,@object # @_ZTIN2kc18impl_STRING_StringE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc18impl_STRING_StringE
	.p2align	3, 0x0
_ZTIN2kc18impl_STRING_StringE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc18impl_STRING_StringE
	.dword	_ZTIN2kc11impl_STRINGE
	.size	_ZTIN2kc18impl_STRING_StringE, 24

	.type	_ZTSN2kc18impl_STRING_StringE,@object # @_ZTSN2kc18impl_STRING_StringE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc18impl_STRING_StringE
_ZTSN2kc18impl_STRING_StringE:
	.asciz	"N2kc18impl_STRING_StringE"
	.size	_ZTSN2kc18impl_STRING_StringE, 26

	.type	_ZTIN2kc12impl_INT_IntE,@object # @_ZTIN2kc12impl_INT_IntE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc12impl_INT_IntE
	.p2align	3, 0x0
_ZTIN2kc12impl_INT_IntE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc12impl_INT_IntE
	.dword	_ZTIN2kc8impl_INTE
	.size	_ZTIN2kc12impl_INT_IntE, 24

	.type	_ZTSN2kc12impl_INT_IntE,@object # @_ZTSN2kc12impl_INT_IntE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc12impl_INT_IntE
_ZTSN2kc12impl_INT_IntE:
	.asciz	"N2kc12impl_INT_IntE"
	.size	_ZTSN2kc12impl_INT_IntE, 20

	.type	_ZTIN2kc10impl_ID_IdE,@object   # @_ZTIN2kc10impl_ID_IdE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc10impl_ID_IdE
	.p2align	3, 0x0
_ZTIN2kc10impl_ID_IdE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc10impl_ID_IdE
	.dword	_ZTIN2kc7impl_IDE
	.size	_ZTIN2kc10impl_ID_IdE, 24

	.type	_ZTSN2kc10impl_ID_IdE,@object   # @_ZTSN2kc10impl_ID_IdE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc10impl_ID_IdE
_ZTSN2kc10impl_ID_IdE:
	.asciz	"N2kc10impl_ID_IdE"
	.size	_ZTSN2kc10impl_ID_IdE, 18

	.type	_ZTIN2kc15impl_uniqID_StrE,@object # @_ZTIN2kc15impl_uniqID_StrE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTIN2kc15impl_uniqID_StrE
	.p2align	3, 0x0
_ZTIN2kc15impl_uniqID_StrE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc15impl_uniqID_StrE
	.dword	_ZTIN2kc11impl_uniqIDE
	.size	_ZTIN2kc15impl_uniqID_StrE, 24

	.type	_ZTSN2kc15impl_uniqID_StrE,@object # @_ZTSN2kc15impl_uniqID_StrE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc15impl_uniqID_StrE
_ZTSN2kc15impl_uniqID_StrE:
	.asciz	"N2kc15impl_uniqID_StrE"
	.size	_ZTSN2kc15impl_uniqID_StrE, 23

	.type	_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE,@object # @_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE
	.section	.rodata._ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE,"aG",@progbits,_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE,comdat
	.weak	_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE
	.p2align	3, 0x0
_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE:
	.dword	5                               # 0x5
	.dword	53                              # 0x35
	.dword	97                              # 0x61
	.dword	193                             # 0xc1
	.dword	389                             # 0x185
	.dword	769                             # 0x301
	.dword	1543                            # 0x607
	.dword	3079                            # 0xc07
	.dword	6151                            # 0x1807
	.dword	12289                           # 0x3001
	.dword	24593                           # 0x6011
	.dword	49157                           # 0xc005
	.dword	98317                           # 0x1800d
	.dword	196613                          # 0x30005
	.dword	393241                          # 0x60019
	.dword	786433                          # 0xc0001
	.dword	1572869                         # 0x180005
	.dword	3145739                         # 0x30000b
	.dword	6291469                         # 0x60000d
	.dword	12582917                        # 0xc00005
	.dword	25165843                        # 0x1800013
	.dword	50331653                        # 0x3000005
	.dword	100663319                       # 0x6000017
	.dword	201326611                       # 0xc000013
	.dword	402653189                       # 0x18000005
	.dword	805306457                       # 0x30000059
	.dword	1610612741                      # 0x60000005
	.dword	3221225473                      # 0xc0000001
	.dword	4294967291                      # 0xfffffffb
	.size	_ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE, 232

	.type	.L.str.514,@object              # @.str.514
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.514:
	.asciz	"vector::reserve"
	.size	.L.str.514, 16

	.type	.L.str.515,@object              # @.str.515
.L.str.515:
	.asciz	"vector::_M_fill_insert"
	.size	.L.str.515, 23

	.type	.L.str.516,@object              # @.str.516
.L.str.516:
	.asciz	"%s%s()\n"
	.size	.L.str.516, 8

	.type	.L.str.517,@object              # @.str.517
.L.str.517:
	.asciz	"%s%s(\n"
	.size	.L.str.517, 7

	.type	.L.str.518,@object              # @.str.518
.L.str.518:
	.asciz	"%s)\n"
	.size	.L.str.518, 5

	.type	.L.str.520,@object              # @.str.520
.L.str.520:
	.asciz	"cannot create std::vector larger than max_size()"
	.size	.L.str.520, 49

	.type	.L.str.521,@object              # @.str.521
.L.str.521:
	.asciz	"basic_string::append"
	.size	.L.str.521, 21

	.section	.init_array,"aw",@init_array
	.p2align	3, 0x0
	.dword	_GLOBAL__sub_I_k.cc
	.globl	_ZN2kc27impl_nocasestring_NoCaseStrC1EPKc
	.type	_ZN2kc27impl_nocasestring_NoCaseStrC1EPKc,@function
_ZN2kc27impl_nocasestring_NoCaseStrC1EPKc = _ZN2kc27impl_nocasestring_NoCaseStrC2EPKc
	.globl	_ZN2kc20impl_casestring__StrC1EPKc
	.type	_ZN2kc20impl_casestring__StrC1EPKc,@function
_ZN2kc20impl_casestring__StrC1EPKc = _ZN2kc20impl_casestring__StrC2EPKc
	.globl	_ZN2kc15impl_real__RealC1Ed
	.type	_ZN2kc15impl_real__RealC1Ed,@function
_ZN2kc15impl_real__RealC1Ed = _ZN2kc15impl_real__RealC2Ed
	.globl	_ZN2kc17impl_integer__IntC1Ei
	.type	_ZN2kc17impl_integer__IntC1Ei,@function
_ZN2kc17impl_integer__IntC1Ei = _ZN2kc17impl_integer__IntC2Ei
	.globl	_ZN2kc21impl_voidptr__VoidPtrC1EPv
	.type	_ZN2kc21impl_voidptr__VoidPtrC1EPv,@function
_ZN2kc21impl_voidptr__VoidPtrC1EPv = _ZN2kc21impl_voidptr__VoidPtrC2EPv
	.globl	_ZN2kc15impl_uniqID_StrC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc15impl_uniqID_StrC1EPNS_20impl_casestring__StrE,@function
_ZN2kc15impl_uniqID_StrC1EPNS_20impl_casestring__StrE = _ZN2kc15impl_uniqID_StrC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc10impl_ID_IdC1EPNS_11impl_uniqIDE
	.type	_ZN2kc10impl_ID_IdC1EPNS_11impl_uniqIDE,@function
_ZN2kc10impl_ID_IdC1EPNS_11impl_uniqIDE = _ZN2kc10impl_ID_IdC2EPNS_11impl_uniqIDE
	.globl	_ZN2kc12impl_INT_IntC1EPNS_17impl_integer__IntE
	.type	_ZN2kc12impl_INT_IntC1EPNS_17impl_integer__IntE,@function
_ZN2kc12impl_INT_IntC1EPNS_17impl_integer__IntE = _ZN2kc12impl_INT_IntC2EPNS_17impl_integer__IntE
	.globl	_ZN2kc18impl_STRING_StringC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc18impl_STRING_StringC1EPNS_20impl_casestring__StrE,@function
_ZN2kc18impl_STRING_StringC1EPNS_20impl_casestring__StrE = _ZN2kc18impl_STRING_StringC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC1EPNS_23impl_phylumdeclarationsE
	.type	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC1EPNS_23impl_phylumdeclarationsE,@function
_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC1EPNS_23impl_phylumdeclarationsE = _ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsC2EPNS_23impl_phylumdeclarationsE
	.globl	_ZN2kc23impl_phylumdeclarationsC1EPNS_22impl_phylumdeclarationEPS0_
	.type	_ZN2kc23impl_phylumdeclarationsC1EPNS_22impl_phylumdeclarationEPS0_,@function
_ZN2kc23impl_phylumdeclarationsC1EPNS_22impl_phylumdeclarationEPS0_ = _ZN2kc23impl_phylumdeclarationsC2EPNS_22impl_phylumdeclarationEPS0_
	.globl	_ZN2kc16impl_phylumnamesC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc16impl_phylumnamesC1EPNS_7impl_IDEPS0_,@function
_ZN2kc16impl_phylumnamesC1EPNS_7impl_IDEPS0_ = _ZN2kc16impl_phylumnamesC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc40impl_phylumdeclaration_PhylumDeclarationC1EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE
	.type	_ZN2kc40impl_phylumdeclaration_PhylumDeclarationC1EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE,@function
_ZN2kc40impl_phylumdeclaration_PhylumDeclarationC1EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE = _ZN2kc40impl_phylumdeclaration_PhylumDeclarationC2EPNS_7impl_IDEPNS_18impl_storageoptionEPNS_20impl_productionblockEPNS_17impl_Ccode_optionE
	.globl	_ZN2kc40impl_storageoption_PositiveStorageOptionC1EPNS_7impl_IDE
	.type	_ZN2kc40impl_storageoption_PositiveStorageOptionC1EPNS_7impl_IDE,@function
_ZN2kc40impl_storageoption_PositiveStorageOptionC1EPNS_7impl_IDE = _ZN2kc40impl_storageoption_PositiveStorageOptionC2EPNS_7impl_IDE
	.globl	_ZN2kc40impl_storageoption_NegativeStorageOptionC1EPNS_7impl_IDE
	.type	_ZN2kc40impl_storageoption_NegativeStorageOptionC1EPNS_7impl_IDE,@function
_ZN2kc40impl_storageoption_NegativeStorageOptionC1EPNS_7impl_IDE = _ZN2kc40impl_storageoption_NegativeStorageOptionC2EPNS_7impl_IDE
	.globl	_ZN2kc34impl_storageoption_NoStorageOptionC1Ev
	.type	_ZN2kc34impl_storageoption_NoStorageOptionC1Ev,@function
_ZN2kc34impl_storageoption_NoStorageOptionC1Ev = _ZN2kc34impl_storageoption_NoStorageOptionC2Ev
	.globl	_ZN2kc19impl_storageclassesC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc19impl_storageclassesC1EPNS_7impl_IDEPS0_,@function
_ZN2kc19impl_storageclassesC1EPNS_7impl_IDEPS0_ = _ZN2kc19impl_storageclassesC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc43impl_productionblock_PredefinedAlternativesC1EPNS_17impl_alternativesE
	.type	_ZN2kc43impl_productionblock_PredefinedAlternativesC1EPNS_17impl_alternativesE,@function
_ZN2kc43impl_productionblock_PredefinedAlternativesC1EPNS_17impl_alternativesE = _ZN2kc43impl_productionblock_PredefinedAlternativesC2EPNS_17impl_alternativesE
	.globl	_ZN2kc40impl_productionblock_NonlistAlternativesC1EPNS_17impl_alternativesE
	.type	_ZN2kc40impl_productionblock_NonlistAlternativesC1EPNS_17impl_alternativesE,@function
_ZN2kc40impl_productionblock_NonlistAlternativesC1EPNS_17impl_alternativesE = _ZN2kc40impl_productionblock_NonlistAlternativesC2EPNS_17impl_alternativesE
	.globl	_ZN2kc37impl_productionblock_ListAlternativesC1EPNS_17impl_alternativesEPNS_7impl_IDE
	.type	_ZN2kc37impl_productionblock_ListAlternativesC1EPNS_17impl_alternativesEPNS_7impl_IDE,@function
_ZN2kc37impl_productionblock_ListAlternativesC1EPNS_17impl_alternativesEPNS_7impl_IDE = _ZN2kc37impl_productionblock_ListAlternativesC2EPNS_17impl_alternativesEPNS_7impl_IDE
	.globl	_ZN2kc41impl_productionblock_EmptyproductionblockC1Ev
	.type	_ZN2kc41impl_productionblock_EmptyproductionblockC1Ev,@function
_ZN2kc41impl_productionblock_EmptyproductionblockC1Ev = _ZN2kc41impl_productionblock_EmptyproductionblockC2Ev
	.globl	_ZN2kc17impl_alternativesC1EPNS_16impl_alternativeEPS0_
	.type	_ZN2kc17impl_alternativesC1EPNS_16impl_alternativeEPS0_,@function
_ZN2kc17impl_alternativesC1EPNS_16impl_alternativeEPS0_ = _ZN2kc17impl_alternativesC2EPNS_16impl_alternativeEPS0_
	.globl	_ZN2kc28impl_alternative_AlternativeC1EPNS_7impl_IDEPNS_14impl_argumentsE
	.type	_ZN2kc28impl_alternative_AlternativeC1EPNS_7impl_IDEPNS_14impl_argumentsE,@function
_ZN2kc28impl_alternative_AlternativeC1EPNS_7impl_IDEPNS_14impl_argumentsE = _ZN2kc28impl_alternative_AlternativeC2EPNS_7impl_IDEPNS_14impl_argumentsE
	.globl	_ZN2kc14impl_argumentsC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc14impl_argumentsC1EPNS_7impl_IDEPS0_,@function
_ZN2kc14impl_argumentsC1EPNS_7impl_IDEPS0_ = _ZN2kc14impl_argumentsC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc22impl_argument_ArgumentC1EPNS_7impl_IDEPNS_17impl_integer__IntE
	.type	_ZN2kc22impl_argument_ArgumentC1EPNS_7impl_IDEPNS_17impl_integer__IntE,@function
_ZN2kc22impl_argument_ArgumentC1EPNS_7impl_IDEPNS_17impl_integer__IntE = _ZN2kc22impl_argument_ArgumentC2EPNS_7impl_IDEPNS_17impl_integer__IntE
	.globl	_ZN2kc29impl_Ccode_option_CcodeOptionC1EPNS_15impl_attributesEPNS_11impl_CtextsE
	.type	_ZN2kc29impl_Ccode_option_CcodeOptionC1EPNS_15impl_attributesEPNS_11impl_CtextsE,@function
_ZN2kc29impl_Ccode_option_CcodeOptionC1EPNS_15impl_attributesEPNS_11impl_CtextsE = _ZN2kc29impl_Ccode_option_CcodeOptionC2EPNS_15impl_attributesEPNS_11impl_CtextsE
	.globl	_ZN2kc15impl_attributesC1EPNS_14impl_attributeEPS0_
	.type	_ZN2kc15impl_attributesC1EPNS_14impl_attributeEPS0_,@function
_ZN2kc15impl_attributesC1EPNS_14impl_attributeEPS0_ = _ZN2kc15impl_attributesC2EPNS_14impl_attributeEPS0_
	.globl	_ZN2kc24impl_attribute_AttributeC1EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE
	.type	_ZN2kc24impl_attribute_AttributeC1EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE,@function
_ZN2kc24impl_attribute_AttributeC1EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE = _ZN2kc24impl_attribute_AttributeC2EPNS_7impl_IDES2_PNS_36impl_attribute_initialisation_optionE
	.globl	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC1EPNS_16impl_CexpressionE
	.type	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC1EPNS_16impl_CexpressionE,@function
_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC1EPNS_16impl_CexpressionE = _ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationC2EPNS_16impl_CexpressionE
	.globl	_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC1Ev
	.type	_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC1Ev,@function
_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC1Ev = _ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisationC2Ev
	.globl	_ZN2kc16impl_CexpressionC1EPNS_21impl_Cexpression_elemEPS0_
	.type	_ZN2kc16impl_CexpressionC1EPNS_21impl_Cexpression_elemEPS0_,@function
_ZN2kc16impl_CexpressionC1EPNS_21impl_Cexpression_elemEPS0_ = _ZN2kc16impl_CexpressionC2EPNS_21impl_Cexpression_elemEPS0_
	.globl	_ZN2kc38impl_Cexpression_elem_CExpressionArrayC1EPNS_16impl_CexpressionE
	.type	_ZN2kc38impl_Cexpression_elem_CExpressionArrayC1EPNS_16impl_CexpressionE,@function
_ZN2kc38impl_Cexpression_elem_CExpressionArrayC1EPNS_16impl_CexpressionE = _ZN2kc38impl_Cexpression_elem_CExpressionArrayC2EPNS_16impl_CexpressionE
	.globl	_ZN2kc37impl_Cexpression_elem_CExpressionPackC1EPNS_16impl_CexpressionE
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPackC1EPNS_16impl_CexpressionE,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPackC1EPNS_16impl_CexpressionE = _ZN2kc37impl_Cexpression_elem_CExpressionPackC2EPNS_16impl_CexpressionE
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionSQC1EPNS_18impl_CexpressionSQE
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionSQC1EPNS_18impl_CexpressionSQE,@function
_ZN2kc35impl_Cexpression_elem_CExpressionSQC1EPNS_18impl_CexpressionSQE = _ZN2kc35impl_Cexpression_elem_CExpressionSQC2EPNS_18impl_CexpressionSQE
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionDQC1EPNS_18impl_CexpressionDQE
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionDQC1EPNS_18impl_CexpressionDQE,@function
_ZN2kc35impl_Cexpression_elem_CExpressionDQC1EPNS_18impl_CexpressionDQE = _ZN2kc35impl_Cexpression_elem_CExpressionDQC2EPNS_18impl_CexpressionDQE
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionNlC1Ev
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionNlC1Ev,@function
_ZN2kc35impl_Cexpression_elem_CExpressionNlC1Ev = _ZN2kc35impl_Cexpression_elem_CExpressionNlC2Ev
	.globl	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC1EPNS_8impl_INTE
	.type	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC1EPNS_8impl_INTE,@function
_ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC1EPNS_8impl_INTE = _ZN2kc42impl_Cexpression_elem_CExpressionDollarvarC2EPNS_8impl_INTE
	.globl	_ZN2kc37impl_Cexpression_elem_CExpressionPartC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPartC1EPNS_20impl_casestring__StrE,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPartC1EPNS_20impl_casestring__StrE = _ZN2kc37impl_Cexpression_elem_CExpressionPartC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc18impl_CexpressionDQC1EPNS_23impl_CexpressionDQ_elemEPS0_
	.type	_ZN2kc18impl_CexpressionDQC1EPNS_23impl_CexpressionDQ_elemEPS0_,@function
_ZN2kc18impl_CexpressionDQC1EPNS_23impl_CexpressionDQ_elemEPS0_ = _ZN2kc18impl_CexpressionDQC2EPNS_23impl_CexpressionDQ_elemEPS0_
	.globl	_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC1Ev
	.type	_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC1Ev,@function
_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC1Ev = _ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNlC2Ev
	.globl	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC1EPNS_20impl_casestring__StrE,@function
_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC1EPNS_20impl_casestring__StrE = _ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPartC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc18impl_CexpressionSQC1EPNS_23impl_CexpressionSQ_elemEPS0_
	.type	_ZN2kc18impl_CexpressionSQC1EPNS_23impl_CexpressionSQ_elemEPS0_,@function
_ZN2kc18impl_CexpressionSQC1EPNS_23impl_CexpressionSQ_elemEPS0_ = _ZN2kc18impl_CexpressionSQC2EPNS_23impl_CexpressionSQ_elemEPS0_
	.globl	_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC1Ev
	.type	_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC1Ev,@function
_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC1Ev = _ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNlC2Ev
	.globl	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC1EPNS_20impl_casestring__StrE,@function
_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC1EPNS_20impl_casestring__StrE = _ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPartC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc19impl_idCexpressionsC1EPNS_18impl_idCexpressionEPS0_
	.type	_ZN2kc19impl_idCexpressionsC1EPNS_18impl_idCexpressionEPS0_,@function
_ZN2kc19impl_idCexpressionsC1EPNS_18impl_idCexpressionEPS0_ = _ZN2kc19impl_idCexpressionsC2EPNS_18impl_idCexpressionEPS0_
	.globl	_ZN2kc32impl_idCexpression_IdCexpressionC1EPNS_7impl_IDEPNS_16impl_CexpressionE
	.type	_ZN2kc32impl_idCexpression_IdCexpressionC1EPNS_7impl_IDEPNS_16impl_CexpressionE,@function
_ZN2kc32impl_idCexpression_IdCexpressionC1EPNS_7impl_IDEPNS_16impl_CexpressionE = _ZN2kc32impl_idCexpression_IdCexpressionC2EPNS_7impl_IDEPNS_16impl_CexpressionE
	.globl	_ZN2kc11impl_CtextsC1EPNS_10impl_CtextEPS0_
	.type	_ZN2kc11impl_CtextsC1EPNS_10impl_CtextEPS0_,@function
_ZN2kc11impl_CtextsC1EPNS_10impl_CtextEPS0_ = _ZN2kc11impl_CtextsC2EPNS_10impl_CtextEPS0_
	.globl	_ZN2kc17impl_includefilesC1EPNS_16impl_includefileEPS0_
	.type	_ZN2kc17impl_includefilesC1EPNS_16impl_includefileEPS0_,@function
_ZN2kc17impl_includefilesC1EPNS_16impl_includefileEPS0_ = _ZN2kc17impl_includefilesC2EPNS_16impl_includefileEPS0_
	.globl	_ZN2kc28impl_includefile_IncludeFileC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc28impl_includefile_IncludeFileC1EPNS_20impl_casestring__StrE,@function
_ZN2kc28impl_includefile_IncludeFileC1EPNS_20impl_casestring__StrE = _ZN2kc28impl_includefile_IncludeFileC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc24impl_includedeclarationsC1EPNS_23impl_includedeclarationEPS0_
	.type	_ZN2kc24impl_includedeclarationsC1EPNS_23impl_includedeclarationEPS0_,@function
_ZN2kc24impl_includedeclarationsC1EPNS_23impl_includedeclarationEPS0_ = _ZN2kc24impl_includedeclarationsC2EPNS_23impl_includedeclarationEPS0_
	.globl	_ZN2kc42impl_includedeclaration_IncludeDeclarationC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc42impl_includedeclaration_IncludeDeclarationC1EPNS_20impl_casestring__StrE,@function
_ZN2kc42impl_includedeclaration_IncludeDeclarationC1EPNS_20impl_casestring__StrE = _ZN2kc42impl_includedeclaration_IncludeDeclarationC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc19impl_rwdeclarationsC1EPNS_18impl_rwdeclarationEPS0_
	.type	_ZN2kc19impl_rwdeclarationsC1EPNS_18impl_rwdeclarationEPS0_,@function
_ZN2kc19impl_rwdeclarationsC1EPNS_18impl_rwdeclarationEPS0_ = _ZN2kc19impl_rwdeclarationsC2EPNS_18impl_rwdeclarationEPS0_
	.globl	_ZN2kc32impl_rwdeclaration_RwDeclarationC1EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE
	.type	_ZN2kc32impl_rwdeclaration_RwDeclarationC1EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE,@function
_ZN2kc32impl_rwdeclaration_RwDeclarationC1EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE = _ZN2kc32impl_rwdeclaration_RwDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_rewriteclausesE
	.globl	_ZN2kc19impl_rewriteclausesC1EPNS_18impl_rewriteclauseEPS0_
	.type	_ZN2kc19impl_rewriteclausesC1EPNS_18impl_rewriteclauseEPS0_,@function
_ZN2kc19impl_rewriteclausesC1EPNS_18impl_rewriteclauseEPS0_ = _ZN2kc19impl_rewriteclausesC2EPNS_18impl_rewriteclauseEPS0_
	.globl	_ZN2kc32impl_rewriteclause_RewriteClauseC1EPNS_14impl_viewnamesEPNS_9impl_termE
	.type	_ZN2kc32impl_rewriteclause_RewriteClauseC1EPNS_14impl_viewnamesEPNS_9impl_termE,@function
_ZN2kc32impl_rewriteclause_RewriteClauseC1EPNS_14impl_viewnamesEPNS_9impl_termE = _ZN2kc32impl_rewriteclause_RewriteClauseC2EPNS_14impl_viewnamesEPNS_9impl_termE
	.globl	_ZN2kc18impl_patternchainsC1EPNS_17impl_patternchainEPS0_
	.type	_ZN2kc18impl_patternchainsC1EPNS_17impl_patternchainEPS0_,@function
_ZN2kc18impl_patternchainsC1EPNS_17impl_patternchainEPS0_ = _ZN2kc18impl_patternchainsC2EPNS_17impl_patternchainEPS0_
	.globl	_ZN2kc17impl_patternchainC1EPNS_21impl_patternchainitemEPS0_
	.type	_ZN2kc17impl_patternchainC1EPNS_21impl_patternchainitemEPS0_,@function
_ZN2kc17impl_patternchainC1EPNS_21impl_patternchainitemEPS0_ = _ZN2kc17impl_patternchainC2EPNS_21impl_patternchainitemEPS0_
	.globl	_ZN2kc20impl_outmostpatternsC1EPNS_19impl_outmostpatternEPS0_
	.type	_ZN2kc20impl_outmostpatternsC1EPNS_19impl_outmostpatternEPS0_,@function
_ZN2kc20impl_outmostpatternsC1EPNS_19impl_outmostpatternEPS0_ = _ZN2kc20impl_outmostpatternsC2EPNS_19impl_outmostpatternEPS0_
	.globl	_ZN2kc46impl_patternchainitem_PatternchainitemDollaridC1EPNS_7impl_IDE
	.type	_ZN2kc46impl_patternchainitem_PatternchainitemDollaridC1EPNS_7impl_IDE,@function
_ZN2kc46impl_patternchainitem_PatternchainitemDollaridC1EPNS_7impl_IDE = _ZN2kc46impl_patternchainitem_PatternchainitemDollaridC2EPNS_7impl_IDE
	.globl	_ZN2kc43impl_patternchainitem_PatternchainitemGroupC1EPNS_18impl_patternchainsE
	.type	_ZN2kc43impl_patternchainitem_PatternchainitemGroupC1EPNS_18impl_patternchainsE,@function
_ZN2kc43impl_patternchainitem_PatternchainitemGroupC1EPNS_18impl_patternchainsE = _ZN2kc43impl_patternchainitem_PatternchainitemGroupC2EPNS_18impl_patternchainsE
	.globl	_ZN2kc45impl_patternchainitem_PatternchainitemOutmostC1EPNS_19impl_outmostpatternE
	.type	_ZN2kc45impl_patternchainitem_PatternchainitemOutmostC1EPNS_19impl_outmostpatternE,@function
_ZN2kc45impl_patternchainitem_PatternchainitemOutmostC1EPNS_19impl_outmostpatternE = _ZN2kc45impl_patternchainitem_PatternchainitemOutmostC2EPNS_19impl_outmostpatternE
	.globl	_ZN2kc29impl_outmostpattern_OPDefaultC1EPNS_16impl_CexpressionE
	.type	_ZN2kc29impl_outmostpattern_OPDefaultC1EPNS_16impl_CexpressionE,@function
_ZN2kc29impl_outmostpattern_OPDefaultC1EPNS_16impl_CexpressionE = _ZN2kc29impl_outmostpattern_OPDefaultC2EPNS_16impl_CexpressionE
	.globl	_ZN2kc30impl_outmostpattern_OPWildcardC1EPNS_16impl_CexpressionE
	.type	_ZN2kc30impl_outmostpattern_OPWildcardC1EPNS_16impl_CexpressionE,@function
_ZN2kc30impl_outmostpattern_OPWildcardC1EPNS_16impl_CexpressionE = _ZN2kc30impl_outmostpattern_OPWildcardC2EPNS_16impl_CexpressionE
	.globl	_ZN2kc37impl_outmostpattern_OPNonLeafVariableC1EPNS_7impl_IDEPNS_19impl_outmostpatternE
	.type	_ZN2kc37impl_outmostpattern_OPNonLeafVariableC1EPNS_7impl_IDEPNS_19impl_outmostpatternE,@function
_ZN2kc37impl_outmostpattern_OPNonLeafVariableC1EPNS_7impl_IDEPNS_19impl_outmostpatternE = _ZN2kc37impl_outmostpattern_OPNonLeafVariableC2EPNS_7impl_IDEPNS_19impl_outmostpatternE
	.globl	_ZN2kc30impl_outmostpattern_OPOperatorC1EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE
	.type	_ZN2kc30impl_outmostpattern_OPOperatorC1EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE,@function
_ZN2kc30impl_outmostpattern_OPOperatorC1EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE = _ZN2kc30impl_outmostpattern_OPOperatorC2EPNS_7impl_IDEPNS_13impl_patternsEPNS_16impl_CexpressionE
	.globl	_ZN2kc38impl_outmostpattern_OPOperatorWildcardC1EPNS_7impl_IDEPNS_16impl_CexpressionE
	.type	_ZN2kc38impl_outmostpattern_OPOperatorWildcardC1EPNS_7impl_IDEPNS_16impl_CexpressionE,@function
_ZN2kc38impl_outmostpattern_OPOperatorWildcardC1EPNS_7impl_IDEPNS_16impl_CexpressionE = _ZN2kc38impl_outmostpattern_OPOperatorWildcardC2EPNS_7impl_IDEPNS_16impl_CexpressionE
	.globl	_ZN2kc24impl_pattern_PIntLiteralC1EPNS_8impl_INTE
	.type	_ZN2kc24impl_pattern_PIntLiteralC1EPNS_8impl_INTE,@function
_ZN2kc24impl_pattern_PIntLiteralC1EPNS_8impl_INTE = _ZN2kc24impl_pattern_PIntLiteralC2EPNS_8impl_INTE
	.globl	_ZN2kc27impl_pattern_PStringLiteralC1EPNS_18impl_CexpressionDQE
	.type	_ZN2kc27impl_pattern_PStringLiteralC1EPNS_18impl_CexpressionDQE,@function
_ZN2kc27impl_pattern_PStringLiteralC1EPNS_18impl_CexpressionDQE = _ZN2kc27impl_pattern_PStringLiteralC2EPNS_18impl_CexpressionDQE
	.globl	_ZN2kc22impl_pattern_PWildcardC1Ev
	.type	_ZN2kc22impl_pattern_PWildcardC1Ev,@function
_ZN2kc22impl_pattern_PWildcardC1Ev = _ZN2kc22impl_pattern_PWildcardC2Ev
	.globl	_ZN2kc29impl_pattern_PNonLeafVariableC1EPNS_7impl_IDEPNS_12impl_patternE
	.type	_ZN2kc29impl_pattern_PNonLeafVariableC1EPNS_7impl_IDEPNS_12impl_patternE,@function
_ZN2kc29impl_pattern_PNonLeafVariableC1EPNS_7impl_IDEPNS_12impl_patternE = _ZN2kc29impl_pattern_PNonLeafVariableC2EPNS_7impl_IDEPNS_12impl_patternE
	.globl	_ZN2kc22impl_pattern_POperatorC1EPNS_7impl_IDEPNS_13impl_patternsE
	.type	_ZN2kc22impl_pattern_POperatorC1EPNS_7impl_IDEPNS_13impl_patternsE,@function
_ZN2kc22impl_pattern_POperatorC1EPNS_7impl_IDEPNS_13impl_patternsE = _ZN2kc22impl_pattern_POperatorC2EPNS_7impl_IDEPNS_13impl_patternsE
	.globl	_ZN2kc22impl_pattern_PVariableC1EPNS_7impl_IDE
	.type	_ZN2kc22impl_pattern_PVariableC1EPNS_7impl_IDE,@function
_ZN2kc22impl_pattern_PVariableC1EPNS_7impl_IDE = _ZN2kc22impl_pattern_PVariableC2EPNS_7impl_IDE
	.globl	_ZN2kc13impl_patternsC1EPNS_12impl_patternEPS0_
	.type	_ZN2kc13impl_patternsC1EPNS_12impl_patternEPS0_,@function
_ZN2kc13impl_patternsC1EPNS_12impl_patternEPS0_ = _ZN2kc13impl_patternsC2EPNS_12impl_patternEPS0_
	.globl	_ZN2kc21impl_term_TIntLiteralC1EPNS_8impl_INTE
	.type	_ZN2kc21impl_term_TIntLiteralC1EPNS_8impl_INTE,@function
_ZN2kc21impl_term_TIntLiteralC1EPNS_8impl_INTE = _ZN2kc21impl_term_TIntLiteralC2EPNS_8impl_INTE
	.globl	_ZN2kc24impl_term_TStringLiteralC1EPNS_18impl_CexpressionDQE
	.type	_ZN2kc24impl_term_TStringLiteralC1EPNS_18impl_CexpressionDQE,@function
_ZN2kc24impl_term_TStringLiteralC1EPNS_18impl_CexpressionDQE = _ZN2kc24impl_term_TStringLiteralC2EPNS_18impl_CexpressionDQE
	.globl	_ZN2kc16impl_term_TCTermC1EPNS_18impl_CexpressionSQE
	.type	_ZN2kc16impl_term_TCTermC1EPNS_18impl_CexpressionSQE,@function
_ZN2kc16impl_term_TCTermC1EPNS_18impl_CexpressionSQE = _ZN2kc16impl_term_TCTermC2EPNS_18impl_CexpressionSQE
	.globl	_ZN2kc23impl_term_TMemberVarDotC1EPNS_9impl_termEPNS_7impl_IDE
	.type	_ZN2kc23impl_term_TMemberVarDotC1EPNS_9impl_termEPNS_7impl_IDE,@function
_ZN2kc23impl_term_TMemberVarDotC1EPNS_9impl_termEPNS_7impl_IDE = _ZN2kc23impl_term_TMemberVarDotC2EPNS_9impl_termEPNS_7impl_IDE
	.globl	_ZN2kc20impl_term_TMemberVarC1EPNS_9impl_termEPNS_7impl_IDE
	.type	_ZN2kc20impl_term_TMemberVarC1EPNS_9impl_termEPNS_7impl_IDE,@function
_ZN2kc20impl_term_TMemberVarC1EPNS_9impl_termEPNS_7impl_IDE = _ZN2kc20impl_term_TMemberVarC2EPNS_9impl_termEPNS_7impl_IDE
	.globl	_ZN2kc20impl_term_TMethodDotC1EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.type	_ZN2kc20impl_term_TMethodDotC1EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE,@function
_ZN2kc20impl_term_TMethodDotC1EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE = _ZN2kc20impl_term_TMethodDotC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.globl	_ZN2kc17impl_term_TMethodC1EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.type	_ZN2kc17impl_term_TMethodC1EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE,@function
_ZN2kc17impl_term_TMethodC1EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE = _ZN2kc17impl_term_TMethodC2EPNS_9impl_termEPNS_7impl_IDEPNS_10impl_termsE
	.globl	_ZN2kc19impl_term_TOperatorC1EPNS_7impl_IDEPNS_10impl_termsE
	.type	_ZN2kc19impl_term_TOperatorC1EPNS_7impl_IDEPNS_10impl_termsE,@function
_ZN2kc19impl_term_TOperatorC1EPNS_7impl_IDEPNS_10impl_termsE = _ZN2kc19impl_term_TOperatorC2EPNS_7impl_IDEPNS_10impl_termsE
	.globl	_ZN2kc19impl_term_TVariableC1EPNS_7impl_IDE
	.type	_ZN2kc19impl_term_TVariableC1EPNS_7impl_IDE,@function
_ZN2kc19impl_term_TVariableC1EPNS_7impl_IDE = _ZN2kc19impl_term_TVariableC2EPNS_7impl_IDE
	.globl	_ZN2kc10impl_termsC1EPNS_9impl_termEPS0_
	.type	_ZN2kc10impl_termsC1EPNS_9impl_termEPS0_,@function
_ZN2kc10impl_termsC1EPNS_9impl_termEPS0_ = _ZN2kc10impl_termsC2EPNS_9impl_termEPS0_
	.globl	_ZN2kc12impl_fnfilesC1EPNS_11impl_fnfileEPS0_
	.type	_ZN2kc12impl_fnfilesC1EPNS_11impl_fnfileEPS0_,@function
_ZN2kc12impl_fnfilesC1EPNS_11impl_fnfileEPS0_ = _ZN2kc12impl_fnfilesC2EPNS_11impl_fnfileEPS0_
	.globl	_ZN2kc18impl_fnfile_FnFileC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc18impl_fnfile_FnFileC1EPNS_20impl_casestring__StrE,@function
_ZN2kc18impl_fnfile_FnFileC1EPNS_20impl_casestring__StrE = _ZN2kc18impl_fnfile_FnFileC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc19impl_fndeclarationsC1EPNS_18impl_fndeclarationEPS0_
	.type	_ZN2kc19impl_fndeclarationsC1EPNS_18impl_fndeclarationEPS0_,@function
_ZN2kc19impl_fndeclarationsC1EPNS_18impl_fndeclarationEPS0_ = _ZN2kc19impl_fndeclarationsC2EPNS_18impl_fndeclarationEPS0_
	.globl	_ZN2kc38impl_fndeclaration_AcMemberDeclarationC1EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE
	.type	_ZN2kc38impl_fndeclaration_AcMemberDeclarationC1EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE,@function
_ZN2kc38impl_fndeclaration_AcMemberDeclarationC1EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE = _ZN2kc38impl_fndeclaration_AcMemberDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionEPNS_12impl_fnclassE
	.globl	_ZN2kc34impl_fndeclaration_FnAcDeclarationC1EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE
	.type	_ZN2kc34impl_fndeclaration_FnAcDeclarationC1EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE,@function
_ZN2kc34impl_fndeclaration_FnAcDeclarationC1EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE = _ZN2kc34impl_fndeclaration_FnAcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE
	.globl	_ZN2kc27impl_fnclass_ConvOperatorFnC1Ev
	.type	_ZN2kc27impl_fnclass_ConvOperatorFnC1Ev,@function
_ZN2kc27impl_fnclass_ConvOperatorFnC1Ev = _ZN2kc27impl_fnclass_ConvOperatorFnC2Ev
	.globl	_ZN2kc25impl_fnclass_DestructorFnC1Ev
	.type	_ZN2kc25impl_fnclass_DestructorFnC1Ev,@function
_ZN2kc25impl_fnclass_DestructorFnC1Ev = _ZN2kc25impl_fnclass_DestructorFnC2Ev
	.globl	_ZN2kc26impl_fnclass_ConstructorFnC1Ev
	.type	_ZN2kc26impl_fnclass_ConstructorFnC1Ev,@function
_ZN2kc26impl_fnclass_ConstructorFnC1Ev = _ZN2kc26impl_fnclass_ConstructorFnC2Ev
	.globl	_ZN2kc21impl_fnclass_MemberFnC1Ev
	.type	_ZN2kc21impl_fnclass_MemberFnC1Ev,@function
_ZN2kc21impl_fnclass_MemberFnC1Ev = _ZN2kc21impl_fnclass_MemberFnC2Ev
	.globl	_ZN2kc21impl_fnclass_StaticFnC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc21impl_fnclass_StaticFnC1EPNS_20impl_casestring__StrE,@function
_ZN2kc21impl_fnclass_StaticFnC1EPNS_20impl_casestring__StrE = _ZN2kc21impl_fnclass_StaticFnC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc21impl_fnclass_GlobalFnC1Ev
	.type	_ZN2kc21impl_fnclass_GlobalFnC1Ev,@function
_ZN2kc21impl_fnclass_GlobalFnC1Ev = _ZN2kc21impl_fnclass_GlobalFnC2Ev
	.globl	_ZN2kc10impl_CtextC1EPNS_15impl_Ctext_elemEPS0_
	.type	_ZN2kc10impl_CtextC1EPNS_15impl_Ctext_elemEPS0_,@function
_ZN2kc10impl_CtextC1EPNS_15impl_Ctext_elemEPS0_ = _ZN2kc10impl_CtextC2EPNS_15impl_Ctext_elemEPS0_
	.globl	_ZN2kc35impl_Ctext_elem_CTextWithexpressionC1EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE
	.type	_ZN2kc35impl_Ctext_elem_CTextWithexpressionC1EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE,@function
_ZN2kc35impl_Ctext_elem_CTextWithexpressionC1EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE = _ZN2kc35impl_Ctext_elem_CTextWithexpressionC2EPNS_20impl_withexpressionsEPNS_14impl_withcasesEPNS_16impl_contextinfoE
	.globl	_ZN2kc38impl_Ctext_elem_CTextForeachexpressionC1EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE
	.type	_ZN2kc38impl_Ctext_elem_CTextForeachexpressionC1EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE,@function
_ZN2kc38impl_Ctext_elem_CTextForeachexpressionC1EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE = _ZN2kc38impl_Ctext_elem_CTextForeachexpressionC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextEPNS_18impl_foreach_afterE
	.globl	_ZN2kc26impl_Ctext_elem_CTextCbodyC1EPNS_10impl_CtextE
	.type	_ZN2kc26impl_Ctext_elem_CTextCbodyC1EPNS_10impl_CtextE,@function
_ZN2kc26impl_Ctext_elem_CTextCbodyC1EPNS_10impl_CtextE = _ZN2kc26impl_Ctext_elem_CTextCbodyC2EPNS_10impl_CtextE
	.globl	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQC1EPNS_18impl_CexpressionSQE
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQC1EPNS_18impl_CexpressionSQE,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionSQC1EPNS_18impl_CexpressionSQE = _ZN2kc34impl_Ctext_elem_CTextCexpressionSQC2EPNS_18impl_CexpressionSQE
	.globl	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQC1EPNS_18impl_CexpressionDQE
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQC1EPNS_18impl_CexpressionDQE,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionDQC1EPNS_18impl_CexpressionDQE = _ZN2kc34impl_Ctext_elem_CTextCexpressionDQC2EPNS_18impl_CexpressionDQE
	.globl	_ZN2kc23impl_Ctext_elem_CTextNlC1EPNS_17impl_integer__IntE
	.type	_ZN2kc23impl_Ctext_elem_CTextNlC1EPNS_17impl_integer__IntE,@function
_ZN2kc23impl_Ctext_elem_CTextNlC1EPNS_17impl_integer__IntE = _ZN2kc23impl_Ctext_elem_CTextNlC2EPNS_17impl_integer__IntE
	.globl	_ZN2kc30impl_Ctext_elem_CTextDollarVarC1EPNS_8impl_INTE
	.type	_ZN2kc30impl_Ctext_elem_CTextDollarVarC1EPNS_8impl_INTE,@function
_ZN2kc30impl_Ctext_elem_CTextDollarVarC1EPNS_8impl_INTE = _ZN2kc30impl_Ctext_elem_CTextDollarVarC2EPNS_8impl_INTE
	.globl	_ZN2kc25impl_Ctext_elem_CTextLineC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc25impl_Ctext_elem_CTextLineC1EPNS_20impl_casestring__StrE,@function
_ZN2kc25impl_Ctext_elem_CTextLineC1EPNS_20impl_casestring__StrE = _ZN2kc25impl_Ctext_elem_CTextLineC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc31impl_foreach_after_ForeachAfterC1EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE
	.type	_ZN2kc31impl_foreach_after_ForeachAfterC1EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE,@function
_ZN2kc31impl_foreach_after_ForeachAfterC1EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE = _ZN2kc31impl_foreach_after_ForeachAfterC2EPNS_17impl_patternchainEPNS_19impl_idCexpressionsEPNS_20impl_withexpressionsEPNS_10impl_CtextE
	.globl	_ZN2kc33impl_foreach_after_NoForeachAfterC1Ev
	.type	_ZN2kc33impl_foreach_after_NoForeachAfterC1Ev,@function
_ZN2kc33impl_foreach_after_NoForeachAfterC1Ev = _ZN2kc33impl_foreach_after_NoForeachAfterC2Ev
	.globl	_ZN2kc36impl_contextinfo_NotInForeachContextC1Ev
	.type	_ZN2kc36impl_contextinfo_NotInForeachContextC1Ev,@function
_ZN2kc36impl_contextinfo_NotInForeachContextC1Ev = _ZN2kc36impl_contextinfo_NotInForeachContextC2Ev
	.globl	_ZN2kc33impl_contextinfo_InForeachContextC1EPNS_17impl_patternchainE
	.type	_ZN2kc33impl_contextinfo_InForeachContextC1EPNS_17impl_patternchainE,@function
_ZN2kc33impl_contextinfo_InForeachContextC1EPNS_17impl_patternchainE = _ZN2kc33impl_contextinfo_InForeachContextC2EPNS_17impl_patternchainE
	.globl	_ZN2kc20impl_withexpressionsC1EPNS_19impl_withexpressionEPS0_
	.type	_ZN2kc20impl_withexpressionsC1EPNS_19impl_withexpressionEPS0_,@function
_ZN2kc20impl_withexpressionsC1EPNS_19impl_withexpressionEPS0_ = _ZN2kc20impl_withexpressionsC2EPNS_19impl_withexpressionEPS0_
	.globl	_ZN2kc33impl_withexpression_WECexpressionC1EPNS_16impl_CexpressionE
	.type	_ZN2kc33impl_withexpression_WECexpressionC1EPNS_16impl_CexpressionE,@function
_ZN2kc33impl_withexpression_WECexpressionC1EPNS_16impl_CexpressionE = _ZN2kc33impl_withexpression_WECexpressionC2EPNS_16impl_CexpressionE
	.globl	_ZN2kc30impl_withexpression_WEVariableC1EPNS_7impl_IDE
	.type	_ZN2kc30impl_withexpression_WEVariableC1EPNS_7impl_IDE,@function
_ZN2kc30impl_withexpression_WEVariableC1EPNS_7impl_IDE = _ZN2kc30impl_withexpression_WEVariableC2EPNS_7impl_IDE
	.globl	_ZN2kc14impl_withcasesC1EPNS_13impl_withcaseEPS0_
	.type	_ZN2kc14impl_withcasesC1EPNS_13impl_withcaseEPS0_,@function
_ZN2kc14impl_withcasesC1EPNS_13impl_withcaseEPS0_ = _ZN2kc14impl_withcasesC2EPNS_13impl_withcaseEPS0_
	.globl	_ZN2kc22impl_withcase_WithcaseC1EPNS_18impl_patternchainsEPNS_10impl_CtextE
	.type	_ZN2kc22impl_withcase_WithcaseC1EPNS_18impl_patternchainsEPNS_10impl_CtextE,@function
_ZN2kc22impl_withcase_WithcaseC1EPNS_18impl_patternchainsEPNS_10impl_CtextE = _ZN2kc22impl_withcase_WithcaseC2EPNS_18impl_patternchainsEPNS_10impl_CtextE
	.globl	_ZN2kc24impl_unparsedeclarationsC1EPNS_23impl_unparsedeclarationEPS0_
	.type	_ZN2kc24impl_unparsedeclarationsC1EPNS_23impl_unparsedeclarationEPS0_,@function
_ZN2kc24impl_unparsedeclarationsC1EPNS_23impl_unparsedeclarationEPS0_ = _ZN2kc24impl_unparsedeclarationsC2EPNS_23impl_unparsedeclarationEPS0_
	.globl	_ZN2kc42impl_unparsedeclaration_UnparseDeclarationC1EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE
	.type	_ZN2kc42impl_unparsedeclaration_UnparseDeclarationC1EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE,@function
_ZN2kc42impl_unparsedeclaration_UnparseDeclarationC1EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE = _ZN2kc42impl_unparsedeclaration_UnparseDeclarationC2EPNS_20impl_outmostpatternsEPNS_19impl_unparseclausesE
	.globl	_ZN2kc19impl_unparseclausesC1EPNS_18impl_unparseclauseEPS0_
	.type	_ZN2kc19impl_unparseclausesC1EPNS_18impl_unparseclauseEPS0_,@function
_ZN2kc19impl_unparseclausesC1EPNS_18impl_unparseclauseEPS0_ = _ZN2kc19impl_unparseclausesC2EPNS_18impl_unparseclauseEPS0_
	.globl	_ZN2kc32impl_unparseclause_UnparseClauseC1EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE
	.type	_ZN2kc32impl_unparseclause_UnparseClauseC1EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE,@function
_ZN2kc32impl_unparseclause_UnparseClauseC1EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE = _ZN2kc32impl_unparseclause_UnparseClauseC2EPNS_14impl_viewnamesEPNS_17impl_unparseitemsE
	.globl	_ZN2kc14impl_viewnamesC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc14impl_viewnamesC1EPNS_7impl_IDEPS0_,@function
_ZN2kc14impl_viewnamesC1EPNS_7impl_IDEPS0_ = _ZN2kc14impl_viewnamesC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc17impl_unparseitemsC1EPNS_16impl_unparseitemEPS0_
	.type	_ZN2kc17impl_unparseitemsC1EPNS_16impl_unparseitemEPS0_,@function
_ZN2kc17impl_unparseitemsC1EPNS_16impl_unparseitemEPS0_ = _ZN2kc17impl_unparseitemsC2EPNS_16impl_unparseitemEPS0_
	.globl	_ZN2kc29impl_unparseitem_UViewVarDeclC1EPNS_7impl_IDES2_PNS_16impl_CexpressionE
	.type	_ZN2kc29impl_unparseitem_UViewVarDeclC1EPNS_7impl_IDES2_PNS_16impl_CexpressionE,@function
_ZN2kc29impl_unparseitem_UViewVarDeclC1EPNS_7impl_IDES2_PNS_16impl_CexpressionE = _ZN2kc29impl_unparseitem_UViewVarDeclC2EPNS_7impl_IDES2_PNS_16impl_CexpressionE
	.globl	_ZN2kc24impl_unparseitem_UnpBodyC1EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE
	.type	_ZN2kc24impl_unparseitem_UnpBodyC1EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE,@function
_ZN2kc24impl_unparseitem_UnpBodyC1EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE = _ZN2kc24impl_unparseitem_UnpBodyC2EPNS_19impl_languageoptionEPNS_17impl_unparseitemsE
	.globl	_ZN2kc25impl_unparseitem_UnpCtextC1EPNS_19impl_languageoptionEPNS_10impl_CtextE
	.type	_ZN2kc25impl_unparseitem_UnpCtextC1EPNS_19impl_languageoptionEPNS_10impl_CtextE,@function
_ZN2kc25impl_unparseitem_UnpCtextC1EPNS_19impl_languageoptionEPNS_10impl_CtextE = _ZN2kc25impl_unparseitem_UnpCtextC2EPNS_19impl_languageoptionEPNS_10impl_CtextE
	.globl	_ZN2kc27impl_unparseitem_UnpSubexprC1EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE
	.type	_ZN2kc27impl_unparseitem_UnpSubexprC1EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE,@function
_ZN2kc27impl_unparseitem_UnpSubexprC1EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE = _ZN2kc27impl_unparseitem_UnpSubexprC2EPNS_19impl_languageoptionEPNS_15impl_unpsubtermEPNS_19impl_viewnameoptionE
	.globl	_ZN2kc23impl_unparseitem_UnpStrC1EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE
	.type	_ZN2kc23impl_unparseitem_UnpStrC1EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE,@function
_ZN2kc23impl_unparseitem_UnpStrC1EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE = _ZN2kc23impl_unparseitem_UnpStrC2EPNS_19impl_languageoptionEPNS_18impl_CexpressionDQEPNS_19impl_viewnameoptionE
	.globl	_ZN2kc33impl_unpsubterm_UnpCastedVariableC1EPNS_7impl_IDES2_
	.type	_ZN2kc33impl_unpsubterm_UnpCastedVariableC1EPNS_7impl_IDES2_,@function
_ZN2kc33impl_unpsubterm_UnpCastedVariableC1EPNS_7impl_IDES2_ = _ZN2kc33impl_unpsubterm_UnpCastedVariableC2EPNS_7impl_IDES2_
	.globl	_ZN2kc32impl_unpsubterm_UnpDollarvarAttrC1EPNS_8impl_INTEPNS_18impl_unpattributesE
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarAttrC1EPNS_8impl_INTEPNS_18impl_unpattributesE,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarAttrC1EPNS_8impl_INTEPNS_18impl_unpattributesE = _ZN2kc32impl_unpsubterm_UnpDollarvarAttrC2EPNS_8impl_INTEPNS_18impl_unpattributesE
	.globl	_ZN2kc26impl_unpsubterm_UnpSubAttrC1EPNS_7impl_IDEPNS_18impl_unpattributesE
	.type	_ZN2kc26impl_unpsubterm_UnpSubAttrC1EPNS_7impl_IDEPNS_18impl_unpattributesE,@function
_ZN2kc26impl_unpsubterm_UnpSubAttrC1EPNS_7impl_IDEPNS_18impl_unpattributesE = _ZN2kc26impl_unpsubterm_UnpSubAttrC2EPNS_7impl_IDEPNS_18impl_unpattributesE
	.globl	_ZN2kc32impl_unpsubterm_UnpDollarvarTermC1EPNS_8impl_INTE
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarTermC1EPNS_8impl_INTE,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarTermC1EPNS_8impl_INTE = _ZN2kc32impl_unpsubterm_UnpDollarvarTermC2EPNS_8impl_INTE
	.globl	_ZN2kc26impl_unpsubterm_UnpSubTermC1EPNS_7impl_IDE
	.type	_ZN2kc26impl_unpsubterm_UnpSubTermC1EPNS_7impl_IDE,@function
_ZN2kc26impl_unpsubterm_UnpSubTermC1EPNS_7impl_IDE = _ZN2kc26impl_unpsubterm_UnpSubTermC2EPNS_7impl_IDE
	.globl	_ZN2kc18impl_unpattributesC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc18impl_unpattributesC1EPNS_7impl_IDEPS0_,@function
_ZN2kc18impl_unpattributesC1EPNS_7impl_IDEPS0_ = _ZN2kc18impl_unpattributesC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc31impl_viewnameoption_YesViewnameC1EPNS_7impl_IDE
	.type	_ZN2kc31impl_viewnameoption_YesViewnameC1EPNS_7impl_IDE,@function
_ZN2kc31impl_viewnameoption_YesViewnameC1EPNS_7impl_IDE = _ZN2kc31impl_viewnameoption_YesViewnameC2EPNS_7impl_IDE
	.globl	_ZN2kc30impl_viewnameoption_NoViewnameC1Ev
	.type	_ZN2kc30impl_viewnameoption_NoViewnameC1Ev,@function
_ZN2kc30impl_viewnameoption_NoViewnameC1Ev = _ZN2kc30impl_viewnameoption_NoViewnameC2Ev
	.globl	_ZN2kc32impl_languageoption_LanguageListC1EPNS_18impl_languagenamesE
	.type	_ZN2kc32impl_languageoption_LanguageListC1EPNS_18impl_languagenamesE,@function
_ZN2kc32impl_languageoption_LanguageListC1EPNS_18impl_languagenamesE = _ZN2kc32impl_languageoption_LanguageListC2EPNS_18impl_languagenamesE
	.globl	_ZN2kc34impl_languageoption_NoLanguagenameC1Ev
	.type	_ZN2kc34impl_languageoption_NoLanguagenameC1Ev,@function
_ZN2kc34impl_languageoption_NoLanguagenameC1Ev = _ZN2kc34impl_languageoption_NoLanguagenameC2Ev
	.globl	_ZN2kc18impl_languagenamesC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc18impl_languagenamesC1EPNS_7impl_IDEPS0_,@function
_ZN2kc18impl_languagenamesC1EPNS_7impl_IDEPS0_ = _ZN2kc18impl_languagenamesC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc27impl_fileline_PosNoFileLineC1Ev
	.type	_ZN2kc27impl_fileline_PosNoFileLineC1Ev,@function
_ZN2kc27impl_fileline_PosNoFileLineC1Ev = _ZN2kc27impl_fileline_PosNoFileLineC2Ev
	.globl	_ZN2kc24impl_fileline_NoFileLineC1Ev
	.type	_ZN2kc24impl_fileline_NoFileLineC1Ev,@function
_ZN2kc24impl_fileline_NoFileLineC1Ev = _ZN2kc24impl_fileline_NoFileLineC2Ev
	.globl	_ZN2kc27impl_scopetypefilelinestackC1EPNS_22impl_scopetypefilelineEPS0_
	.type	_ZN2kc27impl_scopetypefilelinestackC1EPNS_22impl_scopetypefilelineEPS0_,@function
_ZN2kc27impl_scopetypefilelinestackC1EPNS_22impl_scopetypefilelineEPS0_ = _ZN2kc27impl_scopetypefilelinestackC2EPNS_22impl_scopetypefilelineEPS0_
	.globl	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC1EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_
	.type	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC1EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_,@function
_ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC1EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_ = _ZN2kc40impl_scopetypefileline_ScopeTypeFileLineC2EPNS_17impl_integer__IntEPNS_11impl_IDtypeEPNS_20impl_casestring__StrES2_
	.globl	_ZN2kc26impl_IDtype_ITLanguageNameC1EPNS_17impl_integer__IntE
	.type	_ZN2kc26impl_IDtype_ITLanguageNameC1EPNS_17impl_integer__IntE,@function
_ZN2kc26impl_IDtype_ITLanguageNameC1EPNS_17impl_integer__IntE = _ZN2kc26impl_IDtype_ITLanguageNameC2EPNS_17impl_integer__IntE
	.globl	_ZN2kc29impl_IDtype_ITPatternVariableC1EPNS_7impl_IDEPNS_17impl_integer__IntE
	.type	_ZN2kc29impl_IDtype_ITPatternVariableC1EPNS_7impl_IDEPNS_17impl_integer__IntE,@function
_ZN2kc29impl_IDtype_ITPatternVariableC1EPNS_7impl_IDEPNS_17impl_integer__IntE = _ZN2kc29impl_IDtype_ITPatternVariableC2EPNS_7impl_IDEPNS_17impl_integer__IntE
	.globl	_ZN2kc26impl_IDtype_ITUserFunctionC1EPNS_12impl_fnclassE
	.type	_ZN2kc26impl_IDtype_ITUserFunctionC1EPNS_12impl_fnclassE,@function
_ZN2kc26impl_IDtype_ITUserFunctionC1EPNS_12impl_fnclassE = _ZN2kc26impl_IDtype_ITUserFunctionC2EPNS_12impl_fnclassE
	.globl	_ZN2kc23impl_IDtype_ITUserRViewC1Ev
	.type	_ZN2kc23impl_IDtype_ITUserRViewC1Ev,@function
_ZN2kc23impl_IDtype_ITUserRViewC1Ev = _ZN2kc23impl_IDtype_ITUserRViewC2Ev
	.globl	_ZN2kc29impl_IDtype_ITPredefinedRViewC1Ev
	.type	_ZN2kc29impl_IDtype_ITPredefinedRViewC1Ev,@function
_ZN2kc29impl_IDtype_ITPredefinedRViewC1Ev = _ZN2kc29impl_IDtype_ITPredefinedRViewC2Ev
	.globl	_ZN2kc22impl_IDtype_ITUViewVarC1Ev
	.type	_ZN2kc22impl_IDtype_ITUViewVarC1Ev,@function
_ZN2kc22impl_IDtype_ITUViewVarC1Ev = _ZN2kc22impl_IDtype_ITUViewVarC2Ev
	.globl	_ZN2kc23impl_IDtype_ITUserUViewC1Ev
	.type	_ZN2kc23impl_IDtype_ITUserUViewC1Ev,@function
_ZN2kc23impl_IDtype_ITUserUViewC1Ev = _ZN2kc23impl_IDtype_ITUserUViewC2Ev
	.globl	_ZN2kc29impl_IDtype_ITPredefinedUViewC1Ev
	.type	_ZN2kc29impl_IDtype_ITPredefinedUViewC1Ev,@function
_ZN2kc29impl_IDtype_ITPredefinedUViewC1Ev = _ZN2kc29impl_IDtype_ITPredefinedUViewC2Ev
	.globl	_ZN2kc26impl_IDtype_ITStorageClassC1Ev
	.type	_ZN2kc26impl_IDtype_ITStorageClassC1Ev,@function
_ZN2kc26impl_IDtype_ITStorageClassC1Ev = _ZN2kc26impl_IDtype_ITStorageClassC2Ev
	.globl	_ZN2kc36impl_IDtype_ITPredefinedStorageClassC1Ev
	.type	_ZN2kc36impl_IDtype_ITPredefinedStorageClassC1Ev,@function
_ZN2kc36impl_IDtype_ITPredefinedStorageClassC1Ev = _ZN2kc36impl_IDtype_ITPredefinedStorageClassC2Ev
	.globl	_ZN2kc26impl_IDtype_ITUserOperatorC1EPNS_16impl_alternativeEPNS_7impl_IDE
	.type	_ZN2kc26impl_IDtype_ITUserOperatorC1EPNS_16impl_alternativeEPNS_7impl_IDE,@function
_ZN2kc26impl_IDtype_ITUserOperatorC1EPNS_16impl_alternativeEPNS_7impl_IDE = _ZN2kc26impl_IDtype_ITUserOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE
	.globl	_ZN2kc32impl_IDtype_ITPredefinedOperatorC1EPNS_16impl_alternativeEPNS_7impl_IDE
	.type	_ZN2kc32impl_IDtype_ITPredefinedOperatorC1EPNS_16impl_alternativeEPNS_7impl_IDE,@function
_ZN2kc32impl_IDtype_ITPredefinedOperatorC1EPNS_16impl_alternativeEPNS_7impl_IDE = _ZN2kc32impl_IDtype_ITPredefinedOperatorC2EPNS_16impl_alternativeEPNS_7impl_IDE
	.globl	_ZN2kc24impl_IDtype_ITUserPhylumC1EPNS_22impl_phylumdeclarationE
	.type	_ZN2kc24impl_IDtype_ITUserPhylumC1EPNS_22impl_phylumdeclarationE,@function
_ZN2kc24impl_IDtype_ITUserPhylumC1EPNS_22impl_phylumdeclarationE = _ZN2kc24impl_IDtype_ITUserPhylumC2EPNS_22impl_phylumdeclarationE
	.globl	_ZN2kc30impl_IDtype_ITPredefinedPhylumC1EPNS_22impl_phylumdeclarationE
	.type	_ZN2kc30impl_IDtype_ITPredefinedPhylumC1EPNS_22impl_phylumdeclarationE,@function
_ZN2kc30impl_IDtype_ITPredefinedPhylumC1EPNS_22impl_phylumdeclarationE = _ZN2kc30impl_IDtype_ITPredefinedPhylumC2EPNS_22impl_phylumdeclarationE
	.globl	_ZN2kc21impl_IDtype_ITUnknownC1Ev
	.type	_ZN2kc21impl_IDtype_ITUnknownC1Ev,@function
_ZN2kc21impl_IDtype_ITUnknownC1Ev = _ZN2kc21impl_IDtype_ITUnknownC2Ev
	.globl	_ZN2kc14impl_operatorsC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc14impl_operatorsC1EPNS_7impl_IDEPS0_,@function
_ZN2kc14impl_operatorsC1EPNS_7impl_IDEPS0_ = _ZN2kc14impl_operatorsC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc10impl_phylaC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc10impl_phylaC1EPNS_7impl_IDEPS0_,@function
_ZN2kc10impl_phylaC1EPNS_7impl_IDEPS0_ = _ZN2kc10impl_phylaC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc14impl_variablesC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc14impl_variablesC1EPNS_7impl_IDEPS0_,@function
_ZN2kc14impl_variablesC1EPNS_7impl_IDEPS0_ = _ZN2kc14impl_variablesC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc33impl_dollarvarstatus_DVDisallowedC1Ev
	.type	_ZN2kc33impl_dollarvarstatus_DVDisallowedC1Ev,@function
_ZN2kc33impl_dollarvarstatus_DVDisallowedC1Ev = _ZN2kc33impl_dollarvarstatus_DVDisallowedC2Ev
	.globl	_ZN2kc30impl_dollarvarstatus_DVAllowedC1Ev
	.type	_ZN2kc30impl_dollarvarstatus_DVAllowedC1Ev,@function
_ZN2kc30impl_dollarvarstatus_DVAllowedC1Ev = _ZN2kc30impl_dollarvarstatus_DVAllowedC2Ev
	.globl	_ZN2kc19impl_tribool_BiggerC1Ev
	.type	_ZN2kc19impl_tribool_BiggerC1Ev,@function
_ZN2kc19impl_tribool_BiggerC1Ev = _ZN2kc19impl_tribool_BiggerC2Ev
	.globl	_ZN2kc20impl_tribool_SmallerC1Ev
	.type	_ZN2kc20impl_tribool_SmallerC1Ev,@function
_ZN2kc20impl_tribool_SmallerC1Ev = _ZN2kc20impl_tribool_SmallerC2Ev
	.globl	_ZN2kc18impl_tribool_EqualC1Ev
	.type	_ZN2kc18impl_tribool_EqualC1Ev,@function
_ZN2kc18impl_tribool_EqualC1Ev = _ZN2kc18impl_tribool_EqualC2Ev
	.globl	_ZN2kc27impl_patternrepresentationsC1EPNS_26impl_patternrepresentationEPS0_
	.type	_ZN2kc27impl_patternrepresentationsC1EPNS_26impl_patternrepresentationEPS0_,@function
_ZN2kc27impl_patternrepresentationsC1EPNS_26impl_patternrepresentationEPS0_ = _ZN2kc27impl_patternrepresentationsC2EPNS_26impl_patternrepresentationEPS0_
	.globl	_ZN2kc26impl_patternrepresentationC1EPNS_31impl_elem_patternrepresentationEPS0_
	.type	_ZN2kc26impl_patternrepresentationC1EPNS_31impl_elem_patternrepresentationEPS0_,@function
_ZN2kc26impl_patternrepresentationC1EPNS_31impl_elem_patternrepresentationEPS0_ = _ZN2kc26impl_patternrepresentationC2EPNS_31impl_elem_patternrepresentationEPS0_
	.globl	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC1EPNS_9impl_pathEPNS_8impl_INTE
	.type	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC1EPNS_9impl_pathEPNS_8impl_INTE,@function
_ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC1EPNS_9impl_pathEPNS_8impl_INTE = _ZN2kc44impl_elem_patternrepresentation_PRIntLiteralC2EPNS_9impl_pathEPNS_8impl_INTE
	.globl	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC1EPNS_9impl_pathEPNS_18impl_CexpressionDQE
	.type	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC1EPNS_9impl_pathEPNS_18impl_CexpressionDQE,@function
_ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC1EPNS_9impl_pathEPNS_18impl_CexpressionDQE = _ZN2kc47impl_elem_patternrepresentation_PRStringLiteralC2EPNS_9impl_pathEPNS_18impl_CexpressionDQE
	.globl	_ZN2kc41impl_elem_patternrepresentation_PRDefaultC1Ev
	.type	_ZN2kc41impl_elem_patternrepresentation_PRDefaultC1Ev,@function
_ZN2kc41impl_elem_patternrepresentation_PRDefaultC1Ev = _ZN2kc41impl_elem_patternrepresentation_PRDefaultC2Ev
	.globl	_ZN2kc42impl_elem_patternrepresentation_PRWildcardC1EPNS_9impl_pathE
	.type	_ZN2kc42impl_elem_patternrepresentation_PRWildcardC1EPNS_9impl_pathE,@function
_ZN2kc42impl_elem_patternrepresentation_PRWildcardC1EPNS_9impl_pathE = _ZN2kc42impl_elem_patternrepresentation_PRWildcardC2EPNS_9impl_pathE
	.globl	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC1EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.type	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC1EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE,@function
_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC1EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE = _ZN2kc48impl_elem_patternrepresentation_PRNonLeafBindingC2EPNS_9impl_pathEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.globl	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC1EPNS_16impl_CexpressionE
	.type	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC1EPNS_16impl_CexpressionE,@function
_ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC1EPNS_16impl_CexpressionE = _ZN2kc47impl_elem_patternrepresentation_PRUserPredicateC2EPNS_16impl_CexpressionE
	.globl	_ZN2kc47impl_elem_patternrepresentation_PROperPredicateC1EPNS_9impl_pathEPNS_7impl_IDE
	.type	_ZN2kc47impl_elem_patternrepresentation_PROperPredicateC1EPNS_9impl_pathEPNS_7impl_IDE,@function
_ZN2kc47impl_elem_patternrepresentation_PROperPredicateC1EPNS_9impl_pathEPNS_7impl_IDE = _ZN2kc47impl_elem_patternrepresentation_PROperPredicateC2EPNS_9impl_pathEPNS_7impl_IDE
	.globl	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC1EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.type	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC1EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE,@function
_ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC1EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE = _ZN2kc46impl_elem_patternrepresentation_PRVarPredicateC2EPNS_10impl_pathsEPNS_7impl_IDEPNS_26impl_patternrepresentationE
	.globl	_ZN2kc41impl_elem_patternrepresentation_PRBindingC1EPNS_9impl_pathEPNS_7impl_IDE
	.type	_ZN2kc41impl_elem_patternrepresentation_PRBindingC1EPNS_9impl_pathEPNS_7impl_IDE,@function
_ZN2kc41impl_elem_patternrepresentation_PRBindingC1EPNS_9impl_pathEPNS_7impl_IDE = _ZN2kc41impl_elem_patternrepresentation_PRBindingC2EPNS_9impl_pathEPNS_7impl_IDE
	.globl	_ZN2kc9impl_pathC1EPNS_17impl_integer__IntEPS0_
	.type	_ZN2kc9impl_pathC1EPNS_17impl_integer__IntEPS0_,@function
_ZN2kc9impl_pathC1EPNS_17impl_integer__IntEPS0_ = _ZN2kc9impl_pathC2EPNS_17impl_integer__IntEPS0_
	.globl	_ZN2kc10impl_pathsC1EPNS_9impl_pathEPS0_
	.type	_ZN2kc10impl_pathsC1EPNS_9impl_pathEPS0_,@function
_ZN2kc10impl_pathsC1EPNS_9impl_pathEPS0_ = _ZN2kc10impl_pathsC2EPNS_9impl_pathEPS0_
	.globl	_ZN2kc16impl_argsnumbersC1EPNS_17impl_integer__IntEPS0_
	.type	_ZN2kc16impl_argsnumbersC1EPNS_17impl_integer__IntEPS0_,@function
_ZN2kc16impl_argsnumbersC1EPNS_17impl_integer__IntEPS0_ = _ZN2kc16impl_argsnumbersC2EPNS_17impl_integer__IntEPS0_
	.globl	_ZN2kc21impl_rewriterulesinfoC1EPNS_20impl_rewriteruleinfoEPS0_
	.type	_ZN2kc21impl_rewriterulesinfoC1EPNS_20impl_rewriteruleinfoEPS0_,@function
_ZN2kc21impl_rewriterulesinfoC1EPNS_20impl_rewriteruleinfoEPS0_ = _ZN2kc21impl_rewriterulesinfoC2EPNS_20impl_rewriteruleinfoEPS0_
	.globl	_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC1EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE
	.type	_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC1EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE,@function
_ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC1EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE = _ZN2kc36impl_rewriteruleinfo_RewriteruleinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_rewriteclauseE
	.globl	_ZN2kc18impl_withcasesinfoC1EPNS_17impl_withcaseinfoEPS0_
	.type	_ZN2kc18impl_withcasesinfoC1EPNS_17impl_withcaseinfoEPS0_,@function
_ZN2kc18impl_withcasesinfoC1EPNS_17impl_withcaseinfoEPS0_ = _ZN2kc18impl_withcasesinfoC2EPNS_17impl_withcaseinfoEPS0_
	.globl	_ZN2kc30impl_withcaseinfo_WithcaseinfoC1EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE
	.type	_ZN2kc30impl_withcaseinfo_WithcaseinfoC1EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE,@function
_ZN2kc30impl_withcaseinfo_WithcaseinfoC1EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE = _ZN2kc30impl_withcaseinfo_WithcaseinfoC2EPNS_26impl_patternrepresentationES2_PNS_10impl_CtextE
	.globl	_ZN2kc21impl_rewriteviewsinfoC1EPNS_20impl_rewriteviewinfoEPS0_
	.type	_ZN2kc21impl_rewriteviewsinfoC1EPNS_20impl_rewriteviewinfoEPS0_,@function
_ZN2kc21impl_rewriteviewsinfoC1EPNS_20impl_rewriteviewinfoEPS0_ = _ZN2kc21impl_rewriteviewsinfoC2EPNS_20impl_rewriteviewinfoEPS0_
	.globl	_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC1EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE
	.type	_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC1EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE,@function
_ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC1EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE = _ZN2kc36impl_rewriteviewinfo_RewriteviewinfoC2EPNS_7impl_IDEPNS_21impl_rewriterulesinfoE
	.globl	_ZN2kc21impl_unparseviewsinfoC1EPNS_20impl_unparseviewinfoEPS0_
	.type	_ZN2kc21impl_unparseviewsinfoC1EPNS_20impl_unparseviewinfoEPS0_,@function
_ZN2kc21impl_unparseviewsinfoC1EPNS_20impl_unparseviewinfoEPS0_ = _ZN2kc21impl_unparseviewsinfoC2EPNS_20impl_unparseviewinfoEPS0_
	.globl	_ZN2kc36impl_unparseviewinfo_UnparseviewinfoC1EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE
	.type	_ZN2kc36impl_unparseviewinfo_UnparseviewinfoC1EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE,@function
_ZN2kc36impl_unparseviewinfo_UnparseviewinfoC1EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE = _ZN2kc36impl_unparseviewinfo_UnparseviewinfoC2EPNS_7impl_IDEPNS_21impl_unparsedeclsinfoE
	.globl	_ZN2kc21impl_unparsedeclsinfoC1EPNS_20impl_unparsedeclinfoEPS0_
	.type	_ZN2kc21impl_unparsedeclsinfoC1EPNS_20impl_unparsedeclinfoEPS0_,@function
_ZN2kc21impl_unparsedeclsinfoC1EPNS_20impl_unparsedeclinfoEPS0_ = _ZN2kc21impl_unparsedeclsinfoC2EPNS_20impl_unparsedeclinfoEPS0_
	.globl	_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC1EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE
	.type	_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC1EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE,@function
_ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC1EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE = _ZN2kc36impl_unparsedeclinfo_UnparsedeclinfoC2EPNS_26impl_patternrepresentationES2_PNS_18impl_unparseclauseE
	.globl	_ZN2kc33impl_ac_declaration_AcDeclarationC1EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE
	.type	_ZN2kc33impl_ac_declaration_AcDeclarationC1EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE,@function
_ZN2kc33impl_ac_declaration_AcDeclarationC1EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE = _ZN2kc33impl_ac_declaration_AcDeclarationC2EPNS_30impl_ac_declaration_specifiersEPNS_28impl_ac_init_declarator_listE
	.globl	_ZN2kc24impl_ac_declaration_listC1EPNS_19impl_ac_declarationEPS0_
	.type	_ZN2kc24impl_ac_declaration_listC1EPNS_19impl_ac_declarationEPS0_,@function
_ZN2kc24impl_ac_declaration_listC1EPNS_19impl_ac_declarationEPS0_ = _ZN2kc24impl_ac_declaration_listC2EPNS_19impl_ac_declarationEPS0_
	.globl	_ZN2kc30impl_ac_declaration_specifiersC1EPNS_29impl_ac_declaration_specifierEPS0_
	.type	_ZN2kc30impl_ac_declaration_specifiersC1EPNS_29impl_ac_declaration_specifierEPS0_,@function
_ZN2kc30impl_ac_declaration_specifiersC1EPNS_29impl_ac_declaration_specifierEPS0_ = _ZN2kc30impl_ac_declaration_specifiersC2EPNS_29impl_ac_declaration_specifierEPS0_
	.globl	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC1EPNS_22impl_ac_type_qualifierE
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC1EPNS_22impl_ac_type_qualifierE,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC1EPNS_22impl_ac_type_qualifierE = _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualC2EPNS_22impl_ac_type_qualifierE
	.globl	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC1EPNS_22impl_ac_type_specifierE
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC1EPNS_22impl_ac_type_specifierE,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC1EPNS_22impl_ac_type_specifierE = _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecC2EPNS_22impl_ac_type_specifierE
	.globl	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC1EPNS_31impl_ac_storage_class_specifierE
	.type	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC1EPNS_31impl_ac_storage_class_specifierE,@function
_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC1EPNS_31impl_ac_storage_class_specifierE = _ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecC2EPNS_31impl_ac_storage_class_specifierE
	.globl	_ZN2kc41impl_ac_storage_class_specifier_AcVirtualC1Ev
	.type	_ZN2kc41impl_ac_storage_class_specifier_AcVirtualC1Ev,@function
_ZN2kc41impl_ac_storage_class_specifier_AcVirtualC1Ev = _ZN2kc41impl_ac_storage_class_specifier_AcVirtualC2Ev
	.globl	_ZN2kc41impl_ac_storage_class_specifier_AcTypedefC1Ev
	.type	_ZN2kc41impl_ac_storage_class_specifier_AcTypedefC1Ev,@function
_ZN2kc41impl_ac_storage_class_specifier_AcTypedefC1Ev = _ZN2kc41impl_ac_storage_class_specifier_AcTypedefC2Ev
	.globl	_ZN2kc40impl_ac_storage_class_specifier_AcExternC1Ev
	.type	_ZN2kc40impl_ac_storage_class_specifier_AcExternC1Ev,@function
_ZN2kc40impl_ac_storage_class_specifier_AcExternC1Ev = _ZN2kc40impl_ac_storage_class_specifier_AcExternC2Ev
	.globl	_ZN2kc40impl_ac_storage_class_specifier_AcStaticC1Ev
	.type	_ZN2kc40impl_ac_storage_class_specifier_AcStaticC1Ev,@function
_ZN2kc40impl_ac_storage_class_specifier_AcStaticC1Ev = _ZN2kc40impl_ac_storage_class_specifier_AcStaticC2Ev
	.globl	_ZN2kc42impl_ac_storage_class_specifier_AcRegisterC1Ev
	.type	_ZN2kc42impl_ac_storage_class_specifier_AcRegisterC1Ev,@function
_ZN2kc42impl_ac_storage_class_specifier_AcRegisterC1Ev = _ZN2kc42impl_ac_storage_class_specifier_AcRegisterC2Ev
	.globl	_ZN2kc38impl_ac_storage_class_specifier_AcAutoC1Ev
	.type	_ZN2kc38impl_ac_storage_class_specifier_AcAutoC1Ev,@function
_ZN2kc38impl_ac_storage_class_specifier_AcAutoC1Ev = _ZN2kc38impl_ac_storage_class_specifier_AcAutoC2Ev
	.globl	_ZN2kc33impl_ac_type_specifier_AcTypeSpecC1EPNS_7impl_IDE
	.type	_ZN2kc33impl_ac_type_specifier_AcTypeSpecC1EPNS_7impl_IDE,@function
_ZN2kc33impl_ac_type_specifier_AcTypeSpecC1EPNS_7impl_IDE = _ZN2kc33impl_ac_type_specifier_AcTypeSpecC2EPNS_7impl_IDE
	.globl	_ZN2kc36impl_ac_type_qualifier_AcNoQualifierC1Ev
	.type	_ZN2kc36impl_ac_type_qualifier_AcNoQualifierC1Ev,@function
_ZN2kc36impl_ac_type_qualifier_AcNoQualifierC1Ev = _ZN2kc36impl_ac_type_qualifier_AcNoQualifierC2Ev
	.globl	_ZN2kc33impl_ac_type_qualifier_AcUnsignedC1Ev
	.type	_ZN2kc33impl_ac_type_qualifier_AcUnsignedC1Ev,@function
_ZN2kc33impl_ac_type_qualifier_AcUnsignedC1Ev = _ZN2kc33impl_ac_type_qualifier_AcUnsignedC2Ev
	.globl	_ZN2kc33impl_ac_type_qualifier_AcVolatileC1Ev
	.type	_ZN2kc33impl_ac_type_qualifier_AcVolatileC1Ev,@function
_ZN2kc33impl_ac_type_qualifier_AcVolatileC1Ev = _ZN2kc33impl_ac_type_qualifier_AcVolatileC2Ev
	.globl	_ZN2kc30impl_ac_type_qualifier_AcConstC1Ev
	.type	_ZN2kc30impl_ac_type_qualifier_AcConstC1Ev,@function
_ZN2kc30impl_ac_type_qualifier_AcConstC1Ev = _ZN2kc30impl_ac_type_qualifier_AcConstC2Ev
	.globl	_ZN2kc28impl_ac_init_declarator_listC1EPNS_23impl_ac_init_declaratorEPS0_
	.type	_ZN2kc28impl_ac_init_declarator_listC1EPNS_23impl_ac_init_declaratorEPS0_,@function
_ZN2kc28impl_ac_init_declarator_listC1EPNS_23impl_ac_init_declaratorEPS0_ = _ZN2kc28impl_ac_init_declarator_listC2EPNS_23impl_ac_init_declaratorEPS0_
	.globl	_ZN2kc34impl_ac_init_declarator_AcInitDeclC1EPNS_18impl_ac_declaratorE
	.type	_ZN2kc34impl_ac_init_declarator_AcInitDeclC1EPNS_18impl_ac_declaratorE,@function
_ZN2kc34impl_ac_init_declarator_AcInitDeclC1EPNS_18impl_ac_declaratorE = _ZN2kc34impl_ac_init_declarator_AcInitDeclC2EPNS_18impl_ac_declaratorE
	.globl	_ZN2kc31impl_ac_declarator_AcDeclaratorC1EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE
	.type	_ZN2kc31impl_ac_declarator_AcDeclaratorC1EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE,@function
_ZN2kc31impl_ac_declarator_AcDeclaratorC1EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE = _ZN2kc31impl_ac_declarator_AcDeclaratorC2EPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE
	.globl	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC1EPNS_21impl_ac_operator_nameE
	.type	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC1EPNS_21impl_ac_operator_nameE,@function
_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC1EPNS_21impl_ac_operator_nameE = _ZN2kc42impl_ac_direct_declarator_AcOperatorDeclIdC2EPNS_21impl_ac_operator_nameE
	.globl	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC1EPNS_7impl_IDES2_
	.type	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC1EPNS_7impl_IDES2_,@function
_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC1EPNS_7impl_IDES2_ = _ZN2kc44impl_ac_direct_declarator_AcConvOperatorDeclC2EPNS_7impl_IDES2_
	.globl	_ZN2kc38impl_ac_direct_declarator_AcMemberDeclC1EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE
	.type	_ZN2kc38impl_ac_direct_declarator_AcMemberDeclC1EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE,@function
_ZN2kc38impl_ac_direct_declarator_AcMemberDeclC1EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE = _ZN2kc38impl_ac_direct_declarator_AcMemberDeclC2EPNS_7impl_IDES2_PNS_32impl_ac_constant_expression_listE
	.globl	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC1EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE
	.type	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC1EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE,@function
_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC1EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE = _ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoC2EPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE
	.globl	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC1EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC1EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC1EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE = _ZN2kc43impl_ac_direct_declarator_AcDirectDeclProtoC2EPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listE
	.globl	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC1EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC1EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC1EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE = _ZN2kc43impl_ac_direct_declarator_AcDirectDeclArrayC2EPNS_25impl_ac_direct_declaratorEPNS_34impl_ac_constant_expression_optionE
	.globl	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC1EPNS_18impl_ac_declaratorE
	.type	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC1EPNS_18impl_ac_declaratorE,@function
_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC1EPNS_18impl_ac_declaratorE = _ZN2kc42impl_ac_direct_declarator_AcDirectDeclPackC2EPNS_18impl_ac_declaratorE
	.globl	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC1EPNS_7impl_IDE
	.type	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC1EPNS_7impl_IDE,@function
_ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC1EPNS_7impl_IDE = _ZN2kc40impl_ac_direct_declarator_AcDirectDeclIdC2EPNS_7impl_IDE
	.globl	_ZN2kc33impl_ac_pointer_option_YespointerC1EPNS_15impl_ac_pointerE
	.type	_ZN2kc33impl_ac_pointer_option_YespointerC1EPNS_15impl_ac_pointerE,@function
_ZN2kc33impl_ac_pointer_option_YespointerC1EPNS_15impl_ac_pointerE = _ZN2kc33impl_ac_pointer_option_YespointerC2EPNS_15impl_ac_pointerE
	.globl	_ZN2kc32impl_ac_pointer_option_NopointerC1Ev
	.type	_ZN2kc32impl_ac_pointer_option_NopointerC1Ev,@function
_ZN2kc32impl_ac_pointer_option_NopointerC1Ev = _ZN2kc32impl_ac_pointer_option_NopointerC2Ev
	.globl	_ZN2kc29impl_ac_pointer_AcPointerConsC1EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE
	.type	_ZN2kc29impl_ac_pointer_AcPointerConsC1EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE,@function
_ZN2kc29impl_ac_pointer_AcPointerConsC1EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE = _ZN2kc29impl_ac_pointer_AcPointerConsC2EPNS_27impl_ac_type_qualifier_listEPNS_15impl_ac_pointerE
	.globl	_ZN2kc28impl_ac_pointer_AcPointerNilC1EPNS_27impl_ac_type_qualifier_listE
	.type	_ZN2kc28impl_ac_pointer_AcPointerNilC1EPNS_27impl_ac_type_qualifier_listE,@function
_ZN2kc28impl_ac_pointer_AcPointerNilC1EPNS_27impl_ac_type_qualifier_listE = _ZN2kc28impl_ac_pointer_AcPointerNilC2EPNS_27impl_ac_type_qualifier_listE
	.globl	_ZN2kc24impl_ac_ref_option_AcRefC1Ev
	.type	_ZN2kc24impl_ac_ref_option_AcRefC1Ev,@function
_ZN2kc24impl_ac_ref_option_AcRefC1Ev = _ZN2kc24impl_ac_ref_option_AcRefC2Ev
	.globl	_ZN2kc26impl_ac_ref_option_AcNoRefC1Ev
	.type	_ZN2kc26impl_ac_ref_option_AcNoRefC1Ev,@function
_ZN2kc26impl_ac_ref_option_AcNoRefC1Ev = _ZN2kc26impl_ac_ref_option_AcNoRefC2Ev
	.globl	_ZN2kc36impl_ac_operator_name_AcOperatorNameC1EPNS_20impl_casestring__StrE
	.type	_ZN2kc36impl_ac_operator_name_AcOperatorNameC1EPNS_20impl_casestring__StrE,@function
_ZN2kc36impl_ac_operator_name_AcOperatorNameC1EPNS_20impl_casestring__StrE = _ZN2kc36impl_ac_operator_name_AcOperatorNameC2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc33impl_ac_class_qualifier_help_listC1EPNS_25impl_ac_direct_declaratorEPS0_
	.type	_ZN2kc33impl_ac_class_qualifier_help_listC1EPNS_25impl_ac_direct_declaratorEPS0_,@function
_ZN2kc33impl_ac_class_qualifier_help_listC1EPNS_25impl_ac_direct_declaratorEPS0_ = _ZN2kc33impl_ac_class_qualifier_help_listC2EPNS_25impl_ac_direct_declaratorEPS0_
	.globl	_ZN2kc28impl_ac_class_qualifier_listC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc28impl_ac_class_qualifier_listC1EPNS_7impl_IDEPS0_,@function
_ZN2kc28impl_ac_class_qualifier_listC1EPNS_7impl_IDEPS0_ = _ZN2kc28impl_ac_class_qualifier_listC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc27impl_ac_type_qualifier_listC1EPNS_22impl_ac_type_qualifierEPS0_
	.type	_ZN2kc27impl_ac_type_qualifier_listC1EPNS_22impl_ac_type_qualifierEPS0_,@function
_ZN2kc27impl_ac_type_qualifier_listC1EPNS_22impl_ac_type_qualifierEPS0_ = _ZN2kc27impl_ac_type_qualifier_listC2EPNS_22impl_ac_type_qualifierEPS0_
	.globl	_ZN2kc41impl_ac_parameter_type_list_AcParList3DotC1EPNS_22impl_ac_parameter_listE
	.type	_ZN2kc41impl_ac_parameter_type_list_AcParList3DotC1EPNS_22impl_ac_parameter_listE,@function
_ZN2kc41impl_ac_parameter_type_list_AcParList3DotC1EPNS_22impl_ac_parameter_listE = _ZN2kc41impl_ac_parameter_type_list_AcParList3DotC2EPNS_22impl_ac_parameter_listE
	.globl	_ZN2kc37impl_ac_parameter_type_list_AcParListC1EPNS_22impl_ac_parameter_listE
	.type	_ZN2kc37impl_ac_parameter_type_list_AcParListC1EPNS_22impl_ac_parameter_listE,@function
_ZN2kc37impl_ac_parameter_type_list_AcParListC1EPNS_22impl_ac_parameter_listE = _ZN2kc37impl_ac_parameter_type_list_AcParListC2EPNS_22impl_ac_parameter_listE
	.globl	_ZN2kc22impl_ac_parameter_listC1EPNS_29impl_ac_parameter_declarationEPS0_
	.type	_ZN2kc22impl_ac_parameter_listC1EPNS_29impl_ac_parameter_declarationEPS0_,@function
_ZN2kc22impl_ac_parameter_listC1EPNS_29impl_ac_parameter_declarationEPS0_ = _ZN2kc22impl_ac_parameter_listC2EPNS_29impl_ac_parameter_declarationEPS0_
	.globl	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC1EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE
	.type	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC1EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC1EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE = _ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclC2EPNS_30impl_ac_declaration_specifiersEPNS_27impl_ac_abstract_declaratorEPNS_34impl_ac_constant_expression_optionE
	.globl	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC1EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE
	.type	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC1EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC1EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE = _ZN2kc43impl_ac_parameter_declaration_AcParDeclDeclC2EPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_34impl_ac_constant_expression_optionE
	.globl	_ZN2kc23impl_ac_identifier_listC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc23impl_ac_identifier_listC1EPNS_7impl_IDEPS0_,@function
_ZN2kc23impl_ac_identifier_listC1EPNS_7impl_IDEPS0_ = _ZN2kc23impl_ac_identifier_listC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC1EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC1EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC1EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE = _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclC2EPNS_22impl_ac_pointer_optionEPNS_34impl_ac_direct_abstract_declaratorE
	.globl	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC1EPNS_15impl_ac_pointerE
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC1EPNS_15impl_ac_pointerE,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC1EPNS_15impl_ac_pointerE = _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerC2EPNS_15impl_ac_pointerE
	.globl	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC1EPNS_34impl_ac_direct_abstract_declaratorE
	.type	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC1EPNS_34impl_ac_direct_abstract_declaratorE,@function
_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC1EPNS_34impl_ac_direct_abstract_declaratorE = _ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorC2EPNS_34impl_ac_direct_abstract_declaratorE
	.globl	_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC1Ev
	.type	_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC1Ev,@function
_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC1Ev = _ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declaratorC2Ev
	.globl	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC1EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE
	.type	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC1EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE,@function
_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC1EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE = _ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_27impl_ac_parameter_type_listE
	.globl	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC1EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE
	.type	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC1EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE,@function
_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC1EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE = _ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayC2EPNS_41impl_ac_direct_abstract_declarator_optionEPNS_34impl_ac_constant_expression_optionE
	.globl	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC1EPNS_27impl_ac_abstract_declaratorE
	.type	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC1EPNS_27impl_ac_abstract_declaratorE,@function
_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC1EPNS_27impl_ac_abstract_declaratorE = _ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackC2EPNS_27impl_ac_abstract_declaratorE
	.globl	_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC1Ev
	.type	_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC1Ev,@function
_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC1Ev = _ZN2kc59impl_ac_constant_expression_option_Noac_constant_expressionC2Ev
	.globl	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC1EPNS_27impl_ac_constant_expressionE
	.type	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC1EPNS_27impl_ac_constant_expressionE,@function
_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC1EPNS_27impl_ac_constant_expressionE = _ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionC2EPNS_27impl_ac_constant_expressionE
	.globl	_ZN2kc39impl_ac_constant_expression_AcConstExprC1EPNS_16impl_CexpressionE
	.type	_ZN2kc39impl_ac_constant_expression_AcConstExprC1EPNS_16impl_CexpressionE,@function
_ZN2kc39impl_ac_constant_expression_AcConstExprC1EPNS_16impl_CexpressionE = _ZN2kc39impl_ac_constant_expression_AcConstExprC2EPNS_16impl_CexpressionE
	.globl	_ZN2kc32impl_ac_constant_expression_listC1EPNS_27impl_ac_constant_expressionEPS0_
	.type	_ZN2kc32impl_ac_constant_expression_listC1EPNS_27impl_ac_constant_expressionEPS0_,@function
_ZN2kc32impl_ac_constant_expression_listC1EPNS_27impl_ac_constant_expressionEPS0_ = _ZN2kc32impl_ac_constant_expression_listC2EPNS_27impl_ac_constant_expressionEPS0_
	.globl	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC1EPNS_22impl_ac_base_init_listE
	.type	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC1EPNS_22impl_ac_base_init_listE,@function
_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC1EPNS_22impl_ac_base_init_listE = _ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInitC2EPNS_22impl_ac_base_init_listE
	.globl	_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC1Ev
	.type	_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC1Ev,@function
_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC1Ev = _ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInitC2Ev
	.globl	_ZN2kc22impl_ac_base_init_listC1EPNS_17impl_ac_base_initEPS0_
	.type	_ZN2kc22impl_ac_base_init_listC1EPNS_17impl_ac_base_initEPS0_,@function
_ZN2kc22impl_ac_base_init_listC1EPNS_17impl_ac_base_initEPS0_ = _ZN2kc22impl_ac_base_init_listC2EPNS_17impl_ac_base_initEPS0_
	.globl	_ZN2kc28impl_ac_base_init_AcBaseInitC1EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE
	.type	_ZN2kc28impl_ac_base_init_AcBaseInitC1EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE,@function
_ZN2kc28impl_ac_base_init_AcBaseInitC1EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE = _ZN2kc28impl_ac_base_init_AcBaseInitC2EPNS_7impl_IDEPNS_27impl_ac_constant_expressionE
	.globl	_ZN2kc27impl_baseclass_declarationsC1EPNS_19impl_baseclass_declEPS0_
	.type	_ZN2kc27impl_baseclass_declarationsC1EPNS_19impl_baseclass_declEPS0_,@function
_ZN2kc27impl_baseclass_declarationsC1EPNS_19impl_baseclass_declEPS0_ = _ZN2kc27impl_baseclass_declarationsC2EPNS_19impl_baseclass_declEPS0_
	.globl	_ZN2kc33impl_baseclass_decl_BaseClassDeclC1EPNS_7impl_IDEPNS_19impl_baseclass_listE
	.type	_ZN2kc33impl_baseclass_decl_BaseClassDeclC1EPNS_7impl_IDEPNS_19impl_baseclass_listE,@function
_ZN2kc33impl_baseclass_decl_BaseClassDeclC1EPNS_7impl_IDEPNS_19impl_baseclass_listE = _ZN2kc33impl_baseclass_decl_BaseClassDeclC2EPNS_7impl_IDEPNS_19impl_baseclass_listE
	.globl	_ZN2kc19impl_baseclass_listC1EPNS_7impl_IDEPS0_
	.type	_ZN2kc19impl_baseclass_listC1EPNS_7impl_IDEPS0_,@function
_ZN2kc19impl_baseclass_listC1EPNS_7impl_IDEPS0_ = _ZN2kc19impl_baseclass_listC2EPNS_7impl_IDEPS0_
	.globl	_ZN2kc18impl_error_WarningC1EPNS_13impl_filelineEPNS_12impl_problemE
	.type	_ZN2kc18impl_error_WarningC1EPNS_13impl_filelineEPNS_12impl_problemE,@function
_ZN2kc18impl_error_WarningC1EPNS_13impl_filelineEPNS_12impl_problemE = _ZN2kc18impl_error_WarningC2EPNS_13impl_filelineEPNS_12impl_problemE
	.globl	_ZN2kc19impl_error_NonFatalC1EPNS_13impl_filelineEPNS_12impl_problemE
	.type	_ZN2kc19impl_error_NonFatalC1EPNS_13impl_filelineEPNS_12impl_problemE,@function
_ZN2kc19impl_error_NonFatalC1EPNS_13impl_filelineEPNS_12impl_problemE = _ZN2kc19impl_error_NonFatalC2EPNS_13impl_filelineEPNS_12impl_problemE
	.globl	_ZN2kc16impl_error_FatalC1EPNS_13impl_filelineEPNS_12impl_problemE
	.type	_ZN2kc16impl_error_FatalC1EPNS_13impl_filelineEPNS_12impl_problemE,@function
_ZN2kc16impl_error_FatalC1EPNS_13impl_filelineEPNS_12impl_problemE = _ZN2kc16impl_error_FatalC2EPNS_13impl_filelineEPNS_12impl_problemE
	.globl	_ZN2kc21impl_problem_Problem6C1EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_
	.type	_ZN2kc21impl_problem_Problem6C1EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_,@function
_ZN2kc21impl_problem_Problem6C1EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_ = _ZN2kc21impl_problem_Problem6C2EPNS_20impl_casestring__StrES2_S2_S2_S2_S2_
	.globl	_ZN2kc21impl_problem_Problem5C1EPNS_20impl_casestring__StrES2_S2_S2_S2_
	.type	_ZN2kc21impl_problem_Problem5C1EPNS_20impl_casestring__StrES2_S2_S2_S2_,@function
_ZN2kc21impl_problem_Problem5C1EPNS_20impl_casestring__StrES2_S2_S2_S2_ = _ZN2kc21impl_problem_Problem5C2EPNS_20impl_casestring__StrES2_S2_S2_S2_
	.globl	_ZN2kc21impl_problem_Problem4C1EPNS_20impl_casestring__StrES2_S2_S2_
	.type	_ZN2kc21impl_problem_Problem4C1EPNS_20impl_casestring__StrES2_S2_S2_,@function
_ZN2kc21impl_problem_Problem4C1EPNS_20impl_casestring__StrES2_S2_S2_ = _ZN2kc21impl_problem_Problem4C2EPNS_20impl_casestring__StrES2_S2_S2_
	.globl	_ZN2kc25impl_problem_Problem3int1C1EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_
	.type	_ZN2kc25impl_problem_Problem3int1C1EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_,@function
_ZN2kc25impl_problem_Problem3int1C1EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_ = _ZN2kc25impl_problem_Problem3int1C2EPNS_20impl_casestring__StrES2_S2_PNS_17impl_integer__IntES2_
	.globl	_ZN2kc21impl_problem_Problem3C1EPNS_20impl_casestring__StrES2_S2_
	.type	_ZN2kc21impl_problem_Problem3C1EPNS_20impl_casestring__StrES2_S2_,@function
_ZN2kc21impl_problem_Problem3C1EPNS_20impl_casestring__StrES2_S2_ = _ZN2kc21impl_problem_Problem3C2EPNS_20impl_casestring__StrES2_S2_
	.globl	_ZN2kc21impl_problem_Problem2C1EPNS_20impl_casestring__StrES2_
	.type	_ZN2kc21impl_problem_Problem2C1EPNS_20impl_casestring__StrES2_,@function
_ZN2kc21impl_problem_Problem2C1EPNS_20impl_casestring__StrES2_ = _ZN2kc21impl_problem_Problem2C2EPNS_20impl_casestring__StrES2_
	.globl	_ZN2kc37impl_problem_Problem1storageoption1IDC1EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE
	.type	_ZN2kc37impl_problem_Problem1storageoption1IDC1EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE,@function
_ZN2kc37impl_problem_Problem1storageoption1IDC1EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE = _ZN2kc37impl_problem_Problem1storageoption1IDC2EPNS_20impl_casestring__StrEPNS_18impl_storageoptionES2_PNS_7impl_IDE
	.globl	_ZN2kc30impl_problem_Problem1INT1ID1IDC1EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_
	.type	_ZN2kc30impl_problem_Problem1INT1ID1IDC1EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_,@function
_ZN2kc30impl_problem_Problem1INT1ID1IDC1EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_ = _ZN2kc30impl_problem_Problem1INT1ID1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDES2_S6_
	.globl	_ZN2kc29impl_problem_Problem1ID1ID1IDC1EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_
	.type	_ZN2kc29impl_problem_Problem1ID1ID1IDC1EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_,@function
_ZN2kc29impl_problem_Problem1ID1ID1IDC1EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_ = _ZN2kc29impl_problem_Problem1ID1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_S2_S4_
	.globl	_ZN2kc27impl_problem_Problem1INT1IDC1EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE
	.type	_ZN2kc27impl_problem_Problem1INT1IDC1EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE,@function
_ZN2kc27impl_problem_Problem1INT1IDC1EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE = _ZN2kc27impl_problem_Problem1INT1IDC2EPNS_20impl_casestring__StrEPNS_8impl_INTES2_PNS_7impl_IDE
	.globl	_ZN2kc25impl_problem_Problem1int1C1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_
	.type	_ZN2kc25impl_problem_Problem1int1C1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_,@function
_ZN2kc25impl_problem_Problem1int1C1EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_ = _ZN2kc25impl_problem_Problem1int1C2EPNS_20impl_casestring__StrEPNS_17impl_integer__IntES2_
	.globl	_ZN2kc24impl_problem_Problem1INTC1EPNS_20impl_casestring__StrEPNS_8impl_INTE
	.type	_ZN2kc24impl_problem_Problem1INTC1EPNS_20impl_casestring__StrEPNS_8impl_INTE,@function
_ZN2kc24impl_problem_Problem1INTC1EPNS_20impl_casestring__StrEPNS_8impl_INTE = _ZN2kc24impl_problem_Problem1INTC2EPNS_20impl_casestring__StrEPNS_8impl_INTE
	.globl	_ZN2kc25impl_problem_Problem1t1IDC1EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE
	.type	_ZN2kc25impl_problem_Problem1t1IDC1EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE,@function
_ZN2kc25impl_problem_Problem1t1IDC1EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE = _ZN2kc25impl_problem_Problem1t1IDC2EPNS_20impl_casestring__StrEPNS_11impl_IDtypeES2_PNS_7impl_IDE
	.globl	_ZN2kc26impl_problem_Problem1ID1IDC1EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_
	.type	_ZN2kc26impl_problem_Problem1ID1IDC1EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_,@function
_ZN2kc26impl_problem_Problem1ID1IDC1EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_ = _ZN2kc26impl_problem_Problem1ID1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDES2_S4_
	.globl	_ZN2kc23impl_problem_Problem1weC1EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE
	.type	_ZN2kc23impl_problem_Problem1weC1EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE,@function
_ZN2kc23impl_problem_Problem1weC1EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE = _ZN2kc23impl_problem_Problem1weC2EPNS_20impl_casestring__StrEPNS_19impl_withexpressionE
	.globl	_ZN2kc24impl_problem_Problem1tIDC1EPNS_20impl_casestring__StrEPNS_7impl_IDE
	.type	_ZN2kc24impl_problem_Problem1tIDC1EPNS_20impl_casestring__StrEPNS_7impl_IDE,@function
_ZN2kc24impl_problem_Problem1tIDC1EPNS_20impl_casestring__StrEPNS_7impl_IDE = _ZN2kc24impl_problem_Problem1tIDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE
	.globl	_ZN2kc23impl_problem_Problem1IDC1EPNS_20impl_casestring__StrEPNS_7impl_IDE
	.type	_ZN2kc23impl_problem_Problem1IDC1EPNS_20impl_casestring__StrEPNS_7impl_IDE,@function
_ZN2kc23impl_problem_Problem1IDC1EPNS_20impl_casestring__StrEPNS_7impl_IDE = _ZN2kc23impl_problem_Problem1IDC2EPNS_20impl_casestring__StrEPNS_7impl_IDE
	.globl	_ZN2kc21impl_problem_Problem1C1EPNS_20impl_casestring__StrE
	.type	_ZN2kc21impl_problem_Problem1C1EPNS_20impl_casestring__StrE,@function
_ZN2kc21impl_problem_Problem1C1EPNS_20impl_casestring__StrE = _ZN2kc21impl_problem_Problem1C2EPNS_20impl_casestring__StrE
	.globl	_ZN2kc28impl_addedphylumdeclarationsC1EPNS_27impl_addedphylumdeclarationEPS0_
	.type	_ZN2kc28impl_addedphylumdeclarationsC1EPNS_27impl_addedphylumdeclarationEPS0_,@function
_ZN2kc28impl_addedphylumdeclarationsC1EPNS_27impl_addedphylumdeclarationEPS0_ = _ZN2kc28impl_addedphylumdeclarationsC2EPNS_27impl_addedphylumdeclarationEPS0_
	.globl	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC1EPNS_11impl_uniqIDE
	.type	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC1EPNS_11impl_uniqIDE,@function
_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC1EPNS_11impl_uniqIDE = _ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationC2EPNS_11impl_uniqIDE
	.globl	_ZN2kc30impl_countedphylumdeclarationsC1EPNS_29impl_countedphylumdeclarationEPS0_
	.type	_ZN2kc30impl_countedphylumdeclarationsC1EPNS_29impl_countedphylumdeclarationEPS0_,@function
_ZN2kc30impl_countedphylumdeclarationsC1EPNS_29impl_countedphylumdeclarationEPS0_ = _ZN2kc30impl_countedphylumdeclarationsC2EPNS_29impl_countedphylumdeclarationEPS0_
	.globl	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC1EPNS_11impl_uniqIDE
	.type	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC1EPNS_11impl_uniqIDE,@function
_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC1EPNS_11impl_uniqIDE = _ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationC2EPNS_11impl_uniqIDE
	.globl	_ZN2kc19impl_charruns_StarsC1Ev
	.type	_ZN2kc19impl_charruns_StarsC1Ev,@function
_ZN2kc19impl_charruns_StarsC1Ev = _ZN2kc19impl_charruns_StarsC2Ev
	.globl	_ZN2kc28impl_charruns_QuotedNewlinesC1Ev
	.type	_ZN2kc28impl_charruns_QuotedNewlinesC1Ev,@function
_ZN2kc28impl_charruns_QuotedNewlinesC1Ev = _ZN2kc28impl_charruns_QuotedNewlinesC2Ev
	.globl	_ZN2kc22impl_charruns_NewlinesC1Ev
	.type	_ZN2kc22impl_charruns_NewlinesC1Ev,@function
_ZN2kc22impl_charruns_NewlinesC1Ev = _ZN2kc22impl_charruns_NewlinesC2Ev
	.globl	_ZN2kc19impl_bindingidmarksC1EPNS_18impl_bindingidmarkEPS0_
	.type	_ZN2kc19impl_bindingidmarksC1EPNS_18impl_bindingidmarkEPS0_,@function
_ZN2kc19impl_bindingidmarksC1EPNS_18impl_bindingidmarkEPS0_ = _ZN2kc19impl_bindingidmarksC2EPNS_18impl_bindingidmarkEPS0_
	.globl	_ZN2kc32impl_bindingidmark_BindingIdMarkC1EPNS_11impl_uniqIDE
	.type	_ZN2kc32impl_bindingidmark_BindingIdMarkC1EPNS_11impl_uniqIDE,@function
_ZN2kc32impl_bindingidmark_BindingIdMarkC1EPNS_11impl_uniqIDE = _ZN2kc32impl_bindingidmark_BindingIdMarkC2EPNS_11impl_uniqIDE
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3, 0x0
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.dword	__gxx_personality_v0
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _GLOBAL__sub_I_k.cc
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZTIN2kc11impl_uniqIDE
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTSN2kc11impl_uniqIDE
	.addrsig_sym _ZTIN2kc18impl_bindingidmarkE
	.addrsig_sym _ZTSN2kc18impl_bindingidmarkE
	.addrsig_sym _ZTIN2kc19impl_bindingidmarksE
	.addrsig_sym _ZTSN2kc19impl_bindingidmarksE
	.addrsig_sym _ZTIN2kc18impl_abstract_listE
	.addrsig_sym _ZTSN2kc18impl_abstract_listE
	.addrsig_sym _ZTIN2kc29impl_countedphylumdeclarationE
	.addrsig_sym _ZTSN2kc29impl_countedphylumdeclarationE
	.addrsig_sym _ZTIN2kc30impl_countedphylumdeclarationsE
	.addrsig_sym _ZTSN2kc30impl_countedphylumdeclarationsE
	.addrsig_sym _ZTIN2kc27impl_addedphylumdeclarationE
	.addrsig_sym _ZTSN2kc27impl_addedphylumdeclarationE
	.addrsig_sym _ZTIN2kc28impl_addedphylumdeclarationsE
	.addrsig_sym _ZTSN2kc28impl_addedphylumdeclarationsE
	.addrsig_sym _ZTIN2kc20impl_casestring__StrE
	.addrsig_sym _ZTIN2kc17impl_integer__IntE
	.addrsig_sym _ZTIN2kc18impl_storageoptionE
	.addrsig_sym _ZTSN2kc18impl_storageoptionE
	.addrsig_sym _ZTIN2kc7impl_IDE
	.addrsig_sym _ZTSN2kc7impl_IDE
	.addrsig_sym _ZTIN2kc8impl_INTE
	.addrsig_sym _ZTSN2kc8impl_INTE
	.addrsig_sym _ZTIN2kc11impl_IDtypeE
	.addrsig_sym _ZTSN2kc11impl_IDtypeE
	.addrsig_sym _ZTIN2kc19impl_withexpressionE
	.addrsig_sym _ZTSN2kc19impl_withexpressionE
	.addrsig_sym _ZTIN2kc13impl_filelineE
	.addrsig_sym _ZTSN2kc13impl_filelineE
	.addrsig_sym _ZTIN2kc12impl_problemE
	.addrsig_sym _ZTSN2kc12impl_problemE
	.addrsig_sym _ZTIN2kc19impl_baseclass_listE
	.addrsig_sym _ZTSN2kc19impl_baseclass_listE
	.addrsig_sym _ZTIN2kc19impl_baseclass_declE
	.addrsig_sym _ZTSN2kc19impl_baseclass_declE
	.addrsig_sym _ZTIN2kc27impl_baseclass_declarationsE
	.addrsig_sym _ZTSN2kc27impl_baseclass_declarationsE
	.addrsig_sym _ZTIN2kc27impl_ac_constant_expressionE
	.addrsig_sym _ZTSN2kc27impl_ac_constant_expressionE
	.addrsig_sym _ZTIN2kc17impl_ac_base_initE
	.addrsig_sym _ZTSN2kc17impl_ac_base_initE
	.addrsig_sym _ZTIN2kc22impl_ac_base_init_listE
	.addrsig_sym _ZTSN2kc22impl_ac_base_init_listE
	.addrsig_sym _ZTIN2kc32impl_ac_constant_expression_listE
	.addrsig_sym _ZTSN2kc32impl_ac_constant_expression_listE
	.addrsig_sym _ZTIN2kc16impl_CexpressionE
	.addrsig_sym _ZTSN2kc16impl_CexpressionE
	.addrsig_sym _ZTIN2kc41impl_ac_direct_abstract_declarator_optionE
	.addrsig_sym _ZTSN2kc41impl_ac_direct_abstract_declarator_optionE
	.addrsig_sym _ZTIN2kc27impl_ac_parameter_type_listE
	.addrsig_sym _ZTSN2kc27impl_ac_parameter_type_listE
	.addrsig_sym _ZTIN2kc34impl_ac_constant_expression_optionE
	.addrsig_sym _ZTSN2kc34impl_ac_constant_expression_optionE
	.addrsig_sym _ZTIN2kc27impl_ac_abstract_declaratorE
	.addrsig_sym _ZTSN2kc27impl_ac_abstract_declaratorE
	.addrsig_sym _ZTIN2kc34impl_ac_direct_abstract_declaratorE
	.addrsig_sym _ZTSN2kc34impl_ac_direct_abstract_declaratorE
	.addrsig_sym _ZTIN2kc22impl_ac_pointer_optionE
	.addrsig_sym _ZTSN2kc22impl_ac_pointer_optionE
	.addrsig_sym _ZTIN2kc15impl_ac_pointerE
	.addrsig_sym _ZTSN2kc15impl_ac_pointerE
	.addrsig_sym _ZTIN2kc23impl_ac_identifier_listE
	.addrsig_sym _ZTSN2kc23impl_ac_identifier_listE
	.addrsig_sym _ZTIN2kc30impl_ac_declaration_specifiersE
	.addrsig_sym _ZTSN2kc30impl_ac_declaration_specifiersE
	.addrsig_sym _ZTIN2kc18impl_ac_declaratorE
	.addrsig_sym _ZTSN2kc18impl_ac_declaratorE
	.addrsig_sym _ZTIN2kc29impl_ac_parameter_declarationE
	.addrsig_sym _ZTSN2kc29impl_ac_parameter_declarationE
	.addrsig_sym _ZTIN2kc22impl_ac_parameter_listE
	.addrsig_sym _ZTSN2kc22impl_ac_parameter_listE
	.addrsig_sym _ZTIN2kc22impl_ac_type_qualifierE
	.addrsig_sym _ZTSN2kc22impl_ac_type_qualifierE
	.addrsig_sym _ZTIN2kc27impl_ac_type_qualifier_listE
	.addrsig_sym _ZTSN2kc27impl_ac_type_qualifier_listE
	.addrsig_sym _ZTIN2kc28impl_ac_class_qualifier_listE
	.addrsig_sym _ZTSN2kc28impl_ac_class_qualifier_listE
	.addrsig_sym _ZTIN2kc25impl_ac_direct_declaratorE
	.addrsig_sym _ZTSN2kc25impl_ac_direct_declaratorE
	.addrsig_sym _ZTIN2kc33impl_ac_class_qualifier_help_listE
	.addrsig_sym _ZTSN2kc33impl_ac_class_qualifier_help_listE
	.addrsig_sym _ZTIN2kc21impl_ac_operator_nameE
	.addrsig_sym _ZTSN2kc21impl_ac_operator_nameE
	.addrsig_sym _ZTIN2kc18impl_ac_ref_optionE
	.addrsig_sym _ZTSN2kc18impl_ac_ref_optionE
	.addrsig_sym _ZTIN2kc23impl_ac_init_declaratorE
	.addrsig_sym _ZTSN2kc23impl_ac_init_declaratorE
	.addrsig_sym _ZTIN2kc28impl_ac_init_declarator_listE
	.addrsig_sym _ZTSN2kc28impl_ac_init_declarator_listE
	.addrsig_sym _ZTIN2kc22impl_ac_type_specifierE
	.addrsig_sym _ZTSN2kc22impl_ac_type_specifierE
	.addrsig_sym _ZTIN2kc31impl_ac_storage_class_specifierE
	.addrsig_sym _ZTSN2kc31impl_ac_storage_class_specifierE
	.addrsig_sym _ZTIN2kc29impl_ac_declaration_specifierE
	.addrsig_sym _ZTSN2kc29impl_ac_declaration_specifierE
	.addrsig_sym _ZTIN2kc19impl_ac_declarationE
	.addrsig_sym _ZTSN2kc19impl_ac_declarationE
	.addrsig_sym _ZTIN2kc24impl_ac_declaration_listE
	.addrsig_sym _ZTSN2kc24impl_ac_declaration_listE
	.addrsig_sym _ZTIN2kc26impl_patternrepresentationE
	.addrsig_sym _ZTSN2kc26impl_patternrepresentationE
	.addrsig_sym _ZTIN2kc18impl_unparseclauseE
	.addrsig_sym _ZTSN2kc18impl_unparseclauseE
	.addrsig_sym _ZTIN2kc20impl_unparsedeclinfoE
	.addrsig_sym _ZTSN2kc20impl_unparsedeclinfoE
	.addrsig_sym _ZTIN2kc21impl_unparsedeclsinfoE
	.addrsig_sym _ZTSN2kc21impl_unparsedeclsinfoE
	.addrsig_sym _ZTIN2kc20impl_unparseviewinfoE
	.addrsig_sym _ZTSN2kc20impl_unparseviewinfoE
	.addrsig_sym _ZTIN2kc21impl_unparseviewsinfoE
	.addrsig_sym _ZTSN2kc21impl_unparseviewsinfoE
	.addrsig_sym _ZTIN2kc21impl_rewriterulesinfoE
	.addrsig_sym _ZTSN2kc21impl_rewriterulesinfoE
	.addrsig_sym _ZTIN2kc20impl_rewriteviewinfoE
	.addrsig_sym _ZTSN2kc20impl_rewriteviewinfoE
	.addrsig_sym _ZTIN2kc21impl_rewriteviewsinfoE
	.addrsig_sym _ZTSN2kc21impl_rewriteviewsinfoE
	.addrsig_sym _ZTIN2kc10impl_CtextE
	.addrsig_sym _ZTSN2kc10impl_CtextE
	.addrsig_sym _ZTIN2kc17impl_withcaseinfoE
	.addrsig_sym _ZTSN2kc17impl_withcaseinfoE
	.addrsig_sym _ZTIN2kc18impl_withcasesinfoE
	.addrsig_sym _ZTSN2kc18impl_withcasesinfoE
	.addrsig_sym _ZTIN2kc18impl_rewriteclauseE
	.addrsig_sym _ZTSN2kc18impl_rewriteclauseE
	.addrsig_sym _ZTIN2kc20impl_rewriteruleinfoE
	.addrsig_sym _ZTSN2kc20impl_rewriteruleinfoE
	.addrsig_sym _ZTIN2kc16impl_argsnumbersE
	.addrsig_sym _ZTSN2kc16impl_argsnumbersE
	.addrsig_sym _ZTIN2kc9impl_pathE
	.addrsig_sym _ZTSN2kc9impl_pathE
	.addrsig_sym _ZTIN2kc10impl_pathsE
	.addrsig_sym _ZTSN2kc10impl_pathsE
	.addrsig_sym _ZTIN2kc18impl_CexpressionDQE
	.addrsig_sym _ZTSN2kc18impl_CexpressionDQE
	.addrsig_sym _ZTIN2kc31impl_elem_patternrepresentationE
	.addrsig_sym _ZTSN2kc31impl_elem_patternrepresentationE
	.addrsig_sym _ZTIN2kc27impl_patternrepresentationsE
	.addrsig_sym _ZTSN2kc27impl_patternrepresentationsE
	.addrsig_sym _ZTIN2kc14impl_variablesE
	.addrsig_sym _ZTSN2kc14impl_variablesE
	.addrsig_sym _ZTIN2kc10impl_phylaE
	.addrsig_sym _ZTSN2kc10impl_phylaE
	.addrsig_sym _ZTIN2kc14impl_operatorsE
	.addrsig_sym _ZTSN2kc14impl_operatorsE
	.addrsig_sym _ZTIN2kc12impl_fnclassE
	.addrsig_sym _ZTSN2kc12impl_fnclassE
	.addrsig_sym _ZTIN2kc16impl_alternativeE
	.addrsig_sym _ZTSN2kc16impl_alternativeE
	.addrsig_sym _ZTIN2kc22impl_phylumdeclarationE
	.addrsig_sym _ZTSN2kc22impl_phylumdeclarationE
	.addrsig_sym _ZTIN2kc22impl_scopetypefilelineE
	.addrsig_sym _ZTSN2kc22impl_scopetypefilelineE
	.addrsig_sym _ZTIN2kc27impl_scopetypefilelinestackE
	.addrsig_sym _ZTSN2kc27impl_scopetypefilelinestackE
	.addrsig_sym _ZTIN2kc18impl_languagenamesE
	.addrsig_sym _ZTSN2kc18impl_languagenamesE
	.addrsig_sym _ZTIN2kc18impl_unpattributesE
	.addrsig_sym _ZTSN2kc18impl_unpattributesE
	.addrsig_sym _ZTIN2kc19impl_languageoptionE
	.addrsig_sym _ZTSN2kc19impl_languageoptionE
	.addrsig_sym _ZTIN2kc17impl_unparseitemsE
	.addrsig_sym _ZTSN2kc17impl_unparseitemsE
	.addrsig_sym _ZTIN2kc15impl_unpsubtermE
	.addrsig_sym _ZTSN2kc15impl_unpsubtermE
	.addrsig_sym _ZTIN2kc19impl_viewnameoptionE
	.addrsig_sym _ZTSN2kc19impl_viewnameoptionE
	.addrsig_sym _ZTIN2kc16impl_unparseitemE
	.addrsig_sym _ZTSN2kc16impl_unparseitemE
	.addrsig_sym _ZTIN2kc14impl_viewnamesE
	.addrsig_sym _ZTSN2kc14impl_viewnamesE
	.addrsig_sym _ZTIN2kc19impl_unparseclausesE
	.addrsig_sym _ZTSN2kc19impl_unparseclausesE
	.addrsig_sym _ZTIN2kc20impl_outmostpatternsE
	.addrsig_sym _ZTSN2kc20impl_outmostpatternsE
	.addrsig_sym _ZTIN2kc23impl_unparsedeclarationE
	.addrsig_sym _ZTSN2kc23impl_unparsedeclarationE
	.addrsig_sym _ZTIN2kc24impl_unparsedeclarationsE
	.addrsig_sym _ZTSN2kc24impl_unparsedeclarationsE
	.addrsig_sym _ZTIN2kc18impl_patternchainsE
	.addrsig_sym _ZTSN2kc18impl_patternchainsE
	.addrsig_sym _ZTIN2kc13impl_withcaseE
	.addrsig_sym _ZTSN2kc13impl_withcaseE
	.addrsig_sym _ZTIN2kc14impl_withcasesE
	.addrsig_sym _ZTSN2kc14impl_withcasesE
	.addrsig_sym _ZTIN2kc20impl_withexpressionsE
	.addrsig_sym _ZTSN2kc20impl_withexpressionsE
	.addrsig_sym _ZTIN2kc17impl_patternchainE
	.addrsig_sym _ZTSN2kc17impl_patternchainE
	.addrsig_sym _ZTIN2kc19impl_idCexpressionsE
	.addrsig_sym _ZTSN2kc19impl_idCexpressionsE
	.addrsig_sym _ZTIN2kc16impl_contextinfoE
	.addrsig_sym _ZTSN2kc16impl_contextinfoE
	.addrsig_sym _ZTIN2kc18impl_foreach_afterE
	.addrsig_sym _ZTSN2kc18impl_foreach_afterE
	.addrsig_sym _ZTIN2kc18impl_CexpressionSQE
	.addrsig_sym _ZTSN2kc18impl_CexpressionSQE
	.addrsig_sym _ZTIN2kc15impl_Ctext_elemE
	.addrsig_sym _ZTSN2kc15impl_Ctext_elemE
	.addrsig_sym _ZTIN2kc26impl_ac_opt_base_init_listE
	.addrsig_sym _ZTSN2kc26impl_ac_opt_base_init_listE
	.addrsig_sym _ZTIN2kc18impl_fndeclarationE
	.addrsig_sym _ZTSN2kc18impl_fndeclarationE
	.addrsig_sym _ZTIN2kc19impl_fndeclarationsE
	.addrsig_sym _ZTSN2kc19impl_fndeclarationsE
	.addrsig_sym _ZTIN2kc11impl_fnfileE
	.addrsig_sym _ZTSN2kc11impl_fnfileE
	.addrsig_sym _ZTIN2kc12impl_fnfilesE
	.addrsig_sym _ZTSN2kc12impl_fnfilesE
	.addrsig_sym _ZTIN2kc9impl_termE
	.addrsig_sym _ZTSN2kc9impl_termE
	.addrsig_sym _ZTIN2kc10impl_termsE
	.addrsig_sym _ZTSN2kc10impl_termsE
	.addrsig_sym _ZTIN2kc12impl_patternE
	.addrsig_sym _ZTSN2kc12impl_patternE
	.addrsig_sym _ZTIN2kc13impl_patternsE
	.addrsig_sym _ZTSN2kc13impl_patternsE
	.addrsig_sym _ZTIN2kc19impl_outmostpatternE
	.addrsig_sym _ZTSN2kc19impl_outmostpatternE
	.addrsig_sym _ZTIN2kc21impl_patternchainitemE
	.addrsig_sym _ZTSN2kc21impl_patternchainitemE
	.addrsig_sym _ZTIN2kc19impl_rewriteclausesE
	.addrsig_sym _ZTSN2kc19impl_rewriteclausesE
	.addrsig_sym _ZTIN2kc18impl_rwdeclarationE
	.addrsig_sym _ZTSN2kc18impl_rwdeclarationE
	.addrsig_sym _ZTIN2kc19impl_rwdeclarationsE
	.addrsig_sym _ZTSN2kc19impl_rwdeclarationsE
	.addrsig_sym _ZTIN2kc23impl_includedeclarationE
	.addrsig_sym _ZTSN2kc23impl_includedeclarationE
	.addrsig_sym _ZTIN2kc24impl_includedeclarationsE
	.addrsig_sym _ZTSN2kc24impl_includedeclarationsE
	.addrsig_sym _ZTIN2kc16impl_includefileE
	.addrsig_sym _ZTSN2kc16impl_includefileE
	.addrsig_sym _ZTIN2kc17impl_includefilesE
	.addrsig_sym _ZTSN2kc17impl_includefilesE
	.addrsig_sym _ZTIN2kc11impl_CtextsE
	.addrsig_sym _ZTSN2kc11impl_CtextsE
	.addrsig_sym _ZTIN2kc18impl_idCexpressionE
	.addrsig_sym _ZTSN2kc18impl_idCexpressionE
	.addrsig_sym _ZTIN2kc23impl_CexpressionSQ_elemE
	.addrsig_sym _ZTSN2kc23impl_CexpressionSQ_elemE
	.addrsig_sym _ZTIN2kc23impl_CexpressionDQ_elemE
	.addrsig_sym _ZTSN2kc23impl_CexpressionDQ_elemE
	.addrsig_sym _ZTIN2kc21impl_Cexpression_elemE
	.addrsig_sym _ZTSN2kc21impl_Cexpression_elemE
	.addrsig_sym _ZTIN2kc36impl_attribute_initialisation_optionE
	.addrsig_sym _ZTSN2kc36impl_attribute_initialisation_optionE
	.addrsig_sym _ZTIN2kc14impl_attributeE
	.addrsig_sym _ZTSN2kc14impl_attributeE
	.addrsig_sym _ZTIN2kc15impl_attributesE
	.addrsig_sym _ZTSN2kc15impl_attributesE
	.addrsig_sym _ZTIN2kc14impl_argumentsE
	.addrsig_sym _ZTSN2kc14impl_argumentsE
	.addrsig_sym _ZTIN2kc17impl_alternativesE
	.addrsig_sym _ZTSN2kc17impl_alternativesE
	.addrsig_sym _ZTIN2kc19impl_storageclassesE
	.addrsig_sym _ZTSN2kc19impl_storageclassesE
	.addrsig_sym _ZTIN2kc20impl_productionblockE
	.addrsig_sym _ZTSN2kc20impl_productionblockE
	.addrsig_sym _ZTIN2kc17impl_Ccode_optionE
	.addrsig_sym _ZTSN2kc17impl_Ccode_optionE
	.addrsig_sym _ZTIN2kc16impl_phylumnamesE
	.addrsig_sym _ZTSN2kc16impl_phylumnamesE
	.addrsig_sym _ZTIN2kc23impl_phylumdeclarationsE
	.addrsig_sym _ZTSN2kc23impl_phylumdeclarationsE
	.addrsig_sym _ZTIN2kc11impl_STRINGE
	.addrsig_sym _ZTSN2kc11impl_STRINGE
	.addrsig_sym _ZTIN2kc13impl_charrunsE
	.addrsig_sym _ZTSN2kc13impl_charrunsE
	.addrsig_sym _ZN2kcL15kc_subphyla_StrE
	.addrsig_sym _ZN2kcL14kc_subphyla_IdE
	.addrsig_sym _ZN2kcL15kc_subphyla_IntE
	.addrsig_sym _ZN2kcL18kc_subphyla_StringE
	.addrsig_sym _ZN2kcL30kc_subphyla_PhylumDeclarationsE
	.addrsig_sym _ZN2kcL34kc_subphyla_ConsphylumdeclarationsE
	.addrsig_sym _ZN2kcL27kc_subphyla_ConsphylumnamesE
	.addrsig_sym _ZN2kcL29kc_subphyla_PhylumDeclarationE
	.addrsig_sym _ZN2kcL33kc_subphyla_NegativeStorageOptionE
	.addrsig_sym _ZN2kcL33kc_subphyla_PositiveStorageOptionE
	.addrsig_sym _ZN2kcL30kc_subphyla_ConsstorageclassesE
	.addrsig_sym _ZN2kcL28kc_subphyla_ListAlternativesE
	.addrsig_sym _ZN2kcL31kc_subphyla_NonlistAlternativesE
	.addrsig_sym _ZN2kcL34kc_subphyla_PredefinedAlternativesE
	.addrsig_sym _ZN2kcL28kc_subphyla_ConsalternativesE
	.addrsig_sym _ZN2kcL23kc_subphyla_AlternativeE
	.addrsig_sym _ZN2kcL25kc_subphyla_ConsargumentsE
	.addrsig_sym _ZN2kcL20kc_subphyla_ArgumentE
	.addrsig_sym _ZN2kcL23kc_subphyla_CcodeOptionE
	.addrsig_sym _ZN2kcL26kc_subphyla_ConsattributesE
	.addrsig_sym _ZN2kcL21kc_subphyla_AttributeE
	.addrsig_sym _ZN2kcL39kc_subphyla_Yesattribute_initialisationE
	.addrsig_sym _ZN2kcL27kc_subphyla_ConsCexpressionE
	.addrsig_sym _ZN2kcL27kc_subphyla_CExpressionPartE
	.addrsig_sym _ZN2kcL32kc_subphyla_CExpressionDollarvarE
	.addrsig_sym _ZN2kcL25kc_subphyla_CExpressionDQE
	.addrsig_sym _ZN2kcL25kc_subphyla_CExpressionSQE
	.addrsig_sym _ZN2kcL27kc_subphyla_CExpressionPackE
	.addrsig_sym _ZN2kcL28kc_subphyla_CExpressionArrayE
	.addrsig_sym _ZN2kcL29kc_subphyla_ConsCexpressionDQE
	.addrsig_sym _ZN2kcL29kc_subphyla_CExpressionDQPartE
	.addrsig_sym _ZN2kcL29kc_subphyla_ConsCexpressionSQE
	.addrsig_sym _ZN2kcL29kc_subphyla_CExpressionSQPartE
	.addrsig_sym _ZN2kcL30kc_subphyla_ConsidCexpressionsE
	.addrsig_sym _ZN2kcL25kc_subphyla_IdCexpressionE
	.addrsig_sym _ZN2kcL22kc_subphyla_ConsCtextsE
	.addrsig_sym _ZN2kcL28kc_subphyla_ConsincludefilesE
	.addrsig_sym _ZN2kcL23kc_subphyla_IncludeFileE
	.addrsig_sym _ZN2kcL35kc_subphyla_ConsincludedeclarationsE
	.addrsig_sym _ZN2kcL30kc_subphyla_IncludeDeclarationE
	.addrsig_sym _ZN2kcL30kc_subphyla_ConsrwdeclarationsE
	.addrsig_sym _ZN2kcL25kc_subphyla_RwDeclarationE
	.addrsig_sym _ZN2kcL30kc_subphyla_ConsrewriteclausesE
	.addrsig_sym _ZN2kcL25kc_subphyla_RewriteClauseE
	.addrsig_sym _ZN2kcL29kc_subphyla_ConspatternchainsE
	.addrsig_sym _ZN2kcL28kc_subphyla_ConspatternchainE
	.addrsig_sym _ZN2kcL31kc_subphyla_ConsoutmostpatternsE
	.addrsig_sym _ZN2kcL35kc_subphyla_PatternchainitemOutmostE
	.addrsig_sym _ZN2kcL33kc_subphyla_PatternchainitemGroupE
	.addrsig_sym _ZN2kcL36kc_subphyla_PatternchainitemDollaridE
	.addrsig_sym _ZN2kcL30kc_subphyla_OPOperatorWildcardE
	.addrsig_sym _ZN2kcL22kc_subphyla_OPOperatorE
	.addrsig_sym _ZN2kcL29kc_subphyla_OPNonLeafVariableE
	.addrsig_sym _ZN2kcL22kc_subphyla_OPWildcardE
	.addrsig_sym _ZN2kcL21kc_subphyla_OPDefaultE
	.addrsig_sym _ZN2kcL21kc_subphyla_PVariableE
	.addrsig_sym _ZN2kcL21kc_subphyla_POperatorE
	.addrsig_sym _ZN2kcL28kc_subphyla_PNonLeafVariableE
	.addrsig_sym _ZN2kcL26kc_subphyla_PStringLiteralE
	.addrsig_sym _ZN2kcL23kc_subphyla_PIntLiteralE
	.addrsig_sym _ZN2kcL24kc_subphyla_ConspatternsE
	.addrsig_sym _ZN2kcL21kc_subphyla_TVariableE
	.addrsig_sym _ZN2kcL21kc_subphyla_TOperatorE
	.addrsig_sym _ZN2kcL19kc_subphyla_TMethodE
	.addrsig_sym _ZN2kcL22kc_subphyla_TMethodDotE
	.addrsig_sym _ZN2kcL22kc_subphyla_TMemberVarE
	.addrsig_sym _ZN2kcL25kc_subphyla_TMemberVarDotE
	.addrsig_sym _ZN2kcL18kc_subphyla_TCTermE
	.addrsig_sym _ZN2kcL26kc_subphyla_TStringLiteralE
	.addrsig_sym _ZN2kcL23kc_subphyla_TIntLiteralE
	.addrsig_sym _ZN2kcL21kc_subphyla_ConstermsE
	.addrsig_sym _ZN2kcL23kc_subphyla_ConsfnfilesE
	.addrsig_sym _ZN2kcL18kc_subphyla_FnFileE
	.addrsig_sym _ZN2kcL30kc_subphyla_ConsfndeclarationsE
	.addrsig_sym _ZN2kcL27kc_subphyla_FnAcDeclarationE
	.addrsig_sym _ZN2kcL31kc_subphyla_AcMemberDeclarationE
	.addrsig_sym _ZN2kcL20kc_subphyla_StaticFnE
	.addrsig_sym _ZN2kcL21kc_subphyla_ConsCtextE
	.addrsig_sym _ZN2kcL21kc_subphyla_CTextLineE
	.addrsig_sym _ZN2kcL26kc_subphyla_CTextDollarVarE
	.addrsig_sym _ZN2kcL19kc_subphyla_CTextNlE
	.addrsig_sym _ZN2kcL30kc_subphyla_CTextCexpressionDQE
	.addrsig_sym _ZN2kcL30kc_subphyla_CTextCexpressionSQE
	.addrsig_sym _ZN2kcL22kc_subphyla_CTextCbodyE
	.addrsig_sym _ZN2kcL34kc_subphyla_CTextForeachexpressionE
	.addrsig_sym _ZN2kcL31kc_subphyla_CTextWithexpressionE
	.addrsig_sym _ZN2kcL24kc_subphyla_ForeachAfterE
	.addrsig_sym _ZN2kcL28kc_subphyla_InForeachContextE
	.addrsig_sym _ZN2kcL31kc_subphyla_ConswithexpressionsE
	.addrsig_sym _ZN2kcL22kc_subphyla_WEVariableE
	.addrsig_sym _ZN2kcL25kc_subphyla_WECexpressionE
	.addrsig_sym _ZN2kcL25kc_subphyla_ConswithcasesE
	.addrsig_sym _ZN2kcL20kc_subphyla_WithcaseE
	.addrsig_sym _ZN2kcL35kc_subphyla_ConsunparsedeclarationsE
	.addrsig_sym _ZN2kcL30kc_subphyla_UnparseDeclarationE
	.addrsig_sym _ZN2kcL30kc_subphyla_ConsunparseclausesE
	.addrsig_sym _ZN2kcL25kc_subphyla_UnparseClauseE
	.addrsig_sym _ZN2kcL25kc_subphyla_ConsviewnamesE
	.addrsig_sym _ZN2kcL28kc_subphyla_ConsunparseitemsE
	.addrsig_sym _ZN2kcL18kc_subphyla_UnpStrE
	.addrsig_sym _ZN2kcL22kc_subphyla_UnpSubexprE
	.addrsig_sym _ZN2kcL20kc_subphyla_UnpCtextE
	.addrsig_sym _ZN2kcL19kc_subphyla_UnpBodyE
	.addrsig_sym _ZN2kcL24kc_subphyla_UViewVarDeclE
	.addrsig_sym _ZN2kcL22kc_subphyla_UnpSubTermE
	.addrsig_sym _ZN2kcL28kc_subphyla_UnpDollarvarTermE
	.addrsig_sym _ZN2kcL22kc_subphyla_UnpSubAttrE
	.addrsig_sym _ZN2kcL28kc_subphyla_UnpDollarvarAttrE
	.addrsig_sym _ZN2kcL29kc_subphyla_UnpCastedVariableE
	.addrsig_sym _ZN2kcL29kc_subphyla_ConsunpattributesE
	.addrsig_sym _ZN2kcL23kc_subphyla_YesViewnameE
	.addrsig_sym _ZN2kcL24kc_subphyla_LanguageListE
	.addrsig_sym _ZN2kcL29kc_subphyla_ConslanguagenamesE
	.addrsig_sym _ZN2kcL38kc_subphyla_ConsscopetypefilelinestackE
	.addrsig_sym _ZN2kcL29kc_subphyla_ScopeTypeFileLineE
	.addrsig_sym _ZN2kcL30kc_subphyla_ITPredefinedPhylumE
	.addrsig_sym _ZN2kcL24kc_subphyla_ITUserPhylumE
	.addrsig_sym _ZN2kcL32kc_subphyla_ITPredefinedOperatorE
	.addrsig_sym _ZN2kcL26kc_subphyla_ITUserOperatorE
	.addrsig_sym _ZN2kcL26kc_subphyla_ITUserFunctionE
	.addrsig_sym _ZN2kcL29kc_subphyla_ITPatternVariableE
	.addrsig_sym _ZN2kcL26kc_subphyla_ITLanguageNameE
	.addrsig_sym _ZN2kcL25kc_subphyla_ConsoperatorsE
	.addrsig_sym _ZN2kcL21kc_subphyla_ConsphylaE
	.addrsig_sym _ZN2kcL25kc_subphyla_ConsvariablesE
	.addrsig_sym _ZN2kcL38kc_subphyla_ConspatternrepresentationsE
	.addrsig_sym _ZN2kcL37kc_subphyla_ConspatternrepresentationE
	.addrsig_sym _ZN2kcL21kc_subphyla_PRBindingE
	.addrsig_sym _ZN2kcL26kc_subphyla_PRVarPredicateE
	.addrsig_sym _ZN2kcL27kc_subphyla_PROperPredicateE
	.addrsig_sym _ZN2kcL27kc_subphyla_PRUserPredicateE
	.addrsig_sym _ZN2kcL28kc_subphyla_PRNonLeafBindingE
	.addrsig_sym _ZN2kcL22kc_subphyla_PRWildcardE
	.addrsig_sym _ZN2kcL27kc_subphyla_PRStringLiteralE
	.addrsig_sym _ZN2kcL24kc_subphyla_PRIntLiteralE
	.addrsig_sym _ZN2kcL20kc_subphyla_ConspathE
	.addrsig_sym _ZN2kcL21kc_subphyla_ConspathsE
	.addrsig_sym _ZN2kcL27kc_subphyla_ConsargsnumbersE
	.addrsig_sym _ZN2kcL32kc_subphyla_ConsrewriterulesinfoE
	.addrsig_sym _ZN2kcL27kc_subphyla_RewriteruleinfoE
	.addrsig_sym _ZN2kcL29kc_subphyla_ConswithcasesinfoE
	.addrsig_sym _ZN2kcL24kc_subphyla_WithcaseinfoE
	.addrsig_sym _ZN2kcL32kc_subphyla_ConsrewriteviewsinfoE
	.addrsig_sym _ZN2kcL27kc_subphyla_RewriteviewinfoE
	.addrsig_sym _ZN2kcL32kc_subphyla_ConsunparseviewsinfoE
	.addrsig_sym _ZN2kcL27kc_subphyla_UnparseviewinfoE
	.addrsig_sym _ZN2kcL32kc_subphyla_ConsunparsedeclsinfoE
	.addrsig_sym _ZN2kcL27kc_subphyla_UnparsedeclinfoE
	.addrsig_sym _ZN2kcL25kc_subphyla_AcDeclarationE
	.addrsig_sym _ZN2kcL35kc_subphyla_Consac_declaration_listE
	.addrsig_sym _ZN2kcL41kc_subphyla_Consac_declaration_specifiersE
	.addrsig_sym _ZN2kcL33kc_subphyla_AcDeclSpecStorageSpecE
	.addrsig_sym _ZN2kcL30kc_subphyla_AcDeclSpecTypeSpecE
	.addrsig_sym _ZN2kcL30kc_subphyla_AcDeclSpecTypeQualE
	.addrsig_sym _ZN2kcL22kc_subphyla_AcTypeSpecE
	.addrsig_sym _ZN2kcL39kc_subphyla_Consac_init_declarator_listE
	.addrsig_sym _ZN2kcL22kc_subphyla_AcInitDeclE
	.addrsig_sym _ZN2kcL24kc_subphyla_AcDeclaratorE
	.addrsig_sym _ZN2kcL26kc_subphyla_AcDirectDeclIdE
	.addrsig_sym _ZN2kcL28kc_subphyla_AcDirectDeclPackE
	.addrsig_sym _ZN2kcL29kc_subphyla_AcDirectDeclArrayE
	.addrsig_sym _ZN2kcL29kc_subphyla_AcDirectDeclProtoE
	.addrsig_sym _ZN2kcL32kc_subphyla_AcQualifiedDeclProtoE
	.addrsig_sym _ZN2kcL24kc_subphyla_AcMemberDeclE
	.addrsig_sym _ZN2kcL30kc_subphyla_AcConvOperatorDeclE
	.addrsig_sym _ZN2kcL28kc_subphyla_AcOperatorDeclIdE
	.addrsig_sym _ZN2kcL22kc_subphyla_YespointerE
	.addrsig_sym _ZN2kcL24kc_subphyla_AcPointerNilE
	.addrsig_sym _ZN2kcL25kc_subphyla_AcPointerConsE
	.addrsig_sym _ZN2kcL26kc_subphyla_AcOperatorNameE
	.addrsig_sym _ZN2kcL44kc_subphyla_Consac_class_qualifier_help_listE
	.addrsig_sym _ZN2kcL39kc_subphyla_Consac_class_qualifier_listE
	.addrsig_sym _ZN2kcL38kc_subphyla_Consac_type_qualifier_listE
	.addrsig_sym _ZN2kcL21kc_subphyla_AcParListE
	.addrsig_sym _ZN2kcL25kc_subphyla_AcParList3DotE
	.addrsig_sym _ZN2kcL33kc_subphyla_Consac_parameter_listE
	.addrsig_sym _ZN2kcL25kc_subphyla_AcParDeclDeclE
	.addrsig_sym _ZN2kcL28kc_subphyla_AcParDeclAbsdeclE
	.addrsig_sym _ZN2kcL34kc_subphyla_Consac_identifier_listE
	.addrsig_sym _ZN2kcL28kc_subphyla_AcAbsdeclPointerE
	.addrsig_sym _ZN2kcL28kc_subphyla_AcAbsdeclDirdeclE
	.addrsig_sym _ZN2kcL44kc_subphyla_Yesac_direct_abstract_declaratorE
	.addrsig_sym _ZN2kcL28kc_subphyla_AcDirAbsdeclPackE
	.addrsig_sym _ZN2kcL29kc_subphyla_AcDirAbsdeclArrayE
	.addrsig_sym _ZN2kcL26kc_subphyla_AcDirAbsdeclFnE
	.addrsig_sym _ZN2kcL37kc_subphyla_Yesac_constant_expressionE
	.addrsig_sym _ZN2kcL23kc_subphyla_AcConstExprE
	.addrsig_sym _ZN2kcL43kc_subphyla_Consac_constant_expression_listE
	.addrsig_sym _ZN2kcL25kc_subphyla_AcYesBaseInitE
	.addrsig_sym _ZN2kcL33kc_subphyla_Consac_base_init_listE
	.addrsig_sym _ZN2kcL22kc_subphyla_AcBaseInitE
	.addrsig_sym _ZN2kcL38kc_subphyla_Consbaseclass_declarationsE
	.addrsig_sym _ZN2kcL25kc_subphyla_BaseClassDeclE
	.addrsig_sym _ZN2kcL30kc_subphyla_Consbaseclass_listE
	.addrsig_sym _ZN2kcL17kc_subphyla_FatalE
	.addrsig_sym _ZN2kcL20kc_subphyla_NonFatalE
	.addrsig_sym _ZN2kcL19kc_subphyla_WarningE
	.addrsig_sym _ZN2kcL20kc_subphyla_Problem1E
	.addrsig_sym _ZN2kcL22kc_subphyla_Problem1IDE
	.addrsig_sym _ZN2kcL23kc_subphyla_Problem1tIDE
	.addrsig_sym _ZN2kcL22kc_subphyla_Problem1weE
	.addrsig_sym _ZN2kcL25kc_subphyla_Problem1ID1IDE
	.addrsig_sym _ZN2kcL24kc_subphyla_Problem1t1IDE
	.addrsig_sym _ZN2kcL23kc_subphyla_Problem1INTE
	.addrsig_sym _ZN2kcL24kc_subphyla_Problem1int1E
	.addrsig_sym _ZN2kcL26kc_subphyla_Problem1INT1IDE
	.addrsig_sym _ZN2kcL28kc_subphyla_Problem1ID1ID1IDE
	.addrsig_sym _ZN2kcL29kc_subphyla_Problem1INT1ID1IDE
	.addrsig_sym _ZN2kcL36kc_subphyla_Problem1storageoption1IDE
	.addrsig_sym _ZN2kcL20kc_subphyla_Problem2E
	.addrsig_sym _ZN2kcL20kc_subphyla_Problem3E
	.addrsig_sym _ZN2kcL24kc_subphyla_Problem3int1E
	.addrsig_sym _ZN2kcL20kc_subphyla_Problem4E
	.addrsig_sym _ZN2kcL20kc_subphyla_Problem5E
	.addrsig_sym _ZN2kcL20kc_subphyla_Problem6E
	.addrsig_sym _ZN2kcL39kc_subphyla_ConsaddedphylumdeclarationsE
	.addrsig_sym _ZN2kcL34kc_subphyla_AddedPhylumdeclarationE
	.addrsig_sym _ZN2kcL41kc_subphyla_ConscountedphylumdeclarationsE
	.addrsig_sym _ZN2kcL36kc_subphyla_CountedPhylumdeclarationE
	.addrsig_sym _ZN2kcL30kc_subphyla_ConsbindingidmarksE
	.addrsig_sym _ZN2kcL25kc_subphyla_BindingIdMarkE
	.addrsig_sym _ZN2kcL23phylumstorageclass_uniqE
	.addrsig_sym _ZN2kcL28kc_not_uniq_static_hashtableE
	.addrsig_sym __dso_handle
	.addrsig_sym _ZN2kcL21uniq_static_hashtableE
	.addrsig_sym _ZN2kcL14kc_indentationB5cxx11E
	.addrsig_sym _ZTIN2kc20impl_abstract_phylumE
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSN2kc20impl_abstract_phylumE
	.addrsig_sym _ZTIN2kc27impl_nocasestring_NoCaseStrE
	.addrsig_sym _ZTIN2kc21impl_voidptr__VoidPtrE
	.addrsig_sym _ZTIN2kc15impl_real__RealE
	.addrsig_sym _ZTIN2kc32impl_bindingidmark_BindingIdMarkE
	.addrsig_sym _ZTSN2kc32impl_bindingidmark_BindingIdMarkE
	.addrsig_sym _ZTIN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
	.addrsig_sym _ZTSN2kc54impl_countedphylumdeclaration_CountedPhylumdeclarationE
	.addrsig_sym _ZTIN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
	.addrsig_sym _ZTSN2kc50impl_addedphylumdeclaration_AddedPhylumdeclarationE
	.addrsig_sym _ZTIN2kc21impl_problem_Problem6E
	.addrsig_sym _ZTSN2kc21impl_problem_Problem6E
	.addrsig_sym _ZTIN2kc21impl_problem_Problem5E
	.addrsig_sym _ZTSN2kc21impl_problem_Problem5E
	.addrsig_sym _ZTIN2kc21impl_problem_Problem4E
	.addrsig_sym _ZTSN2kc21impl_problem_Problem4E
	.addrsig_sym _ZTIN2kc25impl_problem_Problem3int1E
	.addrsig_sym _ZTSN2kc25impl_problem_Problem3int1E
	.addrsig_sym _ZTIN2kc21impl_problem_Problem3E
	.addrsig_sym _ZTSN2kc21impl_problem_Problem3E
	.addrsig_sym _ZTIN2kc21impl_problem_Problem2E
	.addrsig_sym _ZTSN2kc21impl_problem_Problem2E
	.addrsig_sym _ZTIN2kc37impl_problem_Problem1storageoption1IDE
	.addrsig_sym _ZTSN2kc37impl_problem_Problem1storageoption1IDE
	.addrsig_sym _ZTIN2kc30impl_problem_Problem1INT1ID1IDE
	.addrsig_sym _ZTSN2kc30impl_problem_Problem1INT1ID1IDE
	.addrsig_sym _ZTIN2kc29impl_problem_Problem1ID1ID1IDE
	.addrsig_sym _ZTSN2kc29impl_problem_Problem1ID1ID1IDE
	.addrsig_sym _ZTIN2kc27impl_problem_Problem1INT1IDE
	.addrsig_sym _ZTSN2kc27impl_problem_Problem1INT1IDE
	.addrsig_sym _ZTIN2kc25impl_problem_Problem1int1E
	.addrsig_sym _ZTSN2kc25impl_problem_Problem1int1E
	.addrsig_sym _ZTIN2kc24impl_problem_Problem1INTE
	.addrsig_sym _ZTSN2kc24impl_problem_Problem1INTE
	.addrsig_sym _ZTIN2kc25impl_problem_Problem1t1IDE
	.addrsig_sym _ZTSN2kc25impl_problem_Problem1t1IDE
	.addrsig_sym _ZTIN2kc26impl_problem_Problem1ID1IDE
	.addrsig_sym _ZTSN2kc26impl_problem_Problem1ID1IDE
	.addrsig_sym _ZTIN2kc23impl_problem_Problem1weE
	.addrsig_sym _ZTSN2kc23impl_problem_Problem1weE
	.addrsig_sym _ZTIN2kc24impl_problem_Problem1tIDE
	.addrsig_sym _ZTSN2kc24impl_problem_Problem1tIDE
	.addrsig_sym _ZTIN2kc23impl_problem_Problem1IDE
	.addrsig_sym _ZTSN2kc23impl_problem_Problem1IDE
	.addrsig_sym _ZTIN2kc21impl_problem_Problem1E
	.addrsig_sym _ZTSN2kc21impl_problem_Problem1E
	.addrsig_sym _ZTIN2kc18impl_error_WarningE
	.addrsig_sym _ZTSN2kc18impl_error_WarningE
	.addrsig_sym _ZTIN2kc10impl_errorE
	.addrsig_sym _ZTSN2kc10impl_errorE
	.addrsig_sym _ZTIN2kc19impl_error_NonFatalE
	.addrsig_sym _ZTSN2kc19impl_error_NonFatalE
	.addrsig_sym _ZTIN2kc16impl_error_FatalE
	.addrsig_sym _ZTSN2kc16impl_error_FatalE
	.addrsig_sym _ZTIN2kc33impl_baseclass_decl_BaseClassDeclE
	.addrsig_sym _ZTSN2kc33impl_baseclass_decl_BaseClassDeclE
	.addrsig_sym _ZTIN2kc28impl_ac_base_init_AcBaseInitE
	.addrsig_sym _ZTSN2kc28impl_ac_base_init_AcBaseInitE
	.addrsig_sym _ZTIN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
	.addrsig_sym _ZTSN2kc40impl_ac_opt_base_init_list_AcYesBaseInitE
	.addrsig_sym _ZTIN2kc39impl_ac_constant_expression_AcConstExprE
	.addrsig_sym _ZTSN2kc39impl_ac_constant_expression_AcConstExprE
	.addrsig_sym _ZTIN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
	.addrsig_sym _ZTSN2kc60impl_ac_constant_expression_option_Yesac_constant_expressionE
	.addrsig_sym _ZTIN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
	.addrsig_sym _ZTSN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFnE
	.addrsig_sym _ZTIN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
	.addrsig_sym _ZTSN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArrayE
	.addrsig_sym _ZTIN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
	.addrsig_sym _ZTSN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPackE
	.addrsig_sym _ZTIN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
	.addrsig_sym _ZTSN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declaratorE
	.addrsig_sym _ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
	.addrsig_sym _ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdeclE
	.addrsig_sym _ZTIN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
	.addrsig_sym _ZTSN2kc44impl_ac_abstract_declarator_AcAbsdeclPointerE
	.addrsig_sym _ZTIN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
	.addrsig_sym _ZTSN2kc46impl_ac_parameter_declaration_AcParDeclAbsdeclE
	.addrsig_sym _ZTIN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
	.addrsig_sym _ZTSN2kc43impl_ac_parameter_declaration_AcParDeclDeclE
	.addrsig_sym _ZTIN2kc41impl_ac_parameter_type_list_AcParList3DotE
	.addrsig_sym _ZTSN2kc41impl_ac_parameter_type_list_AcParList3DotE
	.addrsig_sym _ZTIN2kc37impl_ac_parameter_type_list_AcParListE
	.addrsig_sym _ZTSN2kc37impl_ac_parameter_type_list_AcParListE
	.addrsig_sym _ZTIN2kc36impl_ac_operator_name_AcOperatorNameE
	.addrsig_sym _ZTSN2kc36impl_ac_operator_name_AcOperatorNameE
	.addrsig_sym _ZTIN2kc29impl_ac_pointer_AcPointerConsE
	.addrsig_sym _ZTSN2kc29impl_ac_pointer_AcPointerConsE
	.addrsig_sym _ZTIN2kc28impl_ac_pointer_AcPointerNilE
	.addrsig_sym _ZTSN2kc28impl_ac_pointer_AcPointerNilE
	.addrsig_sym _ZTIN2kc33impl_ac_pointer_option_YespointerE
	.addrsig_sym _ZTSN2kc33impl_ac_pointer_option_YespointerE
	.addrsig_sym _ZTIN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
	.addrsig_sym _ZTSN2kc42impl_ac_direct_declarator_AcOperatorDeclIdE
	.addrsig_sym _ZTIN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
	.addrsig_sym _ZTSN2kc44impl_ac_direct_declarator_AcConvOperatorDeclE
	.addrsig_sym _ZTIN2kc38impl_ac_direct_declarator_AcMemberDeclE
	.addrsig_sym _ZTSN2kc38impl_ac_direct_declarator_AcMemberDeclE
	.addrsig_sym _ZTIN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
	.addrsig_sym _ZTSN2kc46impl_ac_direct_declarator_AcQualifiedDeclProtoE
	.addrsig_sym _ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
	.addrsig_sym _ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclProtoE
	.addrsig_sym _ZTIN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
	.addrsig_sym _ZTSN2kc43impl_ac_direct_declarator_AcDirectDeclArrayE
	.addrsig_sym _ZTIN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
	.addrsig_sym _ZTSN2kc42impl_ac_direct_declarator_AcDirectDeclPackE
	.addrsig_sym _ZTIN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
	.addrsig_sym _ZTSN2kc40impl_ac_direct_declarator_AcDirectDeclIdE
	.addrsig_sym _ZTIN2kc31impl_ac_declarator_AcDeclaratorE
	.addrsig_sym _ZTSN2kc31impl_ac_declarator_AcDeclaratorE
	.addrsig_sym _ZTIN2kc34impl_ac_init_declarator_AcInitDeclE
	.addrsig_sym _ZTSN2kc34impl_ac_init_declarator_AcInitDeclE
	.addrsig_sym _ZTIN2kc33impl_ac_type_specifier_AcTypeSpecE
	.addrsig_sym _ZTSN2kc33impl_ac_type_specifier_AcTypeSpecE
	.addrsig_sym _ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
	.addrsig_sym _ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQualE
	.addrsig_sym _ZTIN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
	.addrsig_sym _ZTSN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpecE
	.addrsig_sym _ZTIN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
	.addrsig_sym _ZTSN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpecE
	.addrsig_sym _ZTIN2kc33impl_ac_declaration_AcDeclarationE
	.addrsig_sym _ZTSN2kc33impl_ac_declaration_AcDeclarationE
	.addrsig_sym _ZTIN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
	.addrsig_sym _ZTSN2kc36impl_unparsedeclinfo_UnparsedeclinfoE
	.addrsig_sym _ZTIN2kc36impl_unparseviewinfo_UnparseviewinfoE
	.addrsig_sym _ZTSN2kc36impl_unparseviewinfo_UnparseviewinfoE
	.addrsig_sym _ZTIN2kc36impl_rewriteviewinfo_RewriteviewinfoE
	.addrsig_sym _ZTSN2kc36impl_rewriteviewinfo_RewriteviewinfoE
	.addrsig_sym _ZTIN2kc30impl_withcaseinfo_WithcaseinfoE
	.addrsig_sym _ZTSN2kc30impl_withcaseinfo_WithcaseinfoE
	.addrsig_sym _ZTIN2kc36impl_rewriteruleinfo_RewriteruleinfoE
	.addrsig_sym _ZTSN2kc36impl_rewriteruleinfo_RewriteruleinfoE
	.addrsig_sym _ZTIN2kc44impl_elem_patternrepresentation_PRIntLiteralE
	.addrsig_sym _ZTSN2kc44impl_elem_patternrepresentation_PRIntLiteralE
	.addrsig_sym _ZTIN2kc47impl_elem_patternrepresentation_PRStringLiteralE
	.addrsig_sym _ZTSN2kc47impl_elem_patternrepresentation_PRStringLiteralE
	.addrsig_sym _ZTIN2kc42impl_elem_patternrepresentation_PRWildcardE
	.addrsig_sym _ZTSN2kc42impl_elem_patternrepresentation_PRWildcardE
	.addrsig_sym _ZTIN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
	.addrsig_sym _ZTSN2kc48impl_elem_patternrepresentation_PRNonLeafBindingE
	.addrsig_sym _ZTIN2kc47impl_elem_patternrepresentation_PRUserPredicateE
	.addrsig_sym _ZTSN2kc47impl_elem_patternrepresentation_PRUserPredicateE
	.addrsig_sym _ZTIN2kc47impl_elem_patternrepresentation_PROperPredicateE
	.addrsig_sym _ZTSN2kc47impl_elem_patternrepresentation_PROperPredicateE
	.addrsig_sym _ZTIN2kc46impl_elem_patternrepresentation_PRVarPredicateE
	.addrsig_sym _ZTSN2kc46impl_elem_patternrepresentation_PRVarPredicateE
	.addrsig_sym _ZTIN2kc41impl_elem_patternrepresentation_PRBindingE
	.addrsig_sym _ZTSN2kc41impl_elem_patternrepresentation_PRBindingE
	.addrsig_sym _ZTIN2kc26impl_IDtype_ITLanguageNameE
	.addrsig_sym _ZTSN2kc26impl_IDtype_ITLanguageNameE
	.addrsig_sym _ZTIN2kc29impl_IDtype_ITPatternVariableE
	.addrsig_sym _ZTSN2kc29impl_IDtype_ITPatternVariableE
	.addrsig_sym _ZTIN2kc26impl_IDtype_ITUserFunctionE
	.addrsig_sym _ZTSN2kc26impl_IDtype_ITUserFunctionE
	.addrsig_sym _ZTIN2kc26impl_IDtype_ITUserOperatorE
	.addrsig_sym _ZTSN2kc26impl_IDtype_ITUserOperatorE
	.addrsig_sym _ZTIN2kc32impl_IDtype_ITPredefinedOperatorE
	.addrsig_sym _ZTSN2kc32impl_IDtype_ITPredefinedOperatorE
	.addrsig_sym _ZTIN2kc24impl_IDtype_ITUserPhylumE
	.addrsig_sym _ZTSN2kc24impl_IDtype_ITUserPhylumE
	.addrsig_sym _ZTIN2kc30impl_IDtype_ITPredefinedPhylumE
	.addrsig_sym _ZTSN2kc30impl_IDtype_ITPredefinedPhylumE
	.addrsig_sym _ZTIN2kc40impl_scopetypefileline_ScopeTypeFileLineE
	.addrsig_sym _ZTSN2kc40impl_scopetypefileline_ScopeTypeFileLineE
	.addrsig_sym _ZTIN2kc32impl_languageoption_LanguageListE
	.addrsig_sym _ZTSN2kc32impl_languageoption_LanguageListE
	.addrsig_sym _ZTIN2kc31impl_viewnameoption_YesViewnameE
	.addrsig_sym _ZTSN2kc31impl_viewnameoption_YesViewnameE
	.addrsig_sym _ZTIN2kc33impl_unpsubterm_UnpCastedVariableE
	.addrsig_sym _ZTSN2kc33impl_unpsubterm_UnpCastedVariableE
	.addrsig_sym _ZTIN2kc32impl_unpsubterm_UnpDollarvarAttrE
	.addrsig_sym _ZTSN2kc32impl_unpsubterm_UnpDollarvarAttrE
	.addrsig_sym _ZTIN2kc26impl_unpsubterm_UnpSubAttrE
	.addrsig_sym _ZTSN2kc26impl_unpsubterm_UnpSubAttrE
	.addrsig_sym _ZTIN2kc32impl_unpsubterm_UnpDollarvarTermE
	.addrsig_sym _ZTSN2kc32impl_unpsubterm_UnpDollarvarTermE
	.addrsig_sym _ZTIN2kc26impl_unpsubterm_UnpSubTermE
	.addrsig_sym _ZTSN2kc26impl_unpsubterm_UnpSubTermE
	.addrsig_sym _ZTIN2kc29impl_unparseitem_UViewVarDeclE
	.addrsig_sym _ZTSN2kc29impl_unparseitem_UViewVarDeclE
	.addrsig_sym _ZTIN2kc24impl_unparseitem_UnpBodyE
	.addrsig_sym _ZTSN2kc24impl_unparseitem_UnpBodyE
	.addrsig_sym _ZTIN2kc25impl_unparseitem_UnpCtextE
	.addrsig_sym _ZTSN2kc25impl_unparseitem_UnpCtextE
	.addrsig_sym _ZTIN2kc27impl_unparseitem_UnpSubexprE
	.addrsig_sym _ZTSN2kc27impl_unparseitem_UnpSubexprE
	.addrsig_sym _ZTIN2kc23impl_unparseitem_UnpStrE
	.addrsig_sym _ZTSN2kc23impl_unparseitem_UnpStrE
	.addrsig_sym _ZTIN2kc32impl_unparseclause_UnparseClauseE
	.addrsig_sym _ZTSN2kc32impl_unparseclause_UnparseClauseE
	.addrsig_sym _ZTIN2kc42impl_unparsedeclaration_UnparseDeclarationE
	.addrsig_sym _ZTSN2kc42impl_unparsedeclaration_UnparseDeclarationE
	.addrsig_sym _ZTIN2kc22impl_withcase_WithcaseE
	.addrsig_sym _ZTSN2kc22impl_withcase_WithcaseE
	.addrsig_sym _ZTIN2kc33impl_withexpression_WECexpressionE
	.addrsig_sym _ZTSN2kc33impl_withexpression_WECexpressionE
	.addrsig_sym _ZTIN2kc30impl_withexpression_WEVariableE
	.addrsig_sym _ZTSN2kc30impl_withexpression_WEVariableE
	.addrsig_sym _ZTIN2kc33impl_contextinfo_InForeachContextE
	.addrsig_sym _ZTSN2kc33impl_contextinfo_InForeachContextE
	.addrsig_sym _ZTIN2kc31impl_foreach_after_ForeachAfterE
	.addrsig_sym _ZTSN2kc31impl_foreach_after_ForeachAfterE
	.addrsig_sym _ZTIN2kc35impl_Ctext_elem_CTextWithexpressionE
	.addrsig_sym _ZTSN2kc35impl_Ctext_elem_CTextWithexpressionE
	.addrsig_sym _ZTIN2kc38impl_Ctext_elem_CTextForeachexpressionE
	.addrsig_sym _ZTSN2kc38impl_Ctext_elem_CTextForeachexpressionE
	.addrsig_sym _ZTIN2kc26impl_Ctext_elem_CTextCbodyE
	.addrsig_sym _ZTSN2kc26impl_Ctext_elem_CTextCbodyE
	.addrsig_sym _ZTIN2kc34impl_Ctext_elem_CTextCexpressionSQE
	.addrsig_sym _ZTSN2kc34impl_Ctext_elem_CTextCexpressionSQE
	.addrsig_sym _ZTIN2kc34impl_Ctext_elem_CTextCexpressionDQE
	.addrsig_sym _ZTSN2kc34impl_Ctext_elem_CTextCexpressionDQE
	.addrsig_sym _ZTIN2kc23impl_Ctext_elem_CTextNlE
	.addrsig_sym _ZTSN2kc23impl_Ctext_elem_CTextNlE
	.addrsig_sym _ZTIN2kc30impl_Ctext_elem_CTextDollarVarE
	.addrsig_sym _ZTSN2kc30impl_Ctext_elem_CTextDollarVarE
	.addrsig_sym _ZTIN2kc25impl_Ctext_elem_CTextLineE
	.addrsig_sym _ZTSN2kc25impl_Ctext_elem_CTextLineE
	.addrsig_sym _ZTIN2kc21impl_fnclass_StaticFnE
	.addrsig_sym _ZTSN2kc21impl_fnclass_StaticFnE
	.addrsig_sym _ZTIN2kc38impl_fndeclaration_AcMemberDeclarationE
	.addrsig_sym _ZTSN2kc38impl_fndeclaration_AcMemberDeclarationE
	.addrsig_sym _ZTIN2kc34impl_fndeclaration_FnAcDeclarationE
	.addrsig_sym _ZTSN2kc34impl_fndeclaration_FnAcDeclarationE
	.addrsig_sym _ZTIN2kc18impl_fnfile_FnFileE
	.addrsig_sym _ZTSN2kc18impl_fnfile_FnFileE
	.addrsig_sym _ZTIN2kc21impl_term_TIntLiteralE
	.addrsig_sym _ZTSN2kc21impl_term_TIntLiteralE
	.addrsig_sym _ZTIN2kc24impl_term_TStringLiteralE
	.addrsig_sym _ZTSN2kc24impl_term_TStringLiteralE
	.addrsig_sym _ZTIN2kc16impl_term_TCTermE
	.addrsig_sym _ZTSN2kc16impl_term_TCTermE
	.addrsig_sym _ZTIN2kc23impl_term_TMemberVarDotE
	.addrsig_sym _ZTSN2kc23impl_term_TMemberVarDotE
	.addrsig_sym _ZTIN2kc20impl_term_TMemberVarE
	.addrsig_sym _ZTSN2kc20impl_term_TMemberVarE
	.addrsig_sym _ZTIN2kc20impl_term_TMethodDotE
	.addrsig_sym _ZTSN2kc20impl_term_TMethodDotE
	.addrsig_sym _ZTIN2kc17impl_term_TMethodE
	.addrsig_sym _ZTSN2kc17impl_term_TMethodE
	.addrsig_sym _ZTIN2kc19impl_term_TOperatorE
	.addrsig_sym _ZTSN2kc19impl_term_TOperatorE
	.addrsig_sym _ZTIN2kc19impl_term_TVariableE
	.addrsig_sym _ZTSN2kc19impl_term_TVariableE
	.addrsig_sym _ZTIN2kc24impl_pattern_PIntLiteralE
	.addrsig_sym _ZTSN2kc24impl_pattern_PIntLiteralE
	.addrsig_sym _ZTIN2kc27impl_pattern_PStringLiteralE
	.addrsig_sym _ZTSN2kc27impl_pattern_PStringLiteralE
	.addrsig_sym _ZTIN2kc29impl_pattern_PNonLeafVariableE
	.addrsig_sym _ZTSN2kc29impl_pattern_PNonLeafVariableE
	.addrsig_sym _ZTIN2kc22impl_pattern_POperatorE
	.addrsig_sym _ZTSN2kc22impl_pattern_POperatorE
	.addrsig_sym _ZTIN2kc22impl_pattern_PVariableE
	.addrsig_sym _ZTSN2kc22impl_pattern_PVariableE
	.addrsig_sym _ZTIN2kc29impl_outmostpattern_OPDefaultE
	.addrsig_sym _ZTSN2kc29impl_outmostpattern_OPDefaultE
	.addrsig_sym _ZTIN2kc30impl_outmostpattern_OPWildcardE
	.addrsig_sym _ZTSN2kc30impl_outmostpattern_OPWildcardE
	.addrsig_sym _ZTIN2kc37impl_outmostpattern_OPNonLeafVariableE
	.addrsig_sym _ZTSN2kc37impl_outmostpattern_OPNonLeafVariableE
	.addrsig_sym _ZTIN2kc30impl_outmostpattern_OPOperatorE
	.addrsig_sym _ZTSN2kc30impl_outmostpattern_OPOperatorE
	.addrsig_sym _ZTIN2kc38impl_outmostpattern_OPOperatorWildcardE
	.addrsig_sym _ZTSN2kc38impl_outmostpattern_OPOperatorWildcardE
	.addrsig_sym _ZTIN2kc46impl_patternchainitem_PatternchainitemDollaridE
	.addrsig_sym _ZTSN2kc46impl_patternchainitem_PatternchainitemDollaridE
	.addrsig_sym _ZTIN2kc43impl_patternchainitem_PatternchainitemGroupE
	.addrsig_sym _ZTSN2kc43impl_patternchainitem_PatternchainitemGroupE
	.addrsig_sym _ZTIN2kc45impl_patternchainitem_PatternchainitemOutmostE
	.addrsig_sym _ZTSN2kc45impl_patternchainitem_PatternchainitemOutmostE
	.addrsig_sym _ZTIN2kc32impl_rewriteclause_RewriteClauseE
	.addrsig_sym _ZTSN2kc32impl_rewriteclause_RewriteClauseE
	.addrsig_sym _ZTIN2kc32impl_rwdeclaration_RwDeclarationE
	.addrsig_sym _ZTSN2kc32impl_rwdeclaration_RwDeclarationE
	.addrsig_sym _ZTIN2kc42impl_includedeclaration_IncludeDeclarationE
	.addrsig_sym _ZTSN2kc42impl_includedeclaration_IncludeDeclarationE
	.addrsig_sym _ZTIN2kc28impl_includefile_IncludeFileE
	.addrsig_sym _ZTSN2kc28impl_includefile_IncludeFileE
	.addrsig_sym _ZTIN2kc32impl_idCexpression_IdCexpressionE
	.addrsig_sym _ZTSN2kc32impl_idCexpression_IdCexpressionE
	.addrsig_sym _ZTIN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
	.addrsig_sym _ZTSN2kc41impl_CexpressionSQ_elem_CExpressionSQPartE
	.addrsig_sym _ZTIN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
	.addrsig_sym _ZTSN2kc41impl_CexpressionDQ_elem_CExpressionDQPartE
	.addrsig_sym _ZTIN2kc38impl_Cexpression_elem_CExpressionArrayE
	.addrsig_sym _ZTSN2kc38impl_Cexpression_elem_CExpressionArrayE
	.addrsig_sym _ZTIN2kc37impl_Cexpression_elem_CExpressionPackE
	.addrsig_sym _ZTSN2kc37impl_Cexpression_elem_CExpressionPackE
	.addrsig_sym _ZTIN2kc35impl_Cexpression_elem_CExpressionSQE
	.addrsig_sym _ZTSN2kc35impl_Cexpression_elem_CExpressionSQE
	.addrsig_sym _ZTIN2kc35impl_Cexpression_elem_CExpressionDQE
	.addrsig_sym _ZTSN2kc35impl_Cexpression_elem_CExpressionDQE
	.addrsig_sym _ZTIN2kc42impl_Cexpression_elem_CExpressionDollarvarE
	.addrsig_sym _ZTSN2kc42impl_Cexpression_elem_CExpressionDollarvarE
	.addrsig_sym _ZTIN2kc37impl_Cexpression_elem_CExpressionPartE
	.addrsig_sym _ZTSN2kc37impl_Cexpression_elem_CExpressionPartE
	.addrsig_sym _ZTIN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
	.addrsig_sym _ZTSN2kc64impl_attribute_initialisation_option_Yesattribute_initialisationE
	.addrsig_sym _ZTIN2kc24impl_attribute_AttributeE
	.addrsig_sym _ZTSN2kc24impl_attribute_AttributeE
	.addrsig_sym _ZTIN2kc29impl_Ccode_option_CcodeOptionE
	.addrsig_sym _ZTSN2kc29impl_Ccode_option_CcodeOptionE
	.addrsig_sym _ZTIN2kc22impl_argument_ArgumentE
	.addrsig_sym _ZTSN2kc22impl_argument_ArgumentE
	.addrsig_sym _ZTIN2kc13impl_argumentE
	.addrsig_sym _ZTSN2kc13impl_argumentE
	.addrsig_sym _ZTIN2kc28impl_alternative_AlternativeE
	.addrsig_sym _ZTSN2kc28impl_alternative_AlternativeE
	.addrsig_sym _ZTIN2kc43impl_productionblock_PredefinedAlternativesE
	.addrsig_sym _ZTSN2kc43impl_productionblock_PredefinedAlternativesE
	.addrsig_sym _ZTIN2kc40impl_productionblock_NonlistAlternativesE
	.addrsig_sym _ZTSN2kc40impl_productionblock_NonlistAlternativesE
	.addrsig_sym _ZTIN2kc37impl_productionblock_ListAlternativesE
	.addrsig_sym _ZTSN2kc37impl_productionblock_ListAlternativesE
	.addrsig_sym _ZTIN2kc40impl_storageoption_PositiveStorageOptionE
	.addrsig_sym _ZTSN2kc40impl_storageoption_PositiveStorageOptionE
	.addrsig_sym _ZTIN2kc40impl_storageoption_NegativeStorageOptionE
	.addrsig_sym _ZTSN2kc40impl_storageoption_NegativeStorageOptionE
	.addrsig_sym _ZTIN2kc40impl_phylumdeclaration_PhylumDeclarationE
	.addrsig_sym _ZTSN2kc40impl_phylumdeclaration_PhylumDeclarationE
	.addrsig_sym _ZTIN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
	.addrsig_sym _ZTSN2kc46impl_phylumdeclarationsroot_PhylumDeclarationsE
	.addrsig_sym _ZTIN2kc27impl_phylumdeclarationsrootE
	.addrsig_sym _ZTSN2kc27impl_phylumdeclarationsrootE
	.addrsig_sym _ZTIN2kc18impl_STRING_StringE
	.addrsig_sym _ZTSN2kc18impl_STRING_StringE
	.addrsig_sym _ZTIN2kc12impl_INT_IntE
	.addrsig_sym _ZTSN2kc12impl_INT_IntE
	.addrsig_sym _ZTIN2kc10impl_ID_IdE
	.addrsig_sym _ZTSN2kc10impl_ID_IdE
	.addrsig_sym _ZTIN2kc15impl_uniqID_StrE
	.addrsig_sym _ZTSN2kc15impl_uniqID_StrE
	.addrsig_sym _ZN9__gnu_cxx21_Hashtable_prime_listImE16__stl_prime_listE
