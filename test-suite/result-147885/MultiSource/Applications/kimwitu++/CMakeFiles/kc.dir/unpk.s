	.file	"unpk.cc"
	.section	.text._ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev,"axG",@progbits,_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev,comdat
	.weak	_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev # -- Begin function _ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev
	.p2align	5
	.type	_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev,@function
_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev: # @_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB0_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB0_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB0_3:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB0_3
# %bb.4:                                # %_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB0_5:                                # %_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB0_6:                                # %_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EED2Ev.exit
	ret
.Lfunc_end0:
	.size	_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev, .Lfunc_end0-_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev,"axG",@progbits,_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev,comdat
	.weak	_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev # -- Begin function _ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev
	.p2align	5
	.type	_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev,@function
_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev: # @_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB1_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB1_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB1_3:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB1_3
# %bb.4:                                # %_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB1_5:                                # %_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB1_6:                                # %_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EED2Ev.exit
	ret
.Lfunc_end1:
	.size	_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev, .Lfunc_end1-_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5stackIiSt5dequeIiSaIiEEED2Ev,"axG",@progbits,_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev,comdat
	.weak	_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev # -- Begin function _ZNSt5stackIiSt5dequeIiSaIiEEED2Ev
	.p2align	5
	.type	_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev,@function
_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev:     # @_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB2_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB2_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB2_3:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB2_3
# %bb.4:                                # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB2_5:                                # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB2_6:                                # %_ZNSt5dequeIiSaIiEED2Ev.exit
	ret
.Lfunc_end2:
	.size	_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev, .Lfunc_end2-_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev,"axG",@progbits,_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev,comdat
	.weak	_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev # -- Begin function _ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev
	.p2align	5
	.type	_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev,@function
_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev: # @_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB3_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB3_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB3_3:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB3_3
# %bb.4:                                # %_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB3_5:                                # %_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB3_6:                                # %_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EED2Ev.exit
	ret
.Lfunc_end3:
	.size	_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev, .Lfunc_end3-_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev,"axG",@progbits,_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev,comdat
	.weak	_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev # -- Begin function _ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev
	.p2align	5
	.type	_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev,@function
_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev: # @_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB4_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB4_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB4_3:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB4_3
# %bb.4:                                # %_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB4_5:                                # %_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB4_6:                                # %_ZNSt5dequeIPN2kc7impl_IDESaIS2_EED2Ev.exit
	ret
.Lfunc_end4:
	.size	_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev, .Lfunc_end4-_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev,"axG",@progbits,_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev,comdat
	.weak	_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev # -- Begin function _ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev
	.p2align	5
	.type	_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev,@function
_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev: # @_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB5_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB5_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB5_3:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB5_3
# %bb.4:                                # %_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB5_5:                                # %_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB5_6:                                # %_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EED2Ev.exit
	ret
.Lfunc_end5:
	.size	_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev, .Lfunc_end5-_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev,"axG",@progbits,_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev,comdat
	.weak	_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev # -- Begin function _ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev
	.p2align	5
	.type	_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev,@function
_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev: # @_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB6_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB6_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB6_3:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB6_3
# %bb.4:                                # %_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB6_5:                                # %_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB6_6:                                # %_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EED2Ev.exit
	ret
.Lfunc_end6:
	.size	_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev, .Lfunc_end6-_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev,"axG",@progbits,_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev,comdat
	.weak	_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev # -- Begin function _ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev
	.p2align	5
	.type	_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev,@function
_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev: # @_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB7_6
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$fp, $a0, 72
	ld.d	$a1, $a0, 40
	addi.d	$a3, $fp, 8
	bgeu	$a1, $a3, .LBB7_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	move	$s0, $a0
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB7_3:                                # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $fp, .LBB7_3
# %bb.4:                                # %_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.loopexit.i.i
	move	$a0, $s0
	ld.d	$a2, $s0, 0
.LBB7_5:                                # %_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i.i
	ld.d	$a0, $a0, 8
	slli.d	$a1, $a0, 3
	move	$a0, $a2
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB7_6:                                # %_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EED2Ev.exit
	ret
.Lfunc_end7:
	.size	_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev, .Lfunc_end7-_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_Z16covariant_choicePN2kc7impl_IDEPKcS3_S3_S3_RNS_21printer_functor_classERNS_11uview_classE # -- Begin function _Z16covariant_choicePN2kc7impl_IDEPKcS3_S3_S3_RNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_Z16covariant_choicePN2kc7impl_IDEPKcS3_S3_S3_RNS_21printer_functor_classERNS_11uview_classE,@function
_Z16covariant_choicePN2kc7impl_IDEPKcS3_S3_S3_RNS_21printer_functor_classERNS_11uview_classE: # @_Z16covariant_choicePN2kc7impl_IDEPKcS3_S3_S3_RNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a5
	ld.d	$a5, $a5, 0
	ld.d	$a5, $a5, 0
	move	$s0, $a6
	move	$s1, $a4
	move	$s3, $a3
	move	$s4, $a2
	move	$s5, $a1
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $fp
	move	$a2, $a6
	jirl	$ra, $a5, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s6, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s6, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB8_2
# %bb.1:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.322)
	addi.d	$a1, $a0, %pc_lo12(.L.str.322)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 74
.LBB8_2:
	ori	$a1, $zero, 110
	beq	$a0, $a1, .LBB8_5
# %bb.3:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	beqz	$s4, .LBB8_5
# %bb.4:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB8_5:
	ld.bu	$a0, $s6, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB8_7
# %bb.6:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.323)
	addi.d	$a1, $a0, %pc_lo12(.L.str.323)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 74
.LBB8_7:
	ori	$a1, $zero, 121
	beq	$a0, $a1, .LBB8_10
# %bb.8:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	beqz	$s1, .LBB8_10
# %bb.9:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB8_10:
	ld.bu	$a0, $s6, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB8_12
# %bb.11:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.324)
	addi.d	$a1, $a0, %pc_lo12(.L.str.324)
	move	$a0, $fp
	move	$a2, $s0
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.LBB8_12:
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end8:
	.size	_Z16covariant_choicePN2kc7impl_IDEPKcS3_S3_S3_RNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end8-_Z16covariant_choicePN2kc7impl_IDEPKcS3_S3_S3_RNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev,comdat
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev
	.p2align	5
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 16
.Ltmp0:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E)
	jirl	$ra, $ra, 0
.Ltmp1:
# %bb.1:                                # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EED2Ev.exit
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB9_2:
.Ltmp2:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end9:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev, .Lfunc_end9-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev,"aG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table9:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 1 <<
	.uleb128 .Ltmp1-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp1
	.uleb128 .Ltmp2-.Lfunc_begin0           #     jumps to .Ltmp2
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Lfunc_end9-.Ltmp1             #   Call between .Ltmp1 and .Lfunc_end9
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end0:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2kc20impl_abstract_phylum7unparseEPFvPKcRNS_11uview_classEES4_ # -- Begin function _ZN2kc20impl_abstract_phylum7unparseEPFvPKcRNS_11uview_classEES4_
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum7unparseEPFvPKcRNS_11uview_classEES4_,@function
_ZN2kc20impl_abstract_phylum7unparseEPFvPKcRNS_11uview_classEES4_: # @_ZN2kc20impl_abstract_phylum7unparseEPFvPKcRNS_11uview_classEES4_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a3, $a0, 0
	pcalau12i	$a4, %pc_hi20(_ZTVN2kc32printer_functor_function_wrapperE+16)
	ld.d	$a3, $a3, 72
	addi.d	$a4, $a4, %pc_lo12(_ZTVN2kc32printer_functor_function_wrapperE+16)
	st.d	$a4, $sp, 8
	st.d	$a1, $sp, 16
	addi.d	$a1, $sp, 8
	jirl	$ra, $a3, 0
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end10:
	.size	_ZN2kc20impl_abstract_phylum7unparseEPFvPKcRNS_11uview_classEES4_, .Lfunc_end10-_ZN2kc20impl_abstract_phylum7unparseEPFvPKcRNS_11uview_classEES4_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7unparseEPNS_20impl_abstract_phylumERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc7unparseEPNS_20impl_abstract_phylumERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc7unparseEPNS_20impl_abstract_phylumERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc7unparseEPNS_20impl_abstract_phylumERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc7unparseEPNS_20impl_abstract_phylumERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end11:
	.size	_ZN2kc7unparseEPNS_20impl_abstract_phylumERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end11-_ZN2kc7unparseEPNS_20impl_abstract_phylumERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7unparseEPvRNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc7unparseEPvRNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc7unparseEPvRNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc7unparseEPvRNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc7unparseEPvRNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcalau12i	$a0, %pc_hi20(.L.str.329)
	addi.d	$a0, $a0, %pc_lo12(.L.str.329)
	pcalau12i	$a1, %pc_hi20(.L.str.330)
	addi.d	$a2, $a1, %pc_lo12(.L.str.330)
	ori	$a1, $zero, 556
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
.Lfunc_end12:
	.size	_ZN2kc7unparseEPvRNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end12-_ZN2kc7unparseEPvRNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7unparseEiRNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc7unparseEiRNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc7unparseEiRNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc7unparseEiRNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc7unparseEiRNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a2
	move	$s0, $a1
	move	$a2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
.Lfunc_end13:
	.size	_ZN2kc7unparseEiRNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end13-_ZN2kc7unparseEiRNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7unparseEdRNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc7unparseEdRNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc7unparseEdRNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc7unparseEdRNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc7unparseEdRNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	move	$s0, $a0
	movfr2gr.d	$a2, $fa0
	pcalau12i	$a0, %pc_hi20(.L.str.332)
	addi.d	$a1, $a0, %pc_lo12(.L.str.332)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
.Lfunc_end14:
	.size	_ZN2kc7unparseEdRNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end14-_ZN2kc7unparseEdRNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7unparseEPcRNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc7unparseEPcRNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc7unparseEPcRNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc7unparseEPcRNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc7unparseEPcRNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a1, 0
	ld.d	$a4, $a3, 0
	move	$a3, $a0
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.Lfunc_end15:
	.size	_ZN2kc7unparseEPcRNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end15-_ZN2kc7unparseEPcRNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a3, $a1
	ld.d	$a4, $a1, 0
	ld.d	$a1, $a0, 0
	ld.d	$a4, $a4, 0
	move	$a0, $a3
	jr	$a4
.Lfunc_end16:
	.size	_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end16-_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 0
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a1, %got_pc_hi20(_ZN2kc13operator_infoE)
	ld.d	$a1, $a1, %got_pc_lo12(_ZN2kc13operator_infoE)
	bstrpick.d	$a0, $a0, 31, 0
	ori	$a2, $zero, 56
	mul.d	$a0, $a0, $a2
	add.d	$a0, $a1, $a0
	ld.w	$s3, $a0, 8
	blez	$s3, .LBB17_3
# %bb.1:                                # %.lr.ph.preheader
	move	$s2, $zero
	.p2align	4, , 16
.LBB17_2:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	move	$a1, $s2
	jirl	$ra, $a2, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	addi.w	$s2, $s2, 1
	bne	$s3, $s2, .LBB17_2
.LBB17_3:                               # %._crit_edge
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end17:
	.size	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end17-_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_casestring__Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc20impl_casestring__Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc20impl_casestring__Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc20impl_casestring__Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc20impl_casestring__Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 8
	pcaddu18i	$t8, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jr	$t8
.Lfunc_end18:
	.size	_ZN2kc20impl_casestring__Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end18-_ZN2kc20impl_casestring__Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_nocasestring_NoCaseStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_nocasestring_NoCaseStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_nocasestring_NoCaseStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_nocasestring_NoCaseStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_nocasestring_NoCaseStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 8
	pcaddu18i	$t8, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jr	$t8
.Lfunc_end19:
	.size	_ZN2kc27impl_nocasestring_NoCaseStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end19-_ZN2kc27impl_nocasestring_NoCaseStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_integer__Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_integer__Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_integer__Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_integer__Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_integer__Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.w	$a3, $a0, 8
	move	$fp, $a2
	move	$s0, $a1
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	move	$a2, $a3
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
.Lfunc_end20:
	.size	_ZN2kc17impl_integer__Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end20-_ZN2kc17impl_integer__Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15impl_real__Real10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc15impl_real__Real10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc15impl_real__Real10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc15impl_real__Real10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc15impl_real__Real10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$a3, $a0, 8
	move	$fp, $a2
	move	$s0, $a1
	pcalau12i	$a0, %pc_hi20(.L.str.332)
	addi.d	$a1, $a0, %pc_lo12(.L.str.332)
	addi.d	$a0, $sp, 0
	move	$a2, $a3
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
.Lfunc_end21:
	.size	_ZN2kc15impl_real__Real10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end21-_ZN2kc15impl_real__Real10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_voidptr__VoidPtr10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_voidptr__VoidPtr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_voidptr__VoidPtr10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_voidptr__VoidPtr10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_voidptr__VoidPtr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	pcalau12i	$a0, %pc_hi20(.L.str.329)
	addi.d	$a0, $a0, %pc_lo12(.L.str.329)
	pcalau12i	$a1, %pc_hi20(.L.str.330)
	addi.d	$a2, $a1, %pc_lo12(.L.str.330)
	ori	$a1, $zero, 556
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
.Lfunc_end22:
	.size	_ZN2kc21impl_voidptr__VoidPtr10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end22-_ZN2kc21impl_voidptr__VoidPtr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15impl_uniqID_Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc15impl_uniqID_Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc15impl_uniqID_Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc15impl_uniqID_Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc15impl_uniqID_Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ld.d	$a4, $a0, 40
	addi.d	$a3, $a3, -3
	sltui	$a3, $a3, 1
	masknez	$a0, $a0, $a3
	maskeqz	$a4, $a4, $a3
	or	$a0, $a4, $a0
	ori	$a4, $zero, 80
	masknez	$a4, $a4, $a3
	ld.d	$a5, $a0, 0
	ori	$a6, $zero, 72
	maskeqz	$a3, $a6, $a3
	or	$a3, $a3, $a4
	ldx.d	$a3, $a5, $a3
	jr	$a3
.Lfunc_end23:
	.size	_ZN2kc15impl_uniqID_Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end23-_ZN2kc15impl_uniqID_Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_ID_Id10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc10impl_ID_Id10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc10impl_ID_Id10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc10impl_ID_Id10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc10impl_ID_Id10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 131
	move	$s0, $a1
	blt	$a3, $a2, .LBB24_8
# %bb.1:
	ori	$a1, $zero, 3
	beq	$a2, $a1, .LBB24_14
# %bb.2:
	ori	$a1, $zero, 4
	beq	$a2, $a1, .LBB24_16
# %bb.3:
	ori	$a1, $zero, 111
	bne	$a2, $a1, .LBB24_13
# %bb.4:
	ld.d	$a1, $a0, 40
	ld.d	$a2, $a1, 0
	ld.d	$a2, $a2, 0
	move	$s2, $a0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	ori	$a2, $zero, 6
	move	$a1, $a0
	move	$a0, $s2
	bne	$a1, $a2, .LBB24_13
# %bb.5:
	ld.d	$s1, $a0, 40
	ld.d	$s3, $s1, 40
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB24_26
# %bb.6:
	ld.d	$a0, $s3, 8
	pcalau12i	$a1, %pc_hi20(.L.str.337)
	addi.d	$a1, $a1, %pc_lo12(.L.str.337)
	ori	$a2, $zero, 9
	pcaddu18i	$ra, %call36(strncmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB24_26
# %bb.7:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.333)
	addi.d	$a1, $a0, %pc_lo12(.L.str.333)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ori	$a1, $zero, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc18f_operatorofphylumEPNS_7impl_IDEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB24_23
.LBB24_8:
	ori	$a1, $zero, 132
	beq	$a2, $a1, .LBB24_15
# %bb.9:
	ori	$a1, $zero, 151
	beq	$a2, $a1, .LBB24_19
# %bb.10:
	ori	$a1, $zero, 152
	bne	$a2, $a1, .LBB24_13
# %bb.11:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 40
	ld.d	$a3, $a1, 0
.LBB24_12:
	pcalau12i	$a0, %pc_hi20(.L.str.333)
	addi.d	$a1, $a0, %pc_lo12(.L.str.333)
	b	.LBB24_21
.LBB24_13:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
	b	.LBB24_23
.LBB24_14:
	ld.d	$s1, $a0, 40
	b	.LBB24_17
.LBB24_15:
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.335)
	addi.d	$a1, $a1, %pc_lo12(.L.str.335)
	move	$s1, $a0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10base_uviewE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10base_uviewE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.336)
	addi.d	$a1, $a0, %pc_lo12(.L.str.336)
	move	$a0, $s0
	b	.LBB24_24
.LBB24_16:
	ld.d	$s1, $a0, 40
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB24_17:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s1, 16
	beqz	$a0, .LBB24_25
# %bb.18:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.339)
	addi.d	$a1, $a0, %pc_lo12(.L.str.339)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.340)
	addi.d	$a1, $a0, %pc_lo12(.L.str.340)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB24_25
.LBB24_19:
	ld.d	$s1, $a0, 40
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZN2kc19f_listelementphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a3, $a1, 72
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_class_of_phyE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_class_of_phyE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	beqz	$s3, .LBB24_25
.LBB24_20:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
.LBB24_21:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB24_22:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
.LBB24_23:
	move	$a1, $s0
.LBB24_24:
	move	$a2, $fp
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	jr	$a3
.LBB24_25:                              # %.thread
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
.LBB24_26:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc10f_isphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB24_28
# %bb.27:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	b	.LBB24_12
.LBB24_28:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc23f_alternativeofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB24_22
# %bb.29:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB24_20
.Lfunc_end24:
	.size	_ZN2kc10impl_ID_Id10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end24-_ZN2kc10impl_ID_Id10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12impl_INT_Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc12impl_INT_Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc12impl_INT_Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc12impl_INT_Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc12impl_INT_Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ld.d	$a4, $a0, 24
	addi.d	$a3, $a3, -3
	sltui	$a3, $a3, 1
	masknez	$a0, $a0, $a3
	maskeqz	$a4, $a4, $a3
	or	$a0, $a4, $a0
	ori	$a4, $zero, 80
	masknez	$a4, $a4, $a3
	ld.d	$a5, $a0, 0
	ori	$a6, $zero, 72
	maskeqz	$a3, $a6, $a3
	or	$a3, $a3, $a4
	ldx.d	$a3, $a5, $a3
	jr	$a3
.Lfunc_end25:
	.size	_ZN2kc12impl_INT_Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end25-_ZN2kc12impl_INT_Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_STRING_String10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_STRING_String10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_STRING_String10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_STRING_String10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_STRING_String10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end26:
	.size	_ZN2kc18impl_STRING_String10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end26-_ZN2kc18impl_STRING_String10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	addi.d	$sp, $sp, -1056
	.cfi_def_cfa_offset 1056
	st.d	$ra, $sp, 1048                  # 8-byte Folded Spill
	st.d	$fp, $sp, 1040                  # 8-byte Folded Spill
	st.d	$s0, $sp, 1032                  # 8-byte Folded Spill
	st.d	$s1, $sp, 1024                  # 8-byte Folded Spill
	st.d	$s2, $sp, 1016                  # 8-byte Folded Spill
	st.d	$s3, $sp, 1008                  # 8-byte Folded Spill
	st.d	$s4, $sp, 1000                  # 8-byte Folded Spill
	st.d	$s5, $sp, 992                   # 8-byte Folded Spill
	st.d	$s6, $sp, 984                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	addi.d	$a2, $a2, -19
	ori	$a3, $zero, 129
	move	$s0, $a1
	bltu	$a3, $a2, .LBB27_199
# %bb.1:
	slli.d	$a1, $a2, 2
	pcalau12i	$a2, %pc_hi20(.LJTI27_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI27_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB27_2:
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	b	.LBB27_371
.LBB27_3:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.360)
	addi.d	$a1, $a0, %pc_lo12(.L.str.360)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.361)
	addi.d	$a1, $a0, %pc_lo12(.L.str.361)
	b	.LBB27_370
.LBB27_4:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.387)
	addi.d	$a1, $a0, %pc_lo12(.L.str.387)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.388)
	addi.d	$a1, $a0, %pc_lo12(.L.str.388)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	addi.d	$s2, $s4, 152
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a1, $a0, %pc_lo12(.L.str.312)
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_6
# %bb.5:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 152
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_6:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.389)
	addi.d	$a1, $a0, %pc_lo12(.L.str.389)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(The_abstract_phylum_decl)
	ld.d	$s6, $a0, %got_pc_lo12(The_abstract_phylum_decl)
	ld.d	$a0, $s6, 0
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 305
	bne	$a0, $a1, .LBB27_8
# %bb.7:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.390)
	addi.d	$a1, $a0, %pc_lo12(.L.str.390)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, 0
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_8:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.392)
	addi.d	$a1, $a0, %pc_lo12(.L.str.392)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.393)
	addi.d	$a1, $a0, %pc_lo12(.L.str.393)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 67
	beqz	$a0, .LBB27_244
# %bb.9:
	ld.bu	$a0, $s4, 69
	beqz	$a0, .LBB27_245
.LBB27_10:
	ld.bu	$a0, $s4, 66
	beqz	$a0, .LBB27_246
.LBB27_11:
	ld.bu	$a0, $s4, 68
	beqz	$a0, .LBB27_247
.LBB27_12:
	ld.d	$a0, $s6, 0
	pcaddu18i	$ra, %call36(_ZN2kc27f_post_create_in_phylumdeclEPNS_22impl_phylumdeclarationE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB27_14
.LBB27_13:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.403)
	addi.d	$a1, $a0, %pc_lo12(.L.str.403)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_14:
	ld.d	$a0, $s6, 0
	ld.d	$s3, $a0, 16
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc21view_gen_member_dcl_hE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc21view_gen_member_dcl_hE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_count_nonstaticmembersE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc27view_count_nonstaticmembersE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.bu	$s3, $s4, 72
	ld.d	$a0, $s6, 0
	pcaddu18i	$ra, %call36(_ZN2kc28f_constructors_in_phylumdeclEPNS_22impl_phylumdeclarationE)
	jirl	$ra, $ra, 0
	pcalau12i	$s5, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$s3, .LBB27_248
# %bb.15:
	bnez	$a0, .LBB27_19
# %bb.16:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.404)
	addi.d	$a1, $a0, %pc_lo12(.L.str.404)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s5, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB27_18
# %bb.17:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.405)
	addi.d	$a1, $a0, %pc_lo12(.L.str.405)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc29view_gen_user_assignment_inisE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc29view_gen_user_assignment_inisE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
.LBB27_18:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.406)
	addi.d	$a1, $a0, %pc_lo12(.L.str.406)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_19:
	ld.d	$a0, $s6, 0
	pcaddu18i	$ra, %call36(_ZN2kc27f_destructors_in_phylumdeclEPNS_22impl_phylumdeclarationE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB27_21
# %bb.20:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.407)
	addi.d	$a1, $a0, %pc_lo12(.L.str.407)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_21:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.408)
	addi.d	$a1, $a0, %pc_lo12(.L.str.408)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.409)
	addi.d	$a1, $a0, %pc_lo12(.L.str.409)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.410)
	addi.d	$a1, $a0, %pc_lo12(.L.str.410)
	b	.LBB27_347
.LBB27_22:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.556)
	addi.d	$a1, $a0, %pc_lo12(.L.str.556)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.557)
	addi.d	$a1, $a0, %pc_lo12(.L.str.557)
	b	.LBB27_237
.LBB27_23:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.504)
	addi.d	$a1, $a0, %pc_lo12(.L.str.504)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.505)
	addi.d	$a1, $a0, %pc_lo12(.L.str.505)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.506)
	addi.d	$a1, $a0, %pc_lo12(.L.str.506)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.507)
	addi.d	$a1, $a0, %pc_lo12(.L.str.507)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.508)
	addi.d	$a1, $a0, %pc_lo12(.L.str.508)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.509)
	addi.d	$a1, $a0, %pc_lo12(.L.str.509)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.510)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.511)
	addi.d	$a1, $a0, %pc_lo12(.L.str.511)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.512)
	addi.d	$a1, $a0, %pc_lo12(.L.str.512)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $a0, 67
	bnez	$a0, .LBB27_344
# %bb.24:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.513)
	addi.d	$a1, $a0, %pc_lo12(.L.str.513)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.514)
	addi.d	$a1, $a0, %pc_lo12(.L.str.514)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.515)
	addi.d	$a1, $a0, %pc_lo12(.L.str.515)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.516)
	addi.d	$a1, $a0, %pc_lo12(.L.str.516)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.517)
	addi.d	$a1, $a0, %pc_lo12(.L.str.517)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.518)
	addi.d	$a1, $a0, %pc_lo12(.L.str.518)
	b	.LBB27_370
.LBB27_25:
	move	$s2, $a0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.519)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thefnfiles)
	ld.d	$a0, $a0, %got_pc_lo12(Thefnfiles)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a1, $a0, %pc_lo12(.L.str.520)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.558)
	addi.d	$a1, $a0, %pc_lo12(.L.str.558)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s1, $a0, %got_pc_lo12(g_options)
	addi.d	$a0, $s1, 120
	pcalau12i	$a1, %pc_hi20(.L.str.312)
	addi.d	$a1, $a1, %pc_lo12(.L.str.312)
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_27
# %bb.26:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.522)
	addi.d	$a1, $a0, %pc_lo12(.L.str.522)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 120
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_27:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.559)
	addi.d	$a1, $a0, %pc_lo12(.L.str.559)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 184
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.525)
	addi.d	$a1, $a0, %pc_lo12(.L.str.525)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 184
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.560)
	addi.d	$a1, $a0, %pc_lo12(.L.str.560)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s1, 115
	beqz	$a0, .LBB27_29
# %bb.28:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.561)
	addi.d	$a1, $a0, %pc_lo12(.L.str.561)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_29:
	move	$a0, $s2
	ld.d	$a1, $s2, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc19view_open_namespaceE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc19view_open_namespaceE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Therviewnames)
	ld.d	$s2, $a0, %got_pc_lo12(Therviewnames)
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc19view_gen_viewvars_cE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc19view_gen_viewvars_cE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.562)
	addi.d	$a1, $a0, %pc_lo12(.L.str.562)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.528)
	addi.d	$a1, $a0, %pc_lo12(.L.str.528)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s1, 115
	beqz	$a0, .LBB27_344
# %bb.30:
.Ltmp173:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a1, $a0, %pc_lo12(.L.str.312)
	addi.d	$a0, $sp, 784
	addi.d	$a2, $sp, 783
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_)
	jirl	$ra, $ra, 0
.Ltmp174:
# %bb.31:
	ld.bu	$a0, $s1, 72
	beqz	$a0, .LBB27_33
# %bb.32:
.Ltmp176:
	pcalau12i	$a0, %pc_hi20(.L.str.563)
	addi.d	$a1, $a0, %pc_lo12(.L.str.563)
	addi.d	$a0, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc)
	jirl	$ra, $ra, 0
.Ltmp177:
.LBB27_33:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp178:
	pcalau12i	$a0, %pc_hi20(.L.str.564)
	addi.d	$a1, $a0, %pc_lo12(.L.str.564)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp179:
# %bb.34:
.Ltmp180:
	addi.d	$a0, $sp, 744
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp181:
# %bb.35:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 744
	ld.d	$a3, $a0, 0
.Ltmp182:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp183:
# %bb.36:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$a0, $sp, 744
	addi.d	$a1, $sp, 760
	beq	$a0, $a1, .LBB27_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 760
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp185:
	pcalau12i	$a0, %pc_hi20(.L.str.565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp186:
# %bb.39:
	pcalau12i	$a0, %got_pc_hi20(Theargsnumbers)
	ld.d	$a0, $a0, %got_pc_lo12(Theargsnumbers)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
.Ltmp187:
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp188:
# %bb.40:                               # %_ZN2kc7unparseEPNS_20impl_abstract_phylumERNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp189:
	pcalau12i	$a0, %pc_hi20(.L.str.566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp190:
# %bb.41:
.Ltmp191:
	addi.d	$a0, $sp, 712
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp192:
# %bb.42:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 712
	ld.d	$a3, $a0, 0
.Ltmp193:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp194:
# %bb.43:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit1936
	ld.d	$a0, $sp, 712
	addi.d	$a1, $sp, 728
	beq	$a0, $a1, .LBB27_45
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1937
	ld.d	$a1, $sp, 728
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_45:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1939
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp196:
	pcalau12i	$a0, %pc_hi20(.L.str.567)
	addi.d	$a1, $a0, %pc_lo12(.L.str.567)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp197:
# %bb.46:
.Ltmp198:
	addi.d	$a0, $sp, 680
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp199:
# %bb.47:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 680
	ld.d	$a3, $a0, 0
.Ltmp200:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp201:
# %bb.48:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit1940
	ld.d	$a0, $sp, 680
	addi.d	$a1, $sp, 696
	beq	$a0, $a1, .LBB27_50
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1941
	ld.d	$a1, $sp, 696
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_50:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1943
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp203:
	pcalau12i	$a0, %pc_hi20(.L.str.568)
	addi.d	$a1, $a0, %pc_lo12(.L.str.568)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp204:
# %bb.51:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp205:
	pcalau12i	$a0, %pc_hi20(.L.str.569)
	addi.d	$a1, $a0, %pc_lo12(.L.str.569)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp206:
# %bb.52:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp207:
	pcalau12i	$a0, %pc_hi20(.L.str.570)
	addi.d	$a1, $a0, %pc_lo12(.L.str.570)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp208:
# %bb.53:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp209:
	pcalau12i	$a0, %pc_hi20(.L.str.571)
	addi.d	$a1, $a0, %pc_lo12(.L.str.571)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp210:
# %bb.54:
.Ltmp211:
	addi.d	$a0, $sp, 648
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp212:
# %bb.55:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 648
	ld.d	$a3, $a0, 0
.Ltmp213:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp214:
# %bb.56:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit1944
	ld.d	$a0, $sp, 648
	addi.d	$a1, $sp, 664
	beq	$a0, $a1, .LBB27_58
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1945
	ld.d	$a1, $sp, 664
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_58:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1947
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp216:
	pcalau12i	$a0, %pc_hi20(.L.str.572)
	addi.d	$a1, $a0, %pc_lo12(.L.str.572)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp217:
# %bb.59:
.Ltmp218:
	addi.d	$a0, $sp, 616
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp219:
# %bb.60:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 616
	ld.d	$a3, $a0, 0
.Ltmp220:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp221:
# %bb.61:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit1948
	ld.d	$a0, $sp, 616
	addi.d	$a1, $sp, 632
	beq	$a0, $a1, .LBB27_63
# %bb.62:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1949
	ld.d	$a1, $sp, 632
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_63:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1951
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp223:
	pcalau12i	$a0, %pc_hi20(.L.str.573)
	addi.d	$a1, $a0, %pc_lo12(.L.str.573)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp224:
# %bb.64:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp225:
	pcalau12i	$a0, %pc_hi20(.L.str.574)
	addi.d	$a1, $a0, %pc_lo12(.L.str.574)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp226:
# %bb.65:
.Ltmp227:
	addi.d	$a0, $sp, 584
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp228:
# %bb.66:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 584
	ld.d	$a3, $a0, 0
.Ltmp229:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp230:
# %bb.67:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit1952
	ld.d	$a0, $sp, 584
	addi.d	$a1, $sp, 600
	beq	$a0, $a1, .LBB27_69
# %bb.68:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1953
	ld.d	$a1, $sp, 600
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_69:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1955
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp232:
	pcalau12i	$a0, %pc_hi20(.L.str.575)
	addi.d	$a1, $a0, %pc_lo12(.L.str.575)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp233:
# %bb.70:
.Ltmp234:
	addi.d	$a0, $sp, 552
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp235:
# %bb.71:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 552
	ld.d	$a3, $a0, 0
.Ltmp236:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp237:
# %bb.72:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit1956
	ld.d	$a0, $sp, 552
	addi.d	$a1, $sp, 568
	beq	$a0, $a1, .LBB27_74
# %bb.73:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1957
	ld.d	$a1, $sp, 568
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_74:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1959
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp239:
	pcalau12i	$a0, %pc_hi20(.L.str.576)
	addi.d	$a1, $a0, %pc_lo12(.L.str.576)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp240:
# %bb.75:
.Ltmp241:
	addi.d	$a0, $sp, 520
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp242:
# %bb.76:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 520
	ld.d	$a3, $a0, 0
.Ltmp243:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp244:
# %bb.77:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit1960
	ld.d	$a0, $sp, 520
	addi.d	$a1, $sp, 536
	beq	$a0, $a1, .LBB27_79
# %bb.78:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1961
	ld.d	$a1, $sp, 536
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_79:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1963
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp246:
	pcalau12i	$a0, %pc_hi20(.L.str.577)
	addi.d	$a1, $a0, %pc_lo12(.L.str.577)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp247:
# %bb.80:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp248:
	pcalau12i	$a0, %pc_hi20(.L.str.578)
	addi.d	$a1, $a0, %pc_lo12(.L.str.578)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp249:
# %bb.81:
.Ltmp250:
	addi.d	$a0, $sp, 488
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp251:
# %bb.82:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 488
	ld.d	$a3, $a0, 0
.Ltmp252:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp253:
# %bb.83:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit1964
	ld.d	$a0, $sp, 488
	addi.d	$a1, $sp, 504
	beq	$a0, $a1, .LBB27_85
# %bb.84:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1965
	ld.d	$a1, $sp, 504
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_85:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1967
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp255:
	pcalau12i	$a0, %pc_hi20(.L.str.579)
	addi.d	$a1, $a0, %pc_lo12(.L.str.579)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp256:
# %bb.86:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp257:
	pcalau12i	$a0, %pc_hi20(.L.str.580)
	addi.d	$a1, $a0, %pc_lo12(.L.str.580)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp258:
# %bb.87:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp259:
	pcalau12i	$a0, %pc_hi20(.L.str.581)
	addi.d	$a1, $a0, %pc_lo12(.L.str.581)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp260:
# %bb.88:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp261:
	pcalau12i	$a0, %pc_hi20(.L.str.582)
	addi.d	$a1, $a0, %pc_lo12(.L.str.582)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp262:
# %bb.89:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp263:
	pcalau12i	$a0, %pc_hi20(.L.str.583)
	addi.d	$a1, $a0, %pc_lo12(.L.str.583)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp264:
# %bb.90:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp265:
	pcalau12i	$a0, %pc_hi20(.L.str.584)
	addi.d	$a1, $a0, %pc_lo12(.L.str.584)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp266:
# %bb.91:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp267:
	pcalau12i	$a0, %pc_hi20(.L.str.585)
	addi.d	$a1, $a0, %pc_lo12(.L.str.585)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp268:
# %bb.92:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp269:
	pcalau12i	$a0, %pc_hi20(.L.str.586)
	addi.d	$a1, $a0, %pc_lo12(.L.str.586)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp270:
# %bb.93:
.Ltmp271:
	addi.d	$a0, $sp, 456
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp272:
# %bb.94:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 456
	ld.d	$a3, $a0, 0
.Ltmp273:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp274:
# %bb.95:                               # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit1968
	ld.d	$a0, $sp, 456
	addi.d	$a1, $sp, 472
	beq	$a0, $a1, .LBB27_97
# %bb.96:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1969
	ld.d	$a1, $sp, 472
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_97:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1971
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp276:
	pcalau12i	$a0, %pc_hi20(.L.str.587)
	addi.d	$a1, $a0, %pc_lo12(.L.str.587)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp277:
# %bb.98:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp278:
	pcalau12i	$a0, %pc_hi20(.L.str.588)
	addi.d	$a1, $a0, %pc_lo12(.L.str.588)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp279:
# %bb.99:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp280:
	pcalau12i	$a0, %pc_hi20(.L.str.589)
	addi.d	$a1, $a0, %pc_lo12(.L.str.589)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp281:
# %bb.100:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp282:
	pcalau12i	$a0, %pc_hi20(.L.str.590)
	addi.d	$a1, $a0, %pc_lo12(.L.str.590)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp283:
# %bb.101:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp284:
	pcalau12i	$a0, %pc_hi20(.L.str.591)
	addi.d	$a1, $a0, %pc_lo12(.L.str.591)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp285:
# %bb.102:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp286:
	pcalau12i	$a0, %pc_hi20(.L.str.592)
	addi.d	$a1, $a0, %pc_lo12(.L.str.592)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp287:
# %bb.103:
	ld.bu	$a0, $s1, 72
	beqz	$a0, .LBB27_105
# %bb.104:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp288:
	pcalau12i	$a0, %pc_hi20(.L.str.593)
	addi.d	$a1, $a0, %pc_lo12(.L.str.593)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp289:
.LBB27_105:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp290:
	pcalau12i	$a0, %pc_hi20(.L.str.594)
	addi.d	$a1, $a0, %pc_lo12(.L.str.594)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp291:
	b	.LBB27_339
.LBB27_106:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.519)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thefnfiles)
	ld.d	$a0, $a0, %got_pc_lo12(Thefnfiles)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a1, $a0, %pc_lo12(.L.str.520)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.596)
	addi.d	$a1, $a0, %pc_lo12(.L.str.596)
	b	.LBB27_370
.LBB27_107:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.519)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thefnfiles)
	ld.d	$a0, $a0, %got_pc_lo12(Thefnfiles)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a1, $a0, %pc_lo12(.L.str.520)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.544)
	addi.d	$a1, $a0, %pc_lo12(.L.str.544)
	b	.LBB27_370
.LBB27_108:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.809)
	addi.d	$a1, $a0, %pc_lo12(.L.str.809)
	b	.LBB27_370
.LBB27_109:
	pcalau12i	$a1, %got_pc_hi20(Thestorageclasses)
	ld.d	$s2, $a1, %got_pc_lo12(Thestorageclasses)
	ld.d	$a1, $s2, 0
	ld.d	$a2, $a1, 0
	move	$s3, $a0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a2, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc25view_gen_operatordefs_c_0E)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc25view_gen_operatordefs_c_0E)
	move	$a0, $a1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.821)
	addi.d	$a1, $a0, %pc_lo12(.L.str.821)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc25view_gen_operatordefs_c_1E)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc25view_gen_operatordefs_c_1E)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.822)
	addi.d	$a1, $a0, %pc_lo12(.L.str.822)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc25view_gen_operatordefs_c_2E)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc25view_gen_operatordefs_c_2E)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.823)
	addi.d	$a1, $a0, %pc_lo12(.L.str.823)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.824)
	addi.d	$a1, $a0, %pc_lo12(.L.str.824)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.825)
	addi.d	$a1, $a0, %pc_lo12(.L.str.825)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.826)
	addi.d	$a1, $a0, %pc_lo12(.L.str.826)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.827)
	addi.d	$a1, $a0, %pc_lo12(.L.str.827)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s2, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s2, 72
	beqz	$a0, .LBB27_111
# %bb.110:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.563)
	addi.d	$a1, $a0, %pc_lo12(.L.str.563)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_111:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.828)
	addi.d	$a1, $a0, %pc_lo12(.L.str.828)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.829)
	addi.d	$a1, $a0, %pc_lo12(.L.str.829)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 72
	bnez	$a0, .LBB27_113
# %bb.112:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.830)
	addi.d	$a1, $a0, %pc_lo12(.L.str.830)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_113:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.831)
	addi.d	$a1, $a0, %pc_lo12(.L.str.831)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.832)
	addi.d	$a1, $a0, %pc_lo12(.L.str.832)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 72
	beqz	$a0, .LBB27_115
# %bb.114:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.563)
	addi.d	$a1, $a0, %pc_lo12(.L.str.563)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_115:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.833)
	addi.d	$a1, $a0, %pc_lo12(.L.str.833)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.834)
	addi.d	$a1, $a0, %pc_lo12(.L.str.834)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 72
	bnez	$a0, .LBB27_117
# %bb.116:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.830)
	addi.d	$a1, $a0, %pc_lo12(.L.str.830)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_117:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.835)
	addi.d	$a1, $a0, %pc_lo12(.L.str.835)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.836)
	addi.d	$a1, $a0, %pc_lo12(.L.str.836)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.837)
	addi.d	$a1, $a0, %pc_lo12(.L.str.837)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 72
	bnez	$a0, .LBB27_119
# %bb.118:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.830)
	addi.d	$a1, $a0, %pc_lo12(.L.str.830)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_119:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.838)
	addi.d	$a1, $a0, %pc_lo12(.L.str.838)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.839)
	addi.d	$a1, $a0, %pc_lo12(.L.str.839)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 72
	bnez	$a0, .LBB27_121
# %bb.120:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.830)
	addi.d	$a1, $a0, %pc_lo12(.L.str.830)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_121:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.840)
	addi.d	$a1, $a0, %pc_lo12(.L.str.840)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.841)
	addi.d	$a1, $a0, %pc_lo12(.L.str.841)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.842)
	addi.d	$a1, $a0, %pc_lo12(.L.str.842)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 72
	bnez	$a0, .LBB27_123
# %bb.122:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.830)
	addi.d	$a1, $a0, %pc_lo12(.L.str.830)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_123:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.843)
	addi.d	$a1, $a0, %pc_lo12(.L.str.843)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s3
	ld.d	$a1, $s3, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc25view_gen_access_functionsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc25view_gen_access_functionsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.844)
	addi.d	$a1, $a0, %pc_lo12(.L.str.844)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.845)
	addi.d	$a1, $a0, %pc_lo12(.L.str.845)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 72
	beqz	$a0, .LBB27_125
# %bb.124:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.846)
	addi.d	$a1, $a0, %pc_lo12(.L.str.846)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_125:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.847)
	addi.d	$a1, $a0, %pc_lo12(.L.str.847)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.bu	$a1, $s2, 72
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.849)
	addi.d	$a0, $a0, %pc_lo12(.L.str.849)
	masknez	$a0, $a0, $a1
	pcalau12i	$a2, %pc_hi20(.L.str.848)
	addi.d	$a2, $a2, %pc_lo12(.L.str.848)
	maskeqz	$a1, $a2, $a1
	or	$a1, $a1, $a0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.850)
	addi.d	$a1, $a0, %pc_lo12(.L.str.850)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 72
	bnez	$a0, .LBB27_127
# %bb.126:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.851)
	addi.d	$a1, $a0, %pc_lo12(.L.str.851)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_127:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.852)
	addi.d	$a1, $a0, %pc_lo12(.L.str.852)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.853)
	addi.d	$a1, $a0, %pc_lo12(.L.str.853)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.854)
	addi.d	$a1, $a0, %pc_lo12(.L.str.854)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.855)
	addi.d	$a1, $a0, %pc_lo12(.L.str.855)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.856)
	addi.d	$a1, $a0, %pc_lo12(.L.str.856)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.857)
	addi.d	$a1, $a0, %pc_lo12(.L.str.857)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.858)
	addi.d	$a1, $a0, %pc_lo12(.L.str.858)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.859)
	addi.d	$a1, $a0, %pc_lo12(.L.str.859)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.860)
	addi.d	$a1, $a0, %pc_lo12(.L.str.860)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.861)
	addi.d	$a1, $a0, %pc_lo12(.L.str.861)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.862)
	addi.d	$a1, $a0, %pc_lo12(.L.str.862)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.863)
	addi.d	$a1, $a0, %pc_lo12(.L.str.863)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.864)
	addi.d	$a1, $a0, %pc_lo12(.L.str.864)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.865)
	addi.d	$a1, $a0, %pc_lo12(.L.str.865)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.866)
	addi.d	$a1, $a0, %pc_lo12(.L.str.866)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.867)
	addi.d	$a1, $a0, %pc_lo12(.L.str.867)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.868)
	addi.d	$a1, $a0, %pc_lo12(.L.str.868)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.869)
	addi.d	$a1, $a0, %pc_lo12(.L.str.869)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.bu	$a1, $s2, 72
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.871)
	addi.d	$a0, $a0, %pc_lo12(.L.str.871)
	masknez	$a0, $a0, $a1
	pcalau12i	$a2, %pc_hi20(.L.str.870)
	addi.d	$a2, $a2, %pc_lo12(.L.str.870)
	maskeqz	$a1, $a2, $a1
	or	$a1, $a1, $a0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.872)
	addi.d	$a1, $a0, %pc_lo12(.L.str.872)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.873)
	addi.d	$a1, $a0, %pc_lo12(.L.str.873)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.874)
	addi.d	$a1, $a0, %pc_lo12(.L.str.874)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.875)
	addi.d	$a1, $a0, %pc_lo12(.L.str.875)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.876)
	addi.d	$a1, $a0, %pc_lo12(.L.str.876)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.877)
	addi.d	$a1, $a0, %pc_lo12(.L.str.877)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.878)
	addi.d	$a1, $a0, %pc_lo12(.L.str.878)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.879)
	addi.d	$a1, $a0, %pc_lo12(.L.str.879)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.880)
	addi.d	$a1, $a0, %pc_lo12(.L.str.880)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.881)
	addi.d	$a1, $a0, %pc_lo12(.L.str.881)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.882)
	addi.d	$a1, $a0, %pc_lo12(.L.str.882)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.883)
	addi.d	$a1, $a0, %pc_lo12(.L.str.883)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.884)
	addi.d	$a1, $a0, %pc_lo12(.L.str.884)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.885)
	addi.d	$a1, $a0, %pc_lo12(.L.str.885)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.886)
	addi.d	$a1, $a0, %pc_lo12(.L.str.886)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.887)
	addi.d	$a1, $a0, %pc_lo12(.L.str.887)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.888)
	addi.d	$a1, $a0, %pc_lo12(.L.str.888)
	b	.LBB27_370
.LBB27_128:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.608)
	addi.d	$a1, $a0, %pc_lo12(.L.str.608)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.609)
	addi.d	$a1, $a0, %pc_lo12(.L.str.609)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.610)
	addi.d	$a1, $a0, %pc_lo12(.L.str.610)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.611)
	addi.d	$a1, $a0, %pc_lo12(.L.str.611)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.612)
	addi.d	$a1, $a0, %pc_lo12(.L.str.612)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.613)
	addi.d	$a1, $a0, %pc_lo12(.L.str.613)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.614)
	addi.d	$a1, $a0, %pc_lo12(.L.str.614)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.615)
	addi.d	$a1, $a0, %pc_lo12(.L.str.615)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.616)
	addi.d	$a1, $a0, %pc_lo12(.L.str.616)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.617)
	addi.d	$a1, $a0, %pc_lo12(.L.str.617)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.618)
	addi.d	$a1, $a0, %pc_lo12(.L.str.618)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.619)
	addi.d	$a1, $a0, %pc_lo12(.L.str.619)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.620)
	addi.d	$a1, $a0, %pc_lo12(.L.str.620)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.621)
	addi.d	$a1, $a0, %pc_lo12(.L.str.621)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.622)
	addi.d	$a1, $a0, %pc_lo12(.L.str.622)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.623)
	addi.d	$a1, $a0, %pc_lo12(.L.str.623)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.624)
	addi.d	$a1, $a0, %pc_lo12(.L.str.624)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.625)
	addi.d	$a1, $a0, %pc_lo12(.L.str.625)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.626)
	addi.d	$a1, $a0, %pc_lo12(.L.str.626)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.627)
	addi.d	$a1, $a0, %pc_lo12(.L.str.627)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.628)
	addi.d	$a1, $a0, %pc_lo12(.L.str.628)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.629)
	addi.d	$a1, $a0, %pc_lo12(.L.str.629)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.630)
	addi.d	$a1, $a0, %pc_lo12(.L.str.630)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.631)
	addi.d	$a1, $a0, %pc_lo12(.L.str.631)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.632)
	addi.d	$a1, $a0, %pc_lo12(.L.str.632)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.633)
	addi.d	$a1, $a0, %pc_lo12(.L.str.633)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.634)
	addi.d	$a1, $a0, %pc_lo12(.L.str.634)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.635)
	addi.d	$a1, $a0, %pc_lo12(.L.str.635)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.636)
	addi.d	$a1, $a0, %pc_lo12(.L.str.636)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.637)
	addi.d	$a1, $a0, %pc_lo12(.L.str.637)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.638)
	addi.d	$a1, $a0, %pc_lo12(.L.str.638)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.639)
	addi.d	$a1, $a0, %pc_lo12(.L.str.639)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.640)
	addi.d	$a1, $a0, %pc_lo12(.L.str.640)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.641)
	addi.d	$a1, $a0, %pc_lo12(.L.str.641)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.642)
	addi.d	$a1, $a0, %pc_lo12(.L.str.642)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.643)
	addi.d	$a1, $a0, %pc_lo12(.L.str.643)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.644)
	addi.d	$a1, $a0, %pc_lo12(.L.str.644)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.645)
	addi.d	$a1, $a0, %pc_lo12(.L.str.645)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.646)
	addi.d	$a1, $a0, %pc_lo12(.L.str.646)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.647)
	addi.d	$a1, $a0, %pc_lo12(.L.str.647)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.648)
	addi.d	$a1, $a0, %pc_lo12(.L.str.648)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.649)
	addi.d	$a1, $a0, %pc_lo12(.L.str.649)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.650)
	addi.d	$a1, $a0, %pc_lo12(.L.str.650)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.651)
	addi.d	$a1, $a0, %pc_lo12(.L.str.651)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.652)
	addi.d	$a1, $a0, %pc_lo12(.L.str.652)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.653)
	addi.d	$a1, $a0, %pc_lo12(.L.str.653)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.654)
	addi.d	$a1, $a0, %pc_lo12(.L.str.654)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.655)
	addi.d	$a1, $a0, %pc_lo12(.L.str.655)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.656)
	addi.d	$a1, $a0, %pc_lo12(.L.str.656)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.657)
	addi.d	$a1, $a0, %pc_lo12(.L.str.657)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.658)
	addi.d	$a1, $a0, %pc_lo12(.L.str.658)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.659)
	addi.d	$a1, $a0, %pc_lo12(.L.str.659)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.660)
	addi.d	$a1, $a0, %pc_lo12(.L.str.660)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.661)
	addi.d	$a1, $a0, %pc_lo12(.L.str.661)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.662)
	addi.d	$a1, $a0, %pc_lo12(.L.str.662)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.663)
	addi.d	$a1, $a0, %pc_lo12(.L.str.663)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.664)
	addi.d	$a1, $a0, %pc_lo12(.L.str.664)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.665)
	addi.d	$a1, $a0, %pc_lo12(.L.str.665)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.666)
	addi.d	$a1, $a0, %pc_lo12(.L.str.666)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.667)
	addi.d	$a1, $a0, %pc_lo12(.L.str.667)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.668)
	addi.d	$a1, $a0, %pc_lo12(.L.str.668)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.669)
	addi.d	$a1, $a0, %pc_lo12(.L.str.669)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.670)
	addi.d	$a1, $a0, %pc_lo12(.L.str.670)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.671)
	addi.d	$a1, $a0, %pc_lo12(.L.str.671)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.672)
	addi.d	$a1, $a0, %pc_lo12(.L.str.672)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.673)
	addi.d	$a1, $a0, %pc_lo12(.L.str.673)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.674)
	addi.d	$a1, $a0, %pc_lo12(.L.str.674)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.675)
	addi.d	$a1, $a0, %pc_lo12(.L.str.675)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.676)
	addi.d	$a1, $a0, %pc_lo12(.L.str.676)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.677)
	addi.d	$a1, $a0, %pc_lo12(.L.str.677)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.678)
	addi.d	$a1, $a0, %pc_lo12(.L.str.678)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.679)
	addi.d	$a1, $a0, %pc_lo12(.L.str.679)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.680)
	addi.d	$a1, $a0, %pc_lo12(.L.str.680)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.681)
	addi.d	$a1, $a0, %pc_lo12(.L.str.681)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.682)
	addi.d	$a1, $a0, %pc_lo12(.L.str.682)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.683)
	addi.d	$a1, $a0, %pc_lo12(.L.str.683)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.684)
	addi.d	$a1, $a0, %pc_lo12(.L.str.684)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.685)
	addi.d	$a1, $a0, %pc_lo12(.L.str.685)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Theargsnumbers)
	ld.d	$s1, $a0, %got_pc_lo12(Theargsnumbers)
	ld.d	$a0, $s1, 0
	pcaddu18i	$ra, %call36(_ZNK2kc16impl_argsnumbers4lastEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $a0, 8
	ori	$a1, $zero, 1
	slt	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a2, $a0, $a1
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 784
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.686)
	addi.d	$a1, $a0, %pc_lo12(.L.str.686)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.687)
	addi.d	$a1, $a0, %pc_lo12(.L.str.687)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.688)
	addi.d	$a1, $a0, %pc_lo12(.L.str.688)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.689)
	addi.d	$a1, $a0, %pc_lo12(.L.str.689)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.690)
	addi.d	$a1, $a0, %pc_lo12(.L.str.690)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.691)
	addi.d	$a1, $a0, %pc_lo12(.L.str.691)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.692)
	addi.d	$a1, $a0, %pc_lo12(.L.str.692)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.693)
	addi.d	$a1, $a0, %pc_lo12(.L.str.693)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.694)
	addi.d	$a1, $a0, %pc_lo12(.L.str.694)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.695)
	addi.d	$a1, $a0, %pc_lo12(.L.str.695)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.696)
	addi.d	$a1, $a0, %pc_lo12(.L.str.696)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.697)
	addi.d	$a1, $a0, %pc_lo12(.L.str.697)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.698)
	addi.d	$a1, $a0, %pc_lo12(.L.str.698)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.699)
	addi.d	$a1, $a0, %pc_lo12(.L.str.699)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.700)
	addi.d	$a1, $a0, %pc_lo12(.L.str.700)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.701)
	addi.d	$a1, $a0, %pc_lo12(.L.str.701)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.702)
	addi.d	$a1, $a0, %pc_lo12(.L.str.702)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.703)
	addi.d	$a1, $a0, %pc_lo12(.L.str.703)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.704)
	addi.d	$a1, $a0, %pc_lo12(.L.str.704)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.705)
	addi.d	$a1, $a0, %pc_lo12(.L.str.705)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.706)
	addi.d	$a1, $a0, %pc_lo12(.L.str.706)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.707)
	addi.d	$a1, $a0, %pc_lo12(.L.str.707)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.708)
	addi.d	$a1, $a0, %pc_lo12(.L.str.708)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.709)
	addi.d	$a1, $a0, %pc_lo12(.L.str.709)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.710)
	addi.d	$a1, $a0, %pc_lo12(.L.str.710)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.711)
	addi.d	$a1, $a0, %pc_lo12(.L.str.711)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.712)
	addi.d	$a1, $a0, %pc_lo12(.L.str.712)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.713)
	addi.d	$a1, $a0, %pc_lo12(.L.str.713)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.714)
	addi.d	$a1, $a0, %pc_lo12(.L.str.714)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.715)
	addi.d	$a1, $a0, %pc_lo12(.L.str.715)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.716)
	addi.d	$a1, $a0, %pc_lo12(.L.str.716)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.717)
	addi.d	$a1, $a0, %pc_lo12(.L.str.717)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.718)
	addi.d	$a1, $a0, %pc_lo12(.L.str.718)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.719)
	addi.d	$a1, $a0, %pc_lo12(.L.str.719)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.720)
	addi.d	$a1, $a0, %pc_lo12(.L.str.720)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.721)
	addi.d	$a1, $a0, %pc_lo12(.L.str.721)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.722)
	addi.d	$a1, $a0, %pc_lo12(.L.str.722)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.723)
	addi.d	$a1, $a0, %pc_lo12(.L.str.723)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.724)
	addi.d	$a1, $a0, %pc_lo12(.L.str.724)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.725)
	addi.d	$a1, $a0, %pc_lo12(.L.str.725)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.726)
	addi.d	$a1, $a0, %pc_lo12(.L.str.726)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.727)
	addi.d	$a1, $a0, %pc_lo12(.L.str.727)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.728)
	addi.d	$a1, $a0, %pc_lo12(.L.str.728)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.729)
	addi.d	$a1, $a0, %pc_lo12(.L.str.729)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.730)
	addi.d	$a1, $a0, %pc_lo12(.L.str.730)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.731)
	addi.d	$a1, $a0, %pc_lo12(.L.str.731)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.732)
	addi.d	$a1, $a0, %pc_lo12(.L.str.732)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.733)
	addi.d	$a1, $a0, %pc_lo12(.L.str.733)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.734)
	addi.d	$a1, $a0, %pc_lo12(.L.str.734)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.735)
	addi.d	$a1, $a0, %pc_lo12(.L.str.735)
	b	.LBB27_343
.LBB27_129:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.750)
	addi.d	$a1, $a0, %pc_lo12(.L.str.750)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.751)
	addi.d	$a1, $a0, %pc_lo12(.L.str.751)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.752)
	addi.d	$a1, $a0, %pc_lo12(.L.str.752)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.753)
	addi.d	$a1, $a0, %pc_lo12(.L.str.753)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.754)
	addi.d	$a1, $a0, %pc_lo12(.L.str.754)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.755)
	addi.d	$a1, $a0, %pc_lo12(.L.str.755)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.756)
	addi.d	$a1, $a0, %pc_lo12(.L.str.756)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.757)
	addi.d	$a1, $a0, %pc_lo12(.L.str.757)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.758)
	addi.d	$a1, $a0, %pc_lo12(.L.str.758)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.759)
	addi.d	$a1, $a0, %pc_lo12(.L.str.759)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.760)
	addi.d	$a1, $a0, %pc_lo12(.L.str.760)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.761)
	addi.d	$a1, $a0, %pc_lo12(.L.str.761)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.762)
	addi.d	$a1, $a0, %pc_lo12(.L.str.762)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.763)
	addi.d	$a1, $a0, %pc_lo12(.L.str.763)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.764)
	addi.d	$a1, $a0, %pc_lo12(.L.str.764)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.765)
	addi.d	$a1, $a0, %pc_lo12(.L.str.765)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.766)
	addi.d	$a1, $a0, %pc_lo12(.L.str.766)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.767)
	addi.d	$a1, $a0, %pc_lo12(.L.str.767)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.768)
	addi.d	$a1, $a0, %pc_lo12(.L.str.768)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.769)
	addi.d	$a1, $a0, %pc_lo12(.L.str.769)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.770)
	addi.d	$a1, $a0, %pc_lo12(.L.str.770)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.771)
	addi.d	$a1, $a0, %pc_lo12(.L.str.771)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.772)
	addi.d	$a1, $a0, %pc_lo12(.L.str.772)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.773)
	addi.d	$a1, $a0, %pc_lo12(.L.str.773)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.774)
	addi.d	$a1, $a0, %pc_lo12(.L.str.774)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.775)
	addi.d	$a1, $a0, %pc_lo12(.L.str.775)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.776)
	addi.d	$a1, $a0, %pc_lo12(.L.str.776)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.777)
	addi.d	$a1, $a0, %pc_lo12(.L.str.777)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.778)
	addi.d	$a1, $a0, %pc_lo12(.L.str.778)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.779)
	addi.d	$a1, $a0, %pc_lo12(.L.str.779)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.780)
	addi.d	$a1, $a0, %pc_lo12(.L.str.780)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.781)
	addi.d	$a1, $a0, %pc_lo12(.L.str.781)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.782)
	addi.d	$a1, $a0, %pc_lo12(.L.str.782)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.783)
	addi.d	$a1, $a0, %pc_lo12(.L.str.783)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.784)
	addi.d	$a1, $a0, %pc_lo12(.L.str.784)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.785)
	addi.d	$a1, $a0, %pc_lo12(.L.str.785)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.786)
	addi.d	$a1, $a0, %pc_lo12(.L.str.786)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.787)
	addi.d	$a1, $a0, %pc_lo12(.L.str.787)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.788)
	addi.d	$a1, $a0, %pc_lo12(.L.str.788)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.789)
	addi.d	$a1, $a0, %pc_lo12(.L.str.789)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.790)
	addi.d	$a1, $a0, %pc_lo12(.L.str.790)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.791)
	addi.d	$a1, $a0, %pc_lo12(.L.str.791)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.792)
	addi.d	$a1, $a0, %pc_lo12(.L.str.792)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.793)
	addi.d	$a1, $a0, %pc_lo12(.L.str.793)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.794)
	addi.d	$a1, $a0, %pc_lo12(.L.str.794)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.795)
	addi.d	$a1, $a0, %pc_lo12(.L.str.795)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.796)
	addi.d	$a1, $a0, %pc_lo12(.L.str.796)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.797)
	addi.d	$a1, $a0, %pc_lo12(.L.str.797)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.798)
	addi.d	$a1, $a0, %pc_lo12(.L.str.798)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.799)
	addi.d	$a1, $a0, %pc_lo12(.L.str.799)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.800)
	addi.d	$a1, $a0, %pc_lo12(.L.str.800)
	b	.LBB27_370
.LBB27_130:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.925)
	addi.d	$a1, $a0, %pc_lo12(.L.str.925)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.926)
	addi.d	$a1, $a0, %pc_lo12(.L.str.926)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.927)
	addi.d	$a1, $a0, %pc_lo12(.L.str.927)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.928)
	addi.d	$a1, $a0, %pc_lo12(.L.str.928)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.929)
	addi.d	$a1, $a0, %pc_lo12(.L.str.929)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.930)
	addi.d	$a1, $a0, %pc_lo12(.L.str.930)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.931)
	addi.d	$a1, $a0, %pc_lo12(.L.str.931)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.932)
	addi.d	$a1, $a0, %pc_lo12(.L.str.932)
	b	.LBB27_370
.LBB27_131:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s2, $a0, %got_pc_lo12(g_options)
	ld.d	$a0, $s2, 0
	pcaddu18i	$ra, %call36(_ZN2kc26f_make_identifier_basenameEPKc)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.545)
	addi.d	$a1, $a0, %pc_lo12(.L.str.545)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(pg_filename)
	ld.d	$a0, $a0, %got_pc_lo12(pg_filename)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.546)
	addi.d	$a1, $a0, %pc_lo12(.L.str.546)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.552)
	addi.d	$a1, $a0, %pc_lo12(.L.str.552)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.553)
	addi.d	$a1, $a0, %pc_lo12(.L.str.553)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.554)
	addi.d	$a1, $a0, %pc_lo12(.L.str.554)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 184
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.555)
	addi.d	$a1, $a0, %pc_lo12(.L.str.555)
	b	.LBB27_197
.LBB27_132:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.519)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thefnfiles)
	ld.d	$a0, $a0, %got_pc_lo12(Thefnfiles)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a1, $a0, %pc_lo12(.L.str.520)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.889)
	addi.d	$a1, $a0, %pc_lo12(.L.str.889)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 184
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.890)
	addi.d	$a1, $a0, %pc_lo12(.L.str.890)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.891)
	addi.d	$a1, $a0, %pc_lo12(.L.str.891)
	b	.LBB27_370
.LBB27_133:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.519)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thefnfiles)
	ld.d	$a0, $a0, %got_pc_lo12(Thefnfiles)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a1, $a0, %pc_lo12(.L.str.520)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.749)
	addi.d	$a1, $a0, %pc_lo12(.L.str.749)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 184
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.555)
	addi.d	$a1, $a0, %pc_lo12(.L.str.555)
	b	.LBB27_370
.LBB27_134:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.739)
	addi.d	$a1, $a0, %pc_lo12(.L.str.739)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.740)
	addi.d	$a1, $a0, %pc_lo12(.L.str.740)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.741)
	addi.d	$a1, $a0, %pc_lo12(.L.str.741)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.742)
	addi.d	$a1, $a0, %pc_lo12(.L.str.742)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.743)
	addi.d	$a1, $a0, %pc_lo12(.L.str.743)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.744)
	addi.d	$a1, $a0, %pc_lo12(.L.str.744)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.745)
	addi.d	$a1, $a0, %pc_lo12(.L.str.745)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.746)
	addi.d	$a1, $a0, %pc_lo12(.L.str.746)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.747)
	addi.d	$a1, $a0, %pc_lo12(.L.str.747)
	b	.LBB27_370
.LBB27_135:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.941)
	addi.d	$a1, $a0, %pc_lo12(.L.str.941)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.942)
	addi.d	$a1, $a0, %pc_lo12(.L.str.942)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.943)
	addi.d	$a1, $a0, %pc_lo12(.L.str.943)
	b	.LBB27_370
.LBB27_136:
	ld.d	$s1, $a0, 8
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc29view_gen_operatormap_subphylaE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc29view_gen_operatormap_subphylaE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc31view_gen_operatormap_attributesE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc31view_gen_operatormap_attributesE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.938)
	addi.d	$a1, $a0, %pc_lo12(.L.str.938)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.939)
	addi.d	$a1, $a0, %pc_lo12(.L.str.939)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.940)
	addi.d	$a1, $a0, %pc_lo12(.L.str.940)
	b	.LBB27_370
.LBB27_137:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.810)
	addi.d	$a1, $a0, %pc_lo12(.L.str.810)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Theargsnumbers)
	ld.d	$a0, $a0, %got_pc_lo12(Theargsnumbers)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(_ZNK2kc16impl_argsnumbers4lastEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $a0, 8
	move	$s2, $zero
	ori	$a1, $zero, 2
	slt	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$s6, $a0, $a1
	pcalau12i	$a0, %pc_hi20(.L.str.811)
	addi.d	$s3, $a0, %pc_lo12(.L.str.811)
	pcalau12i	$a0, %pc_hi20(.L.str.812)
	addi.d	$s4, $a0, %pc_lo12(.L.str.812)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s5, $a0, %pc_lo12(.L.str.331)
	.p2align	4, , 16
.LBB27_138:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.w	$s2, $s2, 1
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	addi.d	$a0, $sp, 784
	move	$a1, $s5
	move	$a2, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	bne	$s6, $s2, .LBB27_138
# %bb.139:                              # %_ZN2kc20impl_abstract_phylum7unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.813)
	addi.d	$a1, $a0, %pc_lo12(.L.str.813)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.814)
	addi.d	$a1, $a0, %pc_lo12(.L.str.814)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_create_functionE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_create_functionE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.815)
	addi.d	$a1, $a0, %pc_lo12(.L.str.815)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZTV13count_printer+16)
	addi.d	$a0, $a0, %pc_lo12(_ZTV13count_printer+16)
	st.d	$a0, $sp, 784
	st.w	$zero, $sp, 792
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc29view_gen_attributeOf_functionE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc29view_gen_attributeOf_functionE)
	addi.d	$a1, $sp, 784
	move	$a0, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.w	$a1, $sp, 792
	ld.d	$a3, $a0, 0
	beqz	$a1, .LBB27_341
# %bb.140:                              # %_ZN2kc7unparseEPNS_20impl_abstract_phylumERNS_21printer_functor_classERNS_11uview_classE.exit2008
	pcalau12i	$a0, %pc_hi20(.L.str.817)
	addi.d	$a1, $a0, %pc_lo12(.L.str.817)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc29view_gen_attributeOf_functionE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc29view_gen_attributeOf_functionE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.818)
	addi.d	$a1, $a0, %pc_lo12(.L.str.818)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.819)
	addi.d	$a1, $a0, %pc_lo12(.L.str.819)
	b	.LBB27_342
.LBB27_141:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(_ZN2kc26f_make_identifier_basenameEPKc)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.550)
	addi.d	$a1, $a0, %pc_lo12(.L.str.550)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.551)
	addi.d	$a1, $a0, %pc_lo12(.L.str.551)
	b	.LBB27_197
.LBB27_142:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.955)
	addi.d	$a1, $a0, %pc_lo12(.L.str.955)
	b	.LBB27_370
.LBB27_143:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.935)
	addi.d	$a1, $a0, %pc_lo12(.L.str.935)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.936)
	addi.d	$a1, $a0, %pc_lo12(.L.str.936)
	b	.LBB27_370
.LBB27_144:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.748)
	addi.d	$a1, $a0, %pc_lo12(.L.str.748)
	b	.LBB27_370
.LBB27_145:
	pcalau12i	$a0, %got_pc_hi20(pg_languageshavebeendefined)
	ld.d	$a0, $a0, %got_pc_lo12(pg_languageshavebeendefined)
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB27_147
# %bb.146:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.534)
	addi.d	$a1, $a0, %pc_lo12(.L.str.534)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.535)
	addi.d	$a1, $a0, %pc_lo12(.L.str.535)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.531)
	addi.d	$s1, $a0, %pc_lo12(.L.str.531)
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.536)
	addi.d	$a1, $a0, %pc_lo12(.L.str.536)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.537)
	addi.d	$a1, $a0, %pc_lo12(.L.str.537)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.538)
	addi.d	$a1, $a0, %pc_lo12(.L.str.538)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thelanguages)
	ld.d	$a0, $a0, %got_pc_lo12(Thelanguages)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_147:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.539)
	addi.d	$a1, $a0, %pc_lo12(.L.str.539)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Theuviewnames)
	ld.d	$a0, $a0, %got_pc_lo12(Theuviewnames)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc20view_uview_class_defE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc20view_uview_class_defE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.540)
	addi.d	$a1, $a0, %pc_lo12(.L.str.540)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.541)
	addi.d	$a1, $a0, %pc_lo12(.L.str.541)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.542)
	addi.d	$a1, $a0, %pc_lo12(.L.str.542)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.543)
	addi.d	$a1, $a0, %pc_lo12(.L.str.543)
	b	.LBB27_370
.LBB27_148:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.595)
	addi.d	$a1, $a0, %pc_lo12(.L.str.595)
	b	.LBB27_370
.LBB27_149:
	move	$s1, $a0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.519)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thefnfiles)
	ld.d	$a0, $a0, %got_pc_lo12(Thefnfiles)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a1, $a0, %pc_lo12(.L.str.520)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.521)
	addi.d	$a1, $a0, %pc_lo12(.L.str.521)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s2, $a0, %got_pc_lo12(g_options)
	addi.d	$a0, $s2, 120
	pcalau12i	$a1, %pc_hi20(.L.str.312)
	addi.d	$a1, $a1, %pc_lo12(.L.str.312)
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_151
# %bb.150:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.522)
	addi.d	$a1, $a0, %pc_lo12(.L.str.522)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 120
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_151:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.524)
	addi.d	$a1, $a0, %pc_lo12(.L.str.524)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 184
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.525)
	addi.d	$a1, $a0, %pc_lo12(.L.str.525)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 184
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.526)
	addi.d	$a1, $a0, %pc_lo12(.L.str.526)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	ld.d	$a1, $s1, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc19view_open_namespaceE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc19view_open_namespaceE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Theuviewnames)
	ld.d	$s1, $a0, %got_pc_lo12(Theuviewnames)
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc19view_gen_viewvars_cE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc19view_gen_viewvars_cE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.527)
	addi.d	$a1, $a0, %pc_lo12(.L.str.527)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.528)
	addi.d	$a1, $a0, %pc_lo12(.L.str.528)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(pg_languageshavebeendefined)
	ld.d	$a0, $a0, %got_pc_lo12(pg_languageshavebeendefined)
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB27_344
# %bb.152:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.529)
	addi.d	$a1, $a0, %pc_lo12(.L.str.529)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.530)
	addi.d	$a1, $a0, %pc_lo12(.L.str.530)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.531)
	addi.d	$a1, $a0, %pc_lo12(.L.str.531)
	b	.LBB27_370
.LBB27_153:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.533)
	addi.d	$a1, $a0, %pc_lo12(.L.str.533)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Therviewnames)
	ld.d	$a0, $a0, %got_pc_lo12(Therviewnames)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc20view_rview_class_defE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc20view_rview_class_defE)
	move	$a1, $s0
	b	.LBB27_372
.LBB27_154:
	pcalau12i	$a1, %got_pc_hi20(g_options)
	ld.d	$a1, $a1, %got_pc_lo12(g_options)
	ld.bu	$a1, $a1, 69
	ld.d	$s1, $a0, 8
	bnez	$a1, .LBB27_156
# %bb.155:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.937)
	addi.d	$a1, $a0, %pc_lo12(.L.str.937)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_156:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$s2, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	b	.LBB27_371
.LBB27_157:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.381)
	addi.d	$a1, $a0, %pc_lo12(.L.str.381)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.382)
	addi.d	$a1, $a0, %pc_lo12(.L.str.382)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.383)
	addi.d	$a1, $a0, %pc_lo12(.L.str.383)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $a0, 70
	bnez	$a0, .LBB27_344
# %bb.158:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.384)
	addi.d	$a1, $a0, %pc_lo12(.L.str.384)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.385)
	addi.d	$a1, $a0, %pc_lo12(.L.str.385)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.386)
	addi.d	$a1, $a0, %pc_lo12(.L.str.386)
	b	.LBB27_370
.LBB27_159:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1048)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1048)
	b	.LBB27_370
.LBB27_160:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1047)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1047)
	b	.LBB27_370
.LBB27_161:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.605)
	addi.d	$a1, $a0, %pc_lo12(.L.str.605)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.606)
	addi.d	$a1, $a0, %pc_lo12(.L.str.606)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.607)
	addi.d	$a1, $a0, %pc_lo12(.L.str.607)
	b	.LBB27_370
.LBB27_162:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	st.w	$zero, $s3, %pc_lo12(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	pcalau12i	$a0, %pc_hi20(.L.str.944)
	addi.d	$a1, $a0, %pc_lo12(.L.str.944)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, %pc_lo12(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s2, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 784
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.945)
	addi.d	$a1, $a0, %pc_lo12(.L.str.945)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.w	$a1, $s3, %pc_lo12(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	ld.d	$a3, $a0, 72
	addi.d	$a0, $a1, 1
	st.w	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.946)
	addi.d	$a1, $a0, %pc_lo12(.L.str.946)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, %pc_lo12(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	addi.d	$a0, $sp, 784
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.947)
	addi.d	$a1, $a0, %pc_lo12(.L.str.947)
	b	.LBB27_343
.LBB27_163:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc20view_close_namespaceE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc20view_close_namespaceE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1021)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1021)
	b	.LBB27_370
.LBB27_164:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.951)
	addi.d	$a1, $a0, %pc_lo12(.L.str.951)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.952)
	addi.d	$a1, $a0, %pc_lo12(.L.str.952)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.953)
	addi.d	$a1, $a0, %pc_lo12(.L.str.953)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.954)
	addi.d	$a1, $a0, %pc_lo12(.L.str.954)
	b	.LBB27_370
.LBB27_165:
	move	$s2, $a0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.519)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thefnfiles)
	ld.d	$a0, $a0, %got_pc_lo12(Thefnfiles)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a1, $a0, %pc_lo12(.L.str.520)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.956)
	addi.d	$a1, $a0, %pc_lo12(.L.str.956)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s1, $a0, %got_pc_lo12(g_options)
	addi.d	$a0, $s1, 120
	pcalau12i	$a1, %pc_hi20(.L.str.312)
	addi.d	$a1, $a1, %pc_lo12(.L.str.312)
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_167
# %bb.166:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.522)
	addi.d	$a1, $a0, %pc_lo12(.L.str.522)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 120
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_167:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.957)
	addi.d	$a1, $a0, %pc_lo12(.L.str.957)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 184
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.958)
	addi.d	$a1, $a0, %pc_lo12(.L.str.958)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.959)
	addi.d	$a1, $a0, %pc_lo12(.L.str.959)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.960)
	addi.d	$a1, $a0, %pc_lo12(.L.str.960)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.961)
	addi.d	$a1, $a0, %pc_lo12(.L.str.961)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s2
	ld.d	$a1, $s2, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc19view_open_namespaceE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc19view_open_namespaceE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.962)
	addi.d	$a1, $a0, %pc_lo12(.L.str.962)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.963)
	addi.d	$a1, $a0, %pc_lo12(.L.str.963)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.964)
	addi.d	$a1, $a0, %pc_lo12(.L.str.964)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.965)
	addi.d	$a1, $a0, %pc_lo12(.L.str.965)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.966)
	addi.d	$a1, $a0, %pc_lo12(.L.str.966)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.967)
	addi.d	$a1, $a0, %pc_lo12(.L.str.967)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.968)
	addi.d	$a1, $a0, %pc_lo12(.L.str.968)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.969)
	addi.d	$a1, $a0, %pc_lo12(.L.str.969)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.970)
	addi.d	$a1, $a0, %pc_lo12(.L.str.970)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.971)
	addi.d	$a1, $a0, %pc_lo12(.L.str.971)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.972)
	addi.d	$a1, $a0, %pc_lo12(.L.str.972)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp3:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a1, $a0, %pc_lo12(.L.str.312)
	addi.d	$a0, $sp, 784
	addi.d	$a2, $sp, 783
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_)
	jirl	$ra, $ra, 0
.Ltmp4:
# %bb.168:
	ld.bu	$a0, $s1, 72
	beqz	$a0, .LBB27_170
# %bb.169:
.Ltmp6:
	pcalau12i	$a0, %pc_hi20(.L.str.563)
	addi.d	$a1, $a0, %pc_lo12(.L.str.563)
	addi.d	$a0, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc)
	jirl	$ra, $ra, 0
.Ltmp7:
.LBB27_170:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp8:
	pcalau12i	$a0, %pc_hi20(.L.str.973)
	addi.d	$a1, $a0, %pc_lo12(.L.str.973)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp9:
# %bb.171:
.Ltmp10:
	addi.d	$a0, $sp, 424
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp11:
# %bb.172:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 424
	ld.d	$a3, $a0, 0
.Ltmp12:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp13:
# %bb.173:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2009
	ld.d	$a0, $sp, 424
	addi.d	$a1, $sp, 440
	beq	$a0, $a1, .LBB27_175
# %bb.174:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2010
	ld.d	$a1, $sp, 440
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_175:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2012
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp15:
	pcalau12i	$a0, %pc_hi20(.L.str.974)
	addi.d	$a1, $a0, %pc_lo12(.L.str.974)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp16:
# %bb.176:
.Ltmp17:
	addi.d	$a0, $sp, 392
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp18:
# %bb.177:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 392
	ld.d	$a3, $a0, 0
.Ltmp19:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp20:
# %bb.178:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2013
	ld.d	$a0, $sp, 392
	addi.d	$a1, $sp, 408
	beq	$a0, $a1, .LBB27_180
# %bb.179:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2014
	ld.d	$a1, $sp, 408
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_180:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2016
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp22:
	pcalau12i	$a0, %pc_hi20(.L.str.975)
	addi.d	$a1, $a0, %pc_lo12(.L.str.975)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp23:
# %bb.181:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp24:
	pcalau12i	$a0, %pc_hi20(.L.str.976)
	addi.d	$a1, $a0, %pc_lo12(.L.str.976)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp25:
# %bb.182:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp26:
	pcalau12i	$a0, %pc_hi20(.L.str.977)
	addi.d	$a1, $a0, %pc_lo12(.L.str.977)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp27:
# %bb.183:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp28:
	pcalau12i	$a0, %pc_hi20(.L.str.978)
	addi.d	$a1, $a0, %pc_lo12(.L.str.978)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp29:
# %bb.184:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp30:
	pcalau12i	$a0, %pc_hi20(.L.str.979)
	addi.d	$a1, $a0, %pc_lo12(.L.str.979)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp31:
# %bb.185:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp32:
	pcalau12i	$a0, %pc_hi20(.L.str.980)
	addi.d	$a1, $a0, %pc_lo12(.L.str.980)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp33:
# %bb.186:
	ld.d	$a0, $s0, 0
	ld.bu	$a1, $s1, 72
	ld.d	$a3, $a0, 0
	beqz	$a1, .LBB27_255
# %bb.187:
.Ltmp48:
	pcalau12i	$a0, %pc_hi20(.L.str.989)
	addi.d	$a1, $a0, %pc_lo12(.L.str.989)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp49:
# %bb.188:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp50:
	pcalau12i	$a0, %pc_hi20(.L.str.990)
	addi.d	$a1, $a0, %pc_lo12(.L.str.990)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp51:
# %bb.189:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp52:
	pcalau12i	$a0, %pc_hi20(.L.str.991)
	addi.d	$a1, $a0, %pc_lo12(.L.str.991)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp53:
# %bb.190:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp54:
	pcalau12i	$a0, %pc_hi20(.L.str.992)
	addi.d	$a1, $a0, %pc_lo12(.L.str.992)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp55:
# %bb.191:
	pcalau12i	$a0, %pc_hi20(.L.str.993)
	addi.d	$a1, $a0, %pc_lo12(.L.str.993)
	b	.LBB27_263
.LBB27_192:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.895)
	addi.d	$a1, $a0, %pc_lo12(.L.str.895)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.896)
	addi.d	$a1, $a0, %pc_lo12(.L.str.896)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.897)
	addi.d	$a1, $a0, %pc_lo12(.L.str.897)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.898)
	addi.d	$a1, $a0, %pc_lo12(.L.str.898)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.899)
	addi.d	$a1, $a0, %pc_lo12(.L.str.899)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.900)
	addi.d	$a1, $a0, %pc_lo12(.L.str.900)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.901)
	addi.d	$a1, $a0, %pc_lo12(.L.str.901)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.902)
	addi.d	$a1, $a0, %pc_lo12(.L.str.902)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.903)
	addi.d	$a1, $a0, %pc_lo12(.L.str.903)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.904)
	addi.d	$a1, $a0, %pc_lo12(.L.str.904)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.905)
	addi.d	$a1, $a0, %pc_lo12(.L.str.905)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.906)
	addi.d	$a1, $a0, %pc_lo12(.L.str.906)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.907)
	addi.d	$a1, $a0, %pc_lo12(.L.str.907)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.908)
	addi.d	$a1, $a0, %pc_lo12(.L.str.908)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.909)
	addi.d	$a1, $a0, %pc_lo12(.L.str.909)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.910)
	addi.d	$a1, $a0, %pc_lo12(.L.str.910)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.911)
	addi.d	$a1, $a0, %pc_lo12(.L.str.911)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.912)
	addi.d	$a1, $a0, %pc_lo12(.L.str.912)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.913)
	addi.d	$a1, $a0, %pc_lo12(.L.str.913)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.914)
	addi.d	$a1, $a0, %pc_lo12(.L.str.914)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.915)
	addi.d	$a1, $a0, %pc_lo12(.L.str.915)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.916)
	addi.d	$a1, $a0, %pc_lo12(.L.str.916)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.917)
	addi.d	$a1, $a0, %pc_lo12(.L.str.917)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.918)
	addi.d	$a1, $a0, %pc_lo12(.L.str.918)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.919)
	addi.d	$a1, $a0, %pc_lo12(.L.str.919)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.920)
	addi.d	$a1, $a0, %pc_lo12(.L.str.920)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.921)
	addi.d	$a1, $a0, %pc_lo12(.L.str.921)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.922)
	addi.d	$a1, $a0, %pc_lo12(.L.str.922)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.923)
	addi.d	$a1, $a0, %pc_lo12(.L.str.923)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.924)
	addi.d	$a1, $a0, %pc_lo12(.L.str.924)
	b	.LBB27_370
.LBB27_193:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	st.w	$zero, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	pcalau12i	$a0, %pc_hi20(.L.str.948)
	addi.d	$a1, $a0, %pc_lo12(.L.str.948)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s2, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 784
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.945)
	addi.d	$a1, $a0, %pc_lo12(.L.str.945)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.w	$a1, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	ld.d	$a3, $a0, 72
	addi.d	$a0, $a1, 1
	st.w	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.949)
	addi.d	$a1, $a0, %pc_lo12(.L.str.949)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	addi.d	$a0, $sp, 784
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.950)
	addi.d	$a1, $a0, %pc_lo12(.L.str.950)
	b	.LBB27_343
.LBB27_194:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s2, $a0, %got_pc_lo12(g_options)
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(_ZN2kc26f_make_identifier_basenameEPKc)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.545)
	addi.d	$a1, $a0, %pc_lo12(.L.str.545)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(pg_filename)
	ld.d	$a0, $a0, %got_pc_lo12(pg_filename)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.546)
	addi.d	$a1, $a0, %pc_lo12(.L.str.546)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.547)
	addi.d	$a1, $a0, %pc_lo12(.L.str.547)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	addi.d	$a0, $s2, 120
	pcalau12i	$a1, %pc_hi20(.L.str.312)
	addi.d	$a1, $a1, %pc_lo12(.L.str.312)
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_196
# %bb.195:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.522)
	addi.d	$a1, $a0, %pc_lo12(.L.str.522)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 120
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_196:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.548)
	addi.d	$a1, $a0, %pc_lo12(.L.str.548)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 184
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.549)
	addi.d	$a1, $a0, %pc_lo12(.L.str.549)
.LBB27_197:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	beqz	$s1, .LBB27_344
# %bb.198:
	move	$a0, $s1
	ld.d	$s6, $sp, 984                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 992                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 1000                  # 8-byte Folded Reload
	ld.d	$s3, $sp, 1008                  # 8-byte Folded Reload
	ld.d	$s2, $sp, 1016                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 1024                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 1032                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 1040                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 1048                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 1056
	pcaddu18i	$t8, %call36(_ZdaPv)
	jr	$t8
.LBB27_199:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
	move	$a1, $s0
	b	.LBB27_371
.LBB27_200:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.362)
	addi.d	$a1, $a0, %pc_lo12(.L.str.362)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.363)
	addi.d	$a1, $a0, %pc_lo12(.L.str.363)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.364)
	addi.d	$a1, $a0, %pc_lo12(.L.str.364)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.365)
	addi.d	$a1, $a0, %pc_lo12(.L.str.365)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.366)
	addi.d	$a1, $a0, %pc_lo12(.L.str.366)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.367)
	addi.d	$a1, $a0, %pc_lo12(.L.str.367)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.368)
	addi.d	$a1, $a0, %pc_lo12(.L.str.368)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.369)
	addi.d	$a1, $a0, %pc_lo12(.L.str.369)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.370)
	addi.d	$a1, $a0, %pc_lo12(.L.str.370)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.371)
	addi.d	$a1, $a0, %pc_lo12(.L.str.371)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.372)
	addi.d	$a1, $a0, %pc_lo12(.L.str.372)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $a0, 70
	bnez	$a0, .LBB27_344
# %bb.201:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.373)
	addi.d	$a1, $a0, %pc_lo12(.L.str.373)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.374)
	addi.d	$a1, $a0, %pc_lo12(.L.str.374)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.375)
	addi.d	$a1, $a0, %pc_lo12(.L.str.375)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.376)
	addi.d	$a1, $a0, %pc_lo12(.L.str.376)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.377)
	addi.d	$a1, $a0, %pc_lo12(.L.str.377)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.378)
	addi.d	$a1, $a0, %pc_lo12(.L.str.378)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.379)
	addi.d	$a1, $a0, %pc_lo12(.L.str.379)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.380)
	addi.d	$a1, $a0, %pc_lo12(.L.str.380)
	b	.LBB27_370
.LBB27_202:
	move	$s2, $a0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.519)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thefnfiles)
	ld.d	$a0, $a0, %got_pc_lo12(Thefnfiles)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a1, $a0, %pc_lo12(.L.str.520)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1022)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1022)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 784
	ori	$a2, $zero, 2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1023)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1023)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	addi.d	$a0, $sp, 784
	ori	$a2, $zero, 3
	move	$a1, $s1
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1024)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1024)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	addi.d	$a0, $sp, 784
	ori	$a2, $zero, 8
	move	$a1, $s1
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1025)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1025)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1026)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1026)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1027)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1027)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1028)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1028)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1029)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1029)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1030)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1030)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1031)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1031)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1032)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1032)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1033)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1033)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1034)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1034)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1035)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1035)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1036)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1036)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s1, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s1, 67
	bnez	$a0, .LBB27_204
# %bb.203:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1037)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1037)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1038)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1038)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_204:
	ld.bu	$a0, $s1, 68
	bnez	$a0, .LBB27_206
# %bb.205:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1039)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1039)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_206:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1040)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1040)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1041)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1041)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1042)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1042)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1043)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1043)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1044)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1044)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_gen_deprecatedE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc19view_gen_deprecatedE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1045)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1045)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1046)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1046)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_open_namespaceE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc19view_open_namespaceE)
	move	$a0, $s2
	move	$a1, $s0
	b	.LBB27_213
.LBB27_207:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.342)
	addi.d	$a1, $a0, %pc_lo12(.L.str.342)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Therviewnames)
	ld.d	$a0, $a0, %got_pc_lo12(Therviewnames)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc19view_gen_rewritek_hE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc19view_gen_rewritek_hE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.343)
	addi.d	$a1, $a0, %pc_lo12(.L.str.343)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s1, $a0, %got_pc_lo12(g_options)
	addi.d	$a0, $s1, 152
	pcalau12i	$a1, %pc_hi20(.L.str.312)
	addi.d	$a1, $a1, %pc_lo12(.L.str.312)
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_209
# %bb.208:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 152
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_209:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.344)
	addi.d	$a1, $a0, %pc_lo12(.L.str.344)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.345)
	addi.d	$a1, $a0, %pc_lo12(.L.str.345)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.346)
	addi.d	$a1, $a0, %pc_lo12(.L.str.346)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s1, 115
	beqz	$a0, .LBB27_211
# %bb.210:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.347)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.348)
	addi.d	$a1, $a0, %pc_lo12(.L.str.348)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.349)
	addi.d	$a1, $a0, %pc_lo12(.L.str.349)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.350)
	addi.d	$a1, $a0, %pc_lo12(.L.str.350)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.351)
	addi.d	$a1, $a0, %pc_lo12(.L.str.351)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_211:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.352)
	addi.d	$a1, $a0, %pc_lo12(.L.str.352)
	b	.LBB27_370
.LBB27_212:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.933)
	addi.d	$a1, $a0, %pc_lo12(.L.str.933)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	ld.w	$a2, $a0, %pc_lo12(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 784
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
.LBB27_213:
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.934)
	addi.d	$a1, $a0, %pc_lo12(.L.str.934)
	b	.LBB27_343
.LBB27_214:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.342)
	addi.d	$a1, $a0, %pc_lo12(.L.str.342)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Theuviewnames)
	ld.d	$a0, $a0, %got_pc_lo12(Theuviewnames)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc14view_uview_defE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc14view_uview_defE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.353)
	addi.d	$a1, $a0, %pc_lo12(.L.str.353)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s2, $a0, %got_pc_lo12(g_options)
	addi.d	$s1, $s2, 152
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a1, $a0, %pc_lo12(.L.str.312)
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_216
# %bb.215:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 152
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_216:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.354)
	addi.d	$a1, $a0, %pc_lo12(.L.str.354)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.355)
	addi.d	$a1, $a0, %pc_lo12(.L.str.355)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.356)
	addi.d	$a1, $a0, %pc_lo12(.L.str.356)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a1, $a0, %pc_lo12(.L.str.312)
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_218
# %bb.217:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 152
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_218:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.357)
	addi.d	$a1, $a0, %pc_lo12(.L.str.357)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a1, $a0, %pc_lo12(.L.str.312)
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_220
# %bb.219:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 152
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_220:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.358)
	addi.d	$a1, $a0, %pc_lo12(.L.str.358)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.359)
	addi.d	$a1, $a0, %pc_lo12(.L.str.359)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	b	.LBB27_370
.LBB27_221:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.801)
	addi.d	$a1, $a0, %pc_lo12(.L.str.801)
	b	.LBB27_370
.LBB27_222:
	pcalau12i	$a0, %pc_hi20(.L.str.802)
	addi.d	$a0, $a0, %pc_lo12(.L.str.802)
	addi.w	$s1, $zero, -1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.803)
	addi.d	$a0, $a0, %pc_lo12(.L.str.803)
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.804)
	addi.d	$a1, $a0, %pc_lo12(.L.str.804)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s2, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 784
	ori	$a2, $zero, 69
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.805)
	addi.d	$s4, $a0, %pc_lo12(.L.str.805)
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.806)
	addi.d	$a1, $a0, %pc_lo12(.L.str.806)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.807)
	addi.d	$a1, $a0, %pc_lo12(.L.str.807)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	addi.d	$a0, $sp, 784
	ori	$a2, $zero, 71
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.808)
	addi.d	$a1, $a0, %pc_lo12(.L.str.808)
	b	.LBB27_343
.LBB27_223:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.447)
	addi.d	$a1, $a0, %pc_lo12(.L.str.447)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.448)
	addi.d	$a1, $a0, %pc_lo12(.L.str.448)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s3, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s3, 72
	beqz	$a0, .LBB27_369
# %bb.224:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.449)
	addi.d	$a1, $a0, %pc_lo12(.L.str.449)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 73
	beqz	$a0, .LBB27_226
# %bb.225:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.450)
	addi.d	$a1, $a0, %pc_lo12(.L.str.450)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_226:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.451)
	addi.d	$a1, $a0, %pc_lo12(.L.str.451)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 73
	beqz	$a0, .LBB27_228
# %bb.227:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.452)
	addi.d	$a1, $a0, %pc_lo12(.L.str.452)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_228:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.453)
	addi.d	$a1, $a0, %pc_lo12(.L.str.453)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.454)
	addi.d	$a1, $a0, %pc_lo12(.L.str.454)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 73
	beqz	$a0, .LBB27_230
# %bb.229:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.455)
	addi.d	$a1, $a0, %pc_lo12(.L.str.455)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_230:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.456)
	addi.d	$a1, $a0, %pc_lo12(.L.str.456)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 73
	beqz	$a0, .LBB27_232
# %bb.231:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.457)
	addi.d	$a1, $a0, %pc_lo12(.L.str.457)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.458)
	addi.d	$a1, $a0, %pc_lo12(.L.str.458)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_232:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.459)
	addi.d	$a1, $a0, %pc_lo12(.L.str.459)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(The_abstract_phylum_ref_decl)
	ld.d	$a0, $a0, %got_pc_lo12(The_abstract_phylum_ref_decl)
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc21view_gen_member_dcl_hE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc21view_gen_member_dcl_hE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.460)
	addi.d	$a1, $a0, %pc_lo12(.L.str.460)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 73
	beqz	$a0, .LBB27_234
# %bb.233:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.461)
	addi.d	$a1, $a0, %pc_lo12(.L.str.461)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_234:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.462)
	addi.d	$a1, $a0, %pc_lo12(.L.str.462)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.463)
	addi.d	$a1, $a0, %pc_lo12(.L.str.463)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.464)
	addi.d	$a1, $a0, %pc_lo12(.L.str.464)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.465)
	addi.d	$a1, $a0, %pc_lo12(.L.str.465)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.466)
	addi.d	$a1, $a0, %pc_lo12(.L.str.466)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.467)
	addi.d	$a1, $a0, %pc_lo12(.L.str.467)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.468)
	addi.d	$a1, $a0, %pc_lo12(.L.str.468)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.469)
	addi.d	$a1, $a0, %pc_lo12(.L.str.469)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.bu	$a2, $s3, 73
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.472)
	addi.d	$a0, $a0, %pc_lo12(.L.str.472)
	masknez	$a0, $a0, $a2
	pcalau12i	$a1, %pc_hi20(.L.str.470)
	addi.d	$a1, $a1, %pc_lo12(.L.str.470)
	maskeqz	$a1, $a1, $a2
	or	$a1, $a1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.473)
	addi.d	$a0, $a0, %pc_lo12(.L.str.473)
	masknez	$a0, $a0, $a2
	pcalau12i	$a4, %pc_hi20(.L.str.471)
	addi.d	$a4, $a4, %pc_lo12(.L.str.471)
	maskeqz	$a2, $a4, $a2
	or	$s2, $a2, $a0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.474)
	addi.d	$a1, $a0, %pc_lo12(.L.str.474)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.475)
	addi.d	$a1, $a0, %pc_lo12(.L.str.475)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.476)
	addi.d	$a1, $a0, %pc_lo12(.L.str.476)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.477)
	addi.d	$a1, $a0, %pc_lo12(.L.str.477)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.478)
	addi.d	$a1, $a0, %pc_lo12(.L.str.478)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.479)
	addi.d	$a1, $a0, %pc_lo12(.L.str.479)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.480)
	addi.d	$a1, $a0, %pc_lo12(.L.str.480)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.481)
	addi.d	$a1, $a0, %pc_lo12(.L.str.481)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 73
	beqz	$a0, .LBB27_363
# %bb.235:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.482)
	addi.d	$a1, $a0, %pc_lo12(.L.str.482)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.483)
	addi.d	$a1, $a0, %pc_lo12(.L.str.483)
	b	.LBB27_364
.LBB27_236:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.892)
	addi.d	$a1, $a0, %pc_lo12(.L.str.892)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.893)
	addi.d	$a1, $a0, %pc_lo12(.L.str.893)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.894)
	addi.d	$a1, $a0, %pc_lo12(.L.str.894)
.LBB27_237:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	b	.LBB27_371
.LBB27_238:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.597)
	addi.d	$a1, $a0, %pc_lo12(.L.str.597)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.598)
	addi.d	$a1, $a0, %pc_lo12(.L.str.598)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.599)
	addi.d	$a1, $a0, %pc_lo12(.L.str.599)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.600)
	addi.d	$a1, $a0, %pc_lo12(.L.str.600)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.601)
	addi.d	$a1, $a0, %pc_lo12(.L.str.601)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.602)
	addi.d	$a1, $a0, %pc_lo12(.L.str.602)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Theargsnumbers)
	ld.d	$s1, $a0, %got_pc_lo12(Theargsnumbers)
	ld.d	$a0, $s1, 0
	pcaddu18i	$ra, %call36(_ZNK2kc16impl_argsnumbers4lastEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $a0, 8
	ori	$a1, $zero, 1
	slt	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a2, $a0, $a1
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 784
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 784
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.603)
	addi.d	$a1, $a0, %pc_lo12(.L.str.603)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.604)
	addi.d	$a1, $a0, %pc_lo12(.L.str.604)
	b	.LBB27_343
.LBB27_239:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.519)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thefnfiles)
	ld.d	$a0, $a0, %got_pc_lo12(Thefnfiles)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.520)
	addi.d	$a1, $a0, %pc_lo12(.L.str.520)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %got_pc_hi20(kimwitu_copyright)
	ld.d	$a1, $a0, %got_pc_lo12(kimwitu_copyright)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.736)
	addi.d	$a1, $a0, %pc_lo12(.L.str.736)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s1, $a0, %got_pc_lo12(g_options)
	addi.d	$a0, $s1, 120
	pcalau12i	$a1, %pc_hi20(.L.str.312)
	addi.d	$a1, $a1, %pc_lo12(.L.str.312)
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_241
# %bb.240:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.522)
	addi.d	$a1, $a0, %pc_lo12(.L.str.522)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 120
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_241:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.737)
	addi.d	$a1, $a0, %pc_lo12(.L.str.737)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 184
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.525)
	addi.d	$a1, $a0, %pc_lo12(.L.str.525)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 184
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.738)
	addi.d	$a1, $a0, %pc_lo12(.L.str.738)
	b	.LBB27_370
.LBB27_242:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.532)
	addi.d	$a1, $a0, %pc_lo12(.L.str.532)
	b	.LBB27_370
.LBB27_243:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.522)
	addi.d	$a1, $a0, %pc_lo12(.L.str.522)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	b	.LBB27_370
.LBB27_244:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.394)
	addi.d	$a1, $a0, %pc_lo12(.L.str.394)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 69
	bnez	$a0, .LBB27_10
.LBB27_245:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.395)
	addi.d	$a1, $a0, %pc_lo12(.L.str.395)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.396)
	addi.d	$a1, $a0, %pc_lo12(.L.str.396)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.397)
	addi.d	$a1, $a0, %pc_lo12(.L.str.397)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 66
	bnez	$a0, .LBB27_11
.LBB27_246:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.398)
	addi.d	$a1, $a0, %pc_lo12(.L.str.398)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 68
	bnez	$a0, .LBB27_12
.LBB27_247:
	ld.d	$a0, $s0, 0
	ld.bu	$a1, $s4, 115
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.399)
	addi.d	$a0, $a0, %pc_lo12(.L.str.399)
	masknez	$a0, $a0, $a1
	pcalau12i	$a2, %pc_hi20(.L.str.400)
	addi.d	$a2, $a2, %pc_lo12(.L.str.400)
	maskeqz	$a1, $a2, $a1
	or	$a1, $a1, $a0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.401)
	addi.d	$a1, $a0, %pc_lo12(.L.str.401)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.402)
	addi.d	$a1, $a0, %pc_lo12(.L.str.402)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, 0
	pcaddu18i	$ra, %call36(_ZN2kc27f_post_create_in_phylumdeclEPNS_22impl_phylumdeclarationE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_13
	b	.LBB27_14
.LBB27_248:
	ld.w	$a1, $s5, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	sltui	$a1, $a1, 1
	or	$a0, $a0, $a1
	beqz	$a0, .LBB27_345
# %bb.249:
	ld.d	$a0, $s6, 0
	pcaddu18i	$ra, %call36(_ZN2kc27f_destructors_in_phylumdeclEPNS_22impl_phylumdeclarationE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_346
.LBB27_250:
	ld.bu	$a0, $s4, 67
	bnez	$a0, .LBB27_252
.LBB27_251:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.414)
	addi.d	$a1, $a0, %pc_lo12(.L.str.414)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_252:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.415)
	addi.d	$a1, $a0, %pc_lo12(.L.str.415)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 72
	beqz	$a0, .LBB27_352
# %bb.253:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.416)
	addi.d	$a1, $a0, %pc_lo12(.L.str.416)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.bu	$a2, $s4, 73
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.419)
	addi.d	$a0, $a0, %pc_lo12(.L.str.419)
	masknez	$a0, $a0, $a2
	pcalau12i	$a1, %pc_hi20(.L.str.417)
	addi.d	$a1, $a1, %pc_lo12(.L.str.417)
	maskeqz	$a1, $a1, $a2
	or	$a1, $a1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.420)
	addi.d	$a0, $a0, %pc_lo12(.L.str.420)
	masknez	$a0, $a0, $a2
	pcalau12i	$a4, %pc_hi20(.L.str.418)
	addi.d	$a4, $a4, %pc_lo12(.L.str.418)
	maskeqz	$a2, $a4, $a2
	or	$s3, $a2, $a0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.421)
	addi.d	$a1, $a0, %pc_lo12(.L.str.421)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.422)
	addi.d	$a1, $a0, %pc_lo12(.L.str.422)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.423)
	addi.d	$a1, $a0, %pc_lo12(.L.str.423)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.424)
	addi.d	$a1, $a0, %pc_lo12(.L.str.424)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.425)
	addi.d	$a1, $a0, %pc_lo12(.L.str.425)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.426)
	addi.d	$a1, $a0, %pc_lo12(.L.str.426)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.427)
	addi.d	$a1, $a0, %pc_lo12(.L.str.427)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.428)
	addi.d	$a1, $a0, %pc_lo12(.L.str.428)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.429)
	addi.d	$a1, $a0, %pc_lo12(.L.str.429)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 73
	beqz	$a0, .LBB27_348
# %bb.254:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.430)
	addi.d	$a1, $a0, %pc_lo12(.L.str.430)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.431)
	addi.d	$a1, $a0, %pc_lo12(.L.str.431)
	b	.LBB27_349
.LBB27_255:
.Ltmp34:
	pcalau12i	$a0, %pc_hi20(.L.str.981)
	addi.d	$a1, $a0, %pc_lo12(.L.str.981)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp35:
# %bb.256:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp36:
	pcalau12i	$a0, %pc_hi20(.L.str.982)
	addi.d	$a1, $a0, %pc_lo12(.L.str.982)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp37:
# %bb.257:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp38:
	pcalau12i	$a0, %pc_hi20(.L.str.983)
	addi.d	$a1, $a0, %pc_lo12(.L.str.983)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp39:
# %bb.258:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp40:
	pcalau12i	$a0, %pc_hi20(.L.str.984)
	addi.d	$a1, $a0, %pc_lo12(.L.str.984)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp41:
# %bb.259:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp42:
	pcalau12i	$a0, %pc_hi20(.L.str.985)
	addi.d	$a1, $a0, %pc_lo12(.L.str.985)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp43:
# %bb.260:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp44:
	pcalau12i	$a0, %pc_hi20(.L.str.986)
	addi.d	$a1, $a0, %pc_lo12(.L.str.986)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp45:
# %bb.261:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp46:
	pcalau12i	$a0, %pc_hi20(.L.str.987)
	addi.d	$a1, $a0, %pc_lo12(.L.str.987)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp47:
# %bb.262:
	pcalau12i	$a0, %pc_hi20(.L.str.988)
	addi.d	$a1, $a0, %pc_lo12(.L.str.988)
.LBB27_263:                             # %.invoke
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp56:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp57:
# %bb.264:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp58:
	pcalau12i	$a0, %pc_hi20(.L.str.994)
	addi.d	$a1, $a0, %pc_lo12(.L.str.994)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp59:
# %bb.265:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp60:
	pcalau12i	$a0, %pc_hi20(.L.str.995)
	addi.d	$a1, $a0, %pc_lo12(.L.str.995)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp61:
# %bb.266:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp62:
	pcalau12i	$a0, %pc_hi20(.L.str.996)
	addi.d	$a1, $a0, %pc_lo12(.L.str.996)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp63:
# %bb.267:
.Ltmp64:
	addi.d	$a0, $sp, 360
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp65:
# %bb.268:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 360
	ld.d	$a3, $a0, 0
.Ltmp66:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp67:
# %bb.269:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2023
	ld.d	$a0, $sp, 360
	addi.d	$a1, $sp, 376
	beq	$a0, $a1, .LBB27_271
# %bb.270:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2024
	ld.d	$a1, $sp, 376
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_271:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2026
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp69:
	pcalau12i	$a0, %pc_hi20(.L.str.997)
	addi.d	$a1, $a0, %pc_lo12(.L.str.997)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp70:
# %bb.272:
.Ltmp71:
	addi.d	$a0, $sp, 328
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp72:
# %bb.273:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 328
	ld.d	$a3, $a0, 0
.Ltmp73:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp74:
# %bb.274:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2027
	ld.d	$a0, $sp, 328
	addi.d	$a1, $sp, 344
	beq	$a0, $a1, .LBB27_276
# %bb.275:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2028
	ld.d	$a1, $sp, 344
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_276:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2030
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp76:
	pcalau12i	$a0, %pc_hi20(.L.str.998)
	addi.d	$a1, $a0, %pc_lo12(.L.str.998)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp77:
# %bb.277:
.Ltmp78:
	addi.d	$a0, $sp, 296
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp79:
# %bb.278:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 296
	ld.d	$a3, $a0, 0
.Ltmp80:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp81:
# %bb.279:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2031
	ld.d	$a0, $sp, 296
	addi.d	$a1, $sp, 312
	beq	$a0, $a1, .LBB27_281
# %bb.280:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2032
	ld.d	$a1, $sp, 312
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_281:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2034
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp83:
	pcalau12i	$a0, %pc_hi20(.L.str.999)
	addi.d	$a1, $a0, %pc_lo12(.L.str.999)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp84:
# %bb.282:
.Ltmp85:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp86:
# %bb.283:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 264
	ld.d	$a3, $a0, 0
.Ltmp87:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp88:
# %bb.284:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2035
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB27_286
# %bb.285:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2036
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_286:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2038
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp90:
	pcalau12i	$a0, %pc_hi20(.L.str.1000)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1000)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp91:
# %bb.287:
.Ltmp92:
	addi.d	$a0, $sp, 232
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp93:
# %bb.288:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 232
	ld.d	$a3, $a0, 0
.Ltmp94:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp95:
# %bb.289:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2039
	ld.d	$a0, $sp, 232
	addi.d	$a1, $sp, 248
	beq	$a0, $a1, .LBB27_291
# %bb.290:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2040
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_291:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2042
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp97:
	pcalau12i	$a0, %pc_hi20(.L.str.1001)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1001)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp98:
# %bb.292:
.Ltmp99:
	addi.d	$a0, $sp, 200
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp100:
# %bb.293:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 200
	ld.d	$a3, $a0, 0
.Ltmp101:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp102:
# %bb.294:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2043
	ld.d	$a0, $sp, 200
	addi.d	$a1, $sp, 216
	beq	$a0, $a1, .LBB27_296
# %bb.295:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2044
	ld.d	$a1, $sp, 216
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_296:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2046
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp104:
	pcalau12i	$a0, %pc_hi20(.L.str.1002)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1002)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp105:
# %bb.297:
.Ltmp106:
	addi.d	$a0, $sp, 168
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp107:
# %bb.298:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 168
	ld.d	$a3, $a0, 0
.Ltmp108:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp109:
# %bb.299:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2047
	ld.d	$a0, $sp, 168
	addi.d	$a1, $sp, 184
	beq	$a0, $a1, .LBB27_301
# %bb.300:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2048
	ld.d	$a1, $sp, 184
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_301:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2050
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp111:
	pcalau12i	$a0, %pc_hi20(.L.str.1003)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1003)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp112:
# %bb.302:
.Ltmp113:
	addi.d	$a0, $sp, 136
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp114:
# %bb.303:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 136
	ld.d	$a3, $a0, 0
.Ltmp115:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp116:
# %bb.304:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2051
	ld.d	$a0, $sp, 136
	addi.d	$a1, $sp, 152
	beq	$a0, $a1, .LBB27_306
# %bb.305:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2052
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_306:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2054
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp118:
	pcalau12i	$a0, %pc_hi20(.L.str.1004)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1004)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp119:
# %bb.307:
.Ltmp120:
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp121:
# %bb.308:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 104
	ld.d	$a3, $a0, 0
.Ltmp122:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp123:
# %bb.309:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2055
	ld.d	$a0, $sp, 104
	addi.d	$a1, $sp, 120
	beq	$a0, $a1, .LBB27_311
# %bb.310:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2056
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_311:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2058
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp125:
	pcalau12i	$a0, %pc_hi20(.L.str.1005)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1005)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp126:
# %bb.312:
.Ltmp127:
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp128:
# %bb.313:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 72
	ld.d	$a3, $a0, 0
.Ltmp129:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp130:
# %bb.314:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2059
	ld.d	$a0, $sp, 72
	addi.d	$a1, $sp, 88
	beq	$a0, $a1, .LBB27_316
# %bb.315:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2060
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_316:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2062
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp132:
	pcalau12i	$a0, %pc_hi20(.L.str.1006)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1006)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp133:
# %bb.317:
.Ltmp134:
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp135:
# %bb.318:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 40
	ld.d	$a3, $a0, 0
.Ltmp136:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp137:
# %bb.319:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2063
	ld.d	$a0, $sp, 40
	addi.d	$a1, $sp, 56
	beq	$a0, $a1, .LBB27_321
# %bb.320:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2064
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_321:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2066
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp139:
	pcalau12i	$a0, %pc_hi20(.L.str.1007)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1007)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp140:
# %bb.322:
.Ltmp141:
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 784
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp142:
# %bb.323:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	ld.d	$a3, $a0, 0
.Ltmp143:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp144:
# %bb.324:                              # %_ZN2kc7unparseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_21printer_functor_classERNS_11uview_classE.exit2067
	ld.d	$a0, $sp, 8
	addi.d	$a1, $sp, 24
	beq	$a0, $a1, .LBB27_326
# %bb.325:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2068
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB27_326:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit2070
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp146:
	pcalau12i	$a0, %pc_hi20(.L.str.1008)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1008)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp147:
# %bb.327:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp148:
	pcalau12i	$a0, %pc_hi20(.L.str.1009)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1009)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp149:
# %bb.328:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp150:
	pcalau12i	$a0, %pc_hi20(.L.str.1010)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1010)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp151:
# %bb.329:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp152:
	pcalau12i	$a0, %pc_hi20(.L.str.1011)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1011)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp153:
# %bb.330:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp154:
	pcalau12i	$a0, %pc_hi20(.L.str.1012)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1012)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp155:
# %bb.331:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp156:
	pcalau12i	$a0, %pc_hi20(.L.str.1013)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1013)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp157:
# %bb.332:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp158:
	pcalau12i	$a0, %pc_hi20(.L.str.1014)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1014)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp159:
# %bb.333:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp160:
	pcalau12i	$a0, %pc_hi20(.L.str.1015)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1015)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp161:
# %bb.334:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp162:
	pcalau12i	$a0, %pc_hi20(.L.str.1016)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1016)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp163:
# %bb.335:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp164:
	pcalau12i	$a0, %pc_hi20(.L.str.1017)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1017)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp165:
# %bb.336:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp166:
	pcalau12i	$a0, %pc_hi20(.L.str.1018)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1018)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp167:
# %bb.337:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp168:
	pcalau12i	$a0, %pc_hi20(.L.str.1019)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1019)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp169:
# %bb.338:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
.Ltmp170:
	pcalau12i	$a0, %pc_hi20(.L.str.1020)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1020)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.Ltmp171:
.LBB27_339:
	ld.d	$a0, $sp, 784
	addi.d	$a1, $sp, 800
	beq	$a0, $a1, .LBB27_344
# %bb.340:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2002
	ld.d	$a1, $sp, 800
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB27_344
.LBB27_341:
	pcalau12i	$a0, %pc_hi20(.L.str.816)
	addi.d	$a1, $a0, %pc_lo12(.L.str.816)
.LBB27_342:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.820)
	addi.d	$a1, $a0, %pc_lo12(.L.str.820)
.LBB27_343:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_344:
	ld.d	$s6, $sp, 984                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 992                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 1000                  # 8-byte Folded Reload
	ld.d	$s3, $sp, 1008                  # 8-byte Folded Reload
	ld.d	$s2, $sp, 1016                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 1024                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 1032                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 1040                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 1048                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 1056
	ret
.LBB27_345:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.411)
	addi.d	$a1, $a0, %pc_lo12(.L.str.411)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc29view_gen_user_assignment_inisE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc29view_gen_user_assignment_inisE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.412)
	addi.d	$a1, $a0, %pc_lo12(.L.str.412)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, 0
	pcaddu18i	$ra, %call36(_ZN2kc27f_destructors_in_phylumdeclEPNS_22impl_phylumdeclarationE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB27_250
.LBB27_346:
	pcalau12i	$a0, %pc_hi20(.L.str.413)
	addi.d	$a1, $a0, %pc_lo12(.L.str.413)
.LBB27_347:                             # %.sink.split
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 67
	beqz	$a0, .LBB27_251
	b	.LBB27_252
.LBB27_348:
	pcalau12i	$a0, %pc_hi20(.L.str.432)
	addi.d	$a1, $a0, %pc_lo12(.L.str.432)
.LBB27_349:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.433)
	addi.d	$a1, $a0, %pc_lo12(.L.str.433)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 73
	beqz	$a0, .LBB27_351
# %bb.350:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.434)
	addi.d	$a1, $a0, %pc_lo12(.L.str.434)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_351:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.361)
	addi.d	$a1, $a0, %pc_lo12(.L.str.361)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_352:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.388)
	addi.d	$a1, $a0, %pc_lo12(.L.str.388)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a1, $a0, %pc_lo12(.L.str.312)
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB27_354
# %bb.353:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 152
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_354:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.435)
	addi.d	$a1, $a0, %pc_lo12(.L.str.435)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(The_abstract_list_decl)
	ld.d	$s2, $a0, %got_pc_lo12(The_abstract_list_decl)
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 305
	bne	$a0, $a1, .LBB27_356
# %bb.355:
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	b	.LBB27_357
.LBB27_356:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.436)
	addi.d	$a1, $a0, %pc_lo12(.L.str.436)
	move	$a0, $s0
.LBB27_357:
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.437)
	addi.d	$a1, $a0, %pc_lo12(.L.str.437)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.438)
	addi.d	$a1, $a0, %pc_lo12(.L.str.438)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.439)
	addi.d	$a1, $a0, %pc_lo12(.L.str.439)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.440)
	addi.d	$a1, $a0, %pc_lo12(.L.str.440)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_count_nonstaticmembersE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_count_nonstaticmembersE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	pcaddu18i	$ra, %call36(_ZN2kc28f_constructors_in_phylumdeclEPNS_22impl_phylumdeclarationE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB27_360
# %bb.358:
	ld.w	$a0, $s5, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB27_360
# %bb.359:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.441)
	addi.d	$a1, $a0, %pc_lo12(.L.str.441)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc29view_gen_user_assignment_inisE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc29view_gen_user_assignment_inisE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.412)
	addi.d	$a1, $a0, %pc_lo12(.L.str.412)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_360:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.442)
	addi.d	$a1, $a0, %pc_lo12(.L.str.442)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.443)
	addi.d	$a1, $a0, %pc_lo12(.L.str.443)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.444)
	addi.d	$a1, $a0, %pc_lo12(.L.str.444)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 72
	beqz	$a0, .LBB27_362
# %bb.361:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.445)
	addi.d	$a1, $a0, %pc_lo12(.L.str.445)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_362:
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc21view_gen_member_dcl_hE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc21view_gen_member_dcl_hE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.361)
	addi.d	$a1, $a0, %pc_lo12(.L.str.361)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.446)
	addi.d	$a1, $a0, %pc_lo12(.L.str.446)
	b	.LBB27_370
.LBB27_363:
	pcalau12i	$a0, %pc_hi20(.L.str.484)
	addi.d	$a1, $a0, %pc_lo12(.L.str.484)
.LBB27_364:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.485)
	addi.d	$a1, $a0, %pc_lo12(.L.str.485)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 73
	beqz	$a0, .LBB27_366
# %bb.365:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.434)
	addi.d	$a1, $a0, %pc_lo12(.L.str.434)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_366:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.486)
	addi.d	$a1, $a0, %pc_lo12(.L.str.486)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 73
	beqz	$a0, .LBB27_368
# %bb.367:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.487)
	addi.d	$a1, $a0, %pc_lo12(.L.str.487)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.488)
	addi.d	$a1, $a0, %pc_lo12(.L.str.488)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.489)
	addi.d	$a1, $a0, %pc_lo12(.L.str.489)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.490)
	addi.d	$a1, $a0, %pc_lo12(.L.str.490)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_368:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.491)
	addi.d	$a1, $a0, %pc_lo12(.L.str.491)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.492)
	addi.d	$a1, $a0, %pc_lo12(.L.str.492)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB27_369:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.493)
	addi.d	$a1, $a0, %pc_lo12(.L.str.493)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.494)
	addi.d	$a1, $a0, %pc_lo12(.L.str.494)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.495)
	addi.d	$a1, $a0, %pc_lo12(.L.str.495)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.496)
	addi.d	$a1, $a0, %pc_lo12(.L.str.496)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.497)
	addi.d	$a1, $a0, %pc_lo12(.L.str.497)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Thestorageclasses)
	ld.d	$a0, $a0, %got_pc_lo12(Thestorageclasses)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_gen_operatormap_type_hE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_gen_operatormap_type_hE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.498)
	addi.d	$a1, $a0, %pc_lo12(.L.str.498)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.499)
	addi.d	$a1, $a0, %pc_lo12(.L.str.499)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.500)
	addi.d	$a1, $a0, %pc_lo12(.L.str.500)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.501)
	addi.d	$a1, $a0, %pc_lo12(.L.str.501)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.502)
	addi.d	$a1, $a0, %pc_lo12(.L.str.502)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.503)
	addi.d	$a1, $a0, %pc_lo12(.L.str.503)
.LBB27_370:
	move	$a0, $s0
.LBB27_371:
	move	$a2, $fp
.LBB27_372:
	ld.d	$s6, $sp, 984                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 992                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 1000                  # 8-byte Folded Reload
	ld.d	$s3, $sp, 1008                  # 8-byte Folded Reload
	ld.d	$s2, $sp, 1016                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 1024                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 1032                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 1040                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 1048                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 1056
	jr	$a3
.LBB27_373:
.Ltmp275:
	ld.d	$a2, $sp, 456
	addi.d	$a1, $sp, 472
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.374:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1999
	ld.d	$a0, $sp, 472
	b	.LBB27_422
.LBB27_375:
.Ltmp254:
	ld.d	$a2, $sp, 488
	addi.d	$a1, $sp, 504
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.376:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1996
	ld.d	$a0, $sp, 504
	b	.LBB27_422
.LBB27_377:
.Ltmp245:
	ld.d	$a2, $sp, 520
	addi.d	$a1, $sp, 536
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.378:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1993
	ld.d	$a0, $sp, 536
	b	.LBB27_422
.LBB27_379:
.Ltmp238:
	ld.d	$a2, $sp, 552
	addi.d	$a1, $sp, 568
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.380:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1990
	ld.d	$a0, $sp, 568
	b	.LBB27_422
.LBB27_381:
.Ltmp231:
	ld.d	$a2, $sp, 584
	addi.d	$a1, $sp, 600
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.382:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1987
	ld.d	$a0, $sp, 600
	b	.LBB27_422
.LBB27_383:
.Ltmp222:
	ld.d	$a2, $sp, 616
	addi.d	$a1, $sp, 632
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.384:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1984
	ld.d	$a0, $sp, 632
	b	.LBB27_422
.LBB27_385:
.Ltmp215:
	ld.d	$a2, $sp, 648
	addi.d	$a1, $sp, 664
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.386:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1981
	ld.d	$a0, $sp, 664
	b	.LBB27_422
.LBB27_387:
.Ltmp202:
	ld.d	$a2, $sp, 680
	addi.d	$a1, $sp, 696
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.388:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1978
	ld.d	$a0, $sp, 696
	b	.LBB27_422
.LBB27_389:
.Ltmp195:
	ld.d	$a2, $sp, 712
	addi.d	$a1, $sp, 728
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.390:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1975
	ld.d	$a0, $sp, 728
	b	.LBB27_422
.LBB27_391:
.Ltmp184:
	ld.d	$a2, $sp, 744
	addi.d	$a1, $sp, 760
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.392:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i1972
	ld.d	$a0, $sp, 760
	b	.LBB27_422
.LBB27_393:
.Ltmp175:
	b	.LBB27_424
.LBB27_394:
.Ltmp145:
	ld.d	$a2, $sp, 8
	addi.d	$a1, $sp, 24
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.395:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2107
	ld.d	$a0, $sp, 24
	b	.LBB27_422
.LBB27_396:
.Ltmp138:
	ld.d	$a2, $sp, 40
	addi.d	$a1, $sp, 56
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.397:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2104
	ld.d	$a0, $sp, 56
	b	.LBB27_422
.LBB27_398:
.Ltmp131:
	ld.d	$a2, $sp, 72
	addi.d	$a1, $sp, 88
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.399:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2101
	ld.d	$a0, $sp, 88
	b	.LBB27_422
.LBB27_400:
.Ltmp124:
	ld.d	$a2, $sp, 104
	addi.d	$a1, $sp, 120
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.401:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2098
	ld.d	$a0, $sp, 120
	b	.LBB27_422
.LBB27_402:
.Ltmp117:
	ld.d	$a2, $sp, 136
	addi.d	$a1, $sp, 152
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.403:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2095
	ld.d	$a0, $sp, 152
	b	.LBB27_422
.LBB27_404:
.Ltmp110:
	ld.d	$a2, $sp, 168
	addi.d	$a1, $sp, 184
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.405:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2092
	ld.d	$a0, $sp, 184
	b	.LBB27_422
.LBB27_406:
.Ltmp103:
	ld.d	$a2, $sp, 200
	addi.d	$a1, $sp, 216
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.407:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2089
	ld.d	$a0, $sp, 216
	b	.LBB27_422
.LBB27_408:
.Ltmp96:
	ld.d	$a2, $sp, 232
	addi.d	$a1, $sp, 248
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.409:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2086
	ld.d	$a0, $sp, 248
	b	.LBB27_422
.LBB27_410:
.Ltmp89:
	ld.d	$a2, $sp, 264
	addi.d	$a1, $sp, 280
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.411:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2083
	ld.d	$a0, $sp, 280
	b	.LBB27_422
.LBB27_412:
.Ltmp82:
	ld.d	$a2, $sp, 296
	addi.d	$a1, $sp, 312
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.413:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2080
	ld.d	$a0, $sp, 312
	b	.LBB27_422
.LBB27_414:
.Ltmp75:
	ld.d	$a2, $sp, 328
	addi.d	$a1, $sp, 344
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.415:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2077
	ld.d	$a0, $sp, 344
	b	.LBB27_422
.LBB27_416:
.Ltmp68:
	ld.d	$a2, $sp, 360
	addi.d	$a1, $sp, 376
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.417:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2074
	ld.d	$a0, $sp, 376
	b	.LBB27_422
.LBB27_418:
.Ltmp21:
	ld.d	$a2, $sp, 392
	addi.d	$a1, $sp, 408
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.419:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2020
	ld.d	$a0, $sp, 408
	b	.LBB27_422
.LBB27_420:
.Ltmp14:
	ld.d	$a2, $sp, 424
	addi.d	$a1, $sp, 440
	move	$fp, $a0
	beq	$a2, $a1, .LBB27_428
# %bb.421:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2017
	ld.d	$a0, $sp, 440
.LBB27_422:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1974
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB27_428
.LBB27_423:
.Ltmp5:
.LBB27_424:
	move	$fp, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB27_425:
.Ltmp292:
	b	.LBB27_427
.LBB27_426:
.Ltmp172:
.LBB27_427:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1974
	move	$fp, $a0
.LBB27_428:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit1974
	ld.d	$a0, $sp, 784
	addi.d	$a1, $sp, 800
	bne	$a0, $a1, .LBB27_430
# %bb.429:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB27_430:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2005
	ld.d	$a1, $sp, 800
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end27:
	.size	_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end27-_ZN2kc46impl_phylumdeclarationsroot_PhylumDeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI27_0:
	.word	.LBB27_344-.LJTI27_0
	.word	.LBB27_344-.LJTI27_0
	.word	.LBB27_344-.LJTI27_0
	.word	.LBB27_159-.LJTI27_0
	.word	.LBB27_160-.LJTI27_0
	.word	.LBB27_202-.LJTI27_0
	.word	.LBB27_163-.LJTI27_0
	.word	.LBB27_165-.LJTI27_0
	.word	.LBB27_142-.LJTI27_0
	.word	.LBB27_164-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_193-.LJTI27_0
	.word	.LBB27_162-.LJTI27_0
	.word	.LBB27_344-.LJTI27_0
	.word	.LBB27_135-.LJTI27_0
	.word	.LBB27_136-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_154-.LJTI27_0
	.word	.LBB27_344-.LJTI27_0
	.word	.LBB27_143-.LJTI27_0
	.word	.LBB27_212-.LJTI27_0
	.word	.LBB27_130-.LJTI27_0
	.word	.LBB27_192-.LJTI27_0
	.word	.LBB27_236-.LJTI27_0
	.word	.LBB27_132-.LJTI27_0
	.word	.LBB27_109-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_137-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_108-.LJTI27_0
	.word	.LBB27_222-.LJTI27_0
	.word	.LBB27_221-.LJTI27_0
	.word	.LBB27_129-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_2-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_133-.LJTI27_0
	.word	.LBB27_144-.LJTI27_0
	.word	.LBB27_134-.LJTI27_0
	.word	.LBB27_239-.LJTI27_0
	.word	.LBB27_128-.LJTI27_0
	.word	.LBB27_161-.LJTI27_0
	.word	.LBB27_238-.LJTI27_0
	.word	.LBB27_106-.LJTI27_0
	.word	.LBB27_148-.LJTI27_0
	.word	.LBB27_25-.LJTI27_0
	.word	.LBB27_22-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_131-.LJTI27_0
	.word	.LBB27_141-.LJTI27_0
	.word	.LBB27_194-.LJTI27_0
	.word	.LBB27_243-.LJTI27_0
	.word	.LBB27_107-.LJTI27_0
	.word	.LBB27_145-.LJTI27_0
	.word	.LBB27_153-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_242-.LJTI27_0
	.word	.LBB27_149-.LJTI27_0
	.word	.LBB27_23-.LJTI27_0
	.word	.LBB27_2-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_223-.LJTI27_0
	.word	.LBB27_4-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_157-.LJTI27_0
	.word	.LBB27_200-.LJTI27_0
	.word	.LBB27_3-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_214-.LJTI27_0
	.word	.LBB27_199-.LJTI27_0
	.word	.LBB27_207-.LJTI27_0
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table27:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin1-.Lfunc_begin1    # >> Call Site 1 <<
	.uleb128 .Ltmp173-.Lfunc_begin1         #   Call between .Lfunc_begin1 and .Ltmp173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp173-.Lfunc_begin1         # >> Call Site 2 <<
	.uleb128 .Ltmp174-.Ltmp173              #   Call between .Ltmp173 and .Ltmp174
	.uleb128 .Ltmp175-.Lfunc_begin1         #     jumps to .Ltmp175
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp176-.Lfunc_begin1         # >> Call Site 3 <<
	.uleb128 .Ltmp181-.Ltmp176              #   Call between .Ltmp176 and .Ltmp181
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp182-.Lfunc_begin1         # >> Call Site 4 <<
	.uleb128 .Ltmp183-.Ltmp182              #   Call between .Ltmp182 and .Ltmp183
	.uleb128 .Ltmp184-.Lfunc_begin1         #     jumps to .Ltmp184
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp183-.Lfunc_begin1         # >> Call Site 5 <<
	.uleb128 .Ltmp185-.Ltmp183              #   Call between .Ltmp183 and .Ltmp185
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp185-.Lfunc_begin1         # >> Call Site 6 <<
	.uleb128 .Ltmp192-.Ltmp185              #   Call between .Ltmp185 and .Ltmp192
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp193-.Lfunc_begin1         # >> Call Site 7 <<
	.uleb128 .Ltmp194-.Ltmp193              #   Call between .Ltmp193 and .Ltmp194
	.uleb128 .Ltmp195-.Lfunc_begin1         #     jumps to .Ltmp195
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp194-.Lfunc_begin1         # >> Call Site 8 <<
	.uleb128 .Ltmp196-.Ltmp194              #   Call between .Ltmp194 and .Ltmp196
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp196-.Lfunc_begin1         # >> Call Site 9 <<
	.uleb128 .Ltmp199-.Ltmp196              #   Call between .Ltmp196 and .Ltmp199
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp200-.Lfunc_begin1         # >> Call Site 10 <<
	.uleb128 .Ltmp201-.Ltmp200              #   Call between .Ltmp200 and .Ltmp201
	.uleb128 .Ltmp202-.Lfunc_begin1         #     jumps to .Ltmp202
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp201-.Lfunc_begin1         # >> Call Site 11 <<
	.uleb128 .Ltmp203-.Ltmp201              #   Call between .Ltmp201 and .Ltmp203
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp203-.Lfunc_begin1         # >> Call Site 12 <<
	.uleb128 .Ltmp212-.Ltmp203              #   Call between .Ltmp203 and .Ltmp212
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp213-.Lfunc_begin1         # >> Call Site 13 <<
	.uleb128 .Ltmp214-.Ltmp213              #   Call between .Ltmp213 and .Ltmp214
	.uleb128 .Ltmp215-.Lfunc_begin1         #     jumps to .Ltmp215
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp214-.Lfunc_begin1         # >> Call Site 14 <<
	.uleb128 .Ltmp216-.Ltmp214              #   Call between .Ltmp214 and .Ltmp216
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp216-.Lfunc_begin1         # >> Call Site 15 <<
	.uleb128 .Ltmp219-.Ltmp216              #   Call between .Ltmp216 and .Ltmp219
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp220-.Lfunc_begin1         # >> Call Site 16 <<
	.uleb128 .Ltmp221-.Ltmp220              #   Call between .Ltmp220 and .Ltmp221
	.uleb128 .Ltmp222-.Lfunc_begin1         #     jumps to .Ltmp222
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp221-.Lfunc_begin1         # >> Call Site 17 <<
	.uleb128 .Ltmp223-.Ltmp221              #   Call between .Ltmp221 and .Ltmp223
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp223-.Lfunc_begin1         # >> Call Site 18 <<
	.uleb128 .Ltmp228-.Ltmp223              #   Call between .Ltmp223 and .Ltmp228
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp229-.Lfunc_begin1         # >> Call Site 19 <<
	.uleb128 .Ltmp230-.Ltmp229              #   Call between .Ltmp229 and .Ltmp230
	.uleb128 .Ltmp231-.Lfunc_begin1         #     jumps to .Ltmp231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp230-.Lfunc_begin1         # >> Call Site 20 <<
	.uleb128 .Ltmp232-.Ltmp230              #   Call between .Ltmp230 and .Ltmp232
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp232-.Lfunc_begin1         # >> Call Site 21 <<
	.uleb128 .Ltmp235-.Ltmp232              #   Call between .Ltmp232 and .Ltmp235
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp236-.Lfunc_begin1         # >> Call Site 22 <<
	.uleb128 .Ltmp237-.Ltmp236              #   Call between .Ltmp236 and .Ltmp237
	.uleb128 .Ltmp238-.Lfunc_begin1         #     jumps to .Ltmp238
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp237-.Lfunc_begin1         # >> Call Site 23 <<
	.uleb128 .Ltmp239-.Ltmp237              #   Call between .Ltmp237 and .Ltmp239
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp239-.Lfunc_begin1         # >> Call Site 24 <<
	.uleb128 .Ltmp242-.Ltmp239              #   Call between .Ltmp239 and .Ltmp242
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp243-.Lfunc_begin1         # >> Call Site 25 <<
	.uleb128 .Ltmp244-.Ltmp243              #   Call between .Ltmp243 and .Ltmp244
	.uleb128 .Ltmp245-.Lfunc_begin1         #     jumps to .Ltmp245
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp244-.Lfunc_begin1         # >> Call Site 26 <<
	.uleb128 .Ltmp246-.Ltmp244              #   Call between .Ltmp244 and .Ltmp246
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp246-.Lfunc_begin1         # >> Call Site 27 <<
	.uleb128 .Ltmp251-.Ltmp246              #   Call between .Ltmp246 and .Ltmp251
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp252-.Lfunc_begin1         # >> Call Site 28 <<
	.uleb128 .Ltmp253-.Ltmp252              #   Call between .Ltmp252 and .Ltmp253
	.uleb128 .Ltmp254-.Lfunc_begin1         #     jumps to .Ltmp254
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp253-.Lfunc_begin1         # >> Call Site 29 <<
	.uleb128 .Ltmp255-.Ltmp253              #   Call between .Ltmp253 and .Ltmp255
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp255-.Lfunc_begin1         # >> Call Site 30 <<
	.uleb128 .Ltmp272-.Ltmp255              #   Call between .Ltmp255 and .Ltmp272
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp273-.Lfunc_begin1         # >> Call Site 31 <<
	.uleb128 .Ltmp274-.Ltmp273              #   Call between .Ltmp273 and .Ltmp274
	.uleb128 .Ltmp275-.Lfunc_begin1         #     jumps to .Ltmp275
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp274-.Lfunc_begin1         # >> Call Site 32 <<
	.uleb128 .Ltmp276-.Ltmp274              #   Call between .Ltmp274 and .Ltmp276
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp276-.Lfunc_begin1         # >> Call Site 33 <<
	.uleb128 .Ltmp291-.Ltmp276              #   Call between .Ltmp276 and .Ltmp291
	.uleb128 .Ltmp292-.Lfunc_begin1         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp291-.Lfunc_begin1         # >> Call Site 34 <<
	.uleb128 .Ltmp3-.Ltmp291                #   Call between .Ltmp291 and .Ltmp3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3-.Lfunc_begin1           # >> Call Site 35 <<
	.uleb128 .Ltmp4-.Ltmp3                  #   Call between .Ltmp3 and .Ltmp4
	.uleb128 .Ltmp5-.Lfunc_begin1           #     jumps to .Ltmp5
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp6-.Lfunc_begin1           # >> Call Site 36 <<
	.uleb128 .Ltmp11-.Ltmp6                 #   Call between .Ltmp6 and .Ltmp11
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp12-.Lfunc_begin1          # >> Call Site 37 <<
	.uleb128 .Ltmp13-.Ltmp12                #   Call between .Ltmp12 and .Ltmp13
	.uleb128 .Ltmp14-.Lfunc_begin1          #     jumps to .Ltmp14
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp13-.Lfunc_begin1          # >> Call Site 38 <<
	.uleb128 .Ltmp15-.Ltmp13                #   Call between .Ltmp13 and .Ltmp15
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp15-.Lfunc_begin1          # >> Call Site 39 <<
	.uleb128 .Ltmp18-.Ltmp15                #   Call between .Ltmp15 and .Ltmp18
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp19-.Lfunc_begin1          # >> Call Site 40 <<
	.uleb128 .Ltmp20-.Ltmp19                #   Call between .Ltmp19 and .Ltmp20
	.uleb128 .Ltmp21-.Lfunc_begin1          #     jumps to .Ltmp21
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp20-.Lfunc_begin1          # >> Call Site 41 <<
	.uleb128 .Ltmp22-.Ltmp20                #   Call between .Ltmp20 and .Ltmp22
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp22-.Lfunc_begin1          # >> Call Site 42 <<
	.uleb128 .Ltmp55-.Ltmp22                #   Call between .Ltmp22 and .Ltmp55
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp55-.Lfunc_begin1          # >> Call Site 43 <<
	.uleb128 .Ltmp34-.Ltmp55                #   Call between .Ltmp55 and .Ltmp34
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp34-.Lfunc_begin1          # >> Call Site 44 <<
	.uleb128 .Ltmp65-.Ltmp34                #   Call between .Ltmp34 and .Ltmp65
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp66-.Lfunc_begin1          # >> Call Site 45 <<
	.uleb128 .Ltmp67-.Ltmp66                #   Call between .Ltmp66 and .Ltmp67
	.uleb128 .Ltmp68-.Lfunc_begin1          #     jumps to .Ltmp68
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp67-.Lfunc_begin1          # >> Call Site 46 <<
	.uleb128 .Ltmp69-.Ltmp67                #   Call between .Ltmp67 and .Ltmp69
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp69-.Lfunc_begin1          # >> Call Site 47 <<
	.uleb128 .Ltmp72-.Ltmp69                #   Call between .Ltmp69 and .Ltmp72
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp73-.Lfunc_begin1          # >> Call Site 48 <<
	.uleb128 .Ltmp74-.Ltmp73                #   Call between .Ltmp73 and .Ltmp74
	.uleb128 .Ltmp75-.Lfunc_begin1          #     jumps to .Ltmp75
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp74-.Lfunc_begin1          # >> Call Site 49 <<
	.uleb128 .Ltmp76-.Ltmp74                #   Call between .Ltmp74 and .Ltmp76
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp76-.Lfunc_begin1          # >> Call Site 50 <<
	.uleb128 .Ltmp79-.Ltmp76                #   Call between .Ltmp76 and .Ltmp79
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp80-.Lfunc_begin1          # >> Call Site 51 <<
	.uleb128 .Ltmp81-.Ltmp80                #   Call between .Ltmp80 and .Ltmp81
	.uleb128 .Ltmp82-.Lfunc_begin1          #     jumps to .Ltmp82
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp81-.Lfunc_begin1          # >> Call Site 52 <<
	.uleb128 .Ltmp83-.Ltmp81                #   Call between .Ltmp81 and .Ltmp83
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp83-.Lfunc_begin1          # >> Call Site 53 <<
	.uleb128 .Ltmp86-.Ltmp83                #   Call between .Ltmp83 and .Ltmp86
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp87-.Lfunc_begin1          # >> Call Site 54 <<
	.uleb128 .Ltmp88-.Ltmp87                #   Call between .Ltmp87 and .Ltmp88
	.uleb128 .Ltmp89-.Lfunc_begin1          #     jumps to .Ltmp89
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp88-.Lfunc_begin1          # >> Call Site 55 <<
	.uleb128 .Ltmp90-.Ltmp88                #   Call between .Ltmp88 and .Ltmp90
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp90-.Lfunc_begin1          # >> Call Site 56 <<
	.uleb128 .Ltmp93-.Ltmp90                #   Call between .Ltmp90 and .Ltmp93
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp94-.Lfunc_begin1          # >> Call Site 57 <<
	.uleb128 .Ltmp95-.Ltmp94                #   Call between .Ltmp94 and .Ltmp95
	.uleb128 .Ltmp96-.Lfunc_begin1          #     jumps to .Ltmp96
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp95-.Lfunc_begin1          # >> Call Site 58 <<
	.uleb128 .Ltmp97-.Ltmp95                #   Call between .Ltmp95 and .Ltmp97
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp97-.Lfunc_begin1          # >> Call Site 59 <<
	.uleb128 .Ltmp100-.Ltmp97               #   Call between .Ltmp97 and .Ltmp100
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp101-.Lfunc_begin1         # >> Call Site 60 <<
	.uleb128 .Ltmp102-.Ltmp101              #   Call between .Ltmp101 and .Ltmp102
	.uleb128 .Ltmp103-.Lfunc_begin1         #     jumps to .Ltmp103
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp102-.Lfunc_begin1         # >> Call Site 61 <<
	.uleb128 .Ltmp104-.Ltmp102              #   Call between .Ltmp102 and .Ltmp104
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp104-.Lfunc_begin1         # >> Call Site 62 <<
	.uleb128 .Ltmp107-.Ltmp104              #   Call between .Ltmp104 and .Ltmp107
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp108-.Lfunc_begin1         # >> Call Site 63 <<
	.uleb128 .Ltmp109-.Ltmp108              #   Call between .Ltmp108 and .Ltmp109
	.uleb128 .Ltmp110-.Lfunc_begin1         #     jumps to .Ltmp110
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp109-.Lfunc_begin1         # >> Call Site 64 <<
	.uleb128 .Ltmp111-.Ltmp109              #   Call between .Ltmp109 and .Ltmp111
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp111-.Lfunc_begin1         # >> Call Site 65 <<
	.uleb128 .Ltmp114-.Ltmp111              #   Call between .Ltmp111 and .Ltmp114
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp115-.Lfunc_begin1         # >> Call Site 66 <<
	.uleb128 .Ltmp116-.Ltmp115              #   Call between .Ltmp115 and .Ltmp116
	.uleb128 .Ltmp117-.Lfunc_begin1         #     jumps to .Ltmp117
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp116-.Lfunc_begin1         # >> Call Site 67 <<
	.uleb128 .Ltmp118-.Ltmp116              #   Call between .Ltmp116 and .Ltmp118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp118-.Lfunc_begin1         # >> Call Site 68 <<
	.uleb128 .Ltmp121-.Ltmp118              #   Call between .Ltmp118 and .Ltmp121
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp122-.Lfunc_begin1         # >> Call Site 69 <<
	.uleb128 .Ltmp123-.Ltmp122              #   Call between .Ltmp122 and .Ltmp123
	.uleb128 .Ltmp124-.Lfunc_begin1         #     jumps to .Ltmp124
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp123-.Lfunc_begin1         # >> Call Site 70 <<
	.uleb128 .Ltmp125-.Ltmp123              #   Call between .Ltmp123 and .Ltmp125
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp125-.Lfunc_begin1         # >> Call Site 71 <<
	.uleb128 .Ltmp128-.Ltmp125              #   Call between .Ltmp125 and .Ltmp128
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp129-.Lfunc_begin1         # >> Call Site 72 <<
	.uleb128 .Ltmp130-.Ltmp129              #   Call between .Ltmp129 and .Ltmp130
	.uleb128 .Ltmp131-.Lfunc_begin1         #     jumps to .Ltmp131
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp130-.Lfunc_begin1         # >> Call Site 73 <<
	.uleb128 .Ltmp132-.Ltmp130              #   Call between .Ltmp130 and .Ltmp132
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp132-.Lfunc_begin1         # >> Call Site 74 <<
	.uleb128 .Ltmp135-.Ltmp132              #   Call between .Ltmp132 and .Ltmp135
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp136-.Lfunc_begin1         # >> Call Site 75 <<
	.uleb128 .Ltmp137-.Ltmp136              #   Call between .Ltmp136 and .Ltmp137
	.uleb128 .Ltmp138-.Lfunc_begin1         #     jumps to .Ltmp138
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp137-.Lfunc_begin1         # >> Call Site 76 <<
	.uleb128 .Ltmp139-.Ltmp137              #   Call between .Ltmp137 and .Ltmp139
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp139-.Lfunc_begin1         # >> Call Site 77 <<
	.uleb128 .Ltmp142-.Ltmp139              #   Call between .Ltmp139 and .Ltmp142
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp143-.Lfunc_begin1         # >> Call Site 78 <<
	.uleb128 .Ltmp144-.Ltmp143              #   Call between .Ltmp143 and .Ltmp144
	.uleb128 .Ltmp145-.Lfunc_begin1         #     jumps to .Ltmp145
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp144-.Lfunc_begin1         # >> Call Site 79 <<
	.uleb128 .Ltmp146-.Ltmp144              #   Call between .Ltmp144 and .Ltmp146
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp146-.Lfunc_begin1         # >> Call Site 80 <<
	.uleb128 .Ltmp171-.Ltmp146              #   Call between .Ltmp146 and .Ltmp171
	.uleb128 .Ltmp172-.Lfunc_begin1         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp171-.Lfunc_begin1         # >> Call Site 81 <<
	.uleb128 .Lfunc_end27-.Ltmp171          #   Call between .Ltmp171 and .Lfunc_end27
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,"axG",@progbits,_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,comdat
	.weak	_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_ # -- Begin function _ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.p2align	5
	.type	_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,@function
_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_: # @_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$fp, $a0, 8
	move	$s0, $a1
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	ori	$a0, $zero, 1
	bne	$fp, $a1, .LBB28_4
# %bb.1:
	beqz	$fp, .LBB28_3
# %bb.2:
	ld.d	$a0, $s1, 0
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltu	$a0, $zero, $a0
	b	.LBB28_4
.LBB28_3:
	move	$a0, $zero
.LBB28_4:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end28:
	.size	_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_, .Lfunc_end28-_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc21printer_functor_classD2Ev,"axG",@progbits,_ZN2kc21printer_functor_classD2Ev,comdat
	.weak	_ZN2kc21printer_functor_classD2Ev # -- Begin function _ZN2kc21printer_functor_classD2Ev
	.p2align	5
	.type	_ZN2kc21printer_functor_classD2Ev,@function
_ZN2kc21printer_functor_classD2Ev:      # @_ZN2kc21printer_functor_classD2Ev
# %bb.0:
	ret
.Lfunc_end29:
	.size	_ZN2kc21printer_functor_classD2Ev, .Lfunc_end29-_ZN2kc21printer_functor_classD2Ev
                                        # -- End function
	.text
	.globl	_ZN2kc23impl_phylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_phylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_phylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_phylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB30_2
# %bb.1:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2kc23impl_phylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE)
	jr	$t8
.LBB30_2:
	ld.w	$a0, $fp, 0
	addi.d	$a0, $a0, -5
	ori	$a1, $zero, 135
	bltu	$a1, $a0, .LBB30_6
# %bb.3:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI30_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI30_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB30_4:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB30_5:                               # %.lr.ph
                                        #   in Loop: Header=BB30_6 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB30_6:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB30_5
# %bb.7:                                # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB30_8:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_check_count1E)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_check_count1E)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2kc11v_freecountEv)
	jr	$t8
.Lfunc_end30:
	.size	_ZN2kc23impl_phylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end30-_ZN2kc23impl_phylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI30_0:
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_8-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_6-.LJTI30_0
	.word	.LBB30_4-.LJTI30_0
                                        # -- End function
	.text
	.globl	_ZN2kc23impl_phylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_phylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_phylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_phylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_phylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.w	$a0, $a2, 0
	ori	$a2, $zero, 11
	move	$s0, $a1
	beq	$a0, $a2, .LBB31_4
# %bb.1:
	ori	$a1, $zero, 134
	bne	$a0, $a1, .LBB31_9
# %bb.2:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1049)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1049)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Theargsnumbers)
	ld.d	$a0, $a0, %got_pc_lo12(Theargsnumbers)
	ld.d	$a0, $a0, 0
	pcaddu18i	$ra, %call36(_ZNK2kc16impl_argsnumbers4lastEv)
	jirl	$ra, $ra, 0
	ld.w	$a0, $a0, 8
	ori	$a1, $zero, 2
	slt	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$s3, $a0, $a1
	pcalau12i	$a0, %pc_hi20(.L.str.1050)
	addi.d	$s2, $a0, %pc_lo12(.L.str.1050)
	pcalau12i	$a0, %pc_hi20(.L.str.1051)
	addi.d	$s1, $a0, %pc_lo12(.L.str.1051)
	.p2align	4, , 16
.LBB31_3:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	addi.w	$s3, $s3, -1
	bnez	$s3, .LBB31_3
	b	.LBB31_8
.LBB31_4:
	pcalau12i	$a0, %got_pc_hi20(The_abstract_phylum_decl)
	ld.d	$a0, $a0, %got_pc_lo12(The_abstract_phylum_decl)
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %got_pc_hi20(The_abstract_list_decl)
	ld.d	$a1, $a1, %got_pc_lo12(The_abstract_list_decl)
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a1, 0
	ld.d	$a2, $a0, 0
	ld.d	$s1, $a1, 16
	ld.d	$a3, $a2, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_count_attrsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_count_attrsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$s2, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $s2, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB31_6
# %bb.5:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1052)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1052)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1053)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB31_6:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_count_attrsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc16view_count_attrsE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.w	$a0, $s2, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB31_9
# %bb.7:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$s1, $a0, %pc_lo12(.L.str.1053)
	pcalau12i	$a0, %pc_hi20(.L.str.1054)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1054)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB31_8:                               # %.sink.split
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB31_9:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end31:
	.size	_ZN2kc23impl_phylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end31-_ZN2kc23impl_phylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_phylumnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc16impl_phylumnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc16impl_phylumnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc16impl_phylumnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc16impl_phylumnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB32_2
.LBB32_1:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB32_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 41
	bne	$a0, $a1, .LBB32_4
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1055)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1055)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB32_4:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB32_1
# %bb.5:                                # %.lr.ph
                                        #   in Loop: Header=BB32_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB32_4
.Lfunc_end32:
	.size	_ZN2kc16impl_phylumnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end32-_ZN2kc16impl_phylumnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_phylumnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc16impl_phylumnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc16impl_phylumnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc16impl_phylumnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc16impl_phylumnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end33:
	.size	_ZN2kc16impl_phylumnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end33-_ZN2kc16impl_phylumnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc40impl_phylumdeclaration_PhylumDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc40impl_phylumdeclaration_PhylumDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc40impl_phylumdeclaration_PhylumDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc40impl_phylumdeclaration_PhylumDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc40impl_phylumdeclaration_PhylumDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	st.d	$s3, $sp, 256                   # 8-byte Folded Spill
	st.d	$s4, $sp, 248                   # 8-byte Folded Spill
	st.d	$s5, $sp, 240                   # 8-byte Folded Spill
	st.d	$s6, $sp, 232                   # 8-byte Folded Spill
	st.d	$s7, $sp, 224                   # 8-byte Folded Spill
	st.d	$s8, $sp, 216                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a2
	ld.w	$a2, $a2, 0
	addi.d	$a2, $a2, -5
	ori	$a3, $zero, 137
	move	$fp, $a1
	move	$s1, $a0
	bltu	$a3, $a2, .LBB34_218
# %bb.1:
	slli.d	$a0, $a2, 2
	pcalau12i	$a1, %pc_hi20(.LJTI34_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI34_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB34_2:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.3:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 48
	ori	$a2, $zero, 22
	beq	$a0, $a2, .LBB34_182
# %bb.4:
	ld.d	$a0, $a1, 0
	ld.d	$a2, $a0, 0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	ld.d	$a1, $s1, 48
	ori	$a2, $zero, 23
	beq	$a0, $a2, .LBB34_182
# %bb.5:
	ld.d	$a0, $a1, 0
	ld.d	$a2, $a0, 0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_212
	b	.LBB34_218
.LBB34_6:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.7:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 48
	ori	$a2, $zero, 22
	beq	$a0, $a2, .LBB34_9
# %bb.8:
	ld.d	$a0, $a1, 0
	ld.d	$a2, $a0, 0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	ld.d	$a1, $s1, 48
	ori	$a2, $zero, 23
	bne	$a0, $a2, .LBB34_208
.LBB34_9:
	pcalau12i	$a0, %got_pc_hi20(The_abstract_phylum_decl)
	ld.d	$a0, $a0, %got_pc_lo12(The_abstract_phylum_decl)
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, 16
.LBB34_10:
	ld.d	$a2, $a0, 0
	ld.d	$s2, $a1, 8
	ld.d	$a3, $a2, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_count_attrsE)
	addi.d	$s3, $a1, %pc_lo12(_ZN2kc16view_count_attrsE)
	move	$a1, $fp
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	pcalau12i	$s5, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$s6, $s5, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s7, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	pcalau12i	$s8, %pc_hi20(_ZN12_GLOBAL__N_19gl_identsE)
	ld.d	$s4, $s8, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	ld.d	$a3, $a1, 72
	move	$a1, $fp
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.w	$a1, $s5, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.d	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	add.d	$a1, $a1, $s6
	st.w	$a1, $s5, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2kc6concatEPKNS_14impl_argumentsES2_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s8, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	st.d	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	move	$a0, $a1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_)
	jirl	$ra, $ra, 0
	st.d	$a0, $s8, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	b	.LBB34_239
.LBB34_11:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 32
	ori	$a1, $zero, 22
	bne	$a0, $a1, .LBB34_167
# %bb.12:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $fp, 0
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1159)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1159)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1160)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1160)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1161)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1161)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1162)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1162)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1163)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1163)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1164)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1164)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1165)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1165)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s6, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s6, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB34_14
# %bb.13:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.322)
	addi.d	$a1, $a0, %pc_lo12(.L.str.322)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 74
.LBB34_14:
	ori	$a1, $zero, 110
	beq	$a0, $a1, .LBB34_18
# %bb.15:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1167)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1167)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 68
	bnez	$a0, .LBB34_18
# %bb.16:
	ld.b	$a0, $s6, 115
	andi	$a0, $a0, 1
	bnez	$a0, .LBB34_18
# %bb.17:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1168)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1168)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_18:
	ld.bu	$a0, $s6, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB34_20
# %bb.19:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1169)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1169)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 74
.LBB34_20:
	ori	$a1, $zero, 121
	beq	$a0, $a1, .LBB34_24
# %bb.21:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1170)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1170)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 68
	bnez	$a0, .LBB34_24
# %bb.22:
	ld.b	$a0, $s6, 115
	andi	$a0, $a0, 1
	bnez	$a0, .LBB34_24
# %bb.23:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1171)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1171)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_24:
	ld.bu	$a0, $s6, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB34_26
# %bb.25:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1172)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1172)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_26:
	ld.bu	$a0, $s6, 68
	bnez	$a0, .LBB34_29
# %bb.27:
	ld.b	$a0, $s6, 115
	andi	$a0, $a0, 1
	beqz	$a0, .LBB34_29
# %bb.28:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1173)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1173)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_29:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1174)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1174)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1175)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1175)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1176)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1176)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1177)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1177)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1178)
	addi.d	$s3, $a0, %pc_lo12(.L.str.1178)
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1179)
	addi.d	$s4, $a0, %pc_lo12(.L.str.1179)
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1180)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1180)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1181)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1181)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$s5, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1182)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1182)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1183)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1183)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.bu	$s3, $s6, 72
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a0, $a0, %pc_lo12(.L.str.338)
	masknez	$a0, $a0, $s3
	pcalau12i	$a1, %pc_hi20(.L.str.1184)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1184)
	maskeqz	$a1, $a1, $s3
	or	$s3, $a1, $a0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1185)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1185)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1186)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1186)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1187)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1187)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 68
	bnez	$a0, .LBB34_39
# %bb.30:
	ld.b	$a0, $s6, 115
	andi	$a0, $a0, 1
	bnez	$a0, .LBB34_39
# %bb.31:
	ld.bu	$a0, $s6, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB34_33
# %bb.32:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.322)
	addi.d	$a1, $a0, %pc_lo12(.L.str.322)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 74
.LBB34_33:
	ori	$a1, $zero, 110
	beq	$a0, $a1, .LBB34_37
# %bb.34:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1188)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1188)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1189)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1189)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1190)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1190)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB34_36
# %bb.35:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1169)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1169)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 74
.LBB34_36:
	ori	$a1, $zero, 121
	beq	$a0, $a1, .LBB34_39
.LBB34_37:                              # %.thread1534
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1191)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1191)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB34_39
# %bb.38:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1172)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1172)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_39:                              # %.thread1536
	ld.bu	$a0, $s6, 67
	bnez	$a0, .LBB34_248
# %bb.40:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1192)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1192)
	b	.LBB34_155
.LBB34_41:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_248
# %bb.42:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.43:
	ld.d	$s2, $s1, 32
	ld.d	$s1, $s1, 48
	pcalau12i	$a0, %pc_hi20(.L.str.1110)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1110)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $a1, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a3, $a1, 64
	ld.d	$a2, $a1, 48
	addi.d	$a3, $a3, -8
	st.d	$a0, $sp, 16
	beq	$a2, $a3, .LBB34_243
# %bb.44:
	st.d	$a0, $a2, 0
	addi.d	$a0, $a2, 8
	st.d	$a0, $a1, 48
	b	.LBB34_244
.LBB34_45:
	ld.d	$a0, $s1, 56
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 31
	bne	$a0, $s2, .LBB34_147
# %bb.46:
	ld.d	$a0, $s1, 56
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 33
	bne	$a0, $a1, .LBB34_147
# %bb.47:
	ld.d	$a0, $s1, 56
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 34
	bne	$a0, $a1, .LBB34_147
# %bb.48:
	ld.d	$a0, $s1, 56
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 32
	bne	$a0, $a1, .LBB34_147
# %bb.49:
	ld.d	$a0, $s1, 56
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $fp, 0
	ld.d	$s2, $s1, 32
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1112)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1112)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1113)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1113)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1114)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1114)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1115)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1115)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1116)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1116)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1117)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1117)
	b	.LBB34_155
.LBB34_50:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	bne	$a0, $a1, .LBB34_151
# %bb.51:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 26
	bne	$a0, $a1, .LBB34_151
# %bb.52:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB34_151
# %bb.53:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$s2, $a0, 40
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1206)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1206)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$s3, $a0, %pc_lo12(.L.str.334)
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1207)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1207)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1208)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1208)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	b	.LBB34_153
.LBB34_54:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	bne	$a0, $a1, .LBB34_156
# %bb.55:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 26
	bne	$a0, $a1, .LBB34_156
# %bb.56:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB34_156
# %bb.57:
	ld.d	$a0, $s1, 48
	ld.d	$s2, $a0, 8
	ld.d	$a0, $s2, 8
	ld.d	$a1, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$s3, $a0, 40
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1077)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1077)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$s4, $a0, %pc_lo12(.L.str.334)
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1078)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1078)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1079)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1079)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	b	.LBB34_238
.LBB34_58:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	bne	$a0, $a1, .LBB34_248
# %bb.59:
	ld.d	$s2, $s1, 32
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s2, 0
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a1, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1124)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1124)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1125)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1125)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1126)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1126)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1127)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1127)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1128)
	addi.d	$s6, $a0, %pc_lo12(.L.str.1128)
	move	$a0, $fp
	move	$a1, $s6
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1129)
	addi.d	$s3, $a0, %pc_lo12(.L.str.1129)
	pcalau12i	$a0, %pc_hi20(.L.str.1131)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1131)
	pcalau12i	$a0, %pc_hi20(.L.str.1130)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1130)
	move	$a0, $s2
	move	$a1, $s3
	move	$a4, $a2
	move	$a5, $fp
	move	$a6, $s0
	pcaddu18i	$ra, %call36(_Z16covariant_choicePN2kc7impl_IDEPKcS3_S3_S3_RNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1132)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1132)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1133)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1133)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1134)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1134)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1135)
	addi.d	$s5, $a0, %pc_lo12(.L.str.1135)
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1136)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1136)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1137)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1137)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1138)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1138)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1139)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1139)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1140)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1140)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1141)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1141)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1142)
	addi.d	$s4, $a0, %pc_lo12(.L.str.1142)
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1143)
	addi.d	$s7, $a0, %pc_lo12(.L.str.1143)
	move	$a0, $fp
	move	$a1, $s7
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1144)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1144)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s6
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1145)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1145)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s7
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1146)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1146)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1147)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1147)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1148)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1148)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1149)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1149)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1150)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1150)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1151)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1151)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1152)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1152)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$s5, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1153)
	addi.d	$s6, $a0, %pc_lo12(.L.str.1153)
	move	$a0, $fp
	move	$a1, $s6
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1154)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1154)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1155)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1155)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1156)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1156)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1157)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1157)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s6
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1158)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1158)
	b	.LBB34_155
.LBB34_60:
	ld.d	$a0, $fp, 0
	ld.d	$s2, $s1, 32
	ld.d	$s1, $s1, 48
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1216)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1216)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1217)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1217)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$s2, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	b	.LBB34_179
.LBB34_61:
	ld.d	$a0, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1213)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1213)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1214)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1214)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	ld.w	$a2, $s1, %pc_lo12(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1215)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1215)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.w	$a0, $s1, %pc_lo12(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	addi.d	$a0, $a0, 1
	st.w	$a0, $s1, %pc_lo12(_ZN12_GLOBAL__N_113g_no_of_phylaE)
	b	.LBB34_248
.LBB34_62:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.63:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 32
	ld.d	$s3, $s1, 48
	ori	$a1, $zero, 22
	bne	$a0, $a1, .LBB34_210
# %bb.64:
	ld.d	$a0, $fp, 0
	ld.d	$s3, $s3, 16
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1069)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1069)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_class_of_phyE)
	addi.d	$s4, $a0, %pc_lo12(_ZN2kc17view_class_of_phyE)
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s4
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1070)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1070)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s4
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1071)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1071)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s4
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1073)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1073)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1074)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1074)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_count_nonstaticmembersE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_count_nonstaticmembersE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB34_66
# %bb.65:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc29view_gen_user_assignment_inisE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc29view_gen_user_assignment_inisE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_66:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1075)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1075)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1076)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1076)
	b	.LBB34_155
.LBB34_67:
	ld.d	$a0, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1062)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1062)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1063)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1063)
	b	.LBB34_154
.LBB34_68:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 16
	bne	$a0, $a1, .LBB34_175
.LBB34_69:
	ld.d	$a0, $s1, 48
	b	.LBB34_183
.LBB34_70:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 32
	ld.d	$a1, $s1, 40
	ori	$a2, $zero, 21
	bne	$a0, $a2, .LBB34_178
# %bb.71:
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$s2, $s1, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $a1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	st.d	$zero, $s1, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcaddu18i	$ra, %call36(_ZN2kc10NoFileLineEv)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1223)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1223)
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1IDEPKcPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.LBB34_72:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.73:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	beq	$a0, $a1, .LBB34_75
# %bb.74:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	bne	$a0, $a1, .LBB34_220
.LBB34_75:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 32
	ld.d	$a2, $s1, 40
	ld.d	$a0, $a0, 8
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$a1, $s1, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_116gl_storageoptionE)
	st.d	$a2, $a1, %pc_lo12(_ZN12_GLOBAL__N_116gl_storageoptionE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_112gl_atomicityE)
	st.b	$zero, $a1, %pc_lo12(_ZN12_GLOBAL__N_112gl_atomicityE)
.LBB34_76:                              # %.thread
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	st.d	$zero, $s1, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	b	.LBB34_248
.LBB34_77:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.78:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_248
# %bb.79:
	ld.d	$s2, $s1, 32
	ld.d	$s1, $s1, 48
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc12f_lookupdeclEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_110gl_phydeclE)
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_110gl_phydeclE)
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$s2, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	bnez	$a0, .LBB34_81
# %bb.80:
	ld.d	$a0, $s2, 32
	ld.w	$a1, $s2, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1111)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1111)
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1IDEPKcPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
.LBB34_81:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	st.d	$zero, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	b	.LBB34_248
.LBB34_82:
	ld.d	$s5, $s1, 32
	ld.d	$s1, $s1, 56
	st.d	$s5, $sp, 16
	pcaddu18i	$ra, %call36(_ZN2kc12NiloperatorsEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL16outmostoperators)
	addi.d	$s2, $a1, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a2, $s2, 64
	ld.d	$a1, $s2, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB34_185
# %bb.83:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s2, 48
	b	.LBB34_186
.LBB34_84:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 32
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$s2, $s4, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $fp, 0
	ld.d	$s3, $s1, 40
	ld.d	$s1, $s1, 48
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1210)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1210)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1211)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1211)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1212)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1212)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	st.d	$zero, $s4, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	b	.LBB34_248
.LBB34_85:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.86:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_248
# %bb.87:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	beq	$a0, $a1, .LBB34_89
# %bb.88:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	bne	$a0, $a1, .LBB34_218
.LBB34_89:
	ld.d	$s3, $s1, 32
	ld.d	$s2, $s1, 48
	ld.d	$s1, $s1, 56
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc25f_something_to_initializeEPNS_17impl_Ccode_optionE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB34_239
# %bb.90:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1220)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1220)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1221)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1221)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1222)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1222)
	b	.LBB34_238
.LBB34_91:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.92:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	bne	$a0, $a1, .LBB34_180
# %bb.93:
	ld.d	$s2, $s1, 32
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s2, 0
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a1, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1200)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1200)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1204)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1204)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1202)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1202)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	b	.LBB34_97
.LBB34_94:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.95:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	bne	$a0, $a1, .LBB34_180
# %bb.96:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$s2, $a0, 16
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1199)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1199)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1200)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1200)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1201)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1201)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1202)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1202)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
.LBB34_97:
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	b	.LBB34_155
.LBB34_98:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 18
	bne	$a0, $s2, .LBB34_100
# %bb.99:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
.LBB34_100:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB34_102
# %bb.101:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	beq	$a0, $a1, .LBB34_248
.LBB34_102:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 18
	bne	$a0, $s2, .LBB34_104
# %bb.103:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	beq	$a0, $a1, .LBB34_248
.LBB34_104:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB34_106
# %bb.105:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_248
.LBB34_106:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.107:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	beq	$a0, $a1, .LBB34_109
# %bb.108:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	bne	$a0, $a1, .LBB34_216
.LBB34_109:
	ld.w	$a0, $s1, 8
	bnez	$a0, .LBB34_248
# %bb.110:
	pcalau12i	$a0, %pc_hi20(_ZL12cl_storageID)
	ld.d	$a1, $a0, %pc_lo12(_ZL12cl_storageID)
	ld.d	$s0, $s1, 32
	ld.d	$a0, $a1, 32
	ld.w	$a1, $a1, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL11cl_uniqueID)
	ld.d	$a1, $a1, %pc_lo12(_ZL11cl_uniqueID)
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1218)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1218)
	pcalau12i	$a2, %pc_hi20(.L.str.1219)
	addi.d	$a2, $a2, %pc_lo12(.L.str.1219)
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2kc17Problem1S1ID1S1IDEPKcPNS_7impl_IDES1_S3_)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 1
	st.w	$a1, $s1, 8
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_check_uniq1E)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc16view_check_uniq1E)
	move	$a0, $s1
	move	$a1, $fp
	b	.LBB34_242
.LBB34_111:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_248
# %bb.112:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.113:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	bne	$a0, $a1, .LBB34_211
# %bb.114:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$s2, $a0, 16
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1065)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1065)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1066)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1066)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1067)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1067)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1068)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1068)
	b	.LBB34_155
.LBB34_115:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 48
	ori	$a2, $zero, 22
	beq	$a0, $a2, .LBB34_182
# %bb.116:
	ld.d	$a0, $a1, 0
	ld.d	$a2, $a0, 0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	b	.LBB34_181
.LBB34_117:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 16
	bne	$a0, $a1, .LBB34_119
# %bb.118:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	beq	$a0, $a1, .LBB34_125
.LBB34_119:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 17
	bne	$a0, $a1, .LBB34_121
# %bb.120:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	beq	$a0, $a1, .LBB34_125
.LBB34_121:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 16
	bne	$a0, $a1, .LBB34_123
# %bb.122:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	beq	$a0, $a1, .LBB34_125
.LBB34_123:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 17
	bne	$a0, $a1, .LBB34_203
# %bb.124:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	bne	$a0, $a1, .LBB34_203
.LBB34_125:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 32
	ld.d	$a0, $a0, 8
	ld.d	$a2, $s1, 56
	pcalau12i	$s0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$a1, $s0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_16gl_ccoE)
	st.d	$a2, $s1, %pc_lo12(_ZN12_GLOBAL__N_16gl_ccoE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc31view_gen_operatordefs_nonhash_cE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc31view_gen_operatordefs_nonhash_cE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	st.d	$zero, $s0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$zero, $s1, %pc_lo12(_ZN12_GLOBAL__N_16gl_ccoE)
	b	.LBB34_248
.LBB34_126:
	ld.d	$a0, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1062)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1062)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1205)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1205)
	b	.LBB34_154
.LBB34_127:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.128:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_131
# %bb.129:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	beq	$a0, $a1, .LBB34_131
# %bb.130:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	bne	$a0, $a1, .LBB34_218
.LBB34_131:
	ld.d	$a0, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1057)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1057)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1194)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1194)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1195)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1195)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1196)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1196)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1197)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1197)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1198)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1198)
	b	.LBB34_155
.LBB34_132:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	bne	$a0, $a1, .LBB34_161
# %bb.133:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 26
	bne	$a0, $a1, .LBB34_161
# %bb.134:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB34_161
# %bb.135:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$s2, $a0, 40
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1077)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1077)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s3, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s3, 72
	beqz	$a0, .LBB34_137
# %bb.136:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1105)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1105)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1106)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1106)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1107)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1107)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_137:
	ld.bu	$a0, $s3, 73
	beqz	$a0, .LBB34_248
# %bb.138:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1108)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1108)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	b	.LBB34_166
.LBB34_139:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_248
# %bb.140:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.141:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	bne	$a0, $a1, .LBB34_222
# %bb.142:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	pcaddu18i	$ra, %call36(_ZN2kc23f_alternativeofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.b	$a1, $s0, 5
	ori	$a2, $zero, 126
	st.w	$a2, $sp, 16
	ori	$a2, $zero, 1
	st.b	$a2, $sp, 20
	st.b	$a1, $sp, 21
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	addi.d	$a2, $sp, 16
	move	$a1, $fp
	jirl	$ra, $a3, 0
	b	.LBB34_248
.LBB34_143:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_248
# %bb.144:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.145:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	bne	$a0, $a1, .LBB34_211
# %bb.146:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$s2, $a0, 16
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1057)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1057)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1058)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1058)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1059)
	addi.d	$s3, $a0, %pc_lo12(.L.str.1059)
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1060)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1060)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1061)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1061)
	b	.LBB34_155
.LBB34_147:
	ld.d	$a0, $s1, 56
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB34_149
# %bb.148:
	ld.d	$a0, $s1, 56
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 32
	beq	$a0, $a1, .LBB34_248
.LBB34_149:
	ld.d	$a0, $s1, 56
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 31
	bne	$a0, $a1, .LBB34_218
# %bb.150:
	ld.d	$a0, $s1, 56
	ld.d	$a1, $fp, 0
	ld.d	$s2, $s1, 32
	ld.d	$s1, $a0, 8
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1112)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1112)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1118)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1118)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1119)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1119)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1120)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1120)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1121)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1121)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1122)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1122)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1123)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1123)
	b	.LBB34_155
.LBB34_151:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.152:
	ld.d	$a0, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1206)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1206)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1207)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1207)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1208)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1208)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
.LBB34_153:
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1209)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1209)
.LBB34_154:
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
.LBB34_155:
	move	$a0, $fp
	b	.LBB34_241
.LBB34_156:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.157:
	ld.d	$a0, $fp, 0
	ld.d	$s4, $s1, 32
	ld.d	$s2, $s1, 48
	ld.d	$s3, $s1, 56
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1080)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1080)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s6, $a0, %got_pc_lo12(g_options)
	addi.d	$a0, $s6, 152
	pcalau12i	$a1, %pc_hi20(.L.str.312)
	addi.d	$a1, $a1, %pc_lo12(.L.str.312)
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB34_159
# %bb.158:
	ld.d	$a0, $fp, 0
	ld.d	$a1, $s6, 152
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_159:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.333)
	addi.d	$a1, $a0, %pc_lo12(.L.str.333)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 305
	bne	$a0, $a1, .LBB34_213
# %bb.160:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.390)
	addi.d	$a1, $a0, %pc_lo12(.L.str.390)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $fp
	b	.LBB34_226
.LBB34_161:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
# %bb.162:
	ld.d	$a0, $fp, 0
	ld.d	$s1, $s1, 32
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1077)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1077)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s2, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s2, 72
	beqz	$a0, .LBB34_164
# %bb.163:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1105)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1105)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1106)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1106)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1107)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1107)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_164:
	ld.bu	$a0, $s2, 73
	beqz	$a0, .LBB34_248
# %bb.165:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1108)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1108)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
.LBB34_166:
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1109)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1109)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1107)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1107)
	b	.LBB34_155
.LBB34_167:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s1, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s1, 74
	ori	$a1, $zero, 110
	beq	$a0, $a1, .LBB34_248
# %bb.168:
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB34_170
# %bb.169:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.322)
	addi.d	$a1, $a0, %pc_lo12(.L.str.322)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_170:
	ld.bu	$a0, $s1, 68
	bnez	$a0, .LBB34_173
# %bb.171:
	ld.b	$a0, $s1, 115
	andi	$a0, $a0, 1
	bnez	$a0, .LBB34_173
# %bb.172:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1193)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1193)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_173:
	ld.bu	$a0, $s1, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB34_248
# %bb.174:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1172)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1172)
	b	.LBB34_155
.LBB34_175:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 17
	beq	$a0, $a1, .LBB34_248
# %bb.176:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 18
	bne	$a0, $a1, .LBB34_218
# %bb.177:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $s1, 32
	ld.d	$a2, $a0, 8
	ld.d	$a0, $s1, 48
	ori	$a3, $zero, 1
	st.w	$a3, $s1, 8
	pcalau12i	$s0, %pc_hi20(_ZL11cl_uniqueID)
	st.d	$a1, $s0, %pc_lo12(_ZL11cl_uniqueID)
	pcalau12i	$s1, %pc_hi20(_ZL12cl_storageID)
	st.d	$a2, $s1, %pc_lo12(_ZL12cl_storageID)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_check_uniq1E)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_check_uniq1E)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	pcaddu18i	$ra, %call36(_ZN2kc31v_reset_phylumdeclaration_marksEv)
	jirl	$ra, $ra, 0
	st.d	$zero, $s0, %pc_lo12(_ZL11cl_uniqueID)
	st.d	$zero, $s1, %pc_lo12(_ZL12cl_storageID)
	b	.LBB34_248
.LBB34_178:
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$s2, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a1, 0
	ld.d	$s1, $s1, 48
	ld.d	$a3, $a0, 72
	move	$a0, $a1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	st.d	$zero, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
.LBB34_179:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	b	.LBB34_219
.LBB34_180:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
.LBB34_181:
	ld.d	$a1, $s1, 48
	ori	$a2, $zero, 23
	bne	$a0, $a2, .LBB34_184
.LBB34_182:
	ld.d	$a0, $a1, 8
.LBB34_183:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB34_240
.LBB34_184:
	ld.d	$a0, $a1, 0
	ld.d	$a2, $a0, 0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	b	.LBB34_217
.LBB34_185:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$a0, $a0, %pc_lo12(_ZL16outmostoperators)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB34_186:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9DVAllowedEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$s3, $a1, %pc_lo12(_ZL17dollarvarsallowed)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB34_188
# %bb.187:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	b	.LBB34_189
.LBB34_188:
	pcalau12i	$a0, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$a0, $a0, %pc_lo12(_ZL17dollarvarsallowed)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB34_189:                             # %_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$s4, $a0, %pc_lo12(_ZL11phylumstack)
	ld.d	$a1, $s4, 64
	ld.d	$a0, $s4, 48
	addi.d	$a1, $a1, -8
	beq	$a0, $a1, .LBB34_191
# %bb.190:
	st.d	$s5, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s4, 48
	b	.LBB34_192
.LBB34_191:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL11phylumstack)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB34_192:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit1445
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 48
	ld.d	$a1, $s2, 56
	bne	$a0, $a1, .LBB34_194
# %bb.193:
	ld.d	$a0, $s2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB34_194:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8freelistEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 48
	ld.d	$a0, $s2, 56
	beq	$a1, $a0, .LBB34_196
# %bb.195:
	addi.d	$a1, $a1, -8
	b	.LBB34_197
.LBB34_196:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a1, $a0, 504
.LBB34_197:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3popEv.exit
	ld.d	$a2, $s3, 48
	ld.d	$a0, $s3, 56
	st.d	$a1, $s2, 48
	beq	$a2, $a0, .LBB34_199
# %bb.198:
	addi.d	$a1, $a2, -8
	b	.LBB34_200
.LBB34_199:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a1, $a0, 504
.LBB34_200:                             # %_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEE3popEv.exit
	ld.d	$a2, $s4, 48
	ld.d	$a0, $s4, 56
	st.d	$a1, $s3, 48
	beq	$a2, $a0, .LBB34_202
# %bb.201:
	addi.d	$a0, $a2, -8
	st.d	$a0, $s4, 48
	b	.LBB34_248
.LBB34_202:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a0, $a0, 504
	st.d	$a0, $s4, 48
	b	.LBB34_248
.LBB34_203:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 18
	bne	$a0, $s2, .LBB34_205
# %bb.204:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 22
	beq	$a0, $a1, .LBB34_207
.LBB34_205:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB34_215
# %bb.206:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	bne	$a0, $a1, .LBB34_215
.LBB34_207:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $s1, 48
	ld.d	$a2, $s1, 32
	ld.d	$a3, $a0, 8
	ld.d	$a0, $a1, 8
	ld.d	$a1, $s1, 56
	pcalau12i	$s0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$a2, $s0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_16gl_ccoE)
	st.d	$a1, $s1, %pc_lo12(_ZN12_GLOBAL__N_16gl_ccoE)
	pcalau12i	$s2, %pc_hi20(_ZN12_GLOBAL__N_16gl_stoE)
	st.d	$a3, $s2, %pc_lo12(_ZN12_GLOBAL__N_16gl_stoE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc28view_gen_operatordefs_hash_cE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc28view_gen_operatordefs_hash_cE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	st.d	$zero, $s0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$zero, $s1, %pc_lo12(_ZN12_GLOBAL__N_16gl_ccoE)
	st.d	$zero, $s2, %pc_lo12(_ZN12_GLOBAL__N_16gl_stoE)
	b	.LBB34_248
.LBB34_208:
	ld.d	$a0, $a1, 0
	ld.d	$a2, $a0, 0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	ori	$a1, $zero, 24
	bne	$a0, $a1, .LBB34_218
# %bb.209:
	pcalau12i	$a0, %got_pc_hi20(The_abstract_phylum_decl)
	ld.d	$a0, $a0, %got_pc_lo12(The_abstract_phylum_decl)
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $s1, 48
	b	.LBB34_10
.LBB34_210:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1069)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1069)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_class_of_phyE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_class_of_phyE)
	move	$a0, $s2
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1070)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1070)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$s2, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	b	.LBB34_240
.LBB34_211:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	bne	$a0, $a1, .LBB34_218
.LBB34_212:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	b	.LBB34_183
.LBB34_213:
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s2
	jirl	$ra, $a1, 0
	ld.d	$a1, $fp, 0
	ld.d	$a3, $a1, 0
	ori	$a1, $zero, 22
	bne	$a0, $a1, .LBB34_224
# %bb.214:
	pcalau12i	$a0, %pc_hi20(.L.str.1081)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1081)
	b	.LBB34_225
.LBB34_215:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 21
	beq	$a0, $a1, .LBB34_248
.LBB34_216:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
.LBB34_217:
	ori	$a1, $zero, 24
	beq	$a0, $a1, .LBB34_248
.LBB34_218:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 80
.LBB34_219:
	move	$a0, $s1
	b	.LBB34_240
.LBB34_220:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 24
	bne	$a0, $a1, .LBB34_218
# %bb.221:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 32
	ld.d	$a2, $s1, 40
	ld.d	$a0, $a0, 8
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$a1, $s1, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_116gl_storageoptionE)
	st.d	$a2, $a1, %pc_lo12(_ZN12_GLOBAL__N_116gl_storageoptionE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_112gl_atomicityE)
	ori	$a2, $zero, 1
	st.b	$a2, $a1, %pc_lo12(_ZN12_GLOBAL__N_112gl_atomicityE)
	b	.LBB34_76
.LBB34_222:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 23
	bne	$a0, $a1, .LBB34_218
# %bb.223:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	pcaddu18i	$ra, %call36(_ZN2kc23f_alternativeofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	b	.LBB34_183
.LBB34_224:
	pcalau12i	$a0, %pc_hi20(.L.str.1082)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1082)
.LBB34_225:
	move	$a0, $fp
.LBB34_226:
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1083)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1083)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_count_nonstaticmembersE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_count_nonstaticmembersE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZN2kc19f_listelementphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB34_230
# %bb.227:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc28f_constructors_in_phylumdeclEPNS_22impl_phylumdeclarationE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB34_230
# %bb.228:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB34_230
# %bb.229:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1084)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1084)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1085)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1085)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc29view_gen_user_assignment_inisE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc29view_gen_user_assignment_inisE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.412)
	addi.d	$a1, $a0, %pc_lo12(.L.str.412)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_230:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1086)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1086)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 69
	bnez	$a0, .LBB34_232
# %bb.231:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1087)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1087)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_232:
	ld.bu	$a0, $s6, 68
	bnez	$a0, .LBB34_235
# %bb.233:
	ld.b	$a0, $s6, 115
	andi	$a0, $a0, 1
	beqz	$a0, .LBB34_235
# %bb.234:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1089)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1089)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1090)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1090)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_235:
	ld.bu	$a0, $s6, 72
	beqz	$a0, .LBB34_237
# %bb.236:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1091)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1091)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1092)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1092)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1093)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1093)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1094)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1094)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1095)
	addi.d	$s5, $a0, %pc_lo12(.L.str.1095)
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1096)
	addi.d	$s6, $a0, %pc_lo12(.L.str.1096)
	move	$a0, $fp
	move	$a1, $s6
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1097)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1097)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1098)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1098)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1099)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1099)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1100)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1100)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1101)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1101)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s6
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1102)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1102)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1103)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1103)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1104)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1104)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_237:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_nodetypes_hE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc20view_gen_nodetypes_hE)
	move	$a0, $s3
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc21view_gen_member_dcl_hE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc21view_gen_member_dcl_hE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_listdecls_hE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc20view_gen_listdecls_hE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.361)
	addi.d	$a1, $a0, %pc_lo12(.L.str.361)
.LBB34_238:
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB34_239:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
.LBB34_240:
	move	$a1, $fp
.LBB34_241:
	move	$a2, $s0
.LBB34_242:
	ld.d	$s8, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	jr	$a3
.LBB34_243:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB34_244:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a1, $a1, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	ld.d	$a3, $a1, 64
	ld.d	$a2, $a1, 48
	addi.d	$a3, $a3, -8
	st.d	$a0, $sp, 8
	beq	$a2, $a3, .LBB34_246
# %bb.245:
	st.d	$a0, $a2, 0
	addi.d	$a0, $a2, 8
	st.d	$a0, $a1, 48
	b	.LBB34_247
.LBB34_246:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB34_247:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$s2, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	st.d	$zero, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	pcaddu18i	$ra, %call36(_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	pcaddu18i	$ra, %call36(_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv)
	jirl	$ra, $ra, 0
.LBB34_248:                             # %.thread
	ld.d	$s8, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.Lfunc_end34:
	.size	_ZN2kc40impl_phylumdeclaration_PhylumDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end34-_ZN2kc40impl_phylumdeclaration_PhylumDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI34_0:
	.word	.LBB34_82-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_70-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_85-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_68-.LJTI34_0
	.word	.LBB34_69-.LJTI34_0
	.word	.LBB34_98-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_60-.LJTI34_0
	.word	.LBB34_61-.LJTI34_0
	.word	.LBB34_2-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_84-.LJTI34_0
	.word	.LBB34_72-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_2-.LJTI34_0
	.word	.LBB34_6-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_50-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_126-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_91-.LJTI34_0
	.word	.LBB34_94-.LJTI34_0
	.word	.LBB34_117-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_115-.LJTI34_0
	.word	.LBB34_6-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_127-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_11-.LJTI34_0
	.word	.LBB34_58-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_45-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_77-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_41-.LJTI34_0
	.word	.LBB34_139-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_132-.LJTI34_0
	.word	.LBB34_54-.LJTI34_0
	.word	.LBB34_62-.LJTI34_0
	.word	.LBB34_111-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_67-.LJTI34_0
	.word	.LBB34_218-.LJTI34_0
	.word	.LBB34_143-.LJTI34_0
                                        # -- End function
	.section	.text._ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv,"axG",@progbits,_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv,comdat
	.weak	_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv # -- Begin function _ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv
	.p2align	5
	.type	_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv,@function
_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv: # @_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a1, $a0, 48
	ld.d	$a0, $a0, 56
	beq	$a1, $a0, .LBB35_2
# %bb.1:
	addi.d	$a0, $a1, -8
	b	.LBB35_3
.LBB35_2:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	addi.d	$a0, $a1, 504
.LBB35_3:                               # %_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE8pop_backEv.exit
	st.d	$a0, $fp, 48
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end35:
	.size	_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv, .Lfunc_end35-_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2kc40impl_storageoption_PositiveStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc40impl_storageoption_PositiveStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc40impl_storageoption_PositiveStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc40impl_storageoption_PositiveStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc40impl_storageoption_PositiveStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB36_6
# %bb.1:
	ori	$a4, $zero, 7
	beq	$a3, $a4, .LBB36_4
# %bb.2:
	ori	$a4, $zero, 33
	bne	$a3, $a4, .LBB36_7
# %bb.3:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	b	.LBB36_8
.LBB36_4:
	pcalau12i	$a1, %got_pc_hi20(pg_storageclasseshavebeendefined)
	ld.d	$a1, $a1, %got_pc_lo12(pg_storageclasseshavebeendefined)
	ld.bu	$a1, $a1, 0
	ld.d	$fp, $a0, 8
	beqz	$a1, .LBB36_9
# %bb.5:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc22f_useoccurstorageclassEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	b	.LBB36_10
.LBB36_6:
	ld.d	$a3, $a1, 0
	ld.d	$fp, $a0, 8
	ld.d	$a4, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1224)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1224)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1225)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1225)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.340)
	addi.d	$a1, $a0, %pc_lo12(.L.str.340)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.w	$a2, $fp, 24
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB36_7:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB36_8:
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	jr	$a3
.LBB36_9:
	pcaddu18i	$ra, %call36(_ZN2kc14ITStorageClassEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc13v_extendoccurEPNS_7impl_IDEPNS_11impl_IDtypeE)
	jirl	$ra, $ra, 0
.LBB36_10:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	move	$a0, $fp
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	pcaddu18i	$t8, %call36(_ZN2kc23v_add_to_storageclassesEPNS_7impl_IDES1_)
	jr	$t8
.Lfunc_end36:
	.size	_ZN2kc40impl_storageoption_PositiveStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end36-_ZN2kc40impl_storageoption_PositiveStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc40impl_storageoption_NegativeStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc40impl_storageoption_NegativeStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc40impl_storageoption_NegativeStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc40impl_storageoption_NegativeStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc40impl_storageoption_NegativeStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB37_6
# %bb.1:
	ori	$a4, $zero, 7
	beq	$a3, $a4, .LBB37_4
# %bb.2:
	ori	$a4, $zero, 33
	bne	$a3, $a4, .LBB37_7
# %bb.3:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1226)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1226)
	move	$a0, $a1
	move	$a1, $a3
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	jr	$a4
.LBB37_4:
	pcalau12i	$a1, %got_pc_hi20(pg_storageclasseshavebeendefined)
	ld.d	$a1, $a1, %got_pc_lo12(pg_storageclasseshavebeendefined)
	ld.bu	$a1, $a1, 0
	ld.d	$fp, $a0, 8
	beqz	$a1, .LBB37_8
# %bb.5:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc22f_useoccurstorageclassEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	b	.LBB37_9
.LBB37_6:
	ld.d	$a3, $a1, 0
	ld.d	$fp, $a0, 8
	ld.d	$a4, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1227)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1227)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1225)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1225)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.340)
	addi.d	$a1, $a0, %pc_lo12(.L.str.340)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.w	$a2, $fp, 24
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB37_7:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	jr	$a3
.LBB37_8:
	pcaddu18i	$ra, %call36(_ZN2kc14ITStorageClassEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc13v_extendoccurEPNS_7impl_IDEPNS_11impl_IDtypeE)
	jirl	$ra, $ra, 0
.LBB37_9:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	move	$a0, $fp
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	pcaddu18i	$t8, %call36(_ZN2kc23v_add_to_storageclassesEPNS_7impl_IDES1_)
	jr	$t8
.Lfunc_end37:
	.size	_ZN2kc40impl_storageoption_NegativeStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end37-_ZN2kc40impl_storageoption_NegativeStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc34impl_storageoption_NoStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc34impl_storageoption_NoStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc34impl_storageoption_NoStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc34impl_storageoption_NoStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc34impl_storageoption_NoStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 33
	bne	$a0, $a3, .LBB38_2
# %bb.1:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1226)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1226)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB38_2:
	ret
.Lfunc_end38:
	.size	_ZN2kc34impl_storageoption_NoStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end38-_ZN2kc34impl_storageoption_NoStorageOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_storageclasses10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_storageclasses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_storageclasses10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_storageclasses10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_storageclasses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB39_2
.LBB39_1:                               # %.loopexit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB39_2:
	ld.w	$a0, $fp, 0
	addi.d	$a0, $a0, -32
	ori	$a1, $zero, 22
	bltu	$a1, $a0, .LBB39_7
# %bb.3:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI39_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI39_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB39_4:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 19
	beq	$a0, $a1, .LBB39_24
# %bb.5:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1245)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1245)
	b	.LBB39_23
	.p2align	4, , 16
.LBB39_6:                               # %.lr.ph
                                        #   in Loop: Header=BB39_7 Depth=1
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 24
.LBB39_7:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 24
	bnez	$a0, .LBB39_6
	b	.LBB39_1
.LBB39_8:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1232)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1232)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1233)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1233)
	b	.LBB39_28
.LBB39_9:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_uniqmap_c_1E)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc20view_gen_uniqmap_c_1E)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1243)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1243)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_uniqmap_c_2E)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc20view_gen_uniqmap_c_2E)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1244)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1244)
	b	.LBB39_28
.LBB39_10:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 19
	bne	$a0, $a1, .LBB39_20
# %bb.11:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1230)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1230)
	b	.LBB39_28
.LBB39_12:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1228)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1228)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1229)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1229)
	b	.LBB39_28
.LBB39_13:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list6lengthEv)
	jirl	$ra, $ra, 0
	blez	$a0, .LBB39_1
# %bb.14:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1240)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1240)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1241)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1241)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1242)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1242)
	b	.LBB39_28
.LBB39_15:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 19
	bne	$a0, $a1, .LBB39_21
# %bb.16:
	ld.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list6lengthEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	blez	$a0, .LBB39_26
# %bb.17:
	pcalau12i	$a0, %pc_hi20(.L.str.1236)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1236)
	b	.LBB39_23
.LBB39_18:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 19
	bne	$a0, $a1, .LBB39_25
# %bb.19:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1234)
	addi.d	$s1, $a0, %pc_lo12(.L.str.1234)
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s1
	b	.LBB39_29
.LBB39_20:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1231)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1231)
	b	.LBB39_28
.LBB39_21:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list6lengthEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	blez	$a0, .LBB39_27
# %bb.22:
	pcalau12i	$a0, %pc_hi20(.L.str.1238)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1238)
.LBB39_23:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB39_24:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	b	.LBB39_29
.LBB39_25:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1235)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1235)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1234)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1234)
	b	.LBB39_28
.LBB39_26:
	pcalau12i	$a0, %pc_hi20(.L.str.1237)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1237)
	b	.LBB39_28
.LBB39_27:
	pcalau12i	$a0, %pc_hi20(.L.str.1239)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1239)
.LBB39_28:
	move	$a0, $s0
.LBB39_29:
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end39:
	.size	_ZN2kc19impl_storageclasses10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end39-_ZN2kc19impl_storageclasses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI39_0:
	.word	.LBB39_4-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_9-.LJTI39_0
	.word	.LBB39_13-.LJTI39_0
	.word	.LBB39_15-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_7-.LJTI39_0
	.word	.LBB39_18-.LJTI39_0
	.word	.LBB39_8-.LJTI39_0
	.word	.LBB39_10-.LJTI39_0
	.word	.LBB39_12-.LJTI39_0
                                        # -- End function
	.text
	.globl	_ZN2kc19impl_storageclasses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_storageclasses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_storageclasses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_storageclasses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_storageclasses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end40:
	.size	_ZN2kc19impl_storageclasses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end40-_ZN2kc19impl_storageclasses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc43impl_productionblock_PredefinedAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc43impl_productionblock_PredefinedAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc43impl_productionblock_PredefinedAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc43impl_productionblock_PredefinedAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc43impl_productionblock_PredefinedAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.w	$a3, $a2, 0
	addi.d	$a4, $a3, -7
	ori	$a5, $zero, 26
	ori	$fp, $zero, 80
	bltu	$a5, $a4, .LBB41_4
# %bb.1:
	slli.d	$a3, $a4, 2
	pcalau12i	$a4, %pc_hi20(.LJTI41_0)
	addi.d	$a4, $a4, %pc_lo12(.LJTI41_0)
	ldx.w	$a3, $a4, $a3
	add.d	$a3, $a4, $a3
	jr	$a3
.LBB41_2:
	ld.d	$a0, $a0, 8
.LBB41_3:                               # %.thread.sink.split
	ori	$fp, $zero, 72
	b	.LBB41_15
.LBB41_4:
	ori	$a4, $zero, 125
	bne	$a3, $a4, .LBB41_15
.LBB41_5:                               # %.thread
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB41_6:
	move	$s0, $a1
	move	$s1, $a2
	move	$s2, $a0
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s3, $zero, 26
	bne	$a0, $s3, .LBB41_10
# %bb.7:
	ld.d	$a0, $s2, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB41_10
# %bb.8:
	ld.d	$a0, $s2, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 25
	bne	$a0, $a1, .LBB41_10
# %bb.9:
	ld.d	$a0, $s2, 8
	ld.d	$a0, $a0, 8
	move	$fp, $s0
	ld.d	$a1, $s0, 0
	ld.d	$s0, $a0, 40
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1246)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1246)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1247)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1247)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	move	$a0, $s0
	b	.LBB41_13
.LBB41_10:
	ld.d	$a0, $s2, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s3, .LBB41_14
# %bb.11:
	ld.d	$a0, $s2, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB41_14
# %bb.12:
	ld.d	$a0, $s2, 8
	ld.d	$a1, $a0, 8
	move	$fp, $s0
	ld.d	$a2, $s0, 0
	ld.d	$s2, $a1, 40
	ld.d	$s0, $a0, 16
	ld.d	$a3, $a2, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1246)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1246)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1247)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1247)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	move	$a0, $s2
.LBB41_13:                              # %.thread.sink.split
	move	$a1, $fp
	move	$a2, $s1
	b	.LBB41_3
.LBB41_14:
	move	$a2, $s1
	move	$a1, $s0
	move	$a0, $s2
.LBB41_15:                              # %.thread.sink.split
	ld.d	$a3, $a0, 0
	ldx.d	$a3, $a3, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end41:
	.size	_ZN2kc43impl_productionblock_PredefinedAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end41-_ZN2kc43impl_productionblock_PredefinedAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI41_0:
	.word	.LBB41_5-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_2-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_2-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_15-.LJTI41_0
	.word	.LBB41_6-.LJTI41_0
                                        # -- End function
	.text
	.globl	_ZN2kc40impl_productionblock_NonlistAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc40impl_productionblock_NonlistAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc40impl_productionblock_NonlistAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc40impl_productionblock_NonlistAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc40impl_productionblock_NonlistAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 91
	ori	$fp, $zero, 80
	blt	$a4, $a3, .LBB42_6
# %bb.1:
	addi.d	$a3, $a3, -7
	ori	$a4, $zero, 26
	bltu	$a4, $a3, .LBB42_5
# %bb.2:
	slli.d	$a3, $a3, 2
	pcalau12i	$a4, %pc_hi20(.LJTI42_0)
	addi.d	$a4, $a4, %pc_lo12(.LJTI42_0)
	ldx.w	$a3, $a4, $a3
	add.d	$a3, $a4, $a3
	jr	$a3
.LBB42_3:
	ld.d	$a0, $a0, 8
.LBB42_4:                               # %.thread
	ori	$fp, $zero, 72
.LBB42_5:                               # %.thread
	ld.d	$a3, $a0, 0
	ldx.d	$a3, $a3, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB42_6:
	ori	$a4, $zero, 133
	blt	$a4, $a3, .LBB42_9
# %bb.7:
	ori	$a4, $zero, 92
	beq	$a3, $a4, .LBB42_3
# %bb.8:
	ori	$a4, $zero, 125
	beq	$a3, $a4, .LBB42_3
	b	.LBB42_5
.LBB42_9:
	ori	$a4, $zero, 134
	beq	$a3, $a4, .LBB42_3
# %bb.10:
	ori	$a4, $zero, 135
	beq	$a3, $a4, .LBB42_3
	b	.LBB42_5
.LBB42_11:
	move	$s0, $a1
	move	$s1, $a2
	move	$s2, $a0
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s3, $zero, 26
	bne	$a0, $s3, .LBB42_15
# %bb.12:
	ld.d	$a0, $s2, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB42_15
# %bb.13:
	ld.d	$a0, $s2, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 25
	bne	$a0, $a1, .LBB42_15
# %bb.14:
	ld.d	$a0, $s2, 8
	ld.d	$a0, $a0, 8
	move	$fp, $s0
	ld.d	$a1, $s0, 0
	ld.d	$s0, $a0, 40
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1246)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1246)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1247)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1247)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	move	$a0, $s0
	b	.LBB42_18
.LBB42_15:
	ld.d	$a0, $s2, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s3, .LBB42_19
# %bb.16:
	ld.d	$a0, $s2, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB42_19
# %bb.17:
	ld.d	$a0, $s2, 8
	ld.d	$a1, $a0, 8
	move	$fp, $s0
	ld.d	$a2, $s0, 0
	ld.d	$s2, $a1, 40
	ld.d	$s0, $a0, 16
	ld.d	$a3, $a2, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1246)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1246)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1247)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1247)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	move	$a0, $s2
.LBB42_18:                              # %.thread
	move	$a1, $fp
	move	$a2, $s1
	b	.LBB42_4
.LBB42_19:
	move	$a2, $s1
	move	$a1, $s0
	move	$a0, $s2
	b	.LBB42_5
.Lfunc_end42:
	.size	_ZN2kc40impl_productionblock_NonlistAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end42-_ZN2kc40impl_productionblock_NonlistAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI42_0:
	.word	.LBB42_3-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_3-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_3-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_3-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_5-.LJTI42_0
	.word	.LBB42_11-.LJTI42_0
                                        # -- End function
	.text
	.globl	_ZN2kc37impl_productionblock_ListAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc37impl_productionblock_ListAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc37impl_productionblock_ListAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc37impl_productionblock_ListAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc37impl_productionblock_ListAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	st.d	$s7, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 91
	move	$fp, $a0
	blt	$a4, $a3, .LBB43_4
# %bb.1:
	addi.d	$a0, $a3, -7
	ori	$a3, $zero, 26
	bltu	$a3, $a0, .LBB43_24
# %bb.2:
	slli.d	$a0, $a0, 2
	pcalau12i	$a3, %pc_hi20(.LJTI43_0)
	addi.d	$a3, $a3, %pc_lo12(.LJTI43_0)
	ldx.w	$a0, $a3, $a0
	add.d	$a0, $a3, $a0
	jr	$a0
.LBB43_3:
	ld.d	$a0, $fp, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	b	.LBB43_25
.LBB43_4:
	addi.d	$a0, $a3, -134
	ori	$a4, $zero, 2
	bltu	$a0, $a4, .LBB43_31
# %bb.5:
	ori	$a0, $zero, 92
	beq	$a3, $a0, .LBB43_16
# %bb.6:
	ori	$a0, $zero, 125
	bne	$a3, $a0, .LBB43_24
# %bb.7:
	ld.d	$a0, $fp, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 0
	move	$s0, $a2
	move	$s1, $a1
	jirl	$ra, $a3, 0
	move	$a1, $s1
	move	$a2, $s0
	ori	$a3, $zero, 26
	bne	$a0, $a3, .LBB43_24
# %bb.8:
	ld.d	$a0, $fp, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	move	$a1, $s1
	move	$a2, $s0
	ori	$a3, $zero, 27
	bne	$a0, $a3, .LBB43_24
# %bb.9:
	ld.d	$a0, $fp, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	move	$a1, $s1
	move	$a2, $s0
	ori	$a3, $zero, 26
	bne	$a0, $a3, .LBB43_24
# %bb.10:
	ld.d	$a0, $fp, 8
	ld.d	$a0, $a0, 16
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	move	$a1, $s1
	move	$a2, $s0
	ori	$a3, $zero, 27
	bne	$a0, $a3, .LBB43_24
# %bb.11:
	ld.d	$a0, $fp, 8
	ld.d	$a3, $a0, 16
	ld.d	$s2, $a0, 8
	ld.d	$s1, $a3, 8
	ld.d	$a0, $a1, 0
	ld.d	$s3, $s2, 40
	ld.d	$s4, $s1, 40
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1248)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1248)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$fp, $a2
	jirl	$ra, $a4, 0
	pcalau12i	$s5, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s5, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1249)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1249)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(Theuviewnames)
	ld.d	$s6, $a0, %got_pc_lo12(Theuviewnames)
	ld.d	$a1, $s6, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc33f_unparseviewsinfo_of_alternativeEPNS_16impl_alternativeEPNS_14impl_viewnamesE)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$s3, $s7, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_unparsedefs_cE)
	addi.d	$s3, $a0, %pc_lo12(_ZN2kc22view_gen_unparsedefs_cE)
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1250)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1250)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1251)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1251)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc20freespineandelementsEPNS_21impl_unparseviewsinfoE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s6, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc33f_unparseviewsinfo_of_alternativeEPNS_16impl_alternativeEPNS_14impl_viewnamesE)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 72
	st.d	$s4, $s7, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1252)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1252)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	ld.d	$s7, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(_ZN2kc20freespineandelementsEPNS_21impl_unparseviewsinfoE)
	jr	$t8
.LBB43_12:
	move	$s0, $a1
	move	$s1, $a2
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 26
	bne	$a0, $s2, .LBB43_21
# %bb.13:
	ld.d	$a0, $fp, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB43_21
# %bb.14:
	ld.d	$a0, $fp, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 25
	bne	$a0, $a1, .LBB43_21
# %bb.15:
	ld.d	$a0, $fp, 8
	ld.d	$a0, $a0, 8
	move	$fp, $s0
	ld.d	$a1, $s0, 0
	ld.d	$s0, $a0, 40
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1246)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1246)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1247)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1247)
	move	$a0, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s1
	b	.LBB43_25
.LBB43_16:
	ld.d	$a0, $fp, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 0
	move	$s0, $a2
	move	$s1, $a1
	jirl	$ra, $a3, 0
	move	$a1, $s1
	move	$a2, $s0
	ori	$a3, $zero, 26
	bne	$a0, $a3, .LBB43_24
# %bb.17:
	ld.d	$a0, $fp, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	move	$a1, $s1
	move	$a2, $s0
	ori	$a3, $zero, 27
	bne	$a0, $a3, .LBB43_24
# %bb.18:
	ld.d	$a0, $fp, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	move	$a1, $s1
	move	$a2, $s0
	ori	$a3, $zero, 26
	bne	$a0, $a3, .LBB43_24
# %bb.19:
	ld.d	$a0, $fp, 8
	ld.d	$fp, $a0, 8
	ld.d	$a1, $a0, 16
	ld.d	$a0, $fp, 40
	ld.d	$s2, $a1, 8
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(g_options)
	ld.d	$s6, $a1, %got_pc_lo12(g_options)
	ld.bu	$a1, $s6, 115
	pcalau12i	$s5, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$a0, $s5, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	beqz	$a1, .LBB43_26
# %bb.20:
	move	$a0, $s1
	ld.d	$a1, $s1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1253)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1253)
	move	$a2, $s0
	jirl	$ra, $a3, 0
	b	.LBB43_27
.LBB43_21:
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	move	$a2, $s1
	move	$a1, $s0
	bne	$a0, $s2, .LBB43_24
# %bb.22:
	ld.d	$a0, $fp, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	move	$a1, $s0
	move	$a2, $s1
	ori	$a3, $zero, 27
	bne	$a0, $a3, .LBB43_24
# %bb.23:
	ld.d	$a0, $fp, 8
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a1, 0
	ld.d	$fp, $a3, 40
	ld.d	$s0, $a0, 16
	ld.d	$a4, $a4, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1246)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1246)
	move	$a0, $a1
	move	$s1, $a1
	move	$a1, $a3
	move	$s2, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1247)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1247)
	move	$a0, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	b	.LBB43_25
.LBB43_24:                              # %.thread
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 80
	move	$a0, $fp
.LBB43_25:                              # %.thread
	ld.d	$s7, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.LBB43_26:
	pcalau12i	$a1, %pc_hi20(.L.str.312)
	addi.d	$a1, $a1, %pc_lo12(.L.str.312)
	pcalau12i	$a2, %pc_hi20(.L.str.1253)
	addi.d	$a2, $a2, %pc_lo12(.L.str.1253)
	move	$a3, $s1
	move	$a4, $s0
	pcaddu18i	$ra, %call36(_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
.LBB43_27:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1079)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1079)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1071)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1071)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc25f_rewrite_in_operatordeclEPNS_16impl_alternativeE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB43_29
# %bb.28:
	ld.b	$a0, $s6, 115
	andi	$a0, $a0, 1
	beqz	$a0, .LBB43_30
.LBB43_29:
	move	$a0, $s1
	ld.d	$a1, $s1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1254)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1254)
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB43_30:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1255)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1255)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_gen_rewritedefs_body_cE)
	addi.d	$s3, $a0, %pc_lo12(_ZN2kc27view_gen_rewritedefs_body_cE)
	move	$a0, $s2
	move	$a1, $s1
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1256)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1256)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1257)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1257)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	st.d	$zero, $s5, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
.LBB43_31:                              # %.thread110
	ld.d	$s7, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end43:
	.size	_ZN2kc37impl_productionblock_ListAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end43-_ZN2kc37impl_productionblock_ListAlternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI43_0:
	.word	.LBB43_3-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_3-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_3-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_3-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_24-.LJTI43_0
	.word	.LBB43_12-.LJTI43_0
                                        # -- End function
	.section	.text._Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE,"axG",@progbits,_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE,comdat
	.weak	_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE # -- Begin function _Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE,@function
_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE: # @_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a3
	ld.d	$a3, $a3, 0
	ld.d	$a3, $a3, 0
	move	$s0, $a4
	move	$s1, $a2
	move	$s2, $a1
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $fp
	move	$a2, $a4
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s4, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB44_2
# %bb.1:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.322)
	addi.d	$a1, $a0, %pc_lo12(.L.str.322)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 74
.LBB44_2:
	ori	$a1, $zero, 110
	beq	$a0, $a1, .LBB44_6
# %bb.3:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s2
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB44_5
# %bb.4:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.323)
	addi.d	$a1, $a0, %pc_lo12(.L.str.323)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 74
.LBB44_5:
	ori	$a1, $zero, 121
	beq	$a0, $a1, .LBB44_8
.LBB44_6:                               # %.thread6
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB44_8
# %bb.7:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.324)
	addi.d	$a1, $a0, %pc_lo12(.L.str.324)
	move	$a0, $fp
	move	$a2, $s0
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.LBB44_8:                               # %_Z16covariant_choicePN2kc7impl_IDEPKcS3_S3_S3_RNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end44:
	.size	_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end44-_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2kc41impl_productionblock_Emptyproductionblock10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc41impl_productionblock_Emptyproductionblock10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc41impl_productionblock_Emptyproductionblock10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc41impl_productionblock_Emptyproductionblock10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc41impl_productionblock_Emptyproductionblock10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end45:
	.size	_ZN2kc41impl_productionblock_Emptyproductionblock10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end45-_ZN2kc41impl_productionblock_Emptyproductionblock10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc17impl_alternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_alternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_alternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_alternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_alternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	st.d	$s3, $sp, 256                   # 8-byte Folded Spill
	st.d	$s4, $sp, 248                   # 8-byte Folded Spill
	st.d	$s5, $sp, 240                   # 8-byte Folded Spill
	st.d	$s6, $sp, 232                   # 8-byte Folded Spill
	st.d	$s7, $sp, 224                   # 8-byte Folded Spill
	st.d	$s8, $sp, 216                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB46_61
# %bb.1:
	ld.w	$a0, $fp, 0
	addi.d	$a0, $a0, -7
	ori	$a1, $zero, 135
	bltu	$a1, $a0, .LBB46_60
# %bb.2:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI46_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI46_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB46_3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	b	.LBB46_38
.LBB46_4:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.5:
	ld.d	$a0, $s1, 16
	ld.d	$s1, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 40
	ld.d	$s3, $s1, 48
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcaddu18i	$ra, %call36(_ZN2kc19f_listelementphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$s2, $s4, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	pcalau12i	$s8, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	st.d	$s3, $s8, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $s3, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_112gl_isnotlistE)
	st.b	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_112gl_isnotlistE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_count_argsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc15view_count_argsE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc30f_constructors_in_operatordeclEPNS_16impl_alternativeE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB46_62
# %bb.6:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB46_63
.LBB46_7:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.8:
	ld.d	$a0, $s1, 16
	ld.d	$s1, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s3, $s1, 40
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 24
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$s5, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$s6, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_19gl_identsE)
	ld.d	$s2, $s7, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_count_attrsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_count_attrsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.w	$a1, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	add.d	$a1, $a1, $s5
	st.w	$a1, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2kc6concatEPKNS_14impl_argumentsES2_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s7, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	st.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	move	$a0, $a1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	st.d	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$s3, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	beqz	$a1, .LBB46_28
# %bb.9:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1263)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1263)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1264)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1264)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1265)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1265)
	b	.LBB46_27
.LBB46_10:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_51
# %bb.11:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 25
	bne	$a0, $a1, .LBB46_51
# %bb.12:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	b	.LBB46_52
.LBB46_13:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.14:                               # %.thread433
	ld.d	$a0, $s1, 8
	ld.d	$a1, $s0, 0
	ld.d	$s2, $a0, 40
	ld.d	$s3, $a0, 48
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1266)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1266)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1267)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1267)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	b	.LBB46_55
.LBB46_15:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.16:
	ld.d	$a0, $s1, 16
	ld.d	$s3, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s3, 40
	ld.d	$s2, $s3, 48
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_count_argsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc15view_count_argsE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1210)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1210)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1211)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1211)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a2, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$s2, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_112gl_atomicityE)
	ld.bu	$a1, $a1, %pc_lo12(_ZN12_GLOBAL__N_112gl_atomicityE)
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1283)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1283)
	masknez	$a0, $a0, $a1
	pcalau12i	$a2, %pc_hi20(.L.str.1230)
	addi.d	$a2, $a2, %pc_lo12(.L.str.1230)
	maskeqz	$a1, $a2, $a1
	or	$a1, $a1, $a0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1284)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1284)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	blez	$a0, .LBB46_66
# %bb.17:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1285)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1285)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB46_67
.LBB46_18:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 8
	ori	$a1, $zero, 25
	beq	$a0, $a1, .LBB46_20
# %bb.19:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB46_20:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	b	.LBB46_57
.LBB46_21:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.22:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 8
	ld.d	$a2, $a0, 0
	ld.d	$s2, $a1, 40
	ld.d	$s1, $a1, 48
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_count_argsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc15view_count_argsE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB46_61
# %bb.23:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1282)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1282)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1280)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1280)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1281)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1281)
	move	$a0, $s0
	b	.LBB46_58
.LBB46_24:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.25:
	ld.d	$a0, $s1, 16
	ld.d	$s1, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s3, $s1, 40
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 24
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$s5, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$s6, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_19gl_identsE)
	ld.d	$s2, $s7, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_count_attrsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_count_attrsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.w	$a1, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	add.d	$a1, $a1, $s5
	st.w	$a1, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2kc6concatEPKNS_14impl_argumentsES2_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s7, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	st.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	move	$a0, $a1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc6concatEPKNS_23impl_ac_identifier_listES2_)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	st.d	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	beqz	$a1, .LBB46_28
# %bb.26:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1279)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1279)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1280)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1280)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc29view_gen_operatormap_subphylaE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc29view_gen_operatormap_subphylaE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1281)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1281)
.LBB46_27:                              # %.thread429
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB46_28:                              # %.thread429
	st.w	$s5, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	st.d	$s1, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	st.d	$s2, $s7, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	b	.LBB46_61
.LBB46_29:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.30:                               # %.thread468
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 8
	ld.d	$a2, $a0, 0
	ld.d	$s1, $a1, 48
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s8, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	pcaddu18i	$t8, %call36(_ZN2kc12v_resetcountEv)
	jr	$t8
.LBB46_31:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.32:
	ld.d	$s2, $s1, 8
	ld.d	$a0, $s2, 0
	ld.d	$s3, $s2, 40
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_nodetypes_hE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc20view_gen_nodetypes_hE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB46_34
# %bb.33:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc16f_phylumdeclofidEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc21view_gen_member_dcl_hE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc21view_gen_member_dcl_hE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
.LBB46_34:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc21view_gen_member_dcl_hE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc21view_gen_member_dcl_hE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $a0, 67
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$zero, $a1, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	bnez	$a0, .LBB46_36
# %bb.35:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1262)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1262)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB46_36:                              # %.thread425
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.361)
	addi.d	$a1, $a0, %pc_lo12(.L.str.361)
	b	.LBB46_55
.LBB46_37:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 16
.LBB46_38:
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	b	.LBB46_56
.LBB46_39:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.40:
	ld.d	$a0, $s1, 16
	ld.d	$s2, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s2, 40
	ld.d	$s3, $s2, 48
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc30f_constructors_in_operatordeclEPNS_16impl_alternativeE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB46_64
# %bb.41:
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	st.d	$s3, $s4, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	pcaddu18i	$ra, %call36(_ZN2kc10NoFileLineEv)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1268)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1268)
	pcaddu18i	$ra, %call36(_ZN2kc9Problem1SEPKc)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_count_argsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc15view_count_argsE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	st.d	$zero, $s4, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	b	.LBB46_61
.LBB46_42:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 27
	bne	$a0, $a1, .LBB46_60
# %bb.43:
	ld.d	$a0, $s1, 16
	ld.d	$s3, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s3, 40
	ld.d	$s1, $s3, 48
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc30f_constructors_in_operatordeclEPNS_16impl_alternativeE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB46_65
# %bb.44:
	pcalau12i	$s2, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	st.d	$s1, $s2, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_count_argsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc15view_count_argsE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	st.d	$zero, $s2, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	b	.LBB46_61
.LBB46_45:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 27
	bne	$a0, $s2, .LBB46_47
# %bb.46:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 28
	beq	$a0, $a1, .LBB46_51
.LBB46_47:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB46_60
# %bb.48:
	ld.d	$a0, $s1, 8
	ld.d	$s3, $a0, 40
	ld.d	$s2, $a0, 48
	ld.d	$s1, $s1, 16
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1057)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1057)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1258)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1258)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1259)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1259)
	b	.LBB46_55
.LBB46_49:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 27
	bne	$a0, $s2, .LBB46_53
# %bb.50:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB46_53
.LBB46_51:
	ld.d	$a0, $s1, 16
.LBB46_52:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB46_57
.LBB46_53:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB46_60
# %bb.54:
	ld.d	$a0, $s1, 8
	ld.d	$s3, $a0, 40
	ld.d	$s2, $a0, 48
	ld.d	$s1, $s1, 16
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1065)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1065)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1260)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1260)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1261)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1261)
.LBB46_55:                              # %.thread425
	move	$a0, $s0
.LBB46_56:                              # %.thread425
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
.LBB46_57:
	move	$a1, $s0
.LBB46_58:
	move	$a2, $fp
	ld.d	$s8, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	jr	$a3
	.p2align	4, , 16
.LBB46_59:                              # %.lr.ph
                                        #   in Loop: Header=BB46_60 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB46_60:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB46_59
.LBB46_61:                              # %.thread
	ld.d	$s8, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB46_62:
	pcaddu18i	$ra, %call36(_ZN2kc28Nilac_declaration_specifiersEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(_ZN2kc9NopointerEv)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcaddu18i	$ra, %call36(_ZN2kc7AcNoRefEv)
	jirl	$ra, $ra, 0
	move	$s1, $s4
	move	$s4, $a0
	pcaddu18i	$ra, %call36(_ZN2kc26Nilac_class_qualifier_listEv)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc14AcDirectDeclIdEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZN2kc20Nilac_parameter_listEv)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc9AcParListEPNS_22impl_ac_parameter_listE)
	jirl	$ra, $ra, 0
	move	$s6, $a0
	pcaddu18i	$ra, %call36(_ZN2kc13AcNoQualifierEv)
	jirl	$ra, $ra, 0
	move	$a3, $a0
	move	$a0, $s5
	move	$a1, $s2
	move	$a2, $s6
	pcaddu18i	$ra, %call36(_ZN2kc20AcQualifiedDeclProtoEPNS_28impl_ac_class_qualifier_listEPNS_25impl_ac_direct_declaratorEPNS_27impl_ac_parameter_type_listEPNS_22impl_ac_type_qualifierE)
	jirl	$ra, $ra, 0
	move	$a2, $a0
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2kc12AcDeclaratorEPNS_22impl_ac_pointer_optionEPNS_18impl_ac_ref_optionEPNS_25impl_ac_direct_declaratorE)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZN2kc22Nilac_declaration_listEv)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcaddu18i	$ra, %call36(_ZN2kc12AcNoBaseInitEv)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	pcaddu18i	$ra, %call36(_ZN2kc8NilCtextEv)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	move	$s6, $a0
	pcaddu18i	$ra, %call36(_ZN2kc13ConstructorFnEv)
	jirl	$ra, $ra, 0
	move	$a6, $a0
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	move	$a1, $s2
	move	$a2, $s3
	move	$a3, $s4
	move	$s4, $s1
	move	$a4, $s5
	move	$a5, $s6
	pcaddu18i	$ra, %call36(_ZN2kc15FnAcDeclarationEPNS_30impl_ac_declaration_specifiersEPNS_18impl_ac_declaratorEPNS_24impl_ac_declaration_listEPNS_26impl_ac_opt_base_init_listEPNS_10impl_CtextEPNS_7impl_IDEPNS_12impl_fnclassE)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcaddu18i	$ra, %call36(_ZN2kc17NilfndeclarationsEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2kc20impl_abstract_phylum4freeEb)
	jirl	$ra, $ra, 0
.LBB46_63:                              # %.thread437
	st.d	$zero, $s8, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	st.d	$zero, $s4, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ori	$a0, $zero, 1
	st.b	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_112gl_isnotlistE)
	b	.LBB46_61
.LBB46_64:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1269)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1269)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$s2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1270)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1270)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1271)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1271)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1272)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1272)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1273)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1273)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1274)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1274)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1275)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1275)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1276)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1276)
	move	$a0, $s0
	b	.LBB46_58
.LBB46_65:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1080)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1080)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1277)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1277)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1278)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1278)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	move	$a0, $s0
	b	.LBB46_58
.LBB46_66:
	pcalau12i	$a0, %pc_hi20(.L.str.1286)
	addi.d	$s2, $a0, %pc_lo12(.L.str.1286)
.LBB46_67:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(The_abstract_phylum_decl)
	ld.d	$a0, $a0, %got_pc_lo12(The_abstract_phylum_decl)
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_count_attrsE)
	addi.d	$s2, $a1, %pc_lo12(_ZN2kc16view_count_attrsE)
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.w	$s5, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc16f_phylumdeclofidEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 24
	ld.d	$a1, $a0, 0
	ld.w	$a2, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.d	$a3, $a1, 72
	add.d	$s3, $a2, $s5
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.w	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	add.w	$a2, $s3, $a0
	st.w	$a2, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.w	$a1, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.d	$a3, $a0, 0
	blez	$a1, .LBB46_69
# %bb.68:
	pcalau12i	$a0, %pc_hi20(.L.str.1287)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1287)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	b	.LBB46_70
.LBB46_69:
	pcalau12i	$a0, %pc_hi20(.L.str.1288)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1288)
	move	$a0, $s0
.LBB46_70:                              # %.thread464
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1289)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1289)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_class_of_opE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc16view_class_of_opE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1290)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1290)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB46_61
.Lfunc_end46:
	.size	_ZN2kc17impl_alternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end46-_ZN2kc17impl_alternatives10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI46_0:
	.word	.LBB46_29-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_3-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_3-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_18-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_10-.LJTI46_0
	.word	.LBB46_15-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_21-.LJTI46_0
	.word	.LBB46_24-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_42-.LJTI46_0
	.word	.LBB46_39-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_4-.LJTI46_0
	.word	.LBB46_4-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_13-.LJTI46_0
	.word	.LBB46_7-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_31-.LJTI46_0
	.word	.LBB46_37-.LJTI46_0
	.word	.LBB46_49-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_60-.LJTI46_0
	.word	.LBB46_45-.LJTI46_0
                                        # -- End function
	.text
	.globl	_ZN2kc17impl_alternatives14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_alternatives14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_alternatives14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_alternatives14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_alternatives14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end47:
	.size	_ZN2kc17impl_alternatives14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end47-_ZN2kc17impl_alternatives14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc28impl_alternative_Alternative10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_alternative_Alternative10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_alternative_Alternative10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_alternative_Alternative10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_alternative_Alternative10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -320
	.cfi_def_cfa_offset 320
	st.d	$ra, $sp, 312                   # 8-byte Folded Spill
	st.d	$fp, $sp, 304                   # 8-byte Folded Spill
	st.d	$s0, $sp, 296                   # 8-byte Folded Spill
	st.d	$s1, $sp, 288                   # 8-byte Folded Spill
	st.d	$s2, $sp, 280                   # 8-byte Folded Spill
	st.d	$s3, $sp, 272                   # 8-byte Folded Spill
	st.d	$s4, $sp, 264                   # 8-byte Folded Spill
	st.d	$s5, $sp, 256                   # 8-byte Folded Spill
	st.d	$s6, $sp, 248                   # 8-byte Folded Spill
	st.d	$s7, $sp, 240                   # 8-byte Folded Spill
	st.d	$s8, $sp, 232                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	addi.d	$a2, $a2, -11
	ori	$a3, $zero, 124
	move	$s0, $a1
	move	$s1, $a0
	bltu	$a3, $a2, .LBB48_34
# %bb.1:
	slli.d	$a0, $a2, 2
	pcalau12i	$a1, %pc_hi20(.LJTI48_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI48_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB48_2:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 40
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_count_attrsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_count_attrsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB48_87
# %bb.3:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1333)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1333)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1053)
	b	.LBB48_90
.LBB48_4:
	ld.d	$s3, $s1, 40
	ld.d	$s2, $s1, 48
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$s3, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc15f_selofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, -3
	addi.w	$a1, $zero, -3
	bltu	$a1, $a0, .LBB48_87
# %bb.5:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc30f_constructors_in_operatordeclEPNS_16impl_alternativeE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB48_87
# %bb.6:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_class_of_opE)
	addi.d	$s4, $a0, %pc_lo12(_ZN2kc16view_class_of_opE)
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s4
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1071)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1071)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s4
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc24view_gen_fnarg_and_declsE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc24view_gen_fnarg_and_declsE)
	masknez	$a1, $a1, $a0
	pcalau12i	$a2, %pc_hi20(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	maskeqz	$a0, $a2, $a0
	or	$a2, $a0, $a1
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1291)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1291)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB48_74
# %bb.7:
	pcalau12i	$a0, %pc_hi20(_ZN2kc31view_gen_assignments_predef_iniE)
	addi.d	$s3, $a0, %pc_lo12(_ZN2kc31view_gen_assignments_predef_iniE)
	b	.LBB48_76
.LBB48_8:
	pcalau12i	$a0, %got_pc_hi20(Theuviewnames)
	ld.d	$a0, $a0, %got_pc_lo12(Theuviewnames)
	ld.d	$s2, $s1, 40
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc33f_unparseviewsinfo_of_alternativeEPNS_16impl_alternativeEPNS_14impl_viewnamesE)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$s2, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_120gl_unparse_goto_usedE)
	st.b	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_120gl_unparse_goto_usedE)
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1248)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1248)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1322)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1322)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_unparsedefs_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc22view_gen_unparsedefs_cE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1323)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1323)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc20freespineandelementsEPNS_21impl_unparseviewsinfoE)
	jirl	$ra, $ra, 0
	st.d	$zero, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	b	.LBB48_87
.LBB48_9:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB48_12
# %bb.10:
	ld.d	$s1, $s1, 40
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB48_87
# %bb.11:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc15f_selofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1330)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1330)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	bstrpick.d	$a0, $s1, 31, 0
	pcalau12i	$a1, %pc_hi20(preDefTypeAndName)
	ld.d	$a2, $s0, 0
	addi.d	$a3, $a1, %pc_lo12(preDefTypeAndName)
	slli.d	$a1, $a0, 4
	ldx.d	$a1, $a3, $a1
	ld.d	$a4, $a2, 0
	alsl.d	$s1, $a0, $a3, 4
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a4, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 8
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	b	.LBB48_90
.LBB48_12:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	b	.LBB48_91
.LBB48_13:
	ld.d	$s2, $s1, 40
	ld.d	$s4, $s1, 48
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	pcalau12i	$s5, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$s2, $s5, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a3, $a1, 0
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1080)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1080)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s6, $a0, %got_pc_lo12(g_options)
	ld.d	$a0, $s6, 160
	beqz	$a0, .LBB48_15
# %bb.14:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s6, 152
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB48_15:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread512
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.333)
	addi.d	$a1, $a0, %pc_lo12(.L.str.333)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.340)
	addi.d	$a1, $a0, %pc_lo12(.L.str.340)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 305
	bne	$a0, $a1, .LBB48_35
# %bb.16:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB48_54
.LBB48_17:
	ld.d	$a0, $s1, 40
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZN2kc19f_listelementphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB48_87
# %bb.18:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1328)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1328)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1177)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1177)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1178)
	addi.d	$s4, $a0, %pc_lo12(.L.str.1178)
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1329)
	addi.d	$s3, $a0, %pc_lo12(.L.str.1329)
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1180)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1180)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1181)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1181)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$s5, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1182)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1182)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1157)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1157)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	b	.LBB48_91
.LBB48_19:
	ld.d	$a0, $s0, 0
	ld.d	$s1, $s1, 48
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1320)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1320)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1321)
	b	.LBB48_90
.LBB48_20:
	ld.d	$a0, $s0, 0
	ld.d	$s1, $s1, 40
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1331)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1214)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1214)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	ld.w	$a2, $s1, %pc_lo12(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 32
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1215)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1215)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s1, %pc_lo12(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	addi.d	$a0, $a0, 1
	st.w	$a0, $s1, %pc_lo12(_ZN12_GLOBAL__N_117g_no_of_operatorsE)
	b	.LBB48_87
.LBB48_21:
	ld.d	$a0, $s0, 0
	ld.d	$s1, $s1, 40
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1332)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1332)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$s2, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1079)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1079)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	b	.LBB48_90
.LBB48_22:
	ld.d	$s2, $s1, 40
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s5, $a0, %got_pc_lo12(g_options)
	ld.d	$a0, $s0, 0
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$s3, $s4, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.bu	$a1, $s5, 115
	ld.d	$a3, $a0, 0
	beqz	$a1, .LBB48_37
# %bb.23:
	pcalau12i	$a0, %pc_hi20(.L.str.1253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1253)
	b	.LBB48_45
.LBB48_24:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE)
	ld.d	$a1, $a0, 0
	ld.d	$a2, $s1, 48
	ld.d	$a3, $a1, 72
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	st.d	$a2, $s1, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	b	.LBB48_33
.LBB48_25:
	pcalau12i	$a0, %got_pc_hi20(Therviewnames)
	ld.d	$a0, $a0, %got_pc_lo12(Therviewnames)
	ld.d	$s4, $s1, 40
	ld.d	$s2, $s1, 48
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc33f_rewriteviewsinfo_of_alternativeEPNS_16impl_alternativeEPNS_14impl_viewnamesE)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	ld.d	$a0, $s2, 0
	pcalau12i	$s5, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$s4, $s5, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_114gl_alternativeE)
	ld.d	$a3, $a0, 72
	st.d	$s1, $s4, %pc_lo12(_ZN12_GLOBAL__N_114gl_alternativeE)
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	st.b	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc33view_gen_rewritedefs_rewritearg_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc33view_gen_rewritedefs_rewritearg_cE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s3
	jirl	$ra, $a1, 0
	ori	$s7, $zero, 224
	bne	$a0, $s7, .LBB48_52
# %bb.26:                               # %.lr.ph.preheader
	st.d	$s4, $sp, 16                    # 8-byte Folded Spill
	st.d	$s5, $sp, 24                    # 8-byte Folded Spill
	ori	$s6, $zero, 1
	ori	$s8, $zero, 225
	ori	$s5, $zero, 217
	move	$s1, $s3
	b	.LBB48_29
	.p2align	4, , 16
.LBB48_27:                              #   in Loop: Header=BB48_29 Depth=1
	move	$s6, $zero
.LBB48_28:                              #   in Loop: Header=BB48_29 Depth=1
	ld.d	$s1, $s1, 16
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	bne	$a0, $s7, .LBB48_50
.LBB48_29:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s4, $s1, 8
	ld.d	$a0, $s4, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s4
	jirl	$ra, $a1, 0
	bne	$a0, $s8, .LBB48_27
# %bb.30:                               #   in Loop: Header=BB48_29 Depth=1
	ld.d	$a0, $s4, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s5, .LBB48_27
	b	.LBB48_28
.LBB48_31:
	ld.d	$s2, $s1, 48
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE)
	ld.d	$s1, $s3, %pc_lo12(_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE)
	pcaddu18i	$ra, %call36(_ZN2kc19NilrewriterulesinfoEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB48_87
# %bb.32:
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	st.d	$s2, $s1, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
.LBB48_33:
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	st.d	$zero, $s1, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	b	.LBB48_87
.LBB48_34:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 80
	move	$a0, $s1
	move	$a1, $s0
	b	.LBB48_91
.LBB48_35:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	beqz	$a0, .LBB48_53
# %bb.36:
	pcalau12i	$a0, %pc_hi20(.L.str.436)
	addi.d	$a1, $a0, %pc_lo12(.L.str.436)
	move	$a0, $s0
	b	.LBB48_55
.LBB48_37:
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s5, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB48_39
# %bb.38:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.322)
	addi.d	$a1, $a0, %pc_lo12(.L.str.322)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s5, 74
.LBB48_39:
	ori	$a1, $zero, 110
	beq	$a0, $a1, .LBB48_43
# %bb.40:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a1, $a0, %pc_lo12(.L.str.312)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s5, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB48_42
# %bb.41:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.323)
	addi.d	$a1, $a0, %pc_lo12(.L.str.323)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s5, 74
.LBB48_42:
	ori	$a1, $zero, 121
	beq	$a0, $a1, .LBB48_46
.LBB48_43:                              # %.thread6.i
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1253)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1253)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s5, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB48_46
# %bb.44:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.324)
	addi.d	$a1, $a0, %pc_lo12(.L.str.324)
.LBB48_45:                              # %_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE.exit
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB48_46:                              # %_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1079)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1079)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1071)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1071)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc25f_rewrite_in_operatordeclEPNS_16impl_alternativeE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB48_48
# %bb.47:                               # %_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE.exit
	ld.b	$a0, $s5, 115
	andi	$a0, $a0, 1
	beqz	$a0, .LBB48_49
.LBB48_48:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1254)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1254)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB48_49:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1326)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1326)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_gen_rewritedefs_body_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc27view_gen_rewritedefs_body_cE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1327)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1327)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	st.d	$zero, $s4, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	b	.LBB48_87
.LBB48_50:                              # %._crit_edge
	andi	$a0, $s6, 1
	ld.d	$s5, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 16                    # 8-byte Folded Reload
	bnez	$a0, .LBB48_52
# %bb.51:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1324)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1324)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_rewritedefs_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc22view_gen_rewritedefs_cE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1325)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1325)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB48_52:                              # %.critedge
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc30view_gen_rewritedefs_testarg_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc30view_gen_rewritedefs_testarg_cE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc20freespineandelementsEPNS_21impl_rewriteviewsinfoE)
	jirl	$ra, $ra, 0
	st.d	$zero, $s5, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$zero, $s4, %pc_lo12(_ZN12_GLOBAL__N_114gl_alternativeE)
	b	.LBB48_87
.LBB48_53:
	pcalau12i	$a0, %pc_hi20(.L.str.1292)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1292)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
.LBB48_54:
	move	$a1, $s0
.LBB48_55:
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1293)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1293)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1294)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1294)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB48_57
# %bb.56:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1086)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1086)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB48_57:
	ld.d	$a0, $s5, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	pcaddu18i	$ra, %call36(_ZN2kc15f_selofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, -3
	addi.w	$a1, $zero, -3
	bltu	$a1, $a0, .LBB48_60
# %bb.58:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc30f_constructors_in_operatordeclEPNS_16impl_alternativeE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB48_62
# %bb.59:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1084)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1084)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s4, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc24view_gen_operatordecls_hE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc24view_gen_operatordecls_hE)
	masknez	$a1, $a1, $a0
	pcalau12i	$a2, %pc_hi20(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	maskeqz	$a0, $a2, $a0
	or	$a2, $a0, $a1
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1295)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1295)
	b	.LBB48_61
.LBB48_60:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1296)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1296)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$s5, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1297)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1297)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1298)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1298)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1299)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1299)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1300)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1300)
.LBB48_61:                              # %.sink.split517
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB48_62:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list6lengthEv)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB48_64
# %bb.63:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1301)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1301)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB48_64:
	ld.bu	$a0, $s6, 69
	bnez	$a0, .LBB48_67
# %bb.65:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB48_67
# %bb.66:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1302)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1302)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB48_67:
	ld.bu	$a0, $s6, 68
	bnez	$a0, .LBB48_84
# %bb.68:
	ld.bu	$s4, $s6, 115
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$s4, .LBB48_71
# %bb.69:
	bnez	$a0, .LBB48_84
# %bb.70:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1306)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1306)
	b	.LBB48_73
.LBB48_71:
	beqz	$a0, .LBB48_80
# %bb.72:
	pcalau12i	$a0, %pc_hi20(.L.str.1307)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1307)
	pcalau12i	$a0, %pc_hi20(.L.str.1308)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1308)
	move	$a0, $s3
	move	$a3, $s0
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1309)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1309)
.LBB48_73:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB48_84
.LBB48_74:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list6lengthEv)
	jirl	$ra, $ra, 0
	blez	$a0, .LBB48_92
# %bb.75:
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_assignment_inisE)
	addi.d	$s3, $a0, %pc_lo12(_ZN2kc24view_gen_assignment_inisE)
.LBB48_76:                              # %.sink.split
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.405)
	addi.d	$a1, $a0, %pc_lo12(.L.str.405)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s3
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$s2, $a0, %pc_lo12(.L.str.1056)
.LBB48_77:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_count_nonstaticmembersE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_count_nonstaticmembersE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB48_79
# %bb.78:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc29view_gen_user_assignment_inisE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc29view_gen_user_assignment_inisE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
.LBB48_79:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.412)
	addi.d	$a1, $a0, %pc_lo12(.L.str.412)
	b	.LBB48_90
.LBB48_80:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc25f_rewrite_in_operatordeclEPNS_16impl_alternativeE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB48_82
# %bb.81:
	pcalau12i	$a0, %pc_hi20(.L.str.1305)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1305)
	pcalau12i	$a0, %pc_hi20(.L.str.1306)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1306)
	b	.LBB48_83
.LBB48_82:
	pcalau12i	$a0, %pc_hi20(.L.str.1303)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1303)
	pcalau12i	$a0, %pc_hi20(.L.str.1304)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1304)
.LBB48_83:
	move	$a0, $s3
	move	$a3, $s0
	move	$a4, $fp
	pcaddu18i	$ra, %call36(_Z16covariant_choicePN2kc7impl_IDEPKcS3_RNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
.LBB48_84:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s6, 72
	beqz	$a0, .LBB48_87
# %bb.85:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB48_88
# %bb.86:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1310)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1310)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1092)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1092)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1093)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1093)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1094)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1094)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1095)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1095)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1096)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1096)
	move	$a0, $s0
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1097)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1097)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1098)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1098)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1311)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1311)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1315)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1315)
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.1102)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1102)
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.1314)
	addi.d	$s7, $a0, %pc_lo12(.L.str.1314)
	pcalau12i	$a0, %pc_hi20(.L.str.1313)
	addi.d	$s4, $a0, %pc_lo12(.L.str.1313)
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_class_of_phyE)
	addi.d	$s8, $a0, %pc_lo12(_ZN2kc17view_class_of_phyE)
	pcalau12i	$a0, %pc_hi20(.L.str.1312)
	addi.d	$s1, $a0, %pc_lo12(.L.str.1312)
	move	$s6, $fp
	b	.LBB48_89
.LBB48_87:
	ld.d	$s8, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 296                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 304                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 312                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 320
	ret
.LBB48_88:
	pcalau12i	$a0, %pc_hi20(.L.str.1319)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1319)
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_class_of_phyE)
	addi.d	$s6, $a0, %pc_lo12(_ZN2kc17view_class_of_phyE)
	pcalau12i	$a0, %pc_hi20(.L.str.1318)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1318)
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.1100)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1100)
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.1317)
	addi.d	$s7, $a0, %pc_lo12(.L.str.1317)
	pcalau12i	$a0, %pc_hi20(.L.str.1316)
	addi.d	$s4, $a0, %pc_lo12(.L.str.1316)
	pcalau12i	$a0, %pc_hi20(.L.str.1093)
	addi.d	$s1, $a0, %pc_lo12(.L.str.1093)
	move	$s8, $fp
.LBB48_89:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_class_of_phyE)
	addi.d	$s5, $a0, %pc_lo12(_ZN2kc17view_class_of_phyE)
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s8
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s7
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s8
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s6
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_class_of_opE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc16view_class_of_opE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1104)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1104)
.LBB48_90:
	move	$a0, $s0
.LBB48_91:
	move	$a2, $fp
	ld.d	$s8, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 296                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 304                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 312                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 320
	jr	$a3
.LBB48_92:
	pcalau12i	$a0, %pc_hi20(.L.str.405)
	addi.d	$s2, $a0, %pc_lo12(.L.str.405)
	b	.LBB48_77
.Lfunc_end48:
	.size	_ZN2kc28impl_alternative_Alternative10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end48-_ZN2kc28impl_alternative_Alternative10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI48_0:
	.word	.LBB48_2-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_12-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_21-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_20-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_9-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_17-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_22-.LJTI48_0
	.word	.LBB48_24-.LJTI48_0
	.word	.LBB48_31-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_25-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_8-.LJTI48_0
	.word	.LBB48_19-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_34-.LJTI48_0
	.word	.LBB48_13-.LJTI48_0
	.word	.LBB48_4-.LJTI48_0
                                        # -- End function
	.text
	.globl	_ZN2kc14impl_arguments10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_arguments10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_arguments10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_arguments10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_arguments10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -288
	.cfi_def_cfa_offset 288
	st.d	$ra, $sp, 280                   # 8-byte Folded Spill
	st.d	$fp, $sp, 272                   # 8-byte Folded Spill
	st.d	$s0, $sp, 264                   # 8-byte Folded Spill
	st.d	$s1, $sp, 256                   # 8-byte Folded Spill
	st.d	$s2, $sp, 248                   # 8-byte Folded Spill
	st.d	$s3, $sp, 240                   # 8-byte Folded Spill
	st.d	$s4, $sp, 232                   # 8-byte Folded Spill
	st.d	$s5, $sp, 224                   # 8-byte Folded Spill
	st.d	$s6, $sp, 216                   # 8-byte Folded Spill
	st.d	$s7, $sp, 208                   # 8-byte Folded Spill
	st.d	$s8, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB49_2
# %bb.1:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s8, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	pcaddu18i	$t8, %call36(_ZN2kc14impl_arguments14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE)
	jr	$t8
.LBB49_2:
	ld.w	$a0, $fp, 0
	addi.d	$a0, $a0, -7
	ori	$a1, $zero, 137
	bltu	$a1, $a0, .LBB49_7
# %bb.3:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI49_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI49_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB49_4:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 28
	beq	$a0, $a1, .LBB49_38
# %bb.5:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	b	.LBB49_37
	.p2align	4, , 16
.LBB49_6:                               # %.lr.ph588
                                        #   in Loop: Header=BB49_7 Depth=1
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 24
.LBB49_7:                               # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 24
	bnez	$a0, .LBB49_6
	b	.LBB49_74
.LBB49_8:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB49_65
# %bb.9:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1350)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1350)
	b	.LBB49_66
.LBB49_10:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1336)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1336)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a2, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s3, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1340)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1340)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	addi.d	$a0, $sp, 0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	b	.LBB49_19
.LBB49_11:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s3, $s1, 16
	ori	$a1, $zero, 28
	beq	$a0, $a1, .LBB49_13
# %bb.12:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB49_13:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_argseqnrE)
	addi.d	$s2, $a0, %pc_lo12(_ZN2kc17view_gen_argseqnrE)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1372)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1372)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 16
	beqz	$a0, .LBB49_74
# %bb.14:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_argseqnrE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_gen_argseqnrE)
	move	$a0, $s1
	move	$a1, $s0
	b	.LBB49_78
.LBB49_15:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB49_67
# %bb.16:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$s3, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	b	.LBB49_71
.LBB49_17:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1375)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1375)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_argseqnrE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_gen_argseqnrE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1284)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1284)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	b	.LBB49_56
.LBB49_18:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1336)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1336)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a2, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s3, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1337)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1337)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	addi.d	$a0, $sp, 0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1339)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1339)
.LBB49_19:                              # %.loopexit
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	addi.d	$a0, $a0, 1
	st.w	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	b	.LBB49_74
.LBB49_20:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_argseqnrE)
	addi.d	$s2, $a0, %pc_lo12(_ZN2kc17view_gen_argseqnrE)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1373)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1373)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	b	.LBB49_79
.LBB49_21:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	addi.d	$a1, $a1, 1
	st.w	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	b	.LBB49_74
.LBB49_22:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 28
	beq	$a0, $a1, .LBB49_24
# %bb.23:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB49_24:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $a0, 115
	bnez	$a0, .LBB49_69
# %bb.25:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1350)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1350)
	b	.LBB49_68
.LBB49_26:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 28
	beq	$a0, $a1, .LBB49_28
# %bb.27:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB49_28:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1374)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1374)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_argseqnrE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_gen_argseqnrE)
	move	$a0, $s1
	move	$a1, $s0
	b	.LBB49_81
.LBB49_29:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc16f_useoccurphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc10f_getcountEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	st.w	$a0, $s1, 8
	b	.LBB49_74
.LBB49_30:
	ld.d	$a0, $s1, 16
	ld.d	$s1, $s1, 24
	pcaddu18i	$ra, %call36(_ZN2kc12f_lookupdeclEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a3, $a1, 72
	move	$s2, $a0
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	beqz	$s2, .LBB49_74
# %bb.31:
	ld.d	$a1, $s2, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_check_uniq2E)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_check_uniq2E)
	move	$a0, $s2
	move	$a1, $s0
	b	.LBB49_81
.LBB49_32:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 28
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_118gl_generic_counterE)
	bne	$a0, $a1, .LBB49_75
# %bb.33:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1378)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1378)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1379)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1379)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ori	$a0, $zero, 2
	st.w	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_118gl_generic_counterE)
	b	.LBB49_74
.LBB49_34:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 16
	ori	$a1, $zero, 28
	beq	$a0, $a1, .LBB49_36
# %bb.35:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB49_36:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1055)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1055)
.LBB49_37:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB49_38:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	b	.LBB49_80
.LBB49_39:
	ld.d	$s2, $s1, 24
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcaddu18i	$ra, %call36(_ZN2kc19f_listelementphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a3, $a1, 72
	move	$s3, $a0
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	beqz	$s3, .LBB49_76
# %bb.40:
	pcalau12i	$a0, %pc_hi20(.L.str.1368)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1368)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1369)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1369)
	b	.LBB49_77
.LBB49_41:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s3, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s3, 115
	bnez	$a0, .LBB49_74
# %bb.42:
	ld.d	$a0, $s0, 0
	ld.bu	$s4, $s3, 72
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	beqz	$s4, .LBB49_92
# %bb.43:
	pcalau12i	$a0, %pc_hi20(.L.str.1360)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1360)
	b	.LBB49_93
.LBB49_44:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s4, 72
	beqz	$a0, .LBB49_82
# %bb.45:
	pcalau12i	$a0, %pc_hi20(.L.str.1184)
	addi.d	$s3, $a0, %pc_lo12(.L.str.1184)
	b	.LBB49_83
.LBB49_46:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB49_70
.LBB49_47:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_identsE)
	ld.d	$s2, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list6lengthEv)
	jirl	$ra, $ra, 0
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a1, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
                                        # implicit-def: $r24
	bge	$a1, $a0, .LBB49_52
# %bb.48:                               # %.lr.ph.preheader
	move	$s3, $a0
	ori	$s8, $zero, 283
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$s4, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a0, %pc_hi20(.L.str.329)
	addi.d	$s5, $a0, %pc_lo12(.L.str.329)
	lu12i.w	$a0, 2
	ori	$s6, $a0, 1746
                                        # implicit-def: $r24
	b	.LBB49_50
.LBB49_49:                              #   in Loop: Header=BB49_50 Depth=1
	move	$a0, $s4
	move	$a1, $s6
	move	$a2, $s5
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	addi.w	$s3, $s3, -1
	bge	$a0, $s3, .LBB49_52
.LBB49_50:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s2
	jirl	$ra, $a1, 0
	bne	$a0, $s8, .LBB49_49
# %bb.51:                               #   in Loop: Header=BB49_50 Depth=1
	ld.d	$s1, $s2, 8
	ld.d	$s2, $s2, 16
	ld.w	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	addi.w	$s3, $s3, -1
	blt	$a0, $s3, .LBB49_50
.LBB49_52:                              # %._crit_edge
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1336)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1336)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1376)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1376)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_class_of_opE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_class_of_opE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1377)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1377)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	addi.d	$a0, $a0, 1
	st.w	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	b	.LBB49_74
.LBB49_53:
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	st.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a1, $s0, 0
	ld.bu	$a0, $a0, 115
	ld.d	$a3, $a1, 0
	beqz	$a0, .LBB49_86
# %bb.54:
	pcalau12i	$a0, %pc_hi20(.L.str.1357)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1357)
	b	.LBB49_89
.LBB49_55:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1358)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1358)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc32view_gen_rewritedefs_dotestarg_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc32view_gen_rewritedefs_dotestarg_cE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1359)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1359)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_gen_rewritedefs_args_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc27view_gen_rewritedefs_args_cE)
	move	$a0, $s1
	move	$a1, $s0
.LBB49_56:
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	b	.LBB49_79
.LBB49_57:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 29
	bne	$a0, $a1, .LBB49_62
# %bb.58:
	ld.d	$a0, $s1, 24
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 28
	bne	$a0, $a1, .LBB49_62
# %bb.59:
	ld.bu	$a0, $fp, 4
	beqz	$a0, .LBB49_62
# %bb.60:
	ld.bu	$a0, $fp, 5
	beqz	$a0, .LBB49_62
# %bb.61:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $s0, 0
	ld.d	$s2, $s1, 16
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1341)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1342)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1342)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1343)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1343)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1344)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1344)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1345)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1345)
	b	.LBB49_79
.LBB49_62:
	ld.bu	$a0, $fp, 4
	beqz	$a0, .LBB49_64
# %bb.63:
	ld.bu	$a0, $fp, 5
	beqz	$a0, .LBB49_101
.LBB49_64:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1349)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1349)
	b	.LBB49_79
.LBB49_65:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1352)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1352)
.LBB49_66:                              # %.loopexit
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$s3, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s4, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	move	$a1, $s4
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1351)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1351)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	addi.d	$a0, $sp, 0
	move	$a1, $s4
	b	.LBB49_72
.LBB49_67:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1335)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1335)
.LBB49_68:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB49_69:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
.LBB49_70:                              # %.loopexit
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
.LBB49_71:                              # %.loopexit
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
.LBB49_72:                              # %.loopexit
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
.LBB49_73:                              # %.loopexit
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB49_74:                              # %.loopexit
	ld.d	$s8, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	ret
.LBB49_75:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1378)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1378)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1380)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1380)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, %pc_lo12(_ZN12_GLOBAL__N_118gl_generic_counterE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_118gl_generic_counterE)
	addi.d	$a0, $a0, 1
	st.w	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_118gl_generic_counterE)
	b	.LBB49_74
.LBB49_76:
	pcalau12i	$a0, %pc_hi20(.L.str.1370)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1370)
.LBB49_77:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_argseqnrE)
	addi.d	$s2, $a0, %pc_lo12(_ZN2kc17view_gen_argseqnrE)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1371)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1371)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
.LBB49_78:
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
.LBB49_79:
	move	$a0, $s0
.LBB49_80:
	move	$a2, $fp
.LBB49_81:
	ld.d	$s8, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	jr	$a3
.LBB49_82:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1188)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1188)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1381)
	addi.d	$s3, $a0, %pc_lo12(.L.str.1381)
.LBB49_83:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	beqz	$a0, .LBB49_74
# %bb.84:
	ld.bu	$a0, $s4, 72
	beqz	$a0, .LBB49_90
# %bb.85:
	pcalau12i	$a0, %pc_hi20(.L.str.1382)
	addi.d	$s3, $a0, %pc_lo12(.L.str.1382)
	b	.LBB49_91
.LBB49_86:
	pcalau12i	$a0, %pc_hi20(.L.str.1353)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1353)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc32view_gen_rewritedefs_dotestarg_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc32view_gen_rewritedefs_dotestarg_cE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1354)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1354)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcaddu18i	$ra, %call36(_ZN2kc19f_listelementphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB49_88
# %bb.87:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB49_88:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1355)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1355)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_gen_rewritedefs_args_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc27view_gen_rewritedefs_args_cE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1356)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1356)
.LBB49_89:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	st.d	$zero, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	b	.LBB49_74
.LBB49_90:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1188)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1188)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1383)
	addi.d	$s3, $a0, %pc_lo12(.L.str.1383)
.LBB49_91:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1384)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1384)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1385)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1385)
	b	.LBB49_73
.LBB49_92:
	pcalau12i	$a0, %pc_hi20(.L.str.1362)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1362)
.LBB49_93:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1361)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1361)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB49_95
# %bb.94:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.322)
	addi.d	$a1, $a0, %pc_lo12(.L.str.322)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 74
.LBB49_95:
	ori	$a1, $zero, 110
	beq	$a0, $a1, .LBB49_99
# %bb.96:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1363)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1363)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1364)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1364)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB49_98
# %bb.97:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1169)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1169)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 74
.LBB49_98:
	ori	$a1, $zero, 121
	beq	$a0, $a1, .LBB49_74
.LBB49_99:                              # %.thread590
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1365)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1365)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1366)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1366)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1367)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1367)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 74
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB49_74
# %bb.100:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1172)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1172)
	b	.LBB49_73
.LBB49_101:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1346)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1346)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB49_104
# %bb.102:
	ld.bu	$a0, $fp, 4
	beqz	$a0, .LBB49_104
# %bb.103:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1254)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1254)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB49_104:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1348)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1348)
	b	.LBB49_73
.Lfunc_end49:
	.size	_ZN2kc14impl_arguments10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end49-_ZN2kc14impl_arguments10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI49_0:
	.word	.LBB49_29-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_30-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_21-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_34-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_44-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_4-.LJTI49_0
	.word	.LBB49_4-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_32-.LJTI49_0
	.word	.LBB49_47-.LJTI49_0
	.word	.LBB49_46-.LJTI49_0
	.word	.LBB49_17-.LJTI49_0
	.word	.LBB49_26-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_20-.LJTI49_0
	.word	.LBB49_11-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_39-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_41-.LJTI49_0
	.word	.LBB49_55-.LJTI49_0
	.word	.LBB49_53-.LJTI49_0
	.word	.LBB49_8-.LJTI49_0
	.word	.LBB49_22-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_57-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_10-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_18-.LJTI49_0
	.word	.LBB49_7-.LJTI49_0
	.word	.LBB49_15-.LJTI49_0
                                        # -- End function
	.text
	.globl	_ZN2kc14impl_arguments14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_arguments14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_arguments14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_arguments14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_arguments14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a0, $a2, 0
	addi.d	$a0, $a0, -35
	ori	$a3, $zero, 62
	bltu	$a3, $a0, .LBB50_3
# %bb.1:
	move	$fp, $a1
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI50_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI50_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB50_2:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
.LBB50_3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB50_4:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $fp
	move	$s0, $a2
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1387)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1387)
	b	.LBB50_9
.LBB50_5:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1386)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1386)
	move	$a0, $fp
	b	.LBB50_10
.LBB50_6:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_ZN2kc15f_selofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	bstrpick.d	$a0, $a0, 31, 0
	pcalau12i	$a1, %pc_hi20(preDefTypeAndName)
	ld.d	$a2, $fp, 0
	addi.d	$a3, $a1, %pc_lo12(preDefTypeAndName)
	slli.d	$a1, $a0, 4
	ldx.d	$a1, $a3, $a1
	ld.d	$a4, $a2, 0
	alsl.d	$s1, $a0, $a3, 4
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1374)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1374)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $s1, 8
	ld.d	$a3, $a0, 0
	b	.LBB50_9
.LBB50_7:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_ZN2kc15f_selofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	bstrpick.d	$a0, $a0, 31, 0
	pcalau12i	$a1, %pc_hi20(preDefTypeAndName)
	ld.d	$a2, $fp, 0
	addi.d	$a1, $a1, %pc_lo12(preDefTypeAndName)
	alsl.d	$s1, $a0, $a1, 4
	ld.d	$a1, $s1, 8
	ld.d	$a3, $a2, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1373)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1373)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $s1, 8
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	b	.LBB50_9
.LBB50_8:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	move	$s0, $a2
	pcaddu18i	$ra, %call36(_ZN2kc15f_selofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	bstrpick.d	$a0, $a0, 31, 0
	pcalau12i	$a1, %pc_hi20(preDefTypeAndName)
	ld.d	$a2, $fp, 0
	addi.d	$a1, $a1, %pc_lo12(preDefTypeAndName)
	alsl.d	$s1, $a0, $a1, 4
	ld.d	$a1, $s1, 8
	ld.d	$a3, $a2, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1372)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1372)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $s1, 8
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
.LBB50_9:
	move	$a0, $fp
	move	$a2, $s0
.LBB50_10:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end50:
	.size	_ZN2kc14impl_arguments14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end50-_ZN2kc14impl_arguments14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI50_0:
	.word	.LBB50_2-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_2-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_6-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_7-.LJTI50_0
	.word	.LBB50_8-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_3-.LJTI50_0
	.word	.LBB50_4-.LJTI50_0
	.word	.LBB50_5-.LJTI50_0
                                        # -- End function
	.text
	.globl	_ZN2kc22impl_argument_Argument10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_argument_Argument10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_argument_Argument10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_argument_Argument10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_argument_Argument10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$a4, $a4, 72
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $a3
	jirl	$ra, $a4, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end51:
	.size	_ZN2kc22impl_argument_Argument10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end51-_ZN2kc22impl_argument_Argument10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc29impl_Ccode_option_CcodeOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc29impl_Ccode_option_CcodeOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc29impl_Ccode_option_CcodeOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc29impl_Ccode_option_CcodeOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc29impl_Ccode_option_CcodeOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a4, $a2, 0
	ori	$a3, $zero, 5
	beq	$a4, $a3, .LBB52_5
# %bb.1:
	ori	$a3, $zero, 11
	beq	$a4, $a3, .LBB52_4
# %bb.2:
	ori	$a5, $zero, 44
	ori	$a3, $zero, 80
	bne	$a4, $a5, .LBB52_7
# %bb.3:
	ld.d	$a0, $a0, 8
	b	.LBB52_6
.LBB52_4:
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$s1, $a0, 16
	ld.d	$a4, $a4, 72
	move	$a0, $a3
	move	$fp, $a1
	move	$s0, $a2
	jirl	$ra, $a4, 0
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	b	.LBB52_6
.LBB52_5:
	ld.d	$a0, $a0, 16
.LBB52_6:
	ori	$a3, $zero, 72
.LBB52_7:
	ld.d	$a4, $a0, 0
	ldx.d	$a3, $a4, $a3
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end52:
	.size	_ZN2kc29impl_Ccode_option_CcodeOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end52-_ZN2kc29impl_Ccode_option_CcodeOption10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15impl_attributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc15impl_attributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc15impl_attributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc15impl_attributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc15impl_attributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -288
	.cfi_def_cfa_offset 288
	st.d	$ra, $sp, 280                   # 8-byte Folded Spill
	st.d	$fp, $sp, 272                   # 8-byte Folded Spill
	st.d	$s0, $sp, 264                   # 8-byte Folded Spill
	st.d	$s1, $sp, 256                   # 8-byte Folded Spill
	st.d	$s2, $sp, 248                   # 8-byte Folded Spill
	st.d	$s3, $sp, 240                   # 8-byte Folded Spill
	st.d	$s4, $sp, 232                   # 8-byte Folded Spill
	st.d	$s5, $sp, 224                   # 8-byte Folded Spill
	st.d	$s6, $sp, 216                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB53_19
# %bb.1:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 11
	beq	$a0, $a1, .LBB53_10
# %bb.2:
	ori	$a1, $zero, 44
	beq	$a0, $a1, .LBB53_6
# %bb.3:
	ori	$a1, $zero, 87
	bne	$a0, $a1, .LBB53_18
# %bb.4:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 34
	bne	$a0, $a1, .LBB53_18
# %bb.5:                                # %.thread
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 8
	ld.d	$a2, $a0, 0
	ld.d	$s1, $a1, 16
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1388)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1388)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1389)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1389)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	b	.LBB53_8
.LBB53_6:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 34
	bne	$a0, $a1, .LBB53_18
# %bb.7:                                # %.thread95
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 8
	ld.d	$a2, $a0, 0
	ld.d	$s1, $a1, 8
	ld.d	$s2, $a1, 16
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1330)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1330)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
.LBB53_8:                               # %.thread
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
.LBB53_9:
	move	$a2, $fp
	ld.d	$s6, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	jr	$a3
.LBB53_10:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 34
	bne	$a0, $s2, .LBB53_14
# %bb.11:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 36
	bne	$a0, $a1, .LBB53_14
# %bb.12:
	ld.d	$a1, $s1, 8
	ld.d	$a0, $s1, 16
	ld.d	$a2, $a1, 24
	ld.d	$a3, $a0, 0
	ld.d	$s2, $a1, 16
	ld.d	$s1, $a2, 8
	ld.d	$a3, $a3, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1390)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1390)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s2, 24
	st.w	$a1, $a0, 24
	ld.d	$a1, $s2, 32
	st.d	$a1, $a0, 32
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$s3, $a1, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB53_20
# %bb.13:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	b	.LBB53_21
.LBB53_14:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB53_18
# %bb.15:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 35
	bne	$a0, $a1, .LBB53_18
# %bb.16:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	b	.LBB53_9
	.p2align	4, , 16
.LBB53_17:                              # %.lr.ph
                                        #   in Loop: Header=BB53_18 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB53_18:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB53_17
.LBB53_19:                              # %.thread99
	ld.d	$s6, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	ret
.LBB53_20:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB53_21:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$s4, $a1, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	ld.d	$a2, $s4, 64
	ld.d	$a1, $s4, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 16
	beq	$a1, $a2, .LBB53_23
# %bb.22:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s4, 48
	b	.LBB53_24
.LBB53_23:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB53_24:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL13operatorstack)
	addi.d	$s5, $a1, %pc_lo12(_ZL13operatorstack)
	ld.d	$a2, $s5, 64
	ld.d	$a1, $s5, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 16
	beq	$a1, $a2, .LBB53_26
# %bb.25:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s5, 48
	b	.LBB53_27
.LBB53_26:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL13operatorstack)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB53_27:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit84
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s6, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s6, 114
	beqz	$a0, .LBB53_29
# %bb.28:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 24
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s6, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB53_29:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1392)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1392)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1214)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1214)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s3, 48
	ld.d	$a0, $s3, 56
	beq	$a1, $a0, .LBB53_31
# %bb.30:
	addi.d	$a1, $a1, -8
	b	.LBB53_32
.LBB53_31:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a1, $a0, 504
.LBB53_32:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit
	ld.d	$a2, $s4, 48
	ld.d	$a0, $s4, 56
	st.d	$a1, $s3, 48
	beq	$a2, $a0, .LBB53_34
# %bb.33:
	addi.d	$a1, $a2, -8
	b	.LBB53_35
.LBB53_34:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a1, $a0, 504
.LBB53_35:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit88
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	st.d	$a1, $s4, 48
	beq	$a2, $a0, .LBB53_37
# %bb.36:
	addi.d	$a0, $a2, -8
	st.d	$a0, $s5, 48
	b	.LBB53_19
.LBB53_37:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s5, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s5, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s5, 64
	addi.d	$a0, $a0, 504
	st.d	$a0, $s5, 48
	b	.LBB53_19
.Lfunc_end53:
	.size	_ZN2kc15impl_attributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end53-_ZN2kc15impl_attributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc15impl_attributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc15impl_attributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc15impl_attributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc15impl_attributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc15impl_attributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end54:
	.size	_ZN2kc15impl_attributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end54-_ZN2kc15impl_attributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc24impl_attribute_Attribute10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_attribute_Attribute10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_attribute_Attribute10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_attribute_Attribute10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_attribute_Attribute10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end55:
	.size	_ZN2kc24impl_attribute_Attribute10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end55-_ZN2kc24impl_attribute_Attribute10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end56:
	.size	_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end56-_ZN2kc64impl_attribute_initialisation_option_Yesattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end57:
	.size	_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end57-_ZN2kc63impl_attribute_initialisation_option_Noattribute_initialisation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc16impl_Cexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc16impl_Cexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc16impl_Cexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc16impl_Cexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc16impl_Cexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB58_2
.LBB58_1:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB58_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 3
	beq	$a0, $a1, .LBB58_5
# %bb.3:
	ori	$a1, $zero, 11
	beq	$a0, $a1, .LBB58_5
# %bb.4:
	ori	$a1, $zero, 129
	bne	$a0, $a1, .LBB58_6
.LBB58_5:                               # %.loopexit.sink.split
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 24
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB58_6:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 32
	beqz	$a0, .LBB58_1
# %bb.7:                                # %.lr.ph
                                        #   in Loop: Header=BB58_6 Depth=1
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 32
	b	.LBB58_6
.Lfunc_end58:
	.size	_ZN2kc16impl_Cexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end58-_ZN2kc16impl_Cexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_Cexpression14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc16impl_Cexpression14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc16impl_Cexpression14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc16impl_Cexpression14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc16impl_Cexpression14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end59:
	.size	_ZN2kc16impl_Cexpression14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end59-_ZN2kc16impl_Cexpression14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc38impl_Cexpression_elem_CExpressionArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc38impl_Cexpression_elem_CExpressionArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc38impl_Cexpression_elem_CExpressionArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc38impl_Cexpression_elem_CExpressionArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc38impl_Cexpression_elem_CExpressionArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB60_3
# %bb.1:
	ori	$a4, $zero, 11
	beq	$a3, $a4, .LBB60_3
# %bb.2:
	ori	$a4, $zero, 129
	bne	$a3, $a4, .LBB60_4
.LBB60_3:
	ld.d	$a3, $a1, 0
	ld.d	$fp, $a0, 8
	ld.d	$a4, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1393)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1393)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1394)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1394)
	move	$a0, $s0
	move	$a2, $s1
	b	.LBB60_5
.LBB60_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB60_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end60:
	.size	_ZN2kc38impl_Cexpression_elem_CExpressionArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end60-_ZN2kc38impl_Cexpression_elem_CExpressionArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc37impl_Cexpression_elem_CExpressionPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc37impl_Cexpression_elem_CExpressionPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc37impl_Cexpression_elem_CExpressionPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB61_3
# %bb.1:
	ori	$a4, $zero, 11
	beq	$a3, $a4, .LBB61_3
# %bb.2:
	ori	$a4, $zero, 129
	bne	$a3, $a4, .LBB61_4
.LBB61_3:
	ld.d	$a3, $a1, 0
	ld.d	$fp, $a0, 8
	ld.d	$a4, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	b	.LBB61_5
.LBB61_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB61_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end61:
	.size	_ZN2kc37impl_Cexpression_elem_CExpressionPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end61-_ZN2kc37impl_Cexpression_elem_CExpressionPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc35impl_Cexpression_elem_CExpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc35impl_Cexpression_elem_CExpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB62_3
# %bb.1:
	ori	$a4, $zero, 11
	beq	$a3, $a4, .LBB62_3
# %bb.2:
	ori	$a4, $zero, 129
	bne	$a3, $a4, .LBB62_4
.LBB62_3:
	ld.d	$a3, $a1, 0
	ld.d	$fp, $a0, 8
	ld.d	$a3, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1395)
	addi.d	$s0, $a0, %pc_lo12(.L.str.1395)
	move	$a0, $a1
	move	$s1, $a1
	move	$a1, $s0
	move	$s2, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	b	.LBB62_5
.LBB62_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB62_5:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end62:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end62-_ZN2kc35impl_Cexpression_elem_CExpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc35impl_Cexpression_elem_CExpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc35impl_Cexpression_elem_CExpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB63_3
# %bb.1:
	ori	$a4, $zero, 11
	beq	$a3, $a4, .LBB63_3
# %bb.2:
	ori	$a4, $zero, 129
	bne	$a3, $a4, .LBB63_4
.LBB63_3:
	ld.d	$a3, $a1, 0
	ld.d	$fp, $a0, 8
	ld.d	$a3, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1234)
	addi.d	$s0, $a0, %pc_lo12(.L.str.1234)
	move	$a0, $a1
	move	$s1, $a1
	move	$a1, $s0
	move	$s2, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	b	.LBB63_5
.LBB63_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB63_5:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end63:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end63-_ZN2kc35impl_Cexpression_elem_CExpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc35impl_Cexpression_elem_CExpressionNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc35impl_Cexpression_elem_CExpressionNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc35impl_Cexpression_elem_CExpressionNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc35impl_Cexpression_elem_CExpressionNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc35impl_Cexpression_elem_CExpressionNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a0, $a2, 0
	pcalau12i	$a3, %pc_hi20(.L.str.321)
	ori	$a4, $zero, 129
	addi.d	$a3, $a3, %pc_lo12(.L.str.321)
	beq	$a0, $a4, .LBB64_4
# %bb.1:
	ori	$a4, $zero, 11
	beq	$a0, $a4, .LBB64_4
# %bb.2:
	ori	$a3, $zero, 3
	bne	$a0, $a3, .LBB64_5
# %bb.3:
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a3, $a0, %pc_lo12(.L.str.338)
.LBB64_4:                               # %.sink.split
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB64_5:
	ret
.Lfunc_end64:
	.size	_ZN2kc35impl_Cexpression_elem_CExpressionNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end64-_ZN2kc35impl_Cexpression_elem_CExpressionNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc42impl_Cexpression_elem_CExpressionDollarvar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB65_11
# %bb.1:
	ori	$a4, $zero, 11
	bne	$a3, $a4, .LBB65_12
# %bb.2:
	move	$s3, $a1
	move	$s2, $a2
	ld.d	$s0, $a0, 8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB65_4
# %bb.3:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB65_4:                               # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a2, $a1, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	ld.d	$a1, $a2, 48
	ld.d	$a3, $a2, 56
	bne	$a1, $a3, .LBB65_6
# %bb.5:
	ld.d	$a1, $a2, 72
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
.LBB65_6:                               # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit38
	ld.d	$a2, $s0, 0
	ld.d	$s1, $a0, -8
	ld.d	$fp, $a1, -8
	ld.d	$a1, $a2, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB65_13
# %bb.7:
	ld.d	$a0, $s0, 24
	ld.w	$a0, $a0, 8
	move	$a2, $s2
	move	$a1, $s3
	beqz	$a0, .LBB65_14
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB65_10
# %bb.9:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB65_10:
	ld.d	$a0, $a0, -8
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc20f_argumentofoperatorEPNS_7impl_IDEPNS_8impl_INTE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a3, $a1, 72
	move	$s0, $a0
	move	$a0, $s1
	move	$a1, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	move	$a0, $s0
	move	$a1, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc20impl_abstract_phylum4freeEb)
	jr	$t8
.LBB65_11:
	ld.d	$a3, $a1, 0
	ld.d	$fp, $a0, 8
	ld.d	$a4, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1396)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1396)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	b	.LBB65_15
.LBB65_12:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	b	.LBB65_16
.LBB65_13:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 2
	ori	$a1, $a1, 2639
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	move	$a2, $s2
	move	$a1, $s3
.LBB65_14:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a3, 0
.LBB65_15:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
.LBB65_16:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end65:
	.size	_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end65-_ZN2kc42impl_Cexpression_elem_CExpressionDollarvar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc37impl_Cexpression_elem_CExpressionPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc37impl_Cexpression_elem_CExpressionPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc37impl_Cexpression_elem_CExpressionPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc37impl_Cexpression_elem_CExpressionPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc37impl_Cexpression_elem_CExpressionPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 32                    # 8-byte Folded Spill
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 3
	move	$s0, $a1
	beq	$a2, $a3, .LBB66_41
# %bb.1:
	ori	$a1, $zero, 11
	beq	$a2, $a1, .LBB66_41
# %bb.2:
	ori	$a1, $zero, 129
	bne	$a2, $a1, .LBB66_42
# %bb.3:
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	st.d	$a0, $sp, 112
	addi.d	$a1, $sp, 96
	st.d	$a1, $sp, 80
	st.d	$zero, $sp, 88
	st.b	$zero, $sp, 96
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB66_46
# %bb.4:                                # %.lr.ph
	addi.d	$s6, $sp, 64
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	addi.d	$a0, $a0, 8
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	lu12i.w	$s8, -524288
	lu12i.w	$a0, 524287
	ori	$s1, $a0, 4095
	ori	$s5, $zero, 16
	ori	$s3, $zero, 24
	lu12i.w	$a0, 2
	ori	$a0, $a0, 2708
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	b	.LBB66_7
	.p2align	4, , 16
.LBB66_5:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE4findERSC_.exit.thread
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 80
	ld.d	$a3, $a0, 0
.Ltmp310:
	move	$a0, $s0
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	jirl	$ra, $a3, 0
.Ltmp311:
.LBB66_6:                               # %_ZN2kc20impl_abstract_phylum7unparseERNS_21printer_functor_classERNS_11uview_classE.exit32
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a0, $sp, 112
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB66_44
.LBB66_7:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB66_26 Depth 2
.Ltmp293:
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 112
	pcaddu18i	$ra, %call36(_ZN2kc20f_getidentfromstringB5cxx11EPPKc)
	jirl	$ra, $ra, 0
.Ltmp294:
# %bb.8:                                #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a0, $sp, 80
	addi.d	$a1, $sp, 96
	beq	$a0, $a1, .LBB66_12
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a1, $sp, 48
	beq	$a1, $s6, .LBB66_15
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a2, $sp, 96
	vld	$vr0, $sp, 56
	st.d	$a1, $sp, 80
	vst	$vr0, $sp, 88
	beqz	$a0, .LBB66_14
.LBB66_11:                              #   in Loop: Header=BB66_7 Depth=1
	st.d	$a0, $sp, 48
	st.d	$a2, $sp, 64
	b	.LBB66_20
	.p2align	4, , 16
.LBB66_12:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a1, $sp, 48
	beq	$a1, $s6, .LBB66_15
# %bb.13:                               #   in Loop: Header=BB66_7 Depth=1
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 56
	st.d	$a1, $sp, 80
	vst	$vr0, $sp, 88
	bnez	$a0, .LBB66_11
.LBB66_14:                              #   in Loop: Header=BB66_7 Depth=1
	st.d	$s6, $sp, 48
	move	$a0, $s6
	b	.LBB66_20
	.p2align	4, , 16
.LBB66_15:                              #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a2, $sp, 56
	beqz	$a2, .LBB66_19
# %bb.16:                               #   in Loop: Header=BB66_7 Depth=1
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB66_18
# %bb.17:                               #   in Loop: Header=BB66_7 Depth=1
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB66_19
.LBB66_18:                              #   in Loop: Header=BB66_7 Depth=1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB66_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a0, $sp, 56
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 88
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 48
.LBB66_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB66_7 Depth=1
	st.d	$zero, $sp, 56
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 48
	beq	$a0, $s6, .LBB66_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s4, $a0, 16
	beqz	$s4, .LBB66_5
# %bb.23:                               # %.lr.ph.i.i.i
                                        #   in Loop: Header=BB66_7 Depth=1
	move	$s0, $s6
	ld.d	$fp, $sp, 88
	ld.d	$s2, $sp, 80
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	b	.LBB66_26
	.p2align	4, , 16
.LBB66_24:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB66_26 Depth=2
	sub.d	$a0, $s6, $fp
	slt	$a1, $s8, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s1
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
.LBB66_25:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB66_26 Depth=2
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s4, $a0
	masknez	$a2, $s5, $a0
	maskeqz	$a3, $s3, $a0
	or	$a2, $a3, $a2
	ldx.d	$s4, $s4, $a2
	maskeqz	$a0, $s7, $a0
	or	$s7, $a0, $a1
	beqz	$s4, .LBB66_28
.LBB66_26:                              #   Parent Loop BB66_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s6, $s4, 40
	sltu	$a0, $fp, $s6
	masknez	$a1, $s6, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB66_24
# %bb.27:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB66_26 Depth=2
	ld.d	$a0, $s4, 32
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB66_25
	b	.LBB66_24
	.p2align	4, , 16
.LBB66_28:                              # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSJ_RS7_.exit.i.i
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	addi.d	$a0, $a0, 8
	move	$s6, $s0
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	beq	$s7, $a0, .LBB66_5
# %bb.29:                               #   in Loop: Header=BB66_7 Depth=1
	ld.d	$s4, $s7, 40
	sltu	$a0, $s4, $fp
	masknez	$a1, $fp, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB66_31
# %bb.30:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
                                        #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a1, $s7, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB66_32
.LBB66_31:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
                                        #   in Loop: Header=BB66_7 Depth=1
	sub.d	$a0, $fp, $s4
	slt	$a1, $s8, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s8, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s1
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
.LBB66_32:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i
                                        #   in Loop: Header=BB66_7 Depth=1
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB66_5
# %bb.33:                               #   in Loop: Header=BB66_7 Depth=1
	ld.d	$s2, $s7, 64
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
.Ltmp296:
	move	$a0, $s2
	jirl	$ra, $a1, 0
.Ltmp297:
# %bb.34:                               #   in Loop: Header=BB66_7 Depth=1
	ori	$a1, $zero, 212
	bne	$a0, $a1, .LBB66_37
# %bb.35:                               #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a0, $s2, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
.Ltmp305:
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_gen_castE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_gen_castE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
.Ltmp306:
# %bb.36:                               # %_ZN2kc20impl_abstract_phylum7unparseERNS_21printer_functor_classERNS_11uview_classE.exit
                                        #   in Loop: Header=BB66_7 Depth=1
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_outer_viewE)
	ld.wu	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_outer_viewE)
	pcalau12i	$a1, %pc_hi20(_ZN2kc6uviewsE)
	ld.d	$a3, $s2, 0
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc6uviewsE)
	alsl.d	$a0, $a0, $a1, 4
	ld.d	$a2, $a0, 8
	ld.d	$a3, $a3, 72
.Ltmp307:
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
.Ltmp308:
	b	.LBB66_6
.LBB66_37:                              #   in Loop: Header=BB66_7 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
.Ltmp298:
	move	$a0, $s2
	jirl	$ra, $a1, 0
.Ltmp299:
# %bb.38:                               #   in Loop: Header=BB66_7 Depth=1
	ori	$a1, $zero, 211
	bne	$a0, $a1, .LBB66_40
# %bb.39:                               #   in Loop: Header=BB66_7 Depth=1
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_outer_viewE)
	ld.wu	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_outer_viewE)
	pcalau12i	$a1, %pc_hi20(_ZN2kc6uviewsE)
	ld.d	$a3, $s2, 0
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc6uviewsE)
	alsl.d	$a0, $a0, $a1, 4
	ld.d	$a2, $a0, 8
	ld.d	$a3, $a3, 72
.Ltmp302:
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
.Ltmp303:
	b	.LBB66_6
.LBB66_40:                              #   in Loop: Header=BB66_7 Depth=1
.Ltmp300:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
.Ltmp301:
	b	.LBB66_6
.LBB66_41:
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB66_43
.LBB66_42:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
.LBB66_43:
	move	$a1, $s0
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	jr	$a3
.LBB66_44:                              # %._crit_edge
	ld.d	$a0, $sp, 80
	addi.d	$a1, $sp, 96
	beq	$a0, $a1, .LBB66_46
# %bb.45:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i34
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_46:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit36
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB66_47:
.Ltmp309:
	b	.LBB66_51
.LBB66_48:
.Ltmp304:
	b	.LBB66_51
.LBB66_49:
.Ltmp312:
	b	.LBB66_51
.LBB66_50:
.Ltmp295:
.LBB66_51:
	move	$fp, $a0
	ld.d	$a0, $sp, 80
	addi.d	$a1, $sp, 96
	beq	$a0, $a1, .LBB66_53
# %bb.52:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i37
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_53:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit39
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end66:
	.size	_ZN2kc37impl_Cexpression_elem_CExpressionPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end66-_ZN2kc37impl_Cexpression_elem_CExpressionPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table66:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Ltmp310-.Lfunc_begin2         # >> Call Site 1 <<
	.uleb128 .Ltmp311-.Ltmp310              #   Call between .Ltmp310 and .Ltmp311
	.uleb128 .Ltmp312-.Lfunc_begin2         #     jumps to .Ltmp312
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp293-.Lfunc_begin2         # >> Call Site 2 <<
	.uleb128 .Ltmp294-.Ltmp293              #   Call between .Ltmp293 and .Ltmp294
	.uleb128 .Ltmp295-.Lfunc_begin2         #     jumps to .Ltmp295
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp294-.Lfunc_begin2         # >> Call Site 3 <<
	.uleb128 .Ltmp296-.Ltmp294              #   Call between .Ltmp294 and .Ltmp296
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp296-.Lfunc_begin2         # >> Call Site 4 <<
	.uleb128 .Ltmp297-.Ltmp296              #   Call between .Ltmp296 and .Ltmp297
	.uleb128 .Ltmp304-.Lfunc_begin2         #     jumps to .Ltmp304
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp305-.Lfunc_begin2         # >> Call Site 5 <<
	.uleb128 .Ltmp308-.Ltmp305              #   Call between .Ltmp305 and .Ltmp308
	.uleb128 .Ltmp309-.Lfunc_begin2         #     jumps to .Ltmp309
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp298-.Lfunc_begin2         # >> Call Site 6 <<
	.uleb128 .Ltmp301-.Ltmp298              #   Call between .Ltmp298 and .Ltmp301
	.uleb128 .Ltmp304-.Lfunc_begin2         #     jumps to .Ltmp304
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp301-.Lfunc_begin2         # >> Call Site 7 <<
	.uleb128 .Lfunc_end66-.Ltmp301          #   Call between .Ltmp301 and .Lfunc_end66
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end2:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2kc18impl_CexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_CexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_CexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_CexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB67_2
.LBB67_1:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB67_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 127
	blt	$a1, $a0, .LBB67_5
# %bb.3:
	ori	$a1, $zero, 3
	beq	$a0, $a1, .LBB67_7
# %bb.4:
	ori	$a1, $zero, 11
	beq	$a0, $a1, .LBB67_7
	b	.LBB67_9
.LBB67_5:
	ori	$a1, $zero, 128
	beq	$a0, $a1, .LBB67_7
# %bb.6:
	ori	$a1, $zero, 132
	bne	$a0, $a1, .LBB67_9
.LBB67_7:                               # %.loopexit.sink.split
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB67_8:                               # %.lr.ph
                                        #   in Loop: Header=BB67_9 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB67_9:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB67_8
	b	.LBB67_1
.Lfunc_end67:
	.size	_ZN2kc18impl_CexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end67-_ZN2kc18impl_CexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionDQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_CexpressionDQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionDQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_CexpressionDQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_CexpressionDQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end68:
	.size	_ZN2kc18impl_CexpressionDQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end68-_ZN2kc18impl_CexpressionDQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 127
	blt	$a3, $a0, .LBB69_4
# %bb.1:
	ori	$a3, $zero, 3
	beq	$a0, $a3, .LBB69_7
# %bb.2:
	ori	$a3, $zero, 11
	bne	$a0, $a3, .LBB69_6
# %bb.3:
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a3, $a0, %pc_lo12(.L.str.321)
	b	.LBB69_8
.LBB69_4:
	pcalau12i	$a3, %pc_hi20(.L.str.1397)
	ori	$a4, $zero, 128
	addi.d	$a3, $a3, %pc_lo12(.L.str.1397)
	beq	$a0, $a4, .LBB69_8
# %bb.5:
	ori	$a4, $zero, 132
	beq	$a0, $a4, .LBB69_8
.LBB69_6:
	ret
.LBB69_7:
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a3, $a0, %pc_lo12(.L.str.338)
.LBB69_8:                               # %.sink.split
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.Lfunc_end69:
	.size	_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end69-_ZN2kc39impl_CexpressionDQ_elem_CExpressionDQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a4, $a2, 0
	ori	$a5, $zero, 127
	ori	$a3, $zero, 80
	blt	$a5, $a4, .LBB70_4
# %bb.1:
	ori	$a5, $zero, 3
	beq	$a4, $a5, .LBB70_6
# %bb.2:
	ori	$a5, $zero, 11
	beq	$a4, $a5, .LBB70_6
.LBB70_3:
	ld.d	$a4, $a0, 0
	ldx.d	$a3, $a4, $a3
	jr	$a3
.LBB70_4:
	ori	$a5, $zero, 128
	beq	$a4, $a5, .LBB70_6
# %bb.5:
	ori	$a5, $zero, 132
	bne	$a4, $a5, .LBB70_3
.LBB70_6:
	ld.d	$a0, $a0, 8
	ori	$a3, $zero, 72
	ld.d	$a4, $a0, 0
	ldx.d	$a3, $a4, $a3
	jr	$a3
.Lfunc_end70:
	.size	_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end70-_ZN2kc41impl_CexpressionDQ_elem_CExpressionDQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_CexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_CexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_CexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB71_5
# %bb.1:
	ld.w	$a0, $fp, 0
	ori	$a0, $a0, 8
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB71_4
# %bb.2:                                # %.loopexit.sink.split
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB71_3:                               # %.lr.ph
                                        #   in Loop: Header=BB71_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB71_4:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB71_3
.LBB71_5:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end71:
	.size	_ZN2kc18impl_CexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end71-_ZN2kc18impl_CexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_CexpressionSQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_CexpressionSQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_CexpressionSQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_CexpressionSQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_CexpressionSQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end72:
	.size	_ZN2kc18impl_CexpressionSQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end72-_ZN2kc18impl_CexpressionSQ14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 11
	beq	$a0, $a3, .LBB73_3
# %bb.1:
	ori	$a3, $zero, 3
	bne	$a0, $a3, .LBB73_5
# %bb.2:
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a3, $a0, %pc_lo12(.L.str.338)
	b	.LBB73_4
.LBB73_3:
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a3, $a0, %pc_lo12(.L.str.321)
.LBB73_4:                               # %.sink.split
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB73_5:
	ret
.Lfunc_end73:
	.size	_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end73-_ZN2kc39impl_CexpressionSQ_elem_CExpressionSQNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a4, $a2, 0
	ori	$a3, $zero, 3
	beq	$a4, $a3, .LBB74_2
# %bb.1:
	ori	$a5, $zero, 11
	ori	$a3, $zero, 80
	bne	$a4, $a5, .LBB74_3
.LBB74_2:
	ld.d	$a0, $a0, 8
	ori	$a3, $zero, 72
.LBB74_3:
	ld.d	$a4, $a0, 0
	ldx.d	$a3, $a4, $a3
	jr	$a3
.Lfunc_end74:
	.size	_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end74-_ZN2kc41impl_CexpressionSQ_elem_CExpressionSQPart10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_idCexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_idCexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_idCexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_idCexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_idCexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	ld.w	$a1, $fp, 0
	beqz	$a0, .LBB75_4
# %bb.1:
	ori	$a0, $zero, 57
	bltu	$a0, $a1, .LBB75_32
# %bb.2:
	ori	$a0, $zero, 1
	sll.d	$a0, $a0, $a1
	ori	$a1, $zero, 2048
	lu52i.d	$a1, $a1, 56
	and	$a0, $a0, $a1
	beqz	$a0, .LBB75_32
# %bb.3:                                # %.sink.split.i
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	b	.LBB75_32
.LBB75_4:
	ori	$a0, $zero, 54
	bge	$a0, $a1, .LBB75_11
# %bb.5:
	ori	$a0, $zero, 55
	beq	$a1, $a0, .LBB75_18
# %bb.6:
	ori	$s2, $zero, 56
	beq	$a1, $s2, .LBB75_21
# %bb.7:
	ori	$a0, $zero, 57
	bne	$a1, $a0, .LBB75_31
# %bb.8:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 56
	bne	$a0, $a1, .LBB75_31
# %bb.9:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 8
	ld.d	$a2, $a0, 0
	ld.d	$s1, $a1, 16
	ld.d	$s3, $a1, 24
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.w	$a1, $s4, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.d	$a3, $a0, 0
	addi.d	$a0, $a1, 1
	st.w	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	pcalau12i	$a0, %pc_hi20(.L.str.1398)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1398)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s4, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s2, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1399)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1399)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s4, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	addi.d	$a0, $sp, 0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1186)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1186)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s1, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s1, 114
	beqz	$a0, .LBB75_32
# %bb.10:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s1, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	b	.LBB75_29
.LBB75_11:
	ori	$a0, $zero, 5
	beq	$a1, $a0, .LBB75_25
# %bb.12:
	ori	$a0, $zero, 11
	bne	$a1, $a0, .LBB75_31
# %bb.13:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 56
	bne	$a0, $a1, .LBB75_31
# %bb.14:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 8
	ld.d	$a2, $a0, 0
	ld.d	$s2, $a1, 16
	ld.d	$s1, $a1, 24
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.w	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.w	$a1, $s1, 8
	addi.d	$a0, $a0, 1
	st.w	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	beqz	$a1, .LBB75_17
# %bb.15:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.b	$a0, $s4, 114
	andi	$a0, $a0, 1
	beqz	$a0, .LBB75_17
# %bb.16:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB75_17:                              # %.thread161
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1403)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1403)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1214)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1214)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	b	.LBB75_29
.LBB75_18:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 56
	bne	$a0, $s2, .LBB75_26
# %bb.19:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 54
	bne	$a0, $a1, .LBB75_26
# %bb.20:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 8
	ld.d	$a2, $a0, 0
	ld.d	$s1, $a1, 16
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	pcalau12i	$s2, %pc_hi20(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.w	$a1, $s2, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.d	$a3, $a0, 0
	addi.d	$a0, $a1, 1
	st.w	$a0, $s2, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	pcalau12i	$a0, %pc_hi20(.L.str.1400)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1400)
	b	.LBB75_28
.LBB75_21:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB75_31
# %bb.22:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 16
	ld.d	$s2, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc19f_listelementphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a2, $a1, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	ld.d	$a1, $a2, 48
	ld.d	$a3, $a2, 56
	move	$s1, $a0
	bne	$a1, $a3, .LBB75_24
# %bb.23:
	ld.d	$a0, $a2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB75_24:                              # %.thread152
	ld.d	$a0, $s2, 0
	ld.d	$s3, $a1, -8
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.w	$a1, $s4, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.d	$a3, $a0, 72
	addi.d	$a0, $a1, 1
	st.w	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s4, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s2, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1399)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1399)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s4, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	addi.d	$a0, $sp, 0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1186)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1186)
	b	.LBB75_29
.LBB75_25:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	jr	$a3
.LBB75_26:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB75_31
# %bb.27:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 8
	ld.d	$a2, $a0, 0
	ld.d	$s1, $a1, 16
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	pcalau12i	$s2, %pc_hi20(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.w	$a1, $s2, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	ld.d	$a3, $a0, 0
	addi.d	$a0, $a1, 1
	st.w	$a0, $s2, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	pcalau12i	$a0, %pc_hi20(.L.str.1402)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1402)
.LBB75_28:                              # %_ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1401)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1401)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
.LBB75_29:                              # %_ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB75_32
	.p2align	4, , 16
.LBB75_30:                              # %.lr.ph
                                        #   in Loop: Header=BB75_31 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB75_31:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB75_30
.LBB75_32:                              # %_ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
.Lfunc_end75:
	.size	_ZN2kc19impl_idCexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end75-_ZN2kc19impl_idCexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a1, $zero, 57
	bltu	$a1, $a0, .LBB76_3
# %bb.1:
	ori	$a1, $zero, 1
	sll.d	$a0, $a1, $a0
	ori	$a1, $zero, 2048
	lu52i.d	$a1, $a1, 56
	and	$a0, $a0, $a1
	beqz	$a0, .LBB76_3
# %bb.2:                                # %.sink.split
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_114g_fe_selvar_nrE)
.LBB76_3:
	ret
.Lfunc_end76:
	.size	_ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end76-_ZN2kc19impl_idCexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc32impl_idCexpression_IdCexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_idCexpression_IdCexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_idCexpression_IdCexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_idCexpression_IdCexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_idCexpression_IdCexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	bne	$a3, $a4, .LBB77_2
# %bb.1:
	ld.d	$a0, $a0, 16
	pcaddu18i	$t8, %call36(_ZN2kc20f_useoccurlistphylumEPNS_7impl_IDE)
	jr	$t8
.LBB77_2:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end77:
	.size	_ZN2kc32impl_idCexpression_IdCexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end77-_ZN2kc32impl_idCexpression_IdCexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11impl_Ctexts10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc11impl_Ctexts10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc11impl_Ctexts10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc11impl_Ctexts10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc11impl_Ctexts10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$fp, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB78_22
# %bb.1:
	ld.w	$a0, $s0, 0
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB78_4
# %bb.2:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1390)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1390)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s1, 8
	st.w	$a1, $a0, 24
	ld.d	$a1, $s1, 16
	st.d	$a1, $a0, 32
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$s2, $a1, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a2, $s2, 64
	ld.d	$a1, $s2, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB78_6
# %bb.3:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s2, 48
	b	.LBB78_7
	.p2align	4, , 16
.LBB78_4:                               # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB78_22
# %bb.5:                                # %.lr.ph
                                        #   in Loop: Header=BB78_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB78_4
.LBB78_6:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB78_7:                               # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$s3, $a1, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB78_9
# %bb.8:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	b	.LBB78_10
.LBB78_9:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB78_10:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL13operatorstack)
	addi.d	$s4, $a1, %pc_lo12(_ZL13operatorstack)
	ld.d	$a2, $s4, 64
	ld.d	$a1, $s4, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB78_17
# %bb.11:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s4, 48
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s5, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s5, 114
	beqz	$a0, .LBB78_13
.LBB78_12:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $fp, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $s5, 312
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB78_13:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 48
	ld.d	$a0, $s2, 56
	beq	$a1, $a0, .LBB78_18
# %bb.14:
	addi.d	$a1, $a1, -8
	ld.d	$a2, $s3, 48
	ld.d	$a0, $s3, 56
	st.d	$a1, $s2, 48
	beq	$a2, $a0, .LBB78_19
.LBB78_15:
	addi.d	$a1, $a2, -8
	ld.d	$a2, $s4, 48
	ld.d	$a0, $s4, 56
	st.d	$a1, $s3, 48
	beq	$a2, $a0, .LBB78_20
.LBB78_16:
	addi.d	$a0, $a2, -8
	b	.LBB78_21
.LBB78_17:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL13operatorstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s5, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s5, 114
	bnez	$a0, .LBB78_12
	b	.LBB78_13
.LBB78_18:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s3, 48
	ld.d	$a0, $s3, 56
	st.d	$a1, $s2, 48
	bne	$a2, $a0, .LBB78_15
.LBB78_19:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s4, 48
	ld.d	$a0, $s4, 56
	st.d	$a1, $s3, 48
	bne	$a2, $a0, .LBB78_16
.LBB78_20:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a0, $a0, 504
.LBB78_21:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit41
	st.d	$a0, $s4, 48
.LBB78_22:                              # %.loopexit
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.Lfunc_end78:
	.size	_ZN2kc11impl_Ctexts10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end78-_ZN2kc11impl_Ctexts10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc11impl_Ctexts14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc11impl_Ctexts14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc11impl_Ctexts14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc11impl_Ctexts14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc11impl_Ctexts14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end79:
	.size	_ZN2kc11impl_Ctexts14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end79-_ZN2kc11impl_Ctexts14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc17impl_includefiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_includefiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_includefiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_includefiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_includefiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB80_2
	b	.LBB80_3
	.p2align	4, , 16
.LBB80_1:                               # %.lr.ph
                                        #   in Loop: Header=BB80_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB80_2:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB80_1
.LBB80_3:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end80:
	.size	_ZN2kc17impl_includefiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end80-_ZN2kc17impl_includefiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_includefiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_includefiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_includefiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_includefiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_includefiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end81:
	.size	_ZN2kc17impl_includefiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end81-_ZN2kc17impl_includefiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc28impl_includefile_IncludeFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_includefile_IncludeFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_includefile_IncludeFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_includefile_IncludeFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_includefile_IncludeFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end82:
	.size	_ZN2kc28impl_includefile_IncludeFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end82-_ZN2kc28impl_includefile_IncludeFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_includedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_includedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_includedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_includedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_includedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB83_6
# %bb.1:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 80
	beq	$a0, $a1, .LBB83_7
# %bb.2:
	ori	$a1, $zero, 81
	bne	$a0, $a1, .LBB83_5
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	b	.LBB83_8
	.p2align	4, , 16
.LBB83_4:                               # %.lr.ph
                                        #   in Loop: Header=BB83_5 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB83_5:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB83_4
.LBB83_6:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB83_7:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1404)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1404)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_do_gen_includesE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc20view_do_gen_includesE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1405)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1405)
	move	$a0, $s0
.LBB83_8:
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end83:
	.size	_ZN2kc24impl_includedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end83-_ZN2kc24impl_includedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_includedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_includedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_includedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_includedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_includedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end84:
	.size	_ZN2kc24impl_includedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end84-_ZN2kc24impl_includedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc42impl_includedeclaration_IncludeDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc42impl_includedeclaration_IncludeDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc42impl_includedeclaration_IncludeDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc42impl_includedeclaration_IncludeDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc42impl_includedeclaration_IncludeDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 81
	bne	$a3, $a4, .LBB85_4
# %bb.1:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	pcalau12i	$a3, %got_pc_hi20(g_options)
	ld.d	$s2, $a3, %got_pc_lo12(g_options)
	ld.bu	$a3, $s2, 114
	ld.d	$fp, $a0, 24
	beqz	$a3, .LBB85_3
# %bb.2:
	pcalau12i	$a3, %got_pc_hi20(pg_line)
	ld.d	$a3, $a3, %got_pc_lo12(pg_line)
	ld.d	$a4, $a1, 0
	ld.d	$a3, $a3, 0
	ld.d	$a4, $a4, 0
	move	$s3, $a0
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.w	$a2, $s3, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	move	$a2, $s1
	move	$a1, $s0
.LBB85_3:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$fp, $a1
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
.LBB85_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end85:
	.size	_ZN2kc42impl_includedeclaration_IncludeDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end85-_ZN2kc42impl_includedeclaration_IncludeDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rwdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_rwdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_rwdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_rwdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB86_2
.LBB86_1:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB86_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 5
	bne	$a0, $a1, .LBB86_4
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB86_4:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB86_1
# %bb.5:                                # %.lr.ph
                                        #   in Loop: Header=BB86_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB86_4
.Lfunc_end86:
	.size	_ZN2kc19impl_rwdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end86-_ZN2kc19impl_rwdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rwdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_rwdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_rwdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_rwdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_rwdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end87:
	.size	_ZN2kc19impl_rwdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end87-_ZN2kc19impl_rwdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc32impl_rwdeclaration_RwDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_rwdeclaration_RwDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_rwdeclaration_RwDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_rwdeclaration_RwDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_rwdeclaration_RwDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB88_3
# %bb.1:
	ori	$a4, $zero, 18
	bne	$a3, $a4, .LBB88_5
# %bb.2:
	ld.d	$fp, $a0, 8
	ld.d	$s0, $a0, 16
	pcaddu18i	$ra, %call36(_ZN2kc21v_resetbindingidmarksEv)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc19syn_outmostpatternsEPNS_20impl_outmostpatternsE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc40add_predicates_to_patternrepresentationsEPNS_27impl_patternrepresentationsE)
	jirl	$ra, $ra, 0
	move	$a1, $s0
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	pcaddu18i	$t8, %call36(_ZN2kc34v_add_rewriterulesinfo_to_operatorEPNS_27impl_patternrepresentationsEPNS_19impl_rewriteclausesE)
	jr	$t8
.LBB88_3:
	move	$s7, $a1
	move	$s1, $a2
	ld.d	$s0, $a0, 8
	ld.d	$fp, $a0, 16
	pcaddu18i	$ra, %call36(_ZN2kc12NiloperatorsEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL16outmostoperators)
	addi.d	$s4, $a1, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a2, $s4, 64
	ld.d	$a1, $s4, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB88_6
# %bb.4:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s4, 48
	b	.LBB88_7
.LBB88_5:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	jr	$a3
.LBB88_6:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$a0, $a0, %pc_lo12(_ZL16outmostoperators)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB88_7:                               # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9DVAllowedEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$s3, $a1, %pc_lo12(_ZL17dollarvarsallowed)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB88_9
# %bb.8:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	b	.LBB88_10
.LBB88_9:
	pcalau12i	$a0, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$a0, $a0, %pc_lo12(_ZL17dollarvarsallowed)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB88_10:                              # %_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL11phylumstack)
	addi.d	$s5, $a1, %pc_lo12(_ZL11phylumstack)
	ld.d	$a2, $s5, 64
	ld.d	$a1, $s5, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB88_12
# %bb.11:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s5, 48
	b	.LBB88_13
.LBB88_12:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL11phylumstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB88_13:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc12NilvariablesEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL14variablesstack)
	addi.d	$s2, $a1, %pc_lo12(_ZL14variablesstack)
	ld.d	$a2, $s2, 64
	ld.d	$a1, $s2, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB88_15
# %bb.14:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s2, 48
	b	.LBB88_16
.LBB88_15:
	pcalau12i	$a0, %pc_hi20(_ZL14variablesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14variablesstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB88_16:                              # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	ld.d	$a0, $s0, 0
	pcalau12i	$s6, %pc_hi20(_ZL8cl_scope)
	ld.w	$a1, $s6, %pc_lo12(_ZL8cl_scope)
	ld.d	$a3, $a0, 72
	addi.d	$a0, $a1, 1
	st.w	$a0, $s6, %pc_lo12(_ZL8cl_scope)
	move	$a0, $s0
	move	$a1, $s7
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s7
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 48
	ld.d	$a1, $s4, 56
	bne	$a0, $a1, .LBB88_18
# %bb.17:
	ld.d	$a0, $s4, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB88_18:                              # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8freelistEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s4, 48
	ld.d	$a0, $s4, 56
	beq	$a1, $a0, .LBB88_27
# %bb.19:
	addi.d	$a1, $a1, -8
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	st.d	$a1, $s4, 48
	beq	$a2, $a0, .LBB88_28
.LBB88_20:
	addi.d	$a1, $a2, -8
	ld.d	$a2, $s3, 48
	ld.d	$a0, $s3, 56
	st.d	$a1, $s5, 48
	beq	$a2, $a0, .LBB88_29
.LBB88_21:
	addi.d	$a0, $a2, -8
	ld.d	$a1, $s2, 48
	ld.d	$a2, $s2, 56
	st.d	$a0, $s3, 48
	bne	$a1, $a2, .LBB88_23
.LBB88_22:
	ld.d	$a0, $s2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB88_23:                              # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a1, -8
	pcaddu18i	$ra, %call36(_ZN2kc22v_reset_variables_typeEPNS_14impl_variablesE)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s6, %pc_lo12(_ZL8cl_scope)
	ld.d	$a0, $s2, 48
	ld.d	$a2, $s2, 56
	addi.d	$a1, $a1, -1
	st.w	$a1, $s6, %pc_lo12(_ZL8cl_scope)
	bne	$a0, $a2, .LBB88_25
# %bb.24:
	ld.d	$a0, $s2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB88_25:                              # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit22
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8freelistEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 48
	ld.d	$a0, $s2, 56
	beq	$a1, $a0, .LBB88_30
# %bb.26:
	addi.d	$a0, $a1, -8
	b	.LBB88_31
.LBB88_27:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	st.d	$a1, $s4, 48
	bne	$a2, $a0, .LBB88_20
.LBB88_28:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s5, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s5, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s5, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s3, 48
	ld.d	$a0, $s3, 56
	st.d	$a1, $s5, 48
	bne	$a2, $a0, .LBB88_21
.LBB88_29:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a0, $a0, 504
	ld.d	$a1, $s2, 48
	ld.d	$a2, $s2, 56
	st.d	$a0, $s3, 48
	bne	$a1, $a2, .LBB88_23
	b	.LBB88_22
.LBB88_30:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a0, $a0, 504
.LBB88_31:                              # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s2, 48
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end88:
	.size	_ZN2kc32impl_rwdeclaration_RwDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end88-_ZN2kc32impl_rwdeclaration_RwDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rewriteclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_rewriteclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_rewriteclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_rewriteclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_rewriteclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB89_2
.LBB89_1:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB89_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 5
	bne	$a0, $a1, .LBB89_4
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB89_4:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB89_1
# %bb.5:                                # %.lr.ph
                                        #   in Loop: Header=BB89_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB89_4
.Lfunc_end89:
	.size	_ZN2kc19impl_rewriteclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end89-_ZN2kc19impl_rewriteclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_rewriteclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_rewriteclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_rewriteclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_rewriteclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_rewriteclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end90:
	.size	_ZN2kc19impl_rewriteclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end90-_ZN2kc19impl_rewriteclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc32impl_rewriteclause_RewriteClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_rewriteclause_RewriteClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_rewriteclause_RewriteClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_rewriteclause_RewriteClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_rewriteclause_RewriteClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	bne	$a3, $a4, .LBB91_2
# %bb.1:
	ld.d	$a0, $a0, 8
	ld.d	$a2, $a0, 0
	ld.d	$a3, $a2, 72
	pcalau12i	$a2, %pc_hi20(_ZN2kc12view_check_rE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc12view_check_rE)
	jr	$a3
.LBB91_2:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end91:
	.size	_ZN2kc32impl_rewriteclause_RewriteClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end91-_ZN2kc32impl_rewriteclause_RewriteClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_patternchains10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_patternchains10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_patternchains10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_patternchains10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_patternchains10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB92_6
# %bb.1:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 5
	beq	$a0, $a1, .LBB92_3
# %bb.2:
	ori	$a1, $zero, 9
	bne	$a0, $a1, .LBB92_5
.LBB92_3:                               # %.loopexit.sink.split
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 24
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB92_4:                               # %.lr.ph
                                        #   in Loop: Header=BB92_5 Depth=1
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 32
.LBB92_5:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 32
	bnez	$a0, .LBB92_4
.LBB92_6:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end92:
	.size	_ZN2kc18impl_patternchains10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end92-_ZN2kc18impl_patternchains10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_patternchains14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_patternchains14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_patternchains14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_patternchains14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_patternchains14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end93:
	.size	_ZN2kc18impl_patternchains14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end93-_ZN2kc18impl_patternchains14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc17impl_patternchain10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_patternchain10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_patternchain10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_patternchain10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_patternchain10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB94_2
# %bb.1:
	move	$a0, $s1
	move	$a2, $fp
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	pcaddu18i	$t8, %call36(_ZN2kc17impl_patternchain14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE)
	jr	$t8
.LBB94_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 5
	beq	$a0, $a1, .LBB94_10
# %bb.3:
	ori	$a1, $zero, 9
	bne	$a0, $a1, .LBB94_9
# %bb.4:
	ld.d	$s2, $s1, 24
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$s5, $a0, %pc_lo12(_ZL16phylumnamesstack)
	ld.d	$a0, $s5, 48
	ld.d	$a1, $s5, 56
	ld.d	$s1, $s1, 32
	st.d	$zero, $sp, 16
	st.d	$zero, $sp, 8
	bne	$a0, $a1, .LBB94_6
# %bb.5:
	ld.d	$a0, $s5, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB94_6:                               # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s4, $a0, -8
	ld.d	$a0, $s4, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s4
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 13
	bne	$a0, $a1, .LBB94_31
# %bb.7:
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN2kc14NilphylumnamesEv)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	st.d	$a0, $sp, 8
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	bne	$a2, $a0, .LBB94_33
	b	.LBB94_40
	.p2align	4, , 16
.LBB94_8:                               # %.lr.ph
                                        #   in Loop: Header=BB94_9 Depth=1
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 32
.LBB94_9:                               # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 32
	bnez	$a0, .LBB94_8
	b	.LBB94_73
.LBB94_10:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 77
	bne	$a0, $s2, .LBB94_15
# %bb.11:
	ld.d	$a0, $s1, 24
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 84
	bne	$a0, $a1, .LBB94_15
# %bb.12:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 74
	bne	$a0, $a1, .LBB94_15
# %bb.13:
	ld.d	$a0, $s1, 32
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 77
	bne	$a0, $a1, .LBB94_15
# %bb.14:
	ld.d	$a0, $s1, 32
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 84
	beq	$a0, $a1, .LBB94_21
.LBB94_15:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB94_18
# %bb.16:
	ld.d	$a0, $s1, 24
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 84
	bne	$a0, $a1, .LBB94_18
# %bb.17:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 73
	beq	$a0, $a1, .LBB94_73
.LBB94_18:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 77
	bne	$a0, $a1, .LBB94_22
# %bb.19:
	ld.d	$a0, $s1, 24
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 84
	bne	$a0, $a1, .LBB94_22
# %bb.20:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 74
	bne	$a0, $a1, .LBB94_22
.LBB94_21:
	ld.d	$a1, $s1, 24
	b	.LBB94_26
.LBB94_22:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 74
	bne	$a0, $a1, .LBB94_27
# %bb.23:
	ld.d	$a0, $s1, 32
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 77
	bne	$a0, $a1, .LBB94_27
# %bb.24:
	ld.d	$a0, $s1, 32
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 84
	bne	$a0, $a1, .LBB94_27
# %bb.25:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 24
.LBB94_26:
	ld.d	$a0, $a1, 16
	ld.w	$a1, $a1, 8
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1406)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1406)
	pcaddu18i	$ra, %call36(_ZN2kc9Problem1SEPKc)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.LBB94_27:
	ld.d	$s2, $s1, 24
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$s6, $a0, %pc_lo12(_ZL16phylumnamesstack)
	ld.d	$a0, $s6, 48
	ld.d	$a1, $s6, 56
	ld.d	$s3, $s1, 32
	st.d	$zero, $sp, 16
	st.d	$zero, $sp, 8
	bne	$a0, $a1, .LBB94_29
# %bb.28:
	ld.d	$a0, $s6, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB94_29:                              # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE3topEv.exit55
	ld.d	$s5, $a0, -8
	ld.d	$a0, $s5, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s5
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 13
	bne	$a0, $a1, .LBB94_35
# %bb.30:
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	st.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZN2kc14NilphylumnamesEv)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s1, 16
	ld.w	$a1, $s1, 8
	move	$s1, $a0
	st.d	$a0, $sp, 8
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$s5, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1407)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1407)
	pcaddu18i	$ra, %call36(_ZN2kc9Problem1SEPKc)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s6, 48
	ld.d	$a0, $s6, 56
	bne	$a2, $a0, .LBB94_37
	b	.LBB94_59
.LBB94_31:
	ld.d	$a0, $s4, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s4
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 14
	bne	$a0, $a1, .LBB94_39
# %bb.32:
	ld.d	$s3, $s4, 8
	ld.d	$s4, $s4, 16
	st.d	$s3, $sp, 16
	st.d	$s4, $sp, 8
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	beq	$a2, $a0, .LBB94_40
.LBB94_33:
	ld.d	$a1, $s5, 64
	addi.d	$a0, $a2, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s5, 48
	beq	$a0, $a1, .LBB94_41
.LBB94_34:
	st.d	$s4, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s5, 48
	b	.LBB94_42
.LBB94_35:
	ld.d	$a0, $s5, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s5
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 14
	bne	$a0, $a1, .LBB94_58
# %bb.36:
	ld.d	$s4, $s5, 8
	ld.d	$s1, $s5, 16
	st.d	$s4, $sp, 16
	st.d	$s1, $sp, 8
	ld.d	$a2, $s6, 48
	ld.d	$a0, $s6, 56
	beq	$a2, $a0, .LBB94_59
.LBB94_37:
	ld.d	$a1, $s6, 64
	addi.d	$a0, $a2, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s6, 48
	beq	$a0, $a1, .LBB94_60
.LBB94_38:
	st.d	$s1, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s6, 48
	b	.LBB94_61
.LBB94_39:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 2
	ori	$a1, $a1, 3786
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	move	$s3, $zero
	move	$s4, $zero
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	bne	$a2, $a0, .LBB94_33
.LBB94_40:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s5, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s5, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s5, 64
	addi.d	$a0, $a0, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s5, 48
	bne	$a0, $a1, .LBB94_34
.LBB94_41:
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL16phylumnamesstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB94_42:                              # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s5, 48
	ld.d	$a0, $s5, 56
	beq	$a1, $a0, .LBB94_44
# %bb.43:
	ld.d	$a2, $a1, -8
	addi.d	$a0, $a1, -8
	st.d	$a2, $sp, 8
	b	.LBB94_45
.LBB94_44:
	ld.d	$a1, $s5, 72
	ld.d	$a1, $a1, -8
	ld.d	$a1, $a1, 504
	st.d	$a1, $sp, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s5, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s5, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s5, 64
	addi.d	$a0, $a0, 504
.LBB94_45:                              # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE3popEv.exit49
	pcalau12i	$a1, %pc_hi20(_ZL11phylumstack)
	addi.d	$s1, $a1, %pc_lo12(_ZL11phylumstack)
	ld.d	$a2, $s1, 64
	ld.d	$a1, $s1, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $s5, 48
	beq	$a1, $a2, .LBB94_54
# %bb.46:
	st.d	$s3, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	bne	$a0, $a1, .LBB94_48
.LBB94_47:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB94_48:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s3, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB94_52
# %bb.49:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	bne	$a0, $a1, .LBB94_51
# %bb.50:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB94_51:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit51
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 24
.LBB94_52:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB94_55
# %bb.53:
	ld.d	$a0, $a1, -8
	addi.d	$a2, $a1, -8
	st.d	$a0, $sp, 16
	b	.LBB94_56
.LBB94_54:
	addi.d	$a1, $sp, 16
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	bne	$a0, $a1, .LBB94_48
	b	.LBB94_47
.LBB94_55:
	ld.d	$a1, $s1, 72
	ld.d	$a1, $a1, -8
	ld.d	$a1, $a1, 504
	st.d	$a1, $sp, 16
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s1, 72
	ld.d	$a1, $a0, -8
	st.d	$a1, $s1, 56
	ld.d	$a0, $sp, 16
	addi.d	$a2, $a1, 512
	st.d	$a2, $s1, 64
	addi.d	$a2, $a1, 504
.LBB94_56:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit
	ld.d	$a1, $sp, 8
	st.d	$a2, $s1, 48
	pcaddu18i	$ra, %call36(_ZN2kc15ConsphylumnamesEPNS_7impl_IDEPNS_16impl_phylumnamesE)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s5, 64
	ld.d	$a1, $s5, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB94_72
# %bb.57:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s5, 48
	b	.LBB94_73
.LBB94_58:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 2
	ori	$a1, $a1, 3854
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	move	$s4, $zero
	move	$s1, $zero
	ld.d	$a2, $s6, 48
	ld.d	$a0, $s6, 56
	bne	$a2, $a0, .LBB94_37
.LBB94_59:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s6, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s6, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s6, 64
	addi.d	$a0, $a0, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s6, 48
	bne	$a0, $a1, .LBB94_38
.LBB94_60:
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL16phylumnamesstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB94_61:                              # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit60
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s6, 48
	ld.d	$a0, $s6, 56
	beq	$a1, $a0, .LBB94_63
# %bb.62:
	ld.d	$a2, $a1, -8
	addi.d	$a0, $a1, -8
	st.d	$a2, $sp, 8
	b	.LBB94_64
.LBB94_63:
	ld.d	$a1, $s6, 72
	ld.d	$a1, $a1, -8
	ld.d	$a1, $a1, 504
	st.d	$a1, $sp, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s6, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s6, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s6, 64
	addi.d	$a0, $a0, 504
.LBB94_64:                              # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE3popEv.exit64
	pcalau12i	$a1, %pc_hi20(_ZL11phylumstack)
	addi.d	$s1, $a1, %pc_lo12(_ZL11phylumstack)
	ld.d	$a2, $s1, 64
	ld.d	$a1, $s1, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $s6, 48
	beq	$a1, $a2, .LBB94_66
# %bb.65:
	st.d	$s4, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s1, 48
	b	.LBB94_67
.LBB94_66:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL11phylumstack)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB94_67:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit66
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB94_69
# %bb.68:
	ld.d	$a0, $a1, -8
	addi.d	$a2, $a1, -8
	st.d	$a0, $sp, 16
	b	.LBB94_70
.LBB94_69:
	ld.d	$a1, $s1, 72
	ld.d	$a1, $a1, -8
	ld.d	$a1, $a1, 504
	st.d	$a1, $sp, 16
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s1, 72
	ld.d	$a1, $a0, -8
	st.d	$a1, $s1, 56
	ld.d	$a0, $sp, 16
	addi.d	$a2, $a1, 512
	st.d	$a2, $s1, 64
	addi.d	$a2, $a1, 504
.LBB94_70:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit70
	ld.d	$a1, $sp, 8
	st.d	$a2, $s1, 48
	pcaddu18i	$ra, %call36(_ZN2kc15ConsphylumnamesEPNS_7impl_IDEPNS_16impl_phylumnamesE)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s6, 64
	ld.d	$a1, $s6, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB94_72
# %bb.71:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s6, 48
	b	.LBB94_73
.LBB94_72:
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL16phylumnamesstack)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB94_73:                              # %.loopexit
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end94:
	.size	_ZN2kc17impl_patternchain10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end94-_ZN2kc17impl_patternchain10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_patternchain14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_patternchain14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_patternchain14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_patternchain14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_patternchain14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.w	$a1, $a2, 0
	ori	$a2, $zero, 5
	bne	$a1, $a2, .LBB95_4
# %bb.1:
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL16phylumnamesstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB95_3
# %bb.2:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB95_3:                               # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s0, $a0, -8
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 13
	bne	$a0, $a1, .LBB95_5
.LBB95_4:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB95_5:
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 14
	bne	$a0, $a1, .LBB95_7
# %bb.6:
	ld.d	$a0, $fp, 16
	ld.w	$a1, $fp, 8
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1408)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1408)
	pcaddu18i	$ra, %call36(_ZN2kc9Problem1SEPKc)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.LBB95_7:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 2
	ori	$a1, $a1, 3911
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jr	$t8
.Lfunc_end95:
	.size	_ZN2kc17impl_patternchain14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end95-_ZN2kc17impl_patternchain14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_outmostpatterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc20impl_outmostpatterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc20impl_outmostpatterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc20impl_outmostpatterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc20impl_outmostpatterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB96_2
.LBB96_1:                               # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB96_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 5
	bne	$a0, $a1, .LBB96_4
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB96_4:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB96_1
# %bb.5:                                # %.lr.ph
                                        #   in Loop: Header=BB96_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB96_4
.Lfunc_end96:
	.size	_ZN2kc20impl_outmostpatterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end96-_ZN2kc20impl_outmostpatterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_outmostpatterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc20impl_outmostpatterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc20impl_outmostpatterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc20impl_outmostpatterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc20impl_outmostpatterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end97:
	.size	_ZN2kc20impl_outmostpatterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end97-_ZN2kc20impl_outmostpatterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc46impl_patternchainitem_PatternchainitemDollarid10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc46impl_patternchainitem_PatternchainitemDollarid10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc46impl_patternchainitem_PatternchainitemDollarid10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc46impl_patternchainitem_PatternchainitemDollarid10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc46impl_patternchainitem_PatternchainitemDollarid10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end98:
	.size	_ZN2kc46impl_patternchainitem_PatternchainitemDollarid10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end98-_ZN2kc46impl_patternchainitem_PatternchainitemDollarid10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc43impl_patternchainitem_PatternchainitemGroup10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc43impl_patternchainitem_PatternchainitemGroup10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc43impl_patternchainitem_PatternchainitemGroup10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc43impl_patternchainitem_PatternchainitemGroup10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc43impl_patternchainitem_PatternchainitemGroup10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 9
	beq	$a3, $a4, .LBB99_3
# %bb.1:
	ori	$a4, $zero, 5
	bne	$a3, $a4, .LBB99_4
# %bb.2:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$a2, $a0, 16
	ld.w	$a1, $a0, 8
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1409)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1409)
	pcaddu18i	$ra, %call36(_ZN2kc9Problem1SEPKc)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.LBB99_3:
	ret
.LBB99_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end99:
	.size	_ZN2kc43impl_patternchainitem_PatternchainitemGroup10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end99-_ZN2kc43impl_patternchainitem_PatternchainitemGroup10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc45impl_patternchainitem_PatternchainitemOutmost10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc45impl_patternchainitem_PatternchainitemOutmost10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc45impl_patternchainitem_PatternchainitemOutmost10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc45impl_patternchainitem_PatternchainitemOutmost10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc45impl_patternchainitem_PatternchainitemOutmost10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB100_9
# %bb.1:
	ori	$a4, $zero, 9
	bne	$a3, $a4, .LBB100_12
# %bb.2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	pcalau12i	$a1, %pc_hi20(_ZL11phylumstack)
	addi.d	$s0, $a1, %pc_lo12(_ZL11phylumstack)
	ld.d	$a1, $s0, 48
	ld.d	$a2, $s0, 56
	bne	$a1, $a2, .LBB100_4
# %bb.3:
	ld.d	$a1, $s0, 72
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
.LBB100_4:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s1, $a0, 32
	ld.d	$fp, $a1, -8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB100_8
# %bb.5:
	ld.d	$a0, $s0, 48
	ld.d	$a1, $s0, 56
	bne	$a0, $a1, .LBB100_7
# %bb.6:
	ld.d	$a0, $s0, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB100_7:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit12
	ld.d	$a0, $a0, -8
	st.d	$a0, $s1, 24
.LBB100_8:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB100_9:
	pcalau12i	$a2, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$a3, $a2, %pc_lo12(_ZL16inforeachcontext)
	ld.d	$a2, $a3, 48
	ld.d	$a4, $a3, 56
	ld.d	$a0, $a0, 32
	beq	$a2, $a4, .LBB100_13
# %bb.10:                               # %_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv.exit
	ld.d	$a3, $a0, 0
	ld.w	$a2, $a2, -4
	ld.d	$a3, $a3, 72
	beqz	$a2, .LBB100_14
.LBB100_11:
	pcalau12i	$a2, %pc_hi20(_ZN2kc17view_check_is_varE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc17view_check_is_varE)
	jr	$a3
.LBB100_12:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.LBB100_13:
	ld.d	$a2, $a3, 72
	ld.d	$a2, $a2, -8
	addi.d	$a2, $a2, 512
	ld.d	$a3, $a0, 0
	ld.w	$a2, $a2, -4
	ld.d	$a3, $a3, 72
	bnez	$a2, .LBB100_11
.LBB100_14:
	pcalau12i	$a2, %pc_hi20(_ZN2kc33view_check_outmostopers_in_phylumE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc33view_check_outmostopers_in_phylumE)
	jr	$a3
.Lfunc_end100:
	.size	_ZN2kc45impl_patternchainitem_PatternchainitemOutmost10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end100-_ZN2kc45impl_patternchainitem_PatternchainitemOutmost10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc29impl_outmostpattern_OPDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc29impl_outmostpattern_OPDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc29impl_outmostpattern_OPDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc29impl_outmostpattern_OPDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc29impl_outmostpattern_OPDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB101_2
# %bb.1:
	ori	$a4, $zero, 10
	bne	$a3, $a4, .LBB101_3
.LBB101_2:
	ret
.LBB101_3:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end101:
	.size	_ZN2kc29impl_outmostpattern_OPDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end101-_ZN2kc29impl_outmostpattern_OPDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_outmostpattern_OPWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_outmostpattern_OPWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_outmostpattern_OPWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_outmostpattern_OPWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_outmostpattern_OPWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB102_2
# %bb.1:
	ori	$a4, $zero, 10
	bne	$a3, $a4, .LBB102_3
.LBB102_2:
	ret
.LBB102_3:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end102:
	.size	_ZN2kc30impl_outmostpattern_OPWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end102-_ZN2kc30impl_outmostpattern_OPWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc37impl_outmostpattern_OPNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc37impl_outmostpattern_OPNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc37impl_outmostpattern_OPNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc37impl_outmostpattern_OPNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc37impl_outmostpattern_OPNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB103_14
# %bb.1:
	ori	$a4, $zero, 10
	beq	$a3, $a4, .LBB103_29
# %bb.2:
	ori	$a4, $zero, 8
	bne	$a3, $a4, .LBB103_19
# %bb.3:
	move	$fp, $a1
	ld.d	$s1, $a0, 32
	pcalau12i	$a1, %pc_hi20(_ZL14variablesstack)
	addi.d	$s5, $a1, %pc_lo12(_ZL14variablesstack)
	ld.d	$a1, $s5, 48
	ld.d	$a2, $s5, 56
	ld.d	$s0, $a0, 40
	bne	$a1, $a2, .LBB103_5
# %bb.4:
	ld.d	$a0, $s5, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB103_5:                              # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a1, $a1, -8
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	st.d	$a0, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc24f_phylumofoutmostpatternEPNS_19impl_outmostpatternE)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc25f_phylumofpatternvariableEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL11phylumstack)
	addi.d	$s6, $a1, %pc_lo12(_ZL11phylumstack)
	ld.d	$a1, $s6, 48
	ld.d	$a2, $s6, 56
	masknez	$a3, $s3, $a0
	maskeqz	$a0, $s4, $a0
	or	$s4, $a0, $a3
	st.d	$s4, $sp, 8
	bne	$a1, $a2, .LBB103_7
# %bb.6:
	ld.d	$a0, $s6, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB103_7:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s3, $a1, -8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB103_11
# %bb.8:
	ld.d	$a2, $s6, 48
	ld.d	$a0, $s6, 56
	beq	$a2, $a0, .LBB103_23
# %bb.9:
	ld.d	$a1, $s6, 64
	addi.d	$a0, $a2, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s6, 48
	beq	$a0, $a1, .LBB103_24
.LBB103_10:
	st.d	$s4, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s6, 48
.LBB103_11:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	beq	$a2, $a0, .LBB103_25
.LBB103_12:
	ld.d	$a1, $s5, 64
	addi.d	$a0, $a2, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s5, 48
	beq	$a0, $a1, .LBB103_26
.LBB103_13:
	st.d	$s2, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s5, 48
	b	.LBB103_27
.LBB103_14:
	move	$fp, $a2
	move	$s0, $a1
	pcalau12i	$a1, %pc_hi20(_ZL14variablesstack)
	addi.d	$s4, $a1, %pc_lo12(_ZL14variablesstack)
	ld.d	$a1, $s4, 48
	ld.d	$a2, $s4, 56
	ld.d	$s1, $a0, 32
	bne	$a1, $a2, .LBB103_16
# %bb.15:
	ld.d	$a1, $s4, 72
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
.LBB103_16:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit27
	ld.d	$s2, $a0, 40
	ld.d	$a1, $a1, -8
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s4, 48
	ld.d	$a2, $s4, 56
	move	$s3, $a0
	st.d	$a0, $sp, 16
	beq	$a3, $a2, .LBB103_20
# %bb.17:
	ld.d	$a1, $s4, 64
	addi.d	$a0, $a3, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s4, 48
	beq	$a0, $a1, .LBB103_21
.LBB103_18:
	st.d	$s3, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s4, 48
	b	.LBB103_22
.LBB103_19:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	jr	$a3
.LBB103_20:
	ori	$a1, $zero, 512
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a0, $a0, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s4, 48
	bne	$a0, $a1, .LBB103_18
.LBB103_21:
	pcalau12i	$a0, %pc_hi20(_ZL14variablesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14variablesstack)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB103_22:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc24f_phylumofoutmostpatternEPNS_19impl_outmostpatternE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL8cl_scope)
	ld.w	$a1, $a1, %pc_lo12(_ZL8cl_scope)
	move	$s3, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(_ZN2kc9mkintegerEi)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc13v_extendoccurEPNS_7impl_IDEPNS_11impl_IDtypeE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	b	.LBB103_28
.LBB103_23:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s6, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s6, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s6, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s6, 64
	addi.d	$a0, $a0, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s6, 48
	bne	$a0, $a1, .LBB103_10
.LBB103_24:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL11phylumstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	bne	$a2, $a0, .LBB103_12
.LBB103_25:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s5, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s5, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s5, 64
	addi.d	$a0, $a0, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s5, 48
	bne	$a0, $a1, .LBB103_13
.LBB103_26:
	pcalau12i	$a0, %pc_hi20(_ZL14variablesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14variablesstack)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB103_27:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$s2, $sp, 8
	pcalau12i	$a0, %pc_hi20(_ZL8cl_scope)
	ld.w	$a0, $a0, %pc_lo12(_ZL8cl_scope)
	pcaddu18i	$ra, %call36(_ZN2kc9mkintegerEi)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc13v_extendoccurEPNS_7impl_IDEPNS_11impl_IDtypeE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_checkE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_checkE)
	move	$a0, $s0
	move	$a1, $fp
.LBB103_28:
	jirl	$ra, $a3, 0
.LBB103_29:
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end103:
	.size	_ZN2kc37impl_outmostpattern_OPNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end103-_ZN2kc37impl_outmostpattern_OPNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_outmostpattern_OPOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_outmostpattern_OPOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_outmostpattern_OPOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_outmostpattern_OPOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_outmostpattern_OPOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB104_9
# %bb.1:
	ori	$a4, $zero, 10
	beq	$a3, $a4, .LBB104_76
# %bb.2:
	ori	$a4, $zero, 8
	bne	$a3, $a4, .LBB104_15
# %bb.3:
	move	$s3, $a1
	ld.d	$fp, $a0, 32
	ld.d	$s0, $a0, 40
	st.d	$fp, $sp, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_useoccuroperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB104_76
# %bb.4:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$s1, $a0, %pc_lo12(_ZL11phylumstack)
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	bne	$a0, $a1, .LBB104_6
# %bb.5:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB104_6:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s2, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 48
	beqz	$a0, .LBB104_16
# %bb.7:
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB104_50
# %bb.8:
	addi.d	$a0, $a1, -8
	b	.LBB104_51
.LBB104_9:
	move	$s3, $a2
	move	$s2, $a1
	ld.d	$s0, $a0, 32
	ld.d	$fp, $a0, 40
	st.d	$s0, $sp, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc18f_useoccuroperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB104_76
# %bb.10:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$s4, $a0, %pc_lo12(_ZL11phylumstack)
	ld.d	$a0, $s4, 48
	ld.d	$a1, $s4, 56
	bne	$a0, $a1, .LBB104_12
# %bb.11:
	ld.d	$a0, $s4, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB104_12:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit25
	ld.d	$s1, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB104_27
# %bb.13:
	ld.d	$a1, $s4, 48
	ld.d	$a0, $s4, 56
	beq	$a1, $a0, .LBB104_23
# %bb.14:
	addi.d	$a0, $a1, -8
	b	.LBB104_24
.LBB104_15:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.LBB104_16:
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB104_53
.LBB104_17:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit13
	ld.d	$a1, $a1, -8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_operatorinphylumEPNS_7impl_IDES1_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB104_54
.LBB104_18:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$s2, $a0, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a0, $s2, 48
	ld.d	$a1, $s2, 56
	bne	$a0, $a1, .LBB104_20
# %bb.19:
	ld.d	$a0, $s2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB104_20:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a1, $a0, -8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s2, 48
	ld.d	$a2, $s2, 56
	move	$s1, $a0
	st.d	$a0, $sp, 8
	beq	$a3, $a2, .LBB104_57
# %bb.21:
	ld.d	$a1, $s2, 64
	addi.d	$a0, $a3, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s2, 48
	beq	$a0, $a1, .LBB104_58
.LBB104_22:
	st.d	$s1, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s2, 48
	b	.LBB104_59
.LBB104_23:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a0, $a0, 504
.LBB104_24:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit28
	st.d	$a0, $s4, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s4, 64
	ld.d	$a1, $s4, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB104_26
# %bb.25:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s4, 48
	b	.LBB104_27
.LBB104_26:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL11phylumstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB104_27:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$s4, $a0, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a0, $s4, 48
	ld.d	$a1, $s4, 56
	bne	$a0, $a1, .LBB104_29
# %bb.28:
	ld.d	$a0, $s4, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB104_29:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit31
	ld.d	$a1, $a0, -8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s4, 48
	ld.d	$a2, $s4, 56
	move	$s1, $a0
	st.d	$a0, $sp, 8
	beq	$a3, $a2, .LBB104_32
# %bb.30:
	ld.d	$a1, $s4, 64
	addi.d	$a0, $a3, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s4, 48
	beq	$a0, $a1, .LBB104_33
.LBB104_31:
	st.d	$s1, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s4, 48
	b	.LBB104_34
.LBB104_32:
	ori	$a1, $zero, 512
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a0, $a0, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s4, 48
	bne	$a0, $a1, .LBB104_31
.LBB104_33:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$a0, $a0, %pc_lo12(_ZL16outmostoperators)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB104_34:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit36
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc21f_argumentsofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 96
	jirl	$ra, $a1, 0
	pcalau12i	$a1, %pc_hi20(_ZL14argumentsstack)
	addi.d	$s1, $a1, %pc_lo12(_ZL14argumentsstack)
	ld.d	$a2, $s1, 64
	ld.d	$a1, $s1, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB104_36
# %bb.35:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s1, 48
	b	.LBB104_37
.LBB104_36:
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14argumentsstack)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB104_37:                             # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit38
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$s4, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a1, $s4, 64
	ld.d	$a0, $s4, 48
	addi.d	$a3, $a1, -8
	beq	$a0, $a3, .LBB104_39
# %bb.38:
	move	$a1, $s2
	move	$a2, $s3
	st.d	$s0, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s4, 48
	b	.LBB104_40
.LBB104_39:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL13operatorstack)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	move	$a2, $s3
	move	$a1, $s2
.LBB104_40:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit40
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	beq	$a0, $a1, .LBB104_45
# %bb.41:                               # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit41
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB104_46
.LBB104_42:
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB104_47
.LBB104_43:
	addi.d	$a1, $a1, -8
	ld.d	$a2, $s4, 48
	ld.d	$a0, $s4, 56
	st.d	$a1, $s1, 48
	beq	$a2, $a0, .LBB104_48
.LBB104_44:
	addi.d	$a0, $a2, -8
	b	.LBB104_49
.LBB104_45:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB104_42
.LBB104_46:
	ld.d	$a1, $sp, 16
	ld.d	$a0, $a1, 32
	ld.w	$a1, $a1, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1410)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1410)
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1IDEPKcPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	bne	$a1, $a0, .LBB104_43
.LBB104_47:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s1, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s1, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s1, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s4, 48
	ld.d	$a0, $s4, 56
	st.d	$a1, $s1, 48
	bne	$a2, $a0, .LBB104_44
.LBB104_48:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a0, $a0, 504
.LBB104_49:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit47
	st.d	$a0, $s4, 48
	b	.LBB104_76
.LBB104_50:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s1, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s1, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s1, 64
	addi.d	$a0, $a0, 504
.LBB104_51:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s1, 48
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s1, 64
	ld.d	$a1, $s1, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB104_61
# %bb.52:
	st.d	$a0, $a1, 0
	addi.d	$a1, $a1, 8
	st.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	bne	$a1, $a0, .LBB104_17
.LBB104_53:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
	ld.d	$a1, $a1, -8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_operatorinphylumEPNS_7impl_IDES1_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB104_18
.LBB104_54:
	ld.d	$a0, $fp, 32
	ld.w	$a1, $fp, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 48
	ld.d	$a2, $s1, 56
	move	$s0, $a0
	bne	$a1, $a2, .LBB104_56
# %bb.55:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB104_56:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit24
	ld.d	$a3, $a1, -8
	pcalau12i	$a0, %pc_hi20(.L.str.1411)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1411)
	pcalau12i	$a1, %pc_hi20(.L.str.1412)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1412)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc17Problem1S1ID1S1IDEPKcPNS_7impl_IDES1_S3_)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
	b	.LBB104_76
.LBB104_57:
	ori	$a1, $zero, 512
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a0, $a0, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s2, 48
	bne	$a0, $a1, .LBB104_22
.LBB104_58:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$a0, $a0, %pc_lo12(_ZL16outmostoperators)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB104_59:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc21f_argumentsofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 96
	jirl	$ra, $a1, 0
	pcalau12i	$a1, %pc_hi20(_ZL14argumentsstack)
	addi.d	$s1, $a1, %pc_lo12(_ZL14argumentsstack)
	ld.d	$a2, $s1, 64
	ld.d	$a1, $s1, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB104_62
# %bb.60:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s1, 48
	b	.LBB104_63
.LBB104_61:
	addi.d	$a1, $sp, 8
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	bne	$a1, $a0, .LBB104_17
	b	.LBB104_53
.LBB104_62:
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14argumentsstack)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB104_63:                             # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$s2, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a1, $s2, 64
	ld.d	$a0, $s2, 48
	addi.d	$a2, $a1, -8
	beq	$a0, $a2, .LBB104_65
# %bb.64:
	move	$a1, $s3
	st.d	$fp, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s2, 48
	b	.LBB104_66
.LBB104_65:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL13operatorstack)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	move	$a1, $s3
.LBB104_66:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_checkE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_checkE)
	move	$a0, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	beq	$a0, $a1, .LBB104_71
# %bb.67:                               # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB104_72
.LBB104_68:
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB104_73
.LBB104_69:
	addi.d	$a1, $a1, -8
	ld.d	$a2, $s2, 48
	ld.d	$a0, $s2, 56
	st.d	$a1, $s1, 48
	beq	$a2, $a0, .LBB104_74
.LBB104_70:
	addi.d	$a0, $a2, -8
	b	.LBB104_75
.LBB104_71:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB104_68
.LBB104_72:
	ld.d	$a1, $sp, 16
	ld.d	$a0, $a1, 32
	ld.w	$a1, $a1, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1410)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1410)
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1IDEPKcPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	bne	$a1, $a0, .LBB104_69
.LBB104_73:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s1, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s1, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s1, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s2, 48
	ld.d	$a0, $s2, 56
	st.d	$a1, $s1, 48
	bne	$a2, $a0, .LBB104_70
.LBB104_74:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a0, $a0, 504
.LBB104_75:
	st.d	$a0, $s2, 48
.LBB104_76:
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end104:
	.size	_ZN2kc30impl_outmostpattern_OPOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end104-_ZN2kc30impl_outmostpattern_OPOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc38impl_outmostpattern_OPOperatorWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc38impl_outmostpattern_OPOperatorWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc38impl_outmostpattern_OPOperatorWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc38impl_outmostpattern_OPOperatorWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc38impl_outmostpattern_OPOperatorWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB105_10
# %bb.1:
	ori	$a4, $zero, 8
	beq	$a3, $a4, .LBB105_4
# %bb.2:
	ori	$a4, $zero, 10
	bne	$a3, $a4, .LBB105_16
# %bb.3:
	ld.d	$a0, $a0, 32
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc19f_warnifnotvariableEPNS_7impl_IDE)
	jr	$t8
.LBB105_4:
	ld.d	$fp, $a0, 32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_useoccuroperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB105_38
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$s0, $a0, %pc_lo12(_ZL11phylumstack)
	ld.d	$a0, $s0, 48
	ld.d	$a1, $s0, 56
	bne	$a0, $a1, .LBB105_7
# %bb.6:
	ld.d	$a0, $s0, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB105_7:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s1, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 48
	bnez	$a0, .LBB105_17
# %bb.8:
	ld.d	$a0, $s0, 56
	beq	$a1, $a0, .LBB105_23
.LBB105_9:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit19
	ld.d	$a1, $a1, -8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_operatorinphylumEPNS_7impl_IDES1_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB105_24
	b	.LBB105_31
.LBB105_10:
	ld.d	$fp, $a0, 32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_useoccuroperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB105_38
# %bb.11:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$s1, $a0, %pc_lo12(_ZL11phylumstack)
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	bne	$a0, $a1, .LBB105_13
# %bb.12:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB105_13:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit24
	ld.d	$s0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB105_31
# %bb.14:
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB105_27
# %bb.15:
	addi.d	$a0, $a1, -8
	b	.LBB105_28
.LBB105_16:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB105_17:
	ld.d	$a0, $s0, 56
	beq	$a1, $a0, .LBB105_19
# %bb.18:
	addi.d	$a0, $a1, -8
	b	.LBB105_20
.LBB105_19:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s0, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s0, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s0, 64
	addi.d	$a0, $a0, 504
.LBB105_20:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s0, 48
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 64
	ld.d	$a1, $s0, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB105_22
# %bb.21:
	st.d	$a0, $a1, 0
	addi.d	$a1, $a1, 8
	st.d	$a1, $s0, 48
	ld.d	$a0, $s0, 56
	bne	$a1, $a0, .LBB105_9
	b	.LBB105_23
.LBB105_22:
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 48
	ld.d	$a0, $s0, 56
	bne	$a1, $a0, .LBB105_9
.LBB105_23:
	ld.d	$a0, $s0, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
	ld.d	$a1, $a1, -8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_operatorinphylumEPNS_7impl_IDES1_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB105_31
.LBB105_24:
	ld.d	$a0, $fp, 32
	ld.w	$a1, $fp, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 48
	ld.d	$a2, $s0, 56
	move	$s1, $a0
	bne	$a1, $a2, .LBB105_26
# %bb.25:
	ld.d	$a0, $s0, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB105_26:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit20
	ld.d	$a3, $a1, -8
	pcalau12i	$a0, %pc_hi20(.L.str.1411)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1411)
	pcalau12i	$a1, %pc_hi20(.L.str.1412)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1412)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc17Problem1S1ID1S1IDEPKcPNS_7impl_IDES1_S3_)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
	b	.LBB105_38
.LBB105_27:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s1, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s1, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s1, 64
	addi.d	$a0, $a0, 504
.LBB105_28:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit27
	st.d	$a0, $s1, 48
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s1, 64
	ld.d	$a1, $s1, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB105_30
# %bb.29:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s1, 48
	b	.LBB105_31
.LBB105_30:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL11phylumstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB105_31:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$s0, $a0, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a0, $s0, 48
	ld.d	$a1, $s0, 56
	bne	$a0, $a1, .LBB105_33
# %bb.32:
	ld.d	$a0, $s0, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB105_33:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a1, $a0, -8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc13ConsoperatorsEPNS_7impl_IDEPNS_14impl_operatorsE)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s0, 48
	ld.d	$a2, $s0, 56
	move	$fp, $a0
	st.d	$a0, $sp, 8
	beq	$a3, $a2, .LBB105_36
# %bb.34:
	ld.d	$a1, $s0, 64
	addi.d	$a0, $a3, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s0, 48
	beq	$a0, $a1, .LBB105_37
.LBB105_35:
	st.d	$fp, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s0, 48
	b	.LBB105_38
.LBB105_36:
	ori	$a1, $zero, 512
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s0, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s0, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s0, 64
	addi.d	$a0, $a0, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s0, 48
	bne	$a0, $a1, .LBB105_35
.LBB105_37:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$a0, $a0, %pc_lo12(_ZL16outmostoperators)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB105_38:
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end105:
	.size	_ZN2kc38impl_outmostpattern_OPOperatorWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end105-_ZN2kc38impl_outmostpattern_OPOperatorWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_pattern_PIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_pattern_PIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_pattern_PIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_pattern_PIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_pattern_PIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	bne	$a3, $a4, .LBB106_8
# %bb.1:
	pcalau12i	$a1, %pc_hi20(_ZL14argumentsstack)
	addi.d	$s1, $a1, %pc_lo12(_ZL14argumentsstack)
	ld.d	$a1, $s1, 48
	ld.d	$a2, $s1, 56
	bne	$a1, $a2, .LBB106_3
# %bb.2:
	ld.d	$a1, $s1, 72
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
.LBB106_3:                              # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s0, $a0, 8
	ld.d	$a0, $a1, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_hd_argumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1413)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1413)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB106_7
# %bb.4:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	bne	$a0, $a1, .LBB106_6
# %bb.5:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB106_6:                              # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit8
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_hd_argumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1414)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1414)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB106_9
.LBB106_7:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB106_8:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB106_9:
	ld.d	$a0, $s0, 16
	ld.w	$a1, $s0, 8
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1415)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1415)
	pcaddu18i	$ra, %call36(_ZN2kc9Problem1SEPKc)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.Lfunc_end106:
	.size	_ZN2kc24impl_pattern_PIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end106-_ZN2kc24impl_pattern_PIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_pattern_PStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_pattern_PStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_pattern_PStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_pattern_PStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_pattern_PStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	bne	$a3, $a4, .LBB107_8
# %bb.1:
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$s0, $a0, %pc_lo12(_ZL14argumentsstack)
	ld.d	$a0, $s0, 48
	ld.d	$a1, $s0, 56
	bne	$a0, $a1, .LBB107_3
# %bb.2:
	ld.d	$a0, $s0, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB107_3:                              # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_hd_argumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1416)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1416)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB107_7
# %bb.4:
	ld.d	$a0, $s0, 48
	ld.d	$a1, $s0, 56
	bne	$a0, $a1, .LBB107_6
# %bb.5:
	ld.d	$a0, $s0, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB107_6:                              # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit6
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_hd_argumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1417)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1417)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB107_9
.LBB107_7:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB107_8:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB107_9:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	beq	$a0, $a2, .LBB107_11
# %bb.10:                               # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	addi.d	$a1, $a0, -8
	b	.LBB107_12
.LBB107_11:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 504
	addi.d	$a0, $a0, 512
.LBB107_12:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit7
	ld.d	$a1, $a1, 0
	ld.d	$a2, $a0, -8
	ld.d	$a0, $a1, 32
	ld.w	$a1, $a2, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1418)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1418)
	pcaddu18i	$ra, %call36(_ZN2kc9Problem1SEPKc)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.Lfunc_end107:
	.size	_ZN2kc27impl_pattern_PStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end107-_ZN2kc27impl_pattern_PStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_pattern_PWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_pattern_PWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_pattern_PWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_pattern_PWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_pattern_PWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end108:
	.size	_ZN2kc22impl_pattern_PWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end108-_ZN2kc22impl_pattern_PWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc29impl_pattern_PNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc29impl_pattern_PNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc29impl_pattern_PNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc29impl_pattern_PNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc29impl_pattern_PNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	bne	$a3, $a4, .LBB109_6
# %bb.1:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a1
	move	$fp, $a2
	pcalau12i	$a1, %pc_hi20(_ZL14variablesstack)
	addi.d	$s4, $a1, %pc_lo12(_ZL14variablesstack)
	ld.d	$a1, $s4, 48
	ld.d	$a2, $s4, 56
	ld.d	$s1, $a0, 8
	bne	$a1, $a2, .LBB109_3
# %bb.2:
	ld.d	$a1, $s4, 72
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
.LBB109_3:                              # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s2, $a0, 16
	ld.d	$a1, $a1, -8
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s4, 48
	ld.d	$a2, $s4, 56
	move	$s3, $a0
	st.d	$a0, $sp, 0
	beq	$a3, $a2, .LBB109_7
# %bb.4:
	ld.d	$a1, $s4, 64
	addi.d	$a0, $a3, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s4, 48
	beq	$a0, $a1, .LBB109_8
.LBB109_5:
	st.d	$s3, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s4, 48
	b	.LBB109_9
.LBB109_6:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.LBB109_7:
	ori	$a1, $zero, 512
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	ld.d	$a2, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $s4, 72
	st.d	$a2, $s4, 56
	addi.d	$a1, $a2, 512
	st.d	$a1, $s4, 64
	addi.d	$a0, $a2, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s4, 48
	bne	$a0, $a1, .LBB109_5
.LBB109_8:
	pcalau12i	$a0, %pc_hi20(_ZL14variablesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14variablesstack)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB109_9:                              # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL14argumentsstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB109_11
# %bb.10:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB109_11:                             # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_hd_argumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL8cl_scope)
	ld.w	$a1, $a1, %pc_lo12(_ZL8cl_scope)
	move	$s3, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(_ZN2kc9mkintegerEi)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc13v_extendoccurEPNS_7impl_IDEPNS_11impl_IDtypeE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end109:
	.size	_ZN2kc29impl_pattern_PNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end109-_ZN2kc29impl_pattern_PNonLeafVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_pattern_POperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_pattern_POperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_pattern_POperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_pattern_POperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_pattern_POperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	bne	$a3, $a4, .LBB110_7
# %bb.1:
	move	$s4, $a1
	move	$s3, $a2
	ld.d	$fp, $a0, 8
	ld.d	$s0, $a0, 16
	st.d	$fp, $sp, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_useoccuroperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB110_32
# %bb.2:
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$s1, $a0, %pc_lo12(_ZL14argumentsstack)
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	beq	$a0, $a1, .LBB110_8
# %bb.3:                                # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB110_9
.LBB110_4:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB110_6
# %bb.5:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB110_6:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$fp, $a0, -8
	ld.d	$a0, $fp, 32
	ld.w	$a1, $fp, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1419)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1419)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1IDEPKcPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	b	.LBB110_17
.LBB110_7:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.LBB110_8:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB110_4
.LBB110_9:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	bne	$a0, $a1, .LBB110_11
# %bb.10:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB110_11:                             # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit12
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_hd_argumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc18f_operatorinphylumEPNS_7impl_IDES1_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB110_14
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc21f_argumentsofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 96
	jirl	$ra, $a1, 0
	ld.d	$a2, $s1, 64
	ld.d	$a1, $s1, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB110_18
# %bb.13:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s1, 48
	b	.LBB110_19
.LBB110_14:
	ld.d	$a0, $fp, 32
	ld.w	$a1, $fp, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 48
	ld.d	$a2, $s1, 56
	move	$s0, $a0
	bne	$a1, $a2, .LBB110_16
# %bb.15:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB110_16:                             # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit17
	ld.d	$a0, $a1, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_hd_argumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	move	$a3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1420)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1420)
	pcalau12i	$a1, %pc_hi20(.L.str.1421)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1421)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc17Problem1S1ID1S1IDEPKcPNS_7impl_IDES1_S3_)
	jirl	$ra, $ra, 0
.LBB110_17:                             # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit17
	move	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.LBB110_18:
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14argumentsstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB110_19:                             # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$s2, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a1, $s2, 64
	ld.d	$a0, $s2, 48
	addi.d	$a3, $a1, -8
	beq	$a0, $a3, .LBB110_21
# %bb.20:
	move	$a2, $s3
	move	$a1, $s4
	st.d	$fp, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s2, 48
	b	.LBB110_22
.LBB110_21:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL13operatorstack)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	move	$a1, $s4
	move	$a2, $s3
.LBB110_22:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 48
	ld.d	$a1, $s1, 56
	beq	$a0, $a1, .LBB110_27
# %bb.23:                               # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit13
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB110_28
.LBB110_24:
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB110_29
.LBB110_25:
	addi.d	$a1, $a1, -8
	ld.d	$a2, $s2, 48
	ld.d	$a0, $s2, 56
	st.d	$a1, $s1, 48
	beq	$a2, $a0, .LBB110_30
.LBB110_26:
	addi.d	$a0, $a2, -8
	b	.LBB110_31
.LBB110_27:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB110_24
.LBB110_28:
	ld.d	$a1, $sp, 16
	ld.d	$a0, $a1, 32
	ld.w	$a1, $a1, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1410)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1410)
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1IDEPKcPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	bne	$a1, $a0, .LBB110_25
.LBB110_29:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $s1, 72
	st.d	$a1, $s1, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $s1, 64
	addi.d	$a1, $a1, 504
	ld.d	$a2, $s2, 48
	ld.d	$a0, $s2, 56
	st.d	$a1, $s1, 48
	bne	$a2, $a0, .LBB110_26
.LBB110_30:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $s2, 72
	st.d	$a1, $s2, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $s2, 64
	addi.d	$a0, $a1, 504
.LBB110_31:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s2, 48
.LBB110_32:
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end110:
	.size	_ZN2kc22impl_pattern_POperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end110-_ZN2kc22impl_pattern_POperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_pattern_PVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_pattern_PVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_pattern_PVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_pattern_PVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_pattern_PVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	bne	$a3, $a4, .LBB111_6
# %bb.1:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	pcalau12i	$a1, %pc_hi20(_ZL14variablesstack)
	addi.d	$s1, $a1, %pc_lo12(_ZL14variablesstack)
	ld.d	$a1, $s1, 48
	ld.d	$a2, $s1, 56
	ld.d	$fp, $a0, 8
	bne	$a1, $a2, .LBB111_3
# %bb.2:
	ld.d	$a0, $s1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB111_3:                              # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a1, $a1, -8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc13ConsvariablesEPNS_7impl_IDEPNS_14impl_variablesE)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s1, 48
	ld.d	$a2, $s1, 56
	move	$s0, $a0
	st.d	$a0, $sp, 8
	beq	$a3, $a2, .LBB111_7
# %bb.4:
	ld.d	$a1, $s1, 64
	addi.d	$a0, $a3, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s1, 48
	beq	$a0, $a1, .LBB111_8
.LBB111_5:
	st.d	$s0, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s1, 48
	b	.LBB111_9
.LBB111_6:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.LBB111_7:
	ori	$a1, $zero, 512
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	ld.d	$a2, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $s1, 72
	st.d	$a2, $s1, 56
	addi.d	$a1, $a2, 512
	st.d	$a1, $s1, 64
	addi.d	$a0, $a2, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s1, 48
	bne	$a0, $a1, .LBB111_5
.LBB111_8:
	pcalau12i	$a0, %pc_hi20(_ZL14variablesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14variablesstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB111_9:                              # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL14argumentsstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB111_11
# %bb.10:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB111_11:                             # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_hd_argumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL8cl_scope)
	ld.w	$a1, $a1, %pc_lo12(_ZL8cl_scope)
	move	$s0, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(_ZN2kc9mkintegerEi)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc17ITPatternVariableEPNS_7impl_IDEPNS_17impl_integer__IntE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc13v_extendoccurEPNS_7impl_IDEPNS_11impl_IDtypeE)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end111:
	.size	_ZN2kc22impl_pattern_PVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end111-_ZN2kc22impl_pattern_PVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13impl_patterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc13impl_patterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc13impl_patterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc13impl_patterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc13impl_patterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB112_2
.LBB112_1:                              # %.loopexit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB112_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 5
	bne	$a0, $a1, .LBB112_8
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$s2, $a0, %pc_lo12(_ZL14argumentsstack)
	ld.d	$a0, $s2, 48
	ld.d	$a1, $s2, 56
	beq	$a0, $a1, .LBB112_10
# %bb.4:                                # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB112_11
.LBB112_5:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB112_7
# %bb.6:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB112_7:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$fp, $a0, -8
	ld.d	$a0, $fp, 32
	ld.w	$a1, $fp, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1419)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1419)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1IDEPKcPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
	.p2align	4, , 16
.LBB112_8:                              # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB112_1
# %bb.9:                                # %.lr.ph
                                        #   in Loop: Header=BB112_8 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB112_8
.LBB112_10:
	ld.d	$a0, $s2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc14f_NilargumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB112_5
.LBB112_11:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s2, 48
	ld.d	$a0, $s2, 56
	beq	$a1, $a0, .LBB112_13
# %bb.12:
	ld.d	$fp, $a1, -8
	addi.d	$a0, $a1, -8
	b	.LBB112_14
.LBB112_13:
	ld.d	$a1, $s2, 72
	ld.d	$a1, $a1, -8
	ld.d	$fp, $a1, 504
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	ld.d	$a1, $a0, -8
	addi.d	$a0, $a0, -8
	st.d	$a0, $s2, 72
	st.d	$a1, $s2, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $s2, 64
	addi.d	$a0, $a1, 504
.LBB112_14:                             # %_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s2, 48
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc14f_tl_argumentsEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s2, 64
	ld.d	$a1, $s2, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB112_16
# %bb.15:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s2, 48
	b	.LBB112_1
.LBB112_16:
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14argumentsstack)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB112_1
.Lfunc_end112:
	.size	_ZN2kc13impl_patterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end112-_ZN2kc13impl_patterns10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc13impl_patterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc13impl_patterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc13impl_patterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc13impl_patterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc13impl_patterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end113:
	.size	_ZN2kc13impl_patterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end113-_ZN2kc13impl_patterns14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc21impl_term_TIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_term_TIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_term_TIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_term_TIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_term_TIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 24
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end114:
	.size	_ZN2kc21impl_term_TIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end114-_ZN2kc21impl_term_TIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_term_TStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_term_TStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_term_TStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_term_TStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_term_TStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a1
	ld.d	$a1, $a1, 0
	ld.d	$s0, $a0, 24
	ld.d	$a3, $a1, 0
	move	$s1, $a2
	pcalau12i	$a0, %pc_hi20(.L.str.1234)
	addi.d	$s2, $a0, %pc_lo12(.L.str.1234)
	move	$a0, $fp
	move	$a1, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a1, $s2
	move	$a2, $s1
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end115:
	.size	_ZN2kc24impl_term_TStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end115-_ZN2kc24impl_term_TStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_term_TCTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc16impl_term_TCTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc16impl_term_TCTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc16impl_term_TCTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc16impl_term_TCTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 24
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end116:
	.size	_ZN2kc16impl_term_TCTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end116-_ZN2kc16impl_term_TCTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_term_TMemberVarDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_term_TMemberVarDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_term_TMemberVarDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_term_TMemberVarDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_term_TMemberVarDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a0, 24
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 32
	ld.d	$a4, $a4, 72
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $a3
	jirl	$ra, $a4, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1422)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1422)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end117:
	.size	_ZN2kc23impl_term_TMemberVarDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end117-_ZN2kc23impl_term_TMemberVarDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_term_TMemberVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc20impl_term_TMemberVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc20impl_term_TMemberVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc20impl_term_TMemberVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc20impl_term_TMemberVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a0, 24
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 32
	ld.d	$a4, $a4, 72
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $a3
	jirl	$ra, $a4, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end118:
	.size	_ZN2kc20impl_term_TMemberVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end118-_ZN2kc20impl_term_TMemberVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_term_TMethodDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc20impl_term_TMethodDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc20impl_term_TMethodDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc20impl_term_TMethodDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc20impl_term_TMethodDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.d	$a3, $a0, 24
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 32
	ld.d	$s0, $a0, 40
	ld.d	$a4, $a4, 72
	move	$s1, $a2
	move	$s2, $a1
	move	$a0, $a3
	jirl	$ra, $a4, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1422)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1422)
	move	$a0, $s2
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s2
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s2
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s2
	move	$a2, $s1
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end119:
	.size	_ZN2kc20impl_term_TMethodDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end119-_ZN2kc20impl_term_TMethodDot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc17impl_term_TMethod10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_term_TMethod10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_term_TMethod10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_term_TMethod10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_term_TMethod10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.d	$a3, $a0, 24
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 32
	ld.d	$s0, $a0, 40
	ld.d	$a4, $a4, 72
	move	$s1, $a2
	move	$s2, $a1
	move	$a0, $a3
	jirl	$ra, $a4, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s2
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s2
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s2
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s2
	move	$a2, $s1
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end120:
	.size	_ZN2kc17impl_term_TMethod10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end120-_ZN2kc17impl_term_TMethod10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_term_TOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_term_TOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_term_TOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_term_TOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_term_TOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a0, 24
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 32
	ld.d	$a4, $a4, 72
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $a3
	jirl	$ra, $a4, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s1
	move	$a2, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end121:
	.size	_ZN2kc19impl_term_TOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end121-_ZN2kc19impl_term_TOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_term_TVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_term_TVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_term_TVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_term_TVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_term_TVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 24
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end122:
	.size	_ZN2kc19impl_term_TVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end122-_ZN2kc19impl_term_TVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_terms10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc10impl_terms10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc10impl_terms10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc10impl_terms10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc10impl_terms10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s2
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB123_2
# %bb.1:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB123_2:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s1, $s2, 8
	ori	$a1, $zero, 102
	beq	$a0, $a1, .LBB123_4
# %bb.3:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB123_4:                              # %.sink.split
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end123:
	.size	_ZN2kc10impl_terms10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end123-_ZN2kc10impl_terms10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_terms14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc10impl_terms14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc10impl_terms14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc10impl_terms14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc10impl_terms14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end124:
	.size	_ZN2kc10impl_terms14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end124-_ZN2kc10impl_terms14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc12impl_fnfiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc12impl_fnfiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc12impl_fnfiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc12impl_fnfiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc12impl_fnfiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB125_2
# %bb.1:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB125_2:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1423)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1423)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end125:
	.size	_ZN2kc12impl_fnfiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end125-_ZN2kc12impl_fnfiles10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc12impl_fnfiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc12impl_fnfiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc12impl_fnfiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc12impl_fnfiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc12impl_fnfiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end126:
	.size	_ZN2kc12impl_fnfiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end126-_ZN2kc12impl_fnfiles14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc18impl_fnfile_FnFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_fnfile_FnFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_fnfile_FnFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_fnfile_FnFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_fnfile_FnFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end127:
	.size	_ZN2kc18impl_fnfile_FnFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end127-_ZN2kc18impl_fnfile_FnFile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_fndeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_fndeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_fndeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_fndeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_fndeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	st.d	$s7, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	ld.w	$a1, $fp, 0
	beqz	$a0, .LBB128_6
# %bb.1:
	ori	$a0, $zero, 36
	beq	$a1, $a0, .LBB128_10
# %bb.2:
	ori	$a0, $zero, 37
	beq	$a1, $a0, .LBB128_10
# %bb.3:
	ori	$a0, $zero, 109
	bne	$a1, $a0, .LBB128_90
# %bb.4:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1445)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1445)
.LBB128_5:
	move	$a0, $s0
	b	.LBB128_83
.LBB128_6:
	addi.d	$a0, $a1, -5
	ori	$a1, $zero, 105
	bltu	$a1, $a0, .LBB128_89
# %bb.7:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI128_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI128_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB128_8:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
.LBB128_9:
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	b	.LBB128_82
.LBB128_10:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcaddu18i	$ra, %call36(_ZN2kc12NilargumentsEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	pcaddu18i	$ra, %call36(_ZN2kc17NilfndeclarationsEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	pcaddu18i	$ra, %call36(_ZN2kc21Nilac_identifier_listEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_19gl_identsE)
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	b	.LBB128_90
.LBB128_11:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 109
	bne	$a0, $a1, .LBB128_81
# %bb.12:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 254
	bne	$a0, $a1, .LBB128_81
# %bb.13:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 259
	bne	$a0, $a1, .LBB128_81
# %bb.14:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 255
	bne	$a0, $a1, .LBB128_81
# %bb.15:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 114
	bne	$a0, $a1, .LBB128_81
# %bb.16:
	ld.d	$s5, $s1, 8
	ld.d	$a0, $s5, 48
	ld.d	$a1, $a0, 24
	ld.d	$a0, $s1, 16
	ld.d	$a2, $a1, 16
	ld.d	$a3, $a0, 0
	ld.d	$s1, $a2, 8
	ld.d	$s2, $a1, 24
	ld.d	$a3, $a3, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.333)
	addi.d	$a1, $a0, %pc_lo12(.L.str.333)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_112gl_isnotlistE)
	ld.bu	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_112gl_isnotlistE)
	beqz	$a0, .LBB128_18
# %bb.17:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_18:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1424)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1424)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s6, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc24view_gen_fnarg_and_declsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc24view_gen_fnarg_and_declsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB128_21
# %bb.19:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc11f_no_paramsEPNS_27impl_ac_parameter_type_listE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB128_21
# %bb.20:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_21:
	ld.d	$a0, $s5, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc14view_gen_fnk_cE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc14view_gen_fnk_cE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1425)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1425)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc22view_gen_fnarg_assertsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc22view_gen_fnarg_assertsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1426)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1426)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_112gl_isnotlistE)
	beqz	$a0, .LBB128_23
# %bb.22:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_23:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc21view_gen_argseqnr_recE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc21view_gen_argseqnr_recE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.w	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB128_26
# %bb.24:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc11f_no_paramsEPNS_27impl_ac_parameter_type_listE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB128_26
# %bb.25:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_26:
	ld.d	$a0, $s5, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_gen_fnkargsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_gen_fnkargsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1427)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1427)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1179)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1179)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1428)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1428)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_16gl_stoE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_16gl_stoE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1429)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1429)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a1, $s0, 0
	ld.bu	$a0, $a0, 72
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.830)
	addi.d	$a1, $a1, %pc_lo12(.L.str.830)
	masknez	$a1, $a1, $a0
	pcalau12i	$a2, %pc_hi20(.L.str.1430)
	addi.d	$a2, $a2, %pc_lo12(.L.str.1430)
	maskeqz	$a0, $a2, $a0
	or	$a1, $a0, $a1
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1431)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1431)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1432)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1432)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_16gl_ccoE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_16gl_ccoE)
	pcaddu18i	$ra, %call36(_ZN2kc25f_something_to_initializeEPNS_17impl_Ccode_optionE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB128_28
# %bb.27:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1433)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1433)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1434)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1434)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_28:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1435)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1435)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_112gl_isnotlistE)
	beqz	$a0, .LBB128_30
# %bb.29:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_30:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1436)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1436)
	b	.LBB128_5
.LBB128_31:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 110
	bne	$a0, $s2, .LBB128_84
# %bb.32:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 254
	bne	$a0, $a1, .LBB128_84
# %bb.33:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 260
	bne	$a0, $a1, .LBB128_84
# %bb.34:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 107
	bne	$a0, $a1, .LBB128_84
# %bb.35:
	ld.d	$a1, $s1, 8
	ld.d	$a0, $a1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a2, $a0, 0
	ld.d	$s1, $a1, 56
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	b	.LBB128_5
.LBB128_36:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 109
	bne	$a0, $a1, .LBB128_81
# %bb.37:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 254
	bne	$a0, $a1, .LBB128_81
# %bb.38:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 259
	bne	$a0, $a1, .LBB128_81
# %bb.39:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 255
	bne	$a0, $a1, .LBB128_81
# %bb.40:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 114
	bne	$a0, $a1, .LBB128_81
# %bb.41:
	ld.d	$s5, $s1, 8
	ld.d	$a0, $s5, 48
	ld.d	$a1, $a0, 24
	ld.d	$a0, $s1, 16
	ld.d	$a2, $a1, 16
	ld.d	$a3, $a0, 0
	ld.d	$s1, $a2, 8
	ld.d	$s2, $a1, 24
	ld.d	$a3, $a3, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.333)
	addi.d	$a1, $a0, %pc_lo12(.L.str.333)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_112gl_isnotlistE)
	ld.bu	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_112gl_isnotlistE)
	beqz	$a0, .LBB128_43
# %bb.42:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_43:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1424)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1424)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s6, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc24view_gen_fnarg_and_declsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc24view_gen_fnarg_and_declsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	blez	$a0, .LBB128_46
# %bb.44:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc11f_no_paramsEPNS_27impl_ac_parameter_type_listE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB128_46
# %bb.45:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_46:
	ld.d	$a0, $s5, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc14view_gen_fnk_cE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc14view_gen_fnk_cE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1425)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1425)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc22view_gen_fnarg_assertsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc22view_gen_fnarg_assertsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1437)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1437)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_112gl_isnotlistE)
	beqz	$a0, .LBB128_48
# %bb.47:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_48:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc21view_gen_argseqnr_recE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc21view_gen_argseqnr_recE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.w	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB128_51
# %bb.49:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc11f_no_paramsEPNS_27impl_ac_parameter_type_listE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB128_51
# %bb.50:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_51:
	ld.d	$a0, $s5, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_gen_fnkargsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_gen_fnkargsE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1427)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1427)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1438)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1438)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1439)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1439)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_16gl_ccoE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_16gl_ccoE)
	pcaddu18i	$ra, %call36(_ZN2kc25f_something_to_initializeEPNS_17impl_Ccode_optionE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB128_53
# %bb.52:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1440)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1440)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1441)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1441)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_53:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1442)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1442)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_112gl_isnotlistE)
	beqz	$a0, .LBB128_55
# %bb.54:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_55:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1443)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1443)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1444)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1444)
	b	.LBB128_5
.LBB128_56:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 110
	bne	$a0, $a1, .LBB128_81
# %bb.57:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 236
	bne	$a0, $a1, .LBB128_81
# %bb.58:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 238
	bne	$a0, $a1, .LBB128_81
# %bb.59:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 246
	bne	$a0, $a1, .LBB128_81
# %bb.60:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 254
	bne	$a0, $a1, .LBB128_81
# %bb.61:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 260
	bne	$a0, $a1, .LBB128_81
# %bb.62:
	ld.d	$s2, $s1, 8
	ld.d	$a0, $s2, 40
	ld.d	$a1, $a0, 8
	ld.d	$a2, $s2, 48
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a1, 8
	ld.d	$a2, $a2, 24
	ld.d	$a3, $a0, 0
	ld.d	$s3, $a1, 8
	ld.d	$s1, $a2, 16
	ld.d	$a3, $a3, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 32
	beqz	$a0, .LBB128_90
# %bb.63:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a2, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$fp, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $fp, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	addi.d	$a2, $a2, 1
	st.w	$a2, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc13ConsargumentsEPNS_7impl_IDEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	pcalau12i	$s0, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a1, $s0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	st.d	$a0, $fp, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE)
	jirl	$ra, $ra, 0
	pcalau12i	$fp, %pc_hi20(_ZN12_GLOBAL__N_19gl_identsE)
	ld.d	$a1, $fp, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	st.d	$a0, $s0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	move	$a0, $s1
	b	.LBB128_80
.LBB128_64:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 109
	bne	$a0, $a1, .LBB128_81
# %bb.65:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 254
	bne	$a0, $a1, .LBB128_81
# %bb.66:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 259
	bne	$a0, $a1, .LBB128_81
# %bb.67:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 114
	bne	$a0, $a1, .LBB128_81
# %bb.68:
	ld.d	$s3, $s1, 8
	ld.d	$a1, $s3, 48
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a1, 24
	ld.d	$a2, $a0, 0
	ld.d	$s2, $a1, 16
	ld.d	$s1, $a1, 24
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1080)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1080)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1277)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1277)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1278)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1278)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB128_71
# %bb.69:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc11f_no_paramsEPNS_27impl_ac_parameter_type_listE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB128_71
# %bb.70:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB128_71:
	ld.d	$a0, $s3, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc14view_gen_fnk_hE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc14view_gen_fnk_hE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	b	.LBB128_5
.LBB128_72:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 110
	bne	$a0, $a1, .LBB128_81
# %bb.73:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 236
	bne	$a0, $a1, .LBB128_81
# %bb.74:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 238
	bne	$a0, $a1, .LBB128_81
# %bb.75:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 246
	bne	$a0, $a1, .LBB128_81
# %bb.76:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 254
	bne	$a0, $a1, .LBB128_81
# %bb.77:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 260
	bne	$a0, $a1, .LBB128_81
# %bb.78:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 64
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 113
	bne	$a0, $a1, .LBB128_81
# %bb.79:
	ld.d	$s2, $s1, 8
	ld.d	$a0, $s2, 40
	ld.d	$a1, $a0, 8
	ld.d	$a2, $s2, 48
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a1, 8
	ld.d	$a2, $a2, 24
	ld.d	$a3, $a0, 0
	ld.d	$s1, $a1, 8
	ld.d	$s3, $a2, 16
	ld.d	$a3, $a3, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a2, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcalau12i	$fp, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $fp, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	addi.d	$a2, $a2, 1
	st.w	$a2, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc13ConsargumentsEPNS_7impl_IDEPNS_14impl_argumentsE)
	jirl	$ra, $ra, 0
	pcalau12i	$s0, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	ld.d	$a1, $s0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	st.d	$a0, $fp, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc18ConsfndeclarationsEPNS_18impl_fndeclarationEPNS_19impl_fndeclarationsE)
	jirl	$ra, $ra, 0
	pcalau12i	$fp, %pc_hi20(_ZN12_GLOBAL__N_19gl_identsE)
	ld.d	$a1, $fp, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	st.d	$a0, $s0, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	move	$a0, $s3
.LBB128_80:                             # %_ZN2kc19impl_fndeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	pcaddu18i	$ra, %call36(_ZN2kc22Consac_identifier_listEPNS_7impl_IDEPNS_23impl_ac_identifier_listE)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
	b	.LBB128_90
.LBB128_81:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
.LBB128_82:
	move	$a1, $s0
.LBB128_83:
	move	$a2, $fp
	ld.d	$s7, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.LBB128_84:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB128_89
# %bb.85:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 254
	bne	$a0, $a1, .LBB128_89
# %bb.86:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 260
	bne	$a0, $a1, .LBB128_89
# %bb.87:
	ld.d	$a1, $s1, 8
	ld.d	$a0, $a1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a2, $a0, 0
	ld.d	$s2, $a1, 56
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	b	.LBB128_9
	.p2align	4, , 16
.LBB128_88:                             # %.lr.ph
                                        #   in Loop: Header=BB128_89 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB128_89:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB128_88
.LBB128_90:                             # %_ZN2kc19impl_fndeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$s7, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end128:
	.size	_ZN2kc19impl_fndeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end128-_ZN2kc19impl_fndeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI128_0:
	.word	.LBB128_8-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_8-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_56-.LJTI128_0
	.word	.LBB128_72-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_64-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_36-.LJTI128_0
	.word	.LBB128_11-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_31-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_89-.LJTI128_0
	.word	.LBB128_8-.LJTI128_0
	.word	.LBB128_8-.LJTI128_0
	.word	.LBB128_8-.LJTI128_0
                                        # -- End function
	.text
	.globl	_ZN2kc19impl_fndeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_fndeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_fndeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_fndeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_fndeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 36
	beq	$a0, $a3, .LBB129_4
# %bb.1:
	ori	$a3, $zero, 37
	beq	$a0, $a3, .LBB129_4
# %bb.2:
	ori	$a3, $zero, 109
	bne	$a0, $a3, .LBB129_5
# %bb.3:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1445)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1445)
	move	$a0, $a1
	move	$a1, $a3
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a4
.LBB129_4:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	pcaddu18i	$ra, %call36(_ZN2kc12NilargumentsEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	pcaddu18i	$ra, %call36(_ZN2kc17NilfndeclarationsEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_110gl_membersE)
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_110gl_membersE)
	pcaddu18i	$ra, %call36(_ZN2kc21Nilac_identifier_listEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_19gl_identsE)
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_19gl_identsE)
.LBB129_5:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end129:
	.size	_ZN2kc19impl_fndeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end129-_ZN2kc19impl_fndeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc38impl_fndeclaration_AcMemberDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc38impl_fndeclaration_AcMemberDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc38impl_fndeclaration_AcMemberDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc38impl_fndeclaration_AcMemberDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc38impl_fndeclaration_AcMemberDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	st.d	$s6, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	move	$fp, $a0
	beq	$a3, $a4, .LBB130_9
# %bb.1:
	move	$s0, $a1
	ori	$a0, $zero, 110
	beq	$a3, $a0, .LBB130_4
# %bb.2:
	ori	$a0, $zero, 141
	bne	$a3, $a0, .LBB130_25
# %bb.3:
	ld.d	$a0, $fp, 40
	ld.d	$a1, $a0, 0
	ld.d	$fp, $fp, 48
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$s1, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	jr	$a3
.LBB130_4:
	move	$s5, $a2
	ld.d	$a0, $fp, 56
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 292
	bne	$a0, $a1, .LBB130_19
# %bb.5:
	ld.d	$a0, $fp, 64
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB130_19
# %bb.6:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.d	$s2, $fp, 40
	ld.bu	$a0, $s4, 114
	ld.d	$s1, $fp, 48
	beqz	$a0, .LBB130_8
# %bb.7:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.w	$a2, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
.LBB130_8:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	b	.LBB130_24
.LBB130_9:
	ld.d	$a0, $fp, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s0, $zero, 254
	bne	$a0, $s0, .LBB130_14
# %bb.10:
	ld.d	$a0, $fp, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 260
	bne	$a0, $a1, .LBB130_14
# %bb.11:
	ld.d	$a0, $fp, 64
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB130_14
# %bb.12:
	ld.b	$a0, $fp, 32
	andi	$a0, $a0, 1
	beqz	$a0, .LBB130_14
# %bb.13:
	ld.d	$a0, $fp, 48
	ld.d	$a0, $a0, 24
	ld.d	$s0, $a0, 8
	ld.d	$s1, $a0, 16
	ld.d	$a0, $fp, 24
	ld.w	$a1, $fp, 16
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1447)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1447)
	pcalau12i	$a1, %pc_hi20(.L.str.1448)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1448)
	b	.LBB130_34
.LBB130_14:
	ld.d	$a0, $fp, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s0, .LBB130_25
# %bb.15:
	ld.d	$a0, $fp, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 260
	bne	$a0, $a1, .LBB130_25
# %bb.16:
	ld.d	$a0, $fp, 48
	ld.d	$a0, $a0, 24
	ld.d	$s0, $a0, 8
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 16
	ld.d	$a1, $a1, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB130_27
# %bb.17:
	ld.d	$a0, $s0, 40
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 172
	bne	$a0, $a1, .LBB130_28
# %bb.18:
	ld.d	$a0, $fp, 24
	ld.w	$a1, $fp, 16
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1447)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1447)
	pcalau12i	$a1, %pc_hi20(.L.str.1449)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1449)
	move	$a1, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2kc17Problem1S1ID1S1IDEPKcPNS_7impl_IDES1_S3_)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
	b	.LBB130_28
.LBB130_19:
	ld.d	$a0, $fp, 56
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 291
	bne	$a0, $a1, .LBB130_26
# %bb.20:
	ld.d	$a0, $fp, 64
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB130_26
# %bb.21:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s6, $a0, %got_pc_lo12(g_options)
	ld.d	$a0, $fp, 56
	ld.d	$s3, $fp, 40
	ld.d	$s2, $fp, 48
	ld.bu	$a1, $s6, 114
	ld.d	$s1, $a0, 8
	beqz	$a1, .LBB130_23
# %bb.22:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.w	$a2, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s6, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
.LBB130_23:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1446)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1446)
.LBB130_24:
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
.LBB130_25:
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB130_26:
	ld.d	$a0, $fp, 56
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	jr	$a1
.LBB130_27:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 3
	ori	$a1, $a1, 1307
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
.LBB130_28:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB130_32
# %bb.29:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc9f_strofIDEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1253)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1253)
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB130_32
# %bb.30:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc9f_strofIDEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1450)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1450)
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB130_32
# %bb.31:
	ld.d	$a0, $fp, 24
	ld.w	$a1, $fp, 16
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1447)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1447)
	pcalau12i	$a1, %pc_hi20(.L.str.1451)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1451)
	move	$a1, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2kc17Problem1S1ID1S1IDEPKcPNS_7impl_IDES1_S3_)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
.LBB130_32:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc19f_listelementphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB130_25
# %bb.33:
	ld.d	$a0, $fp, 24
	ld.w	$a1, $fp, 16
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1447)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1447)
	pcalau12i	$a1, %pc_hi20(.L.str.1452)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1452)
.LBB130_34:
	move	$a1, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2kc17Problem1S1ID1S1IDEPKcPNS_7impl_IDES1_S3_)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.Lfunc_end130:
	.size	_ZN2kc38impl_fndeclaration_AcMemberDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end130-_ZN2kc38impl_fndeclaration_AcMemberDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc34impl_fndeclaration_FnAcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc34impl_fndeclaration_FnAcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc34impl_fndeclaration_FnAcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc34impl_fndeclaration_FnAcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc34impl_fndeclaration_FnAcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -336
	.cfi_def_cfa_offset 336
	st.d	$ra, $sp, 328                   # 8-byte Folded Spill
	st.d	$fp, $sp, 320                   # 8-byte Folded Spill
	st.d	$s0, $sp, 312                   # 8-byte Folded Spill
	st.d	$s1, $sp, 304                   # 8-byte Folded Spill
	st.d	$s2, $sp, 296                   # 8-byte Folded Spill
	st.d	$s3, $sp, 288                   # 8-byte Folded Spill
	st.d	$s4, $sp, 280                   # 8-byte Folded Spill
	st.d	$s5, $sp, 272                   # 8-byte Folded Spill
	st.d	$s6, $sp, 264                   # 8-byte Folded Spill
	st.d	$s7, $sp, 256                   # 8-byte Folded Spill
	st.d	$s8, $sp, 248                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	addi.d	$a3, $a2, -108
	ori	$a4, $zero, 33
	move	$s0, $a1
	move	$s1, $a0
	bltu	$a4, $a3, .LBB131_11
# %bb.1:
	slli.d	$a0, $a3, 2
	pcalau12i	$a1, %pc_hi20(.LJTI131_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI131_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB131_2:
	ld.d	$a0, $s1, 80
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB131_6
# %bb.3:
	ld.d	$a0, $s1, 80
	ld.d	$a0, $a0, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 6
	bne	$a0, $a1, .LBB131_6
# %bb.4:
	ld.d	$a0, $s1, 80
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 8
	pcalau12i	$a1, %pc_hi20(.L.str.1458)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1458)
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB131_6
# %bb.5:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 111
	beq	$a0, $a1, .LBB131_128
.LBB131_6:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 111
	bne	$a0, $a1, .LBB131_101
# %bb.7:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 48
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s2
.LBB131_8:
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1278)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1278)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
.LBB131_9:
	jirl	$ra, $a3, 0
.LBB131_10:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	move	$a0, $s0
	b	.LBB131_109
.LBB131_11:
	ori	$a0, $zero, 5
	beq	$a2, $a0, .LBB131_70
# %bb.12:
	ori	$a0, $zero, 18
	beq	$a2, $a0, .LBB131_99
.LBB131_13:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 80
	b	.LBB131_107
.LBB131_14:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 254
	bne	$a0, $s2, .LBB131_35
# %bb.15:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 259
	bne	$a0, $a1, .LBB131_35
# %bb.16:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 255
	bne	$a0, $a1, .LBB131_35
# %bb.17:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s6, $zero, 114
	bne	$a0, $s6, .LBB131_35
# %bb.18:
	ld.d	$s4, $s1, 48
	ld.d	$a1, $s4, 24
	ld.d	$a0, $s1, 88
	ld.d	$a2, $a1, 16
	ld.d	$a3, $a0, 0
	ld.d	$s5, $s1, 40
	ld.d	$s2, $a2, 8
	ld.d	$s1, $a1, 24
	ld.d	$a1, $a3, 0
	jirl	$ra, $a1, 0
	ld.d	$a1, $s5, 0
	ld.d	$a3, $a1, 72
	move	$s3, $a0
	move	$a0, $s5
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	beq	$s3, $s6, .LBB131_20
# %bb.19:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1453)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1453)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_20:
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc21f_argumentsofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 114
	bne	$s3, $a1, .LBB131_10
	b	.LBB131_42
.LBB131_21:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 111
	beq	$a0, $a1, .LBB131_128
# %bb.22:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 113
	beq	$a0, $a1, .LBB131_128
# %bb.23:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 114
	beq	$a0, $a1, .LBB131_128
# %bb.24:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 115
	beq	$a0, $a1, .LBB131_128
# %bb.25:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 116
	beq	$a0, $a1, .LBB131_128
# %bb.26:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB131_13
# %bb.27:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$s2, $s1, 40
	ld.d	$s3, $s1, 48
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s3
	b	.LBB131_8
.LBB131_28:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 254
	bne	$a0, $s2, .LBB131_46
# %bb.29:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 259
	bne	$a0, $a1, .LBB131_46
# %bb.30:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 255
	bne	$a0, $a1, .LBB131_46
# %bb.31:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s8, $zero, 114
	bne	$a0, $s8, .LBB131_46
# %bb.32:
	ld.d	$s6, $s1, 48
	ld.d	$a0, $s6, 24
	ld.d	$a1, $a0, 16
	ld.d	$s4, $a1, 8
	ld.d	$a0, $a0, 24
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s7, $s1, 64
	ld.d	$s3, $s1, 72
	ld.d	$s5, $s1, 88
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_112gl_return_IDE)
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	st.d	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_112gl_return_IDE)
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_114gl_return_typeE)
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$s2, $a0, %pc_lo12(.L.str.312)
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $a1, %pc_lo12(_ZN12_GLOBAL__N_114gl_return_typeE)
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZN2kc21f_stars_of_declaratorEPNS_18impl_ac_declaratorE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_113gl_star_countE)
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	st.w	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_113gl_star_countE)
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZN2kc22f_id_of_ctor_dtor_declEPNS_18impl_ac_declaratorE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc9f_strofIDEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_111gl_functionE)
	st.d	$a1, $sp, 16                    # 8-byte Folded Spill
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$s4, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $s5, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s5
	jirl	$ra, $a1, 0
	ld.d	$a1, $s6, 0
	ld.d	$a3, $a1, 72
	move	$s5, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s6
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1071)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1071)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	beq	$s5, $s8, .LBB131_34
# %bb.33:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1453)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1453)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_34:
	ld.d	$a0, $s6, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s6
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZN2kc21f_argumentsofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 114
	move	$s6, $a0
	beq	$s5, $a1, .LBB131_53
	b	.LBB131_57
.LBB131_35:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB131_62
# %bb.36:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 259
	bne	$a0, $a1, .LBB131_62
# %bb.37:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 255
	bne	$a0, $a1, .LBB131_62
# %bb.38:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 115
	bne	$a0, $a1, .LBB131_62
# %bb.39:
	ld.d	$s3, $s1, 48
	ld.d	$a1, $s3, 24
	ld.d	$a0, $s1, 88
	ld.d	$a2, $a1, 16
	ld.d	$a3, $a0, 0
	ld.d	$s5, $s1, 40
	ld.d	$s2, $a2, 8
	ld.d	$s1, $a1, 24
	ld.d	$a1, $a3, 0
	jirl	$ra, $a1, 0
	ld.d	$a1, $s5, 0
	ld.d	$a3, $a1, 72
	move	$s4, $a0
	move	$a0, $s5
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ori	$s5, $zero, 114
	beq	$s4, $s5, .LBB131_41
# %bb.40:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1453)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1453)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_41:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc21f_argumentsofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	bne	$s4, $s5, .LBB131_10
.LBB131_42:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc15view_count_argsE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc15view_count_argsE)
	move	$s3, $a0
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc24view_gen_fnarg_and_declsE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc24view_gen_fnarg_and_declsE)
	masknez	$a1, $a1, $a0
	pcalau12i	$a2, %pc_hi20(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	maskeqz	$a0, $a2, $a0
	or	$a2, $a0, $a1
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB131_45
# %bb.43:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc11f_no_paramsEPNS_27impl_ac_parameter_type_listE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB131_45
# %bb.44:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_45:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc14view_gen_fnk_hE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc14view_gen_fnk_hE)
	move	$a0, $s1
	move	$a1, $s0
	b	.LBB131_9
.LBB131_46:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB131_64
# %bb.47:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 259
	bne	$a0, $a1, .LBB131_64
# %bb.48:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 255
	bne	$a0, $a1, .LBB131_64
# %bb.49:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 115
	bne	$a0, $a1, .LBB131_64
# %bb.50:
	ld.d	$s6, $s1, 48
	ld.d	$a0, $s6, 24
	ld.d	$a1, $a0, 16
	ld.d	$s4, $a1, 8
	ld.d	$a0, $a0, 24
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s7, $s1, 64
	ld.d	$s3, $s1, 72
	ld.d	$s5, $s1, 88
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_112gl_return_IDE)
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	st.d	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_112gl_return_IDE)
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_114gl_return_typeE)
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$s2, $a0, %pc_lo12(.L.str.312)
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $a1, %pc_lo12(_ZN12_GLOBAL__N_114gl_return_typeE)
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZN2kc21f_stars_of_declaratorEPNS_18impl_ac_declaratorE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_113gl_star_countE)
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	st.w	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_113gl_star_countE)
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZN2kc22f_id_of_ctor_dtor_declEPNS_18impl_ac_declaratorE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc9f_strofIDEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_111gl_functionE)
	st.d	$a1, $sp, 16                    # 8-byte Folded Spill
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	st.d	$s4, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $s5, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s5
	jirl	$ra, $a1, 0
	ld.d	$a1, $s6, 0
	ld.d	$a3, $a1, 72
	move	$s5, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s6
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1071)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1071)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ori	$s8, $zero, 114
	beq	$s5, $s8, .LBB131_52
# %bb.51:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1453)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1453)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_52:
	ld.d	$a0, $s6, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s6
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZN2kc21f_argumentsofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s6, $a0
	bne	$s5, $s8, .LBB131_57
.LBB131_53:
	ld.d	$a0, $s6, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_count_argsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc15view_count_argsE)
	move	$a0, $s6
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s6, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc24view_gen_fnarg_and_declsE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc24view_gen_fnarg_and_declsE)
	masknez	$a1, $a1, $a0
	pcalau12i	$a2, %pc_hi20(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	maskeqz	$a0, $a2, $a0
	or	$a2, $a0, $a1
	move	$a0, $s6
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	ld.w	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_no_of_argsE)
	beqz	$a0, .LBB131_56
# %bb.54:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2kc11f_no_paramsEPNS_27impl_ac_parameter_type_listE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB131_56
# %bb.55:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_56:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_57:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s7, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s7
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s7, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s7, 114
	beqz	$a0, .LBB131_59
# %bb.58:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s7, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_59:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1454)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1454)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ori	$a0, $zero, 114
	bne	$s5, $a0, .LBB131_125
# %bb.60:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc20f_ispredefinedphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB131_119
# %bb.61:
	ld.d	$a0, $s6, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_gen_assignments_predefE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc27view_gen_assignments_predefE)
	b	.LBB131_123
.LBB131_62:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 116
	bne	$a0, $a1, .LBB131_106
# %bb.63:
	ld.d	$a0, $s1, 48
	b	.LBB131_100
.LBB131_64:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 116
	bne	$a0, $a1, .LBB131_110
# %bb.65:
	ld.d	$s4, $s1, 48
	ld.d	$s3, $s1, 72
	ld.d	$s5, $s1, 80
	pcalau12i	$s6, %pc_hi20(_ZN12_GLOBAL__N_112gl_return_IDE)
	st.d	$zero, $s6, %pc_lo12(_ZN12_GLOBAL__N_112gl_return_IDE)
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_114gl_return_typeE)
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$s2, $a0, %pc_lo12(.L.str.312)
	st.d	$s2, $s7, %pc_lo12(_ZN12_GLOBAL__N_114gl_return_typeE)
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZN2kc21f_stars_of_declaratorEPNS_18impl_ac_declaratorE)
	jirl	$ra, $ra, 0
	pcalau12i	$s8, %pc_hi20(_ZN12_GLOBAL__N_113gl_star_countE)
	st.w	$a0, $s8, %pc_lo12(_ZN12_GLOBAL__N_113gl_star_countE)
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZN2kc9f_strofIDEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$s5, %pc_hi20(_ZN12_GLOBAL__N_111gl_functionE)
	st.d	$a0, $s5, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1457)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1457)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_gen_opt_constE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc18view_gen_opt_constE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s4, 114
	beqz	$a0, .LBB131_67
# %bb.66:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_67:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1454)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1454)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 114
	beqz	$a0, .LBB131_69
# %bb.68:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_69:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1456)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1456)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a0, $s2
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	st.d	$s2, $s7, %pc_lo12(_ZN12_GLOBAL__N_114gl_return_typeE)
	st.d	$zero, $s6, %pc_lo12(_ZN12_GLOBAL__N_112gl_return_IDE)
	st.w	$zero, $s8, %pc_lo12(_ZN12_GLOBAL__N_113gl_star_countE)
	st.d	$s2, $s5, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
	b	.LBB131_128
.LBB131_70:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 235
	bne	$a0, $a1, .LBB131_84
# %bb.71:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 254
	bne	$a0, $a1, .LBB131_84
# %bb.72:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 263
	bne	$a0, $a1, .LBB131_84
# %bb.73:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 267
	bne	$a0, $a1, .LBB131_84
# %bb.74:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 259
	bne	$a0, $a1, .LBB131_84
# %bb.75:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 272
	bne	$a0, $a1, .LBB131_84
# %bb.76:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 255
	bne	$a0, $a1, .LBB131_84
# %bb.77:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 250
	bne	$a0, $a1, .LBB131_84
# %bb.78:
	ld.d	$a0, $s1, 56
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 233
	bne	$a0, $a1, .LBB131_84
# %bb.79:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 114
	bne	$a0, $a1, .LBB131_84
# %bb.80:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 24
	ld.d	$a0, $s1, 72
	ld.d	$a1, $a1, 16
	ld.d	$a2, $a0, 0
	ld.d	$s2, $a1, 8
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s2
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB131_129
# %bb.81:
	ld.d	$a0, $s2, 40
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 172
	bne	$a0, $a1, .LBB131_128
# %bb.82:
	ld.d	$a0, $s1, 24
	ld.w	$a1, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1461)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1461)
.LBB131_83:
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1IDEPKcPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc7WarningEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 312                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 320                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 328                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 336
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.LBB131_84:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 254
	bne	$a0, $a1, .LBB131_99
# %bb.85:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 263
	bne	$a0, $a1, .LBB131_99
# %bb.86:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 267
	bne	$a0, $a1, .LBB131_99
# %bb.87:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 259
	bne	$a0, $a1, .LBB131_99
# %bb.88:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 272
	bne	$a0, $a1, .LBB131_99
# %bb.89:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 255
	bne	$a0, $a1, .LBB131_99
# %bb.90:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 276
	bne	$a0, $a1, .LBB131_99
# %bb.91:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 278
	bne	$a0, $a1, .LBB131_99
# %bb.92:
	ld.d	$a0, $s1, 48
	ld.d	$a0, $a0, 24
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 250
	bne	$a0, $a1, .LBB131_99
# %bb.93:
	ld.d	$a0, $s1, 56
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 233
	bne	$a0, $a1, .LBB131_99
# %bb.94:
	ld.d	$a0, $s1, 64
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 296
	bne	$a0, $a1, .LBB131_99
# %bb.95:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 115
	bne	$a0, $a1, .LBB131_99
# %bb.96:
	ld.d	$a0, $s1, 48
	ld.d	$a1, $a0, 24
	ld.d	$a0, $s1, 72
	ld.d	$a1, $a1, 16
	ld.d	$a2, $a0, 0
	ld.d	$s2, $a1, 8
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s2
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB131_131
# %bb.97:
	ld.d	$a0, $s2, 40
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 172
	bne	$a0, $a1, .LBB131_128
# %bb.98:
	ld.d	$a0, $s1, 24
	ld.w	$a1, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1462)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1462)
	b	.LBB131_83
.LBB131_99:
	ld.d	$a0, $s1, 72
.LBB131_100:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB131_108
.LBB131_101:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 112
	beq	$a0, $a1, .LBB131_128
# %bb.102:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 113
	beq	$a0, $a1, .LBB131_128
# %bb.103:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 114
	beq	$a0, $a1, .LBB131_128
# %bb.104:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 115
	beq	$a0, $a1, .LBB131_128
# %bb.105:
	ld.d	$a0, $s1, 88
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 116
	bne	$a0, $a1, .LBB131_13
	b	.LBB131_128
.LBB131_106:
	ld.d	$a0, $s1, 40
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 48
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
.LBB131_107:
	move	$a0, $s1
.LBB131_108:
	move	$a1, $s0
.LBB131_109:
	move	$a2, $fp
	ld.d	$s8, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 312                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 320                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 328                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 336
	jr	$a3
.LBB131_110:
	ld.d	$s4, $s1, 40
	ld.d	$s3, $s1, 48
	ld.d	$s2, $s1, 72
	ld.d	$s6, $s1, 80
	ld.d	$s5, $s1, 88
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZN2kc33f_ID_of_ac_declaration_specifiersEPNS_30impl_ac_declaration_specifiersE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_112gl_return_IDE)
	st.d	$a1, $sp, 40                    # 8-byte Folded Spill
	st.d	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_112gl_return_IDE)
	pcaddu18i	$ra, %call36(_ZN2kc9f_strofIDEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$s8, %pc_hi20(_ZN12_GLOBAL__N_114gl_return_typeE)
	st.d	$a0, $s8, %pc_lo12(_ZN12_GLOBAL__N_114gl_return_typeE)
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc21f_stars_of_declaratorEPNS_18impl_ac_declaratorE)
	jirl	$ra, $ra, 0
	pcalau12i	$s7, %pc_hi20(_ZN12_GLOBAL__N_113gl_star_countE)
	st.w	$a0, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_star_countE)
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZN2kc9f_strofIDEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$s6, %pc_hi20(_ZN12_GLOBAL__N_111gl_functionE)
	st.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
	pcalau12i	$a1, %pc_hi20(.L.str.1458)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1458)
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB131_112
# %bb.111:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1459)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1459)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_112:
	ld.d	$a0, $s5, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s5
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_gen_opt_constE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc18view_gen_opt_constE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s3, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s3, 114
	beqz	$a0, .LBB131_114
# %bb.113:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s3, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_114:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1454)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1454)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 114
	beqz	$a0, .LBB131_116
# %bb.115:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s3, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_116:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1456)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1456)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$s1, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
	st.d	$s1, $s8, %pc_lo12(_ZN12_GLOBAL__N_114gl_return_typeE)
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	st.d	$zero, $a1, %pc_lo12(_ZN12_GLOBAL__N_112gl_return_IDE)
	st.w	$zero, $s7, %pc_lo12(_ZN12_GLOBAL__N_113gl_star_countE)
	pcalau12i	$a1, %pc_hi20(.L.str.1458)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1458)
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB131_118
# %bb.117:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1460)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1460)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_118:
	st.d	$s1, $s6, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
	b	.LBB131_128
.LBB131_119:
	pcalau12i	$a0, %got_pc_hi20(The_abstract_phylum_decl)
	ld.d	$a0, $a0, %got_pc_lo12(The_abstract_phylum_decl)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a1, 8
	move	$a1, $zero
	jirl	$ra, $a2, 0
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB131_122
# %bb.120:
	ld.bu	$a0, $s7, 72
	beqz	$a0, .LBB131_125
# %bb.121:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1455)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1455)
	move	$a0, $s0
	move	$a2, $fp
	b	.LBB131_124
.LBB131_122:
	ld.d	$a0, $s6, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_assignmentsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc20view_gen_assignmentsE)
.LBB131_123:
	move	$a0, $s6
	move	$a1, $s0
.LBB131_124:
	jirl	$ra, $a3, 0
.LBB131_125:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s7, 114
	beqz	$a0, .LBB131_127
# %bb.126:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 48
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 48
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s7, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB131_127:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1456)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1456)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a0, $s2
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	st.d	$s2, $a0, %pc_lo12(_ZN12_GLOBAL__N_114gl_return_typeE)
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	st.d	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_112gl_return_IDE)
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_113gl_star_countE)
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	st.d	$s2, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
.LBB131_128:                            # %.thread
	ld.d	$s8, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 312                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 320                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 328                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 336
	ret
.LBB131_129:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 3
	ori	$a1, $a1, 1828
.LBB131_130:
	ld.d	$s8, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 312                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 320                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 328                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 336
	pcaddu18i	$t8, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jr	$t8
.LBB131_131:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 3
	ori	$a1, $a1, 1855
	b	.LBB131_130
.Lfunc_end131:
	.size	_ZN2kc34impl_fndeclaration_FnAcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end131-_ZN2kc34impl_fndeclaration_FnAcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI131_0:
	.word	.LBB131_2-.LJTI131_0
	.word	.LBB131_21-.LJTI131_0
	.word	.LBB131_28-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_13-.LJTI131_0
	.word	.LBB131_14-.LJTI131_0
                                        # -- End function
	.text
	.globl	_ZN2kc27impl_fnclass_ConvOperatorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_fnclass_ConvOperatorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_fnclass_ConvOperatorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_fnclass_ConvOperatorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_fnclass_ConvOperatorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end132:
	.size	_ZN2kc27impl_fnclass_ConvOperatorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end132-_ZN2kc27impl_fnclass_ConvOperatorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc25impl_fnclass_DestructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc25impl_fnclass_DestructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc25impl_fnclass_DestructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc25impl_fnclass_DestructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc25impl_fnclass_DestructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end133:
	.size	_ZN2kc25impl_fnclass_DestructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end133-_ZN2kc25impl_fnclass_DestructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc26impl_fnclass_ConstructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_fnclass_ConstructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_fnclass_ConstructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_fnclass_ConstructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_fnclass_ConstructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end134:
	.size	_ZN2kc26impl_fnclass_ConstructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end134-_ZN2kc26impl_fnclass_ConstructorFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc21impl_fnclass_MemberFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_fnclass_MemberFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_fnclass_MemberFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_fnclass_MemberFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_fnclass_MemberFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end135:
	.size	_ZN2kc21impl_fnclass_MemberFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end135-_ZN2kc21impl_fnclass_MemberFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc21impl_fnclass_StaticFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_fnclass_StaticFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_fnclass_StaticFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_fnclass_StaticFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_fnclass_StaticFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1463)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1463)
	jr	$a3
.Lfunc_end136:
	.size	_ZN2kc21impl_fnclass_StaticFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end136-_ZN2kc21impl_fnclass_StaticFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_fnclass_GlobalFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_fnclass_GlobalFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_fnclass_GlobalFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_fnclass_GlobalFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_fnclass_GlobalFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end137:
	.size	_ZN2kc21impl_fnclass_GlobalFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end137-_ZN2kc21impl_fnclass_GlobalFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc10impl_Ctext10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc10impl_Ctext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc10impl_Ctext10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc10impl_Ctext10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc10impl_Ctext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB138_2
.LBB138_1:                              # %.loopexit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB138_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB138_7
# %bb.3:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 96
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	st.b	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	move	$a0, $s1
	jirl	$ra, $a1, 0
	move	$s1, $a0
	ld.d	$a0, $a0, 32
	beqz	$a0, .LBB138_6
# %bb.4:
	move	$s2, $s1
	.p2align	4, , 16
.LBB138_5:                              # %.lr.ph24
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s2, $s2, 32
	ld.d	$a0, $s2, 32
	bnez	$a0, .LBB138_5
.LBB138_6:                              # %._crit_edge
	move	$a0, $s1
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc18impl_abstract_list8freelistEv)
	jr	$t8
	.p2align	4, , 16
.LBB138_7:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 32
	beqz	$a0, .LBB138_1
# %bb.8:                                # %.lr.ph
                                        #   in Loop: Header=BB138_7 Depth=1
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 32
	b	.LBB138_7
.Lfunc_end138:
	.size	_ZN2kc10impl_Ctext10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end138-_ZN2kc10impl_Ctext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_Ctext14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc10impl_Ctext14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc10impl_Ctext14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc10impl_Ctext14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc10impl_Ctext14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end139:
	.size	_ZN2kc10impl_Ctext14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end139-_ZN2kc10impl_Ctext14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc35impl_Ctext_elem_CTextWithexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc35impl_Ctext_elem_CTextWithexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc35impl_Ctext_elem_CTextWithexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc35impl_Ctext_elem_CTextWithexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc35impl_Ctext_elem_CTextWithexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 5
	move	$s0, $a1
	beq	$a2, $a3, .LBB140_8
# %bb.1:
	ori	$a1, $zero, 11
	beq	$a2, $a1, .LBB140_4
# %bb.2:
	ori	$a1, $zero, 18
	bne	$a2, $a1, .LBB140_10
# %bb.3:
	ld.d	$s1, $a0, 32
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 8
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(_ZN2kc19check_with_patternsEPNS_18impl_withcasesinfoE)
	jr	$t8
.LBB140_4:
	ld.d	$a1, $a0, 32
	ld.d	$a1, $a1, 8
	beqz	$a1, .LBB140_11
# %bb.5:
	ld.d	$s2, $a0, 24
	move	$s5, $a0
	ld.d	$s3, $a0, 40
	move	$a0, $a1
	pcaddu18i	$ra, %call36(_ZN2kc21rewrite_withcasesinfoEPNS_18impl_withcasesinfoE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 0
	ld.d	$a1, $a1, 0
	move	$s1, $a0
	move	$a0, $s3
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 130
	pcalau12i	$a2, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$s4, $a2, %pc_lo12(_ZL16inforeachcontext)
	bne	$a0, $a1, .LBB140_19
# %bb.6:
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_113g_ctext_levelE)
	ld.w	$a1, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	pcalau12i	$a0, %pc_hi20(.L.str.1464)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1464)
	pcaddu18i	$ra, %call36(_ZN2kc10f_mkselvarEPKci)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s5, 8
	st.w	$a1, $a0, 24
	ld.d	$a1, $s5, 16
	st.d	$a1, $a0, 32
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a1, $a1, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	ld.d	$a3, $a1, 64
	ld.d	$a2, $a1, 48
	addi.d	$a3, $a3, -8
	st.d	$a0, $sp, 8
	beq	$a2, $a3, .LBB140_30
# %bb.7:
	st.d	$a0, $a2, 0
	addi.d	$a0, $a2, 8
	st.d	$a0, $a1, 48
	b	.LBB140_31
.LBB140_8:
	ld.d	$a1, $a0, 24
	ld.d	$s1, $a0, 32
	pcalau12i	$a2, %pc_hi20(_ZL20withexpressionsstack)
	addi.d	$s4, $a2, %pc_lo12(_ZL20withexpressionsstack)
	ld.d	$a3, $s4, 64
	ld.d	$a2, $s4, 48
	ld.d	$s2, $a0, 40
	addi.d	$a0, $a3, -8
	st.d	$a1, $sp, 8
	beq	$a2, $a0, .LBB140_12
# %bb.9:
	st.d	$a1, $a2, 0
	addi.d	$a0, $a2, 8
	st.d	$a0, $s4, 48
	b	.LBB140_13
.LBB140_10:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.LBB140_11:
	ld.d	$a2, $a0, 16
	ld.w	$a1, $a0, 8
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1467)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1467)
	pcaddu18i	$ra, %call36(_ZN2kc9Problem1SEPKc)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.LBB140_12:
	pcalau12i	$a0, %pc_hi20(_ZL20withexpressionsstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL20withexpressionsstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_13:                             # %_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s2
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 130
	pcalau12i	$a2, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$s3, $a2, %pc_lo12(_ZL16phylumnamesstack)
	bne	$a0, $a1, .LBB140_16
# %bb.14:
	pcalau12i	$a0, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$a0, $a0, %pc_lo12(_ZL16inforeachcontext)
	ld.d	$a2, $a0, 64
	ld.d	$a1, $a0, 48
	addi.d	$a2, $a2, -4
	st.w	$zero, $sp, 0
	beq	$a1, $a2, .LBB140_25
# %bb.15:
	st.w	$zero, $a1, 0
	addi.d	$a1, $a1, 4
	st.d	$a1, $a0, 48
	b	.LBB140_26
.LBB140_16:
	ld.d	$a0, $s2, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s2
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 129
	bne	$a0, $a1, .LBB140_24
# %bb.17:
	pcalau12i	$a0, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$a0, $a0, %pc_lo12(_ZL16inforeachcontext)
	ld.d	$a3, $a0, 64
	ld.d	$a1, $a0, 48
	ori	$a2, $zero, 1
	addi.d	$a3, $a3, -4
	st.w	$a2, $sp, 0
	beq	$a1, $a3, .LBB140_47
# %bb.18:
	st.w	$a2, $a1, 0
	addi.d	$a1, $a1, 4
	st.d	$a1, $a0, 48
	b	.LBB140_48
.LBB140_19:
	ld.d	$a0, $s3, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s3
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 129
	bne	$a0, $a1, .LBB140_29
# %bb.20:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB140_22
# %bb.21:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB140_22:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a1, $a0, -8
	ld.d	$s3, $s3, 8
	ld.d	$a2, $s4, 64
	ld.d	$a0, $s4, 48
	st.d	$a1, $sp, 8
	ori	$a1, $zero, 1
	addi.d	$a2, $a2, -4
	st.w	$a1, $sp, 0
	beq	$a0, $a2, .LBB140_102
# %bb.23:
	st.w	$a1, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $s4, 48
	b	.LBB140_35
.LBB140_24:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 3
	ori	$a1, $a1, 2139
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	b	.LBB140_48
.LBB140_25:
	pcalau12i	$a0, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$a0, $a0, %pc_lo12(_ZL16inforeachcontext)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_26:                             # %_ZNSt5stackIiSt5dequeIiSaIiEEE4pushEOi.exit76
	ld.d	$a1, $sp, 8
	ld.d	$a2, $s3, 64
	ld.d	$a0, $s3, 48
	addi.d	$a2, $a2, -8
	addi.d	$a1, $a1, 8
	beq	$a0, $a2, .LBB140_28
# %bb.27:
	ld.d	$a1, $a1, 0
	st.d	$a1, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s3, 48
	b	.LBB140_48
.LBB140_28:
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL16phylumnamesstack)
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB140_48
.LBB140_29:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 3
	ori	$a1, $a1, 2081
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	b	.LBB140_34
.LBB140_30:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_31:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.w	$a1, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	ld.d	$a2, $s4, 64
	ld.d	$a0, $s4, 48
	addi.d	$a1, $a1, 1
	st.w	$a1, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	addi.d	$a1, $a2, -4
	st.w	$zero, $sp, 0
	beq	$a0, $a1, .LBB140_33
# %bb.32:
	st.w	$zero, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $s4, 48
	b	.LBB140_34
.LBB140_33:
	pcalau12i	$a0, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$a0, $a0, %pc_lo12(_ZL16inforeachcontext)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_34:
	move	$s3, $zero
.LBB140_35:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1465)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1465)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 48
	ld.d	$a1, $s4, 56
	move	$a2, $a0
	beq	$a0, $a1, .LBB140_42
# %bb.36:                               # %_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv.exit
	ld.w	$a2, $a2, -4
	beqz	$a2, .LBB140_43
.LBB140_37:
	beq	$a0, $a1, .LBB140_44
.LBB140_38:                             # %_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv.exit50
	ld.w	$a0, $a0, -4
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$s5, $a1, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	beqz	$a0, .LBB140_45
.LBB140_39:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc45pos_of_sole_dollar_or_pattern_in_patternchainEPNS_17impl_patternchainE)
	jirl	$ra, $ra, 0
	bltz	$a0, .LBB140_80
# %bb.40:
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a2, $a0, 64
	ld.d	$a1, $a0, 48
	addi.d	$a2, $a2, -8
	beq	$a1, $a2, .LBB140_71
# %bb.41:
	ld.d	$a2, $sp, 8
	st.d	$a2, $a1, 0
	addi.d	$a1, $a1, 8
	st.d	$a1, $a0, 48
	b	.LBB140_72
.LBB140_42:
	ld.d	$a2, $s4, 72
	ld.d	$a2, $a2, -8
	addi.d	$a2, $a2, 512
	ld.w	$a2, $a2, -4
	bnez	$a2, .LBB140_37
.LBB140_43:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 48
	ld.d	$a1, $s4, 56
	bne	$a0, $a1, .LBB140_38
.LBB140_44:
	ld.d	$a0, $s4, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
	ld.w	$a0, $a0, -4
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$s5, $a1, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	bnez	$a0, .LBB140_39
.LBB140_45:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a2, $a0, 64
	ld.d	$a1, $a0, 48
	addi.d	$a2, $a2, -8
	beq	$a1, $a2, .LBB140_76
# %bb.46:
	ld.d	$a2, $sp, 8
	st.d	$a2, $a1, 0
	addi.d	$a1, $a1, 8
	st.d	$a1, $a0, 48
	b	.LBB140_77
.LBB140_47:
	pcalau12i	$a0, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$a0, $a0, %pc_lo12(_ZL16inforeachcontext)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_48:                             # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNK2kc18impl_abstract_list6lengthEv)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 1
	pcalau12i	$a2, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$s2, $a2, %pc_lo12(_ZL17dollarvarsallowed)
	bne	$a0, $a1, .LBB140_50
# %bb.49:
	pcaddu18i	$ra, %call36(_ZN2kc9DVAllowedEv)
	jirl	$ra, $ra, 0
	b	.LBB140_51
.LBB140_50:
	pcaddu18i	$ra, %call36(_ZN2kc12DVDisallowedEv)
	jirl	$ra, $ra, 0
.LBB140_51:
	ld.d	$a2, $s2, 64
	ld.d	$a1, $s2, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB140_53
# %bb.52:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s2, 48
	b	.LBB140_54
.LBB140_53:
	pcalau12i	$a0, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$a0, $a0, %pc_lo12(_ZL17dollarvarsallowed)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_54:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc13view_set_typeE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc13view_set_typeE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 48
	ld.d	$a1, $s3, 56
	bne	$a0, $a1, .LBB140_56
# %bb.55:
	ld.d	$a0, $s3, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB140_56:                             # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	ld.d	$a1, $sp, 8
	st.d	$a0, $a1, 8
	ld.d	$a1, $s4, 48
	ld.d	$a0, $s4, 56
	beq	$a1, $a0, .LBB140_59
# %bb.57:
	addi.d	$a1, $a1, -8
	ld.d	$a2, $s2, 48
	ld.d	$a0, $s2, 56
	st.d	$a1, $s4, 48
	beq	$a2, $a0, .LBB140_60
.LBB140_58:
	addi.d	$a1, $a2, -8
	b	.LBB140_61
.LBB140_59:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s2, 48
	ld.d	$a0, $s2, 56
	st.d	$a1, $s4, 48
	bne	$a2, $a0, .LBB140_58
.LBB140_60:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a1, $a0, 504
.LBB140_61:                             # %_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEE3popEv.exit
	ld.d	$a0, $sp, 8
	st.d	$a1, $s2, 48
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$fp, $a0, %pc_lo12(_ZL16inforeachcontext)
	ld.d	$a1, $fp, 48
	ld.d	$a0, $fp, 56
	move	$a2, $a1
	beq	$a1, $a0, .LBB140_65
# %bb.62:                               # %_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv.exit87
	ld.w	$a2, $a2, -4
	beqz	$a2, .LBB140_66
.LBB140_63:
	beq	$a1, $a0, .LBB140_68
.LBB140_64:
	addi.d	$a0, $a1, -4
	b	.LBB140_69
.LBB140_65:
	ld.d	$a2, $fp, 72
	ld.d	$a2, $a2, -8
	addi.d	$a2, $a2, 512
	ld.w	$a2, $a2, -4
	bnez	$a2, .LBB140_63
.LBB140_66:
	ld.d	$a3, $s3, 48
	ld.d	$a2, $s3, 56
	beq	$a3, $a2, .LBB140_70
# %bb.67:
	addi.d	$a2, $a3, -8
	st.d	$a2, $s3, 48
	bne	$a1, $a0, .LBB140_64
.LBB140_68:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	addi.d	$a0, $a0, 508
.LBB140_69:                             # %_ZNSt5stackIiSt5dequeIiSaIiEEE3popEv.exit92
	st.d	$a0, $fp, 48
	b	.LBB140_99
.LBB140_70:
	ori	$a1, $zero, 512
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a2, $a0, -8
	st.d	$a2, $s3, 56
	ld.d	$a1, $fp, 48
	ld.d	$a0, $fp, 56
	addi.d	$a3, $a2, 512
	st.d	$a3, $s3, 64
	addi.d	$a2, $a2, 504
	st.d	$a2, $s3, 48
	bne	$a1, $a0, .LBB140_64
	b	.LBB140_68
.LBB140_71:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_72:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit55
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a0, $a0, %pc_lo12(.L.str.334)
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc10f_mkselvarEPKci)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s5, 64
	ld.d	$a1, $s5, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB140_74
# %bb.73:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s5, 48
	b	.LBB140_75
.LBB140_74:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_75:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit57
	ori	$s2, $zero, 1
	b	.LBB140_81
.LBB140_76:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_77:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit52
	pcalau12i	$a0, %pc_hi20(.L.str.1466)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1466)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s5, 64
	ld.d	$a1, $s5, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB140_79
# %bb.78:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s5, 48
	b	.LBB140_80
.LBB140_79:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB140_80:
	move	$s2, $zero
.LBB140_81:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc30view_gen_withcases_and_defaultE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc30view_gen_withcases_and_defaultE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 48
	ld.d	$a1, $s4, 56
	beq	$a0, $a1, .LBB140_87
# %bb.82:                               # %_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv.exit58
	ld.w	$a0, $a0, -4
	beqz	$a0, .LBB140_88
.LBB140_83:
	beqz	$s2, .LBB140_95
# %bb.84:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$s1, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB140_101
# %bb.85:
	addi.d	$a1, $a1, -8
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	st.d	$a1, $s1, 48
	bne	$a2, $a0, .LBB140_93
.LBB140_86:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s5, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s5, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s5, 64
	addi.d	$a0, $a0, 504
	b	.LBB140_94
.LBB140_87:
	ld.d	$a0, $s4, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
	ld.w	$a0, $a0, -4
	bnez	$a0, .LBB140_83
.LBB140_88:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$s1, $a0, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	ld.d	$a1, $s1, 48
	ld.d	$a0, $s1, 56
	beq	$a1, $a0, .LBB140_90
# %bb.89:
	addi.d	$a1, $a1, -8
	b	.LBB140_91
.LBB140_90:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s1, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s1, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s1, 64
	addi.d	$a1, $a0, 504
.LBB140_91:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit
	pcalau12i	$a3, %pc_hi20(_ZN12_GLOBAL__N_113g_ctext_levelE)
	ld.w	$a4, $a3, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$s2, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a2, $s2, 48
	ld.d	$a0, $s2, 56
	st.d	$a1, $s1, 48
	addi.d	$a1, $a4, -1
	st.w	$a1, $a3, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	beq	$a2, $a0, .LBB140_100
# %bb.92:
	addi.d	$a1, $a2, -8
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	st.d	$a1, $s2, 48
	beq	$a2, $a0, .LBB140_86
.LBB140_93:
	addi.d	$a0, $a2, -8
.LBB140_94:                             # %.sink.split
	st.d	$a0, $s5, 48
.LBB140_95:
	ld.d	$a1, $s4, 48
	ld.d	$a0, $s4, 56
	beq	$a1, $a0, .LBB140_97
# %bb.96:
	addi.d	$a0, $a1, -4
	b	.LBB140_98
.LBB140_97:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a0, $a0, 508
.LBB140_98:                             # %_ZNSt5stackIiSt5dequeIiSaIiEEE3popEv.exit
	st.d	$a0, $s4, 48
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1053)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ori	$a1, $zero, 1
	st.b	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
.LBB140_99:
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB140_100:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	st.d	$a1, $s2, 48
	bne	$a2, $a0, .LBB140_93
	b	.LBB140_86
.LBB140_101:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s1, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s1, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s1, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	st.d	$a1, $s1, 48
	bne	$a2, $a0, .LBB140_93
	b	.LBB140_86
.LBB140_102:
	pcalau12i	$a0, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$a0, $a0, %pc_lo12(_ZL16inforeachcontext)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB140_35
.Lfunc_end140:
	.size	_ZN2kc35impl_Ctext_elem_CTextWithexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end140-_ZN2kc35impl_Ctext_elem_CTextWithexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc38impl_Ctext_elem_CTextForeachexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc38impl_Ctext_elem_CTextForeachexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc38impl_Ctext_elem_CTextForeachexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc38impl_Ctext_elem_CTextForeachexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc38impl_Ctext_elem_CTextForeachexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -288
	.cfi_def_cfa_offset 288
	st.d	$ra, $sp, 280                   # 8-byte Folded Spill
	st.d	$fp, $sp, 272                   # 8-byte Folded Spill
	st.d	$s0, $sp, 264                   # 8-byte Folded Spill
	st.d	$s1, $sp, 256                   # 8-byte Folded Spill
	st.d	$s2, $sp, 248                   # 8-byte Folded Spill
	st.d	$s3, $sp, 240                   # 8-byte Folded Spill
	st.d	$s4, $sp, 232                   # 8-byte Folded Spill
	st.d	$s5, $sp, 224                   # 8-byte Folded Spill
	st.d	$s6, $sp, 216                   # 8-byte Folded Spill
	st.d	$s7, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 5
	move	$s0, $a1
	beq	$a2, $a3, .LBB141_6
# %bb.1:
	ori	$a1, $zero, 11
	beq	$a2, $a1, .LBB141_4
# %bb.2:
	ori	$a1, $zero, 18
	bne	$a2, $a1, .LBB141_8
# %bb.3:
	ld.d	$a1, $a0, 48
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 56
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	b	.LBB141_9
.LBB141_4:
	ld.d	$s2, $a0, 32
	ld.d	$s3, $a0, 48
	ld.d	$s1, $a0, 56
	pcalau12i	$s6, %pc_hi20(_ZN12_GLOBAL__N_113g_ctext_levelE)
	ld.w	$a1, $s6, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	pcalau12i	$a2, %pc_hi20(.L.str.1464)
	addi.d	$a2, $a2, %pc_lo12(.L.str.1464)
	move	$s4, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZN2kc10f_mkselvarEPKci)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s4, 8
	st.w	$a1, $a0, 24
	ld.d	$a1, $s4, 16
	st.d	$a1, $a0, 32
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$s7, $a1, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	ld.d	$a2, $s7, 64
	ld.d	$a1, $s7, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB141_10
# %bb.5:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s7, 48
	b	.LBB141_11
.LBB141_6:
	ld.d	$s3, $a0, 32
	ld.d	$s2, $a0, 48
	ld.d	$s1, $a0, 56
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc30f_phylumnames_foreachwith_varsEPNS_19impl_idCexpressionsE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$s4, $a1, %pc_lo12(_ZL16phylumnamesstack)
	ld.d	$a2, $s4, 64
	ld.d	$a1, $s4, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB141_23
# %bb.7:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s4, 48
	b	.LBB141_24
.LBB141_8:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
.LBB141_9:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s7, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	jr	$a3
.LBB141_10:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB141_11:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a0, $s0, 0
	ld.w	$a1, $s6, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	ld.d	$a3, $a0, 0
	addi.d	$a0, $a1, 1
	st.w	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	pcalau12i	$a0, %pc_hi20(.L.str.1465)
	addi.d	$s4, $a0, %pc_lo12(.L.str.1465)
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1468)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1468)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc36view_gen_initializephyla_whiletest_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc36view_gen_initializephyla_whiletest_cE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1469)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1469)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc34view_gen_initializephyla_init_el_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc34view_gen_initializephyla_init_el_cE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s4, 114
	beqz	$a0, .LBB141_13
# %bb.12:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB141_13:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$s3, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$s4, $a0, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$s5, $a0, %pc_lo12(.L.str.1053)
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc38view_gen_initializephyla_update_loop_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc38view_gen_initializephyla_update_loop_cE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s7, 48
	ld.d	$a0, $s7, 56
	beq	$a1, $a0, .LBB141_15
# %bb.14:
	addi.d	$a0, $a1, -8
	b	.LBB141_16
.LBB141_15:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s7, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s7, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s7, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s7, 64
	addi.d	$a0, $a0, 504
.LBB141_16:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit
	ld.w	$a1, $s6, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	st.d	$a0, $s7, 48
	addi.d	$a0, $a1, -1
	st.w	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	pcalau12i	$a0, %pc_hi20(.L.str.1470)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1470)
	addi.w	$a1, $zero, -1
	pcaddu18i	$ra, %call36(_ZN2kc12mkcasestringEPKci)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc3StrEPNS_20impl_casestring__StrE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc2IdEPNS_11impl_uniqIDE)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s1, 8
	st.w	$a1, $a0, 24
	ld.d	$a1, $s1, 16
	st.d	$a1, $a0, 32
	ld.d	$a2, $s7, 64
	ld.d	$a1, $s7, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB141_18
# %bb.17:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s7, 48
	b	.LBB141_19
.LBB141_18:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB141_19:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit73
	ld.d	$a0, $s1, 0
	ld.w	$a1, $s6, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	ld.d	$a3, $a0, 72
	addi.d	$a0, $a1, 1
	st.w	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1053)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s7, 48
	ld.d	$a0, $s7, 56
	beq	$a1, $a0, .LBB141_21
# %bb.20:
	addi.d	$a0, $a1, -8
	b	.LBB141_22
.LBB141_21:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s7, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s7, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s7, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s7, 64
	addi.d	$a0, $a0, 504
.LBB141_22:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit76
	ld.w	$a1, $s6, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	st.d	$a0, $s7, 48
	addi.d	$a0, $a1, -1
	st.w	$a0, $s6, %pc_lo12(_ZN12_GLOBAL__N_113g_ctext_levelE)
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ori	$a1, $zero, 1
	st.b	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	b	.LBB141_28
.LBB141_23:
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL16phylumnamesstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB141_24:                             # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s4, 48
	ld.d	$a0, $s4, 56
	beq	$a1, $a0, .LBB141_26
# %bb.25:
	addi.d	$a0, $a1, -8
	b	.LBB141_27
.LBB141_26:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a0, $a0, 504
.LBB141_27:                             # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s4, 48
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB141_28:
	ld.d	$s7, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	ret
.Lfunc_end141:
	.size	_ZN2kc38impl_Ctext_elem_CTextForeachexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end141-_ZN2kc38impl_Ctext_elem_CTextForeachexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_Ctext_elem_CTextCbody10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_Ctext_elem_CTextCbody10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_Ctext_elem_CTextCbody10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_Ctext_elem_CTextCbody10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_Ctext_elem_CTextCbody10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB142_3
# %bb.1:
	ori	$a4, $zero, 11
	beq	$a3, $a4, .LBB142_4
# %bb.2:
	ori	$a4, $zero, 18
	bne	$a3, $a4, .LBB142_11
.LBB142_3:
	ld.d	$a0, $a0, 24
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.LBB142_4:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	pcalau12i	$s4, %pc_hi20(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ld.bu	$a3, $s4, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ld.d	$s1, $a0, 24
	move	$fp, $a2
	move	$s0, $a1
	beqz	$a3, .LBB142_8
# %bb.5:
	pcalau12i	$a3, %got_pc_hi20(g_options)
	ld.d	$s2, $a3, %got_pc_lo12(g_options)
	ld.bu	$a3, $s2, 114
	beqz	$a3, .LBB142_7
# %bb.6:
	pcalau12i	$a2, %got_pc_hi20(pg_line)
	ld.d	$a2, $a2, %got_pc_lo12(pg_line)
	ld.d	$a3, $a1, 0
	ld.d	$a2, $a2, 0
	ld.d	$a3, $a3, 0
	move	$s3, $a0
	move	$a0, $a1
	move	$a1, $a2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a1, $s0
	move	$a2, $fp
.LBB142_7:
	st.b	$zero, $s4, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
.LBB142_8:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1454)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1454)
	move	$a0, $a1
	move	$s2, $a1
	move	$a1, $a3
	move	$s3, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s2
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1456)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1456)
	move	$a0, $s2
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	beqz	$a0, .LBB142_10
# %bb.9:
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.321)
	addi.d	$a1, $a1, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB142_10:
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
.LBB142_11:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end142:
	.size	_ZN2kc26impl_Ctext_elem_CTextCbody10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end142-_ZN2kc26impl_Ctext_elem_CTextCbody10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc34impl_Ctext_elem_CTextCexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB143_7
# %bb.1:
	ori	$a4, $zero, 11
	bne	$a3, $a4, .LBB143_8
# %bb.2:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	pcalau12i	$s2, %pc_hi20(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ld.bu	$a3, $s2, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ld.d	$fp, $a0, 24
	beqz	$a3, .LBB143_6
# %bb.3:
	pcalau12i	$a3, %got_pc_hi20(g_options)
	ld.d	$s3, $a3, %got_pc_lo12(g_options)
	ld.bu	$a3, $s3, 114
	beqz	$a3, .LBB143_5
# %bb.4:
	pcalau12i	$a3, %got_pc_hi20(pg_line)
	ld.d	$a3, $a3, %got_pc_lo12(pg_line)
	ld.d	$a4, $a1, 0
	ld.d	$a3, $a3, 0
	ld.d	$a4, $a4, 0
	move	$s4, $a0
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.w	$a2, $s4, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s3, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	move	$a1, $s0
	move	$a2, $s1
.LBB143_5:
	st.b	$zero, $s2, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
.LBB143_6:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1395)
	addi.d	$s0, $a0, %pc_lo12(.L.str.1395)
	move	$a0, $a1
	move	$s1, $a1
	move	$a1, $s0
	move	$s2, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
.LBB143_7:
	ret
.LBB143_8:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end143:
	.size	_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end143-_ZN2kc34impl_Ctext_elem_CTextCexpressionSQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc34impl_Ctext_elem_CTextCexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB144_7
# %bb.1:
	ori	$a4, $zero, 11
	bne	$a3, $a4, .LBB144_8
# %bb.2:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	pcalau12i	$s2, %pc_hi20(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ld.bu	$a3, $s2, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ld.d	$fp, $a0, 24
	beqz	$a3, .LBB144_6
# %bb.3:
	pcalau12i	$a3, %got_pc_hi20(g_options)
	ld.d	$s3, $a3, %got_pc_lo12(g_options)
	ld.bu	$a3, $s3, 114
	beqz	$a3, .LBB144_5
# %bb.4:
	pcalau12i	$a3, %got_pc_hi20(pg_line)
	ld.d	$a3, $a3, %got_pc_lo12(pg_line)
	ld.d	$a4, $a1, 0
	ld.d	$a3, $a3, 0
	ld.d	$a4, $a4, 0
	move	$s4, $a0
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.w	$a2, $s4, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s3, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	move	$a1, $s0
	move	$a2, $s1
.LBB144_5:
	st.b	$zero, $s2, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
.LBB144_6:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1234)
	addi.d	$s0, $a0, %pc_lo12(.L.str.1234)
	move	$a0, $a1
	move	$s1, $a1
	move	$a1, $s0
	move	$s2, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
.LBB144_7:
	ret
.LBB144_8:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end144:
	.size	_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end144-_ZN2kc34impl_Ctext_elem_CTextCexpressionDQ10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_Ctext_elem_CTextNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_Ctext_elem_CTextNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_Ctext_elem_CTextNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_Ctext_elem_CTextNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_Ctext_elem_CTextNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB145_9
# %bb.1:
	ori	$a4, $zero, 11
	bne	$a3, $a4, .LBB145_6
# %bb.2:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s4, $sp, 232                   # 8-byte Folded Spill
	st.d	$s5, $sp, 224                   # 8-byte Folded Spill
	st.d	$s6, $sp, 216                   # 8-byte Folded Spill
	st.d	$s7, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 27, -40
	.cfi_offset 28, -48
	.cfi_offset 29, -56
	.cfi_offset 30, -64
	move	$s0, $a1
	move	$fp, $a2
	move	$s7, $a0
	ld.d	$s4, $a0, 24
	pcaddu18i	$ra, %call36(_ZN2kc8NewlinesEv)
	jirl	$ra, $ra, 0
	pcalau12i	$s5, %pc_hi20(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ld.bu	$a1, $s5, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	move	$s1, $a0
	beqz	$a1, .LBB145_7
# %bb.3:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s6, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s6, 114
	beqz	$a0, .LBB145_5
# %bb.4:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s7, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s6, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s7, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB145_5:
	ld.w	$a0, $s4, 8
	st.b	$zero, $s5, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	addi.w	$a1, $a0, -1
	b	.LBB145_8
.LBB145_6:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.LBB145_7:
	ld.w	$a1, $s4, 8
.LBB145_8:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc13impl_charruns3setEi)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s7, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
.LBB145_9:
	ret
.Lfunc_end145:
	.size	_ZN2kc23impl_Ctext_elem_CTextNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end145-_ZN2kc23impl_Ctext_elem_CTextNl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_Ctext_elem_CTextDollarVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_Ctext_elem_CTextDollarVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_Ctext_elem_CTextDollarVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_Ctext_elem_CTextDollarVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_Ctext_elem_CTextDollarVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 5
	move	$s0, $a1
	beq	$a2, $a3, .LBB146_11
# %bb.1:
	ori	$a1, $zero, 11
	bne	$a2, $a1, .LBB146_16
# %bb.2:
	ld.d	$s2, $a0, 24
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB146_4
# %bb.3:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB146_4:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a2, $a1, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	ld.d	$a1, $a2, 48
	ld.d	$a3, $a2, 56
	bne	$a1, $a3, .LBB146_6
# %bb.5:
	ld.d	$a1, $a2, 72
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
.LBB146_6:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit44
	ld.d	$a2, $s2, 0
	ld.d	$s3, $a0, -8
	ld.d	$s1, $a1, -8
	ld.d	$a1, $a2, 0
	move	$a0, $s2
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB146_17
# %bb.7:
	ld.d	$a0, $s2, 24
	ld.w	$a0, $a0, 8
	beqz	$a0, .LBB146_18
# %bb.8:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB146_10
# %bb.9:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB146_10:
	ld.d	$a0, $a0, -8
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc20f_argumentofoperatorEPNS_7impl_IDEPNS_8impl_INTE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 0
	ld.d	$a3, $a1, 72
	move	$s2, $a0
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s2
	move	$a1, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc20impl_abstract_phylum4freeEb)
	jr	$t8
.LBB146_11:
	ld.d	$a1, $a0, 24
	ld.d	$a2, $a1, 0
	ld.d	$a2, $a2, 0
	move	$s1, $a0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	ori	$a2, $zero, 8
	move	$a1, $a0
	move	$a0, $s1
	bne	$a1, $a2, .LBB146_16
# %bb.12:
	pcalau12i	$a1, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$a2, $a1, %pc_lo12(_ZL17dollarvarsallowed)
	ld.d	$a1, $a2, 48
	ld.d	$a3, $a2, 56
	ld.d	$fp, $a0, 24
	beq	$a1, $a3, .LBB146_20
# %bb.13:                               # %_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s1, $fp, 24
	ld.d	$a0, $a1, -8
	pcaddu18i	$ra, %call36(_ZN2kc16f_DvIsDisallowedEPNS_20impl_dollarvarstatusE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB146_21
.LBB146_14:
	ld.d	$a0, $fp, 16
	ld.w	$a1, $fp, 8
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1471)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1471)
.LBB146_15:
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc13Problem1S1INTEPKcPNS_8impl_INTE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.LBB146_16:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
	b	.LBB146_19
.LBB146_17:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 3
	ori	$a1, $a1, 2500
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
.LBB146_18:
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
.LBB146_19:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB146_20:
	ld.d	$a0, $a2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
	ld.d	$s1, $fp, 24
	ld.d	$a0, $a1, -8
	pcaddu18i	$ra, %call36(_ZN2kc16f_DvIsDisallowedEPNS_20impl_dollarvarstatusE)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB146_14
.LBB146_21:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$s0, $a0, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a0, $s0, 48
	ld.d	$a1, $s0, 16
	beq	$a0, $a1, .LBB146_25
# %bb.22:
	pcaddu18i	$ra, %call36(_ZN2kc16NilunpattributesEv)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 48
	ld.d	$a3, $s0, 56
	move	$a1, $a0
	bne	$a2, $a3, .LBB146_24
# %bb.23:
	ld.d	$a0, $s0, 72
	ld.d	$a0, $a0, -8
	addi.d	$a2, $a0, 512
.LBB146_24:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a2, $a2, -8
	move	$a0, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc40v_check_dollarvar_attribute_in_operatorsEPNS_8impl_INTEPNS_18impl_unpattributesEPNS_14impl_operatorsE)
	jr	$t8
.LBB146_25:
	ld.w	$a0, $s1, 8
	beqz	$a0, .LBB146_27
# %bb.26:
	ld.d	$a0, $fp, 16
	ld.w	$a1, $fp, 8
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1472)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1472)
	b	.LBB146_15
.LBB146_27:                             # %.thread49
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end146:
	.size	_ZN2kc30impl_Ctext_elem_CTextDollarVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end146-_ZN2kc30impl_Ctext_elem_CTextDollarVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25impl_Ctext_elem_CTextLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc25impl_Ctext_elem_CTextLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc25impl_Ctext_elem_CTextLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc25impl_Ctext_elem_CTextLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc25impl_Ctext_elem_CTextLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB147_7
# %bb.1:
	ori	$a4, $zero, 11
	bne	$a3, $a4, .LBB147_8
# %bb.2:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ld.bu	$a4, $s1, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
	ld.d	$a3, $a0, 24
	beqz	$a4, .LBB147_6
# %bb.3:
	pcalau12i	$a4, %got_pc_hi20(g_options)
	ld.d	$s3, $a4, %got_pc_lo12(g_options)
	ld.bu	$a4, $s3, 114
	beqz	$a4, .LBB147_5
# %bb.4:
	pcalau12i	$a4, %got_pc_hi20(pg_line)
	ld.d	$a4, $a4, %got_pc_lo12(pg_line)
	ld.d	$a5, $a1, 0
	ld.d	$a4, $a4, 0
	ld.d	$a5, $a5, 0
	move	$s2, $a3
	move	$s4, $a0
	move	$a0, $a1
	move	$fp, $a1
	move	$a1, $a4
	move	$s0, $a2
	jirl	$ra, $a5, 0
	ld.w	$a2, $s4, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $s3, 312
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	move	$a3, $s2
	move	$a1, $fp
	move	$a2, $s0
.LBB147_5:
	st.b	$zero, $s1, %pc_lo12(_ZN12_GLOBAL__N_123gl_print_line_directiveE)
.LBB147_6:
	ld.d	$a0, $a3, 0
	ld.d	$a4, $a0, 72
	move	$a0, $a3
	jirl	$ra, $a4, 0
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
.LBB147_7:
	ret
.LBB147_8:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end147:
	.size	_ZN2kc25impl_Ctext_elem_CTextLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end147-_ZN2kc25impl_Ctext_elem_CTextLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc31impl_foreach_after_ForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc31impl_foreach_after_ForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc31impl_foreach_after_ForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc31impl_foreach_after_ForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc31impl_foreach_after_ForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 5
	move	$s0, $a1
	beq	$a2, $a3, .LBB148_7
# %bb.1:
	ori	$a1, $zero, 11
	beq	$a2, $a1, .LBB148_4
# %bb.2:
	ori	$a1, $zero, 18
	bne	$a2, $a1, .LBB148_9
# %bb.3:
	ld.d	$a0, $a0, 48
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB148_10
.LBB148_4:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 48
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1465)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1465)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s2, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s2, 114
	beqz	$a0, .LBB148_6
# %bb.5:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s2, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB148_6:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1053)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB148_16
.LBB148_7:
	ld.d	$a1, $a0, 32
	ld.d	$s1, $a0, 48
	move	$a0, $a1
	pcaddu18i	$ra, %call36(_ZN2kc34f_phylumnames_foreachwith_listvarsEPNS_19impl_idCexpressionsE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$s2, $a1, %pc_lo12(_ZL16phylumnamesstack)
	ld.d	$a2, $s2, 64
	ld.d	$a1, $s2, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB148_11
# %bb.8:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s2, 48
	b	.LBB148_12
.LBB148_9:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
.LBB148_10:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	jr	$a3
.LBB148_11:
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL16phylumnamesstack)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB148_12:                             # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s2, 48
	ld.d	$a0, $s2, 56
	beq	$a1, $a0, .LBB148_14
# %bb.13:
	addi.d	$a0, $a1, -8
	b	.LBB148_15
.LBB148_14:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a0, $a0, 504
.LBB148_15:                             # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s2, 48
.LBB148_16:
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.Lfunc_end148:
	.size	_ZN2kc31impl_foreach_after_ForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end148-_ZN2kc31impl_foreach_after_ForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_foreach_after_NoForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_foreach_after_NoForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_foreach_after_NoForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_foreach_after_NoForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_foreach_after_NoForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end149:
	.size	_ZN2kc33impl_foreach_after_NoForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end149-_ZN2kc33impl_foreach_after_NoForeachAfter10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc36impl_contextinfo_NotInForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc36impl_contextinfo_NotInForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc36impl_contextinfo_NotInForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc36impl_contextinfo_NotInForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc36impl_contextinfo_NotInForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end150:
	.size	_ZN2kc36impl_contextinfo_NotInForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end150-_ZN2kc36impl_contextinfo_NotInForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc33impl_contextinfo_InForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_contextinfo_InForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_contextinfo_InForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_contextinfo_InForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_contextinfo_InForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end151:
	.size	_ZN2kc33impl_contextinfo_InForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end151-_ZN2kc33impl_contextinfo_InForeachContext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_withexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc20impl_withexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc20impl_withexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc20impl_withexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc20impl_withexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s2
	jirl	$ra, $a3, 0
	ld.w	$a1, $fp, 0
	beqz	$a0, .LBB152_3
# %bb.1:
	ori	$a0, $zero, 11
	bne	$a1, $a0, .LBB152_26
# %bb.2:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113g_withexpr_nrE)
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_113g_withexpr_nrE)
	b	.LBB152_26
.LBB152_3:
	ori	$a0, $zero, 5
	beq	$a1, $a0, .LBB152_13
# %bb.4:
	ori	$a0, $zero, 11
	bne	$a1, $a0, .LBB152_12
# %bb.5:
	ld.d	$s1, $s2, 32
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a2, $a0, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	ld.d	$a1, $a2, 48
	ld.d	$a3, $a2, 56
	ld.d	$a0, $s2, 40
	bne	$a1, $a3, .LBB152_7
# %bb.6:
	ld.d	$a1, $a2, 72
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
.LBB152_7:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a2, $a0, 0
	ld.d	$s2, $a1, -8
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_113g_withexpr_nrE)
	ld.w	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_withexpr_nrE)
	ld.w	$a1, $s1, 16
	addi.d	$a0, $a0, 1
	st.w	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_withexpr_nrE)
	beqz	$a1, .LBB152_10
# %bb.8:                                # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.b	$a0, $s4, 114
	andi	$a0, $a0, 1
	beqz	$a0, .LBB152_10
# %bb.9:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB152_10:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s3, %pc_lo12(_ZN12_GLOBAL__N_113g_withexpr_nrE)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1473)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1473)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1366)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1366)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB152_26
	.p2align	4, , 16
.LBB152_11:                             # %.lr.ph
                                        #   in Loop: Header=BB152_12 Depth=1
	ld.d	$a0, $s2, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s2, $s2, 40
.LBB152_12:                             # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 40
	bnez	$a0, .LBB152_11
	b	.LBB152_26
.LBB152_13:
	ld.d	$s1, $s2, 32
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$s5, $a0, %pc_lo12(_ZL16phylumnamesstack)
	ld.d	$a0, $s5, 48
	ld.d	$a1, $s5, 56
	ld.d	$s2, $s2, 40
	st.d	$zero, $sp, 8
	bne	$a0, $a1, .LBB152_15
# %bb.14:
	ld.d	$a0, $s5, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB152_15:                             # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$s3, $a0, -8
	st.d	$s3, $s2, 8
	ld.d	$a0, $s3, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s3
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 13
	bne	$a0, $a1, .LBB152_17
# %bb.16:
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcaddu18i	$ra, %call36(_ZN2kc14NilphylumnamesEv)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	st.d	$a0, $sp, 8
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	bne	$a2, $a0, .LBB152_19
	b	.LBB152_22
.LBB152_17:
	ld.d	$a0, $s3, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s3
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 14
	bne	$a0, $a1, .LBB152_21
# %bb.18:
	ld.d	$s4, $s3, 16
	ld.d	$s3, $s3, 8
	st.d	$s4, $sp, 8
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	beq	$a2, $a0, .LBB152_22
.LBB152_19:
	ld.d	$a1, $s5, 64
	addi.d	$a0, $a2, -8
	addi.d	$a1, $a1, -8
	st.d	$a0, $s5, 48
	beq	$a0, $a1, .LBB152_23
.LBB152_20:
	st.d	$s4, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $s5, 48
	b	.LBB152_24
.LBB152_21:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 3
	ori	$a1, $a1, 2793
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	move	$s4, $zero
	move	$s3, $zero
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	bne	$a2, $a0, .LBB152_19
.LBB152_22:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s5, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s5, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s5, 64
	addi.d	$a0, $a0, 504
	addi.d	$a1, $a1, -8
	st.d	$a0, $s5, 48
	bne	$a0, $a1, .LBB152_20
.LBB152_23:
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL16phylumnamesstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB152_24:                             # %_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEE4pushERKS2_.exit
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	st.d	$s3, $s1, 8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB152_26
# %bb.25:
	ld.d	$a0, $s1, 24
	ld.w	$a1, $s1, 16
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1474)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1474)
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1weEPKcPNS_19impl_withexpressionE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jirl	$ra, $ra, 0
.LBB152_26:                             # %_ZN2kc20impl_withexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.Lfunc_end152:
	.size	_ZN2kc20impl_withexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end152-_ZN2kc20impl_withexpressions10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc20impl_withexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc20impl_withexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc20impl_withexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc20impl_withexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc20impl_withexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a1, $zero, 11
	bne	$a0, $a1, .LBB153_2
# %bb.1:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_113g_withexpr_nrE)
	st.w	$zero, $a0, %pc_lo12(_ZN12_GLOBAL__N_113g_withexpr_nrE)
.LBB153_2:
	ret
.Lfunc_end153:
	.size	_ZN2kc20impl_withexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end153-_ZN2kc20impl_withexpressions14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc33impl_withexpression_WECexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_withexpression_WECexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_withexpression_WECexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_withexpression_WECexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_withexpression_WECexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a4, $a2, 0
	ori	$a3, $zero, 3
	beq	$a4, $a3, .LBB154_2
# %bb.1:
	ori	$a5, $zero, 11
	ori	$a3, $zero, 80
	bne	$a4, $a5, .LBB154_3
.LBB154_2:
	ld.d	$a0, $a0, 32
	ori	$a3, $zero, 72
.LBB154_3:
	ld.d	$a4, $a0, 0
	ldx.d	$a3, $a4, $a3
	jr	$a3
.Lfunc_end154:
	.size	_ZN2kc33impl_withexpression_WECexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end154-_ZN2kc33impl_withexpression_WECexpression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_withexpression_WEVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_withexpression_WEVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_withexpression_WEVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_withexpression_WEVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_withexpression_WEVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a4, $a2, 0
	ori	$a3, $zero, 3
	beq	$a4, $a3, .LBB155_2
# %bb.1:
	ori	$a5, $zero, 11
	ori	$a3, $zero, 80
	bne	$a4, $a5, .LBB155_3
.LBB155_2:
	ld.d	$a0, $a0, 32
	ori	$a3, $zero, 72
.LBB155_3:
	ld.d	$a4, $a0, 0
	ldx.d	$a3, $a4, $a3
	jr	$a3
.Lfunc_end155:
	.size	_ZN2kc30impl_withexpression_WEVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end155-_ZN2kc30impl_withexpression_WEVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_withcases10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_withcases10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_withcases10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_withcases10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_withcases10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	ld.w	$a1, $s0, 0
	beqz	$a0, .LBB156_4
# %bb.1:
	ori	$a0, $zero, 18
	bne	$a1, $a0, .LBB156_3
# %bb.2:
	pcaddu18i	$ra, %call36(_ZN2kc16NilwithcasesinfoEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 8
.LBB156_3:                              # %_ZN2kc14impl_withcases14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB156_4:
	ori	$a0, $zero, 5
	beq	$a1, $a0, .LBB156_11
# %bb.5:
	ori	$a0, $zero, 9
	beq	$a1, $a0, .LBB156_11
# %bb.6:
	ori	$a0, $zero, 18
	bne	$a1, $a0, .LBB156_9
# %bb.7:
	ld.d	$s2, $fp, 16
	ld.d	$a0, $s2, 0
	ld.d	$s3, $fp, 24
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 8
	st.d	$a0, $fp, 8
	ld.d	$s0, $s2, 8
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ori	$s1, $zero, 221
	bne	$a0, $s1, .LBB156_3
	.p2align	4, , 16
.LBB156_8:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 8
	ld.d	$a1, $fp, 8
	pcaddu18i	$ra, %call36(_ZN2kc22insertin_withcasesinfoEPNS_17impl_withcaseinfoEPNS_18impl_withcasesinfoE)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 8
	ld.d	$s0, $s0, 16
	ld.d	$a0, $s0, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	beq	$a0, $s1, .LBB156_8
	b	.LBB156_3
	.p2align	4, , 16
.LBB156_9:                              # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 24
	beqz	$a0, .LBB156_3
# %bb.10:                               # %.lr.ph44
                                        #   in Loop: Header=BB156_9 Depth=1
	ld.d	$a0, $fp, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 24
	b	.LBB156_9
.LBB156_11:
	ld.d	$a0, $fp, 24
	ld.d	$a1, $a0, 0
	ld.d	$fp, $fp, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end156:
	.size	_ZN2kc14impl_withcases10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end156-_ZN2kc14impl_withcases10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_withcases14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_withcases14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_withcases14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_withcases14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_withcases14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a1, $a2, 0
	ori	$a2, $zero, 18
	bne	$a1, $a2, .LBB157_2
# %bb.1:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	pcaddu18i	$ra, %call36(_ZN2kc16NilwithcasesinfoEv)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 8
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
.LBB157_2:
	ret
.Lfunc_end157:
	.size	_ZN2kc14impl_withcases14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end157-_ZN2kc14impl_withcases14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_withcase_Withcase10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_withcase_Withcase10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_withcase_Withcase10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_withcase_Withcase10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_withcase_Withcase10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB158_5
# %bb.1:
	ori	$a4, $zero, 9
	beq	$a3, $a4, .LBB158_4
# %bb.2:
	ori	$a4, $zero, 18
	bne	$a3, $a4, .LBB158_7
# %bb.3:
	ld.d	$fp, $a0, 24
	ld.d	$a3, $fp, 0
	ld.d	$s0, $a0, 16
	ld.d	$a3, $a3, 72
	move	$s1, $a0
	move	$a0, $fp
	jirl	$ra, $a3, 0
	pcaddu18i	$ra, %call36(_ZN2kc21v_resetbindingidmarksEv)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc17syn_patternchainsEPNS_18impl_patternchainsE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc40add_predicates_to_patternrepresentationsEPNS_27impl_patternrepresentationsE)
	jirl	$ra, $ra, 0
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc15f_withcasesinfoEPNS_27impl_patternrepresentationsEPNS_10impl_CtextE)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	b	.LBB158_25
.LBB158_4:
	ld.d	$a0, $a0, 16
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	b	.LBB158_8
.LBB158_5:
	move	$s5, $a1
	move	$s1, $a2
	ld.d	$s0, $a0, 16
	ld.d	$fp, $a0, 24
	pcaddu18i	$ra, %call36(_ZN2kc12NiloperatorsEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL16outmostoperators)
	addi.d	$s3, $a1, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB158_9
# %bb.6:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	b	.LBB158_10
.LBB158_7:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB158_8:
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.LBB158_9:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$a0, $a0, %pc_lo12(_ZL16outmostoperators)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB158_10:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc12NilvariablesEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL14variablesstack)
	addi.d	$s2, $a1, %pc_lo12(_ZL14variablesstack)
	ld.d	$a2, $s2, 64
	ld.d	$a1, $s2, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB158_12
# %bb.11:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s2, 48
	b	.LBB158_13
.LBB158_12:
	pcalau12i	$a0, %pc_hi20(_ZL14variablesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14variablesstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB158_13:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	ld.d	$a0, $s0, 0
	pcalau12i	$s4, %pc_hi20(_ZL8cl_scope)
	ld.w	$a1, $s4, %pc_lo12(_ZL8cl_scope)
	ld.d	$a3, $a0, 72
	addi.d	$a0, $a1, 1
	st.w	$a0, $s4, %pc_lo12(_ZL8cl_scope)
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 48
	ld.d	$a1, $s3, 56
	bne	$a0, $a1, .LBB158_15
# %bb.14:
	ld.d	$a0, $s3, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB158_15:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8freelistEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 48
	ld.d	$a0, $s3, 56
	beq	$a1, $a0, .LBB158_22
# %bb.16:
	addi.d	$a0, $a1, -8
	ld.d	$a1, $s2, 48
	ld.d	$a2, $s2, 56
	st.d	$a0, $s3, 48
	bne	$a1, $a2, .LBB158_18
.LBB158_17:
	ld.d	$a0, $s2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB158_18:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a1, -8
	pcaddu18i	$ra, %call36(_ZN2kc22v_reset_variables_typeEPNS_14impl_variablesE)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s4, %pc_lo12(_ZL8cl_scope)
	ld.d	$a0, $s2, 48
	ld.d	$a2, $s2, 56
	addi.d	$a1, $a1, -1
	st.w	$a1, $s4, %pc_lo12(_ZL8cl_scope)
	bne	$a0, $a2, .LBB158_20
# %bb.19:
	ld.d	$a0, $s2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB158_20:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit23
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8freelistEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 48
	ld.d	$a0, $s2, 56
	beq	$a1, $a0, .LBB158_23
# %bb.21:
	addi.d	$a0, $a1, -8
	b	.LBB158_24
.LBB158_22:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a0, $a0, 504
	ld.d	$a1, $s2, 48
	ld.d	$a2, $s2, 56
	st.d	$a0, $s3, 48
	bne	$a1, $a2, .LBB158_18
	b	.LBB158_17
.LBB158_23:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a0, $a0, 504
.LBB158_24:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s2, 48
.LBB158_25:
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end158:
	.size	_ZN2kc22impl_withcase_Withcase10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end158-_ZN2kc22impl_withcase_Withcase10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_unparsedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_unparsedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_unparsedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_unparsedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB159_2
.LBB159_1:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB159_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 5
	beq	$a0, $a1, .LBB159_5
# %bb.3:
	ori	$a1, $zero, 14
	beq	$a0, $a1, .LBB159_5
# %bb.4:
	ori	$a1, $zero, 131
	bne	$a0, $a1, .LBB159_6
.LBB159_5:                              # %.loopexit.sink.split
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB159_6:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB159_1
# %bb.7:                                # %.lr.ph
                                        #   in Loop: Header=BB159_6 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB159_6
.Lfunc_end159:
	.size	_ZN2kc24impl_unparsedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end159-_ZN2kc24impl_unparsedeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_unparsedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_unparsedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_unparsedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_unparsedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_unparsedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end160:
	.size	_ZN2kc24impl_unparsedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end160-_ZN2kc24impl_unparsedeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc42impl_unparsedeclaration_UnparseDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc42impl_unparsedeclaration_UnparseDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc42impl_unparsedeclaration_UnparseDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc42impl_unparsedeclaration_UnparseDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc42impl_unparsedeclaration_UnparseDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 17
	blt	$a4, $a3, .LBB161_4
# %bb.1:
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB161_8
# %bb.2:
	ori	$a4, $zero, 14
	beq	$a3, $a4, .LBB161_6
.LBB161_3:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	b	.LBB161_7
.LBB161_4:
	ori	$a4, $zero, 18
	beq	$a3, $a4, .LBB161_10
# %bb.5:
	ori	$a4, $zero, 131
	bne	$a3, $a4, .LBB161_3
.LBB161_6:
	ld.d	$a0, $a0, 24
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
.LBB161_7:
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	jr	$a3
.LBB161_8:
	move	$s7, $a1
	move	$s1, $a2
	ld.d	$s0, $a0, 16
	ld.d	$fp, $a0, 24
	pcaddu18i	$ra, %call36(_ZN2kc12NiloperatorsEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL16outmostoperators)
	addi.d	$s3, $a1, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB161_11
# %bb.9:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	b	.LBB161_12
.LBB161_10:
	ld.d	$fp, $a0, 24
	ld.d	$a3, $fp, 0
	ld.d	$s0, $a0, 16
	ld.d	$a3, $a3, 72
	move	$s1, $a0
	move	$a0, $fp
	jirl	$ra, $a3, 0
	pcaddu18i	$ra, %call36(_ZN2kc21v_resetbindingidmarksEv)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc19syn_outmostpatternsEPNS_20impl_outmostpatternsE)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZN2kc40add_predicates_to_patternrepresentationsEPNS_27impl_patternrepresentationsE)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	move	$a1, $fp
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	pcaddu18i	$t8, %call36(_ZN2kc34v_add_unparsedeclsinfo_to_operatorEPNS_27impl_patternrepresentationsEPNS_19impl_unparseclausesE)
	jr	$t8
.LBB161_11:
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$a0, $a0, %pc_lo12(_ZL16outmostoperators)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB161_12:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9DVAllowedEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$s4, $a1, %pc_lo12(_ZL17dollarvarsallowed)
	ld.d	$a2, $s4, 64
	ld.d	$a1, $s4, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB161_14
# %bb.13:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s4, 48
	b	.LBB161_15
.LBB161_14:
	pcalau12i	$a0, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$a0, $a0, %pc_lo12(_ZL17dollarvarsallowed)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB161_15:                             # %_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL11phylumstack)
	addi.d	$s5, $a1, %pc_lo12(_ZL11phylumstack)
	ld.d	$a2, $s5, 64
	ld.d	$a1, $s5, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB161_17
# %bb.16:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s5, 48
	b	.LBB161_18
.LBB161_17:
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL11phylumstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB161_18:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	pcaddu18i	$ra, %call36(_ZN2kc12NilvariablesEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL14variablesstack)
	addi.d	$s2, $a1, %pc_lo12(_ZL14variablesstack)
	ld.d	$a2, $s2, 64
	ld.d	$a1, $s2, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB161_20
# %bb.19:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s2, 48
	b	.LBB161_21
.LBB161_20:
	pcalau12i	$a0, %pc_hi20(_ZL14variablesstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL14variablesstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB161_21:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	ld.d	$a0, $s0, 0
	pcalau12i	$s6, %pc_hi20(_ZL8cl_scope)
	ld.w	$a1, $s6, %pc_lo12(_ZL8cl_scope)
	ld.d	$a3, $a0, 72
	addi.d	$a0, $a1, 1
	st.w	$a0, $s6, %pc_lo12(_ZL8cl_scope)
	move	$a0, $s0
	move	$a1, $s7
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s7
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 48
	ld.d	$a1, $s3, 56
	bne	$a0, $a1, .LBB161_23
# %bb.22:
	ld.d	$a0, $s3, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB161_23:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8freelistEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s3, 48
	ld.d	$a0, $s3, 56
	beq	$a1, $a0, .LBB161_32
# %bb.24:
	addi.d	$a1, $a1, -8
	ld.d	$a2, $s4, 48
	ld.d	$a0, $s4, 56
	st.d	$a1, $s3, 48
	beq	$a2, $a0, .LBB161_33
.LBB161_25:
	addi.d	$a1, $a2, -8
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	st.d	$a1, $s4, 48
	beq	$a2, $a0, .LBB161_34
.LBB161_26:
	addi.d	$a0, $a2, -8
	ld.d	$a1, $s2, 48
	ld.d	$a2, $s2, 56
	st.d	$a0, $s5, 48
	bne	$a1, $a2, .LBB161_28
.LBB161_27:
	ld.d	$a0, $s2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB161_28:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a0, $a1, -8
	pcaddu18i	$ra, %call36(_ZN2kc22v_reset_variables_typeEPNS_14impl_variablesE)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s6, %pc_lo12(_ZL8cl_scope)
	ld.d	$a0, $s2, 48
	ld.d	$a2, $s2, 56
	addi.d	$a1, $a1, -1
	st.w	$a1, $s6, %pc_lo12(_ZL8cl_scope)
	bne	$a0, $a2, .LBB161_30
# %bb.29:
	ld.d	$a0, $s2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB161_30:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3topEv.exit33
	ld.d	$a0, $a0, -8
	pcaddu18i	$ra, %call36(_ZN2kc18impl_abstract_list8freelistEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 48
	ld.d	$a0, $s2, 56
	beq	$a1, $a0, .LBB161_35
# %bb.31:
	addi.d	$a0, $a1, -8
	b	.LBB161_36
.LBB161_32:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s4, 48
	ld.d	$a0, $s4, 56
	st.d	$a1, $s3, 48
	bne	$a2, $a0, .LBB161_25
.LBB161_33:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s4, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s4, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s4, 64
	addi.d	$a1, $a0, 504
	ld.d	$a2, $s5, 48
	ld.d	$a0, $s5, 56
	st.d	$a1, $s4, 48
	bne	$a2, $a0, .LBB161_26
.LBB161_34:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s5, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s5, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s5, 64
	addi.d	$a0, $a0, 504
	ld.d	$a1, $s2, 48
	ld.d	$a2, $s2, 56
	st.d	$a0, $s5, 48
	bne	$a1, $a2, .LBB161_28
	b	.LBB161_27
.LBB161_35:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s2, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s2, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s2, 64
	addi.d	$a0, $a0, 504
.LBB161_36:                             # %_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s2, 48
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end161:
	.size	_ZN2kc42impl_unparsedeclaration_UnparseDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end161-_ZN2kc42impl_unparsedeclaration_UnparseDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_unparseclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_unparseclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_unparseclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_unparseclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_unparseclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB162_2
.LBB162_1:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB162_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 18
	bltu	$a1, $a0, .LBB162_4
# %bb.3:
	ori	$a1, $zero, 1
	sll.d	$a1, $a1, $a0
	lu12i.w	$a2, 68
	ori	$a2, $a2, 32
	and	$a1, $a1, $a2
	bnez	$a1, .LBB162_5
.LBB162_4:
	ori	$a1, $zero, 131
	bne	$a0, $a1, .LBB162_7
.LBB162_5:                              # %.loopexit.sink.split
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB162_6:                              # %.lr.ph
                                        #   in Loop: Header=BB162_7 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB162_7:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB162_6
	b	.LBB162_1
.Lfunc_end162:
	.size	_ZN2kc19impl_unparseclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end162-_ZN2kc19impl_unparseclauses10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_unparseclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_unparseclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_unparseclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_unparseclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_unparseclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end163:
	.size	_ZN2kc19impl_unparseclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end163-_ZN2kc19impl_unparseclauses14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc32impl_unparseclause_UnparseClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_unparseclause_UnparseClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_unparseclause_UnparseClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_unparseclause_UnparseClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_unparseclause_UnparseClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 125
	blt	$a4, $a3, .LBB164_4
# %bb.1:
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB164_9
# %bb.2:
	ori	$a4, $zero, 14
	beq	$a3, $a4, .LBB164_11
# %bb.3:
	ori	$a4, $zero, 18
	beq	$a3, $a4, .LBB164_7
	b	.LBB164_10
.LBB164_4:
	ori	$a4, $zero, 126
	beq	$a3, $a4, .LBB164_7
# %bb.5:
	ori	$a4, $zero, 127
	beq	$a3, $a4, .LBB164_7
# %bb.6:
	ori	$a4, $zero, 131
	bne	$a3, $a4, .LBB164_10
.LBB164_7:
	ld.d	$a0, $a0, 16
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
.LBB164_8:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB164_9:
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$a5, $a4, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc12view_check_uE)
	addi.d	$a4, $a0, %pc_lo12(_ZN2kc12view_check_uE)
	move	$a0, $a3
	move	$s0, $a1
	move	$s1, $a2
	move	$a2, $a4
	jirl	$ra, $a5, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	b	.LBB164_8
.LBB164_10:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	b	.LBB164_8
.LBB164_11:
	ld.d	$a0, $a0, 16
	ld.d	$a3, $a0, 0
	pcalau12i	$a4, %got_pc_hi20(The_current_unparseitems)
	ld.d	$fp, $a4, %got_pc_lo12(The_current_unparseitems)
	ld.d	$a3, $a3, 72
	st.d	$a0, $fp, 0
	jirl	$ra, $a3, 0
	st.d	$zero, $fp, 0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end164:
	.size	_ZN2kc32impl_unparseclause_UnparseClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end164-_ZN2kc32impl_unparseclause_UnparseClause10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_viewnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_viewnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_viewnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_viewnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_viewnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s2
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB165_2
.LBB165_1:                              # %.loopexit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB165_2:
	ld.w	$a0, $fp, 0
	addi.d	$a1, $a0, -89
	ori	$a2, $zero, 60
	bltu	$a2, $a1, .LBB165_5
# %bb.3:
	slli.d	$a0, $a1, 2
	pcalau12i	$a1, %pc_hi20(.LJTI165_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI165_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB165_4:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s2, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1492)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1492)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1245)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1245)
	b	.LBB165_39
.LBB165_5:
	ori	$a1, $zero, 12
	beq	$a0, $a1, .LBB165_28
# %bb.6:
	ori	$a1, $zero, 13
	bne	$a0, $a1, .LBB165_10
# %bb.7:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s2, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(pg_rviewshavebeendefined)
	ld.d	$a0, $a0, %got_pc_lo12(pg_rviewshavebeendefined)
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB165_45
# %bb.8:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc19f_useoccurrviewnameEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	b	.LBB165_46
	.p2align	4, , 16
.LBB165_9:                              # %.lr.ph
                                        #   in Loop: Header=BB165_10 Depth=1
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s2, $s2, 24
.LBB165_10:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 24
	bnez	$a0, .LBB165_9
	b	.LBB165_1
.LBB165_11:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s2, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.bu	$s2, $s2, 8
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1488)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1488)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	beqz	$s2, .LBB165_25
# %bb.12:
	pcalau12i	$a0, %pc_hi20(.L.str.1491)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1491)
	b	.LBB165_39
.LBB165_13:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 144
	bne	$a0, $a1, .LBB165_30
# %bb.14:
	ld.bu	$a0, $s2, 8
	bnez	$a0, .LBB165_1
# %bb.15:
	ld.d	$s1, $s2, 16
	b	.LBB165_38
.LBB165_16:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s2, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.bu	$a1, $s2, 8
	ld.d	$a3, $a0, 0
	beqz	$a1, .LBB165_31
# %bb.17:
	pcalau12i	$a0, %pc_hi20(.L.str.1080)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1080)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a1, $a0, 160
	beqz	$a1, .LBB165_19
# %bb.18:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit263.thread
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 152
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB165_19:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit263.thread267
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1486)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1486)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1487)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1487)
	b	.LBB165_24
.LBB165_20:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s2, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.bu	$a1, $s2, 8
	ld.d	$a3, $a0, 0
	beqz	$a1, .LBB165_34
# %bb.21:
	pcalau12i	$a0, %pc_hi20(.L.str.1080)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1080)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a1, $a0, 160
	beqz	$a1, .LBB165_23
# %bb.22:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit259.thread
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 152
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB165_23:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit259.thread265
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1480)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1480)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1481)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1481)
.LBB165_24:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit259.thread265
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1482)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1482)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1483)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1483)
	b	.LBB165_39
.LBB165_25:
	pcalau12i	$a0, %pc_hi20(.L.str.1489)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1489)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1490)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1490)
	b	.LBB165_39
.LBB165_26:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s1, $s2, 16
	ori	$a1, $zero, 144
	bne	$a0, $a1, .LBB165_41
# %bb.27:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	b	.LBB165_42
.LBB165_28:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s2, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(pg_uviewshavebeendefined)
	ld.d	$a0, $a0, %got_pc_lo12(pg_uviewshavebeendefined)
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB165_43
# %bb.29:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc19f_useoccuruviewnameEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	b	.LBB165_44
.LBB165_30:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s2, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s2, 8
	bnez	$a0, .LBB165_1
	b	.LBB165_38
.LBB165_31:
	pcalau12i	$a0, %pc_hi20(.L.str.1475)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1475)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a1, $a0, 160
	beqz	$a1, .LBB165_33
# %bb.32:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit261.thread
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 152
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB165_33:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit261.thread266
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1484)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1484)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1485)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1485)
	b	.LBB165_37
.LBB165_34:
	pcalau12i	$a0, %pc_hi20(.L.str.1475)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1475)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.d	$a1, $a0, 160
	beqz	$a1, .LBB165_36
# %bb.35:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 152
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB165_36:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread264
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1476)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1476)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1477)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1477)
.LBB165_37:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread264
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1478)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1478)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB165_38:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1479)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1479)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
.LBB165_39:
	move	$a0, $s0
.LBB165_40:
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB165_41:
	ld.d	$a0, $s2, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1245)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1245)
.LBB165_42:
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	b	.LBB165_40
.LBB165_43:
	pcaddu18i	$ra, %call36(_ZN2kc11ITUserUViewEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc23v_extendoccur_nowarningEPNS_7impl_IDEPNS_11impl_IDtypeE)
	jirl	$ra, $ra, 0
.LBB165_44:
	move	$a0, $s1
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc19v_add_to_uviewnamesEPNS_7impl_IDE)
	jr	$t8
.LBB165_45:
	pcaddu18i	$ra, %call36(_ZN2kc11ITUserRViewEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc23v_extendoccur_nowarningEPNS_7impl_IDEPNS_11impl_IDtypeE)
	jirl	$ra, $ra, 0
.LBB165_46:
	move	$a0, $s1
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc19v_add_to_rviewnamesEPNS_7impl_IDE)
	jr	$t8
.Lfunc_end165:
	.size	_ZN2kc14impl_viewnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end165-_ZN2kc14impl_viewnames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI165_0:
	.word	.LBB165_4-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_11-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_26-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_4-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_11-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_13-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_16-.LJTI165_0
	.word	.LBB165_10-.LJTI165_0
	.word	.LBB165_20-.LJTI165_0
                                        # -- End function
	.text
	.globl	_ZN2kc14impl_viewnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_viewnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_viewnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_viewnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_viewnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end166:
	.size	_ZN2kc14impl_viewnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end166-_ZN2kc14impl_viewnames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc17impl_unparseitems10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_unparseitems10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_unparseitems10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_unparseitems10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_unparseitems10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	ld.w	$a1, $fp, 0
	beqz	$a0, .LBB167_3
# %bb.1:
	ori	$a0, $zero, 132
	bne	$a1, $a0, .LBB167_17
# %bb.2:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1493)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1493)
	move	$a0, $s0
	b	.LBB167_14
.LBB167_3:
	ori	$a0, $zero, 125
	bge	$a0, $a1, .LBB167_8
# %bb.4:
	addi.d	$a0, $a1, -126
	ori	$a1, $zero, 6
	bltu	$a1, $a0, .LBB167_16
# %bb.5:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI167_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI167_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB167_6:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 8
	ori	$a2, $zero, 146
	bne	$a0, $a2, .LBB167_18
# %bb.7:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $a1
	b	.LBB167_13
.LBB167_8:
	ori	$a0, $zero, 5
	beq	$a1, $a0, .LBB167_11
# %bb.9:
	ori	$a0, $zero, 14
	beq	$a1, $a0, .LBB167_11
# %bb.10:
	ori	$a0, $zero, 18
	bne	$a1, $a0, .LBB167_16
.LBB167_11:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
.LBB167_12:
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
.LBB167_13:
	move	$a1, $s0
.LBB167_14:
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB167_15:                             # %.lr.ph
                                        #   in Loop: Header=BB167_16 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB167_16:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB167_15
.LBB167_17:                             # %_ZN2kc17impl_unparseitems14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB167_18:
	ld.d	$a0, $a1, 0
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a0, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	b	.LBB167_12
.Lfunc_end167:
	.size	_ZN2kc17impl_unparseitems10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end167-_ZN2kc17impl_unparseitems10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI167_0:
	.word	.LBB167_11-.LJTI167_0
	.word	.LBB167_11-.LJTI167_0
	.word	.LBB167_16-.LJTI167_0
	.word	.LBB167_16-.LJTI167_0
	.word	.LBB167_16-.LJTI167_0
	.word	.LBB167_11-.LJTI167_0
	.word	.LBB167_6-.LJTI167_0
                                        # -- End function
	.text
	.globl	_ZN2kc17impl_unparseitems14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc17impl_unparseitems14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc17impl_unparseitems14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc17impl_unparseitems14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc17impl_unparseitems14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 132
	bne	$a0, $a3, .LBB168_2
# %bb.1:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1493)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1493)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB168_2:
	ret
.Lfunc_end168:
	.size	_ZN2kc17impl_unparseitems14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end168-_ZN2kc17impl_unparseitems14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc29impl_unparseitem_UViewVarDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc29impl_unparseitem_UViewVarDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc29impl_unparseitem_UViewVarDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc29impl_unparseitem_UViewVarDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc29impl_unparseitem_UViewVarDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 14
	move	$s0, $a1
	move	$s2, $a0
	beq	$a2, $a3, .LBB169_7
# %bb.1:
	ori	$a0, $zero, 126
	beq	$a2, $a0, .LBB169_3
# %bb.2:
	ori	$a0, $zero, 127
	bne	$a2, $a0, .LBB169_8
.LBB169_3:
	ld.d	$a0, $s2, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s3, $s2, 16
	ld.d	$s1, $s2, 24
	ori	$a1, $zero, 37
	bne	$a0, $a1, .LBB169_5
# %bb.4:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1479)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1479)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	b	.LBB169_6
.LBB169_5:
	ld.d	$a0, $s0, 0
	ld.d	$s2, $s2, 32
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1479)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1479)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	move	$a0, $s2
	move	$a1, $s0
.LBB169_6:
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	b	.LBB169_10
.LBB169_7:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB169_9
.LBB169_8:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 80
	move	$a0, $s2
.LBB169_9:
	move	$a1, $s0
.LBB169_10:
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end169:
	.size	_ZN2kc29impl_unparseitem_UViewVarDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end169-_ZN2kc29impl_unparseitem_UViewVarDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_unparseitem_UnpBody10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_unparseitem_UnpBody10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_unparseitem_UnpBody10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_unparseitem_UnpBody10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_unparseitem_UnpBody10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 125
	bge	$a4, $a3, .LBB170_6
# %bb.1:
	ori	$a4, $zero, 126
	beq	$a3, $a4, .LBB170_9
# %bb.2:
	ori	$a4, $zero, 127
	beq	$a3, $a4, .LBB170_9
# %bb.3:
	ori	$a4, $zero, 131
	bne	$a3, $a4, .LBB170_12
# %bb.4:
	move	$s0, $a1
	move	$fp, $a2
	move	$s1, $a0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 162
	bne	$a0, $a1, .LBB170_10
# %bb.5:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	b	.LBB170_13
.LBB170_6:
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB170_8
# %bb.7:
	ori	$a4, $zero, 18
	bne	$a3, $a4, .LBB170_12
.LBB170_8:
	ld.d	$a0, $a0, 24
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	b	.LBB170_13
.LBB170_9:
	ld.d	$a3, $a0, 16
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 24
	ld.d	$a4, $a4, 72
	move	$a0, $a3
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1465)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1465)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1494)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1494)
	move	$a0, $s0
	move	$a2, $s1
	b	.LBB170_13
.LBB170_10:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a4, $zero, 163
	move	$a3, $a0
	move	$a0, $s1
	move	$a2, $fp
	move	$a1, $s0
	bne	$a3, $a4, .LBB170_12
# %bb.11:
	ld.d	$a3, $a0, 16
	ld.d	$a3, $a3, 8
	ld.d	$fp, $a0, 24
	move	$a0, $a3
	move	$s0, $a2
	move	$s1, $a1
	pcaddu18i	$ra, %call36(_ZN2kc22f_useoccurlanguagenameEPNS_18impl_languagenamesE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	b	.LBB170_13
.LBB170_12:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB170_13:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end170:
	.size	_ZN2kc24impl_unparseitem_UnpBody10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end170-_ZN2kc24impl_unparseitem_UnpBody10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25impl_unparseitem_UnpCtext10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc25impl_unparseitem_UnpCtext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc25impl_unparseitem_UnpCtext10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc25impl_unparseitem_UnpCtext10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc25impl_unparseitem_UnpCtext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 125
	move	$s0, $a1
	bge	$a3, $a2, .LBB171_7
# %bb.1:
	ori	$a1, $zero, 126
	beq	$a2, $a1, .LBB171_10
# %bb.2:
	ori	$a1, $zero, 127
	beq	$a2, $a1, .LBB171_10
# %bb.3:
	ori	$a1, $zero, 131
	bne	$a2, $a1, .LBB171_17
# %bb.4:
	move	$s1, $a0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 162
	beq	$a0, $a1, .LBB171_16
# %bb.5:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a2, $zero, 163
	move	$a1, $a0
	move	$a0, $s1
	bne	$a1, $a2, .LBB171_17
# %bb.6:
	ld.d	$a0, $a0, 16
	ld.d	$a0, $a0, 8
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	pcaddu18i	$t8, %call36(_ZN2kc22f_useoccurlanguagenameEPNS_18impl_languagenamesE)
	jr	$t8
.LBB171_7:
	ori	$a1, $zero, 5
	beq	$a2, $a1, .LBB171_9
# %bb.8:
	ori	$a1, $zero, 18
	bne	$a2, $a1, .LBB171_17
.LBB171_9:
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB171_18
.LBB171_10:
	ld.d	$s1, $a0, 16
	ld.d	$a1, $s1, 0
	ld.d	$s2, $a0, 24
	ld.d	$a3, $a1, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 163
	bne	$a0, $a1, .LBB171_12
# %bb.11:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1465)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1465)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB171_12:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s3, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s3, 114
	beqz	$a0, .LBB171_14
# %bb.13:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s3, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB171_14:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 163
	bne	$a0, $a1, .LBB171_16
# %bb.15:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1053)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB171_16:                             # %.thread
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
.LBB171_17:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
.LBB171_18:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	jr	$a3
.Lfunc_end171:
	.size	_ZN2kc25impl_unparseitem_UnpCtext10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end171-_ZN2kc25impl_unparseitem_UnpCtext10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_unparseitem_UnpSubexpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_unparseitem_UnpSubexpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_unparseitem_UnpSubexpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_unparseitem_UnpSubexpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_unparseitem_UnpSubexpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 125
	bge	$a4, $a3, .LBB172_6
# %bb.1:
	ori	$a4, $zero, 126
	beq	$a3, $a4, .LBB172_9
# %bb.2:
	ori	$a4, $zero, 127
	beq	$a3, $a4, .LBB172_9
# %bb.3:
	ori	$a4, $zero, 131
	bne	$a3, $a4, .LBB172_16
# %bb.4:
	move	$fp, $a1
	move	$s0, $a2
	move	$s1, $a0
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 162
	bne	$a0, $a1, .LBB172_14
# %bb.5:                                # %.thread
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB172_6:
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB172_12
# %bb.7:
	ori	$a4, $zero, 14
	bne	$a3, $a4, .LBB172_16
# %bb.8:
	ld.d	$a0, $a0, 32
	b	.LBB172_13
.LBB172_9:
	move	$s3, $a1
	move	$s2, $a2
	ld.d	$s1, $a0, 16
	ld.d	$s0, $a0, 24
	pcalau12i	$a1, %pc_hi20(_ZL13operatorstack)
	addi.d	$a2, $a1, %pc_lo12(_ZL13operatorstack)
	ld.d	$a1, $a2, 48
	ld.d	$a3, $a2, 56
	ld.d	$fp, $a0, 32
	bne	$a1, $a3, .LBB172_11
# %bb.10:
	ld.d	$a0, $a2, 72
	ld.d	$a0, $a0, -8
	addi.d	$a1, $a0, 512
.LBB172_11:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a1, $a1, -8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc18f_typeofunpsubtermEPNS_15impl_unpsubtermEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1495)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1495)
	move	$a0, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1496)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1496)
	move	$a0, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1166)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1166)
	move	$a0, $s3
	move	$a2, $s2
	b	.LBB172_17
.LBB172_12:
	ld.d	$a0, $a0, 24
.LBB172_13:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	b	.LBB172_17
.LBB172_14:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a4, $zero, 163
	move	$a3, $a0
	move	$a0, $s1
	move	$a2, $s0
	move	$a1, $fp
	bne	$a3, $a4, .LBB172_16
# %bb.15:
	ld.d	$a0, $a0, 16
	ld.d	$a0, $a0, 8
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc22f_useoccurlanguagenameEPNS_18impl_languagenamesE)
	jr	$t8
.LBB172_16:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB172_17:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end172:
	.size	_ZN2kc27impl_unparseitem_UnpSubexpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end172-_ZN2kc27impl_unparseitem_UnpSubexpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	addi.d	$a3, $a2, -126
	ori	$a4, $zero, 24
	move	$s0, $a1
	bltu	$a4, $a3, .LBB173_5
# %bb.1:
	slli.d	$a1, $a3, 2
	pcalau12i	$a2, %pc_hi20(.LJTI173_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI173_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB173_2:
	pcalau12i	$a1, %got_pc_hi20(pg_languageshavebeendefined)
	ld.d	$a1, $a1, %got_pc_lo12(pg_languageshavebeendefined)
	ld.d	$s1, $a0, 32
	pcalau12i	$a2, %got_pc_hi20(ug_viewnameopt)
	ld.d	$s3, $a2, %got_pc_lo12(ug_viewnameopt)
	ld.bu	$a1, $a1, 0
	ld.d	$s2, $a0, 24
	st.d	$s1, $s3, 0
	beqz	$a1, .LBB173_12
# %bb.3:
	ld.w	$a2, $a0, 8
	pcalau12i	$a1, %pc_hi20(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf_0)
	addi.d	$a3, $a1, %pc_lo12(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf_0)
	pcalau12i	$a1, %pc_hi20(.L.str.331)
	addi.d	$a1, $a1, %pc_lo12(.L.str.331)
	move	$s2, $a0
	move	$a0, $a3
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr_0)
	ld.d	$a2, $a0, %pc_lo12(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr_0)
	ld.w	$a1, $s2, 8
	beq	$a2, $a1, .LBB173_14
# %bb.4:
	ld.d	$a2, $s0, 0
	st.d	$a1, $a0, %pc_lo12(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr_0)
	ld.d	$a3, $a2, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1497)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1497)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf_0)
	addi.d	$a1, $a0, %pc_lo12(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf_0)
	b	.LBB173_11
.LBB173_5:
	ori	$a1, $zero, 5
	beq	$a2, $a1, .LBB173_15
# %bb.6:
	ori	$a1, $zero, 14
	bne	$a2, $a1, .LBB173_19
# %bb.7:
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	b	.LBB173_20
.LBB173_8:
	pcalau12i	$a1, %got_pc_hi20(pg_languageshavebeendefined)
	ld.d	$a1, $a1, %got_pc_lo12(pg_languageshavebeendefined)
	ld.d	$s1, $a0, 32
	pcalau12i	$a2, %got_pc_hi20(ug_viewnameopt)
	ld.d	$s3, $a2, %got_pc_lo12(ug_viewnameopt)
	ld.bu	$a1, $a1, 0
	ld.d	$s2, $a0, 24
	st.d	$s1, $s3, 0
	beqz	$a1, .LBB173_12
# %bb.9:
	ld.w	$a2, $a0, 8
	pcalau12i	$a1, %pc_hi20(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf)
	addi.d	$a3, $a1, %pc_lo12(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf)
	pcalau12i	$a1, %pc_hi20(.L.str.331)
	addi.d	$a1, $a1, %pc_lo12(.L.str.331)
	move	$s2, $a0
	move	$a0, $a3
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr)
	ld.d	$a2, $a0, %pc_lo12(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr)
	ld.w	$a1, $s2, 8
	beq	$a2, $a1, .LBB173_14
# %bb.10:
	ld.d	$a2, $s0, 0
	st.d	$a1, $a0, %pc_lo12(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr)
	ld.d	$a3, $a2, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1497)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1497)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf)
	addi.d	$a1, $a0, %pc_lo12(_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf)
.LBB173_11:                             # %.sink.split78
	pcalau12i	$a0, %pc_hi20(_ZN2kc10base_uviewE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10base_uviewE)
	move	$a0, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1498)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1498)
	b	.LBB173_13
.LBB173_12:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a1, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a0, %pc_hi20(_ZN2kc37view_no_of_printed_string_chars_resetE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc37view_no_of_printed_string_chars_resetE)
	move	$a0, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1500)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1500)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_unpstr_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_gen_unpstr_cE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1501)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1501)
.LBB173_13:                             # %.sink.split78
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1499)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1499)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB173_14:
	st.d	$zero, $s3, 0
.LBB173_15:                             # %.thread
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB173_16:
	ld.d	$a1, $a0, 16
	ld.d	$a2, $a1, 0
	ld.d	$a2, $a2, 0
	move	$s1, $a0
	move	$a0, $a1
	jirl	$ra, $a2, 0
	ori	$a2, $zero, 162
	beq	$a0, $a2, .LBB173_15
# %bb.17:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a2, $zero, 163
	move	$a1, $a0
	move	$a0, $s1
	bne	$a1, $a2, .LBB173_19
# %bb.18:
	ld.d	$a0, $a0, 16
	ld.d	$a0, $a0, 8
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc22f_useoccurlanguagenameEPNS_18impl_languagenamesE)
	jr	$t8
.LBB173_19:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
.LBB173_20:
	move	$a1, $s0
	b	.LBB173_22
.LBB173_21:
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 24
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1423)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1423)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1234)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1234)
	move	$a0, $s0
.LBB173_22:
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB173_23:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc24add_string_to_collectionEPNS_16impl_unparseitemE)
	jr	$t8
.Lfunc_end173:
	.size	_ZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end173-_ZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI173_0:
	.word	.LBB173_2-.LJTI173_0
	.word	.LBB173_8-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_16-.LJTI173_0
	.word	.LBB173_21-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_19-.LJTI173_0
	.word	.LBB173_23-.LJTI173_0
                                        # -- End function
	.text
	.globl	_ZN2kc33impl_unpsubterm_UnpCastedVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_unpsubterm_UnpCastedVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_unpsubterm_UnpCastedVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_unpsubterm_UnpCastedVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_unpsubterm_UnpCastedVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a4, $a2, 0
	ori	$a3, $zero, 5
	beq	$a4, $a3, .LBB174_5
# %bb.1:
	ori	$a3, $zero, 126
	beq	$a4, $a3, .LBB174_3
# %bb.2:
	ori	$a5, $zero, 127
	ori	$a3, $zero, 80
	bne	$a4, $a5, .LBB174_4
.LBB174_3:
	ld.d	$a0, $a0, 16
	ori	$a3, $zero, 72
.LBB174_4:                              # %.sink.split
	ld.d	$a4, $a0, 0
	ldx.d	$a3, $a4, $a3
	jr	$a3
.LBB174_5:
	ret
.Lfunc_end174:
	.size	_ZN2kc33impl_unpsubterm_UnpCastedVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end174-_ZN2kc33impl_unpsubterm_UnpCastedVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_unpsubterm_UnpDollarvarAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_unpsubterm_UnpDollarvarAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_unpsubterm_UnpDollarvarAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 125
	blt	$a3, $a2, .LBB175_12
# %bb.1:
	ori	$a3, $zero, 5
	beq	$a2, $a3, .LBB175_16
# %bb.2:
	ori	$a3, $zero, 11
	bne	$a2, $a3, .LBB175_15
# %bb.3:
	move	$s3, $a1
	ld.d	$s1, $a0, 8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB175_5
# %bb.4:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB175_5:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a2, $a1, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	ld.d	$a1, $a2, 48
	ld.d	$a3, $a2, 56
	bne	$a1, $a3, .LBB175_7
# %bb.6:
	ld.d	$a1, $a2, 72
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
.LBB175_7:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit45
	ld.d	$a2, $s1, 0
	ld.d	$s2, $a0, -8
	ld.d	$s0, $a1, -8
	ld.d	$a1, $a2, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB175_19
# %bb.8:
	ld.d	$a0, $s1, 24
	ld.w	$a0, $a0, 8
	move	$a1, $s3
	beqz	$a0, .LBB175_20
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB175_11
# %bb.10:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB175_11:
	ld.d	$a0, $a0, -8
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2kc20f_argumentofoperatorEPNS_7impl_IDEPNS_8impl_INTE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 0
	ld.d	$a3, $a1, 72
	move	$s1, $a0
	move	$a0, $s2
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	move	$a1, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc20impl_abstract_phylum4freeEb)
	jr	$t8
.LBB175_12:
	ori	$a3, $zero, 126
	beq	$a2, $a3, .LBB175_14
# %bb.13:
	ori	$a3, $zero, 127
	bne	$a2, $a3, .LBB175_15
.LBB175_14:
	ld.d	$a2, $a0, 0
	ld.d	$s0, $a0, 16
	ld.d	$a3, $a2, 72
	pcalau12i	$a2, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	move	$s1, $a1
	b	.LBB175_21
.LBB175_15:
	ld.d	$a2, $a0, 0
	ld.d	$a3, $a2, 80
	b	.LBB175_22
.LBB175_16:
	ld.d	$a3, $a0, 8
	pcalau12i	$a1, %pc_hi20(_ZL16outmostoperators)
	addi.d	$a4, $a1, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a2, $a4, 48
	ld.d	$a5, $a4, 56
	ld.d	$a1, $a0, 16
	bne	$a2, $a5, .LBB175_18
# %bb.17:
	ld.d	$a0, $a4, 72
	ld.d	$a0, $a0, -8
	addi.d	$a2, $a0, 512
.LBB175_18:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a2, $a2, -8
	move	$a0, $a3
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc40v_check_dollarvar_attribute_in_operatorsEPNS_8impl_INTEPNS_18impl_unpattributesEPNS_14impl_operatorsE)
	jr	$t8
.LBB175_19:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 353
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	move	$a1, $s3
.LBB175_20:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$s1, $a1
	move	$a2, $fp
.LBB175_21:
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s1
.LBB175_22:
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end175:
	.size	_ZN2kc32impl_unpsubterm_UnpDollarvarAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end175-_ZN2kc32impl_unpsubterm_UnpDollarvarAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_unpsubterm_UnpSubAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_unpsubterm_UnpSubAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_unpsubterm_UnpSubAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_unpsubterm_UnpSubAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_unpsubterm_UnpSubAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB176_4
# %bb.1:
	ori	$a4, $zero, 126
	beq	$a3, $a4, .LBB176_3
# %bb.2:
	ori	$a4, $zero, 127
	bne	$a3, $a4, .LBB176_8
.LBB176_3:
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$a4, $a4, 72
	move	$a0, $a3
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	b	.LBB176_9
.LBB176_4:
	ld.d	$fp, $a0, 8
	ld.d	$s0, $a0, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc25f_useoccurpatternvariableEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB176_7
# %bb.5:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc25f_phylumofpatternvariableEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB176_7
# %bb.6:
	move	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2kc31f_check_unpattributes_in_phylumEPNS_18impl_unpattributesEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
.LBB176_7:
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2kc23v_syn_type_attribute_IDEPNS_7impl_IDE)
	jr	$t8
.LBB176_8:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB176_9:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end176:
	.size	_ZN2kc26impl_unpsubterm_UnpSubAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end176-_ZN2kc26impl_unpsubterm_UnpSubAttr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_unpsubterm_UnpDollarvarTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_unpsubterm_UnpDollarvarTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_unpsubterm_UnpDollarvarTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_unpsubterm_UnpDollarvarTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_unpsubterm_UnpDollarvarTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 125
	blt	$a4, $a3, .LBB177_12
# %bb.1:
	ori	$a4, $zero, 5
	beq	$a3, $a4, .LBB177_16
# %bb.2:
	ori	$a4, $zero, 11
	bne	$a3, $a4, .LBB177_15
# %bb.3:
	move	$s2, $a2
	move	$s3, $a1
	ld.d	$s0, $a0, 8
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB177_5
# %bb.4:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB177_5:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$a2, $a1, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	ld.d	$a1, $a2, 48
	ld.d	$a3, $a2, 56
	bne	$a1, $a3, .LBB177_7
# %bb.6:
	ld.d	$a1, $a2, 72
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
.LBB177_7:                              # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3topEv.exit38
	ld.d	$a2, $s0, 0
	ld.d	$s1, $a0, -8
	ld.d	$fp, $a1, -8
	ld.d	$a1, $a2, 0
	move	$a0, $s0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 8
	bne	$a0, $a1, .LBB177_19
# %bb.8:
	ld.d	$a0, $s0, 24
	ld.w	$a0, $a0, 8
	move	$a1, $s3
	move	$a2, $s2
	beqz	$a0, .LBB177_20
# %bb.9:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a1, $a0, %pc_lo12(_ZL13operatorstack)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	bne	$a0, $a2, .LBB177_11
# %bb.10:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB177_11:
	ld.d	$a0, $a0, -8
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc20f_argumentofoperatorEPNS_7impl_IDEPNS_8impl_INTE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a3, $a1, 72
	move	$s0, $a0
	move	$a0, $s1
	move	$a1, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $s2
	jirl	$ra, $a3, 0
	move	$a0, $s0
	move	$a1, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc20impl_abstract_phylum4freeEb)
	jr	$t8
.LBB177_12:
	ori	$a4, $zero, 126
	beq	$a3, $a4, .LBB177_14
# %bb.13:
	ori	$a4, $zero, 127
	bne	$a3, $a4, .LBB177_15
.LBB177_14:
	ld.d	$a2, $a0, 0
	ld.d	$a3, $a2, 72
	pcalau12i	$a2, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	b	.LBB177_21
.LBB177_15:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	b	.LBB177_21
.LBB177_16:
	ld.d	$fp, $a0, 8
	pcaddu18i	$ra, %call36(_ZN2kc16NilunpattributesEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL16outmostoperators)
	addi.d	$a3, $a1, %pc_lo12(_ZL16outmostoperators)
	ld.d	$a2, $a3, 48
	ld.d	$a4, $a3, 56
	move	$a1, $a0
	bne	$a2, $a4, .LBB177_18
# %bb.17:
	ld.d	$a0, $a3, 72
	ld.d	$a0, $a0, -8
	addi.d	$a2, $a0, 512
.LBB177_18:                             # %_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEE3topEv.exit
	ld.d	$a2, $a2, -8
	move	$a0, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc40v_check_dollarvar_attribute_in_operatorsEPNS_8impl_INTEPNS_18impl_unpattributesEPNS_14impl_operatorsE)
	jr	$t8
.LBB177_19:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 480
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	move	$a1, $s3
	move	$a2, $s2
.LBB177_20:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
.LBB177_21:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end177:
	.size	_ZN2kc32impl_unpsubterm_UnpDollarvarTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end177-_ZN2kc32impl_unpsubterm_UnpDollarvarTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_unpsubterm_UnpSubTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_unpsubterm_UnpSubTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_unpsubterm_UnpSubTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_unpsubterm_UnpSubTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_unpsubterm_UnpSubTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a4, $a2, 0
	ori	$a3, $zero, 5
	beq	$a4, $a3, .LBB178_5
# %bb.1:
	ori	$a3, $zero, 126
	beq	$a4, $a3, .LBB178_3
# %bb.2:
	ori	$a5, $zero, 127
	ori	$a3, $zero, 80
	bne	$a4, $a5, .LBB178_4
.LBB178_3:
	ld.d	$a0, $a0, 8
	ori	$a3, $zero, 72
.LBB178_4:                              # %.sink.split
	ld.d	$a4, $a0, 0
	ldx.d	$a3, $a4, $a3
	jr	$a3
.LBB178_5:
	ret
.Lfunc_end178:
	.size	_ZN2kc26impl_unpsubterm_UnpSubTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end178-_ZN2kc26impl_unpsubterm_UnpSubTerm10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_unpattributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_unpattributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_unpattributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_unpattributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_unpattributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB179_2
.LBB179_1:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB179_2:
	ld.wu	$a0, $fp, 0
	bstrpick.d	$a0, $a0, 31, 1
	slli.w	$a0, $a0, 1
	ori	$a1, $zero, 126
	bne	$a0, $a1, .LBB179_4
# %bb.3:                                # %.loopexit.sink.split
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1347)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1347)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB179_4:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB179_1
# %bb.5:                                # %.lr.ph
                                        #   in Loop: Header=BB179_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB179_4
.Lfunc_end179:
	.size	_ZN2kc18impl_unpattributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end179-_ZN2kc18impl_unpattributes10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_unpattributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_unpattributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_unpattributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_unpattributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_unpattributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end180:
	.size	_ZN2kc18impl_unpattributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end180-_ZN2kc18impl_unpattributes14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc31impl_viewnameoption_YesViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc31impl_viewnameoption_YesViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc31impl_viewnameoption_YesViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc31impl_viewnameoption_YesViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc31impl_viewnameoption_YesViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 14
	beq	$a3, $a4, .LBB181_4
# %bb.1:
	ori	$a4, $zero, 126
	beq	$a3, $a4, .LBB181_3
# %bb.2:
	ori	$a4, $zero, 127
	bne	$a3, $a4, .LBB181_6
.LBB181_3:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a3
.LBB181_4:
	ld.d	$fp, $a0, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc12is_uview_varEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB181_7
# %bb.5:
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB181_6:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	jr	$a3
.LBB181_7:
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZN2kc19f_useoccuruviewnameEPNS_7impl_IDE)
	jr	$t8
.Lfunc_end181:
	.size	_ZN2kc31impl_viewnameoption_YesViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end181-_ZN2kc31impl_viewnameoption_YesViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_viewnameoption_NoViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_viewnameoption_NoViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_viewnameoption_NoViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_viewnameoption_NoViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_viewnameoption_NoViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.wu	$a0, $a2, 0
	bstrpick.d	$a0, $a0, 31, 1
	slli.w	$a0, $a0, 1
	ori	$a3, $zero, 126
	bne	$a0, $a3, .LBB182_2
# %bb.1:                                # %.sink.split
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1502)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1502)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB182_2:
	ret
.Lfunc_end182:
	.size	_ZN2kc30impl_viewnameoption_NoViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end182-_ZN2kc30impl_viewnameoption_NoViewname10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_languageoption_LanguageList10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_languageoption_LanguageList10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_languageoption_LanguageList10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_languageoption_LanguageList10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_languageoption_LanguageList10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 126
	beq	$a3, $a4, .LBB183_2
# %bb.1:
	ori	$a4, $zero, 127
	bne	$a3, $a4, .LBB183_3
.LBB183_2:
	ld.d	$a3, $a1, 0
	ld.d	$fp, $a0, 8
	ld.d	$a4, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1503)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1503)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1504)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1504)
	move	$a0, $s0
	move	$a2, $s1
	b	.LBB183_4
.LBB183_3:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
.LBB183_4:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end183:
	.size	_ZN2kc32impl_languageoption_LanguageList10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end183-_ZN2kc32impl_languageoption_LanguageList10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc34impl_languageoption_NoLanguagename10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc34impl_languageoption_NoLanguagename10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc34impl_languageoption_NoLanguagename10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc34impl_languageoption_NoLanguagename10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc34impl_languageoption_NoLanguagename10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end184:
	.size	_ZN2kc34impl_languageoption_NoLanguagename10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end184-_ZN2kc34impl_languageoption_NoLanguagename10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc18impl_languagenames10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_languagenames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_languagenames10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_languagenames10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_languagenames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB185_2
.LBB185_1:                              # %.loopexit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB185_2:
	ld.w	$a1, $fp, 0
	ld.d	$a0, $s1, 16
	ori	$a2, $zero, 119
	beq	$a1, $a2, .LBB185_9
# %bb.3:
	ori	$a2, $zero, 126
	beq	$a1, $a2, .LBB185_5
# %bb.4:
	ori	$a2, $zero, 127
	bne	$a1, $a2, .LBB185_13
.LBB185_5:
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 8
	ori	$a1, $zero, 164
	bne	$a0, $a1, .LBB185_7
# %bb.6:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1505)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1505)
	b	.LBB185_8
.LBB185_7:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1506)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1506)
.LBB185_8:                              # %.loopexit.sink.split
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10base_uviewE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10base_uviewE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	b	.LBB185_12
.LBB185_9:
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 8
	ori	$a1, $zero, 164
	beq	$a0, $a1, .LBB185_11
# %bb.10:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB185_11:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1507)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1507)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1508)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1508)
.LBB185_12:                             # %.loopexit.sink.split
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB185_13:                             # %.preheader
	beqz	$a0, .LBB185_1
	.p2align	4, , 16
.LBB185_14:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB185_14
	b	.LBB185_1
.Lfunc_end185:
	.size	_ZN2kc18impl_languagenames10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end185-_ZN2kc18impl_languagenames10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_languagenames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_languagenames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_languagenames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_languagenames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_languagenames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end186:
	.size	_ZN2kc18impl_languagenames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end186-_ZN2kc18impl_languagenames14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc27impl_fileline_PosNoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_fileline_PosNoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_fileline_PosNoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_fileline_PosNoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_fileline_PosNoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	ld.w	$a0, $a2, 0
	ori	$a2, $zero, 1
	beq	$a0, $a2, .LBB187_6
# %bb.1:
	move	$s0, $a1
	ori	$a1, $zero, 3
	bne	$a0, $a1, .LBB187_10
# %bb.2:
	pcalau12i	$a0, %got_pc_hi20(pg_lineno)
	ld.d	$s1, $a0, %got_pc_lo12(pg_lineno)
	ld.w	$a0, $s1, 0
	beqz	$a0, .LBB187_10
# %bb.3:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1509)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1509)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(pg_filename)
	ld.d	$a0, $a0, %got_pc_lo12(pg_filename)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 8
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB187_5
# %bb.4:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB187_5:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.340)
	addi.d	$a1, $a0, %pc_lo12(.L.str.340)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	move	$a1, $s1
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1510)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1510)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(pg_column)
	ld.d	$a0, $a0, %got_pc_lo12(pg_column)
	ld.w	$a2, $a0, 0
	addi.d	$a0, $sp, 8
	move	$a1, $s1
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB187_10
.LBB187_6:
	pcalau12i	$a0, %got_pc_hi20(pg_lineno)
	ld.d	$s0, $a0, %got_pc_lo12(pg_lineno)
	ld.w	$a2, $s0, 0
	beqz	$a2, .LBB187_10
# %bb.7:
	pcalau12i	$a0, %got_pc_hi20(pg_filename)
	ld.d	$a0, $a0, %got_pc_lo12(pg_filename)
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 8
	ld.bu	$a0, $a3, 0
	beqz	$a0, .LBB187_9
# %bb.8:
	pcalau12i	$a0, %pc_hi20(.L.str.1621)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1621)
	move	$a0, $fp
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.w	$a2, $s0, 0
.LBB187_9:
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s0, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	move	$a1, $s0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1624)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1624)
	addi.d	$a2, $sp, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(pg_column)
	ld.d	$a0, $a0, %got_pc_lo12(pg_column)
	ld.w	$a2, $a0, 0
	addi.d	$a0, $sp, 8
	move	$a1, $s0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1625)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1625)
	addi.d	$a2, $sp, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
.LBB187_10:
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.Lfunc_end187:
	.size	_ZN2kc27impl_fileline_PosNoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end187-_ZN2kc27impl_fileline_PosNoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_fileline_NoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_fileline_NoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_fileline_NoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_fileline_NoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_fileline_NoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	ld.w	$a0, $a2, 0
	ori	$a2, $zero, 1
	beq	$a0, $a2, .LBB188_6
# %bb.1:
	move	$s0, $a1
	ori	$a1, $zero, 3
	bne	$a0, $a1, .LBB188_10
# %bb.2:
	pcalau12i	$a0, %got_pc_hi20(pg_lineno)
	ld.d	$s1, $a0, %got_pc_lo12(pg_lineno)
	ld.w	$a0, $s1, 0
	beqz	$a0, .LBB188_10
# %bb.3:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1509)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1509)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(pg_filename)
	ld.d	$a0, $a0, %got_pc_lo12(pg_filename)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 8
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB188_5
# %bb.4:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB188_5:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.340)
	addi.d	$a1, $a0, %pc_lo12(.L.str.340)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB188_10
.LBB188_6:
	pcalau12i	$a0, %got_pc_hi20(pg_lineno)
	ld.d	$s0, $a0, %got_pc_lo12(pg_lineno)
	ld.w	$a2, $s0, 0
	beqz	$a2, .LBB188_10
# %bb.7:
	pcalau12i	$a0, %got_pc_hi20(pg_filename)
	ld.d	$a0, $a0, %got_pc_lo12(pg_filename)
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 8
	ld.bu	$a0, $a3, 0
	beqz	$a0, .LBB188_9
# %bb.8:
	pcalau12i	$a0, %pc_hi20(.L.str.1621)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1621)
	move	$a0, $fp
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.w	$a2, $s0, 0
.LBB188_9:
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1624)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1624)
	addi.d	$a2, $sp, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
.LBB188_10:
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.Lfunc_end188:
	.size	_ZN2kc24impl_fileline_NoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end188-_ZN2kc24impl_fileline_NoFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_fileline_FileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_fileline_FileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_fileline_FileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_fileline_FileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_fileline_FileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 1
	move	$s1, $a0
	beq	$a2, $a3, .LBB189_6
# %bb.1:
	ori	$a0, $zero, 3
	bne	$a2, $a0, .LBB189_18
# %bb.2:
	move	$s0, $a1
	ld.w	$a0, $s1, 16
	beqz	$a0, .LBB189_9
# %bb.3:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1509)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1509)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 8
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB189_5
# %bb.4:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB189_5:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.340)
	addi.d	$a1, $a0, %pc_lo12(.L.str.340)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 16
	b	.LBB189_13
.LBB189_6:
	ld.w	$a2, $s1, 16
	beqz	$a2, .LBB189_14
# %bb.7:
	ld.d	$a0, $s1, 8
	ld.d	$a3, $a0, 8
	ld.bu	$a0, $a3, 0
	beqz	$a0, .LBB189_17
# %bb.8:
	pcalau12i	$a0, %pc_hi20(.L.str.1621)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1621)
	move	$a0, $fp
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.w	$a2, $s1, 16
	b	.LBB189_17
.LBB189_9:
	pcalau12i	$a0, %got_pc_hi20(pg_lineno)
	ld.d	$s1, $a0, %got_pc_lo12(pg_lineno)
	ld.w	$a0, $s1, 0
	beqz	$a0, .LBB189_18
# %bb.10:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1509)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1509)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(pg_filename)
	ld.d	$a0, $a0, %got_pc_lo12(pg_filename)
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a0, 8
	ld.bu	$a1, $a1, 0
	beqz	$a1, .LBB189_12
# %bb.11:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB189_12:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.340)
	addi.d	$a1, $a0, %pc_lo12(.L.str.340)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 0
.LBB189_13:
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB189_18
.LBB189_14:
	pcalau12i	$a0, %got_pc_hi20(pg_lineno)
	ld.d	$s0, $a0, %got_pc_lo12(pg_lineno)
	ld.w	$a2, $s0, 0
	beqz	$a2, .LBB189_18
# %bb.15:
	pcalau12i	$a0, %got_pc_hi20(pg_filename)
	ld.d	$a0, $a0, %got_pc_lo12(pg_filename)
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 8
	ld.bu	$a0, $a3, 0
	beqz	$a0, .LBB189_17
# %bb.16:
	pcalau12i	$a0, %pc_hi20(.L.str.1621)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1621)
	move	$a0, $fp
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.w	$a2, $s0, 0
.LBB189_17:
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1624)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1624)
	addi.d	$a2, $sp, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
.LBB189_18:
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.Lfunc_end189:
	.size	_ZN2kc22impl_fileline_FileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end189-_ZN2kc22impl_fileline_FileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_scopetypefilelinestack10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_scopetypefilelinestack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestack10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_scopetypefilelinestack10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_scopetypefilelinestack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB190_2
	b	.LBB190_3
	.p2align	4, , 16
.LBB190_1:                              # %.lr.ph
                                        #   in Loop: Header=BB190_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB190_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB190_1
.LBB190_3:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end190:
	.size	_ZN2kc27impl_scopetypefilelinestack10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end190-_ZN2kc27impl_scopetypefilelinestack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_scopetypefilelinestack14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_scopetypefilelinestack14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_scopetypefilelinestack14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_scopetypefilelinestack14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_scopetypefilelinestack14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end191:
	.size	_ZN2kc27impl_scopetypefilelinestack14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end191-_ZN2kc27impl_scopetypefilelinestack14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc40impl_scopetypefileline_ScopeTypeFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end192:
	.size	_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end192-_ZN2kc40impl_scopetypefileline_ScopeTypeFileLine10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITLanguageName10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_IDtype_ITLanguageName10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITLanguageName10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_IDtype_ITLanguageName10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_IDtype_ITLanguageName10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end193:
	.size	_ZN2kc26impl_IDtype_ITLanguageName10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end193-_ZN2kc26impl_IDtype_ITLanguageName10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc29impl_IDtype_ITPatternVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc29impl_IDtype_ITPatternVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc29impl_IDtype_ITPatternVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc29impl_IDtype_ITPatternVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc29impl_IDtype_ITPatternVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB194_3
# %bb.1:
	ori	$a4, $zero, 4
	bne	$a3, $a4, .LBB194_4
# %bb.2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a1, 0
	ld.d	$a4, $a3, 0
	pcalau12i	$a3, %pc_hi20(.L.str.1511)
	addi.d	$a3, $a3, %pc_lo12(.L.str.1511)
	move	$fp, $a0
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $fp
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB194_3:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1512)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1512)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB194_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end194:
	.size	_ZN2kc29impl_IDtype_ITPatternVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end194-_ZN2kc29impl_IDtype_ITPatternVariable10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITUserFunction10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_IDtype_ITUserFunction10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITUserFunction10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_IDtype_ITUserFunction10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_IDtype_ITUserFunction10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB195_3
# %bb.1:
	ori	$a4, $zero, 4
	bne	$a3, $a4, .LBB195_4
# %bb.2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a1, 0
	ld.d	$a4, $a3, 0
	pcalau12i	$a3, %pc_hi20(.L.str.1511)
	addi.d	$a3, $a3, %pc_lo12(.L.str.1511)
	move	$fp, $a0
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $fp
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB195_3:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1513)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1513)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB195_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end195:
	.size	_ZN2kc26impl_IDtype_ITUserFunction10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end195-_ZN2kc26impl_IDtype_ITUserFunction10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_IDtype_ITUserRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_IDtype_ITUserRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_IDtype_ITUserRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_IDtype_ITUserRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_IDtype_ITUserRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	move	$fp, $a1
	beq	$a3, $a4, .LBB196_3
# %bb.1:
	ori	$a1, $zero, 4
	bne	$a3, $a1, .LBB196_5
# %bb.2:
	ld.d	$a1, $fp, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1511)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1511)
	move	$s1, $a0
	move	$a0, $fp
	move	$s0, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	move	$a2, $s0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	b	.LBB196_4
.LBB196_3:
	pcalau12i	$a0, %pc_hi20(.L.str.1514)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1514)
.LBB196_4:                              # %.sink.split
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB196_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end196:
	.size	_ZN2kc23impl_IDtype_ITUserRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end196-_ZN2kc23impl_IDtype_ITUserRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc29impl_IDtype_ITPredefinedRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc29impl_IDtype_ITPredefinedRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc29impl_IDtype_ITPredefinedRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc29impl_IDtype_ITPredefinedRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc29impl_IDtype_ITPredefinedRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	move	$fp, $a1
	beq	$a3, $a4, .LBB197_3
# %bb.1:
	ori	$a1, $zero, 4
	bne	$a3, $a1, .LBB197_5
# %bb.2:
	ld.d	$a1, $fp, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1511)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1511)
	move	$s1, $a0
	move	$a0, $fp
	move	$s0, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	move	$a2, $s0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	b	.LBB197_4
.LBB197_3:
	pcalau12i	$a0, %pc_hi20(.L.str.1515)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1515)
.LBB197_4:                              # %.sink.split
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB197_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end197:
	.size	_ZN2kc29impl_IDtype_ITPredefinedRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end197-_ZN2kc29impl_IDtype_ITPredefinedRView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_IDtype_ITUViewVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_IDtype_ITUViewVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_IDtype_ITUViewVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_IDtype_ITUViewVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_IDtype_ITUViewVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end198:
	.size	_ZN2kc22impl_IDtype_ITUViewVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end198-_ZN2kc22impl_IDtype_ITUViewVar10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc23impl_IDtype_ITUserUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_IDtype_ITUserUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_IDtype_ITUserUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_IDtype_ITUserUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_IDtype_ITUserUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	move	$fp, $a1
	beq	$a3, $a4, .LBB199_3
# %bb.1:
	ori	$a1, $zero, 4
	bne	$a3, $a1, .LBB199_5
# %bb.2:
	ld.d	$a1, $fp, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1511)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1511)
	move	$s1, $a0
	move	$a0, $fp
	move	$s0, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	move	$a2, $s0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	b	.LBB199_4
.LBB199_3:
	pcalau12i	$a0, %pc_hi20(.L.str.1516)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1516)
.LBB199_4:                              # %.sink.split
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB199_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end199:
	.size	_ZN2kc23impl_IDtype_ITUserUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end199-_ZN2kc23impl_IDtype_ITUserUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc29impl_IDtype_ITPredefinedUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc29impl_IDtype_ITPredefinedUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc29impl_IDtype_ITPredefinedUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc29impl_IDtype_ITPredefinedUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc29impl_IDtype_ITPredefinedUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	move	$fp, $a1
	beq	$a3, $a4, .LBB200_3
# %bb.1:
	ori	$a1, $zero, 4
	bne	$a3, $a1, .LBB200_5
# %bb.2:
	ld.d	$a1, $fp, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1511)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1511)
	move	$s1, $a0
	move	$a0, $fp
	move	$s0, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	move	$a2, $s0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	b	.LBB200_4
.LBB200_3:
	pcalau12i	$a0, %pc_hi20(.L.str.1517)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1517)
.LBB200_4:                              # %.sink.split
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB200_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end200:
	.size	_ZN2kc29impl_IDtype_ITPredefinedUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end200-_ZN2kc29impl_IDtype_ITPredefinedUView10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_IDtype_ITStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_IDtype_ITStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_IDtype_ITStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	move	$fp, $a1
	beq	$a3, $a4, .LBB201_3
# %bb.1:
	ori	$a1, $zero, 4
	bne	$a3, $a1, .LBB201_5
# %bb.2:
	ld.d	$a1, $fp, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1511)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1511)
	move	$s1, $a0
	move	$a0, $fp
	move	$s0, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	move	$a2, $s0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	b	.LBB201_4
.LBB201_3:
	pcalau12i	$a0, %pc_hi20(.L.str.1518)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1518)
.LBB201_4:                              # %.sink.split
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB201_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end201:
	.size	_ZN2kc26impl_IDtype_ITStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end201-_ZN2kc26impl_IDtype_ITStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc36impl_IDtype_ITPredefinedStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc36impl_IDtype_ITPredefinedStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc36impl_IDtype_ITPredefinedStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc36impl_IDtype_ITPredefinedStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc36impl_IDtype_ITPredefinedStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	move	$fp, $a1
	beq	$a3, $a4, .LBB202_3
# %bb.1:
	ori	$a1, $zero, 4
	bne	$a3, $a1, .LBB202_5
# %bb.2:
	ld.d	$a1, $fp, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1511)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1511)
	move	$s1, $a0
	move	$a0, $fp
	move	$s0, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	move	$a2, $s0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	b	.LBB202_4
.LBB202_3:
	pcalau12i	$a0, %pc_hi20(.L.str.1519)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1519)
.LBB202_4:                              # %.sink.split
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB202_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end202:
	.size	_ZN2kc36impl_IDtype_ITPredefinedStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end202-_ZN2kc36impl_IDtype_ITPredefinedStorageClass10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_IDtype_ITUserOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_IDtype_ITUserOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_IDtype_ITUserOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_IDtype_ITUserOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_IDtype_ITUserOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB203_3
# %bb.1:
	ori	$a4, $zero, 4
	bne	$a3, $a4, .LBB203_4
# %bb.2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a1, 0
	ld.d	$a4, $a3, 0
	pcalau12i	$a3, %pc_hi20(.L.str.1520)
	addi.d	$a3, $a3, %pc_lo12(.L.str.1520)
	move	$fp, $a0
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $fp
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB203_3:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1420)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1420)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB203_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end203:
	.size	_ZN2kc26impl_IDtype_ITUserOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end203-_ZN2kc26impl_IDtype_ITUserOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_IDtype_ITPredefinedOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_IDtype_ITPredefinedOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_IDtype_ITPredefinedOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_IDtype_ITPredefinedOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_IDtype_ITPredefinedOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB204_3
# %bb.1:
	ori	$a4, $zero, 4
	bne	$a3, $a4, .LBB204_4
# %bb.2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a1, 0
	ld.d	$a4, $a3, 0
	pcalau12i	$a3, %pc_hi20(.L.str.1511)
	addi.d	$a3, $a3, %pc_lo12(.L.str.1511)
	move	$fp, $a0
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $fp
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB204_3:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1521)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1521)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB204_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end204:
	.size	_ZN2kc32impl_IDtype_ITPredefinedOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end204-_ZN2kc32impl_IDtype_ITPredefinedOperator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_IDtype_ITUserPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_IDtype_ITUserPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_IDtype_ITUserPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_IDtype_ITUserPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_IDtype_ITUserPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB205_3
# %bb.1:
	ori	$a4, $zero, 4
	bne	$a3, $a4, .LBB205_4
# %bb.2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a1, 0
	ld.d	$a4, $a3, 0
	pcalau12i	$a3, %pc_hi20(.L.str.1511)
	addi.d	$a3, $a3, %pc_lo12(.L.str.1511)
	move	$fp, $a0
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $fp
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB205_3:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1522)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1522)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB205_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end205:
	.size	_ZN2kc24impl_IDtype_ITUserPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end205-_ZN2kc24impl_IDtype_ITUserPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_IDtype_ITPredefinedPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_IDtype_ITPredefinedPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_IDtype_ITPredefinedPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_IDtype_ITPredefinedPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_IDtype_ITPredefinedPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	beq	$a3, $a4, .LBB206_3
# %bb.1:
	ori	$a4, $zero, 4
	bne	$a3, $a4, .LBB206_4
# %bb.2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a1, 0
	ld.d	$a4, $a3, 0
	pcalau12i	$a3, %pc_hi20(.L.str.1511)
	addi.d	$a3, $a3, %pc_lo12(.L.str.1511)
	move	$fp, $a0
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $fp
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB206_3:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1523)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1523)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB206_4:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end206:
	.size	_ZN2kc30impl_IDtype_ITPredefinedPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end206-_ZN2kc30impl_IDtype_ITPredefinedPhylum10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_IDtype_ITUnknown10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_IDtype_ITUnknown10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_IDtype_ITUnknown10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_IDtype_ITUnknown10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_IDtype_ITUnknown10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end207:
	.size	_ZN2kc21impl_IDtype_ITUnknown10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end207-_ZN2kc21impl_IDtype_ITUnknown10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc14impl_operators10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_operators10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_operators10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_operators10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_operators10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB208_2
	b	.LBB208_3
	.p2align	4, , 16
.LBB208_1:                              # %.lr.ph
                                        #   in Loop: Header=BB208_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB208_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB208_1
.LBB208_3:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end208:
	.size	_ZN2kc14impl_operators10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end208-_ZN2kc14impl_operators10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_operators14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_operators14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_operators14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_operators14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_operators14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end209:
	.size	_ZN2kc14impl_operators14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end209-_ZN2kc14impl_operators14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc10impl_phyla10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc10impl_phyla10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc10impl_phyla10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc10impl_phyla10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc10impl_phyla10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB210_6
# %bb.1:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 77
	beq	$a0, $a1, .LBB210_7
# %bb.2:
	ori	$a1, $zero, 76
	bne	$a0, $a1, .LBB210_5
# %bb.3:
	pcalau12i	$a0, %pc_hi20(.L.str.329)
	addi.d	$a0, $a0, %pc_lo12(.L.str.329)
	pcalau12i	$a1, %pc_hi20(.L.str.1528)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1528)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 1588
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB210_4:                              # %.lr.ph
                                        #   in Loop: Header=BB210_5 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB210_5:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB210_4
.LBB210_6:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB210_7:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1524)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1524)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1525)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1525)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1526)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1526)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1527)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1527)
	move	$a0, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end210:
	.size	_ZN2kc10impl_phyla10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end210-_ZN2kc10impl_phyla10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_phyla14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc10impl_phyla14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc10impl_phyla14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc10impl_phyla14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc10impl_phyla14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end211:
	.size	_ZN2kc10impl_phyla14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end211-_ZN2kc10impl_phyla14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc14impl_variables10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_variables10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_variables10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_variables10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_variables10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB212_2
	b	.LBB212_3
	.p2align	4, , 16
.LBB212_1:                              # %.lr.ph
                                        #   in Loop: Header=BB212_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB212_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB212_1
.LBB212_3:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end212:
	.size	_ZN2kc14impl_variables10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end212-_ZN2kc14impl_variables10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc14impl_variables14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc14impl_variables14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc14impl_variables14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc14impl_variables14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc14impl_variables14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end213:
	.size	_ZN2kc14impl_variables14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end213-_ZN2kc14impl_variables14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc33impl_dollarvarstatus_DVDisallowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_dollarvarstatus_DVDisallowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_dollarvarstatus_DVDisallowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_dollarvarstatus_DVDisallowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_dollarvarstatus_DVDisallowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end214:
	.size	_ZN2kc33impl_dollarvarstatus_DVDisallowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end214-_ZN2kc33impl_dollarvarstatus_DVDisallowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc30impl_dollarvarstatus_DVAllowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_dollarvarstatus_DVAllowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_dollarvarstatus_DVAllowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_dollarvarstatus_DVAllowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_dollarvarstatus_DVAllowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end215:
	.size	_ZN2kc30impl_dollarvarstatus_DVAllowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end215-_ZN2kc30impl_dollarvarstatus_DVAllowed10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc19impl_tribool_Bigger10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_tribool_Bigger10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_tribool_Bigger10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_tribool_Bigger10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_tribool_Bigger10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end216:
	.size	_ZN2kc19impl_tribool_Bigger10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end216-_ZN2kc19impl_tribool_Bigger10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc20impl_tribool_Smaller10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc20impl_tribool_Smaller10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc20impl_tribool_Smaller10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc20impl_tribool_Smaller10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc20impl_tribool_Smaller10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end217:
	.size	_ZN2kc20impl_tribool_Smaller10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end217-_ZN2kc20impl_tribool_Smaller10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc18impl_tribool_Equal10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_tribool_Equal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_tribool_Equal10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_tribool_Equal10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_tribool_Equal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end218:
	.size	_ZN2kc18impl_tribool_Equal10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end218-_ZN2kc18impl_tribool_Equal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc27impl_patternrepresentations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_patternrepresentations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_patternrepresentations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_patternrepresentations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB219_2
	b	.LBB219_3
	.p2align	4, , 16
.LBB219_1:                              # %.lr.ph
                                        #   in Loop: Header=BB219_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB219_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB219_1
.LBB219_3:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end219:
	.size	_ZN2kc27impl_patternrepresentations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end219-_ZN2kc27impl_patternrepresentations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_patternrepresentations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_patternrepresentations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_patternrepresentations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_patternrepresentations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_patternrepresentations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end220:
	.size	_ZN2kc27impl_patternrepresentations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end220-_ZN2kc27impl_patternrepresentations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc26impl_patternrepresentation10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_patternrepresentation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentation10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_patternrepresentation10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_patternrepresentation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB221_12
# %bb.1:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 102
	beq	$a0, $a1, .LBB221_4
# %bb.2:
	ori	$a1, $zero, 103
	beq	$a0, $a1, .LBB221_4
# %bb.3:
	ori	$a1, $zero, 104
	bne	$a0, $a1, .LBB221_7
.LBB221_4:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 205
	bne	$a0, $s2, .LBB221_9
# %bb.5:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 200
	bne	$a0, $a1, .LBB221_9
# %bb.6:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $s0, 0
	ld.d	$s1, $a0, 32
	ld.w	$a0, $fp, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_113gl_outer_viewE)
	st.w	$a0, $a1, %pc_lo12(_ZN12_GLOBAL__N_113gl_outer_viewE)
	pcalau12i	$a0, %pc_hi20(.L.str.1529)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1529)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_user_predicatesE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_user_predicatesE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1530)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1530)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1211)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1211)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1531)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1531)
	b	.LBB221_11
	.p2align	4, , 16
.LBB221_7:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB221_12
# %bb.8:                                # %.lr.ph
                                        #   in Loop: Header=BB221_7 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB221_7
.LBB221_9:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB221_13
# %bb.10:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $s1, 8
	ld.d	$a2, $a0, 0
	ld.d	$s1, $a1, 32
	ld.w	$a1, $fp, 0
	ld.d	$a3, $a2, 72
	pcalau12i	$a2, %pc_hi20(_ZN12_GLOBAL__N_113gl_outer_viewE)
	st.w	$a1, $a2, %pc_lo12(_ZN12_GLOBAL__N_113gl_outer_viewE)
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1532)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1532)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_user_predicatesE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_user_predicatesE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1530)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1530)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1211)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1211)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1533)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1533)
.LBB221_11:                             # %.loopexit
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB221_12:                             # %.loopexit
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB221_13:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 8
	ori	$a2, $zero, 200
	bne	$a0, $a2, .LBB221_15
# %bb.14:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $a1
	b	.LBB221_16
.LBB221_15:
	ld.d	$a0, $a1, 0
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a0, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1534)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1534)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
.LBB221_16:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	jr	$a3
.Lfunc_end221:
	.size	_ZN2kc26impl_patternrepresentation10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end221-_ZN2kc26impl_patternrepresentation10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_patternrepresentation14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_patternrepresentation14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_patternrepresentation14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_patternrepresentation14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_patternrepresentation14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end222:
	.size	_ZN2kc26impl_patternrepresentation14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end222-_ZN2kc26impl_patternrepresentation14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc44impl_elem_patternrepresentation_PRIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a0, $a0, 32
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 0
	move	$s0, $a2
	move	$s1, $a1
	jirl	$ra, $a3, 0
	ori	$a2, $zero, 212
	ori	$a1, $zero, 80
	bne	$a0, $a2, .LBB223_2
# %bb.1:
	ld.d	$s2, $fp, 32
	ld.d	$a0, $s1, 0
	ld.d	$s3, $s2, 32
	ld.d	$fp, $fp, 40
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc13view_gen_castE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc13view_gen_castE)
	move	$a0, $s3
	move	$a1, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1535)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1535)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ori	$a1, $zero, 72
.LBB223_2:
	ld.d	$a0, $fp, 0
	ldx.d	$a3, $a0, $a1
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end223:
	.size	_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end223-_ZN2kc44impl_elem_patternrepresentation_PRIntLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PRStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a0
	ld.d	$a0, $a0, 32
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 0
	move	$fp, $a2
	move	$s0, $a1
	jirl	$ra, $a3, 0
	ori	$a1, $zero, 212
	bne	$a0, $a1, .LBB224_4
# %bb.1:
	ld.d	$s2, $s1, 32
	ld.d	$s3, $s2, 32
	ld.d	$s1, $s1, 40
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc8f_typeofEPNS_9impl_pathE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc9f_strofIDEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1416)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1416)
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB224_3
# %bb.2:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc8f_typeofEPNS_9impl_pathE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc9f_strofIDEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1417)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1417)
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB224_6
.LBB224_3:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1536)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1536)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc13view_gen_castE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc13view_gen_castE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1537)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1537)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1538)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1538)
	move	$a0, $s0
	b	.LBB224_5
.LBB224_4:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 80
	move	$a0, $s1
	move	$a1, $s0
.LBB224_5:
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB224_6:
	pcalau12i	$a0, %pc_hi20(.L.str.329)
	addi.d	$a0, $a0, %pc_lo12(.L.str.329)
	pcalau12i	$a1, %pc_hi20(.L.str.1539)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1539)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 1991
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
.Lfunc_end224:
	.size	_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end224-_ZN2kc47impl_elem_patternrepresentation_PRStringLiteral10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc41impl_elem_patternrepresentation_PRDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc41impl_elem_patternrepresentation_PRDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc41impl_elem_patternrepresentation_PRDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc41impl_elem_patternrepresentation_PRDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc41impl_elem_patternrepresentation_PRDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1540)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1540)
	jr	$a3
.Lfunc_end225:
	.size	_ZN2kc41impl_elem_patternrepresentation_PRDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end225-_ZN2kc41impl_elem_patternrepresentation_PRDefault10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc42impl_elem_patternrepresentation_PRWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc42impl_elem_patternrepresentation_PRWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc42impl_elem_patternrepresentation_PRWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc42impl_elem_patternrepresentation_PRWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc42impl_elem_patternrepresentation_PRWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1540)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1540)
	jr	$a3
.Lfunc_end226:
	.size	_ZN2kc42impl_elem_patternrepresentation_PRWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end226-_ZN2kc42impl_elem_patternrepresentation_PRWildcard10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 130
	move	$s0, $a1
	move	$s3, $a0
	bne	$a2, $a3, .LBB227_9
# %bb.1:
	ld.d	$a0, $s3, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB227_9
# %bb.2:
	ld.d	$a0, $s3, 40
	ld.d	$a0, $a0, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 6
	bne	$a0, $a1, .LBB227_9
# %bb.3:
	ld.d	$a0, $s3, 40
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 40
	ld.d	$fp, $a0, 8
	ld.d	$s2, $s3, 32
	addi.d	$s1, $sp, 32
	st.d	$s1, $sp, 16
	beqz	$fp, .LBB227_23
# %bb.4:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 8
	move	$a0, $s1
	bltu	$s0, $a1, .LBB227_6
# %bb.5:                                # %.noexc.i
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB227_6:                              # %._crit_edge.i.i
	beqz	$s0, .LBB227_20
# %bb.7:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s0, $a1, .LBB227_19
# %bb.8:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB227_20
.LBB227_9:                              # %.thread
	ld.d	$s1, $s3, 32
	ld.d	$s2, $s3, 40
	ld.d	$s4, $s3, 24
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB227_11
# %bb.10:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc8f_typeofEPNS_9impl_pathE)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s4, 114
	bnez	$a0, .LBB227_12
	b	.LBB227_13
.LBB227_11:
	ld.d	$s3, $s3, 24
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s4, 114
	beqz	$a0, .LBB227_13
.LBB227_12:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 24
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB227_13:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1541)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1541)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1214)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1214)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 212
	bne	$a0, $a1, .LBB227_15
# %bb.14:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_gen_castE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_gen_castE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	b	.LBB227_17
.LBB227_15:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 211
	beq	$a0, $a1, .LBB227_17
# %bb.16:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 2089
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
.LBB227_17:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB227_18:
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB227_19:
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB227_20:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 24
	stx.b	$zero, $a1, $a0
.Ltmp313:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_)
	jirl	$ra, $ra, 0
.Ltmp314:
# %bb.21:
	st.d	$s2, $a0, 0
	ld.d	$a0, $sp, 16
	beq	$a0, $s1, .LBB227_18
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB227_18
.LBB227_23:                             # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.1628)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1628)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.LBB227_24:
.Ltmp315:
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s1, .LBB227_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i50
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB227_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit52
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end227:
	.size	_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end227-_ZN2kc48impl_elem_patternrepresentation_PRNonLeafBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table227:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Lfunc_begin3-.Lfunc_begin3    # >> Call Site 1 <<
	.uleb128 .Ltmp313-.Lfunc_begin3         #   Call between .Lfunc_begin3 and .Ltmp313
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp313-.Lfunc_begin3         # >> Call Site 2 <<
	.uleb128 .Ltmp314-.Ltmp313              #   Call between .Ltmp313 and .Ltmp314
	.uleb128 .Ltmp315-.Lfunc_begin3         #     jumps to .Ltmp315
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp314-.Lfunc_begin3         # >> Call Site 3 <<
	.uleb128 .Lfunc_end227-.Ltmp314         #   Call between .Ltmp314 and .Lfunc_end227
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end3:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_,comdat
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_ # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_
	.p2align	5
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	ld.d	$s7, $a0, 16
	move	$s8, $a1
	addi.d	$s2, $a0, 8
	beqz	$s7, .LBB228_11
# %bb.1:                                # %.lr.ph.i.i.i
	st.d	$s0, $sp, 16                    # 8-byte Folded Spill
	ld.d	$s6, $s8, 8
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s3, $s8, 0
	lu12i.w	$s5, -524288
	lu12i.w	$a0, 524287
	ori	$s4, $a0, 4095
	ori	$s8, $zero, 16
	ori	$s0, $zero, 24
	move	$s1, $s2
	b	.LBB228_4
	.p2align	4, , 16
.LBB228_2:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB228_4 Depth=1
	sub.d	$a0, $fp, $s6
	slt	$a1, $s5, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s5, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s4
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
.LBB228_3:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB228_4 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s7, $a0
	masknez	$a2, $s8, $a0
	maskeqz	$a3, $s0, $a0
	or	$a2, $a3, $a2
	ldx.d	$s7, $s7, $a2
	maskeqz	$a0, $s1, $a0
	or	$s1, $a0, $a1
	beqz	$s7, .LBB228_6
.LBB228_4:                              # =>This Inner Loop Header: Depth=1
	ld.d	$fp, $s7, 40
	sltu	$a0, $s6, $fp
	masknez	$a1, $fp, $a0
	maskeqz	$a0, $s6, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB228_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB228_4 Depth=1
	ld.d	$a0, $s7, 32
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB228_3
	b	.LBB228_2
.LBB228_6:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE11lower_boundERSC_.exit
	ld.d	$s0, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	beq	$s1, $s2, .LBB228_11
# %bb.7:
	ld.d	$fp, $s1, 40
	sltu	$a0, $fp, $s6
	masknez	$a1, $s6, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB228_9
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a1, $s1, 32
	move	$a0, $s3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB228_10
.LBB228_9:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $s6, $fp
	slt	$a1, $s5, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s5, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s4
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
.LBB228_10:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	move	$s2, $s1
	bgez	$a0, .LBB228_12
.LBB228_11:                             # %.critedge
	st.d	$s8, $sp, 32
	pcalau12i	$a0, %pc_hi20(_ZStL19piecewise_construct)
	addi.d	$a2, $a0, %pc_lo12(_ZStL19piecewise_construct)
	addi.d	$a3, $sp, 32
	addi.d	$a4, $sp, 31
	move	$a0, $s0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_)
	jirl	$ra, $ra, 0
	move	$s1, $a0
.LBB228_12:
	addi.d	$a0, $s1, 64
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end228:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_, .Lfunc_end228-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PRUserPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end229:
	.size	_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end229-_ZN2kc47impl_elem_patternrepresentation_PRUserPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc47impl_elem_patternrepresentation_PROperPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc47impl_elem_patternrepresentation_PROperPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc47impl_elem_patternrepresentation_PROperPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc47impl_elem_patternrepresentation_PROperPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc47impl_elem_patternrepresentation_PROperPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 32
	ld.d	$a3, $a0, 0
	move	$fp, $a2
	ld.w	$s2, $a2, 0
	ld.d	$a2, $a3, 0
	move	$s0, $a1
	jirl	$ra, $a2, 0
	ori	$a1, $zero, 104
	bne	$s2, $a1, .LBB230_5
# %bb.1:
	ori	$s2, $zero, 212
	bne	$a0, $s2, .LBB230_3
# %bb.2:
	ld.d	$a0, $s1, 32
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	beq	$a0, $s2, .LBB230_7
.LBB230_3:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 211
	beq	$a0, $a1, .LBB230_9
# %bb.4:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1543)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1543)
	move	$a0, $s0
	b	.LBB230_12
.LBB230_5:
	ori	$s2, $zero, 212
	bne	$a0, $s2, .LBB230_8
# %bb.6:
	ld.d	$a0, $s1, 32
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB230_8
.LBB230_7:
	ld.d	$a0, $s1, 32
	ld.d	$s2, $a0, 32
	ld.d	$a0, $s2, 32
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 40
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_gen_castE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_gen_castE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1542)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1542)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	b	.LBB230_11
.LBB230_8:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 211
	bne	$a0, $a1, .LBB230_10
.LBB230_9:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB230_10:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 80
.LBB230_11:
	move	$a0, $s1
	move	$a1, $s0
.LBB230_12:
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end230:
	.size	_ZN2kc47impl_elem_patternrepresentation_PROperPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end230-_ZN2kc47impl_elem_patternrepresentation_PROperPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc46impl_elem_patternrepresentation_PRVarPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 32
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end231:
	.size	_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end231-_ZN2kc46impl_elem_patternrepresentation_PRVarPredicate10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc41impl_elem_patternrepresentation_PRBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc41impl_elem_patternrepresentation_PRBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc41impl_elem_patternrepresentation_PRBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc41impl_elem_patternrepresentation_PRBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc41impl_elem_patternrepresentation_PRBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception4
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 130
	move	$s0, $a1
	move	$s3, $a0
	bne	$a2, $a3, .LBB232_9
# %bb.1:
	ld.d	$a0, $s3, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB232_9
# %bb.2:
	ld.d	$a0, $s3, 40
	ld.d	$a0, $a0, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 6
	bne	$a0, $a1, .LBB232_9
# %bb.3:
	ld.d	$a0, $s3, 40
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 40
	ld.d	$fp, $a0, 8
	ld.d	$s2, $s3, 32
	addi.d	$s1, $sp, 32
	st.d	$s1, $sp, 16
	beqz	$fp, .LBB232_23
# %bb.4:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	ori	$a1, $zero, 16
	st.d	$a0, $sp, 8
	move	$a0, $s1
	bltu	$s0, $a1, .LBB232_6
# %bb.5:                                # %.noexc.i
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB232_6:                              # %._crit_edge.i.i
	beqz	$s0, .LBB232_20
# %bb.7:                                # %._crit_edge.i.i
	ori	$a1, $zero, 1
	bne	$s0, $a1, .LBB232_19
# %bb.8:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB232_20
.LBB232_9:                              # %.thread
	ld.d	$s1, $s3, 32
	ld.d	$s2, $s3, 40
	ld.d	$s4, $s3, 24
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB232_11
# %bb.10:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc8f_typeofEPNS_9impl_pathE)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s4, 114
	bnez	$a0, .LBB232_12
	b	.LBB232_13
.LBB232_11:
	ld.d	$s3, $s3, 24
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s4, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s4, 114
	beqz	$a0, .LBB232_13
.LBB232_12:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 24
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 16
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB232_13:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1541)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1541)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1214)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1214)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 212
	bne	$a0, $a1, .LBB232_15
# %bb.14:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_gen_castE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_gen_castE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	b	.LBB232_17
.LBB232_15:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 211
	beq	$a0, $a1, .LBB232_17
# %bb.16:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 2236
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
.LBB232_17:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB232_18:
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB232_19:
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB232_20:
	ld.d	$a0, $sp, 8
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 24
	stx.b	$zero, $a1, $a0
.Ltmp316:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$a1, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEEixEOS5_)
	jirl	$ra, $ra, 0
.Ltmp317:
# %bb.21:
	st.d	$s2, $a0, 0
	ld.d	$a0, $sp, 16
	beq	$a0, $s1, .LBB232_18
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB232_18
.LBB232_23:                             # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.1628)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1628)
	pcaddu18i	$ra, %call36(_ZSt19__throw_logic_errorPKc)
	jirl	$ra, $ra, 0
.LBB232_24:
.Ltmp318:
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s1, .LBB232_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i50
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB232_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit52
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end232:
	.size	_ZN2kc41impl_elem_patternrepresentation_PRBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end232-_ZN2kc41impl_elem_patternrepresentation_PRBinding10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table232:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin4-.Lfunc_begin4    # >> Call Site 1 <<
	.uleb128 .Ltmp316-.Lfunc_begin4         #   Call between .Lfunc_begin4 and .Ltmp316
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp316-.Lfunc_begin4         # >> Call Site 2 <<
	.uleb128 .Ltmp317-.Ltmp316              #   Call between .Ltmp316 and .Ltmp317
	.uleb128 .Ltmp318-.Lfunc_begin4         #     jumps to .Ltmp318
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp317-.Lfunc_begin4         # >> Call Site 3 <<
	.uleb128 .Lfunc_end232-.Ltmp317         #   Call between .Ltmp317 and .Lfunc_end232
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2kc9impl_path10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc9impl_path10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc9impl_path10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc9impl_path10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc9impl_path10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB233_2
# %bb.1:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc9impl_path14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE)
	jr	$t8
.LBB233_2:
	ld.w	$a0, $fp, 0
	addi.d	$a0, $a0, -102
	ori	$a1, $zero, 35
	bltu	$a1, $a0, .LBB233_15
# %bb.3:
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI233_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI233_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB233_4:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 211
	bne	$a0, $a1, .LBB233_15
# %bb.5:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	ld.d	$a0, $a1, 48
	ld.d	$a2, $a1, 56
	ld.d	$s1, $s1, 24
	bne	$a0, $a2, .LBB233_7
# %bb.6:
	ld.d	$a0, $a1, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB233_7:                              # %.thread105
	ld.d	$a0, $a0, -8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.334)
	addi.d	$a1, $a0, %pc_lo12(.L.str.334)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	b	.LBB233_20
.LBB233_8:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 211
	bne	$a0, $a1, .LBB233_15
# %bb.9:                                # %.thread101
	ld.d	$a1, $s1, 32
	ld.d	$a0, $s1, 24
	ld.d	$s1, $a1, 8
	pcaddu18i	$ra, %call36(_ZN2kc3IntEPNS_17impl_integer__IntE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc20f_argumentofoperatorEPNS_7impl_IDEPNS_8impl_INTE)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 0
	ld.d	$a3, $a1, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1546)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1546)
	b	.LBB233_13
.LBB233_10:
	ld.d	$a0, $s1, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 211
	bne	$a0, $a1, .LBB233_15
# %bb.11:
	ld.d	$a1, $s1, 32
	ld.d	$a0, $s1, 24
	ld.d	$s1, $a1, 8
	pcaddu18i	$ra, %call36(_ZN2kc3IntEPNS_17impl_integer__IntE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc20f_argumentofoperatorEPNS_7impl_IDEPNS_8impl_INTE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %got_pc_hi20(g_options)
	ld.d	$a1, $a1, %got_pc_lo12(g_options)
	ld.bu	$a1, $a1, 115
	move	$s1, $a0
	bnez	$a1, .LBB233_14
# %bb.12:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1350)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1350)
.LBB233_13:                             # %.thread
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB233_14:                             # %.thread
	ld.d	$a0, $s1, 0
	b	.LBB233_16
.LBB233_15:
	ld.d	$s2, $s1, 32
	ld.d	$a0, $s2, 0
	ld.d	$s1, $s1, 24
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1547)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1547)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s2, $s2, 8
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2kc3IntEPNS_17impl_integer__IntE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2kc20f_argumentofoperatorEPNS_7impl_IDEPNS_8impl_INTE)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ld.d	$a0, $a0, 0
.LBB233_16:                             # %.thread
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	move	$a1, $zero
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZN2kc20impl_abstract_phylum4freeEb)
	jr	$t8
.LBB233_17:
	ld.d	$s2, $s1, 32
	ld.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZN2kc18f_phylumofoperatorEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc19f_listelementphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcaddu18i	$ra, %call36(_ZN2kc9f_emptyIdEv)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNK2kc20impl_abstract_phylum2eqEPKS0_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB233_19
# %bb.18:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1544)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1544)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc16view_class_of_opE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc16view_class_of_opE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1545)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1545)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB233_19:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
.LBB233_20:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end233:
	.size	_ZN2kc9impl_path10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end233-_ZN2kc9impl_path10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI233_0:
	.word	.LBB233_10-.LJTI233_0
	.word	.LBB233_4-.LJTI233_0
	.word	.LBB233_8-.LJTI233_0
	.word	.LBB233_4-.LJTI233_0
	.word	.LBB233_8-.LJTI233_0
	.word	.LBB233_10-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_15-.LJTI233_0
	.word	.LBB233_17-.LJTI233_0
                                        # -- End function
	.text
	.globl	_ZN2kc9impl_path14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc9impl_path14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc9impl_path14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc9impl_path14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc9impl_path14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a0, $a2, 0
	addi.d	$a0, $a0, -102
	ori	$a3, $zero, 5
	bltu	$a3, $a0, .LBB234_9
# %bb.1:
	move	$fp, $a1
	slli.d	$a0, $a0, 2
	pcalau12i	$a1, %pc_hi20(.LJTI234_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI234_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB234_2:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1551)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1551)
	move	$a0, $fp
	b	.LBB234_8
.LBB234_3:
	move	$s0, $a2
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a0, $s1, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 88
	jirl	$ra, $a1, 0
	ld.d	$a1, $fp, 0
	ld.d	$a3, $a1, 0
	bnez	$a0, .LBB234_6
# %bb.4:
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.b	$a0, $a0, 115
	andi	$a0, $a0, 1
	bnez	$a0, .LBB234_6
# %bb.5:
	pcalau12i	$a0, %pc_hi20(.L.str.1548)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1548)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc32view_gen_rewritedefs_dotestarg_cE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc32view_gen_rewritedefs_dotestarg_cE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1549)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1549)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_operatorE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, %pc_lo12(_ZN12_GLOBAL__N_17gl_argsE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_gen_rewritedefs_args_cE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_gen_rewritedefs_args_cE)
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1550)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1550)
	b	.LBB234_7
.LBB234_6:
	pcalau12i	$a0, %pc_hi20(.L.str.1110)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1110)
.LBB234_7:
	move	$a0, $fp
	move	$a2, $s0
.LBB234_8:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB234_9:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end234:
	.size	_ZN2kc9impl_path14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end234-_ZN2kc9impl_path14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI234_0:
	.word	.LBB234_3-.LJTI234_0
	.word	.LBB234_9-.LJTI234_0
	.word	.LBB234_2-.LJTI234_0
	.word	.LBB234_9-.LJTI234_0
	.word	.LBB234_2-.LJTI234_0
	.word	.LBB234_3-.LJTI234_0
                                        # -- End function
	.text
	.globl	_ZN2kc10impl_paths10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc10impl_paths10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc10impl_paths10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc10impl_paths10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc10impl_paths10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB235_11
# %bb.1:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 212
	bne	$a0, $s2, .LBB235_6
# %bb.2:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 214
	bne	$a0, $a1, .LBB235_6
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 212
	bne	$a0, $a1, .LBB235_6
# %bb.4:
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 213
	bne	$a0, $a1, .LBB235_6
# %bb.5:
	ld.d	$s2, $s1, 8
	ld.d	$a1, $s1, 16
	ld.d	$a0, $s2, 32
	ld.d	$s1, $a1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s3, $s1, 32
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_gen_castE)
	addi.d	$s4, $a1, %pc_lo12(_ZN2kc13view_gen_castE)
	move	$a1, $s0
	move	$a2, $s4
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1552)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1552)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s4
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	b	.LBB235_14
.LBB235_6:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB235_10
# %bb.7:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 214
	bne	$a0, $a1, .LBB235_10
# %bb.8:
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 212
	bne	$a0, $a1, .LBB235_10
# %bb.9:
	ld.d	$s2, $s1, 8
	ld.d	$s1, $s1, 16
	ld.d	$a0, $s2, 32
	ld.d	$s3, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s4, $s3, 32
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_gen_castE)
	addi.d	$s5, $a1, %pc_lo12(_ZN2kc13view_gen_castE)
	move	$a1, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1552)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1552)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $s0
	move	$a2, $s5
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1553)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1553)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	b	.LBB235_13
.LBB235_10:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 213
	bne	$a0, $a1, .LBB235_12
.LBB235_11:
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB235_12:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
.LBB235_13:
	move	$a1, $s0
.LBB235_14:
	move	$a2, $fp
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end235:
	.size	_ZN2kc10impl_paths10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end235-_ZN2kc10impl_paths10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc10impl_paths14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc10impl_paths14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc10impl_paths14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc10impl_paths14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc10impl_paths14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end236:
	.size	_ZN2kc10impl_paths14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end236-_ZN2kc10impl_paths14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc16impl_argsnumbers10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc16impl_argsnumbers10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc16impl_argsnumbers10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc16impl_argsnumbers10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc16impl_argsnumbers10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -288
	.cfi_def_cfa_offset 288
	st.d	$ra, $sp, 280                   # 8-byte Folded Spill
	st.d	$fp, $sp, 272                   # 8-byte Folded Spill
	st.d	$s0, $sp, 264                   # 8-byte Folded Spill
	st.d	$s1, $sp, 256                   # 8-byte Folded Spill
	st.d	$s2, $sp, 248                   # 8-byte Folded Spill
	st.d	$s3, $sp, 240                   # 8-byte Folded Spill
	st.d	$s4, $sp, 232                   # 8-byte Folded Spill
	st.d	$s5, $sp, 224                   # 8-byte Folded Spill
	st.d	$s6, $sp, 216                   # 8-byte Folded Spill
	st.d	$s7, $sp, 208                   # 8-byte Folded Spill
	st.d	$s8, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB237_17
# %bb.1:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 86
	beq	$a0, $a1, .LBB237_13
# %bb.2:
	ori	$a1, $zero, 88
	beq	$a0, $a1, .LBB237_10
# %bb.3:
	ori	$a1, $zero, 91
	bne	$a0, $a1, .LBB237_8
# %bb.4:
	ld.d	$a0, $s0, 0
	ld.d	$s3, $s1, 8
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1554)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1554)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1555)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1555)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s3, 8
	pcalau12i	$a1, %pc_hi20(.L.str.1166)
	addi.d	$s2, $a1, %pc_lo12(.L.str.1166)
	blez	$a0, .LBB237_16
# %bb.5:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1556)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1556)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1394)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1394)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s3, 8
	ori	$a1, $zero, 2
	blt	$a0, $a1, .LBB237_16
# %bb.6:                                # %.lr.ph92.peel.next.preheader
	ori	$s4, $zero, 1
	pcalau12i	$a0, %pc_hi20(.L.str.1556)
	addi.d	$s5, $a0, %pc_lo12(.L.str.1556)
	pcalau12i	$a0, %pc_hi20(.L.str.1557)
	addi.d	$s6, $a0, %pc_lo12(.L.str.1557)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s7, $a0, %pc_lo12(.L.str.331)
	pcalau12i	$a0, %pc_hi20(.L.str.1394)
	addi.d	$s8, $a0, %pc_lo12(.L.str.1394)
	.p2align	4, , 16
.LBB237_7:                              # %.lr.ph92.peel.next
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s6
	move	$a2, $fp
	jirl	$ra, $a3, 0
	addi.d	$a0, $sp, 0
	move	$a1, $s7
	move	$a2, $s4
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s8
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s3, 8
	addi.w	$s4, $s4, 1
	blt	$s4, $a0, .LBB237_7
	b	.LBB237_16
	.p2align	4, , 16
.LBB237_8:                              # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB237_17
# %bb.9:                                # %.lr.ph96
                                        #   in Loop: Header=BB237_8 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB237_8
.LBB237_10:
	ld.d	$a0, $s0, 0
	ld.d	$s3, $s1, 8
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1554)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1554)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1558)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1558)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s3, 8
	pcalau12i	$a1, %pc_hi20(.L.str.1560)
	addi.d	$s2, $a1, %pc_lo12(.L.str.1560)
	blez	$a0, .LBB237_16
# %bb.11:                               # %.lr.ph88.preheader
	move	$s4, $zero
	pcalau12i	$a0, %pc_hi20(.L.str.1559)
	addi.d	$s5, $a0, %pc_lo12(.L.str.1559)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s6, $a0, %pc_lo12(.L.str.331)
	pcalau12i	$a0, %pc_hi20(.L.str.1394)
	addi.d	$s7, $a0, %pc_lo12(.L.str.1394)
	.p2align	4, , 16
.LBB237_12:                             # %.lr.ph88
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	addi.d	$a0, $sp, 0
	move	$a1, $s6
	move	$a2, $s4
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s7
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s3, 8
	addi.w	$s4, $s4, 1
	blt	$s4, $a0, .LBB237_12
	b	.LBB237_16
.LBB237_13:
	ld.d	$a0, $s0, 0
	ld.d	$s3, $s1, 8
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1554)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1554)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1561)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1561)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s3, 8
	pcalau12i	$a1, %pc_hi20(.L.str.1560)
	addi.d	$s2, $a1, %pc_lo12(.L.str.1560)
	blez	$a0, .LBB237_16
# %bb.14:                               # %.lr.ph.preheader
	move	$s4, $zero
	pcalau12i	$a0, %pc_hi20(.L.str.1559)
	addi.d	$s5, $a0, %pc_lo12(.L.str.1559)
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$s6, $a0, %pc_lo12(.L.str.331)
	pcalau12i	$a0, %pc_hi20(.L.str.1394)
	addi.d	$s7, $a0, %pc_lo12(.L.str.1394)
	.p2align	4, , 16
.LBB237_15:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s5
	move	$a2, $fp
	jirl	$ra, $a3, 0
	addi.d	$a0, $sp, 0
	move	$a1, $s6
	move	$a2, $s4
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s7
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a0, $s3, 8
	addi.w	$s4, $s4, 1
	blt	$s4, $a0, .LBB237_15
.LBB237_16:                             # %.loopexit.sink.split
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB237_17:                             # %.loopexit
	ld.d	$s8, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 264                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 272                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 280                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 288
	ret
.Lfunc_end237:
	.size	_ZN2kc16impl_argsnumbers10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end237-_ZN2kc16impl_argsnumbers10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_argsnumbers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc16impl_argsnumbers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc16impl_argsnumbers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc16impl_argsnumbers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc16impl_argsnumbers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end238:
	.size	_ZN2kc16impl_argsnumbers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end238-_ZN2kc16impl_argsnumbers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc21impl_rewriterulesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_rewriterulesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_rewriterulesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_rewriterulesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	st.d	$s6, $sp, 200                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	ld.w	$a1, $fp, 0
	beqz	$a0, .LBB239_4
# %bb.1:
	ori	$a0, $zero, 93
	beq	$a1, $a0, .LBB239_16
# %bb.2:
	ori	$a0, $zero, 94
	bne	$a1, $a0, .LBB239_45
# %bb.3:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1576)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1576)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	ori	$a1, $zero, 1
	st.b	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	b	.LBB239_45
.LBB239_4:
	ori	$a0, $zero, 93
	beq	$a1, $a0, .LBB239_17
# %bb.5:
	ori	$a0, $zero, 94
	bne	$a1, $a0, .LBB239_44
# %bb.6:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 219
	bne	$a0, $s2, .LBB239_27
# %bb.7:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 201
	bne	$a0, $a1, .LBB239_27
# %bb.8:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 200
	bne	$a0, $a1, .LBB239_27
# %bb.9:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 70
	bne	$a0, $a1, .LBB239_27
# %bb.10:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a0, 24
	pcalau12i	$a3, %got_pc_hi20(g_options)
	ld.d	$s4, $a3, %got_pc_lo12(g_options)
	ld.d	$s5, $a1, 8
	ld.d	$s3, $a0, 16
	ld.d	$s2, $a2, 16
	ld.bu	$a0, $s4, 114
	ld.d	$s1, $s1, 16
	beqz	$a0, .LBB239_12
# %bb.11:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s5, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB239_12:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1562)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1562)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1211)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1211)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s5, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1563)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1563)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_rw_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc16view_rw_bindingsE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 114
	beqz	$a0, .LBB239_14
# %bb.13:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB239_14:
	ld.bu	$a0, $s4, 115
	beqz	$a0, .LBB239_50
# %bb.15:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1564)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1564)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1567)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1567)
	b	.LBB239_55
.LBB239_16:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1577)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1577)
	move	$a0, $s0
	move	$a2, $fp
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	jr	$a3
.LBB239_17:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 219
	bne	$a0, $s2, .LBB239_31
# %bb.18:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 201
	bne	$a0, $a1, .LBB239_31
# %bb.19:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 200
	bne	$a0, $a1, .LBB239_31
# %bb.20:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 70
	bne	$a0, $a1, .LBB239_31
# %bb.21:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a0, 24
	pcalau12i	$a3, %got_pc_hi20(g_options)
	ld.d	$s4, $a3, %got_pc_lo12(g_options)
	ld.d	$s5, $a1, 8
	ld.d	$s3, $a0, 16
	ld.d	$s2, $a2, 16
	ld.bu	$a0, $s4, 114
	ld.d	$s1, $s1, 16
	beqz	$a0, .LBB239_23
# %bb.22:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s5, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB239_23:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1562)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1562)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1211)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1211)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s5, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1563)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1563)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_rw_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc16view_rw_bindingsE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 114
	beqz	$a0, .LBB239_25
# %bb.24:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s4, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB239_25:
	ld.bu	$a0, $s4, 115
	beqz	$a0, .LBB239_52
# %bb.26:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1564)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1564)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1567)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1567)
	b	.LBB239_63
.LBB239_27:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB239_34
# %bb.28:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 200
	bne	$a0, $a1, .LBB239_34
# %bb.29:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 70
	bne	$a0, $a1, .LBB239_34
# %bb.30:
	pcalau12i	$a0, %pc_hi20(.L.str.329)
	addi.d	$a0, $a0, %pc_lo12(.L.str.329)
	pcalau12i	$a1, %pc_hi20(.L.str.1573)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1573)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 2765
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
.LBB239_31:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB239_34
# %bb.32:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 200
	bne	$a0, $a1, .LBB239_34
# %bb.33:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 70
	beq	$a0, $a1, .LBB239_70
.LBB239_34:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 219
	bne	$a0, $a1, .LBB239_44
# %bb.35:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 201
	bne	$a0, $a1, .LBB239_44
# %bb.36:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 70
	bne	$a0, $a1, .LBB239_44
# %bb.37:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a0, 24
	ld.d	$s6, $a1, 8
	ld.d	$s4, $a1, 16
	ld.d	$s3, $a0, 16
	ld.d	$s2, $a2, 16
	ld.d	$s1, $s1, 16
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_predicate_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc23view_predicate_bindingsE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s5, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s5, 114
	beqz	$a0, .LBB239_39
# %bb.38:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s6, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s5, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB239_39:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1353)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1353)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_rw_predicatesE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc18view_rw_predicatesE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1574)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1574)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s6, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1211)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1211)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s6, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1563)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1563)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_rw_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc16view_rw_bindingsE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s5, 114
	beqz	$a0, .LBB239_41
# %bb.40:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s5, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB239_41:
	ld.bu	$a0, $s5, 115
	beqz	$a0, .LBB239_46
# %bb.42:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1564)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1564)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1567)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1567)
	b	.LBB239_49
	.p2align	4, , 16
.LBB239_43:                             # %.lr.ph542
                                        #   in Loop: Header=BB239_44 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB239_44:                             # %.lr.ph542
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB239_43
.LBB239_45:                             # %_ZN2kc21impl_rewriterulesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE.exit
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB239_46:
	ld.d	$a0, $s0, 0
	ld.bu	$s4, $s5, 72
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	beqz	$s4, .LBB239_48
# %bb.47:
	pcalau12i	$a0, %pc_hi20(.L.str.1568)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1568)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1569)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1569)
	b	.LBB239_49
.LBB239_48:
	pcalau12i	$a0, %pc_hi20(.L.str.1564)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1564)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1570)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1570)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1571)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1571)
.LBB239_49:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1575)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1575)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB239_45
.LBB239_50:
	ld.d	$a0, $s0, 0
	ld.bu	$s5, $s4, 72
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	beqz	$s5, .LBB239_54
# %bb.51:
	pcalau12i	$a0, %pc_hi20(.L.str.1568)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1568)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1569)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1569)
	b	.LBB239_55
.LBB239_52:
	ld.d	$a0, $s0, 0
	ld.bu	$s5, $s4, 72
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1088)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1088)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$s3, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	beqz	$s5, .LBB239_62
# %bb.53:
	pcalau12i	$a0, %pc_hi20(.L.str.1568)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1568)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1569)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1569)
	b	.LBB239_63
.LBB239_54:
	pcalau12i	$a0, %pc_hi20(.L.str.1564)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1564)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1570)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1570)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1571)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1571)
.LBB239_55:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1572)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1572)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 344
	beqz	$a0, .LBB239_45
# %bb.56:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 0
	move	$fp, $a0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 218
	bne	$fp, $a1, .LBB239_60
# %bb.57:                               # %.preheader
	bne	$a0, $a1, .LBB239_45
# %bb.58:                               # %.lr.ph539.preheader
	ori	$fp, $zero, 218
.LBB239_59:                             # %.lr.ph539
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZN2kc27warn_drop_identical_patternEPNS_20impl_rewriteruleinfoE)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s1, 16
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	beq	$a0, $fp, .LBB239_59
	b	.LBB239_45
.LBB239_60:
	ori	$a1, $zero, 217
	beq	$a0, $a1, .LBB239_45
# %bb.61:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 2758
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	b	.LBB239_45
.LBB239_62:
	pcalau12i	$a0, %pc_hi20(.L.str.1564)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1564)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1565)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1565)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1566)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1566)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1570)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1570)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1571)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1571)
.LBB239_63:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1572)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1572)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s4, 344
	beqz	$a0, .LBB239_45
# %bb.64:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 0
	move	$fp, $a0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 218
	bne	$fp, $a1, .LBB239_68
# %bb.65:                               # %.preheader535
	bne	$a0, $a1, .LBB239_45
# %bb.66:                               # %.lr.ph.preheader
	ori	$fp, $zero, 218
.LBB239_67:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZN2kc27warn_drop_identical_patternEPNS_20impl_rewriteruleinfoE)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s1, 16
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	beq	$a0, $fp, .LBB239_67
	b	.LBB239_45
.LBB239_68:
	ori	$a1, $zero, 217
	beq	$a0, $a1, .LBB239_45
# %bb.69:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 2988
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	b	.LBB239_45
.LBB239_70:
	pcalau12i	$a0, %pc_hi20(.L.str.329)
	addi.d	$a0, $a0, %pc_lo12(.L.str.329)
	pcalau12i	$a1, %pc_hi20(.L.str.1573)
	addi.d	$a2, $a1, %pc_lo12(.L.str.1573)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 2995
	pcaddu18i	$ra, %call36(_ZN2kc24kc_assertionReasonFailedEPKciS1_)
	jirl	$ra, $ra, 0
.Lfunc_end239:
	.size	_ZN2kc21impl_rewriterulesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end239-_ZN2kc21impl_rewriterulesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriterulesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_rewriterulesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_rewriterulesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_rewriterulesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_rewriterulesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 93
	beq	$a0, $a3, .LBB240_4
# %bb.1:
	ori	$a3, $zero, 94
	bne	$a0, $a3, .LBB240_3
# %bb.2:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1576)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1576)
	move	$a0, $a1
	move	$a1, $a3
	jirl	$ra, $a4, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	ori	$a1, $zero, 1
	st.b	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
.LBB240_3:
	ret
.LBB240_4:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1577)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1577)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.Lfunc_end240:
	.size	_ZN2kc21impl_rewriterulesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end240-_ZN2kc21impl_rewriterulesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv,comdat
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv
	.p2align	5
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception5
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	move	$fp, $a0
	ld.d	$a1, $a0, 16
.Ltmp319:
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E)
	jirl	$ra, $ra, 0
.Ltmp320:
# %bb.1:                                # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE5clearEv.exit
	addi.d	$a0, $fp, 8
	st.d	$zero, $fp, 16
	st.d	$a0, $fp, 24
	st.d	$a0, $fp, 32
	st.d	$zero, $fp, 40
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB241_2:
.Ltmp321:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end241:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv, .Lfunc_end241-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv,"aG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv,comdat
	.p2align	2, 0x0
GCC_except_table241:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Ltmp319-.Lfunc_begin5         # >> Call Site 1 <<
	.uleb128 .Ltmp320-.Ltmp319              #   Call between .Ltmp319 and .Ltmp320
	.uleb128 .Ltmp321-.Lfunc_begin5         #     jumps to .Ltmp321
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp320-.Lfunc_begin5         # >> Call Site 2 <<
	.uleb128 .Lfunc_end241-.Ltmp320         #   Call between .Ltmp320 and .Lfunc_end241
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end242:
	.size	_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end242-_ZN2kc36impl_rewriteruleinfo_Rewriteruleinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc18impl_withcasesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_withcasesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_withcasesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_withcasesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception6
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB243_2
# %bb.1:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	pcaddu18i	$t8, %call36(_ZN2kc18impl_withcasesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE)
	jr	$t8
.LBB243_2:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 222
	bne	$a0, $s2, .LBB243_6
# %bb.3:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 201
	bne	$a0, $a1, .LBB243_6
# %bb.4:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 205
	bne	$a0, $a1, .LBB243_6
# %bb.5:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 32
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 37
	beq	$a0, $a1, .LBB243_11
.LBB243_6:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB243_9
# %bb.7:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 201
	bne	$a0, $a1, .LBB243_9
# %bb.8:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 208
	beq	$a0, $a1, .LBB243_11
.LBB243_9:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 222
	bne	$a0, $s2, .LBB243_16
# %bb.10:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 200
	bne	$a0, $a1, .LBB243_16
.LBB243_11:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $s0, 0
	ld.d	$s2, $a0, 16
	ld.d	$s1, $a0, 24
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1465)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1465)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s3, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s3, 114
	beqz	$a0, .LBB243_13
# %bb.12:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s3, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB243_13:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_wc_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc16view_wc_bindingsE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s3, 114
	beqz	$a0, .LBB243_15
# %bb.14:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s3, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB243_15:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	move	$a0, $s1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1053)
	move	$a0, $s0
	b	.LBB243_31
.LBB243_16:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 8
	bne	$a0, $s2, .LBB243_27
# %bb.17:
	ld.d	$s3, $a1, 8
	ld.d	$s4, $a1, 16
	ld.d	$s2, $a1, 24
	ld.d	$s1, $s1, 16
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$s5, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	ld.d	$a1, $s5, 16
.Ltmp322:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E)
	jirl	$ra, $ra, 0
.Ltmp323:
# %bb.18:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv.exit
	st.d	$zero, $s5, 16
	addi.d	$a0, $s5, 8
	st.d	$a0, $s5, 24
	st.d	$a0, $s5, 32
	st.d	$zero, $s5, 40
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_predicate_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc23view_predicate_bindingsE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$s5, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $s5, 114
	beqz	$a0, .LBB243_20
# %bb.19:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s5, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB243_20:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1353)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1353)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_wc_predicatesE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc18view_wc_predicatesE)
	move	$a0, $s3
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1578)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1578)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.bu	$a0, $s5, 114
	beqz	$a0, .LBB243_22
# %bb.21:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s5, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB243_22:
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_wc_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc16view_wc_bindingsE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc33f_operatorofpatternrepresentationEPNS_26impl_patternrepresentationE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL13operatorstack)
	addi.d	$s3, $a1, %pc_lo12(_ZL13operatorstack)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 8
	beq	$a1, $a2, .LBB243_28
# %bb.23:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	ld.bu	$a0, $s5, 114
	beqz	$a0, .LBB243_25
.LBB243_24:
	pcalau12i	$a0, %got_pc_hi20(pg_line)
	ld.d	$a0, $a0, %got_pc_lo12(pg_line)
	ld.d	$a2, $s0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a2, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.w	$a2, $s2, 8
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(sprintf)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1391)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1391)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $s5, 312
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc13view_filenameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc13view_filenameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.523)
	addi.d	$a1, $a0, %pc_lo12(.L.str.523)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB243_25:
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	move	$a0, $s2
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a1, $s3, 48
	ld.d	$a0, $s3, 56
	beq	$a1, $a0, .LBB243_29
# %bb.26:
	addi.d	$a0, $a1, -8
	b	.LBB243_30
.LBB243_27:
	ld.d	$a0, $a1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	jr	$a3
.LBB243_28:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL13operatorstack)
	addi.d	$a1, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.bu	$a0, $s5, 114
	bnez	$a0, .LBB243_24
	b	.LBB243_25
.LBB243_29:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a0, $a0, 504
.LBB243_30:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s3, 48
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1579)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1579)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
.LBB243_31:
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB243_32:
.Ltmp324:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end243:
	.size	_ZN2kc18impl_withcasesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end243-_ZN2kc18impl_withcasesinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table243:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin6-.Lfunc_begin6    # >> Call Site 1 <<
	.uleb128 .Ltmp322-.Lfunc_begin6         #   Call between .Lfunc_begin6 and .Ltmp322
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp322-.Lfunc_begin6         # >> Call Site 2 <<
	.uleb128 .Ltmp323-.Ltmp322              #   Call between .Ltmp322 and .Ltmp323
	.uleb128 .Ltmp324-.Lfunc_begin6         #     jumps to .Ltmp324
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp323-.Lfunc_begin6         # >> Call Site 3 <<
	.uleb128 .Lfunc_end243-.Ltmp323         #   Call between .Ltmp323 and .Lfunc_end243
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end6:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2kc18impl_withcasesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_withcasesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_withcasesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_withcasesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_withcasesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 101
	bne	$a0, $a3, .LBB244_5
# %bb.1:
	pcalau12i	$a0, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$a3, $a0, %pc_lo12(_ZL16inforeachcontext)
	ld.d	$a0, $a3, 48
	ld.d	$a4, $a3, 56
	bne	$a0, $a4, .LBB244_3
# %bb.2:
	ld.d	$a0, $a3, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB244_3:                              # %_ZNSt5stackIiSt5dequeIiSaIiEEE3topEv.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.w	$a0, $a0, -4
	beqz	$a0, .LBB244_6
# %bb.4:
	pcalau12i	$a0, %pc_hi20(.L.str.1580)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1580)
	b	.LBB244_12
.LBB244_5:
	ret
.LBB244_6:
	pcalau12i	$s2, %pc_hi20(_ZN12_GLOBAL__N_114gl_return_typeE)
	ld.d	$a0, $s2, %pc_lo12(_ZN12_GLOBAL__N_114gl_return_typeE)
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB244_11
# %bb.7:
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_113gl_star_countE)
	ld.w	$a0, $s1, %pc_lo12(_ZN12_GLOBAL__N_113gl_star_countE)
	bnez	$a0, .LBB244_10
# %bb.8:
	pcalau12i	$fp, %pc_hi20(_ZN12_GLOBAL__N_112gl_return_IDE)
	ld.d	$a0, $fp, %pc_lo12(_ZN12_GLOBAL__N_112gl_return_IDE)
	move	$s0, $a2
	move	$s3, $a1
	pcaddu18i	$ra, %call36(_ZN2kc10f_isphylumEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $s3
	move	$a2, $s0
	bnez	$a0, .LBB244_10
# %bb.9:
	ld.d	$a0, $fp, %pc_lo12(_ZN12_GLOBAL__N_112gl_return_IDE)
	pcaddu18i	$ra, %call36(_ZN2kc19f_is_known_ptr_typeEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $s3
	move	$a2, $s0
	beqz	$a0, .LBB244_11
.LBB244_10:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1583)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1583)
	move	$a0, $a1
	move	$fp, $a1
	move	$a1, $a3
	move	$s0, $a2
	jirl	$ra, $a4, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_functionE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1584)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1584)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, %pc_lo12(_ZN12_GLOBAL__N_114gl_return_typeE)
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZN2kc5StarsEv)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s1, %pc_lo12(_ZN12_GLOBAL__N_113gl_star_countE)
	pcaddu18i	$ra, %call36(_ZN2kc13impl_charruns3setEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	move	$a1, $fp
	move	$a2, $s0
	pcalau12i	$a0, %pc_hi20(.L.str.1585)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1585)
	b	.LBB244_12
.LBB244_11:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1581)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1581)
	move	$a0, $a1
	move	$fp, $a1
	move	$a1, $a3
	move	$s0, $a2
	jirl	$ra, $a4, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_functionE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_functionE)
	move	$a1, $fp
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	move	$a1, $fp
	move	$a2, $s0
	pcalau12i	$a0, %pc_hi20(.L.str.1582)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1582)
.LBB244_12:                             # %.sink.split
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	move	$a0, $a1
	move	$a1, $a3
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a4
.Lfunc_end244:
	.size	_ZN2kc18impl_withcasesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end244-_ZN2kc18impl_withcasesinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_withcaseinfo_Withcaseinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_withcaseinfo_Withcaseinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_withcaseinfo_Withcaseinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_withcaseinfo_Withcaseinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_withcaseinfo_Withcaseinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end245:
	.size	_ZN2kc30impl_withcaseinfo_Withcaseinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end245-_ZN2kc30impl_withcaseinfo_Withcaseinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriteviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_rewriteviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_rewriteviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_rewriteviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB246_2
.LBB246_1:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB246_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 92
	bne	$a0, $a1, .LBB246_4
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB246_4:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB246_1
# %bb.5:                                # %.lr.ph
                                        #   in Loop: Header=BB246_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB246_4
.Lfunc_end246:
	.size	_ZN2kc21impl_rewriteviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end246-_ZN2kc21impl_rewriteviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_rewriteviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_rewriteviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_rewriteviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_rewriteviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_rewriteviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end247:
	.size	_ZN2kc21impl_rewriteviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end247-_ZN2kc21impl_rewriteviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 92
	move	$fp, $a1
	move	$s1, $a0
	beq	$a2, $a3, .LBB248_9
# %bb.1:
	ori	$a0, $zero, 93
	beq	$a2, $a0, .LBB248_5
# %bb.2:
	ori	$a0, $zero, 94
	bne	$a2, $a0, .LBB248_13
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 217
	beq	$a0, $a1, .LBB248_12
# %bb.4:
	ld.d	$a0, $fp, 0
	ld.d	$s1, $s1, 8
	b	.LBB248_17
.LBB248_5:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 217
	bne	$a0, $a1, .LBB248_14
# %bb.6:
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	beqz	$a0, .LBB248_8
# %bb.7:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1590)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1590)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB248_8:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1591)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1591)
	b	.LBB248_18
.LBB248_9:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB248_13
# %bb.10:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 6
	bne	$a0, $a1, .LBB248_13
# %bb.11:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 40
	ld.d	$a1, $s1, 16
	ld.d	$a0, $a0, 8
	pcalau12i	$s0, %pc_hi20(_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE)
	st.d	$a1, $s0, %pc_lo12(_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE)
	pcalau12i	$a1, %pc_hi20(.L.str.1593)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1593)
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	sltui	$a0, $a0, 1
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc28view_gen_rewritedefs_other_cE)
	addi.d	$a1, $a1, %pc_lo12(_ZN2kc28view_gen_rewritedefs_other_cE)
	masknez	$a1, $a1, $a0
	pcalau12i	$a2, %pc_hi20(_ZN2kc30view_gen_rewritedefs_default_cE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc30view_gen_rewritedefs_default_cE)
	maskeqz	$a0, $a2, $a0
	or	$a2, $a0, $a1
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	st.d	$zero, $s0, %pc_lo12(_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE)
.LBB248_12:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB248_13:                             # %.thread
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 80
	move	$a0, $s1
	move	$a1, $fp
	b	.LBB248_19
.LBB248_14:
	ld.d	$a0, $fp, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1592)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1592)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE)
	beqz	$a0, .LBB248_16
# %bb.15:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1590)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1590)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB248_16:
	ld.d	$a0, $fp, 0
.LBB248_17:
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1586)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1586)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1587)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1587)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1588)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1588)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1589)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1589)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114gl_alternativeE)
	ld.d	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_114gl_alternativeE)
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN12_GLOBAL__N_17gl_viewE)
	st.d	$s1, $a1, %pc_lo12(_ZN12_GLOBAL__N_17gl_viewE)
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1325)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1325)
.LBB248_18:
	move	$a0, $fp
.LBB248_19:
	move	$a2, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end248:
	.size	_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end248-_ZN2kc36impl_rewriteviewinfo_Rewriteviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparseviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_unparseviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_unparseviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_unparseviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB249_2
.LBB249_1:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB249_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 125
	bne	$a0, $a1, .LBB249_4
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
	.p2align	4, , 16
.LBB249_4:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	beqz	$a0, .LBB249_1
# %bb.5:                                # %.lr.ph
                                        #   in Loop: Header=BB249_4 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	b	.LBB249_4
.Lfunc_end249:
	.size	_ZN2kc21impl_unparseviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end249-_ZN2kc21impl_unparseviewsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparseviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_unparseviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_unparseviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_unparseviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_unparseviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end250:
	.size	_ZN2kc21impl_unparseviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end250-_ZN2kc21impl_unparseviewsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc36impl_unparseviewinfo_Unparseviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc36impl_unparseviewinfo_Unparseviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc36impl_unparseviewinfo_Unparseviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc36impl_unparseviewinfo_Unparseviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc36impl_unparseviewinfo_Unparseviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s0, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 125
	move	$fp, $a1
	move	$s1, $a0
	beq	$a2, $a3, .LBB251_9
# %bb.1:
	ori	$a0, $zero, 126
	beq	$a2, $a0, .LBB251_5
# %bb.2:
	ori	$a0, $zero, 127
	bne	$a2, $a0, .LBB251_13
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 229
	beq	$a0, $a1, .LBB251_8
# %bb.4:
	ld.d	$a0, $fp, 0
	ld.d	$s2, $s1, 8
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1586)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1586)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1587)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1587)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1588)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1588)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1589)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1589)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1123)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1123)
	move	$a0, $fp
	b	.LBB251_14
.LBB251_5:
	ld.d	$s2, $s1, 8
	ld.d	$s1, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZN2kc7unparseEPKcRNS_21printer_functor_classERNS_11uview_classE)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1592)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1592)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_120gl_unparse_goto_usedE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN12_GLOBAL__N_120gl_unparse_goto_usedE)
	beqz	$a0, .LBB251_7
# %bb.6:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1594)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1594)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB251_7:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1586)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1586)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1595)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1595)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 0
	addi.d	$a0, $a0, -229
	sltui	$a0, $a0, 1
	ori	$a2, $zero, 126
	ld.d	$a3, $a1, 72
	st.w	$a2, $sp, 0
	st.b	$zero, $sp, 4
	st.b	$a0, $sp, 5
	addi.d	$a2, $sp, 0
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1123)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1123)
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
.LBB251_8:                              # %.thread
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB251_9:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB251_13
# %bb.10:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 6
	bne	$a0, $a1, .LBB251_13
# %bb.11:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 40
	ld.d	$a0, $a0, 8
	pcalau12i	$a1, %pc_hi20(.L.str)
	addi.d	$a1, $a1, %pc_lo12(.L.str)
	pcaddu18i	$ra, %call36(strcmp)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a3, $a1, 72
	beqz	$a0, .LBB251_16
# %bb.12:
	pcalau12i	$a0, %pc_hi20(_ZN2kc28view_gen_unparsedefs_other_cE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc28view_gen_unparsedefs_other_cE)
	b	.LBB251_17
.LBB251_13:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 80
	move	$a0, $s1
	move	$a1, $fp
.LBB251_14:
	move	$a2, $s0
.LBB251_15:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB251_16:
	pcalau12i	$a0, %pc_hi20(view_gen_unparsedefs_default_c)
	addi.d	$a2, $a0, %pc_lo12(view_gen_unparsedefs_default_c)
.LBB251_17:
	move	$a0, $s1
	move	$a1, $fp
	b	.LBB251_15
.Lfunc_end251:
	.size	_ZN2kc36impl_unparseviewinfo_Unparseviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end251-_ZN2kc36impl_unparseviewinfo_Unparseviewinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_unparsedeclsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_unparsedeclsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_unparsedeclsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_unparsedeclsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception7
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB252_2
# %bb.1:
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	pcaddu18i	$t8, %call36(_ZN2kc21impl_unparsedeclsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE)
	jr	$t8
.LBB252_2:
	ld.w	$a0, $fp, 0
	ori	$a1, $zero, 126
	beq	$a0, $a1, .LBB252_9
# %bb.3:
	ori	$a1, $zero, 127
	bne	$a0, $a1, .LBB252_23
# %bb.4:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 231
	bne	$a0, $s2, .LBB252_14
# %bb.5:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 201
	bne	$a0, $a1, .LBB252_14
# %bb.6:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 200
	bne	$a0, $a1, .LBB252_14
# %bb.7:
	ld.d	$a0, $s1, 8
	ld.d	$s3, $a0, 8
	ld.d	$a1, $s0, 0
	ld.d	$s4, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1465)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1465)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_unp_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_unp_bindingsE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc33f_operatorofpatternrepresentationEPNS_26impl_patternrepresentationE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL13operatorstack)
	addi.d	$s3, $a1, %pc_lo12(_ZL13operatorstack)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB252_30
# %bb.8:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	b	.LBB252_31
.LBB252_9:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$s2, $zero, 231
	bne	$a0, $s2, .LBB252_17
# %bb.10:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 201
	bne	$a0, $a1, .LBB252_17
# %bb.11:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a0, $a0, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 200
	bne	$a0, $a1, .LBB252_17
# %bb.12:
	ld.d	$a0, $s1, 8
	ld.d	$s3, $a0, 8
	ld.d	$a1, $s0, 0
	ld.d	$s4, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a1, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1465)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1465)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_unp_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_unp_bindingsE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc33f_operatorofpatternrepresentationEPNS_26impl_patternrepresentationE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL13operatorstack)
	addi.d	$s3, $a1, %pc_lo12(_ZL13operatorstack)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB252_39
# %bb.13:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	b	.LBB252_40
.LBB252_14:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB252_23
# %bb.15:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 201
	bne	$a0, $a1, .LBB252_23
# %bb.16:
	ld.d	$a0, $s1, 8
	ld.d	$s3, $a0, 8
	ld.d	$s5, $s3, 16
	ld.d	$s4, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s1, $s1, 16
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$s6, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	ld.d	$a1, $s6, 16
.Ltmp328:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E)
	jirl	$ra, $ra, 0
.Ltmp329:
	b	.LBB252_20
.LBB252_17:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	bne	$a0, $s2, .LBB252_23
# %bb.18:
	ld.d	$a0, $s1, 8
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 201
	bne	$a0, $a1, .LBB252_23
# %bb.19:
	ld.d	$a0, $s1, 8
	ld.d	$s3, $a0, 8
	ld.d	$s5, $s3, 16
	ld.d	$s4, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s1, $s1, 16
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$s6, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	ld.d	$a1, $s6, 16
.Ltmp325:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E)
	jirl	$ra, $ra, 0
.Ltmp326:
.LBB252_20:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEE5clearEv.exit
	st.d	$zero, $s6, 16
	addi.d	$a0, $s6, 8
	st.d	$a0, $s6, 24
	st.d	$a0, $s6, 32
	st.d	$zero, $s6, 40
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_predicate_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc23view_predicate_bindingsE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1353)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1353)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_unp_predicatesE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc19view_unp_predicatesE)
	move	$a0, $s5
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1578)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1578)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_unp_bindingsE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc17view_unp_bindingsE)
	move	$a0, $s4
	move	$a1, $s0
	jirl	$ra, $a3, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2kc33f_operatorofpatternrepresentationEPNS_26impl_patternrepresentationE)
	jirl	$ra, $ra, 0
	pcalau12i	$a1, %pc_hi20(_ZL13operatorstack)
	addi.d	$s3, $a1, %pc_lo12(_ZL13operatorstack)
	ld.d	$a2, $s3, 64
	ld.d	$a1, $s3, 48
	addi.d	$a2, $a2, -8
	st.d	$a0, $sp, 0
	beq	$a1, $a2, .LBB252_25
# %bb.21:
	st.d	$a0, $a1, 0
	addi.d	$a0, $a1, 8
	st.d	$a0, $s3, 48
	b	.LBB252_26
	.p2align	4, , 16
.LBB252_22:                             # %.lr.ph126
                                        #   in Loop: Header=BB252_23 Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
.LBB252_23:                             # %.lr.ph126
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB252_22
.LBB252_24:                             # %.thread
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB252_25:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL13operatorstack)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB252_26:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit95
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s3, 48
	ld.d	$a0, $s3, 56
	beq	$a1, $a0, .LBB252_28
# %bb.27:
	addi.d	$a0, $a1, -8
	b	.LBB252_29
.LBB252_28:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a0, $a0, 504
.LBB252_29:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit98
	st.d	$a0, $s3, 48
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1579)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1579)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB252_24
.LBB252_30:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL13operatorstack)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB252_31:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s3, 48
	ld.d	$a0, $s3, 56
	beq	$a1, $a0, .LBB252_33
# %bb.32:
	addi.d	$a0, $a1, -8
	b	.LBB252_34
.LBB252_33:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a0, $a0, 504
.LBB252_34:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit
	st.d	$a0, $s3, 48
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1053)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $a0, 344
	beqz	$a0, .LBB252_24
# %bb.35:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 0
	move	$fp, $a0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 230
	bne	$fp, $a1, .LBB252_48
# %bb.36:                               # %.preheader
	bne	$a0, $a1, .LBB252_24
# %bb.37:                               # %.lr.ph123.preheader
	ori	$fp, $zero, 230
.LBB252_38:                             # %.lr.ph123
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZN2kc27warn_drop_identical_patternEPNS_20impl_unparsedeclinfoE)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s1, 16
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	beq	$a0, $fp, .LBB252_38
	b	.LBB252_24
.LBB252_39:
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$a0, $a0, %pc_lo12(_ZL13operatorstack)
	addi.d	$a1, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_)
	jirl	$ra, $ra, 0
.LBB252_40:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE4pushEOS2_.exit100
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a1, $s3, 48
	ld.d	$a0, $s3, 56
	beq	$a1, $a0, .LBB252_42
# %bb.41:
	addi.d	$a0, $a1, -8
	b	.LBB252_43
.LBB252_42:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s3, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s3, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s3, 64
	addi.d	$a0, $a0, 504
.LBB252_43:                             # %_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEE3popEv.exit103
	st.d	$a0, $s3, 48
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1053)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1053)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %got_pc_hi20(g_options)
	ld.d	$a0, $a0, %got_pc_lo12(g_options)
	ld.bu	$a0, $a0, 344
	beqz	$a0, .LBB252_24
# %bb.44:
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ld.d	$a1, $s1, 0
	ld.d	$a1, $a1, 0
	move	$fp, $a0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 230
	bne	$fp, $a1, .LBB252_50
# %bb.45:                               # %.preheader119
	bne	$a0, $a1, .LBB252_24
# %bb.46:                               # %.lr.ph.preheader
	ori	$fp, $zero, 230
.LBB252_47:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 8
	pcaddu18i	$ra, %call36(_ZN2kc27warn_drop_identical_patternEPNS_20impl_unparsedeclinfoE)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s1, 16
	ld.d	$a0, $s1, 0
	ld.d	$a1, $a0, 0
	move	$a0, $s1
	jirl	$ra, $a1, 0
	beq	$a0, $fp, .LBB252_47
	b	.LBB252_24
.LBB252_48:
	ori	$a1, $zero, 229
	beq	$a0, $a1, .LBB252_24
# %bb.49:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 3725
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	b	.LBB252_24
.LBB252_50:
	ori	$a1, $zero, 229
	beq	$a0, $a1, .LBB252_24
# %bb.51:
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$a0, $a0, %pc_lo12(.L.str.312)
	pcalau12i	$a1, %pc_hi20(.L.str.329)
	addi.d	$a2, $a1, %pc_lo12(.L.str.329)
	lu12i.w	$a1, 4
	ori	$a1, $a1, 3797
	pcaddu18i	$ra, %call36(_ZN2kc21kc_no_default_in_withEPKciS1_)
	jirl	$ra, $ra, 0
	b	.LBB252_24
.LBB252_52:
.Ltmp327:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB252_53:
.Ltmp330:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end252:
	.size	_ZN2kc21impl_unparsedeclsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end252-_ZN2kc21impl_unparsedeclsinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table252:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Lfunc_begin7-.Lfunc_begin7    # >> Call Site 1 <<
	.uleb128 .Ltmp328-.Lfunc_begin7         #   Call between .Lfunc_begin7 and .Ltmp328
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp328-.Lfunc_begin7         # >> Call Site 2 <<
	.uleb128 .Ltmp329-.Ltmp328              #   Call between .Ltmp328 and .Ltmp329
	.uleb128 .Ltmp330-.Lfunc_begin7         #     jumps to .Ltmp330
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp329-.Lfunc_begin7         # >> Call Site 3 <<
	.uleb128 .Ltmp325-.Ltmp329              #   Call between .Ltmp329 and .Ltmp325
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp325-.Lfunc_begin7         # >> Call Site 4 <<
	.uleb128 .Ltmp326-.Ltmp325              #   Call between .Ltmp325 and .Ltmp326
	.uleb128 .Ltmp327-.Lfunc_begin7         #     jumps to .Ltmp327
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp326-.Lfunc_begin7         # >> Call Site 5 <<
	.uleb128 .Lfunc_end252-.Ltmp326         #   Call between .Ltmp326 and .Lfunc_end252
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end7:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase3:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2kc21impl_unparsedeclsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_unparsedeclsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_unparsedeclsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_unparsedeclsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_unparsedeclsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 126
	beq	$a0, $a3, .LBB253_4
# %bb.1:
	ori	$a3, $zero, 127
	bne	$a0, $a3, .LBB253_3
# %bb.2:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1596)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1596)
	move	$a0, $a1
	move	$a1, $a3
	jirl	$ra, $a4, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_120gl_unparse_goto_usedE)
	ori	$a1, $zero, 1
	st.b	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_120gl_unparse_goto_usedE)
.LBB253_3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB253_4:
	move	$s0, $a1
	move	$fp, $a2
	pcalau12i	$s1, %pc_hi20(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $s1, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	pcaddu18i	$ra, %call36(_ZN2kc12f_lookupdeclEPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB253_6
# %bb.5:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB253_6:
	ld.d	$a1, $s1, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	ld.d	$a0, $a1, 32
	ld.w	$a1, $a1, 24
	pcaddu18i	$ra, %call36(_ZN2kc8FileLineEPNS_20impl_casestring__StrEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, %pc_lo12(_ZN12_GLOBAL__N_19gl_phylumE)
	move	$fp, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.1111)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1111)
	pcaddu18i	$ra, %call36(_ZN2kc12Problem1S1IDEPKcPNS_7impl_IDE)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2kc8NonFatalEPNS_13impl_filelineEPNS_12impl_problemE)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZN2kc8v_reportEPNS_10impl_errorE)
	jr	$t8
.Lfunc_end253:
	.size	_ZN2kc21impl_unparsedeclsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end253-_ZN2kc21impl_unparsedeclsinfo14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end254:
	.size	_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end254-_ZN2kc36impl_unparsedeclinfo_Unparsedeclinfo10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_declaration_AcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_ac_declaration_AcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_ac_declaration_AcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_ac_declaration_AcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_ac_declaration_AcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$a4, $a4, 72
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $a3
	jirl	$ra, $a4, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s1
	move	$a2, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end255:
	.size	_ZN2kc33impl_ac_declaration_AcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end255-_ZN2kc33impl_ac_declaration_AcDeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_ac_declaration_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_ac_declaration_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_ac_declaration_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_ac_declaration_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB256_2
# %bb.1:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB256_2:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end256:
	.size	_ZN2kc24impl_ac_declaration_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end256-_ZN2kc24impl_ac_declaration_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_ac_declaration_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_ac_declaration_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_ac_declaration_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_ac_declaration_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_ac_declaration_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end257:
	.size	_ZN2kc24impl_ac_declaration_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end257-_ZN2kc24impl_ac_declaration_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc30impl_ac_declaration_specifiers10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_ac_declaration_specifiers10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiers10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_ac_declaration_specifiers10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_ac_declaration_specifiers10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s2
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB258_2
# %bb.1:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB258_2:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s1, $s2, 8
	ori	$a1, $zero, 235
	beq	$a0, $a1, .LBB258_4
# %bb.3:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB258_4:                              # %.sink.split
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end258:
	.size	_ZN2kc30impl_ac_declaration_specifiers10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end258-_ZN2kc30impl_ac_declaration_specifiers10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_ac_declaration_specifiers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_ac_declaration_specifiers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_ac_declaration_specifiers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_ac_declaration_specifiers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_ac_declaration_specifiers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end259:
	.size	_ZN2kc30impl_ac_declaration_specifiers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end259-_ZN2kc30impl_ac_declaration_specifiers14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end260:
	.size	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end260-_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeQual10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end261:
	.size	_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end261-_ZN2kc48impl_ac_declaration_specifier_AcDeclSpecTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end262:
	.size	_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end262-_ZN2kc51impl_ac_declaration_specifier_AcDeclSpecStorageSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc41impl_ac_storage_class_specifier_AcVirtual10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc41impl_ac_storage_class_specifier_AcVirtual10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc41impl_ac_storage_class_specifier_AcVirtual10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc41impl_ac_storage_class_specifier_AcVirtual10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc41impl_ac_storage_class_specifier_AcVirtual10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 110
	bne	$a0, $a3, .LBB263_2
# %bb.1:
	ret
.LBB263_2:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1597)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1597)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.Lfunc_end263:
	.size	_ZN2kc41impl_ac_storage_class_specifier_AcVirtual10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end263-_ZN2kc41impl_ac_storage_class_specifier_AcVirtual10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc41impl_ac_storage_class_specifier_AcTypedef10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc41impl_ac_storage_class_specifier_AcTypedef10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc41impl_ac_storage_class_specifier_AcTypedef10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc41impl_ac_storage_class_specifier_AcTypedef10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc41impl_ac_storage_class_specifier_AcTypedef10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1598)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1598)
	jr	$a3
.Lfunc_end264:
	.size	_ZN2kc41impl_ac_storage_class_specifier_AcTypedef10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end264-_ZN2kc41impl_ac_storage_class_specifier_AcTypedef10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc40impl_ac_storage_class_specifier_AcExtern10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc40impl_ac_storage_class_specifier_AcExtern10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc40impl_ac_storage_class_specifier_AcExtern10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc40impl_ac_storage_class_specifier_AcExtern10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc40impl_ac_storage_class_specifier_AcExtern10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1599)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1599)
	jr	$a3
.Lfunc_end265:
	.size	_ZN2kc40impl_ac_storage_class_specifier_AcExtern10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end265-_ZN2kc40impl_ac_storage_class_specifier_AcExtern10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc40impl_ac_storage_class_specifier_AcStatic10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc40impl_ac_storage_class_specifier_AcStatic10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc40impl_ac_storage_class_specifier_AcStatic10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc40impl_ac_storage_class_specifier_AcStatic10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc40impl_ac_storage_class_specifier_AcStatic10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a0, $a2, 0
	ori	$a3, $zero, 141
	bne	$a0, $a3, .LBB266_2
# %bb.1:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1600)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1600)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB266_2:
	ret
.Lfunc_end266:
	.size	_ZN2kc40impl_ac_storage_class_specifier_AcStatic10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end266-_ZN2kc40impl_ac_storage_class_specifier_AcStatic10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc42impl_ac_storage_class_specifier_AcRegister10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc42impl_ac_storage_class_specifier_AcRegister10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc42impl_ac_storage_class_specifier_AcRegister10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc42impl_ac_storage_class_specifier_AcRegister10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc42impl_ac_storage_class_specifier_AcRegister10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1601)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1601)
	jr	$a3
.Lfunc_end267:
	.size	_ZN2kc42impl_ac_storage_class_specifier_AcRegister10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end267-_ZN2kc42impl_ac_storage_class_specifier_AcRegister10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc38impl_ac_storage_class_specifier_AcAuto10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc38impl_ac_storage_class_specifier_AcAuto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc38impl_ac_storage_class_specifier_AcAuto10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc38impl_ac_storage_class_specifier_AcAuto10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc38impl_ac_storage_class_specifier_AcAuto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1602)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1602)
	jr	$a3
.Lfunc_end268:
	.size	_ZN2kc38impl_ac_storage_class_specifier_AcAuto10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end268-_ZN2kc38impl_ac_storage_class_specifier_AcAuto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_type_specifier_AcTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_ac_type_specifier_AcTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_ac_type_specifier_AcTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_ac_type_specifier_AcTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_ac_type_specifier_AcTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end269:
	.size	_ZN2kc33impl_ac_type_specifier_AcTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end269-_ZN2kc33impl_ac_type_specifier_AcTypeSpec10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc36impl_ac_type_qualifier_AcNoQualifier10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc36impl_ac_type_qualifier_AcNoQualifier10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc36impl_ac_type_qualifier_AcNoQualifier10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc36impl_ac_type_qualifier_AcNoQualifier10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc36impl_ac_type_qualifier_AcNoQualifier10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end270:
	.size	_ZN2kc36impl_ac_type_qualifier_AcNoQualifier10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end270-_ZN2kc36impl_ac_type_qualifier_AcNoQualifier10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc33impl_ac_type_qualifier_AcUnsigned10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_ac_type_qualifier_AcUnsigned10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_ac_type_qualifier_AcUnsigned10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_ac_type_qualifier_AcUnsigned10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_ac_type_qualifier_AcUnsigned10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1603)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1603)
	jr	$a3
.Lfunc_end271:
	.size	_ZN2kc33impl_ac_type_qualifier_AcUnsigned10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end271-_ZN2kc33impl_ac_type_qualifier_AcUnsigned10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_type_qualifier_AcVolatile10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_ac_type_qualifier_AcVolatile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_ac_type_qualifier_AcVolatile10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_ac_type_qualifier_AcVolatile10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_ac_type_qualifier_AcVolatile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1604)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1604)
	jr	$a3
.Lfunc_end272:
	.size	_ZN2kc33impl_ac_type_qualifier_AcVolatile10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end272-_ZN2kc33impl_ac_type_qualifier_AcVolatile10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_ac_type_qualifier_AcConst10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_ac_type_qualifier_AcConst10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_ac_type_qualifier_AcConst10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_ac_type_qualifier_AcConst10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_ac_type_qualifier_AcConst10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1605)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1605)
	jr	$a3
.Lfunc_end273:
	.size	_ZN2kc30impl_ac_type_qualifier_AcConst10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end273-_ZN2kc30impl_ac_type_qualifier_AcConst10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_init_declarator_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_ac_init_declarator_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_ac_init_declarator_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_ac_init_declarator_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s2
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB274_2
# %bb.1:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB274_2:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s1, $s2, 8
	ori	$a1, $zero, 251
	beq	$a0, $a1, .LBB274_4
# %bb.3:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB274_4:                              # %.sink.split
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end274:
	.size	_ZN2kc28impl_ac_init_declarator_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end274-_ZN2kc28impl_ac_init_declarator_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_init_declarator_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_ac_init_declarator_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_ac_init_declarator_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_ac_init_declarator_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_ac_init_declarator_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end275:
	.size	_ZN2kc28impl_ac_init_declarator_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end275-_ZN2kc28impl_ac_init_declarator_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc34impl_ac_init_declarator_AcInitDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc34impl_ac_init_declarator_AcInitDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc34impl_ac_init_declarator_AcInitDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc34impl_ac_init_declarator_AcInitDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc34impl_ac_init_declarator_AcInitDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end276:
	.size	_ZN2kc34impl_ac_init_declarator_AcInitDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end276-_ZN2kc34impl_ac_init_declarator_AcInitDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc31impl_ac_declarator_AcDeclarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc31impl_ac_declarator_AcDeclarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc31impl_ac_declarator_AcDeclarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc31impl_ac_declarator_AcDeclarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc31impl_ac_declarator_AcDeclarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	addi.d	$a2, $a2, -111
	ori	$a3, $zero, 34
	move	$s0, $a1
	bltu	$a3, $a2, .LBB277_2
# %bb.1:
	slli.d	$a1, $a2, 2
	pcalau12i	$a2, %pc_hi20(.LJTI277_0)
	addi.d	$a2, $a2, %pc_lo12(.LJTI277_0)
	ldx.w	$a1, $a2, $a1
	add.d	$a1, $a2, $a1
	jr	$a1
.LBB277_2:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s2, $a0, 16
	ld.d	$s1, $a0, 24
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	b	.LBB277_4
.LBB277_3:
	ld.d	$s1, $a0, 24
.LBB277_4:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end277:
	.size	_ZN2kc31impl_ac_declarator_AcDeclarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end277-_ZN2kc31impl_ac_declarator_AcDeclarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI277_0:
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_3-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_2-.LJTI277_0
	.word	.LBB277_3-.LJTI277_0
                                        # -- End function
	.text
	.globl	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	ld.d	$a1, $a1, 0
	ld.d	$s0, $a0, 8
	ld.d	$a3, $a1, 0
	move	$s1, $a2
	pcalau12i	$a0, %pc_hi20(.L.str.1606)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1606)
	move	$a0, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end278:
	.size	_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end278-_ZN2kc42impl_ac_direct_declarator_AcOperatorDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 110
	move	$s0, $a1
	move	$s1, $a0
	beq	$a2, $a3, .LBB279_4
# %bb.1:
	ori	$a0, $zero, 111
	beq	$a2, $a0, .LBB279_4
# %bb.2:
	ori	$a1, $zero, 141
	ori	$a0, $zero, 80
	bne	$a2, $a1, .LBB279_6
# %bb.3:
	ld.d	$s1, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.1606)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1606)
	b	.LBB279_5
.LBB279_4:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a1, 72
	pcalau12i	$a1, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a1, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a1, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1607)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1607)
.LBB279_5:                              # %.sink.split
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ori	$a0, $zero, 72
.LBB279_6:
	ld.d	$a1, $s1, 0
	ldx.d	$a3, $a1, $a0
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end279:
	.size	_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end279-_ZN2kc44impl_ac_direct_declarator_AcConvOperatorDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc38impl_ac_direct_declarator_AcMemberDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc38impl_ac_direct_declarator_AcMemberDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc38impl_ac_direct_declarator_AcMemberDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc38impl_ac_direct_declarator_AcMemberDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc38impl_ac_direct_declarator_AcMemberDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 110
	move	$s0, $a1
	beq	$a2, $a3, .LBB280_4
# %bb.1:
	ori	$a1, $zero, 111
	beq	$a2, $a1, .LBB280_4
# %bb.2:
	ori	$a3, $zero, 141
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB280_6
# %bb.3:
	vld	$vr0, $a0, 16
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	b	.LBB280_5
.LBB280_4:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	vld	$vr0, $a0, 16
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	ld.d	$a3, $a2, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $a1
	move	$a1, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1071)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1071)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB280_5:                              # %.sink.split
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vst	$vr0, $sp, 0                    # 16-byte Folded Spill
	vpickve2gr.d	$a0, $vr0, 0
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	vld	$vr0, $sp, 0                    # 16-byte Folded Reload
	vpickve2gr.d	$a0, $vr0, 1
	ori	$a1, $zero, 72
.LBB280_6:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end280:
	.size	_ZN2kc38impl_ac_direct_declarator_AcMemberDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end280-_ZN2kc38impl_ac_direct_declarator_AcMemberDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.w	$a3, $a2, 0
	addi.d	$a3, $a3, -111
	ori	$a4, $zero, 34
	bltu	$a4, $a3, .LBB281_3
# %bb.1:
	slli.d	$a3, $a3, 2
	pcalau12i	$a4, %pc_hi20(.LJTI281_0)
	addi.d	$a4, $a4, %pc_lo12(.LJTI281_0)
	ldx.w	$a3, $a4, $a3
	add.d	$a3, $a4, $a3
	jr	$a3
.LBB281_2:
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$a4, $a4, 72
	move	$a0, $a3
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	b	.LBB281_10
.LBB281_3:
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$s0, $a0, 24
	ld.d	$s1, $a0, 32
	ld.d	$a4, $a4, 72
	move	$a0, $a3
	move	$s2, $a1
	move	$s3, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s2
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s2
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s2
	move	$a2, $s3
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s2
	move	$a2, $s3
	b	.LBB281_10
.LBB281_4:
	move	$fp, $a1
	move	$s0, $a2
	move	$s1, $a0
	ld.d	$a0, $a0, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 272
	bne	$a0, $a1, .LBB281_11
# %bb.5:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1457)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1457)
	move	$a0, $fp
	move	$a2, $s0
	b	.LBB281_10
.LBB281_6:
	ld.d	$a0, $a0, 16
	b	.LBB281_9
.LBB281_7:
	ld.d	$a3, $a0, 16
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 24
	ld.d	$s0, $a0, 32
	ld.d	$a4, $a4, 72
	move	$a0, $a3
	move	$s1, $a1
	move	$s2, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1064)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1064)
	move	$a0, $s1
	move	$a2, $s2
	b	.LBB281_10
.LBB281_8:
	ld.d	$a0, $a0, 32
.LBB281_9:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
.LBB281_10:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB281_11:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end281:
	.size	_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end281-_ZN2kc46impl_ac_direct_declarator_AcQualifiedDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI281_0:
	.word	.LBB281_2-.LJTI281_0
	.word	.LBB281_6-.LJTI281_0
	.word	.LBB281_4-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_7-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_3-.LJTI281_0
	.word	.LBB281_8-.LJTI281_0
                                        # -- End function
	.text
	.globl	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	addi.d	$a3, $a3, -111
	ori	$a4, $zero, 34
	bltu	$a4, $a3, .LBB282_5
# %bb.1:
	slli.d	$a3, $a3, 2
	pcalau12i	$a4, %pc_hi20(.LJTI282_0)
	addi.d	$a4, $a4, %pc_lo12(.LJTI282_0)
	ldx.w	$a3, $a4, $a3
	add.d	$a3, $a4, $a3
	jr	$a3
.LBB282_2:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	b	.LBB282_6
.LBB282_3:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	move	$fp, $a1
	move	$s0, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1457)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1457)
	move	$a0, $fp
	move	$a2, $s0
	b	.LBB282_6
.LBB282_4:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB282_5:
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$a4, $a4, 72
	move	$a0, $a3
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
.LBB282_6:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end282:
	.size	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end282-_ZN2kc43impl_ac_direct_declarator_AcDirectDeclProto10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI282_0:
	.word	.LBB282_2-.LJTI282_0
	.word	.LBB282_2-.LJTI282_0
	.word	.LBB282_3-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_5-.LJTI282_0
	.word	.LBB282_4-.LJTI282_0
                                        # -- End function
	.text
	.globl	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$a3, $a0
	ld.w	$a4, $a2, 0
	ld.d	$a0, $a0, 8
	ori	$a5, $zero, 112
	beq	$a4, $a5, .LBB283_2
# %bb.1:
	ori	$a5, $zero, 113
	ld.d	$a4, $a0, 0
	ld.d	$fp, $a3, 16
	ld.d	$a3, $a4, 72
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1393)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1393)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1394)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1394)
	move	$a0, $s0
	move	$a2, $s1
	b	.LBB283_3
.LBB283_2:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
.LBB283_3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end283:
	.size	_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end283-_ZN2kc43impl_ac_direct_declarator_AcDirectDeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ld.d	$fp, $a0, 8
	ori	$a0, $zero, 112
	beq	$a3, $a0, .LBB284_2
# %bb.1:
	ori	$a0, $zero, 113
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	b	.LBB284_3
.LBB284_2:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
.LBB284_3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end284:
	.size	_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end284-_ZN2kc42impl_ac_direct_declarator_AcDirectDeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc40impl_ac_direct_declarator_AcDirectDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end285:
	.size	_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end285-_ZN2kc40impl_ac_direct_declarator_AcDirectDeclId10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_pointer_option_Yespointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_ac_pointer_option_Yespointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_ac_pointer_option_Yespointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_ac_pointer_option_Yespointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_ac_pointer_option_Yespointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end286:
	.size	_ZN2kc33impl_ac_pointer_option_Yespointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end286-_ZN2kc33impl_ac_pointer_option_Yespointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_ac_pointer_option_Nopointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_ac_pointer_option_Nopointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_ac_pointer_option_Nopointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_ac_pointer_option_Nopointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_ac_pointer_option_Nopointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end287:
	.size	_ZN2kc32impl_ac_pointer_option_Nopointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end287-_ZN2kc32impl_ac_pointer_option_Nopointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc29impl_ac_pointer_AcPointerCons10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc29impl_ac_pointer_AcPointerCons10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc29impl_ac_pointer_AcPointerCons10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc29impl_ac_pointer_AcPointerCons10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc29impl_ac_pointer_AcPointerCons10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 0
	move	$fp, $a2
	move	$s0, $a1
	jirl	$ra, $a3, 0
	ori	$a1, $zero, 274
	bne	$a0, $a1, .LBB288_2
# %bb.1:
	ld.d	$s1, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.1608)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1608)
	b	.LBB288_3
.LBB288_2:
	ld.d	$a0, $s0, 0
	ld.d	$s2, $s1, 8
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1381)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1381)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
.LBB288_3:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end288:
	.size	_ZN2kc29impl_ac_pointer_AcPointerCons10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end288-_ZN2kc29impl_ac_pointer_AcPointerCons10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_pointer_AcPointerNil10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_ac_pointer_AcPointerNil10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_ac_pointer_AcPointerNil10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_ac_pointer_AcPointerNil10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_ac_pointer_AcPointerNil10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 0
	move	$fp, $a2
	move	$s0, $a1
	jirl	$ra, $a3, 0
	ori	$a1, $zero, 274
	bne	$a0, $a1, .LBB289_2
# %bb.1:
	pcalau12i	$a0, %pc_hi20(.L.str.1608)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1608)
	b	.LBB289_3
.LBB289_2:
	ld.d	$a0, $s0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1381)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1381)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
.LBB289_3:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end289:
	.size	_ZN2kc28impl_ac_pointer_AcPointerNil10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end289-_ZN2kc28impl_ac_pointer_AcPointerNil10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_ac_ref_option_AcRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_ac_ref_option_AcRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_ac_ref_option_AcRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_ac_ref_option_AcRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_ac_ref_option_AcRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a0, $a1
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.1228)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1228)
	jr	$a3
.Lfunc_end290:
	.size	_ZN2kc24impl_ac_ref_option_AcRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end290-_ZN2kc24impl_ac_ref_option_AcRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_ac_ref_option_AcNoRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_ac_ref_option_AcNoRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_ac_ref_option_AcNoRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_ac_ref_option_AcNoRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_ac_ref_option_AcNoRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end291:
	.size	_ZN2kc26impl_ac_ref_option_AcNoRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end291-_ZN2kc26impl_ac_ref_option_AcNoRef10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc36impl_ac_operator_name_AcOperatorName10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc36impl_ac_operator_name_AcOperatorName10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc36impl_ac_operator_name_AcOperatorName10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc36impl_ac_operator_name_AcOperatorName10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc36impl_ac_operator_name_AcOperatorName10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end292:
	.size	_ZN2kc36impl_ac_operator_name_AcOperatorName10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end292-_ZN2kc36impl_ac_operator_name_AcOperatorName10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_class_qualifier_help_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_ac_class_qualifier_help_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_ac_class_qualifier_help_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB293_2
	b	.LBB293_3
	.p2align	4, , 16
.LBB293_1:                              # %.lr.ph
                                        #   in Loop: Header=BB293_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB293_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB293_1
.LBB293_3:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end293:
	.size	_ZN2kc33impl_ac_class_qualifier_help_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end293-_ZN2kc33impl_ac_class_qualifier_help_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc33impl_ac_class_qualifier_help_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_ac_class_qualifier_help_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_ac_class_qualifier_help_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_ac_class_qualifier_help_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_ac_class_qualifier_help_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end294:
	.size	_ZN2kc33impl_ac_class_qualifier_help_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end294-_ZN2kc33impl_ac_class_qualifier_help_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc28impl_ac_class_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_ac_class_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_ac_class_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_ac_class_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB295_2
# %bb.1:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB295_2:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1071)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1071)
	move	$a0, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end295:
	.size	_ZN2kc28impl_ac_class_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end295-_ZN2kc28impl_ac_class_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_ac_class_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_ac_class_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_ac_class_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_ac_class_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_ac_class_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end296:
	.size	_ZN2kc28impl_ac_class_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end296-_ZN2kc28impl_ac_class_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc27impl_ac_type_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_ac_type_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_ac_type_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_ac_type_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s2
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB297_2
# %bb.1:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB297_2:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s1, $s2, 8
	ori	$a1, $zero, 274
	beq	$a0, $a1, .LBB297_4
# %bb.3:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB297_4:                              # %.sink.split
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end297:
	.size	_ZN2kc27impl_ac_type_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end297-_ZN2kc27impl_ac_type_qualifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_ac_type_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_ac_type_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_ac_type_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_ac_type_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_ac_type_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end298:
	.size	_ZN2kc27impl_ac_type_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end298-_ZN2kc27impl_ac_type_qualifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc41impl_ac_parameter_type_list_AcParList3Dot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	move	$fp, $a2
	ld.wu	$s1, $a2, 0
	ld.d	$a3, $a3, 72
	move	$s0, $a1
	jirl	$ra, $a3, 0
	bstrpick.d	$a0, $s1, 31, 1
	slli.w	$a0, $a0, 1
	ori	$a1, $zero, 112
	bne	$a0, $a1, .LBB299_2
# %bb.1:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB299_2:
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1609)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1609)
	move	$a0, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end299:
	.size	_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end299-_ZN2kc41impl_ac_parameter_type_list_AcParList3Dot10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc37impl_ac_parameter_type_list_AcParList10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc37impl_ac_parameter_type_list_AcParList10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc37impl_ac_parameter_type_list_AcParList10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc37impl_ac_parameter_type_list_AcParList10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc37impl_ac_parameter_type_list_AcParList10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	ori	$a3, $zero, 112
	move	$s0, $a1
	move	$s1, $a0
	beq	$a2, $a3, .LBB300_2
# %bb.1:
	ori	$a0, $zero, 113
	bne	$a2, $a0, .LBB300_4
.LBB300_2:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 278
	bne	$a0, $a1, .LBB300_4
# %bb.3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB300_4:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end300:
	.size	_ZN2kc37impl_ac_parameter_type_list_AcParList10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end300-_ZN2kc37impl_ac_parameter_type_list_AcParList10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_parameter_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_ac_parameter_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_ac_parameter_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_ac_parameter_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s2
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB301_2
# %bb.1:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB301_2:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.w	$s3, $fp, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s1, $s2, 8
	ori	$a1, $zero, 113
	bne	$s3, $a1, .LBB301_6
# %bb.3:
	ori	$a1, $zero, 278
	beq	$a0, $a1, .LBB301_5
# %bb.4:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB301_5:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1610)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1610)
	move	$a0, $s0
	b	.LBB301_9
.LBB301_6:
	ori	$a1, $zero, 278
	beq	$a0, $a1, .LBB301_8
# %bb.7:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB301_8:
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
.LBB301_9:
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end301:
	.size	_ZN2kc22impl_ac_parameter_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end301-_ZN2kc22impl_ac_parameter_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_parameter_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_ac_parameter_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_ac_parameter_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_ac_parameter_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_ac_parameter_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end302:
	.size	_ZN2kc22impl_ac_parameter_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end302-_ZN2kc22impl_ac_parameter_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	addi.d	$a2, $a2, -108
	ori	$a3, $zero, 33
	move	$s0, $a1
	move	$s1, $a0
	bltu	$a3, $a2, .LBB303_5
# %bb.1:
	slli.d	$a0, $a2, 2
	pcalau12i	$a1, %pc_hi20(.LJTI303_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI303_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB303_2:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 292
	beq	$a0, $a1, .LBB303_5
# %bb.3:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 291
	bne	$a0, $a1, .LBB303_5
# %bb.4:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $s1, 24
	ld.d	$a2, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$s1, $a1, 8
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1446)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1446)
	b	.LBB303_6
.LBB303_5:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
.LBB303_6:                              # %.thread
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB303_7:                              # %.thread
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB303_8:
	ld.d	$s1, $s1, 16
	b	.LBB303_7
.Lfunc_end303:
	.size	_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end303-_ZN2kc46impl_ac_parameter_declaration_AcParDeclAbsdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI303_0:
	.word	.LBB303_2-.LJTI303_0
	.word	.LBB303_2-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_8-.LJTI303_0
	.word	.LBB303_2-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_5-.LJTI303_0
	.word	.LBB303_2-.LJTI303_0
                                        # -- End function
	.text
	.globl	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	addi.d	$a2, $a2, -108
	ori	$a3, $zero, 33
	move	$s0, $a1
	move	$s1, $a0
	bltu	$a3, $a2, .LBB304_5
# %bb.1:
	slli.d	$a0, $a2, 2
	pcalau12i	$a1, %pc_hi20(.LJTI304_0)
	addi.d	$a1, $a1, %pc_lo12(.LJTI304_0)
	ldx.w	$a0, $a1, $a0
	add.d	$a0, $a1, $a0
	jr	$a0
.LBB304_2:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 292
	beq	$a0, $a1, .LBB304_5
# %bb.3:
	ld.d	$a0, $s1, 24
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ori	$a1, $zero, 291
	bne	$a0, $a1, .LBB304_5
# %bb.4:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $s1, 24
	ld.d	$a2, $a0, 0
	ld.d	$s2, $s1, 16
	ld.d	$s1, $a1, 8
	ld.d	$a3, $a2, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1446)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1446)
	b	.LBB304_6
.LBB304_5:
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 16
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
.LBB304_6:                              # %.thread
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB304_7:                              # %.thread
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB304_8:
	ld.d	$s1, $s1, 16
	b	.LBB304_7
.Lfunc_end304:
	.size	_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end304-_ZN2kc43impl_ac_parameter_declaration_AcParDeclDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2, 0x0
.LJTI304_0:
	.word	.LBB304_2-.LJTI304_0
	.word	.LBB304_2-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_8-.LJTI304_0
	.word	.LBB304_2-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_5-.LJTI304_0
	.word	.LBB304_2-.LJTI304_0
                                        # -- End function
	.text
	.globl	_ZN2kc23impl_ac_identifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_ac_identifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_ac_identifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_ac_identifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s2
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB305_2
# %bb.1:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB305_2:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s1, $s2, 8
	ori	$a1, $zero, 282
	beq	$a0, $a1, .LBB305_4
# %bb.3:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1056)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1056)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB305_4:                              # %.sink.split
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end305:
	.size	_ZN2kc23impl_ac_identifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end305-_ZN2kc23impl_ac_identifier_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_ac_identifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_ac_identifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_ac_identifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_ac_identifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_ac_identifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end306:
	.size	_ZN2kc23impl_ac_identifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end306-_ZN2kc23impl_ac_identifier_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 112
	beq	$a3, $a4, .LBB307_2
# %bb.1:
	ori	$a4, $zero, 113
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$a4, $a4, 72
	move	$a0, $a3
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a4, 0
	move	$a1, $s0
	move	$a2, $s1
	b	.LBB307_3
.LBB307_2:
	ld.d	$fp, $a0, 16
.LBB307_3:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end307:
	.size	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end307-_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclDirdecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 112
	beq	$a3, $a4, .LBB308_3
# %bb.1:
	ori	$a4, $zero, 113
	bne	$a3, $a4, .LBB308_4
# %bb.2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	move	$fp, $a1
	move	$s0, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1611)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1611)
	move	$a0, $fp
	move	$a2, $s0
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB308_3:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1612)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1612)
	move	$a0, $a1
	move	$a1, $a3
	jr	$a4
.LBB308_4:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end308:
	.size	_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end308-_ZN2kc44impl_ac_abstract_declarator_AcAbsdeclPointer10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 8
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.Lfunc_end309:
	.size	_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end309-_ZN2kc74impl_ac_direct_abstract_declarator_option_Yesac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end310:
	.size	_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end310-_ZN2kc73impl_ac_direct_abstract_declarator_option_Noac_direct_abstract_declarator10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a3, $a0
	ld.w	$a4, $a2, 0
	ld.d	$a0, $a0, 8
	ori	$a5, $zero, 112
	bne	$a4, $a5, .LBB311_2
# %bb.1:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.LBB311_2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a4, $a0, 0
	ld.d	$fp, $a3, 16
	ld.d	$a3, $a4, 72
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end311:
	.size	_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end311-_ZN2kc49impl_ac_direct_abstract_declarator_AcDirAbsdeclFn10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	move	$a3, $a0
	ld.w	$a4, $a2, 0
	ld.d	$a0, $a0, 8
	ori	$a5, $zero, 112
	bne	$a4, $a5, .LBB312_2
# %bb.1:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 72
	jr	$a3
.LBB312_2:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a4, $a0, 0
	ld.d	$fp, $a3, 16
	ld.d	$a3, $a4, 72
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1393)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1393)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1394)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1394)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end312:
	.size	_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end312-_ZN2kc52impl_ac_direct_abstract_declarator_AcDirAbsdeclArray10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.w	$a3, $a2, 0
	ld.d	$fp, $a0, 8
	ori	$a0, $zero, 112
	bne	$a3, $a0, .LBB313_2
# %bb.1:
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	b	.LBB313_3
.LBB313_2:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
.LBB313_3:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end313:
	.size	_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end313-_ZN2kc51impl_ac_direct_abstract_declarator_AcDirAbsdeclPack10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc59impl_ac_constant_expression_option_Noac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end314:
	.size	_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end314-_ZN2kc59impl_ac_constant_expression_option_Noac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end315:
	.size	_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end315-_ZN2kc60impl_ac_constant_expression_option_Yesac_constant_expression10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc39impl_ac_constant_expression_AcConstExpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc39impl_ac_constant_expression_AcConstExpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc39impl_ac_constant_expression_AcConstExpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc39impl_ac_constant_expression_AcConstExpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc39impl_ac_constant_expression_AcConstExpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a0, $a0, 8
	ld.d	$a2, $a0, 0
	ld.d	$a3, $a2, 72
	pcalau12i	$a2, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	addi.d	$a2, $a2, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	jr	$a3
.Lfunc_end316:
	.size	_ZN2kc39impl_ac_constant_expression_AcConstExpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end316-_ZN2kc39impl_ac_constant_expression_AcConstExpr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_ac_constant_expression_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_ac_constant_expression_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_ac_constant_expression_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_ac_constant_expression_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB317_2
# %bb.1:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB317_2:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$s1, $s1, 8
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1393)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1393)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1394)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1394)
	move	$a0, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end317:
	.size	_ZN2kc32impl_ac_constant_expression_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end317-_ZN2kc32impl_ac_constant_expression_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc32impl_ac_constant_expression_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_ac_constant_expression_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_ac_constant_expression_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_ac_constant_expression_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_ac_constant_expression_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end318:
	.size	_ZN2kc32impl_ac_constant_expression_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end318-_ZN2kc32impl_ac_constant_expression_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 110
	bne	$a3, $a4, .LBB319_2
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a1, 0
	ld.d	$fp, $a0, 8
	ld.d	$a4, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.340)
	addi.d	$a3, $a0, %pc_lo12(.L.str.340)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB319_2:
	ret
.Lfunc_end319:
	.size	_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end319-_ZN2kc40impl_ac_opt_base_init_list_AcYesBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end320:
	.size	_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end320-_ZN2kc39impl_ac_opt_base_init_list_AcNoBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc22impl_ac_base_init_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_ac_base_init_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_ac_base_init_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_ac_base_init_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$fp, $a2
	move	$s0, $a1
	move	$a0, $s1
	jirl	$ra, $a3, 0
	bnez	$a0, .LBB321_7
# %bb.1:
	ld.w	$a1, $fp, 0
	ld.d	$a0, $s1, 16
	ori	$a2, $zero, 110
	bne	$a1, $a2, .LBB321_5
# %bb.2:
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s2, $s1, 8
	ori	$a1, $zero, 298
	beq	$a0, $a1, .LBB321_4
# %bb.3:
	ld.d	$a0, $s1, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1203)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
.LBB321_4:                              # %.loopexit.sink.split
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.LBB321_5:                              # %.preheader
	beqz	$a0, .LBB321_7
	.p2align	4, , 16
.LBB321_6:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$s1, $s1, 16
	ld.d	$a0, $s1, 16
	bnez	$a0, .LBB321_6
.LBB321_7:                              # %.loopexit
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end321:
	.size	_ZN2kc22impl_ac_base_init_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end321-_ZN2kc22impl_ac_base_init_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_ac_base_init_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_ac_base_init_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_ac_base_init_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_ac_base_init_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_ac_base_init_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end322:
	.size	_ZN2kc22impl_ac_base_init_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end322-_ZN2kc22impl_ac_base_init_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc28impl_ac_base_init_AcBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_ac_base_init_AcBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_ac_base_init_AcBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_ac_base_init_AcBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_ac_base_init_AcBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 110
	bne	$a3, $a4, .LBB323_2
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$a5, $a4, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a4, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $a3
	move	$s0, $a1
	move	$s1, $a2
	move	$a2, $a4
	jirl	$ra, $a5, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1072)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1072)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.341)
	addi.d	$a1, $a0, %pc_lo12(.L.str.341)
	move	$a0, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB323_2:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end323:
	.size	_ZN2kc28impl_ac_base_init_AcBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end323-_ZN2kc28impl_ac_base_init_AcBaseInit10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_baseclass_declarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_baseclass_declarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_baseclass_declarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_baseclass_declarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB324_2
	b	.LBB324_3
	.p2align	4, , 16
.LBB324_1:                              # %.lr.ph
                                        #   in Loop: Header=BB324_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB324_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB324_1
.LBB324_3:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end324:
	.size	_ZN2kc27impl_baseclass_declarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end324-_ZN2kc27impl_baseclass_declarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_baseclass_declarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_baseclass_declarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_baseclass_declarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_baseclass_declarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_baseclass_declarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end325:
	.size	_ZN2kc27impl_baseclass_declarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end325-_ZN2kc27impl_baseclass_declarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc33impl_baseclass_decl_BaseClassDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc33impl_baseclass_decl_BaseClassDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc33impl_baseclass_decl_BaseClassDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc33impl_baseclass_decl_BaseClassDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc33impl_baseclass_decl_BaseClassDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end326:
	.size	_ZN2kc33impl_baseclass_decl_BaseClassDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end326-_ZN2kc33impl_baseclass_decl_BaseClassDecl10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_baseclass_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_baseclass_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_baseclass_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_baseclass_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_baseclass_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$fp, $a1
	move	$a0, $s2
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB327_2
# %bb.1:
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB327_2:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, 0
	jirl	$ra, $a1, 0
	ld.d	$s1, $s2, 8
	ori	$a1, $zero, 304
	bne	$a0, $a1, .LBB327_4
# %bb.3:
	pcalau12i	$a0, %pc_hi20(.L.str.1613)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1613)
	b	.LBB327_5
.LBB327_4:
	ld.d	$a0, $s2, 16
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1614)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1614)
.LBB327_5:                              # %.sink.split
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	move	$a0, $s1
	move	$a1, $fp
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end327:
	.size	_ZN2kc19impl_baseclass_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end327-_ZN2kc19impl_baseclass_list10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_baseclass_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_baseclass_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_baseclass_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_baseclass_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_baseclass_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end328:
	.size	_ZN2kc19impl_baseclass_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end328-_ZN2kc19impl_baseclass_list14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc18impl_error_Warning10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc18impl_error_Warning10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc18impl_error_Warning10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc18impl_error_Warning10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc18impl_error_Warning10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 1
	move	$fp, $a1
	beq	$a3, $a4, .LBB329_3
# %bb.1:
	ori	$a1, $zero, 3
	bne	$a3, $a1, .LBB329_4
# %bb.2:
	pcalau12i	$a1, %got_pc_hi20(g_progname)
	ld.d	$a1, $a1, %got_pc_lo12(g_progname)
	ld.d	$a1, $a1, 0
	ld.d	$a3, $a1, 0
	ld.d	$s0, $a0, 8
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a3, 72
	move	$a0, $a1
	move	$a1, $fp
	move	$s2, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1615)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1615)
	move	$a0, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.405)
	addi.d	$a1, $a0, %pc_lo12(.L.str.405)
	move	$a0, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $fp
	move	$a2, $s2
	b	.LBB329_5
.LBB329_3:
	pcalau12i	$a1, %got_pc_hi20(g_progname)
	ld.d	$a1, $a1, %got_pc_lo12(g_progname)
	ld.d	$a1, $a1, 0
	ld.d	$s3, $a0, 8
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a1, 8
	pcalau12i	$a0, %pc_hi20(.L.str.1626)
	addi.d	$s4, $a0, %pc_lo12(.L.str.1626)
	move	$a0, $a2
	move	$a1, $s4
	move	$s0, $a2
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1627)
	addi.d	$s2, $a0, %pc_lo12(.L.str.1627)
	pcalau12i	$a0, %pc_hi20(.L.str.1616)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1616)
	move	$a0, $s0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$s3, $a0, %pc_lo12(.L.str.312)
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1621)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1621)
	move	$a0, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1624)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1624)
	move	$a0, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1625)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1625)
	move	$a0, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	move	$a1, $zero
	pcaddu18i	$ra, %call36(getcwd)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	move	$a0, $s0
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(free)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $s0, 8
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $fp
	move	$a2, $s0
	b	.LBB329_5
.LBB329_4:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
	move	$a1, $fp
.LBB329_5:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end329:
	.size	_ZN2kc18impl_error_Warning10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end329-_ZN2kc18impl_error_Warning10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_error_NonFatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_error_NonFatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_error_NonFatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_error_NonFatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_error_NonFatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 1
	move	$fp, $a1
	beq	$a3, $a4, .LBB330_3
# %bb.1:
	ori	$a1, $zero, 3
	bne	$a3, $a1, .LBB330_4
# %bb.2:
	pcalau12i	$a1, %got_pc_hi20(g_progname)
	ld.d	$a1, $a1, %got_pc_lo12(g_progname)
	ld.d	$a1, $a1, 0
	ld.d	$s0, $a0, 8
	ld.d	$a3, $a1, 0
	ld.d	$s1, $a0, 16
	pcalau12i	$a0, %got_pc_hi20(gp_no_fatal_problems)
	ld.d	$a0, $a0, %got_pc_lo12(gp_no_fatal_problems)
	ld.d	$a3, $a3, 72
	st.b	$zero, $a0, 0
	move	$a0, $a1
	move	$a1, $fp
	move	$s2, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1617)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1617)
	move	$a0, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.405)
	addi.d	$a1, $a0, %pc_lo12(.L.str.405)
	move	$a0, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $fp
	move	$a2, $s2
	b	.LBB330_5
.LBB330_3:
	pcalau12i	$a1, %got_pc_hi20(g_progname)
	ld.d	$a1, $a1, %got_pc_lo12(g_progname)
	ld.d	$s3, $a0, 8
	ld.d	$a1, $a1, 0
	ld.d	$s1, $a0, 16
	pcalau12i	$a0, %got_pc_hi20(gp_no_fatal_problems)
	ld.d	$a0, $a0, %got_pc_lo12(gp_no_fatal_problems)
	ld.d	$a3, $a1, 8
	st.b	$zero, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1626)
	addi.d	$s4, $a0, %pc_lo12(.L.str.1626)
	move	$a0, $a2
	move	$a1, $s4
	move	$s0, $a2
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1627)
	addi.d	$s2, $a0, %pc_lo12(.L.str.1627)
	pcalau12i	$a0, %pc_hi20(.L.str.1618)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1618)
	move	$a0, $s0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$s3, $a0, %pc_lo12(.L.str.312)
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1621)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1621)
	move	$a0, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1624)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1624)
	move	$a0, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1625)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1625)
	move	$a0, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	move	$a1, $zero
	pcaddu18i	$ra, %call36(getcwd)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	move	$a0, $s0
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(free)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $s0, 8
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $fp
	move	$a2, $s0
	b	.LBB330_5
.LBB330_4:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
	move	$a1, $fp
.LBB330_5:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end330:
	.size	_ZN2kc19impl_error_NonFatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end330-_ZN2kc19impl_error_NonFatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc16impl_error_Fatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc16impl_error_Fatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc16impl_error_Fatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc16impl_error_Fatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc16impl_error_Fatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 1
	move	$fp, $a1
	beq	$a3, $a4, .LBB331_3
# %bb.1:
	ori	$a1, $zero, 3
	bne	$a3, $a1, .LBB331_5
# %bb.2:
	pcalau12i	$a1, %got_pc_hi20(g_progname)
	ld.d	$a1, $a1, %got_pc_lo12(g_progname)
	ld.d	$a1, $a1, 0
	ld.d	$s0, $a0, 8
	ld.d	$a3, $a1, 0
	ld.d	$s1, $a0, 16
	pcalau12i	$a0, %got_pc_hi20(gp_no_fatal_problems)
	ld.d	$a0, $a0, %got_pc_lo12(gp_no_fatal_problems)
	ld.d	$a3, $a3, 72
	st.b	$zero, $a0, 0
	move	$a0, $a1
	move	$a1, $fp
	move	$s2, $a2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1619)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1619)
	move	$a0, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s0
	move	$a1, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.405)
	addi.d	$a1, $a0, %pc_lo12(.L.str.405)
	move	$a0, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $fp
	move	$a2, $s2
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $fp
	move	$a2, $s2
	b	.LBB331_4
.LBB331_3:
	pcalau12i	$a1, %got_pc_hi20(g_progname)
	ld.d	$a1, $a1, %got_pc_lo12(g_progname)
	ld.d	$s3, $a0, 8
	ld.d	$a1, $a1, 0
	ld.d	$s1, $a0, 16
	pcalau12i	$a0, %got_pc_hi20(gp_no_fatal_problems)
	ld.d	$a0, $a0, %got_pc_lo12(gp_no_fatal_problems)
	ld.d	$a3, $a1, 8
	st.b	$zero, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1626)
	addi.d	$s4, $a0, %pc_lo12(.L.str.1626)
	move	$a0, $a2
	move	$a1, $s4
	move	$s0, $a2
	move	$a2, $a3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1627)
	addi.d	$s2, $a0, %pc_lo12(.L.str.1627)
	pcalau12i	$a0, %pc_hi20(.L.str.1620)
	addi.d	$a2, $a0, %pc_lo12(.L.str.1620)
	move	$a0, $s0
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	pcalau12i	$a0, %pc_hi20(.L.str.312)
	addi.d	$s3, $a0, %pc_lo12(.L.str.312)
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1621)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1621)
	move	$a0, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1624)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1624)
	move	$a0, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1625)
	addi.d	$a1, $a0, %pc_lo12(.L.str.1625)
	move	$a0, $s0
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	move	$a1, $zero
	pcaddu18i	$ra, %call36(getcwd)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.331)
	addi.d	$a1, $a0, %pc_lo12(.L.str.331)
	move	$a0, $s0
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(free)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2kc23view_error_format_class7replaceEPKcS2_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a1, $s0, 8
	ld.d	$a3, $a0, 0
	move	$a0, $fp
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc10view_errorE)
	move	$a0, $s1
	move	$a1, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a1, $a0, %pc_lo12(.L.str.321)
	move	$a0, $fp
	move	$a2, $s0
.LBB331_4:
	jirl	$ra, $a3, 0
	ori	$a0, $zero, 1
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	pcaddu18i	$t8, %call36(_ZN2kc5leaveEi)
	jr	$t8
.LBB331_5:
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 80
	move	$a1, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end331:
	.size	_ZN2kc16impl_error_Fatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end331-_ZN2kc16impl_error_Fatal10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem610do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_problem_Problem610do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem610do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_problem_Problem610do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_problem_Problem610do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB332_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 16
	ld.d	$s4, $a0, 24
	ld.d	$a2, $a1, 0
	ld.d	$s5, $a0, 32
	ld.d	$s1, $a0, 40
	ld.d	$s6, $a0, 48
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s2, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s5
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s6
	ori	$a1, $zero, 72
.LBB332_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.Lfunc_end332:
	.size	_ZN2kc21impl_problem_Problem610do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end332-_ZN2kc21impl_problem_Problem610do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem510do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_problem_Problem510do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem510do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_problem_Problem510do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_problem_Problem510do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB333_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 16
	ld.d	$a2, $a1, 0
	ld.d	$s2, $a0, 24
	ld.d	$s3, $a0, 32
	ld.d	$s5, $a0, 40
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s4, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s5
	ori	$a1, $zero, 72
.LBB333_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end333:
	.size	_ZN2kc21impl_problem_Problem510do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end333-_ZN2kc21impl_problem_Problem510do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem410do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_problem_Problem410do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem410do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_problem_Problem410do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_problem_Problem410do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB334_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s4, $a0, 32
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s3, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s4
	ori	$a1, $zero, 72
.LBB334_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end334:
	.size	_ZN2kc21impl_problem_Problem410do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end334-_ZN2kc21impl_problem_Problem410do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25impl_problem_Problem3int110do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc25impl_problem_Problem3int110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem3int110do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc25impl_problem_Problem3int110do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc25impl_problem_Problem3int110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB335_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 16
	ld.d	$a2, $a1, 0
	ld.d	$s2, $a0, 24
	ld.d	$s3, $a0, 32
	ld.d	$s5, $a0, 40
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s4, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s4
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s5
	ori	$a1, $zero, 72
.LBB335_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end335:
	.size	_ZN2kc25impl_problem_Problem3int110do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end335-_ZN2kc25impl_problem_Problem3int110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem310do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_problem_Problem310do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem310do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_problem_Problem310do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_problem_Problem310do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB336_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$s3, $a0, 24
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s2, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s3
	ori	$a1, $zero, 72
.LBB336_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end336:
	.size	_ZN2kc21impl_problem_Problem310do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end336-_ZN2kc21impl_problem_Problem310do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem210do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_problem_Problem210do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem210do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_problem_Problem210do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_problem_Problem210do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB337_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	ori	$a1, $zero, 72
.LBB337_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end337:
	.size	_ZN2kc21impl_problem_Problem210do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end337-_ZN2kc21impl_problem_Problem210do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc37impl_problem_Problem1storageoption1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc37impl_problem_Problem1storageoption1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc37impl_problem_Problem1storageoption1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc37impl_problem_Problem1storageoption1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc37impl_problem_Problem1storageoption1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB338_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s4, $a0, 32
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s3, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s4
	ori	$a1, $zero, 72
.LBB338_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end338:
	.size	_ZN2kc37impl_problem_Problem1storageoption1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end338-_ZN2kc37impl_problem_Problem1storageoption1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_problem_Problem1INT1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_problem_Problem1INT1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_problem_Problem1INT1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_problem_Problem1INT1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_problem_Problem1INT1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB339_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 16
	ld.d	$s4, $a0, 24
	ld.d	$a2, $a1, 0
	ld.d	$s5, $a0, 32
	ld.d	$s1, $a0, 40
	ld.d	$s6, $a0, 48
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s2, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s5
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s6
	ori	$a1, $zero, 72
.LBB339_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.Lfunc_end339:
	.size	_ZN2kc30impl_problem_Problem1INT1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end339-_ZN2kc30impl_problem_Problem1INT1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc29impl_problem_Problem1ID1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc29impl_problem_Problem1ID1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc29impl_problem_Problem1ID1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc29impl_problem_Problem1ID1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc29impl_problem_Problem1ID1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB340_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 16
	ld.d	$s4, $a0, 24
	ld.d	$a2, $a1, 0
	ld.d	$s5, $a0, 32
	ld.d	$s1, $a0, 40
	ld.d	$s6, $a0, 48
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s2, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s3, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s4, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s4
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s5, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s5
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s6
	ori	$a1, $zero, 72
.LBB340_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	jr	$a3
.Lfunc_end340:
	.size	_ZN2kc29impl_problem_Problem1ID1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end340-_ZN2kc29impl_problem_Problem1ID1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc27impl_problem_Problem1INT1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc27impl_problem_Problem1INT1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc27impl_problem_Problem1INT1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc27impl_problem_Problem1INT1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc27impl_problem_Problem1INT1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB341_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s4, $a0, 32
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s3, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s4
	ori	$a1, $zero, 72
.LBB341_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end341:
	.size	_ZN2kc27impl_problem_Problem1INT1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end341-_ZN2kc27impl_problem_Problem1INT1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25impl_problem_Problem1int110do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc25impl_problem_Problem1int110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem1int110do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc25impl_problem_Problem1int110do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc25impl_problem_Problem1int110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB342_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$s3, $a0, 24
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s2, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s3
	ori	$a1, $zero, 72
.LBB342_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	jr	$a3
.Lfunc_end342:
	.size	_ZN2kc25impl_problem_Problem1int110do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end342-_ZN2kc25impl_problem_Problem1int110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_problem_Problem1INT10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_problem_Problem1INT10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_problem_Problem1INT10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_problem_Problem1INT10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_problem_Problem1INT10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB343_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	ori	$a1, $zero, 72
.LBB343_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end343:
	.size	_ZN2kc24impl_problem_Problem1INT10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end343-_ZN2kc24impl_problem_Problem1INT10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc25impl_problem_Problem1t1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc25impl_problem_Problem1t1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc25impl_problem_Problem1t1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc25impl_problem_Problem1t1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc25impl_problem_Problem1t1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB344_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s4, $a0, 32
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s3, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s4
	ori	$a1, $zero, 72
.LBB344_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end344:
	.size	_ZN2kc25impl_problem_Problem1t1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end344-_ZN2kc25impl_problem_Problem1t1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc26impl_problem_Problem1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc26impl_problem_Problem1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc26impl_problem_Problem1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc26impl_problem_Problem1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc26impl_problem_Problem1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB345_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$s2, $a0, 24
	ld.d	$s4, $a0, 32
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$s3, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s1, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s2, 0
	ld.d	$a3, $a0, 72
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s4
	ori	$a1, $zero, 72
.LBB345_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	jr	$a3
.Lfunc_end345:
	.size	_ZN2kc26impl_problem_Problem1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end345-_ZN2kc26impl_problem_Problem1ID1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_problem_Problem1we10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_problem_Problem1we10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_problem_Problem1we10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_problem_Problem1we10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_problem_Problem1we10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB346_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	ori	$a1, $zero, 72
.LBB346_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end346:
	.size	_ZN2kc23impl_problem_Problem1we10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end346-_ZN2kc23impl_problem_Problem1we10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc24impl_problem_Problem1tID10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc24impl_problem_Problem1tID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc24impl_problem_Problem1tID10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc24impl_problem_Problem1tID10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc24impl_problem_Problem1tID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ori	$a4, $zero, 3
	bne	$a3, $a4, .LBB347_2
# %bb.1:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a0, 8
	ld.d	$a4, $a3, 0
	ld.d	$fp, $a0, 16
	ld.d	$a4, $a4, 72
	move	$a0, $a3
	move	$s0, $a1
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $s1
	jirl	$ra, $a3, 0
	ld.d	$a0, $fp, 0
	ld.d	$a3, $a0, 72
	pcalau12i	$a0, %pc_hi20(_ZN2kc14view_error_tIDE)
	addi.d	$a2, $a0, %pc_lo12(_ZN2kc14view_error_tIDE)
	move	$a0, $fp
	move	$a1, $s0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB347_2:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end347:
	.size	_ZN2kc24impl_problem_Problem1tID10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end347-_ZN2kc24impl_problem_Problem1tID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc23impl_problem_Problem1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc23impl_problem_Problem1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc23impl_problem_Problem1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc23impl_problem_Problem1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc23impl_problem_Problem1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	move	$s0, $a1
	ori	$a3, $zero, 3
	ori	$a1, $zero, 80
	bne	$a2, $a3, .LBB348_2
# %bb.1:
	ld.d	$a1, $a0, 8
	ld.d	$a2, $a1, 0
	ld.d	$s1, $a0, 16
	ld.d	$a3, $a2, 72
	move	$a0, $a1
	move	$a1, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	ld.d	$a0, $s0, 0
	ld.d	$a3, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.338)
	addi.d	$a1, $a0, %pc_lo12(.L.str.338)
	move	$a0, $s0
	move	$a2, $fp
	jirl	$ra, $a3, 0
	move	$a0, $s1
	ori	$a1, $zero, 72
.LBB348_2:
	ld.d	$a2, $a0, 0
	ldx.d	$a3, $a2, $a1
	move	$a1, $s0
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.Lfunc_end348:
	.size	_ZN2kc23impl_problem_Problem1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end348-_ZN2kc23impl_problem_Problem1ID10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc21impl_problem_Problem110do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc21impl_problem_Problem110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc21impl_problem_Problem110do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc21impl_problem_Problem110do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc21impl_problem_Problem110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.w	$a3, $a2, 0
	ld.d	$a4, $a0, 8
	addi.d	$a3, $a3, -3
	sltui	$a3, $a3, 1
	masknez	$a0, $a0, $a3
	maskeqz	$a4, $a4, $a3
	or	$a0, $a4, $a0
	ori	$a4, $zero, 80
	masknez	$a4, $a4, $a3
	ld.d	$a5, $a0, 0
	ori	$a6, $zero, 72
	maskeqz	$a3, $a6, $a3
	or	$a3, $a3, $a4
	ldx.d	$a3, $a5, $a3
	jr	$a3
.Lfunc_end349:
	.size	_ZN2kc21impl_problem_Problem110do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end349-_ZN2kc21impl_problem_Problem110do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_addedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_addedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_addedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_addedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB350_2
	b	.LBB350_3
	.p2align	4, , 16
.LBB350_1:                              # %.lr.ph
                                        #   in Loop: Header=BB350_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB350_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB350_1
.LBB350_3:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end350:
	.size	_ZN2kc28impl_addedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end350-_ZN2kc28impl_addedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_addedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_addedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_addedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_addedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_addedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end351:
	.size	_ZN2kc28impl_addedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end351-_ZN2kc28impl_addedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end352:
	.size	_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end352-_ZN2kc50impl_addedphylumdeclaration_AddedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_countedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_countedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_countedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_countedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB353_2
	b	.LBB353_3
	.p2align	4, , 16
.LBB353_1:                              # %.lr.ph
                                        #   in Loop: Header=BB353_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB353_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB353_1
.LBB353_3:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end353:
	.size	_ZN2kc30impl_countedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end353-_ZN2kc30impl_countedphylumdeclarations10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc30impl_countedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc30impl_countedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc30impl_countedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc30impl_countedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc30impl_countedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end354:
	.size	_ZN2kc30impl_countedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end354-_ZN2kc30impl_countedphylumdeclarations14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end355:
	.size	_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end355-_ZN2kc54impl_countedphylumdeclaration_CountedPhylumdeclaration10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_charruns_Stars10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_charruns_Stars10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_charruns_Stars10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_charruns_Stars10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_charruns_Stars10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.w	$a0, $a0, 8
	blez	$a0, .LBB356_2
# %bb.1:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1608)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1608)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.w	$a0, $fp, 8
	ld.d	$a1, $fp, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $fp, 8
	ld.d	$a3, $a1, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB356_2:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end356:
	.size	_ZN2kc19impl_charruns_Stars10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end356-_ZN2kc19impl_charruns_Stars10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc28impl_charruns_QuotedNewlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc28impl_charruns_QuotedNewlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc28impl_charruns_QuotedNewlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc28impl_charruns_QuotedNewlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc28impl_charruns_QuotedNewlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.w	$a0, $a0, 8
	blez	$a0, .LBB357_2
# %bb.1:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.1397)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1397)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.w	$a0, $fp, 8
	ld.d	$a1, $fp, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $fp, 8
	ld.d	$a3, $a1, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB357_2:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end357:
	.size	_ZN2kc28impl_charruns_QuotedNewlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end357-_ZN2kc28impl_charruns_QuotedNewlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc22impl_charruns_Newlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc22impl_charruns_Newlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc22impl_charruns_Newlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc22impl_charruns_Newlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc22impl_charruns_Newlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.w	$a0, $a0, 8
	blez	$a0, .LBB358_2
# %bb.1:
	ld.d	$a0, $a1, 0
	ld.d	$a4, $a0, 0
	pcalau12i	$a0, %pc_hi20(.L.str.321)
	addi.d	$a3, $a0, %pc_lo12(.L.str.321)
	move	$a0, $a1
	move	$s0, $a1
	move	$a1, $a3
	move	$s1, $a2
	jirl	$ra, $a4, 0
	ld.w	$a0, $fp, 8
	ld.d	$a1, $fp, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $fp, 8
	ld.d	$a3, $a1, 72
	move	$a0, $fp
	move	$a1, $s0
	move	$a2, $s1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	jr	$a3
.LBB358_2:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end358:
	.size	_ZN2kc22impl_charruns_Newlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end358-_ZN2kc22impl_charruns_Newlines10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_bindingidmarks10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_bindingidmarks10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarks10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_bindingidmarks10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_bindingidmarks10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a3, $a0, 88
	move	$s0, $a2
	move	$s1, $a1
	move	$a0, $fp
	jirl	$ra, $a3, 0
	beqz	$a0, .LBB359_2
	b	.LBB359_3
	.p2align	4, , 16
.LBB359_1:                              # %.lr.ph
                                        #   in Loop: Header=BB359_2 Depth=1
	ld.d	$a0, $fp, 8
	ld.d	$a1, $a0, 0
	ld.d	$a3, $a1, 72
	move	$a1, $s1
	move	$a2, $s0
	jirl	$ra, $a3, 0
	ld.d	$fp, $fp, 16
.LBB359_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 16
	bnez	$a0, .LBB359_1
.LBB359_3:                              # %.loopexit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end359:
	.size	_ZN2kc19impl_bindingidmarks10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end359-_ZN2kc19impl_bindingidmarks10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2kc19impl_bindingidmarks14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc19impl_bindingidmarks14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc19impl_bindingidmarks14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc19impl_bindingidmarks14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc19impl_bindingidmarks14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
# %bb.0:
	ret
.Lfunc_end360:
	.size	_ZN2kc19impl_bindingidmarks14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end360-_ZN2kc19impl_bindingidmarks14nil_do_unparseERNS_21printer_functor_classERNS_11uview_classE
                                        # -- End function
	.globl	_ZN2kc32impl_bindingidmark_BindingIdMark10do_unparseERNS_21printer_functor_classERNS_11uview_classE # -- Begin function _ZN2kc32impl_bindingidmark_BindingIdMark10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32impl_bindingidmark_BindingIdMark10do_unparseERNS_21printer_functor_classERNS_11uview_classE,@function
_ZN2kc32impl_bindingidmark_BindingIdMark10do_unparseERNS_21printer_functor_classERNS_11uview_classE: # @_ZN2kc32impl_bindingidmark_BindingIdMark10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 0
	ld.d	$a3, $a3, 80
	jr	$a3
.Lfunc_end361:
	.size	_ZN2kc32impl_bindingidmark_BindingIdMark10do_unparseERNS_21printer_functor_classERNS_11uview_classE, .Lfunc_end361-_ZN2kc32impl_bindingidmark_BindingIdMark10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv,"axG",@progbits,_ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv,comdat
	.weak	_ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv # -- Begin function _ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv
	.p2align	5
	.type	_ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv,@function
_ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv: # @_ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv
# %bb.0:
	ori	$a0, $zero, 1
	ret
.Lfunc_end362:
	.size	_ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv, .Lfunc_end362-_ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE,"axG",@progbits,_ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE,comdat
	.weak	_ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE # -- Begin function _ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE
	.p2align	5
	.type	_ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE,@function
_ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE: # @_ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE
# %bb.0:
	ret
.Lfunc_end363:
	.size	_ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE, .Lfunc_end363-_ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE,"axG",@progbits,_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE,comdat
	.weak	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE # -- Begin function _ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE,@function
_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE: # @_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
# %bb.0:
	ret
.Lfunc_end364:
	.size	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE, .Lfunc_end364-_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_,"axG",@progbits,_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_,comdat
	.weak	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_ # -- Begin function _ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_,@function
_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_: # @_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
# %bb.0:
	ret
.Lfunc_end365:
	.size	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_, .Lfunc_end365-_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylum11post_createEv,"axG",@progbits,_ZN2kc20impl_abstract_phylum11post_createEv,comdat
	.weak	_ZN2kc20impl_abstract_phylum11post_createEv # -- Begin function _ZN2kc20impl_abstract_phylum11post_createEv
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylum11post_createEv,@function
_ZN2kc20impl_abstract_phylum11post_createEv: # @_ZN2kc20impl_abstract_phylum11post_createEv
# %bb.0:
	ret
.Lfunc_end366:
	.size	_ZN2kc20impl_abstract_phylum11post_createEv, .Lfunc_end366-_ZN2kc20impl_abstract_phylum11post_createEv
                                        # -- End function
	.section	.text._ZN2kc27impl_nocasestring_NoCaseStrD2Ev,"axG",@progbits,_ZN2kc27impl_nocasestring_NoCaseStrD2Ev,comdat
	.weak	_ZN2kc27impl_nocasestring_NoCaseStrD2Ev # -- Begin function _ZN2kc27impl_nocasestring_NoCaseStrD2Ev
	.p2align	5
	.type	_ZN2kc27impl_nocasestring_NoCaseStrD2Ev,@function
_ZN2kc27impl_nocasestring_NoCaseStrD2Ev: # @_ZN2kc27impl_nocasestring_NoCaseStrD2Ev
# %bb.0:
	move	$a1, $a0
	ld.d	$a0, $a0, 8
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc27impl_nocasestring_NoCaseStrE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc27impl_nocasestring_NoCaseStrE+16)
	st.d	$a2, $a1, 0
	beqz	$a0, .LBB367_2
# %bb.1:
	pcaddu18i	$t8, %call36(_ZdaPv)
	jr	$t8
.LBB367_2:
	ret
.Lfunc_end367:
	.size	_ZN2kc27impl_nocasestring_NoCaseStrD2Ev, .Lfunc_end367-_ZN2kc27impl_nocasestring_NoCaseStrD2Ev
                                        # -- End function
	.section	.text._ZN2kc27impl_nocasestring_NoCaseStrD0Ev,"axG",@progbits,_ZN2kc27impl_nocasestring_NoCaseStrD0Ev,comdat
	.weak	_ZN2kc27impl_nocasestring_NoCaseStrD0Ev # -- Begin function _ZN2kc27impl_nocasestring_NoCaseStrD0Ev
	.p2align	5
	.type	_ZN2kc27impl_nocasestring_NoCaseStrD0Ev,@function
_ZN2kc27impl_nocasestring_NoCaseStrD0Ev: # @_ZN2kc27impl_nocasestring_NoCaseStrD0Ev
# %bb.0:
	ld.d	$a1, $a0, 8
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc27impl_nocasestring_NoCaseStrE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc27impl_nocasestring_NoCaseStrE+16)
	st.d	$a2, $a0, 0
	beqz	$a1, .LBB368_2
# %bb.1:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	move	$fp, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(_ZdaPv)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
.LBB368_2:                              # %_ZN2kc27impl_nocasestring_NoCaseStrD2Ev.exit
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end368:
	.size	_ZN2kc27impl_nocasestring_NoCaseStrD0Ev, .Lfunc_end368-_ZN2kc27impl_nocasestring_NoCaseStrD0Ev
                                        # -- End function
	.section	.text._ZNK2kc20impl_casestring__Str8prod_selEv,"axG",@progbits,_ZNK2kc20impl_casestring__Str8prod_selEv,comdat
	.weak	_ZNK2kc20impl_casestring__Str8prod_selEv # -- Begin function _ZNK2kc20impl_casestring__Str8prod_selEv
	.p2align	5
	.type	_ZNK2kc20impl_casestring__Str8prod_selEv,@function
_ZNK2kc20impl_casestring__Str8prod_selEv: # @_ZNK2kc20impl_casestring__Str8prod_selEv
# %bb.0:
	ori	$a0, $zero, 2
	ret
.Lfunc_end369:
	.size	_ZNK2kc20impl_casestring__Str8prod_selEv, .Lfunc_end369-_ZNK2kc20impl_casestring__Str8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE,"axG",@progbits,_ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE,comdat
	.weak	_ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE # -- Begin function _ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE
	.p2align	5
	.type	_ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE,@function
_ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE: # @_ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE
# %bb.0:
	ret
.Lfunc_end370:
	.size	_ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE, .Lfunc_end370-_ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE
                                        # -- End function
	.section	.text._ZN2kc20impl_casestring__StrD2Ev,"axG",@progbits,_ZN2kc20impl_casestring__StrD2Ev,comdat
	.weak	_ZN2kc20impl_casestring__StrD2Ev # -- Begin function _ZN2kc20impl_casestring__StrD2Ev
	.p2align	5
	.type	_ZN2kc20impl_casestring__StrD2Ev,@function
_ZN2kc20impl_casestring__StrD2Ev:       # @_ZN2kc20impl_casestring__StrD2Ev
# %bb.0:
	move	$a1, $a0
	ld.d	$a0, $a0, 8
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc20impl_casestring__StrE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc20impl_casestring__StrE+16)
	st.d	$a2, $a1, 0
	beqz	$a0, .LBB371_2
# %bb.1:
	pcaddu18i	$t8, %call36(_ZdaPv)
	jr	$t8
.LBB371_2:
	ret
.Lfunc_end371:
	.size	_ZN2kc20impl_casestring__StrD2Ev, .Lfunc_end371-_ZN2kc20impl_casestring__StrD2Ev
                                        # -- End function
	.section	.text._ZN2kc20impl_casestring__StrD0Ev,"axG",@progbits,_ZN2kc20impl_casestring__StrD0Ev,comdat
	.weak	_ZN2kc20impl_casestring__StrD0Ev # -- Begin function _ZN2kc20impl_casestring__StrD0Ev
	.p2align	5
	.type	_ZN2kc20impl_casestring__StrD0Ev,@function
_ZN2kc20impl_casestring__StrD0Ev:       # @_ZN2kc20impl_casestring__StrD0Ev
# %bb.0:
	ld.d	$a1, $a0, 8
	pcalau12i	$a2, %pc_hi20(_ZTVN2kc20impl_casestring__StrE+16)
	addi.d	$a2, $a2, %pc_lo12(_ZTVN2kc20impl_casestring__StrE+16)
	st.d	$a2, $a0, 0
	beqz	$a1, .LBB372_2
# %bb.1:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	move	$fp, $a0
	move	$a0, $a1
	pcaddu18i	$ra, %call36(_ZdaPv)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
.LBB372_2:                              # %_ZN2kc20impl_casestring__StrD2Ev.exit
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end372:
	.size	_ZN2kc20impl_casestring__StrD0Ev, .Lfunc_end372-_ZN2kc20impl_casestring__StrD0Ev
                                        # -- End function
	.section	.text._ZNK2kc17impl_integer__Int8prod_selEv,"axG",@progbits,_ZNK2kc17impl_integer__Int8prod_selEv,comdat
	.weak	_ZNK2kc17impl_integer__Int8prod_selEv # -- Begin function _ZNK2kc17impl_integer__Int8prod_selEv
	.p2align	5
	.type	_ZNK2kc17impl_integer__Int8prod_selEv,@function
_ZNK2kc17impl_integer__Int8prod_selEv:  # @_ZNK2kc17impl_integer__Int8prod_selEv
# %bb.0:
	ori	$a0, $zero, 4
	ret
.Lfunc_end373:
	.size	_ZNK2kc17impl_integer__Int8prod_selEv, .Lfunc_end373-_ZNK2kc17impl_integer__Int8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE,"axG",@progbits,_ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE,comdat
	.weak	_ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE # -- Begin function _ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE
	.p2align	5
	.type	_ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE,@function
_ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE: # @_ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE
# %bb.0:
	ret
.Lfunc_end374:
	.size	_ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE, .Lfunc_end374-_ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE
                                        # -- End function
	.section	.text._ZN2kc17impl_integer__IntD0Ev,"axG",@progbits,_ZN2kc17impl_integer__IntD0Ev,comdat
	.weak	_ZN2kc17impl_integer__IntD0Ev   # -- Begin function _ZN2kc17impl_integer__IntD0Ev
	.p2align	5
	.type	_ZN2kc17impl_integer__IntD0Ev,@function
_ZN2kc17impl_integer__IntD0Ev:          # @_ZN2kc17impl_integer__IntD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end375:
	.size	_ZN2kc17impl_integer__IntD0Ev, .Lfunc_end375-_ZN2kc17impl_integer__IntD0Ev
                                        # -- End function
	.section	.text._ZNK2kc15impl_real__Real8prod_selEv,"axG",@progbits,_ZNK2kc15impl_real__Real8prod_selEv,comdat
	.weak	_ZNK2kc15impl_real__Real8prod_selEv # -- Begin function _ZNK2kc15impl_real__Real8prod_selEv
	.p2align	5
	.type	_ZNK2kc15impl_real__Real8prod_selEv,@function
_ZNK2kc15impl_real__Real8prod_selEv:    # @_ZNK2kc15impl_real__Real8prod_selEv
# %bb.0:
	ori	$a0, $zero, 3
	ret
.Lfunc_end376:
	.size	_ZNK2kc15impl_real__Real8prod_selEv, .Lfunc_end376-_ZNK2kc15impl_real__Real8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc15impl_real__Real7rewriteERNS_11rview_classE,"axG",@progbits,_ZN2kc15impl_real__Real7rewriteERNS_11rview_classE,comdat
	.weak	_ZN2kc15impl_real__Real7rewriteERNS_11rview_classE # -- Begin function _ZN2kc15impl_real__Real7rewriteERNS_11rview_classE
	.p2align	5
	.type	_ZN2kc15impl_real__Real7rewriteERNS_11rview_classE,@function
_ZN2kc15impl_real__Real7rewriteERNS_11rview_classE: # @_ZN2kc15impl_real__Real7rewriteERNS_11rview_classE
# %bb.0:
	ret
.Lfunc_end377:
	.size	_ZN2kc15impl_real__Real7rewriteERNS_11rview_classE, .Lfunc_end377-_ZN2kc15impl_real__Real7rewriteERNS_11rview_classE
                                        # -- End function
	.section	.text._ZN2kc15impl_real__RealD0Ev,"axG",@progbits,_ZN2kc15impl_real__RealD0Ev,comdat
	.weak	_ZN2kc15impl_real__RealD0Ev     # -- Begin function _ZN2kc15impl_real__RealD0Ev
	.p2align	5
	.type	_ZN2kc15impl_real__RealD0Ev,@function
_ZN2kc15impl_real__RealD0Ev:            # @_ZN2kc15impl_real__RealD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end378:
	.size	_ZN2kc15impl_real__RealD0Ev, .Lfunc_end378-_ZN2kc15impl_real__RealD0Ev
                                        # -- End function
	.section	.text._ZNK2kc21impl_voidptr__VoidPtr8prod_selEv,"axG",@progbits,_ZNK2kc21impl_voidptr__VoidPtr8prod_selEv,comdat
	.weak	_ZNK2kc21impl_voidptr__VoidPtr8prod_selEv # -- Begin function _ZNK2kc21impl_voidptr__VoidPtr8prod_selEv
	.p2align	5
	.type	_ZNK2kc21impl_voidptr__VoidPtr8prod_selEv,@function
_ZNK2kc21impl_voidptr__VoidPtr8prod_selEv: # @_ZNK2kc21impl_voidptr__VoidPtr8prod_selEv
# %bb.0:
	ori	$a0, $zero, 5
	ret
.Lfunc_end379:
	.size	_ZNK2kc21impl_voidptr__VoidPtr8prod_selEv, .Lfunc_end379-_ZNK2kc21impl_voidptr__VoidPtr8prod_selEv
                                        # -- End function
	.section	.text._ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE,"axG",@progbits,_ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE,comdat
	.weak	_ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE # -- Begin function _ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE
	.p2align	5
	.type	_ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE,@function
_ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE: # @_ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE
# %bb.0:
	ret
.Lfunc_end380:
	.size	_ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE, .Lfunc_end380-_ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE
                                        # -- End function
	.section	.text._ZN2kc20impl_abstract_phylumD2Ev,"axG",@progbits,_ZN2kc20impl_abstract_phylumD2Ev,comdat
	.weak	_ZN2kc20impl_abstract_phylumD2Ev # -- Begin function _ZN2kc20impl_abstract_phylumD2Ev
	.p2align	5
	.type	_ZN2kc20impl_abstract_phylumD2Ev,@function
_ZN2kc20impl_abstract_phylumD2Ev:       # @_ZN2kc20impl_abstract_phylumD2Ev
# %bb.0:
	ret
.Lfunc_end381:
	.size	_ZN2kc20impl_abstract_phylumD2Ev, .Lfunc_end381-_ZN2kc20impl_abstract_phylumD2Ev
                                        # -- End function
	.section	.text._ZN2kc21impl_voidptr__VoidPtrD0Ev,"axG",@progbits,_ZN2kc21impl_voidptr__VoidPtrD0Ev,comdat
	.weak	_ZN2kc21impl_voidptr__VoidPtrD0Ev # -- Begin function _ZN2kc21impl_voidptr__VoidPtrD0Ev
	.p2align	5
	.type	_ZN2kc21impl_voidptr__VoidPtrD0Ev,@function
_ZN2kc21impl_voidptr__VoidPtrD0Ev:      # @_ZN2kc21impl_voidptr__VoidPtrD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end382:
	.size	_ZN2kc21impl_voidptr__VoidPtrD0Ev, .Lfunc_end382-_ZN2kc21impl_voidptr__VoidPtrD0Ev
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	5
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZSt9terminatev)
	jirl	$ra, $ra, 0
.Lfunc_end383:
	.size	__clang_call_terminate, .Lfunc_end383-__clang_call_terminate
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E
	.cfi_startproc
# %bb.0:
	beqz	$a1, .LBB384_6
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s0, $a1
	move	$fp, $a0
	b	.LBB384_3
	.p2align	4, , 16
.LBB384_2:                              # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISB_E.exit
                                        #   in Loop: Header=BB384_3 Depth=1
	ori	$a1, $zero, 72
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$s0, $s1
	beqz	$s1, .LBB384_5
.LBB384_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 32
	ld.d	$s1, $s0, 16
	addi.d	$a1, $s0, 48
	beq	$a0, $a1, .LBB384_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB384_3 Depth=1
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB384_2
.LBB384_5:
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB384_6:                              # %._crit_edge
	ret
.Lfunc_end384:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E, .Lfunc_end384-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE,"axG",@progbits,_ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE,comdat
	.weak	_ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE # -- Begin function _ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE
	.p2align	5
	.type	_ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE,@function
_ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE: # @_ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 8
	beqz	$a3, .LBB385_2
# %bb.1:
	move	$a0, $a1
	move	$a1, $a2
	jr	$a3
.LBB385_2:
	ret
.Lfunc_end385:
	.size	_ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE, .Lfunc_end385-_ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2kc32printer_functor_function_wrapperD0Ev,"axG",@progbits,_ZN2kc32printer_functor_function_wrapperD0Ev,comdat
	.weak	_ZN2kc32printer_functor_function_wrapperD0Ev # -- Begin function _ZN2kc32printer_functor_function_wrapperD0Ev
	.p2align	5
	.type	_ZN2kc32printer_functor_function_wrapperD0Ev,@function
_ZN2kc32printer_functor_function_wrapperD0Ev: # @_ZN2kc32printer_functor_function_wrapperD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end386:
	.size	_ZN2kc32printer_functor_function_wrapperD0Ev, .Lfunc_end386-_ZN2kc32printer_functor_function_wrapperD0Ev
                                        # -- End function
	.section	.text._ZN13count_printerclEPKcRN2kc11uview_classE,"axG",@progbits,_ZN13count_printerclEPKcRN2kc11uview_classE,comdat
	.weak	_ZN13count_printerclEPKcRN2kc11uview_classE # -- Begin function _ZN13count_printerclEPKcRN2kc11uview_classE
	.p2align	5
	.type	_ZN13count_printerclEPKcRN2kc11uview_classE,@function
_ZN13count_printerclEPKcRN2kc11uview_classE: # @_ZN13count_printerclEPKcRN2kc11uview_classE
# %bb.0:
	ld.w	$a1, $a0, 8
	addi.d	$a1, $a1, 1
	st.w	$a1, $a0, 8
	ret
.Lfunc_end387:
	.size	_ZN13count_printerclEPKcRN2kc11uview_classE, .Lfunc_end387-_ZN13count_printerclEPKcRN2kc11uview_classE
                                        # -- End function
	.section	.text._ZN13count_printerD0Ev,"axG",@progbits,_ZN13count_printerD0Ev,comdat
	.weak	_ZN13count_printerD0Ev          # -- Begin function _ZN13count_printerD0Ev
	.p2align	5
	.type	_ZN13count_printerD0Ev,@function
_ZN13count_printerD0Ev:                 # @_ZN13count_printerD0Ev
# %bb.0:
	ori	$a1, $zero, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.Lfunc_end388:
	.size	_ZN13count_printerD0Ev, .Lfunc_end388-_ZN13count_printerD0Ev
                                        # -- End function
	.section	.text._ZN2kc23view_error_format_class7replaceEPKcS2_,"axG",@progbits,_ZN2kc23view_error_format_class7replaceEPKcS2_,comdat
	.weak	_ZN2kc23view_error_format_class7replaceEPKcS2_ # -- Begin function _ZN2kc23view_error_format_class7replaceEPKcS2_
	.p2align	5
	.type	_ZN2kc23view_error_format_class7replaceEPKcS2_,@function
_ZN2kc23view_error_format_class7replaceEPKcS2_: # @_ZN2kc23view_error_format_class7replaceEPKcS2_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	addi.d	$s2, $a0, 8
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$a3, $a0
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm)
	jirl	$ra, $ra, 0
	addi.w	$s5, $zero, -1
	beq	$a0, $s5, .LBB389_4
# %bb.1:                                # %.lr.ph
	move	$s3, $a0
	.p2align	4, , 16
.LBB389_2:                              # =>This Inner Loop Header: Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s1, 16
	bltu	$a3, $s3, .LBB389_5
# %bb.3:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKc.exit
                                        #   in Loop: Header=BB389_2 Depth=1
	move	$a4, $a0
	sub.d	$a0, $a3, $s3
	sltu	$a1, $s4, $a0
	masknez	$a0, $a0, $a1
	maskeqz	$a1, $s4, $a1
	or	$a2, $a1, $a0
	move	$a0, $s2
	move	$a1, $s3
	move	$a3, $fp
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$a3, $a0
	move	$a0, $s2
	move	$a1, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	bne	$a0, $s5, .LBB389_2
.LBB389_4:                              # %._crit_edge
	ld.d	$s5, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.LBB389_5:
	pcalau12i	$a0, %pc_hi20(.L.str.1623)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1623)
	pcalau12i	$a1, %pc_hi20(.L.str.1622)
	addi.d	$a1, $a1, %pc_lo12(.L.str.1622)
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZSt24__throw_out_of_range_fmtPKcz)
	jirl	$ra, $ra, 0
.Lfunc_end389:
	.size	_ZN2kc23view_error_format_class7replaceEPKcS2_, .Lfunc_end389-_ZN2kc23view_error_format_class7replaceEPKcS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception8
# %bb.0:                                # %_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 6
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB390_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp331:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp332:
# %bb.2:                                # %_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB390_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB390_1
# %bb.3:                                # %_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE15_M_create_nodesEPPS2_S6_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 63
	alsl.d	$a0, $a0, $a1, 3
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB390_4:
.Ltmp333:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB390_6
	.p2align	4, , 16
.LBB390_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB390_5
.LBB390_6:                              # %_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i
.Ltmp334:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp335:
# %bb.7:
.LBB390_8:
.Ltmp336:
	move	$s0, $a0
.Ltmp337:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp338:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp340:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp341:
# %bb.10:
.LBB390_11:
.Ltmp342:
	move	$fp, $a0
.Ltmp343:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp344:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB390_13:
.Ltmp345:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB390_14:
.Ltmp339:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end390:
	.size	_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm, .Lfunc_end390-_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table390:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Lfunc_begin8-.Lfunc_begin8    # >> Call Site 1 <<
	.uleb128 .Ltmp331-.Lfunc_begin8         #   Call between .Lfunc_begin8 and .Ltmp331
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp331-.Lfunc_begin8         # >> Call Site 2 <<
	.uleb128 .Ltmp332-.Ltmp331              #   Call between .Ltmp331 and .Ltmp332
	.uleb128 .Ltmp333-.Lfunc_begin8         #     jumps to .Ltmp333
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp332-.Lfunc_begin8         # >> Call Site 3 <<
	.uleb128 .Ltmp334-.Ltmp332              #   Call between .Ltmp332 and .Ltmp334
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp334-.Lfunc_begin8         # >> Call Site 4 <<
	.uleb128 .Ltmp335-.Ltmp334              #   Call between .Ltmp334 and .Ltmp335
	.uleb128 .Ltmp336-.Lfunc_begin8         #     jumps to .Ltmp336
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp337-.Lfunc_begin8         # >> Call Site 5 <<
	.uleb128 .Ltmp338-.Ltmp337              #   Call between .Ltmp337 and .Ltmp338
	.uleb128 .Ltmp339-.Lfunc_begin8         #     jumps to .Ltmp339
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp338-.Lfunc_begin8         # >> Call Site 6 <<
	.uleb128 .Ltmp340-.Ltmp338              #   Call between .Ltmp338 and .Ltmp340
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp340-.Lfunc_begin8         # >> Call Site 7 <<
	.uleb128 .Ltmp341-.Ltmp340              #   Call between .Ltmp340 and .Ltmp341
	.uleb128 .Ltmp342-.Lfunc_begin8         #     jumps to .Ltmp342
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp343-.Lfunc_begin8         # >> Call Site 8 <<
	.uleb128 .Ltmp344-.Ltmp343              #   Call between .Ltmp343 and .Ltmp344
	.uleb128 .Ltmp345-.Lfunc_begin8         #     jumps to .Ltmp345
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp344-.Lfunc_begin8         # >> Call Site 9 <<
	.uleb128 .Lfunc_end390-.Ltmp344         #   Call between .Ltmp344 and .Lfunc_end390
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end8:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception9
# %bb.0:                                # %_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 6
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB391_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp346:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp347:
# %bb.2:                                # %_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB391_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB391_1
# %bb.3:                                # %_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE15_M_create_nodesEPPS2_S6_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 63
	alsl.d	$a0, $a0, $a1, 3
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB391_4:
.Ltmp348:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB391_6
	.p2align	4, , 16
.LBB391_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB391_5
.LBB391_6:                              # %_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i
.Ltmp349:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp350:
# %bb.7:
.LBB391_8:
.Ltmp351:
	move	$s0, $a0
.Ltmp352:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp353:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp355:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp356:
# %bb.10:
.LBB391_11:
.Ltmp357:
	move	$fp, $a0
.Ltmp358:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp359:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB391_13:
.Ltmp360:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB391_14:
.Ltmp354:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end391:
	.size	_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm, .Lfunc_end391-_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table391:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Lfunc_begin9-.Lfunc_begin9    # >> Call Site 1 <<
	.uleb128 .Ltmp346-.Lfunc_begin9         #   Call between .Lfunc_begin9 and .Ltmp346
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp346-.Lfunc_begin9         # >> Call Site 2 <<
	.uleb128 .Ltmp347-.Ltmp346              #   Call between .Ltmp346 and .Ltmp347
	.uleb128 .Ltmp348-.Lfunc_begin9         #     jumps to .Ltmp348
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp347-.Lfunc_begin9         # >> Call Site 3 <<
	.uleb128 .Ltmp349-.Ltmp347              #   Call between .Ltmp347 and .Ltmp349
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp349-.Lfunc_begin9         # >> Call Site 4 <<
	.uleb128 .Ltmp350-.Ltmp349              #   Call between .Ltmp349 and .Ltmp350
	.uleb128 .Ltmp351-.Lfunc_begin9         #     jumps to .Ltmp351
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp352-.Lfunc_begin9         # >> Call Site 5 <<
	.uleb128 .Ltmp353-.Ltmp352              #   Call between .Ltmp352 and .Ltmp353
	.uleb128 .Ltmp354-.Lfunc_begin9         #     jumps to .Ltmp354
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp353-.Lfunc_begin9         # >> Call Site 6 <<
	.uleb128 .Ltmp355-.Ltmp353              #   Call between .Ltmp353 and .Ltmp355
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp355-.Lfunc_begin9         # >> Call Site 7 <<
	.uleb128 .Ltmp356-.Ltmp355              #   Call between .Ltmp355 and .Ltmp356
	.uleb128 .Ltmp357-.Lfunc_begin9         #     jumps to .Ltmp357
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp358-.Lfunc_begin9         # >> Call Site 8 <<
	.uleb128 .Ltmp359-.Ltmp358              #   Call between .Ltmp358 and .Ltmp359
	.uleb128 .Ltmp360-.Lfunc_begin9         #     jumps to .Ltmp360
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp359-.Lfunc_begin9         # >> Call Site 9 <<
	.uleb128 .Lfunc_end391-.Ltmp359         #   Call between .Ltmp359 and .Lfunc_end391
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end9:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception10
# %bb.0:                                # %_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 7
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB392_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp361:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp362:
# %bb.2:                                # %_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB392_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB392_1
# %bb.3:                                # %_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 127
	alsl.d	$a0, $a0, $a1, 2
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB392_4:
.Ltmp363:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB392_6
	.p2align	4, , 16
.LBB392_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB392_5
.LBB392_6:                              # %_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_.exit.i
.Ltmp364:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp365:
# %bb.7:
.LBB392_8:
.Ltmp366:
	move	$s0, $a0
.Ltmp367:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp368:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp370:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp371:
# %bb.10:
.LBB392_11:
.Ltmp372:
	move	$fp, $a0
.Ltmp373:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp374:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB392_13:
.Ltmp375:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB392_14:
.Ltmp369:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end392:
	.size	_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm, .Lfunc_end392-_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table392:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Lfunc_begin10-.Lfunc_begin10  # >> Call Site 1 <<
	.uleb128 .Ltmp361-.Lfunc_begin10        #   Call between .Lfunc_begin10 and .Ltmp361
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp361-.Lfunc_begin10        # >> Call Site 2 <<
	.uleb128 .Ltmp362-.Ltmp361              #   Call between .Ltmp361 and .Ltmp362
	.uleb128 .Ltmp363-.Lfunc_begin10        #     jumps to .Ltmp363
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp362-.Lfunc_begin10        # >> Call Site 3 <<
	.uleb128 .Ltmp364-.Ltmp362              #   Call between .Ltmp362 and .Ltmp364
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp364-.Lfunc_begin10        # >> Call Site 4 <<
	.uleb128 .Ltmp365-.Ltmp364              #   Call between .Ltmp364 and .Ltmp365
	.uleb128 .Ltmp366-.Lfunc_begin10        #     jumps to .Ltmp366
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp367-.Lfunc_begin10        # >> Call Site 5 <<
	.uleb128 .Ltmp368-.Ltmp367              #   Call between .Ltmp367 and .Ltmp368
	.uleb128 .Ltmp369-.Lfunc_begin10        #     jumps to .Ltmp369
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp368-.Lfunc_begin10        # >> Call Site 6 <<
	.uleb128 .Ltmp370-.Ltmp368              #   Call between .Ltmp368 and .Ltmp370
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp370-.Lfunc_begin10        # >> Call Site 7 <<
	.uleb128 .Ltmp371-.Ltmp370              #   Call between .Ltmp370 and .Ltmp371
	.uleb128 .Ltmp372-.Lfunc_begin10        #     jumps to .Ltmp372
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp373-.Lfunc_begin10        # >> Call Site 8 <<
	.uleb128 .Ltmp374-.Ltmp373              #   Call between .Ltmp373 and .Ltmp374
	.uleb128 .Ltmp375-.Lfunc_begin10        #     jumps to .Ltmp375
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp374-.Lfunc_begin10        # >> Call Site 9 <<
	.uleb128 .Lfunc_end392-.Ltmp374         #   Call between .Ltmp374 and .Lfunc_end392
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end10:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception11
# %bb.0:                                # %_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 6
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB393_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp376:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp377:
# %bb.2:                                # %_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB393_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB393_1
# %bb.3:                                # %_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE15_M_create_nodesEPPS2_S6_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 63
	alsl.d	$a0, $a0, $a1, 3
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB393_4:
.Ltmp378:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB393_6
	.p2align	4, , 16
.LBB393_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB393_5
.LBB393_6:                              # %_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i
.Ltmp379:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp380:
# %bb.7:
.LBB393_8:
.Ltmp381:
	move	$s0, $a0
.Ltmp382:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp383:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp385:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp386:
# %bb.10:
.LBB393_11:
.Ltmp387:
	move	$fp, $a0
.Ltmp388:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp389:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB393_13:
.Ltmp390:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB393_14:
.Ltmp384:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end393:
	.size	_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm, .Lfunc_end393-_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table393:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Lfunc_begin11-.Lfunc_begin11  # >> Call Site 1 <<
	.uleb128 .Ltmp376-.Lfunc_begin11        #   Call between .Lfunc_begin11 and .Ltmp376
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp376-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Ltmp377-.Ltmp376              #   Call between .Ltmp376 and .Ltmp377
	.uleb128 .Ltmp378-.Lfunc_begin11        #     jumps to .Ltmp378
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp377-.Lfunc_begin11        # >> Call Site 3 <<
	.uleb128 .Ltmp379-.Ltmp377              #   Call between .Ltmp377 and .Ltmp379
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp379-.Lfunc_begin11        # >> Call Site 4 <<
	.uleb128 .Ltmp380-.Ltmp379              #   Call between .Ltmp379 and .Ltmp380
	.uleb128 .Ltmp381-.Lfunc_begin11        #     jumps to .Ltmp381
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp382-.Lfunc_begin11        # >> Call Site 5 <<
	.uleb128 .Ltmp383-.Ltmp382              #   Call between .Ltmp382 and .Ltmp383
	.uleb128 .Ltmp384-.Lfunc_begin11        #     jumps to .Ltmp384
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp383-.Lfunc_begin11        # >> Call Site 6 <<
	.uleb128 .Ltmp385-.Ltmp383              #   Call between .Ltmp383 and .Ltmp385
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp385-.Lfunc_begin11        # >> Call Site 7 <<
	.uleb128 .Ltmp386-.Ltmp385              #   Call between .Ltmp385 and .Ltmp386
	.uleb128 .Ltmp387-.Lfunc_begin11        #     jumps to .Ltmp387
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp388-.Lfunc_begin11        # >> Call Site 8 <<
	.uleb128 .Ltmp389-.Ltmp388              #   Call between .Ltmp388 and .Ltmp389
	.uleb128 .Ltmp390-.Lfunc_begin11        #     jumps to .Ltmp390
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp389-.Lfunc_begin11        # >> Call Site 9 <<
	.uleb128 .Lfunc_end393-.Ltmp389         #   Call between .Ltmp389 and .Lfunc_end393
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end11:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception12
# %bb.0:                                # %_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 6
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB394_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp391:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp392:
# %bb.2:                                # %_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB394_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB394_1
# %bb.3:                                # %_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE15_M_create_nodesEPPS2_S6_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 63
	alsl.d	$a0, $a0, $a1, 3
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB394_4:
.Ltmp393:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB394_6
	.p2align	4, , 16
.LBB394_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB394_5
.LBB394_6:                              # %_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i
.Ltmp394:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp395:
# %bb.7:
.LBB394_8:
.Ltmp396:
	move	$s0, $a0
.Ltmp397:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp398:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp400:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp401:
# %bb.10:
.LBB394_11:
.Ltmp402:
	move	$fp, $a0
.Ltmp403:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp404:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB394_13:
.Ltmp405:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB394_14:
.Ltmp399:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end394:
	.size	_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm, .Lfunc_end394-_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table394:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Lfunc_begin12-.Lfunc_begin12  # >> Call Site 1 <<
	.uleb128 .Ltmp391-.Lfunc_begin12        #   Call between .Lfunc_begin12 and .Ltmp391
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp391-.Lfunc_begin12        # >> Call Site 2 <<
	.uleb128 .Ltmp392-.Ltmp391              #   Call between .Ltmp391 and .Ltmp392
	.uleb128 .Ltmp393-.Lfunc_begin12        #     jumps to .Ltmp393
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp392-.Lfunc_begin12        # >> Call Site 3 <<
	.uleb128 .Ltmp394-.Ltmp392              #   Call between .Ltmp392 and .Ltmp394
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp394-.Lfunc_begin12        # >> Call Site 4 <<
	.uleb128 .Ltmp395-.Ltmp394              #   Call between .Ltmp394 and .Ltmp395
	.uleb128 .Ltmp396-.Lfunc_begin12        #     jumps to .Ltmp396
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp397-.Lfunc_begin12        # >> Call Site 5 <<
	.uleb128 .Ltmp398-.Ltmp397              #   Call between .Ltmp397 and .Ltmp398
	.uleb128 .Ltmp399-.Lfunc_begin12        #     jumps to .Ltmp399
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp398-.Lfunc_begin12        # >> Call Site 6 <<
	.uleb128 .Ltmp400-.Ltmp398              #   Call between .Ltmp398 and .Ltmp400
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp400-.Lfunc_begin12        # >> Call Site 7 <<
	.uleb128 .Ltmp401-.Ltmp400              #   Call between .Ltmp400 and .Ltmp401
	.uleb128 .Ltmp402-.Lfunc_begin12        #     jumps to .Ltmp402
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp403-.Lfunc_begin12        # >> Call Site 8 <<
	.uleb128 .Ltmp404-.Ltmp403              #   Call between .Ltmp403 and .Ltmp404
	.uleb128 .Ltmp405-.Lfunc_begin12        #     jumps to .Ltmp405
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp404-.Lfunc_begin12        # >> Call Site 9 <<
	.uleb128 .Lfunc_end394-.Ltmp404         #   Call between .Ltmp404 and .Lfunc_end394
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end12:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception13
# %bb.0:                                # %_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 6
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB395_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp406:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp407:
# %bb.2:                                # %_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB395_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB395_1
# %bb.3:                                # %_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE15_M_create_nodesEPPS2_S6_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 63
	alsl.d	$a0, $a0, $a1, 3
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB395_4:
.Ltmp408:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB395_6
	.p2align	4, , 16
.LBB395_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB395_5
.LBB395_6:                              # %_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i
.Ltmp409:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp410:
# %bb.7:
.LBB395_8:
.Ltmp411:
	move	$s0, $a0
.Ltmp412:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp413:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp415:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp416:
# %bb.10:
.LBB395_11:
.Ltmp417:
	move	$fp, $a0
.Ltmp418:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp419:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB395_13:
.Ltmp420:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB395_14:
.Ltmp414:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end395:
	.size	_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm, .Lfunc_end395-_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table395:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13  # >> Call Site 1 <<
	.uleb128 .Ltmp406-.Lfunc_begin13        #   Call between .Lfunc_begin13 and .Ltmp406
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp406-.Lfunc_begin13        # >> Call Site 2 <<
	.uleb128 .Ltmp407-.Ltmp406              #   Call between .Ltmp406 and .Ltmp407
	.uleb128 .Ltmp408-.Lfunc_begin13        #     jumps to .Ltmp408
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp407-.Lfunc_begin13        # >> Call Site 3 <<
	.uleb128 .Ltmp409-.Ltmp407              #   Call between .Ltmp407 and .Ltmp409
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp409-.Lfunc_begin13        # >> Call Site 4 <<
	.uleb128 .Ltmp410-.Ltmp409              #   Call between .Ltmp409 and .Ltmp410
	.uleb128 .Ltmp411-.Lfunc_begin13        #     jumps to .Ltmp411
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp412-.Lfunc_begin13        # >> Call Site 5 <<
	.uleb128 .Ltmp413-.Ltmp412              #   Call between .Ltmp412 and .Ltmp413
	.uleb128 .Ltmp414-.Lfunc_begin13        #     jumps to .Ltmp414
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp413-.Lfunc_begin13        # >> Call Site 6 <<
	.uleb128 .Ltmp415-.Ltmp413              #   Call between .Ltmp413 and .Ltmp415
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp415-.Lfunc_begin13        # >> Call Site 7 <<
	.uleb128 .Ltmp416-.Ltmp415              #   Call between .Ltmp415 and .Ltmp416
	.uleb128 .Ltmp417-.Lfunc_begin13        #     jumps to .Ltmp417
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp418-.Lfunc_begin13        # >> Call Site 8 <<
	.uleb128 .Ltmp419-.Ltmp418              #   Call between .Ltmp418 and .Ltmp419
	.uleb128 .Ltmp420-.Lfunc_begin13        #     jumps to .Ltmp420
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp419-.Lfunc_begin13        # >> Call Site 9 <<
	.uleb128 .Lfunc_end395-.Ltmp419         #   Call between .Ltmp419 and .Lfunc_end395
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end13:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception14
# %bb.0:                                # %_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 6
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB396_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp421:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp422:
# %bb.2:                                # %_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB396_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB396_1
# %bb.3:                                # %_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE15_M_create_nodesEPPS2_S6_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 63
	alsl.d	$a0, $a0, $a1, 3
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB396_4:
.Ltmp423:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB396_6
	.p2align	4, , 16
.LBB396_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB396_5
.LBB396_6:                              # %_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i
.Ltmp424:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp425:
# %bb.7:
.LBB396_8:
.Ltmp426:
	move	$s0, $a0
.Ltmp427:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp428:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp430:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp431:
# %bb.10:
.LBB396_11:
.Ltmp432:
	move	$fp, $a0
.Ltmp433:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp434:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB396_13:
.Ltmp435:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB396_14:
.Ltmp429:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end396:
	.size	_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm, .Lfunc_end396-_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table396:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14  # >> Call Site 1 <<
	.uleb128 .Ltmp421-.Lfunc_begin14        #   Call between .Lfunc_begin14 and .Ltmp421
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp421-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Ltmp422-.Ltmp421              #   Call between .Ltmp421 and .Ltmp422
	.uleb128 .Ltmp423-.Lfunc_begin14        #     jumps to .Ltmp423
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp422-.Lfunc_begin14        # >> Call Site 3 <<
	.uleb128 .Ltmp424-.Ltmp422              #   Call between .Ltmp422 and .Ltmp424
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp424-.Lfunc_begin14        # >> Call Site 4 <<
	.uleb128 .Ltmp425-.Ltmp424              #   Call between .Ltmp424 and .Ltmp425
	.uleb128 .Ltmp426-.Lfunc_begin14        #     jumps to .Ltmp426
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp427-.Lfunc_begin14        # >> Call Site 5 <<
	.uleb128 .Ltmp428-.Ltmp427              #   Call between .Ltmp427 and .Ltmp428
	.uleb128 .Ltmp429-.Lfunc_begin14        #     jumps to .Ltmp429
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp428-.Lfunc_begin14        # >> Call Site 6 <<
	.uleb128 .Ltmp430-.Ltmp428              #   Call between .Ltmp428 and .Ltmp430
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp430-.Lfunc_begin14        # >> Call Site 7 <<
	.uleb128 .Ltmp431-.Ltmp430              #   Call between .Ltmp430 and .Ltmp431
	.uleb128 .Ltmp432-.Lfunc_begin14        #     jumps to .Ltmp432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp433-.Lfunc_begin14        # >> Call Site 8 <<
	.uleb128 .Ltmp434-.Ltmp433              #   Call between .Ltmp433 and .Ltmp434
	.uleb128 .Ltmp435-.Lfunc_begin14        #     jumps to .Ltmp435
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp434-.Lfunc_begin14        # >> Call Site 9 <<
	.uleb128 .Lfunc_end396-.Ltmp434         #   Call between .Ltmp434 and .Lfunc_end396
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase10:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception15
# %bb.0:                                # %_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE15_M_allocate_mapEm.exit
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 6
	addi.d	$s2, $a0, 1
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	addi.d	$s1, $a0, 3
	st.d	$s1, $fp, 8
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB397_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp436:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp437:
# %bb.2:                                # %_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB397_1 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB397_1
# %bb.3:                                # %_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE15_M_create_nodesEPPS2_S6_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 63
	alsl.d	$a0, $a0, $a1, 3
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB397_4:
.Ltmp438:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB397_6
	.p2align	4, , 16
.LBB397_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB397_5
.LBB397_6:                              # %_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE16_M_destroy_nodesEPPS2_S6_.exit.i
.Ltmp439:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp440:
# %bb.7:
.LBB397_8:
.Ltmp441:
	move	$s0, $a0
.Ltmp442:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp443:
# %bb.9:                                # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp445:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp446:
# %bb.10:
.LBB397_11:
.Ltmp447:
	move	$fp, $a0
.Ltmp448:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp449:
# %bb.12:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB397_13:
.Ltmp450:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB397_14:
.Ltmp444:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end397:
	.size	_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm, .Lfunc_end397-_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table397:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Lfunc_begin15-.Lfunc_begin15  # >> Call Site 1 <<
	.uleb128 .Ltmp436-.Lfunc_begin15        #   Call between .Lfunc_begin15 and .Ltmp436
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp436-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp437-.Ltmp436              #   Call between .Ltmp436 and .Ltmp437
	.uleb128 .Ltmp438-.Lfunc_begin15        #     jumps to .Ltmp438
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp437-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Ltmp439-.Ltmp437              #   Call between .Ltmp437 and .Ltmp439
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp439-.Lfunc_begin15        # >> Call Site 4 <<
	.uleb128 .Ltmp440-.Ltmp439              #   Call between .Ltmp439 and .Ltmp440
	.uleb128 .Ltmp441-.Lfunc_begin15        #     jumps to .Ltmp441
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp442-.Lfunc_begin15        # >> Call Site 5 <<
	.uleb128 .Ltmp443-.Ltmp442              #   Call between .Ltmp442 and .Ltmp443
	.uleb128 .Ltmp444-.Lfunc_begin15        #     jumps to .Ltmp444
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp443-.Lfunc_begin15        # >> Call Site 6 <<
	.uleb128 .Ltmp445-.Ltmp443              #   Call between .Ltmp443 and .Ltmp445
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp445-.Lfunc_begin15        # >> Call Site 7 <<
	.uleb128 .Ltmp446-.Ltmp445              #   Call between .Ltmp445 and .Ltmp446
	.uleb128 .Ltmp447-.Lfunc_begin15        #     jumps to .Ltmp447
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp448-.Lfunc_begin15        # >> Call Site 8 <<
	.uleb128 .Ltmp449-.Ltmp448              #   Call between .Ltmp448 and .Ltmp449
	.uleb128 .Ltmp450-.Lfunc_begin15        #     jumps to .Ltmp450
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp449-.Lfunc_begin15        # >> Call Site 9 <<
	.uleb128 .Lfunc_end397-.Ltmp449         #   Call between .Ltmp449 and .Lfunc_end397
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase11:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB398_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB398_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB398_3:                              # %_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB398_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end398:
	.size	_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_, .Lfunc_end398-_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB399_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB399_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB399_12
# %bb.3:
	move	$a0, $s0
	b	.LBB399_8
.LBB399_4:                              # %_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB399_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB399_6:                              # %_ZSt4copyIPPPN2kc7impl_IDES4_ET0_T_S6_S5_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB399_9
.LBB399_7:                              # %_ZSt9__advanceIPPPN2kc7impl_IDElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB399_14
.LBB399_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB399_9:                              # %_ZSt4copyIPPPN2kc7impl_IDES4_ET0_T_S6_S5_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB399_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB399_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB399_6
.LBB399_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB399_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB399_9
.LBB399_14:                             # %_ZSt9__advanceIPPPN2kc7impl_IDElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB399_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB399_9
.Lfunc_end399:
	.size	_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb, .Lfunc_end399-_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB400_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB400_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB400_3:                              # %_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB400_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end400:
	.size	_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_, .Lfunc_end400-_ZNSt5dequeIPN2kc7impl_IDESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB401_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB401_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB401_3:                              # %_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB401_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end401:
	.size	_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_, .Lfunc_end401-_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB402_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB402_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB402_12
# %bb.3:
	move	$a0, $s0
	b	.LBB402_8
.LBB402_4:                              # %_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB402_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB402_6:                              # %_ZSt4copyIPPPN2kc14impl_operatorsES4_ET0_T_S6_S5_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB402_9
.LBB402_7:                              # %_ZSt9__advanceIPPPN2kc14impl_operatorsElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB402_14
.LBB402_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB402_9:                              # %_ZSt4copyIPPPN2kc14impl_operatorsES4_ET0_T_S6_S5_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB402_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB402_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB402_6
.LBB402_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB402_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB402_9
.LBB402_14:                             # %_ZSt9__advanceIPPPN2kc14impl_operatorsElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB402_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB402_9
.Lfunc_end402:
	.size	_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb, .Lfunc_end402-_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB403_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB403_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB403_3:                              # %_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB403_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end403:
	.size	_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_, .Lfunc_end403-_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB404_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB404_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB404_12
# %bb.3:
	move	$a0, $s0
	b	.LBB404_8
.LBB404_4:                              # %_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB404_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB404_6:                              # %_ZSt4copyIPPPN2kc20impl_dollarvarstatusES4_ET0_T_S6_S5_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB404_9
.LBB404_7:                              # %_ZSt9__advanceIPPPN2kc20impl_dollarvarstatusElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB404_14
.LBB404_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB404_9:                              # %_ZSt4copyIPPPN2kc20impl_dollarvarstatusES4_ET0_T_S6_S5_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB404_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB404_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB404_6
.LBB404_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB404_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB404_9
.LBB404_14:                             # %_ZSt9__advanceIPPPN2kc20impl_dollarvarstatusElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB404_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB404_9
.Lfunc_end404:
	.size	_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb, .Lfunc_end404-_ZNSt5dequeIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB405_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB405_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB405_3:                              # %_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB405_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end405:
	.size	_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_, .Lfunc_end405-_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB406_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB406_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB406_12
# %bb.3:
	move	$a0, $s0
	b	.LBB406_8
.LBB406_4:                              # %_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB406_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB406_6:                              # %_ZSt4copyIPPPN2kc14impl_variablesES4_ET0_T_S6_S5_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB406_9
.LBB406_7:                              # %_ZSt9__advanceIPPPN2kc14impl_variablesElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB406_14
.LBB406_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB406_9:                              # %_ZSt4copyIPPPN2kc14impl_variablesES4_ET0_T_S6_S5_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB406_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB406_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB406_6
.LBB406_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB406_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB406_9
.LBB406_14:                             # %_ZSt9__advanceIPPPN2kc14impl_variablesElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB406_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB406_9
.Lfunc_end406:
	.size	_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb, .Lfunc_end406-_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB407_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB407_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB407_3:                              # %_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB407_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end407:
	.size	_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_, .Lfunc_end407-_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB408_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB408_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB408_12
# %bb.3:
	move	$a0, $s0
	b	.LBB408_8
.LBB408_4:                              # %_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB408_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB408_6:                              # %_ZSt4copyIPPPN2kc16impl_phylumnamesES4_ET0_T_S6_S5_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB408_9
.LBB408_7:                              # %_ZSt9__advanceIPPPN2kc16impl_phylumnamesElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB408_14
.LBB408_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB408_9:                              # %_ZSt4copyIPPPN2kc16impl_phylumnamesES4_ET0_T_S6_S5_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB408_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB408_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB408_6
.LBB408_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB408_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB408_9
.LBB408_14:                             # %_ZSt9__advanceIPPPN2kc16impl_phylumnamesElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB408_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB408_9
.Lfunc_end408:
	.size	_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb, .Lfunc_end408-_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB409_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB409_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB409_3:                              # %_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB409_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end409:
	.size	_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_, .Lfunc_end409-_ZNSt5dequeIPN2kc16impl_phylumnamesESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB410_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB410_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB410_3:                              # %_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB410_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end410:
	.size	_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_, .Lfunc_end410-_ZNSt5dequeIPN2kc14impl_variablesESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB411_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB411_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB411_3:                              # %_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB411_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end411:
	.size	_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_, .Lfunc_end411-_ZNSt5dequeIPN2kc14impl_operatorsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB412_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB412_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB412_3:                              # %_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB412_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end412:
	.size	_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_, .Lfunc_end412-_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE16_M_push_back_auxIJS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB413_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB413_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB413_12
# %bb.3:
	move	$a0, $s0
	b	.LBB413_8
.LBB413_4:                              # %_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB413_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB413_6:                              # %_ZSt4copyIPPPN2kc14impl_argumentsES4_ET0_T_S6_S5_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB413_9
.LBB413_7:                              # %_ZSt9__advanceIPPPN2kc14impl_argumentsElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB413_14
.LBB413_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB413_9:                              # %_ZSt4copyIPPPN2kc14impl_argumentsES4_ET0_T_S6_S5_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB413_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB413_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB413_6
.LBB413_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB413_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB413_9
.LBB413_14:                             # %_ZSt9__advanceIPPPN2kc14impl_argumentsElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB413_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB413_9
.Lfunc_end413:
	.size	_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb, .Lfunc_end413-_ZNSt5dequeIPN2kc14impl_argumentsESaIS2_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_,"axG",@progbits,_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_,comdat
	.weak	_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_ # -- Begin function _ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_,@function
_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_: # @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 7
	srai.d	$a2, $a2, 2
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 2
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 511
	beq	$a0, $a2, .LBB414_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB414_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB414_3:                              # %_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.w	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.w	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB414_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end414:
	.size	_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_, .Lfunc_end414-_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb: # @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB415_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB415_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB415_12
# %bb.3:
	move	$a0, $s0
	b	.LBB415_8
.LBB415_4:                              # %_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB415_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB415_6:                              # %_ZSt4copyIPPiS1_ET0_T_S3_S2_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB415_9
.LBB415_7:                              # %_ZSt9__advanceIPPilEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB415_14
.LBB415_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB415_9:                              # %_ZSt4copyIPPiS1_ET0_T_S3_S2_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB415_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB415_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB415_6
.LBB415_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB415_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB415_9
.LBB415_14:                             # %_ZSt9__advanceIPPilEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB415_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB415_9
.Lfunc_end415:
	.size	_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb, .Lfunc_end415-_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_ # -- Begin function _ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_,@function
_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_: # @_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 6
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 255
	beq	$a0, $a2, .LBB416_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB416_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB416_3:                              # %_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.d	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.d	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB416_4:
	pcalau12i	$a0, %pc_hi20(.L.str.1629)
	addi.d	$a0, $a0, %pc_lo12(.L.str.1629)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end416:
	.size	_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_, .Lfunc_end416-_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB417_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB417_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB417_12
# %bb.3:
	move	$a0, $s0
	b	.LBB417_8
.LBB417_4:                              # %_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB417_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB417_6:                              # %_ZSt4copyIPPPN2kc20impl_withexpressionsES4_ET0_T_S6_S5_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB417_9
.LBB417_7:                              # %_ZSt9__advanceIPPPN2kc20impl_withexpressionsElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB417_14
.LBB417_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB417_9:                              # %_ZSt4copyIPPPN2kc20impl_withexpressionsES4_ET0_T_S6_S5_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB417_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB417_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB417_6
.LBB417_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB417_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB417_9
.LBB417_14:                             # %_ZSt9__advanceIPPPN2kc20impl_withexpressionsElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB417_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB417_9
.Lfunc_end417:
	.size	_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb, .Lfunc_end417-_ZNSt5dequeIPN2kc20impl_withexpressionsESaIS2_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception16
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a3
	move	$s1, $a1
	move	$s0, $a0
	st.d	$a0, $sp, 8
	ori	$a0, $zero, 72
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	ld.d	$s5, $fp, 0
	move	$fp, $a0
	addi.d	$s3, $a0, 48
	st.d	$s3, $a0, 32
	ld.d	$a0, $s5, 0
	addi.d	$s4, $s5, 16
	addi.d	$s2, $fp, 32
	beq	$a0, $s4, .LBB418_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
	st.d	$a0, $s2, 0
	ld.d	$a0, $s5, 16
	st.d	$a0, $s3, 0
	ld.d	$s6, $s5, 8
	b	.LBB418_3
.LBB418_2:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i.i
	ld.d	$s6, $s5, 8
	addi.d	$a2, $s6, 1
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB418_3:
	st.d	$s6, $fp, 40
	st.d	$s4, $s5, 0
	st.d	$zero, $s5, 8
	st.b	$zero, $s5, 16
	st.d	$zero, $fp, 64
	st.d	$fp, $sp, 16
.Ltmp451:
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_)
	jirl	$ra, $ra, 0
.Ltmp452:
# %bb.4:
	move	$a2, $a0
	move	$s1, $a1
	beqz	$a1, .LBB418_12
# %bb.5:
	addi.d	$a3, $s0, 8
	ori	$a0, $zero, 1
	bnez	$a2, .LBB418_11
# %bb.6:
	beq	$a3, $s1, .LBB418_11
# %bb.7:
	ld.d	$s3, $fp, 40
	ld.d	$s4, $s1, 40
	sltu	$a0, $s4, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB418_9
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s1, 32
	ld.d	$a0, $s2, 0
	move	$s2, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a3, $s2
	bnez	$a0, .LBB418_10
.LBB418_9:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $s3, $s4
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB418_10:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
.LBB418_11:                             # %.thread
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 40
	move	$a0, $fp
	b	.LBB418_15
.LBB418_12:
	move	$s0, $a2
	ld.d	$a0, $s2, 0
	beq	$a0, $s3, .LBB418_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i8
	ld.d	$a1, $s3, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB418_14:                             # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISB_E.exit.i
	ori	$a1, $zero, 72
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
.LBB418_15:                             # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev.exit
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB418_16:
.Ltmp453:
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end418:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_, .Lfunc_end418-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table418:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Lfunc_begin16-.Lfunc_begin16  # >> Call Site 1 <<
	.uleb128 .Ltmp451-.Lfunc_begin16        #   Call between .Lfunc_begin16 and .Ltmp451
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp451-.Lfunc_begin16        # >> Call Site 2 <<
	.uleb128 .Ltmp452-.Ltmp451              #   Call between .Ltmp451 and .Ltmp452
	.uleb128 .Ltmp453-.Lfunc_begin16        #     jumps to .Ltmp453
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp452-.Lfunc_begin16        # >> Call Site 3 <<
	.uleb128 .Lfunc_end418-.Ltmp452         #   Call between .Ltmp452 and .Lfunc_end418
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end16:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s1, $a0
	addi.d	$a0, $a0, 8
	move	$s0, $a2
	beq	$a0, $a1, .LBB419_4
# %bb.1:
	move	$fp, $a1
	ld.d	$s5, $s0, 8
	ld.d	$s6, $a1, 40
	sltu	$a0, $s6, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s6, $a0
	or	$s2, $a0, $a1
	beqz	$s2, .LBB419_10
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i22
	ld.d	$s3, $fp, 32
	ld.d	$s4, $s0, 0
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB419_11
# %bb.3:                                # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread
	bltz	$a0, .LBB419_12
	b	.LBB419_18
.LBB419_4:
	ld.d	$a0, $s1, 40
	beqz	$a0, .LBB419_28
# %bb.5:
	ld.d	$a1, $s1, 32
	ld.d	$fp, $a1, 40
	ld.d	$s2, $s0, 8
	sltu	$a0, $s2, $fp
	masknez	$a2, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a2, $a0, $a2
	beqz	$a2, .LBB419_7
# %bb.6:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a3, $s0, 0
	ld.d	$a0, $a1, 32
	move	$s3, $a1
	move	$a1, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a1, $s3
	bnez	$a0, .LBB419_8
.LBB419_7:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $fp, $s2
	lu12i.w	$a2, -524288
	slt	$a3, $a2, $a0
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
	lu12i.w	$a2, 524287
	ori	$a2, $a2, 4095
	slt	$a3, $a0, $a2
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
.LBB419_8:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB419_28
# %bb.9:
	move	$fp, $zero
	b	.LBB419_29
.LBB419_10:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29
	bltu	$s5, $s6, .LBB419_12
	b	.LBB419_19
.LBB419_11:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread81
	bgeu	$s5, $s6, .LBB419_18
.LBB419_12:
	ld.d	$a0, $s1, 24
	beq	$a0, $fp, .LBB419_22
# %bb.13:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s5, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB419_15
# %bb.14:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i31
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB419_16
.LBB419_15:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i34
	sub.d	$a0, $s3, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB419_16:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit38
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB419_28
# %bb.17:
	ld.d	$a0, $s2, 24
	sltui	$a0, $a0, 1
	masknez	$fp, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a1, $a0, $fp
	b	.LBB419_29
.LBB419_18:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i40
	move	$a0, $s3
	move	$a1, $s4
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB419_20
.LBB419_19:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i43
	sub.d	$a0, $s6, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB419_20:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit47
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB419_23
# %bb.21:
	move	$a1, $zero
	b	.LBB419_29
.LBB419_22:
	move	$a1, $fp
	b	.LBB419_29
.LBB419_23:
	ld.d	$a0, $s1, 32
	beq	$a0, $fp, .LBB419_30
# %bb.24:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s3, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB419_26
# %bb.25:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i49
	ld.d	$a1, $s2, 32
	ld.d	$a0, $s0, 0
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB419_27
.LBB419_26:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i52
	sub.d	$a0, $s5, $s3
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB419_27:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit56
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB419_31
.LBB419_28:
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.LBB419_29:
	move	$a0, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB419_30:
	move	$a1, $fp
	move	$fp, $zero
	b	.LBB419_29
.LBB419_31:
	ld.d	$a0, $fp, 24
	sltui	$a0, $a0, 1
	maskeqz	$a1, $fp, $a0
	masknez	$fp, $s2, $a0
	or	$a1, $a1, $fp
	b	.LBB419_29
.Lfunc_end419:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_, .Lfunc_end419-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB420_4
# %bb.1:
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB420_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB420_3:                              # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISB_E.exit
	ori	$a1, $zero, 72
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB420_4:
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end420:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev, .Lfunc_end420-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE10_Auto_nodeD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a0
	ld.d	$a0, $a0, 16
	move	$s0, $a1
	lu12i.w	$s4, -524288
	lu12i.w	$s3, 524287
	beqz	$a0, .LBB421_13
# %bb.1:                                # %.lr.ph
	ld.d	$s5, $s0, 8
	ld.d	$s2, $s0, 0
	ori	$s6, $s3, 4095
	ori	$s7, $zero, 24
	ori	$s8, $zero, 16
	b	.LBB421_4
	.p2align	4, , 16
.LBB421_2:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
                                        #   in Loop: Header=BB421_4 Depth=1
	sub.d	$a0, $s5, $s3
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s6
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
.LBB421_3:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
                                        #   in Loop: Header=BB421_4 Depth=1
	addi.w	$a1, $a0, 0
	slti	$a0, $a1, 0
	masknez	$a2, $s7, $a0
	maskeqz	$a0, $s8, $a0
	or	$a0, $a0, $a2
	ldx.d	$a0, $fp, $a0
	beqz	$a0, .LBB421_6
.LBB421_4:                              # =>This Inner Loop Header: Depth=1
	move	$fp, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s3, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB421_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB421_4 Depth=1
	ld.d	$a1, $fp, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB421_3
	b	.LBB421_2
.LBB421_6:                              # %._crit_edge
	move	$s2, $fp
	lu12i.w	$s3, 524287
	bgez	$a1, .LBB421_9
# %bb.7:                                # %._crit_edge.thread
	ld.d	$a0, $s1, 24
	beq	$fp, $a0, .LBB421_14
.LBB421_8:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
.LBB421_9:
	ld.d	$s1, $s2, 40
	ld.d	$s5, $s0, 8
	sltu	$a0, $s5, $s1
	masknez	$a1, $s1, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB421_11
# %bb.10:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i6
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB421_12
.LBB421_11:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i9
	sub.d	$a0, $s1, $s5
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	ori	$a1, $s3, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB421_12:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit13
	addi.w	$a0, $a0, 0
	slti	$a1, $a0, 0
	srai.d	$a0, $a0, 63
	and	$fp, $a0, $fp
	masknez	$a0, $s2, $a1
	b	.LBB421_15
.LBB421_13:
	addi.d	$fp, $s1, 8
	ld.d	$a0, $s1, 24
	bne	$fp, $a0, .LBB421_8
.LBB421_14:
	move	$a0, $zero
.LBB421_15:
	move	$a1, $fp
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end421:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_, .Lfunc_end421-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN2kc9impl_pathEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	5                               # -- Begin function _GLOBAL__sub_I_unpk.cc
	.type	_GLOBAL__sub_I_unpk.cc,@function
_GLOBAL__sub_I_unpk.cc:                 # @_GLOBAL__sub_I_unpk.cc
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	pcalau12i	$a0, %pc_hi20(_ZN2kc10base_uviewE)
	st.w	$zero, $a0, %pc_lo12(_ZN2kc10base_uviewE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc13view_filenameE)
	ori	$a1, $zero, 2
	st.w	$a1, $a0, %pc_lo12(_ZN2kc13view_filenameE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_errorE)
	ori	$a1, $zero, 3
	st.w	$a1, $a0, %pc_lo12(_ZN2kc10view_errorE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc14view_error_tIDE)
	ori	$a1, $zero, 4
	st.w	$a1, $a0, %pc_lo12(_ZN2kc14view_error_tIDE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc10view_checkE)
	ori	$a1, $zero, 5
	st.w	$a1, $a0, %pc_lo12(_ZN2kc10view_checkE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_check_countE)
	ori	$a1, $zero, 6
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_check_countE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_check_count1E)
	ori	$a1, $zero, 7
	st.w	$a1, $a0, %pc_lo12(_ZN2kc17view_check_count1E)
	pcalau12i	$a0, %pc_hi20(_ZN2kc33view_check_outmostopers_in_phylumE)
	ori	$a1, $zero, 8
	st.w	$a1, $a0, %pc_lo12(_ZN2kc33view_check_outmostopers_in_phylumE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc13view_set_typeE)
	ori	$a1, $zero, 9
	st.w	$a1, $a0, %pc_lo12(_ZN2kc13view_set_typeE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_check_is_varE)
	ori	$a1, $zero, 10
	st.w	$a1, $a0, %pc_lo12(_ZN2kc17view_check_is_varE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_initializephyla_cE)
	ori	$a1, $zero, 11
	st.w	$a1, $a0, %pc_lo12(_ZN2kc26view_gen_initializephyla_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc12view_check_uE)
	ori	$a1, $zero, 12
	st.w	$a1, $a0, %pc_lo12(_ZN2kc12view_check_uE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc12view_check_rE)
	ori	$a1, $zero, 13
	st.w	$a1, $a0, %pc_lo12(_ZN2kc12view_check_rE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_check_viewnamesE)
	ori	$a1, $zero, 14
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_check_viewnamesE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_check_uniqE)
	ori	$a1, $zero, 15
	st.w	$a1, $a0, %pc_lo12(_ZN2kc15view_check_uniqE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_check_uniq1E)
	ori	$a1, $zero, 16
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_check_uniq1E)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_check_uniq2E)
	ori	$a1, $zero, 17
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_check_uniq2E)
	pcalau12i	$a0, %pc_hi20(_ZN2kc21view_make_patternrepsE)
	ori	$a1, $zero, 18
	st.w	$a1, $a0, %pc_lo12(_ZN2kc21view_make_patternrepsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_printer_outputfilelineE)
	ori	$a1, $zero, 19
	st.w	$a1, $a0, %pc_lo12(_ZN2kc27view_printer_outputfilelineE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_printer_resetE)
	ori	$a1, $zero, 20
	st.w	$a1, $a0, %pc_lo12(_ZN2kc18view_printer_resetE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc37view_no_of_printed_string_chars_resetE)
	ori	$a1, $zero, 21
	st.w	$a1, $a0, %pc_lo12(_ZN2kc37view_no_of_printed_string_chars_resetE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_open_namespaceE)
	ori	$a1, $zero, 22
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_open_namespaceE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_close_namespaceE)
	ori	$a1, $zero, 23
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_close_namespaceE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc12view_gen_k_hE)
	ori	$a1, $zero, 24
	st.w	$a1, $a0, %pc_lo12(_ZN2kc12view_gen_k_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_gen_end_k_hE)
	ori	$a1, $zero, 25
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_gen_end_k_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc12view_gen_k_cE)
	ori	$a1, $zero, 26
	st.w	$a1, $a0, %pc_lo12(_ZN2kc12view_gen_k_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_gen_alloc_hE)
	ori	$a1, $zero, 27
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_gen_alloc_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_gen_alloc_cE)
	ori	$a1, $zero, 28
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_gen_alloc_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_gen_deprecatedE)
	ori	$a1, $zero, 29
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_gen_deprecatedE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_enumphyla_hE)
	ori	$a1, $zero, 30
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_enumphyla_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_enumoperators_hE)
	ori	$a1, $zero, 31
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_enumoperators_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_gen_operatormap_type_hE)
	ori	$a1, $zero, 32
	st.w	$a1, $a0, %pc_lo12(_ZN2kc27view_gen_operatormap_type_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_phylummap_cE)
	ori	$a1, $zero, 33
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_phylummap_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_operatormap_cE)
	ori	$a1, $zero, 34
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_gen_operatormap_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_count_argsE)
	ori	$a1, $zero, 35
	st.w	$a1, $a0, %pc_lo12(_ZN2kc15view_count_argsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_count_attrsE)
	ori	$a1, $zero, 36
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_count_attrsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_count_nonstaticmembersE)
	ori	$a1, $zero, 37
	st.w	$a1, $a0, %pc_lo12(_ZN2kc27view_count_nonstaticmembersE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc29view_gen_operatormap_subphylaE)
	ori	$a1, $zero, 38
	st.w	$a1, $a0, %pc_lo12(_ZN2kc29view_gen_operatormap_subphylaE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc31view_gen_operatormap_attributesE)
	ori	$a1, $zero, 39
	st.w	$a1, $a0, %pc_lo12(_ZN2kc31view_gen_operatormap_attributesE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_gen_uniqmap_cE)
	ori	$a1, $zero, 40
	st.w	$a1, $a0, %pc_lo12(_ZN2kc18view_gen_uniqmap_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_uniqmap_c_1E)
	ori	$a1, $zero, 41
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_uniqmap_c_1E)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_uniqmap_c_2E)
	ori	$a1, $zero, 42
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_uniqmap_c_2E)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_gen_nodetypedefs_hE)
	ori	$a1, $zero, 43
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_gen_nodetypedefs_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_nodetypes_hE)
	ori	$a1, $zero, 44
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_nodetypes_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_yaccstacktype_hE)
	ori	$a1, $zero, 45
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_yaccstacktype_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_noofoperators_hE)
	ori	$a1, $zero, 46
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_noofoperators_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_gen_assertmacros_hE)
	ori	$a1, $zero, 47
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_gen_assertmacros_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_gen_assertmacros_cE)
	ori	$a1, $zero, 48
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_gen_assertmacros_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_operatordecls_hE)
	ori	$a1, $zero, 49
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_operatordecls_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_gen_operatorcast_hE)
	ori	$a1, $zero, 50
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_gen_operatorcast_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_gen_operatordefs_cE)
	ori	$a1, $zero, 51
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_gen_operatordefs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc25view_gen_operatordefs_c_0E)
	ori	$a1, $zero, 52
	st.w	$a1, $a0, %pc_lo12(_ZN2kc25view_gen_operatordefs_c_0E)
	pcalau12i	$a0, %pc_hi20(_ZN2kc25view_gen_operatordefs_c_1E)
	ori	$a1, $zero, 53
	st.w	$a1, $a0, %pc_lo12(_ZN2kc25view_gen_operatordefs_c_1E)
	pcalau12i	$a0, %pc_hi20(_ZN2kc25view_gen_operatordefs_c_2E)
	ori	$a1, $zero, 54
	st.w	$a1, $a0, %pc_lo12(_ZN2kc25view_gen_operatordefs_c_2E)
	pcalau12i	$a0, %pc_hi20(_ZN2kc36view_gen_initializephyla_whiletest_cE)
	ori	$a1, $zero, 55
	st.w	$a1, $a0, %pc_lo12(_ZN2kc36view_gen_initializephyla_whiletest_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc34view_gen_initializephyla_init_el_cE)
	ori	$a1, $zero, 56
	st.w	$a1, $a0, %pc_lo12(_ZN2kc34view_gen_initializephyla_init_el_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc38view_gen_initializephyla_update_loop_cE)
	ori	$a1, $zero, 57
	st.w	$a1, $a0, %pc_lo12(_ZN2kc38view_gen_initializephyla_update_loop_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc31view_gen_operatordefs_nonhash_cE)
	ori	$a1, $zero, 58
	st.w	$a1, $a0, %pc_lo12(_ZN2kc31view_gen_operatordefs_nonhash_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc28view_gen_operatordefs_hash_cE)
	ori	$a1, $zero, 59
	st.w	$a1, $a0, %pc_lo12(_ZN2kc28view_gen_operatordefs_hash_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc25view_gen_access_functionsE)
	ori	$a1, $zero, 60
	st.w	$a1, $a0, %pc_lo12(_ZN2kc25view_gen_access_functionsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_create_functionE)
	ori	$a1, $zero, 61
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_create_functionE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc29view_gen_attributeOf_functionE)
	ori	$a1, $zero, 62
	st.w	$a1, $a0, %pc_lo12(_ZN2kc29view_gen_attributeOf_functionE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_argseqnrE)
	ori	$a1, $zero, 63
	st.w	$a1, $a0, %pc_lo12(_ZN2kc17view_gen_argseqnrE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_fnarg_assertsE)
	ori	$a1, $zero, 64
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_gen_fnarg_assertsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fnarg_and_declsE)
	ori	$a1, $zero, 65
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_fnarg_and_declsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	ori	$a1, $zero, 66
	st.w	$a1, $a0, %pc_lo12(_ZN2kc31view_gen_fnarg_and_decls_predefE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_assignmentsE)
	ori	$a1, $zero, 67
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_assignmentsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_assignment_inisE)
	ori	$a1, $zero, 68
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_assignment_inisE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc29view_gen_user_assignment_inisE)
	ori	$a1, $zero, 69
	st.w	$a1, $a0, %pc_lo12(_ZN2kc29view_gen_user_assignment_inisE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_gen_assignments_predefE)
	ori	$a1, $zero, 70
	st.w	$a1, $a0, %pc_lo12(_ZN2kc27view_gen_assignments_predefE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc31view_gen_assignments_predef_iniE)
	ori	$a1, $zero, 71
	st.w	$a1, $a0, %pc_lo12(_ZN2kc31view_gen_assignments_predef_iniE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc13view_gen_testE)
	ori	$a1, $zero, 72
	st.w	$a1, $a0, %pc_lo12(_ZN2kc13view_gen_testE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_error_decls_hE)
	ori	$a1, $zero, 73
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_gen_error_decls_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc21view_gen_error_defs_cE)
	ori	$a1, $zero, 74
	st.w	$a1, $a0, %pc_lo12(_ZN2kc21view_gen_error_defs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_printdotdecls_hE)
	ori	$a1, $zero, 75
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_printdotdecls_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_gen_printdotdefs_cE)
	ori	$a1, $zero, 76
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_gen_printdotdefs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_printdotedges_cE)
	ori	$a1, $zero, 77
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_printdotedges_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_listdecls_hE)
	ori	$a1, $zero, 78
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_listdecls_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_gen_listdefs_cE)
	ori	$a1, $zero, 79
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_gen_listdefs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_includesE)
	ori	$a1, $zero, 80
	st.w	$a1, $a0, %pc_lo12(_ZN2kc17view_gen_includesE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_do_gen_includesE)
	ori	$a1, $zero, 81
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_do_gen_includesE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_csgio_start_hE)
	ori	$a1, $zero, 82
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_gen_csgio_start_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_csgio_end_hE)
	ori	$a1, $zero, 83
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_csgio_end_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_gen_csgio_hE)
	ori	$a1, $zero, 84
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_gen_csgio_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_csgio_start_cE)
	ori	$a1, $zero, 85
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_gen_csgio_start_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_gen_csgio_cE)
	ori	$a1, $zero, 86
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_gen_csgio_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc26view_gen_copy_attributes_cE)
	ori	$a1, $zero, 87
	st.w	$a1, $a0, %pc_lo12(_ZN2kc26view_gen_copy_attributes_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_gen_copydefs_cE)
	ori	$a1, $zero, 88
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_gen_copydefs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_gen_rewritek_hE)
	ori	$a1, $zero, 89
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_gen_rewritek_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_gen_end_rewritek_hE)
	ori	$a1, $zero, 90
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_gen_end_rewritek_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_gen_rewritek_cE)
	ori	$a1, $zero, 91
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_gen_rewritek_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_rewritedefs_cE)
	ori	$a1, $zero, 92
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_gen_rewritedefs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc30view_gen_rewritedefs_default_cE)
	ori	$a1, $zero, 93
	st.w	$a1, $a0, %pc_lo12(_ZN2kc30view_gen_rewritedefs_default_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc28view_gen_rewritedefs_other_cE)
	ori	$a1, $zero, 94
	st.w	$a1, $a0, %pc_lo12(_ZN2kc28view_gen_rewritedefs_other_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc33view_gen_rewritedefs_rewritearg_cE)
	ori	$a1, $zero, 95
	st.w	$a1, $a0, %pc_lo12(_ZN2kc33view_gen_rewritedefs_rewritearg_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc29view_gen_rewritedefs_nl_arg_cE)
	ori	$a1, $zero, 96
	st.w	$a1, $a0, %pc_lo12(_ZN2kc29view_gen_rewritedefs_nl_arg_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc30view_gen_rewritedefs_testarg_cE)
	ori	$a1, $zero, 97
	st.w	$a1, $a0, %pc_lo12(_ZN2kc30view_gen_rewritedefs_testarg_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc32view_gen_rewritedefs_dotestarg_cE)
	ori	$a1, $zero, 98
	st.w	$a1, $a0, %pc_lo12(_ZN2kc32view_gen_rewritedefs_dotestarg_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_gen_rewritedefs_args_cE)
	ori	$a1, $zero, 99
	st.w	$a1, $a0, %pc_lo12(_ZN2kc27view_gen_rewritedefs_args_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc27view_gen_rewritedefs_body_cE)
	ori	$a1, $zero, 100
	st.w	$a1, $a0, %pc_lo12(_ZN2kc27view_gen_rewritedefs_body_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc30view_gen_withcases_and_defaultE)
	ori	$a1, $zero, 101
	st.w	$a1, $a0, %pc_lo12(_ZN2kc30view_gen_withcases_and_defaultE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_rw_predicatesE)
	ori	$a1, $zero, 102
	st.w	$a1, $a0, %pc_lo12(_ZN2kc18view_rw_predicatesE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_wc_predicatesE)
	ori	$a1, $zero, 103
	st.w	$a1, $a0, %pc_lo12(_ZN2kc18view_wc_predicatesE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_unp_predicatesE)
	ori	$a1, $zero, 104
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_unp_predicatesE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_wc_bindingsE)
	ori	$a1, $zero, 105
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_wc_bindingsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_unp_bindingsE)
	ori	$a1, $zero, 106
	st.w	$a1, $a0, %pc_lo12(_ZN2kc17view_unp_bindingsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_rw_bindingsE)
	ori	$a1, $zero, 107
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_rw_bindingsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc14view_gen_fnk_hE)
	ori	$a1, $zero, 108
	st.w	$a1, $a0, %pc_lo12(_ZN2kc14view_gen_fnk_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_gen_fnkdecls_cE)
	ori	$a1, $zero, 109
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_gen_fnkdecls_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc14view_gen_fnk_cE)
	ori	$a1, $zero, 110
	st.w	$a1, $a0, %pc_lo12(_ZN2kc14view_gen_fnk_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_fn_pointer_nameE)
	ori	$a1, $zero, 111
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_fn_pointer_nameE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_gen_fnkargsE)
	ori	$a1, $zero, 112
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_gen_fnkargsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_fnkdeclsE)
	ori	$a1, $zero, 113
	st.w	$a1, $a0, %pc_lo12(_ZN2kc17view_gen_fnkdeclsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_fns_start_hE)
	ori	$a1, $zero, 114
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_fns_start_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_gen_fns_end_hE)
	ori	$a1, $zero, 115
	st.w	$a1, $a0, %pc_lo12(_ZN2kc18view_gen_fns_end_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_fns_start_cE)
	ori	$a1, $zero, 116
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_fns_start_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc25view_gen_fns_owninclude_cE)
	ori	$a1, $zero, 117
	st.w	$a1, $a0, %pc_lo12(_ZN2kc25view_gen_fns_owninclude_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_gen_unpk_hE)
	ori	$a1, $zero, 118
	st.w	$a1, $a0, %pc_lo12(_ZN2kc15view_gen_unpk_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_gen_unparsedecls_hE)
	ori	$a1, $zero, 119
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_gen_unparsedecls_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_gen_rewritedecls_hE)
	ori	$a1, $zero, 120
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_gen_rewritedecls_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc14view_uview_defE)
	ori	$a1, $zero, 121
	st.w	$a1, $a0, %pc_lo12(_ZN2kc14view_uview_defE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_gen_end_unpk_hE)
	ori	$a1, $zero, 122
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_gen_end_unpk_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc15view_gen_unpk_cE)
	ori	$a1, $zero, 123
	st.w	$a1, $a0, %pc_lo12(_ZN2kc15view_gen_unpk_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc29view_gen_default_types_unpk_cE)
	ori	$a1, $zero, 124
	st.w	$a1, $a0, %pc_lo12(_ZN2kc29view_gen_default_types_unpk_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_unparsedefs_cE)
	ori	$a1, $zero, 125
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_gen_unparsedefs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc28view_gen_unparsedefs_other_cE)
	ori	$a1, $zero, 127
	st.w	$a1, $a0, %pc_lo12(_ZN2kc28view_gen_unparsedefs_other_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_gen_unpstr_cE)
	ori	$a1, $zero, 128
	st.w	$a1, $a0, %pc_lo12(_ZN2kc17view_gen_unpstr_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_user_predicatesE)
	ori	$a1, $zero, 129
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_user_predicatesE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_predicate_bindingsE)
	ori	$a1, $zero, 130
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_predicate_bindingsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc23view_checklanguagenamesE)
	ori	$a1, $zero, 131
	st.w	$a1, $a0, %pc_lo12(_ZN2kc23view_checklanguagenamesE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_output_collectionE)
	ori	$a1, $zero, 132
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_output_collectionE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_classdecls1_hE)
	ori	$a1, $zero, 133
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_gen_classdecls1_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc22view_gen_classdecls2_hE)
	ori	$a1, $zero, 134
	st.w	$a1, $a0, %pc_lo12(_ZN2kc22view_gen_classdecls2_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_classdefs_cE)
	ori	$a1, $zero, 135
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_classdefs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc24view_gen_subphylumdefs_cE)
	ori	$a1, $zero, 136
	st.w	$a1, $a0, %pc_lo12(_ZN2kc24view_gen_subphylumdefs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc13view_gen_castE)
	ori	$a1, $zero, 137
	st.w	$a1, $a0, %pc_lo12(_ZN2kc13view_gen_castE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc21view_gen_hashtables_hE)
	ori	$a1, $zero, 138
	st.w	$a1, $a0, %pc_lo12(_ZN2kc21view_gen_hashtables_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc21view_gen_hashtables_cE)
	ori	$a1, $zero, 139
	st.w	$a1, $a0, %pc_lo12(_ZN2kc21view_gen_hashtables_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_gen_yxx_union_hE)
	ori	$a1, $zero, 140
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_gen_yxx_union_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc21view_gen_member_dcl_hE)
	ori	$a1, $zero, 141
	st.w	$a1, $a0, %pc_lo12(_ZN2kc21view_gen_member_dcl_hE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc28view_gen_set_subphylumdefs_cE)
	ori	$a1, $zero, 142
	st.w	$a1, $a0, %pc_lo12(_ZN2kc28view_gen_set_subphylumdefs_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc19view_gen_viewvars_cE)
	ori	$a1, $zero, 143
	st.w	$a1, $a0, %pc_lo12(_ZN2kc19view_gen_viewvars_cE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc21view_gen_argseqnr_recE)
	ori	$a1, $zero, 144
	st.w	$a1, $a0, %pc_lo12(_ZN2kc21view_gen_argseqnr_recE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc18view_gen_opt_constE)
	ori	$a1, $zero, 145
	st.w	$a1, $a0, %pc_lo12(_ZN2kc18view_gen_opt_constE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc21view_uview_class_declE)
	ori	$a1, $zero, 146
	st.w	$a1, $a0, %pc_lo12(_ZN2kc21view_uview_class_declE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_uview_class_defE)
	ori	$a1, $zero, 147
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_uview_class_defE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc21view_rview_class_declE)
	ori	$a1, $zero, 148
	st.w	$a1, $a0, %pc_lo12(_ZN2kc21view_rview_class_declE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_rview_class_defE)
	ori	$a1, $zero, 149
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_rview_class_defE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc20view_collect_stringsE)
	ori	$a1, $zero, 150
	st.w	$a1, $a0, %pc_lo12(_ZN2kc20view_collect_stringsE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc16view_class_of_opE)
	ori	$a1, $zero, 151
	st.w	$a1, $a0, %pc_lo12(_ZN2kc16view_class_of_opE)
	pcalau12i	$a0, %pc_hi20(_ZN2kc17view_class_of_phyE)
	ori	$a1, $zero, 152
	st.w	$a1, $a0, %pc_lo12(_ZN2kc17view_class_of_phyE)
	pcalau12i	$a0, %pc_hi20(_ZL16outmostoperators)
	addi.d	$s0, $a0, %pc_lo12(_ZL16outmostoperators)
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc14impl_operatorsESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt5stackIPN2kc14impl_operatorsESt5dequeIS2_SaIS2_EEED2Ev)
	pcalau12i	$a1, %pc_hi20(__dso_handle)
	addi.d	$fp, $a1, %pc_lo12(__dso_handle)
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZL17dollarvarsallowed)
	addi.d	$s0, $a0, %pc_lo12(_ZL17dollarvarsallowed)
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc20impl_dollarvarstatusESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt5stackIPN2kc20impl_dollarvarstatusESt5dequeIS2_SaIS2_EEED2Ev)
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZL16inforeachcontext)
	addi.d	$s0, $a0, %pc_lo12(_ZL16inforeachcontext)
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt5stackIiSt5dequeIiSaIiEEED2Ev)
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZL14argumentsstack)
	addi.d	$s0, $a0, %pc_lo12(_ZL14argumentsstack)
	ori	$a2, $zero, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc14impl_argumentsESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt5stackIPN2kc14impl_argumentsESt5dequeIS2_SaIS2_EEED2Ev)
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZL11phylumstack)
	addi.d	$s1, $a0, %pc_lo12(_ZL11phylumstack)
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev)
	addi.d	$s0, $a0, %pc_lo12(_ZNSt5stackIPN2kc7impl_IDESt5dequeIS2_SaIS2_EEED2Ev)
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZL16phylumnamesstack)
	addi.d	$s1, $a0, %pc_lo12(_ZL16phylumnamesstack)
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc16impl_phylumnamesESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt5stackIPN2kc16impl_phylumnamesESt5dequeIS2_SaIS2_EEED2Ev)
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZL20withexpressionsstack)
	addi.d	$s1, $a0, %pc_lo12(_ZL20withexpressionsstack)
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc20impl_withexpressionsESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt5stackIPN2kc20impl_withexpressionsESt5dequeIS2_SaIS2_EEED2Ev)
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZL13operatorstack)
	addi.d	$s1, $a0, %pc_lo12(_ZL13operatorstack)
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZL14variablesstack)
	addi.d	$s1, $a0, %pc_lo12(_ZL14variablesstack)
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc14impl_variablesESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt5stackIPN2kc14impl_variablesESt5dequeIS2_SaIS2_EEED2Ev)
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(view_gen_unparsedefs_default_c)
	addi.d	$a0, $a0, %pc_lo12(view_gen_unparsedefs_default_c)
	ori	$a1, $zero, 126
	st.w	$a1, $a0, 0
	st.h	$zero, $a0, 4
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	addi.d	$a1, $a0, %pc_lo12(_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E)
	st.w	$zero, $a1, 8
	addi.d	$a0, $a1, 8
	st.d	$zero, $a1, 16
	st.d	$a0, $a1, 24
	st.d	$a0, $a1, 32
	st.d	$zero, $a1, 40
	pcalau12i	$a0, %pc_hi20(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev)
	addi.d	$a0, $a0, %pc_lo12(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN2kc9impl_pathESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev)
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_111selvarstackE)
	addi.d	$s1, $a0, %pc_lo12(_ZN12_GLOBAL__N_111selvarstackE)
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_114dollarvarstackE)
	addi.d	$s1, $a0, %pc_lo12(_ZN12_GLOBAL__N_114dollarvarstackE)
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(__cxa_atexit)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(_ZN12_GLOBAL__N_117dollarvarextstackE)
	addi.d	$s1, $a0, %pc_lo12(_ZN12_GLOBAL__N_117dollarvarextstackE)
	ori	$a2, $zero, 80
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIPN2kc7impl_IDESaIS2_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $fp
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(__cxa_atexit)
	jr	$t8
.Lfunc_end422:
	.size	_GLOBAL__sub_I_unpk.cc, .Lfunc_end422-_GLOBAL__sub_I_unpk.cc
	.cfi_endproc
                                        # -- End function
	.type	_ZN2kc10base_uviewE,@object     # @_ZN2kc10base_uviewE
	.bss
	.globl	_ZN2kc10base_uviewE
	.p2align	2, 0x0
_ZN2kc10base_uviewE:
	.space	4
	.size	_ZN2kc10base_uviewE, 4

	.type	_ZN2kc13view_filenameE,@object  # @_ZN2kc13view_filenameE
	.globl	_ZN2kc13view_filenameE
	.p2align	2, 0x0
_ZN2kc13view_filenameE:
	.space	4
	.size	_ZN2kc13view_filenameE, 4

	.type	_ZN2kc10view_errorE,@object     # @_ZN2kc10view_errorE
	.globl	_ZN2kc10view_errorE
	.p2align	2, 0x0
_ZN2kc10view_errorE:
	.space	4
	.size	_ZN2kc10view_errorE, 4

	.type	_ZN2kc14view_error_tIDE,@object # @_ZN2kc14view_error_tIDE
	.globl	_ZN2kc14view_error_tIDE
	.p2align	2, 0x0
_ZN2kc14view_error_tIDE:
	.space	4
	.size	_ZN2kc14view_error_tIDE, 4

	.type	_ZN2kc10view_checkE,@object     # @_ZN2kc10view_checkE
	.globl	_ZN2kc10view_checkE
	.p2align	2, 0x0
_ZN2kc10view_checkE:
	.space	4
	.size	_ZN2kc10view_checkE, 4

	.type	_ZN2kc16view_check_countE,@object # @_ZN2kc16view_check_countE
	.globl	_ZN2kc16view_check_countE
	.p2align	2, 0x0
_ZN2kc16view_check_countE:
	.space	4
	.size	_ZN2kc16view_check_countE, 4

	.type	_ZN2kc17view_check_count1E,@object # @_ZN2kc17view_check_count1E
	.globl	_ZN2kc17view_check_count1E
	.p2align	2, 0x0
_ZN2kc17view_check_count1E:
	.space	4
	.size	_ZN2kc17view_check_count1E, 4

	.type	_ZN2kc33view_check_outmostopers_in_phylumE,@object # @_ZN2kc33view_check_outmostopers_in_phylumE
	.globl	_ZN2kc33view_check_outmostopers_in_phylumE
	.p2align	2, 0x0
_ZN2kc33view_check_outmostopers_in_phylumE:
	.space	4
	.size	_ZN2kc33view_check_outmostopers_in_phylumE, 4

	.type	_ZN2kc13view_set_typeE,@object  # @_ZN2kc13view_set_typeE
	.globl	_ZN2kc13view_set_typeE
	.p2align	2, 0x0
_ZN2kc13view_set_typeE:
	.space	4
	.size	_ZN2kc13view_set_typeE, 4

	.type	_ZN2kc17view_check_is_varE,@object # @_ZN2kc17view_check_is_varE
	.globl	_ZN2kc17view_check_is_varE
	.p2align	2, 0x0
_ZN2kc17view_check_is_varE:
	.space	4
	.size	_ZN2kc17view_check_is_varE, 4

	.type	_ZN2kc26view_gen_initializephyla_cE,@object # @_ZN2kc26view_gen_initializephyla_cE
	.globl	_ZN2kc26view_gen_initializephyla_cE
	.p2align	2, 0x0
_ZN2kc26view_gen_initializephyla_cE:
	.space	4
	.size	_ZN2kc26view_gen_initializephyla_cE, 4

	.type	_ZN2kc12view_check_uE,@object   # @_ZN2kc12view_check_uE
	.globl	_ZN2kc12view_check_uE
	.p2align	2, 0x0
_ZN2kc12view_check_uE:
	.space	4
	.size	_ZN2kc12view_check_uE, 4

	.type	_ZN2kc12view_check_rE,@object   # @_ZN2kc12view_check_rE
	.globl	_ZN2kc12view_check_rE
	.p2align	2, 0x0
_ZN2kc12view_check_rE:
	.space	4
	.size	_ZN2kc12view_check_rE, 4

	.type	_ZN2kc20view_check_viewnamesE,@object # @_ZN2kc20view_check_viewnamesE
	.globl	_ZN2kc20view_check_viewnamesE
	.p2align	2, 0x0
_ZN2kc20view_check_viewnamesE:
	.space	4
	.size	_ZN2kc20view_check_viewnamesE, 4

	.type	_ZN2kc15view_check_uniqE,@object # @_ZN2kc15view_check_uniqE
	.globl	_ZN2kc15view_check_uniqE
	.p2align	2, 0x0
_ZN2kc15view_check_uniqE:
	.space	4
	.size	_ZN2kc15view_check_uniqE, 4

	.type	_ZN2kc16view_check_uniq1E,@object # @_ZN2kc16view_check_uniq1E
	.globl	_ZN2kc16view_check_uniq1E
	.p2align	2, 0x0
_ZN2kc16view_check_uniq1E:
	.space	4
	.size	_ZN2kc16view_check_uniq1E, 4

	.type	_ZN2kc16view_check_uniq2E,@object # @_ZN2kc16view_check_uniq2E
	.globl	_ZN2kc16view_check_uniq2E
	.p2align	2, 0x0
_ZN2kc16view_check_uniq2E:
	.space	4
	.size	_ZN2kc16view_check_uniq2E, 4

	.type	_ZN2kc21view_make_patternrepsE,@object # @_ZN2kc21view_make_patternrepsE
	.globl	_ZN2kc21view_make_patternrepsE
	.p2align	2, 0x0
_ZN2kc21view_make_patternrepsE:
	.space	4
	.size	_ZN2kc21view_make_patternrepsE, 4

	.type	_ZN2kc27view_printer_outputfilelineE,@object # @_ZN2kc27view_printer_outputfilelineE
	.globl	_ZN2kc27view_printer_outputfilelineE
	.p2align	2, 0x0
_ZN2kc27view_printer_outputfilelineE:
	.space	4
	.size	_ZN2kc27view_printer_outputfilelineE, 4

	.type	_ZN2kc18view_printer_resetE,@object # @_ZN2kc18view_printer_resetE
	.globl	_ZN2kc18view_printer_resetE
	.p2align	2, 0x0
_ZN2kc18view_printer_resetE:
	.space	4
	.size	_ZN2kc18view_printer_resetE, 4

	.type	_ZN2kc37view_no_of_printed_string_chars_resetE,@object # @_ZN2kc37view_no_of_printed_string_chars_resetE
	.globl	_ZN2kc37view_no_of_printed_string_chars_resetE
	.p2align	2, 0x0
_ZN2kc37view_no_of_printed_string_chars_resetE:
	.space	4
	.size	_ZN2kc37view_no_of_printed_string_chars_resetE, 4

	.type	_ZN2kc19view_open_namespaceE,@object # @_ZN2kc19view_open_namespaceE
	.globl	_ZN2kc19view_open_namespaceE
	.p2align	2, 0x0
_ZN2kc19view_open_namespaceE:
	.space	4
	.size	_ZN2kc19view_open_namespaceE, 4

	.type	_ZN2kc20view_close_namespaceE,@object # @_ZN2kc20view_close_namespaceE
	.globl	_ZN2kc20view_close_namespaceE
	.p2align	2, 0x0
_ZN2kc20view_close_namespaceE:
	.space	4
	.size	_ZN2kc20view_close_namespaceE, 4

	.type	_ZN2kc12view_gen_k_hE,@object   # @_ZN2kc12view_gen_k_hE
	.globl	_ZN2kc12view_gen_k_hE
	.p2align	2, 0x0
_ZN2kc12view_gen_k_hE:
	.space	4
	.size	_ZN2kc12view_gen_k_hE, 4

	.type	_ZN2kc16view_gen_end_k_hE,@object # @_ZN2kc16view_gen_end_k_hE
	.globl	_ZN2kc16view_gen_end_k_hE
	.p2align	2, 0x0
_ZN2kc16view_gen_end_k_hE:
	.space	4
	.size	_ZN2kc16view_gen_end_k_hE, 4

	.type	_ZN2kc12view_gen_k_cE,@object   # @_ZN2kc12view_gen_k_cE
	.globl	_ZN2kc12view_gen_k_cE
	.p2align	2, 0x0
_ZN2kc12view_gen_k_cE:
	.space	4
	.size	_ZN2kc12view_gen_k_cE, 4

	.type	_ZN2kc16view_gen_alloc_hE,@object # @_ZN2kc16view_gen_alloc_hE
	.globl	_ZN2kc16view_gen_alloc_hE
	.p2align	2, 0x0
_ZN2kc16view_gen_alloc_hE:
	.space	4
	.size	_ZN2kc16view_gen_alloc_hE, 4

	.type	_ZN2kc16view_gen_alloc_cE,@object # @_ZN2kc16view_gen_alloc_cE
	.globl	_ZN2kc16view_gen_alloc_cE
	.p2align	2, 0x0
_ZN2kc16view_gen_alloc_cE:
	.space	4
	.size	_ZN2kc16view_gen_alloc_cE, 4

	.type	_ZN2kc19view_gen_deprecatedE,@object # @_ZN2kc19view_gen_deprecatedE
	.globl	_ZN2kc19view_gen_deprecatedE
	.p2align	2, 0x0
_ZN2kc19view_gen_deprecatedE:
	.space	4
	.size	_ZN2kc19view_gen_deprecatedE, 4

	.type	_ZN2kc20view_gen_enumphyla_hE,@object # @_ZN2kc20view_gen_enumphyla_hE
	.globl	_ZN2kc20view_gen_enumphyla_hE
	.p2align	2, 0x0
_ZN2kc20view_gen_enumphyla_hE:
	.space	4
	.size	_ZN2kc20view_gen_enumphyla_hE, 4

	.type	_ZN2kc24view_gen_enumoperators_hE,@object # @_ZN2kc24view_gen_enumoperators_hE
	.globl	_ZN2kc24view_gen_enumoperators_hE
	.p2align	2, 0x0
_ZN2kc24view_gen_enumoperators_hE:
	.space	4
	.size	_ZN2kc24view_gen_enumoperators_hE, 4

	.type	_ZN2kc27view_gen_operatormap_type_hE,@object # @_ZN2kc27view_gen_operatormap_type_hE
	.globl	_ZN2kc27view_gen_operatormap_type_hE
	.p2align	2, 0x0
_ZN2kc27view_gen_operatormap_type_hE:
	.space	4
	.size	_ZN2kc27view_gen_operatormap_type_hE, 4

	.type	_ZN2kc20view_gen_phylummap_cE,@object # @_ZN2kc20view_gen_phylummap_cE
	.globl	_ZN2kc20view_gen_phylummap_cE
	.p2align	2, 0x0
_ZN2kc20view_gen_phylummap_cE:
	.space	4
	.size	_ZN2kc20view_gen_phylummap_cE, 4

	.type	_ZN2kc22view_gen_operatormap_cE,@object # @_ZN2kc22view_gen_operatormap_cE
	.globl	_ZN2kc22view_gen_operatormap_cE
	.p2align	2, 0x0
_ZN2kc22view_gen_operatormap_cE:
	.space	4
	.size	_ZN2kc22view_gen_operatormap_cE, 4

	.type	_ZN2kc15view_count_argsE,@object # @_ZN2kc15view_count_argsE
	.globl	_ZN2kc15view_count_argsE
	.p2align	2, 0x0
_ZN2kc15view_count_argsE:
	.space	4
	.size	_ZN2kc15view_count_argsE, 4

	.type	_ZN2kc16view_count_attrsE,@object # @_ZN2kc16view_count_attrsE
	.globl	_ZN2kc16view_count_attrsE
	.p2align	2, 0x0
_ZN2kc16view_count_attrsE:
	.space	4
	.size	_ZN2kc16view_count_attrsE, 4

	.type	_ZN2kc27view_count_nonstaticmembersE,@object # @_ZN2kc27view_count_nonstaticmembersE
	.globl	_ZN2kc27view_count_nonstaticmembersE
	.p2align	2, 0x0
_ZN2kc27view_count_nonstaticmembersE:
	.space	4
	.size	_ZN2kc27view_count_nonstaticmembersE, 4

	.type	_ZN2kc29view_gen_operatormap_subphylaE,@object # @_ZN2kc29view_gen_operatormap_subphylaE
	.globl	_ZN2kc29view_gen_operatormap_subphylaE
	.p2align	2, 0x0
_ZN2kc29view_gen_operatormap_subphylaE:
	.space	4
	.size	_ZN2kc29view_gen_operatormap_subphylaE, 4

	.type	_ZN2kc31view_gen_operatormap_attributesE,@object # @_ZN2kc31view_gen_operatormap_attributesE
	.globl	_ZN2kc31view_gen_operatormap_attributesE
	.p2align	2, 0x0
_ZN2kc31view_gen_operatormap_attributesE:
	.space	4
	.size	_ZN2kc31view_gen_operatormap_attributesE, 4

	.type	_ZN2kc18view_gen_uniqmap_cE,@object # @_ZN2kc18view_gen_uniqmap_cE
	.globl	_ZN2kc18view_gen_uniqmap_cE
	.p2align	2, 0x0
_ZN2kc18view_gen_uniqmap_cE:
	.space	4
	.size	_ZN2kc18view_gen_uniqmap_cE, 4

	.type	_ZN2kc20view_gen_uniqmap_c_1E,@object # @_ZN2kc20view_gen_uniqmap_c_1E
	.globl	_ZN2kc20view_gen_uniqmap_c_1E
	.p2align	2, 0x0
_ZN2kc20view_gen_uniqmap_c_1E:
	.space	4
	.size	_ZN2kc20view_gen_uniqmap_c_1E, 4

	.type	_ZN2kc20view_gen_uniqmap_c_2E,@object # @_ZN2kc20view_gen_uniqmap_c_2E
	.globl	_ZN2kc20view_gen_uniqmap_c_2E
	.p2align	2, 0x0
_ZN2kc20view_gen_uniqmap_c_2E:
	.space	4
	.size	_ZN2kc20view_gen_uniqmap_c_2E, 4

	.type	_ZN2kc23view_gen_nodetypedefs_hE,@object # @_ZN2kc23view_gen_nodetypedefs_hE
	.globl	_ZN2kc23view_gen_nodetypedefs_hE
	.p2align	2, 0x0
_ZN2kc23view_gen_nodetypedefs_hE:
	.space	4
	.size	_ZN2kc23view_gen_nodetypedefs_hE, 4

	.type	_ZN2kc20view_gen_nodetypes_hE,@object # @_ZN2kc20view_gen_nodetypes_hE
	.globl	_ZN2kc20view_gen_nodetypes_hE
	.p2align	2, 0x0
_ZN2kc20view_gen_nodetypes_hE:
	.space	4
	.size	_ZN2kc20view_gen_nodetypes_hE, 4

	.type	_ZN2kc24view_gen_yaccstacktype_hE,@object # @_ZN2kc24view_gen_yaccstacktype_hE
	.globl	_ZN2kc24view_gen_yaccstacktype_hE
	.p2align	2, 0x0
_ZN2kc24view_gen_yaccstacktype_hE:
	.space	4
	.size	_ZN2kc24view_gen_yaccstacktype_hE, 4

	.type	_ZN2kc24view_gen_noofoperators_hE,@object # @_ZN2kc24view_gen_noofoperators_hE
	.globl	_ZN2kc24view_gen_noofoperators_hE
	.p2align	2, 0x0
_ZN2kc24view_gen_noofoperators_hE:
	.space	4
	.size	_ZN2kc24view_gen_noofoperators_hE, 4

	.type	_ZN2kc23view_gen_assertmacros_hE,@object # @_ZN2kc23view_gen_assertmacros_hE
	.globl	_ZN2kc23view_gen_assertmacros_hE
	.p2align	2, 0x0
_ZN2kc23view_gen_assertmacros_hE:
	.space	4
	.size	_ZN2kc23view_gen_assertmacros_hE, 4

	.type	_ZN2kc23view_gen_assertmacros_cE,@object # @_ZN2kc23view_gen_assertmacros_cE
	.globl	_ZN2kc23view_gen_assertmacros_cE
	.p2align	2, 0x0
_ZN2kc23view_gen_assertmacros_cE:
	.space	4
	.size	_ZN2kc23view_gen_assertmacros_cE, 4

	.type	_ZN2kc24view_gen_operatordecls_hE,@object # @_ZN2kc24view_gen_operatordecls_hE
	.globl	_ZN2kc24view_gen_operatordecls_hE
	.p2align	2, 0x0
_ZN2kc24view_gen_operatordecls_hE:
	.space	4
	.size	_ZN2kc24view_gen_operatordecls_hE, 4

	.type	_ZN2kc23view_gen_operatorcast_hE,@object # @_ZN2kc23view_gen_operatorcast_hE
	.globl	_ZN2kc23view_gen_operatorcast_hE
	.p2align	2, 0x0
_ZN2kc23view_gen_operatorcast_hE:
	.space	4
	.size	_ZN2kc23view_gen_operatorcast_hE, 4

	.type	_ZN2kc23view_gen_operatordefs_cE,@object # @_ZN2kc23view_gen_operatordefs_cE
	.globl	_ZN2kc23view_gen_operatordefs_cE
	.p2align	2, 0x0
_ZN2kc23view_gen_operatordefs_cE:
	.space	4
	.size	_ZN2kc23view_gen_operatordefs_cE, 4

	.type	_ZN2kc25view_gen_operatordefs_c_0E,@object # @_ZN2kc25view_gen_operatordefs_c_0E
	.globl	_ZN2kc25view_gen_operatordefs_c_0E
	.p2align	2, 0x0
_ZN2kc25view_gen_operatordefs_c_0E:
	.space	4
	.size	_ZN2kc25view_gen_operatordefs_c_0E, 4

	.type	_ZN2kc25view_gen_operatordefs_c_1E,@object # @_ZN2kc25view_gen_operatordefs_c_1E
	.globl	_ZN2kc25view_gen_operatordefs_c_1E
	.p2align	2, 0x0
_ZN2kc25view_gen_operatordefs_c_1E:
	.space	4
	.size	_ZN2kc25view_gen_operatordefs_c_1E, 4

	.type	_ZN2kc25view_gen_operatordefs_c_2E,@object # @_ZN2kc25view_gen_operatordefs_c_2E
	.globl	_ZN2kc25view_gen_operatordefs_c_2E
	.p2align	2, 0x0
_ZN2kc25view_gen_operatordefs_c_2E:
	.space	4
	.size	_ZN2kc25view_gen_operatordefs_c_2E, 4

	.type	_ZN2kc36view_gen_initializephyla_whiletest_cE,@object # @_ZN2kc36view_gen_initializephyla_whiletest_cE
	.globl	_ZN2kc36view_gen_initializephyla_whiletest_cE
	.p2align	2, 0x0
_ZN2kc36view_gen_initializephyla_whiletest_cE:
	.space	4
	.size	_ZN2kc36view_gen_initializephyla_whiletest_cE, 4

	.type	_ZN2kc34view_gen_initializephyla_init_el_cE,@object # @_ZN2kc34view_gen_initializephyla_init_el_cE
	.globl	_ZN2kc34view_gen_initializephyla_init_el_cE
	.p2align	2, 0x0
_ZN2kc34view_gen_initializephyla_init_el_cE:
	.space	4
	.size	_ZN2kc34view_gen_initializephyla_init_el_cE, 4

	.type	_ZN2kc38view_gen_initializephyla_update_loop_cE,@object # @_ZN2kc38view_gen_initializephyla_update_loop_cE
	.globl	_ZN2kc38view_gen_initializephyla_update_loop_cE
	.p2align	2, 0x0
_ZN2kc38view_gen_initializephyla_update_loop_cE:
	.space	4
	.size	_ZN2kc38view_gen_initializephyla_update_loop_cE, 4

	.type	_ZN2kc31view_gen_operatordefs_nonhash_cE,@object # @_ZN2kc31view_gen_operatordefs_nonhash_cE
	.globl	_ZN2kc31view_gen_operatordefs_nonhash_cE
	.p2align	2, 0x0
_ZN2kc31view_gen_operatordefs_nonhash_cE:
	.space	4
	.size	_ZN2kc31view_gen_operatordefs_nonhash_cE, 4

	.type	_ZN2kc28view_gen_operatordefs_hash_cE,@object # @_ZN2kc28view_gen_operatordefs_hash_cE
	.globl	_ZN2kc28view_gen_operatordefs_hash_cE
	.p2align	2, 0x0
_ZN2kc28view_gen_operatordefs_hash_cE:
	.space	4
	.size	_ZN2kc28view_gen_operatordefs_hash_cE, 4

	.type	_ZN2kc25view_gen_access_functionsE,@object # @_ZN2kc25view_gen_access_functionsE
	.globl	_ZN2kc25view_gen_access_functionsE
	.p2align	2, 0x0
_ZN2kc25view_gen_access_functionsE:
	.space	4
	.size	_ZN2kc25view_gen_access_functionsE, 4

	.type	_ZN2kc24view_gen_create_functionE,@object # @_ZN2kc24view_gen_create_functionE
	.globl	_ZN2kc24view_gen_create_functionE
	.p2align	2, 0x0
_ZN2kc24view_gen_create_functionE:
	.space	4
	.size	_ZN2kc24view_gen_create_functionE, 4

	.type	_ZN2kc29view_gen_attributeOf_functionE,@object # @_ZN2kc29view_gen_attributeOf_functionE
	.globl	_ZN2kc29view_gen_attributeOf_functionE
	.p2align	2, 0x0
_ZN2kc29view_gen_attributeOf_functionE:
	.space	4
	.size	_ZN2kc29view_gen_attributeOf_functionE, 4

	.type	_ZN2kc17view_gen_argseqnrE,@object # @_ZN2kc17view_gen_argseqnrE
	.globl	_ZN2kc17view_gen_argseqnrE
	.p2align	2, 0x0
_ZN2kc17view_gen_argseqnrE:
	.space	4
	.size	_ZN2kc17view_gen_argseqnrE, 4

	.type	_ZN2kc22view_gen_fnarg_assertsE,@object # @_ZN2kc22view_gen_fnarg_assertsE
	.globl	_ZN2kc22view_gen_fnarg_assertsE
	.p2align	2, 0x0
_ZN2kc22view_gen_fnarg_assertsE:
	.space	4
	.size	_ZN2kc22view_gen_fnarg_assertsE, 4

	.type	_ZN2kc24view_gen_fnarg_and_declsE,@object # @_ZN2kc24view_gen_fnarg_and_declsE
	.globl	_ZN2kc24view_gen_fnarg_and_declsE
	.p2align	2, 0x0
_ZN2kc24view_gen_fnarg_and_declsE:
	.space	4
	.size	_ZN2kc24view_gen_fnarg_and_declsE, 4

	.type	_ZN2kc31view_gen_fnarg_and_decls_predefE,@object # @_ZN2kc31view_gen_fnarg_and_decls_predefE
	.globl	_ZN2kc31view_gen_fnarg_and_decls_predefE
	.p2align	2, 0x0
_ZN2kc31view_gen_fnarg_and_decls_predefE:
	.space	4
	.size	_ZN2kc31view_gen_fnarg_and_decls_predefE, 4

	.type	_ZN2kc20view_gen_assignmentsE,@object # @_ZN2kc20view_gen_assignmentsE
	.globl	_ZN2kc20view_gen_assignmentsE
	.p2align	2, 0x0
_ZN2kc20view_gen_assignmentsE:
	.space	4
	.size	_ZN2kc20view_gen_assignmentsE, 4

	.type	_ZN2kc24view_gen_assignment_inisE,@object # @_ZN2kc24view_gen_assignment_inisE
	.globl	_ZN2kc24view_gen_assignment_inisE
	.p2align	2, 0x0
_ZN2kc24view_gen_assignment_inisE:
	.space	4
	.size	_ZN2kc24view_gen_assignment_inisE, 4

	.type	_ZN2kc29view_gen_user_assignment_inisE,@object # @_ZN2kc29view_gen_user_assignment_inisE
	.globl	_ZN2kc29view_gen_user_assignment_inisE
	.p2align	2, 0x0
_ZN2kc29view_gen_user_assignment_inisE:
	.space	4
	.size	_ZN2kc29view_gen_user_assignment_inisE, 4

	.type	_ZN2kc27view_gen_assignments_predefE,@object # @_ZN2kc27view_gen_assignments_predefE
	.globl	_ZN2kc27view_gen_assignments_predefE
	.p2align	2, 0x0
_ZN2kc27view_gen_assignments_predefE:
	.space	4
	.size	_ZN2kc27view_gen_assignments_predefE, 4

	.type	_ZN2kc31view_gen_assignments_predef_iniE,@object # @_ZN2kc31view_gen_assignments_predef_iniE
	.globl	_ZN2kc31view_gen_assignments_predef_iniE
	.p2align	2, 0x0
_ZN2kc31view_gen_assignments_predef_iniE:
	.space	4
	.size	_ZN2kc31view_gen_assignments_predef_iniE, 4

	.type	_ZN2kc13view_gen_testE,@object  # @_ZN2kc13view_gen_testE
	.globl	_ZN2kc13view_gen_testE
	.p2align	2, 0x0
_ZN2kc13view_gen_testE:
	.space	4
	.size	_ZN2kc13view_gen_testE, 4

	.type	_ZN2kc22view_gen_error_decls_hE,@object # @_ZN2kc22view_gen_error_decls_hE
	.globl	_ZN2kc22view_gen_error_decls_hE
	.p2align	2, 0x0
_ZN2kc22view_gen_error_decls_hE:
	.space	4
	.size	_ZN2kc22view_gen_error_decls_hE, 4

	.type	_ZN2kc21view_gen_error_defs_cE,@object # @_ZN2kc21view_gen_error_defs_cE
	.globl	_ZN2kc21view_gen_error_defs_cE
	.p2align	2, 0x0
_ZN2kc21view_gen_error_defs_cE:
	.space	4
	.size	_ZN2kc21view_gen_error_defs_cE, 4

	.type	_ZN2kc24view_gen_printdotdecls_hE,@object # @_ZN2kc24view_gen_printdotdecls_hE
	.globl	_ZN2kc24view_gen_printdotdecls_hE
	.p2align	2, 0x0
_ZN2kc24view_gen_printdotdecls_hE:
	.space	4
	.size	_ZN2kc24view_gen_printdotdecls_hE, 4

	.type	_ZN2kc23view_gen_printdotdefs_cE,@object # @_ZN2kc23view_gen_printdotdefs_cE
	.globl	_ZN2kc23view_gen_printdotdefs_cE
	.p2align	2, 0x0
_ZN2kc23view_gen_printdotdefs_cE:
	.space	4
	.size	_ZN2kc23view_gen_printdotdefs_cE, 4

	.type	_ZN2kc24view_gen_printdotedges_cE,@object # @_ZN2kc24view_gen_printdotedges_cE
	.globl	_ZN2kc24view_gen_printdotedges_cE
	.p2align	2, 0x0
_ZN2kc24view_gen_printdotedges_cE:
	.space	4
	.size	_ZN2kc24view_gen_printdotedges_cE, 4

	.type	_ZN2kc20view_gen_listdecls_hE,@object # @_ZN2kc20view_gen_listdecls_hE
	.globl	_ZN2kc20view_gen_listdecls_hE
	.p2align	2, 0x0
_ZN2kc20view_gen_listdecls_hE:
	.space	4
	.size	_ZN2kc20view_gen_listdecls_hE, 4

	.type	_ZN2kc19view_gen_listdefs_cE,@object # @_ZN2kc19view_gen_listdefs_cE
	.globl	_ZN2kc19view_gen_listdefs_cE
	.p2align	2, 0x0
_ZN2kc19view_gen_listdefs_cE:
	.space	4
	.size	_ZN2kc19view_gen_listdefs_cE, 4

	.type	_ZN2kc17view_gen_includesE,@object # @_ZN2kc17view_gen_includesE
	.globl	_ZN2kc17view_gen_includesE
	.p2align	2, 0x0
_ZN2kc17view_gen_includesE:
	.space	4
	.size	_ZN2kc17view_gen_includesE, 4

	.type	_ZN2kc20view_do_gen_includesE,@object # @_ZN2kc20view_do_gen_includesE
	.globl	_ZN2kc20view_do_gen_includesE
	.p2align	2, 0x0
_ZN2kc20view_do_gen_includesE:
	.space	4
	.size	_ZN2kc20view_do_gen_includesE, 4

	.type	_ZN2kc22view_gen_csgio_start_hE,@object # @_ZN2kc22view_gen_csgio_start_hE
	.globl	_ZN2kc22view_gen_csgio_start_hE
	.p2align	2, 0x0
_ZN2kc22view_gen_csgio_start_hE:
	.space	4
	.size	_ZN2kc22view_gen_csgio_start_hE, 4

	.type	_ZN2kc20view_gen_csgio_end_hE,@object # @_ZN2kc20view_gen_csgio_end_hE
	.globl	_ZN2kc20view_gen_csgio_end_hE
	.p2align	2, 0x0
_ZN2kc20view_gen_csgio_end_hE:
	.space	4
	.size	_ZN2kc20view_gen_csgio_end_hE, 4

	.type	_ZN2kc16view_gen_csgio_hE,@object # @_ZN2kc16view_gen_csgio_hE
	.globl	_ZN2kc16view_gen_csgio_hE
	.p2align	2, 0x0
_ZN2kc16view_gen_csgio_hE:
	.space	4
	.size	_ZN2kc16view_gen_csgio_hE, 4

	.type	_ZN2kc22view_gen_csgio_start_cE,@object # @_ZN2kc22view_gen_csgio_start_cE
	.globl	_ZN2kc22view_gen_csgio_start_cE
	.p2align	2, 0x0
_ZN2kc22view_gen_csgio_start_cE:
	.space	4
	.size	_ZN2kc22view_gen_csgio_start_cE, 4

	.type	_ZN2kc16view_gen_csgio_cE,@object # @_ZN2kc16view_gen_csgio_cE
	.globl	_ZN2kc16view_gen_csgio_cE
	.p2align	2, 0x0
_ZN2kc16view_gen_csgio_cE:
	.space	4
	.size	_ZN2kc16view_gen_csgio_cE, 4

	.type	_ZN2kc26view_gen_copy_attributes_cE,@object # @_ZN2kc26view_gen_copy_attributes_cE
	.globl	_ZN2kc26view_gen_copy_attributes_cE
	.p2align	2, 0x0
_ZN2kc26view_gen_copy_attributes_cE:
	.space	4
	.size	_ZN2kc26view_gen_copy_attributes_cE, 4

	.type	_ZN2kc19view_gen_copydefs_cE,@object # @_ZN2kc19view_gen_copydefs_cE
	.globl	_ZN2kc19view_gen_copydefs_cE
	.p2align	2, 0x0
_ZN2kc19view_gen_copydefs_cE:
	.space	4
	.size	_ZN2kc19view_gen_copydefs_cE, 4

	.type	_ZN2kc19view_gen_rewritek_hE,@object # @_ZN2kc19view_gen_rewritek_hE
	.globl	_ZN2kc19view_gen_rewritek_hE
	.p2align	2, 0x0
_ZN2kc19view_gen_rewritek_hE:
	.space	4
	.size	_ZN2kc19view_gen_rewritek_hE, 4

	.type	_ZN2kc23view_gen_end_rewritek_hE,@object # @_ZN2kc23view_gen_end_rewritek_hE
	.globl	_ZN2kc23view_gen_end_rewritek_hE
	.p2align	2, 0x0
_ZN2kc23view_gen_end_rewritek_hE:
	.space	4
	.size	_ZN2kc23view_gen_end_rewritek_hE, 4

	.type	_ZN2kc19view_gen_rewritek_cE,@object # @_ZN2kc19view_gen_rewritek_cE
	.globl	_ZN2kc19view_gen_rewritek_cE
	.p2align	2, 0x0
_ZN2kc19view_gen_rewritek_cE:
	.space	4
	.size	_ZN2kc19view_gen_rewritek_cE, 4

	.type	_ZN2kc22view_gen_rewritedefs_cE,@object # @_ZN2kc22view_gen_rewritedefs_cE
	.globl	_ZN2kc22view_gen_rewritedefs_cE
	.p2align	2, 0x0
_ZN2kc22view_gen_rewritedefs_cE:
	.space	4
	.size	_ZN2kc22view_gen_rewritedefs_cE, 4

	.type	_ZN2kc30view_gen_rewritedefs_default_cE,@object # @_ZN2kc30view_gen_rewritedefs_default_cE
	.globl	_ZN2kc30view_gen_rewritedefs_default_cE
	.p2align	2, 0x0
_ZN2kc30view_gen_rewritedefs_default_cE:
	.space	4
	.size	_ZN2kc30view_gen_rewritedefs_default_cE, 4

	.type	_ZN2kc28view_gen_rewritedefs_other_cE,@object # @_ZN2kc28view_gen_rewritedefs_other_cE
	.globl	_ZN2kc28view_gen_rewritedefs_other_cE
	.p2align	2, 0x0
_ZN2kc28view_gen_rewritedefs_other_cE:
	.space	4
	.size	_ZN2kc28view_gen_rewritedefs_other_cE, 4

	.type	_ZN2kc33view_gen_rewritedefs_rewritearg_cE,@object # @_ZN2kc33view_gen_rewritedefs_rewritearg_cE
	.globl	_ZN2kc33view_gen_rewritedefs_rewritearg_cE
	.p2align	2, 0x0
_ZN2kc33view_gen_rewritedefs_rewritearg_cE:
	.space	4
	.size	_ZN2kc33view_gen_rewritedefs_rewritearg_cE, 4

	.type	_ZN2kc29view_gen_rewritedefs_nl_arg_cE,@object # @_ZN2kc29view_gen_rewritedefs_nl_arg_cE
	.globl	_ZN2kc29view_gen_rewritedefs_nl_arg_cE
	.p2align	2, 0x0
_ZN2kc29view_gen_rewritedefs_nl_arg_cE:
	.space	4
	.size	_ZN2kc29view_gen_rewritedefs_nl_arg_cE, 4

	.type	_ZN2kc30view_gen_rewritedefs_testarg_cE,@object # @_ZN2kc30view_gen_rewritedefs_testarg_cE
	.globl	_ZN2kc30view_gen_rewritedefs_testarg_cE
	.p2align	2, 0x0
_ZN2kc30view_gen_rewritedefs_testarg_cE:
	.space	4
	.size	_ZN2kc30view_gen_rewritedefs_testarg_cE, 4

	.type	_ZN2kc32view_gen_rewritedefs_dotestarg_cE,@object # @_ZN2kc32view_gen_rewritedefs_dotestarg_cE
	.globl	_ZN2kc32view_gen_rewritedefs_dotestarg_cE
	.p2align	2, 0x0
_ZN2kc32view_gen_rewritedefs_dotestarg_cE:
	.space	4
	.size	_ZN2kc32view_gen_rewritedefs_dotestarg_cE, 4

	.type	_ZN2kc27view_gen_rewritedefs_args_cE,@object # @_ZN2kc27view_gen_rewritedefs_args_cE
	.globl	_ZN2kc27view_gen_rewritedefs_args_cE
	.p2align	2, 0x0
_ZN2kc27view_gen_rewritedefs_args_cE:
	.space	4
	.size	_ZN2kc27view_gen_rewritedefs_args_cE, 4

	.type	_ZN2kc27view_gen_rewritedefs_body_cE,@object # @_ZN2kc27view_gen_rewritedefs_body_cE
	.globl	_ZN2kc27view_gen_rewritedefs_body_cE
	.p2align	2, 0x0
_ZN2kc27view_gen_rewritedefs_body_cE:
	.space	4
	.size	_ZN2kc27view_gen_rewritedefs_body_cE, 4

	.type	_ZN2kc30view_gen_withcases_and_defaultE,@object # @_ZN2kc30view_gen_withcases_and_defaultE
	.globl	_ZN2kc30view_gen_withcases_and_defaultE
	.p2align	2, 0x0
_ZN2kc30view_gen_withcases_and_defaultE:
	.space	4
	.size	_ZN2kc30view_gen_withcases_and_defaultE, 4

	.type	_ZN2kc18view_rw_predicatesE,@object # @_ZN2kc18view_rw_predicatesE
	.globl	_ZN2kc18view_rw_predicatesE
	.p2align	2, 0x0
_ZN2kc18view_rw_predicatesE:
	.space	4
	.size	_ZN2kc18view_rw_predicatesE, 4

	.type	_ZN2kc18view_wc_predicatesE,@object # @_ZN2kc18view_wc_predicatesE
	.globl	_ZN2kc18view_wc_predicatesE
	.p2align	2, 0x0
_ZN2kc18view_wc_predicatesE:
	.space	4
	.size	_ZN2kc18view_wc_predicatesE, 4

	.type	_ZN2kc19view_unp_predicatesE,@object # @_ZN2kc19view_unp_predicatesE
	.globl	_ZN2kc19view_unp_predicatesE
	.p2align	2, 0x0
_ZN2kc19view_unp_predicatesE:
	.space	4
	.size	_ZN2kc19view_unp_predicatesE, 4

	.type	_ZN2kc16view_wc_bindingsE,@object # @_ZN2kc16view_wc_bindingsE
	.globl	_ZN2kc16view_wc_bindingsE
	.p2align	2, 0x0
_ZN2kc16view_wc_bindingsE:
	.space	4
	.size	_ZN2kc16view_wc_bindingsE, 4

	.type	_ZN2kc17view_unp_bindingsE,@object # @_ZN2kc17view_unp_bindingsE
	.globl	_ZN2kc17view_unp_bindingsE
	.p2align	2, 0x0
_ZN2kc17view_unp_bindingsE:
	.space	4
	.size	_ZN2kc17view_unp_bindingsE, 4

	.type	_ZN2kc16view_rw_bindingsE,@object # @_ZN2kc16view_rw_bindingsE
	.globl	_ZN2kc16view_rw_bindingsE
	.p2align	2, 0x0
_ZN2kc16view_rw_bindingsE:
	.space	4
	.size	_ZN2kc16view_rw_bindingsE, 4

	.type	_ZN2kc14view_gen_fnk_hE,@object # @_ZN2kc14view_gen_fnk_hE
	.globl	_ZN2kc14view_gen_fnk_hE
	.p2align	2, 0x0
_ZN2kc14view_gen_fnk_hE:
	.space	4
	.size	_ZN2kc14view_gen_fnk_hE, 4

	.type	_ZN2kc19view_gen_fnkdecls_cE,@object # @_ZN2kc19view_gen_fnkdecls_cE
	.globl	_ZN2kc19view_gen_fnkdecls_cE
	.p2align	2, 0x0
_ZN2kc19view_gen_fnkdecls_cE:
	.space	4
	.size	_ZN2kc19view_gen_fnkdecls_cE, 4

	.type	_ZN2kc14view_gen_fnk_cE,@object # @_ZN2kc14view_gen_fnk_cE
	.globl	_ZN2kc14view_gen_fnk_cE
	.p2align	2, 0x0
_ZN2kc14view_gen_fnk_cE:
	.space	4
	.size	_ZN2kc14view_gen_fnk_cE, 4

	.type	_ZN2kc24view_gen_fn_pointer_nameE,@object # @_ZN2kc24view_gen_fn_pointer_nameE
	.globl	_ZN2kc24view_gen_fn_pointer_nameE
	.p2align	2, 0x0
_ZN2kc24view_gen_fn_pointer_nameE:
	.space	4
	.size	_ZN2kc24view_gen_fn_pointer_nameE, 4

	.type	_ZN2kc16view_gen_fnkargsE,@object # @_ZN2kc16view_gen_fnkargsE
	.globl	_ZN2kc16view_gen_fnkargsE
	.p2align	2, 0x0
_ZN2kc16view_gen_fnkargsE:
	.space	4
	.size	_ZN2kc16view_gen_fnkargsE, 4

	.type	_ZN2kc17view_gen_fnkdeclsE,@object # @_ZN2kc17view_gen_fnkdeclsE
	.globl	_ZN2kc17view_gen_fnkdeclsE
	.p2align	2, 0x0
_ZN2kc17view_gen_fnkdeclsE:
	.space	4
	.size	_ZN2kc17view_gen_fnkdeclsE, 4

	.type	_ZN2kc20view_gen_fns_start_hE,@object # @_ZN2kc20view_gen_fns_start_hE
	.globl	_ZN2kc20view_gen_fns_start_hE
	.p2align	2, 0x0
_ZN2kc20view_gen_fns_start_hE:
	.space	4
	.size	_ZN2kc20view_gen_fns_start_hE, 4

	.type	_ZN2kc18view_gen_fns_end_hE,@object # @_ZN2kc18view_gen_fns_end_hE
	.globl	_ZN2kc18view_gen_fns_end_hE
	.p2align	2, 0x0
_ZN2kc18view_gen_fns_end_hE:
	.space	4
	.size	_ZN2kc18view_gen_fns_end_hE, 4

	.type	_ZN2kc20view_gen_fns_start_cE,@object # @_ZN2kc20view_gen_fns_start_cE
	.globl	_ZN2kc20view_gen_fns_start_cE
	.p2align	2, 0x0
_ZN2kc20view_gen_fns_start_cE:
	.space	4
	.size	_ZN2kc20view_gen_fns_start_cE, 4

	.type	_ZN2kc25view_gen_fns_owninclude_cE,@object # @_ZN2kc25view_gen_fns_owninclude_cE
	.globl	_ZN2kc25view_gen_fns_owninclude_cE
	.p2align	2, 0x0
_ZN2kc25view_gen_fns_owninclude_cE:
	.space	4
	.size	_ZN2kc25view_gen_fns_owninclude_cE, 4

	.type	_ZN2kc15view_gen_unpk_hE,@object # @_ZN2kc15view_gen_unpk_hE
	.globl	_ZN2kc15view_gen_unpk_hE
	.p2align	2, 0x0
_ZN2kc15view_gen_unpk_hE:
	.space	4
	.size	_ZN2kc15view_gen_unpk_hE, 4

	.type	_ZN2kc23view_gen_unparsedecls_hE,@object # @_ZN2kc23view_gen_unparsedecls_hE
	.globl	_ZN2kc23view_gen_unparsedecls_hE
	.p2align	2, 0x0
_ZN2kc23view_gen_unparsedecls_hE:
	.space	4
	.size	_ZN2kc23view_gen_unparsedecls_hE, 4

	.type	_ZN2kc23view_gen_rewritedecls_hE,@object # @_ZN2kc23view_gen_rewritedecls_hE
	.globl	_ZN2kc23view_gen_rewritedecls_hE
	.p2align	2, 0x0
_ZN2kc23view_gen_rewritedecls_hE:
	.space	4
	.size	_ZN2kc23view_gen_rewritedecls_hE, 4

	.type	_ZN2kc14view_uview_defE,@object # @_ZN2kc14view_uview_defE
	.globl	_ZN2kc14view_uview_defE
	.p2align	2, 0x0
_ZN2kc14view_uview_defE:
	.space	4
	.size	_ZN2kc14view_uview_defE, 4

	.type	_ZN2kc19view_gen_end_unpk_hE,@object # @_ZN2kc19view_gen_end_unpk_hE
	.globl	_ZN2kc19view_gen_end_unpk_hE
	.p2align	2, 0x0
_ZN2kc19view_gen_end_unpk_hE:
	.space	4
	.size	_ZN2kc19view_gen_end_unpk_hE, 4

	.type	_ZN2kc15view_gen_unpk_cE,@object # @_ZN2kc15view_gen_unpk_cE
	.globl	_ZN2kc15view_gen_unpk_cE
	.p2align	2, 0x0
_ZN2kc15view_gen_unpk_cE:
	.space	4
	.size	_ZN2kc15view_gen_unpk_cE, 4

	.type	_ZN2kc29view_gen_default_types_unpk_cE,@object # @_ZN2kc29view_gen_default_types_unpk_cE
	.globl	_ZN2kc29view_gen_default_types_unpk_cE
	.p2align	2, 0x0
_ZN2kc29view_gen_default_types_unpk_cE:
	.space	4
	.size	_ZN2kc29view_gen_default_types_unpk_cE, 4

	.type	_ZN2kc22view_gen_unparsedefs_cE,@object # @_ZN2kc22view_gen_unparsedefs_cE
	.globl	_ZN2kc22view_gen_unparsedefs_cE
	.p2align	2, 0x0
_ZN2kc22view_gen_unparsedefs_cE:
	.space	4
	.size	_ZN2kc22view_gen_unparsedefs_cE, 4

	.type	_ZN2kc28view_gen_unparsedefs_other_cE,@object # @_ZN2kc28view_gen_unparsedefs_other_cE
	.globl	_ZN2kc28view_gen_unparsedefs_other_cE
	.p2align	2, 0x0
_ZN2kc28view_gen_unparsedefs_other_cE:
	.space	4
	.size	_ZN2kc28view_gen_unparsedefs_other_cE, 4

	.type	_ZN2kc17view_gen_unpstr_cE,@object # @_ZN2kc17view_gen_unpstr_cE
	.globl	_ZN2kc17view_gen_unpstr_cE
	.p2align	2, 0x0
_ZN2kc17view_gen_unpstr_cE:
	.space	4
	.size	_ZN2kc17view_gen_unpstr_cE, 4

	.type	_ZN2kc24view_gen_user_predicatesE,@object # @_ZN2kc24view_gen_user_predicatesE
	.globl	_ZN2kc24view_gen_user_predicatesE
	.p2align	2, 0x0
_ZN2kc24view_gen_user_predicatesE:
	.space	4
	.size	_ZN2kc24view_gen_user_predicatesE, 4

	.type	_ZN2kc23view_predicate_bindingsE,@object # @_ZN2kc23view_predicate_bindingsE
	.globl	_ZN2kc23view_predicate_bindingsE
	.p2align	2, 0x0
_ZN2kc23view_predicate_bindingsE:
	.space	4
	.size	_ZN2kc23view_predicate_bindingsE, 4

	.type	_ZN2kc23view_checklanguagenamesE,@object # @_ZN2kc23view_checklanguagenamesE
	.globl	_ZN2kc23view_checklanguagenamesE
	.p2align	2, 0x0
_ZN2kc23view_checklanguagenamesE:
	.space	4
	.size	_ZN2kc23view_checklanguagenamesE, 4

	.type	_ZN2kc22view_output_collectionE,@object # @_ZN2kc22view_output_collectionE
	.globl	_ZN2kc22view_output_collectionE
	.p2align	2, 0x0
_ZN2kc22view_output_collectionE:
	.space	4
	.size	_ZN2kc22view_output_collectionE, 4

	.type	_ZN2kc22view_gen_classdecls1_hE,@object # @_ZN2kc22view_gen_classdecls1_hE
	.globl	_ZN2kc22view_gen_classdecls1_hE
	.p2align	2, 0x0
_ZN2kc22view_gen_classdecls1_hE:
	.space	4
	.size	_ZN2kc22view_gen_classdecls1_hE, 4

	.type	_ZN2kc22view_gen_classdecls2_hE,@object # @_ZN2kc22view_gen_classdecls2_hE
	.globl	_ZN2kc22view_gen_classdecls2_hE
	.p2align	2, 0x0
_ZN2kc22view_gen_classdecls2_hE:
	.space	4
	.size	_ZN2kc22view_gen_classdecls2_hE, 4

	.type	_ZN2kc20view_gen_classdefs_cE,@object # @_ZN2kc20view_gen_classdefs_cE
	.globl	_ZN2kc20view_gen_classdefs_cE
	.p2align	2, 0x0
_ZN2kc20view_gen_classdefs_cE:
	.space	4
	.size	_ZN2kc20view_gen_classdefs_cE, 4

	.type	_ZN2kc24view_gen_subphylumdefs_cE,@object # @_ZN2kc24view_gen_subphylumdefs_cE
	.globl	_ZN2kc24view_gen_subphylumdefs_cE
	.p2align	2, 0x0
_ZN2kc24view_gen_subphylumdefs_cE:
	.space	4
	.size	_ZN2kc24view_gen_subphylumdefs_cE, 4

	.type	_ZN2kc13view_gen_castE,@object  # @_ZN2kc13view_gen_castE
	.globl	_ZN2kc13view_gen_castE
	.p2align	2, 0x0
_ZN2kc13view_gen_castE:
	.space	4
	.size	_ZN2kc13view_gen_castE, 4

	.type	_ZN2kc21view_gen_hashtables_hE,@object # @_ZN2kc21view_gen_hashtables_hE
	.globl	_ZN2kc21view_gen_hashtables_hE
	.p2align	2, 0x0
_ZN2kc21view_gen_hashtables_hE:
	.space	4
	.size	_ZN2kc21view_gen_hashtables_hE, 4

	.type	_ZN2kc21view_gen_hashtables_cE,@object # @_ZN2kc21view_gen_hashtables_cE
	.globl	_ZN2kc21view_gen_hashtables_cE
	.p2align	2, 0x0
_ZN2kc21view_gen_hashtables_cE:
	.space	4
	.size	_ZN2kc21view_gen_hashtables_cE, 4

	.type	_ZN2kc20view_gen_yxx_union_hE,@object # @_ZN2kc20view_gen_yxx_union_hE
	.globl	_ZN2kc20view_gen_yxx_union_hE
	.p2align	2, 0x0
_ZN2kc20view_gen_yxx_union_hE:
	.space	4
	.size	_ZN2kc20view_gen_yxx_union_hE, 4

	.type	_ZN2kc21view_gen_member_dcl_hE,@object # @_ZN2kc21view_gen_member_dcl_hE
	.globl	_ZN2kc21view_gen_member_dcl_hE
	.p2align	2, 0x0
_ZN2kc21view_gen_member_dcl_hE:
	.space	4
	.size	_ZN2kc21view_gen_member_dcl_hE, 4

	.type	_ZN2kc28view_gen_set_subphylumdefs_cE,@object # @_ZN2kc28view_gen_set_subphylumdefs_cE
	.globl	_ZN2kc28view_gen_set_subphylumdefs_cE
	.p2align	2, 0x0
_ZN2kc28view_gen_set_subphylumdefs_cE:
	.space	4
	.size	_ZN2kc28view_gen_set_subphylumdefs_cE, 4

	.type	_ZN2kc19view_gen_viewvars_cE,@object # @_ZN2kc19view_gen_viewvars_cE
	.globl	_ZN2kc19view_gen_viewvars_cE
	.p2align	2, 0x0
_ZN2kc19view_gen_viewvars_cE:
	.space	4
	.size	_ZN2kc19view_gen_viewvars_cE, 4

	.type	_ZN2kc21view_gen_argseqnr_recE,@object # @_ZN2kc21view_gen_argseqnr_recE
	.globl	_ZN2kc21view_gen_argseqnr_recE
	.p2align	2, 0x0
_ZN2kc21view_gen_argseqnr_recE:
	.space	4
	.size	_ZN2kc21view_gen_argseqnr_recE, 4

	.type	_ZN2kc18view_gen_opt_constE,@object # @_ZN2kc18view_gen_opt_constE
	.globl	_ZN2kc18view_gen_opt_constE
	.p2align	2, 0x0
_ZN2kc18view_gen_opt_constE:
	.space	4
	.size	_ZN2kc18view_gen_opt_constE, 4

	.type	_ZN2kc21view_uview_class_declE,@object # @_ZN2kc21view_uview_class_declE
	.globl	_ZN2kc21view_uview_class_declE
	.p2align	2, 0x0
_ZN2kc21view_uview_class_declE:
	.space	4
	.size	_ZN2kc21view_uview_class_declE, 4

	.type	_ZN2kc20view_uview_class_defE,@object # @_ZN2kc20view_uview_class_defE
	.globl	_ZN2kc20view_uview_class_defE
	.p2align	2, 0x0
_ZN2kc20view_uview_class_defE:
	.space	4
	.size	_ZN2kc20view_uview_class_defE, 4

	.type	_ZN2kc21view_rview_class_declE,@object # @_ZN2kc21view_rview_class_declE
	.globl	_ZN2kc21view_rview_class_declE
	.p2align	2, 0x0
_ZN2kc21view_rview_class_declE:
	.space	4
	.size	_ZN2kc21view_rview_class_declE, 4

	.type	_ZN2kc20view_rview_class_defE,@object # @_ZN2kc20view_rview_class_defE
	.globl	_ZN2kc20view_rview_class_defE
	.p2align	2, 0x0
_ZN2kc20view_rview_class_defE:
	.space	4
	.size	_ZN2kc20view_rview_class_defE, 4

	.type	_ZN2kc20view_collect_stringsE,@object # @_ZN2kc20view_collect_stringsE
	.globl	_ZN2kc20view_collect_stringsE
	.p2align	2, 0x0
_ZN2kc20view_collect_stringsE:
	.space	4
	.size	_ZN2kc20view_collect_stringsE, 4

	.type	_ZN2kc16view_class_of_opE,@object # @_ZN2kc16view_class_of_opE
	.globl	_ZN2kc16view_class_of_opE
	.p2align	2, 0x0
_ZN2kc16view_class_of_opE:
	.space	4
	.size	_ZN2kc16view_class_of_opE, 4

	.type	_ZN2kc17view_class_of_phyE,@object # @_ZN2kc17view_class_of_phyE
	.globl	_ZN2kc17view_class_of_phyE
	.p2align	2, 0x0
_ZN2kc17view_class_of_phyE:
	.space	4
	.size	_ZN2kc17view_class_of_phyE, 4

	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"base_uview"
	.size	.L.str, 11

	.type	.L.str.151,@object              # @.str.151
.L.str.151:
	.asciz	"view_error_format"
	.size	.L.str.151, 18

	.type	.L.str.152,@object              # @.str.152
.L.str.152:
	.asciz	"view_filename"
	.size	.L.str.152, 14

	.type	.L.str.153,@object              # @.str.153
.L.str.153:
	.asciz	"view_error"
	.size	.L.str.153, 11

	.type	.L.str.154,@object              # @.str.154
.L.str.154:
	.asciz	"view_error_tID"
	.size	.L.str.154, 15

	.type	.L.str.155,@object              # @.str.155
.L.str.155:
	.asciz	"view_check"
	.size	.L.str.155, 11

	.type	.L.str.156,@object              # @.str.156
.L.str.156:
	.asciz	"view_check_count"
	.size	.L.str.156, 17

	.type	.L.str.157,@object              # @.str.157
.L.str.157:
	.asciz	"view_check_count1"
	.size	.L.str.157, 18

	.type	.L.str.158,@object              # @.str.158
.L.str.158:
	.asciz	"view_check_outmostopers_in_phylum"
	.size	.L.str.158, 34

	.type	.L.str.159,@object              # @.str.159
.L.str.159:
	.asciz	"view_set_type"
	.size	.L.str.159, 14

	.type	.L.str.160,@object              # @.str.160
.L.str.160:
	.asciz	"view_check_is_var"
	.size	.L.str.160, 18

	.type	.L.str.161,@object              # @.str.161
.L.str.161:
	.asciz	"view_gen_initializephyla_c"
	.size	.L.str.161, 27

	.type	.L.str.162,@object              # @.str.162
.L.str.162:
	.asciz	"view_check_u"
	.size	.L.str.162, 13

	.type	.L.str.163,@object              # @.str.163
.L.str.163:
	.asciz	"view_check_r"
	.size	.L.str.163, 13

	.type	.L.str.164,@object              # @.str.164
.L.str.164:
	.asciz	"view_check_viewnames"
	.size	.L.str.164, 21

	.type	.L.str.165,@object              # @.str.165
.L.str.165:
	.asciz	"view_check_uniq"
	.size	.L.str.165, 16

	.type	.L.str.166,@object              # @.str.166
.L.str.166:
	.asciz	"view_check_uniq1"
	.size	.L.str.166, 17

	.type	.L.str.167,@object              # @.str.167
.L.str.167:
	.asciz	"view_check_uniq2"
	.size	.L.str.167, 17

	.type	.L.str.168,@object              # @.str.168
.L.str.168:
	.asciz	"view_make_patternreps"
	.size	.L.str.168, 22

	.type	.L.str.169,@object              # @.str.169
.L.str.169:
	.asciz	"view_printer_outputfileline"
	.size	.L.str.169, 28

	.type	.L.str.170,@object              # @.str.170
.L.str.170:
	.asciz	"view_printer_reset"
	.size	.L.str.170, 19

	.type	.L.str.171,@object              # @.str.171
.L.str.171:
	.asciz	"view_no_of_printed_string_chars_reset"
	.size	.L.str.171, 38

	.type	.L.str.172,@object              # @.str.172
.L.str.172:
	.asciz	"view_open_namespace"
	.size	.L.str.172, 20

	.type	.L.str.173,@object              # @.str.173
.L.str.173:
	.asciz	"view_close_namespace"
	.size	.L.str.173, 21

	.type	.L.str.174,@object              # @.str.174
.L.str.174:
	.asciz	"view_gen_k_h"
	.size	.L.str.174, 13

	.type	.L.str.175,@object              # @.str.175
.L.str.175:
	.asciz	"view_gen_end_k_h"
	.size	.L.str.175, 17

	.type	.L.str.176,@object              # @.str.176
.L.str.176:
	.asciz	"view_gen_k_c"
	.size	.L.str.176, 13

	.type	.L.str.177,@object              # @.str.177
.L.str.177:
	.asciz	"view_gen_alloc_h"
	.size	.L.str.177, 17

	.type	.L.str.178,@object              # @.str.178
.L.str.178:
	.asciz	"view_gen_alloc_c"
	.size	.L.str.178, 17

	.type	.L.str.179,@object              # @.str.179
.L.str.179:
	.asciz	"view_gen_deprecated"
	.size	.L.str.179, 20

	.type	.L.str.180,@object              # @.str.180
.L.str.180:
	.asciz	"view_gen_enumphyla_h"
	.size	.L.str.180, 21

	.type	.L.str.181,@object              # @.str.181
.L.str.181:
	.asciz	"view_gen_enumoperators_h"
	.size	.L.str.181, 25

	.type	.L.str.182,@object              # @.str.182
.L.str.182:
	.asciz	"view_gen_operatormap_type_h"
	.size	.L.str.182, 28

	.type	.L.str.183,@object              # @.str.183
.L.str.183:
	.asciz	"view_gen_phylummap_c"
	.size	.L.str.183, 21

	.type	.L.str.184,@object              # @.str.184
.L.str.184:
	.asciz	"view_gen_operatormap_c"
	.size	.L.str.184, 23

	.type	.L.str.185,@object              # @.str.185
.L.str.185:
	.asciz	"view_count_args"
	.size	.L.str.185, 16

	.type	.L.str.186,@object              # @.str.186
.L.str.186:
	.asciz	"view_count_attrs"
	.size	.L.str.186, 17

	.type	.L.str.187,@object              # @.str.187
.L.str.187:
	.asciz	"view_count_nonstaticmembers"
	.size	.L.str.187, 28

	.type	.L.str.188,@object              # @.str.188
.L.str.188:
	.asciz	"view_gen_operatormap_subphyla"
	.size	.L.str.188, 30

	.type	.L.str.189,@object              # @.str.189
.L.str.189:
	.asciz	"view_gen_operatormap_attributes"
	.size	.L.str.189, 32

	.type	.L.str.190,@object              # @.str.190
.L.str.190:
	.asciz	"view_gen_uniqmap_c"
	.size	.L.str.190, 19

	.type	.L.str.191,@object              # @.str.191
.L.str.191:
	.asciz	"view_gen_uniqmap_c_1"
	.size	.L.str.191, 21

	.type	.L.str.192,@object              # @.str.192
.L.str.192:
	.asciz	"view_gen_uniqmap_c_2"
	.size	.L.str.192, 21

	.type	.L.str.193,@object              # @.str.193
.L.str.193:
	.asciz	"view_gen_nodetypedefs_h"
	.size	.L.str.193, 24

	.type	.L.str.194,@object              # @.str.194
.L.str.194:
	.asciz	"view_gen_nodetypes_h"
	.size	.L.str.194, 21

	.type	.L.str.195,@object              # @.str.195
.L.str.195:
	.asciz	"view_gen_yaccstacktype_h"
	.size	.L.str.195, 25

	.type	.L.str.196,@object              # @.str.196
.L.str.196:
	.asciz	"view_gen_noofoperators_h"
	.size	.L.str.196, 25

	.type	.L.str.197,@object              # @.str.197
.L.str.197:
	.asciz	"view_gen_assertmacros_h"
	.size	.L.str.197, 24

	.type	.L.str.198,@object              # @.str.198
.L.str.198:
	.asciz	"view_gen_assertmacros_c"
	.size	.L.str.198, 24

	.type	.L.str.199,@object              # @.str.199
.L.str.199:
	.asciz	"view_gen_operatordecls_h"
	.size	.L.str.199, 25

	.type	.L.str.200,@object              # @.str.200
.L.str.200:
	.asciz	"view_gen_operatorcast_h"
	.size	.L.str.200, 24

	.type	.L.str.201,@object              # @.str.201
.L.str.201:
	.asciz	"view_gen_operatordefs_c"
	.size	.L.str.201, 24

	.type	.L.str.202,@object              # @.str.202
.L.str.202:
	.asciz	"view_gen_operatordefs_c_0"
	.size	.L.str.202, 26

	.type	.L.str.203,@object              # @.str.203
.L.str.203:
	.asciz	"view_gen_operatordefs_c_1"
	.size	.L.str.203, 26

	.type	.L.str.204,@object              # @.str.204
.L.str.204:
	.asciz	"view_gen_operatordefs_c_2"
	.size	.L.str.204, 26

	.type	.L.str.205,@object              # @.str.205
.L.str.205:
	.asciz	"view_gen_initializephyla_whiletest_c"
	.size	.L.str.205, 37

	.type	.L.str.206,@object              # @.str.206
.L.str.206:
	.asciz	"view_gen_initializephyla_init_el_c"
	.size	.L.str.206, 35

	.type	.L.str.207,@object              # @.str.207
.L.str.207:
	.asciz	"view_gen_initializephyla_update_loop_c"
	.size	.L.str.207, 39

	.type	.L.str.208,@object              # @.str.208
.L.str.208:
	.asciz	"view_gen_operatordefs_nonhash_c"
	.size	.L.str.208, 32

	.type	.L.str.209,@object              # @.str.209
.L.str.209:
	.asciz	"view_gen_operatordefs_hash_c"
	.size	.L.str.209, 29

	.type	.L.str.210,@object              # @.str.210
.L.str.210:
	.asciz	"view_gen_access_functions"
	.size	.L.str.210, 26

	.type	.L.str.211,@object              # @.str.211
.L.str.211:
	.asciz	"view_gen_create_function"
	.size	.L.str.211, 25

	.type	.L.str.212,@object              # @.str.212
.L.str.212:
	.asciz	"view_gen_attributeOf_function"
	.size	.L.str.212, 30

	.type	.L.str.213,@object              # @.str.213
.L.str.213:
	.asciz	"view_gen_argseqnr"
	.size	.L.str.213, 18

	.type	.L.str.214,@object              # @.str.214
.L.str.214:
	.asciz	"view_gen_fnarg_asserts"
	.size	.L.str.214, 23

	.type	.L.str.215,@object              # @.str.215
.L.str.215:
	.asciz	"view_gen_fnarg_and_decls"
	.size	.L.str.215, 25

	.type	.L.str.216,@object              # @.str.216
.L.str.216:
	.asciz	"view_gen_fnarg_and_decls_predef"
	.size	.L.str.216, 32

	.type	.L.str.217,@object              # @.str.217
.L.str.217:
	.asciz	"view_gen_assignments"
	.size	.L.str.217, 21

	.type	.L.str.218,@object              # @.str.218
.L.str.218:
	.asciz	"view_gen_assignment_inis"
	.size	.L.str.218, 25

	.type	.L.str.219,@object              # @.str.219
.L.str.219:
	.asciz	"view_gen_user_assignment_inis"
	.size	.L.str.219, 30

	.type	.L.str.220,@object              # @.str.220
.L.str.220:
	.asciz	"view_gen_assignments_predef"
	.size	.L.str.220, 28

	.type	.L.str.221,@object              # @.str.221
.L.str.221:
	.asciz	"view_gen_assignments_predef_ini"
	.size	.L.str.221, 32

	.type	.L.str.222,@object              # @.str.222
.L.str.222:
	.asciz	"view_gen_test"
	.size	.L.str.222, 14

	.type	.L.str.223,@object              # @.str.223
.L.str.223:
	.asciz	"view_gen_error_decls_h"
	.size	.L.str.223, 23

	.type	.L.str.224,@object              # @.str.224
.L.str.224:
	.asciz	"view_gen_error_defs_c"
	.size	.L.str.224, 22

	.type	.L.str.225,@object              # @.str.225
.L.str.225:
	.asciz	"view_gen_printdotdecls_h"
	.size	.L.str.225, 25

	.type	.L.str.226,@object              # @.str.226
.L.str.226:
	.asciz	"view_gen_printdotdefs_c"
	.size	.L.str.226, 24

	.type	.L.str.227,@object              # @.str.227
.L.str.227:
	.asciz	"view_gen_printdotedges_c"
	.size	.L.str.227, 25

	.type	.L.str.228,@object              # @.str.228
.L.str.228:
	.asciz	"view_gen_listdecls_h"
	.size	.L.str.228, 21

	.type	.L.str.229,@object              # @.str.229
.L.str.229:
	.asciz	"view_gen_listdefs_c"
	.size	.L.str.229, 20

	.type	.L.str.230,@object              # @.str.230
.L.str.230:
	.asciz	"view_gen_includes"
	.size	.L.str.230, 18

	.type	.L.str.231,@object              # @.str.231
.L.str.231:
	.asciz	"view_do_gen_includes"
	.size	.L.str.231, 21

	.type	.L.str.232,@object              # @.str.232
.L.str.232:
	.asciz	"view_gen_csgio_start_h"
	.size	.L.str.232, 23

	.type	.L.str.233,@object              # @.str.233
.L.str.233:
	.asciz	"view_gen_csgio_end_h"
	.size	.L.str.233, 21

	.type	.L.str.234,@object              # @.str.234
.L.str.234:
	.asciz	"view_gen_csgio_h"
	.size	.L.str.234, 17

	.type	.L.str.235,@object              # @.str.235
.L.str.235:
	.asciz	"view_gen_csgio_start_c"
	.size	.L.str.235, 23

	.type	.L.str.236,@object              # @.str.236
.L.str.236:
	.asciz	"view_gen_csgio_c"
	.size	.L.str.236, 17

	.type	.L.str.237,@object              # @.str.237
.L.str.237:
	.asciz	"view_gen_copy_attributes_c"
	.size	.L.str.237, 27

	.type	.L.str.238,@object              # @.str.238
.L.str.238:
	.asciz	"view_gen_copydefs_c"
	.size	.L.str.238, 20

	.type	.L.str.239,@object              # @.str.239
.L.str.239:
	.asciz	"view_gen_rewritek_h"
	.size	.L.str.239, 20

	.type	.L.str.240,@object              # @.str.240
.L.str.240:
	.asciz	"view_gen_end_rewritek_h"
	.size	.L.str.240, 24

	.type	.L.str.241,@object              # @.str.241
.L.str.241:
	.asciz	"view_gen_rewritek_c"
	.size	.L.str.241, 20

	.type	.L.str.242,@object              # @.str.242
.L.str.242:
	.asciz	"view_gen_rewritedefs_c"
	.size	.L.str.242, 23

	.type	.L.str.243,@object              # @.str.243
.L.str.243:
	.asciz	"view_gen_rewritedefs_default_c"
	.size	.L.str.243, 31

	.type	.L.str.244,@object              # @.str.244
.L.str.244:
	.asciz	"view_gen_rewritedefs_other_c"
	.size	.L.str.244, 29

	.type	.L.str.245,@object              # @.str.245
.L.str.245:
	.asciz	"view_gen_rewritedefs_rewritearg_c"
	.size	.L.str.245, 34

	.type	.L.str.246,@object              # @.str.246
.L.str.246:
	.asciz	"view_gen_rewritedefs_nl_arg_c"
	.size	.L.str.246, 30

	.type	.L.str.247,@object              # @.str.247
.L.str.247:
	.asciz	"view_gen_rewritedefs_testarg_c"
	.size	.L.str.247, 31

	.type	.L.str.248,@object              # @.str.248
.L.str.248:
	.asciz	"view_gen_rewritedefs_dotestarg_c"
	.size	.L.str.248, 33

	.type	.L.str.249,@object              # @.str.249
.L.str.249:
	.asciz	"view_gen_rewritedefs_args_c"
	.size	.L.str.249, 28

	.type	.L.str.250,@object              # @.str.250
.L.str.250:
	.asciz	"view_gen_rewritedefs_body_c"
	.size	.L.str.250, 28

	.type	.L.str.251,@object              # @.str.251
.L.str.251:
	.asciz	"view_gen_withcases_and_default"
	.size	.L.str.251, 31

	.type	.L.str.252,@object              # @.str.252
.L.str.252:
	.asciz	"view_rw_predicates"
	.size	.L.str.252, 19

	.type	.L.str.253,@object              # @.str.253
.L.str.253:
	.asciz	"view_wc_predicates"
	.size	.L.str.253, 19

	.type	.L.str.254,@object              # @.str.254
.L.str.254:
	.asciz	"view_unp_predicates"
	.size	.L.str.254, 20

	.type	.L.str.255,@object              # @.str.255
.L.str.255:
	.asciz	"view_wc_bindings"
	.size	.L.str.255, 17

	.type	.L.str.256,@object              # @.str.256
.L.str.256:
	.asciz	"view_unp_bindings"
	.size	.L.str.256, 18

	.type	.L.str.257,@object              # @.str.257
.L.str.257:
	.asciz	"view_rw_bindings"
	.size	.L.str.257, 17

	.type	.L.str.258,@object              # @.str.258
.L.str.258:
	.asciz	"view_gen_fnk_h"
	.size	.L.str.258, 15

	.type	.L.str.259,@object              # @.str.259
.L.str.259:
	.asciz	"view_gen_fnkdecls_c"
	.size	.L.str.259, 20

	.type	.L.str.260,@object              # @.str.260
.L.str.260:
	.asciz	"view_gen_fnk_c"
	.size	.L.str.260, 15

	.type	.L.str.261,@object              # @.str.261
.L.str.261:
	.asciz	"view_gen_fn_pointer_name"
	.size	.L.str.261, 25

	.type	.L.str.262,@object              # @.str.262
.L.str.262:
	.asciz	"view_gen_fnkargs"
	.size	.L.str.262, 17

	.type	.L.str.263,@object              # @.str.263
.L.str.263:
	.asciz	"view_gen_fnkdecls"
	.size	.L.str.263, 18

	.type	.L.str.264,@object              # @.str.264
.L.str.264:
	.asciz	"view_gen_fns_start_h"
	.size	.L.str.264, 21

	.type	.L.str.265,@object              # @.str.265
.L.str.265:
	.asciz	"view_gen_fns_end_h"
	.size	.L.str.265, 19

	.type	.L.str.266,@object              # @.str.266
.L.str.266:
	.asciz	"view_gen_fns_start_c"
	.size	.L.str.266, 21

	.type	.L.str.267,@object              # @.str.267
.L.str.267:
	.asciz	"view_gen_fns_owninclude_c"
	.size	.L.str.267, 26

	.type	.L.str.268,@object              # @.str.268
.L.str.268:
	.asciz	"view_gen_unpk_h"
	.size	.L.str.268, 16

	.type	.L.str.269,@object              # @.str.269
.L.str.269:
	.asciz	"view_gen_unparsedecls_h"
	.size	.L.str.269, 24

	.type	.L.str.270,@object              # @.str.270
.L.str.270:
	.asciz	"view_gen_rewritedecls_h"
	.size	.L.str.270, 24

	.type	.L.str.271,@object              # @.str.271
.L.str.271:
	.asciz	"view_uview_def"
	.size	.L.str.271, 15

	.type	.L.str.272,@object              # @.str.272
.L.str.272:
	.asciz	"view_gen_end_unpk_h"
	.size	.L.str.272, 20

	.type	.L.str.273,@object              # @.str.273
.L.str.273:
	.asciz	"view_gen_unpk_c"
	.size	.L.str.273, 16

	.type	.L.str.274,@object              # @.str.274
.L.str.274:
	.asciz	"view_gen_default_types_unpk_c"
	.size	.L.str.274, 30

	.type	.L.str.275,@object              # @.str.275
.L.str.275:
	.asciz	"view_gen_unparsedefs_c"
	.size	.L.str.275, 23

	.type	.L.str.276,@object              # @.str.276
.L.str.276:
	.asciz	"view_gen_unparsedefs_default_c"
	.size	.L.str.276, 31

	.type	.L.str.277,@object              # @.str.277
.L.str.277:
	.asciz	"view_gen_unparsedefs_other_c"
	.size	.L.str.277, 29

	.type	.L.str.278,@object              # @.str.278
.L.str.278:
	.asciz	"view_gen_unpstr_c"
	.size	.L.str.278, 18

	.type	.L.str.279,@object              # @.str.279
.L.str.279:
	.asciz	"view_gen_user_predicates"
	.size	.L.str.279, 25

	.type	.L.str.280,@object              # @.str.280
.L.str.280:
	.asciz	"view_predicate_bindings"
	.size	.L.str.280, 24

	.type	.L.str.281,@object              # @.str.281
.L.str.281:
	.asciz	"view_checklanguagenames"
	.size	.L.str.281, 24

	.type	.L.str.282,@object              # @.str.282
.L.str.282:
	.asciz	"view_output_collection"
	.size	.L.str.282, 23

	.type	.L.str.283,@object              # @.str.283
.L.str.283:
	.asciz	"view_gen_classdecls1_h"
	.size	.L.str.283, 23

	.type	.L.str.284,@object              # @.str.284
.L.str.284:
	.asciz	"view_gen_classdecls2_h"
	.size	.L.str.284, 23

	.type	.L.str.285,@object              # @.str.285
.L.str.285:
	.asciz	"view_gen_classdefs_c"
	.size	.L.str.285, 21

	.type	.L.str.286,@object              # @.str.286
.L.str.286:
	.asciz	"view_gen_subphylumdefs_c"
	.size	.L.str.286, 25

	.type	.L.str.287,@object              # @.str.287
.L.str.287:
	.asciz	"view_gen_cast"
	.size	.L.str.287, 14

	.type	.L.str.288,@object              # @.str.288
.L.str.288:
	.asciz	"view_gen_hashtables_h"
	.size	.L.str.288, 22

	.type	.L.str.289,@object              # @.str.289
.L.str.289:
	.asciz	"view_gen_hashtables_c"
	.size	.L.str.289, 22

	.type	.L.str.290,@object              # @.str.290
.L.str.290:
	.asciz	"view_gen_yxx_union_h"
	.size	.L.str.290, 21

	.type	.L.str.291,@object              # @.str.291
.L.str.291:
	.asciz	"view_gen_member_dcl_h"
	.size	.L.str.291, 22

	.type	.L.str.292,@object              # @.str.292
.L.str.292:
	.asciz	"view_gen_set_subphylumdefs_c"
	.size	.L.str.292, 29

	.type	.L.str.293,@object              # @.str.293
.L.str.293:
	.asciz	"view_gen_viewvars_c"
	.size	.L.str.293, 20

	.type	.L.str.294,@object              # @.str.294
.L.str.294:
	.asciz	"view_gen_argseqnr_rec"
	.size	.L.str.294, 22

	.type	.L.str.295,@object              # @.str.295
.L.str.295:
	.asciz	"view_gen_opt_const"
	.size	.L.str.295, 19

	.type	.L.str.296,@object              # @.str.296
.L.str.296:
	.asciz	"view_uview_class_decl"
	.size	.L.str.296, 22

	.type	.L.str.297,@object              # @.str.297
.L.str.297:
	.asciz	"view_uview_class_def"
	.size	.L.str.297, 21

	.type	.L.str.298,@object              # @.str.298
.L.str.298:
	.asciz	"view_rview_class_decl"
	.size	.L.str.298, 22

	.type	.L.str.299,@object              # @.str.299
.L.str.299:
	.asciz	"view_rview_class_def"
	.size	.L.str.299, 21

	.type	.L.str.300,@object              # @.str.300
.L.str.300:
	.asciz	"view_collect_strings"
	.size	.L.str.300, 21

	.type	.L.str.301,@object              # @.str.301
.L.str.301:
	.asciz	"view_class_of_op"
	.size	.L.str.301, 17

	.type	.L.str.302,@object              # @.str.302
.L.str.302:
	.asciz	"view_class_of_phy"
	.size	.L.str.302, 18

	.type	_ZN2kc6uviewsE,@object          # @_ZN2kc6uviewsE
	.data
	.globl	_ZN2kc6uviewsE
	.p2align	3, 0x0
_ZN2kc6uviewsE:
	.dword	.L.str
	.dword	_ZN2kc10base_uviewE
	.dword	.L.str.151
	.dword	0
	.dword	.L.str.152
	.dword	_ZN2kc13view_filenameE
	.dword	.L.str.153
	.dword	_ZN2kc10view_errorE
	.dword	.L.str.154
	.dword	_ZN2kc14view_error_tIDE
	.dword	.L.str.155
	.dword	_ZN2kc10view_checkE
	.dword	.L.str.156
	.dword	_ZN2kc16view_check_countE
	.dword	.L.str.157
	.dword	_ZN2kc17view_check_count1E
	.dword	.L.str.158
	.dword	_ZN2kc33view_check_outmostopers_in_phylumE
	.dword	.L.str.159
	.dword	_ZN2kc13view_set_typeE
	.dword	.L.str.160
	.dword	_ZN2kc17view_check_is_varE
	.dword	.L.str.161
	.dword	_ZN2kc26view_gen_initializephyla_cE
	.dword	.L.str.162
	.dword	_ZN2kc12view_check_uE
	.dword	.L.str.163
	.dword	_ZN2kc12view_check_rE
	.dword	.L.str.164
	.dword	_ZN2kc20view_check_viewnamesE
	.dword	.L.str.165
	.dword	_ZN2kc15view_check_uniqE
	.dword	.L.str.166
	.dword	_ZN2kc16view_check_uniq1E
	.dword	.L.str.167
	.dword	_ZN2kc16view_check_uniq2E
	.dword	.L.str.168
	.dword	_ZN2kc21view_make_patternrepsE
	.dword	.L.str.169
	.dword	_ZN2kc27view_printer_outputfilelineE
	.dword	.L.str.170
	.dword	_ZN2kc18view_printer_resetE
	.dword	.L.str.171
	.dword	_ZN2kc37view_no_of_printed_string_chars_resetE
	.dword	.L.str.172
	.dword	_ZN2kc19view_open_namespaceE
	.dword	.L.str.173
	.dword	_ZN2kc20view_close_namespaceE
	.dword	.L.str.174
	.dword	_ZN2kc12view_gen_k_hE
	.dword	.L.str.175
	.dword	_ZN2kc16view_gen_end_k_hE
	.dword	.L.str.176
	.dword	_ZN2kc12view_gen_k_cE
	.dword	.L.str.177
	.dword	_ZN2kc16view_gen_alloc_hE
	.dword	.L.str.178
	.dword	_ZN2kc16view_gen_alloc_cE
	.dword	.L.str.179
	.dword	_ZN2kc19view_gen_deprecatedE
	.dword	.L.str.180
	.dword	_ZN2kc20view_gen_enumphyla_hE
	.dword	.L.str.181
	.dword	_ZN2kc24view_gen_enumoperators_hE
	.dword	.L.str.182
	.dword	_ZN2kc27view_gen_operatormap_type_hE
	.dword	.L.str.183
	.dword	_ZN2kc20view_gen_phylummap_cE
	.dword	.L.str.184
	.dword	_ZN2kc22view_gen_operatormap_cE
	.dword	.L.str.185
	.dword	_ZN2kc15view_count_argsE
	.dword	.L.str.186
	.dword	_ZN2kc16view_count_attrsE
	.dword	.L.str.187
	.dword	_ZN2kc27view_count_nonstaticmembersE
	.dword	.L.str.188
	.dword	_ZN2kc29view_gen_operatormap_subphylaE
	.dword	.L.str.189
	.dword	_ZN2kc31view_gen_operatormap_attributesE
	.dword	.L.str.190
	.dword	_ZN2kc18view_gen_uniqmap_cE
	.dword	.L.str.191
	.dword	_ZN2kc20view_gen_uniqmap_c_1E
	.dword	.L.str.192
	.dword	_ZN2kc20view_gen_uniqmap_c_2E
	.dword	.L.str.193
	.dword	_ZN2kc23view_gen_nodetypedefs_hE
	.dword	.L.str.194
	.dword	_ZN2kc20view_gen_nodetypes_hE
	.dword	.L.str.195
	.dword	_ZN2kc24view_gen_yaccstacktype_hE
	.dword	.L.str.196
	.dword	_ZN2kc24view_gen_noofoperators_hE
	.dword	.L.str.197
	.dword	_ZN2kc23view_gen_assertmacros_hE
	.dword	.L.str.198
	.dword	_ZN2kc23view_gen_assertmacros_cE
	.dword	.L.str.199
	.dword	_ZN2kc24view_gen_operatordecls_hE
	.dword	.L.str.200
	.dword	_ZN2kc23view_gen_operatorcast_hE
	.dword	.L.str.201
	.dword	_ZN2kc23view_gen_operatordefs_cE
	.dword	.L.str.202
	.dword	_ZN2kc25view_gen_operatordefs_c_0E
	.dword	.L.str.203
	.dword	_ZN2kc25view_gen_operatordefs_c_1E
	.dword	.L.str.204
	.dword	_ZN2kc25view_gen_operatordefs_c_2E
	.dword	.L.str.205
	.dword	_ZN2kc36view_gen_initializephyla_whiletest_cE
	.dword	.L.str.206
	.dword	_ZN2kc34view_gen_initializephyla_init_el_cE
	.dword	.L.str.207
	.dword	_ZN2kc38view_gen_initializephyla_update_loop_cE
	.dword	.L.str.208
	.dword	_ZN2kc31view_gen_operatordefs_nonhash_cE
	.dword	.L.str.209
	.dword	_ZN2kc28view_gen_operatordefs_hash_cE
	.dword	.L.str.210
	.dword	_ZN2kc25view_gen_access_functionsE
	.dword	.L.str.211
	.dword	_ZN2kc24view_gen_create_functionE
	.dword	.L.str.212
	.dword	_ZN2kc29view_gen_attributeOf_functionE
	.dword	.L.str.213
	.dword	_ZN2kc17view_gen_argseqnrE
	.dword	.L.str.214
	.dword	_ZN2kc22view_gen_fnarg_assertsE
	.dword	.L.str.215
	.dword	_ZN2kc24view_gen_fnarg_and_declsE
	.dword	.L.str.216
	.dword	_ZN2kc31view_gen_fnarg_and_decls_predefE
	.dword	.L.str.217
	.dword	_ZN2kc20view_gen_assignmentsE
	.dword	.L.str.218
	.dword	_ZN2kc24view_gen_assignment_inisE
	.dword	.L.str.219
	.dword	_ZN2kc29view_gen_user_assignment_inisE
	.dword	.L.str.220
	.dword	_ZN2kc27view_gen_assignments_predefE
	.dword	.L.str.221
	.dword	_ZN2kc31view_gen_assignments_predef_iniE
	.dword	.L.str.222
	.dword	_ZN2kc13view_gen_testE
	.dword	.L.str.223
	.dword	_ZN2kc22view_gen_error_decls_hE
	.dword	.L.str.224
	.dword	_ZN2kc21view_gen_error_defs_cE
	.dword	.L.str.225
	.dword	_ZN2kc24view_gen_printdotdecls_hE
	.dword	.L.str.226
	.dword	_ZN2kc23view_gen_printdotdefs_cE
	.dword	.L.str.227
	.dword	_ZN2kc24view_gen_printdotedges_cE
	.dword	.L.str.228
	.dword	_ZN2kc20view_gen_listdecls_hE
	.dword	.L.str.229
	.dword	_ZN2kc19view_gen_listdefs_cE
	.dword	.L.str.230
	.dword	_ZN2kc17view_gen_includesE
	.dword	.L.str.231
	.dword	_ZN2kc20view_do_gen_includesE
	.dword	.L.str.232
	.dword	_ZN2kc22view_gen_csgio_start_hE
	.dword	.L.str.233
	.dword	_ZN2kc20view_gen_csgio_end_hE
	.dword	.L.str.234
	.dword	_ZN2kc16view_gen_csgio_hE
	.dword	.L.str.235
	.dword	_ZN2kc22view_gen_csgio_start_cE
	.dword	.L.str.236
	.dword	_ZN2kc16view_gen_csgio_cE
	.dword	.L.str.237
	.dword	_ZN2kc26view_gen_copy_attributes_cE
	.dword	.L.str.238
	.dword	_ZN2kc19view_gen_copydefs_cE
	.dword	.L.str.239
	.dword	_ZN2kc19view_gen_rewritek_hE
	.dword	.L.str.240
	.dword	_ZN2kc23view_gen_end_rewritek_hE
	.dword	.L.str.241
	.dword	_ZN2kc19view_gen_rewritek_cE
	.dword	.L.str.242
	.dword	_ZN2kc22view_gen_rewritedefs_cE
	.dword	.L.str.243
	.dword	_ZN2kc30view_gen_rewritedefs_default_cE
	.dword	.L.str.244
	.dword	_ZN2kc28view_gen_rewritedefs_other_cE
	.dword	.L.str.245
	.dword	_ZN2kc33view_gen_rewritedefs_rewritearg_cE
	.dword	.L.str.246
	.dword	_ZN2kc29view_gen_rewritedefs_nl_arg_cE
	.dword	.L.str.247
	.dword	_ZN2kc30view_gen_rewritedefs_testarg_cE
	.dword	.L.str.248
	.dword	_ZN2kc32view_gen_rewritedefs_dotestarg_cE
	.dword	.L.str.249
	.dword	_ZN2kc27view_gen_rewritedefs_args_cE
	.dword	.L.str.250
	.dword	_ZN2kc27view_gen_rewritedefs_body_cE
	.dword	.L.str.251
	.dword	_ZN2kc30view_gen_withcases_and_defaultE
	.dword	.L.str.252
	.dword	_ZN2kc18view_rw_predicatesE
	.dword	.L.str.253
	.dword	_ZN2kc18view_wc_predicatesE
	.dword	.L.str.254
	.dword	_ZN2kc19view_unp_predicatesE
	.dword	.L.str.255
	.dword	_ZN2kc16view_wc_bindingsE
	.dword	.L.str.256
	.dword	_ZN2kc17view_unp_bindingsE
	.dword	.L.str.257
	.dword	_ZN2kc16view_rw_bindingsE
	.dword	.L.str.258
	.dword	_ZN2kc14view_gen_fnk_hE
	.dword	.L.str.259
	.dword	_ZN2kc19view_gen_fnkdecls_cE
	.dword	.L.str.260
	.dword	_ZN2kc14view_gen_fnk_cE
	.dword	.L.str.261
	.dword	_ZN2kc24view_gen_fn_pointer_nameE
	.dword	.L.str.262
	.dword	_ZN2kc16view_gen_fnkargsE
	.dword	.L.str.263
	.dword	_ZN2kc17view_gen_fnkdeclsE
	.dword	.L.str.264
	.dword	_ZN2kc20view_gen_fns_start_hE
	.dword	.L.str.265
	.dword	_ZN2kc18view_gen_fns_end_hE
	.dword	.L.str.266
	.dword	_ZN2kc20view_gen_fns_start_cE
	.dword	.L.str.267
	.dword	_ZN2kc25view_gen_fns_owninclude_cE
	.dword	.L.str.268
	.dword	_ZN2kc15view_gen_unpk_hE
	.dword	.L.str.269
	.dword	_ZN2kc23view_gen_unparsedecls_hE
	.dword	.L.str.270
	.dword	_ZN2kc23view_gen_rewritedecls_hE
	.dword	.L.str.271
	.dword	_ZN2kc14view_uview_defE
	.dword	.L.str.272
	.dword	_ZN2kc19view_gen_end_unpk_hE
	.dword	.L.str.273
	.dword	_ZN2kc15view_gen_unpk_cE
	.dword	.L.str.274
	.dword	_ZN2kc29view_gen_default_types_unpk_cE
	.dword	.L.str.275
	.dword	_ZN2kc22view_gen_unparsedefs_cE
	.dword	.L.str.276
	.dword	0
	.dword	.L.str.277
	.dword	_ZN2kc28view_gen_unparsedefs_other_cE
	.dword	.L.str.278
	.dword	_ZN2kc17view_gen_unpstr_cE
	.dword	.L.str.279
	.dword	_ZN2kc24view_gen_user_predicatesE
	.dword	.L.str.280
	.dword	_ZN2kc23view_predicate_bindingsE
	.dword	.L.str.281
	.dword	_ZN2kc23view_checklanguagenamesE
	.dword	.L.str.282
	.dword	_ZN2kc22view_output_collectionE
	.dword	.L.str.283
	.dword	_ZN2kc22view_gen_classdecls1_hE
	.dword	.L.str.284
	.dword	_ZN2kc22view_gen_classdecls2_hE
	.dword	.L.str.285
	.dword	_ZN2kc20view_gen_classdefs_cE
	.dword	.L.str.286
	.dword	_ZN2kc24view_gen_subphylumdefs_cE
	.dword	.L.str.287
	.dword	_ZN2kc13view_gen_castE
	.dword	.L.str.288
	.dword	_ZN2kc21view_gen_hashtables_hE
	.dword	.L.str.289
	.dword	_ZN2kc21view_gen_hashtables_cE
	.dword	.L.str.290
	.dword	_ZN2kc20view_gen_yxx_union_hE
	.dword	.L.str.291
	.dword	_ZN2kc21view_gen_member_dcl_hE
	.dword	.L.str.292
	.dword	_ZN2kc28view_gen_set_subphylumdefs_cE
	.dword	.L.str.293
	.dword	_ZN2kc19view_gen_viewvars_cE
	.dword	.L.str.294
	.dword	_ZN2kc21view_gen_argseqnr_recE
	.dword	.L.str.295
	.dword	_ZN2kc18view_gen_opt_constE
	.dword	.L.str.296
	.dword	_ZN2kc21view_uview_class_declE
	.dword	.L.str.297
	.dword	_ZN2kc20view_uview_class_defE
	.dword	.L.str.298
	.dword	_ZN2kc21view_rview_class_declE
	.dword	.L.str.299
	.dword	_ZN2kc20view_rview_class_defE
	.dword	.L.str.300
	.dword	_ZN2kc20view_collect_stringsE
	.dword	.L.str.301
	.dword	_ZN2kc16view_class_of_opE
	.dword	.L.str.302
	.dword	_ZN2kc17view_class_of_phyE
	.space	16
	.size	_ZN2kc6uviewsE, 2464

	.type	_ZL16outmostoperators,@object   # @_ZL16outmostoperators
	.local	_ZL16outmostoperators
	.comm	_ZL16outmostoperators,80,8
	.hidden	__dso_handle
	.type	_ZL17dollarvarsallowed,@object  # @_ZL17dollarvarsallowed
	.local	_ZL17dollarvarsallowed
	.comm	_ZL17dollarvarsallowed,80,8
	.type	_ZL16inforeachcontext,@object   # @_ZL16inforeachcontext
	.local	_ZL16inforeachcontext
	.comm	_ZL16inforeachcontext,80,8
	.type	_ZL14argumentsstack,@object     # @_ZL14argumentsstack
	.local	_ZL14argumentsstack
	.comm	_ZL14argumentsstack,80,8
	.type	_ZL11phylumstack,@object        # @_ZL11phylumstack
	.local	_ZL11phylumstack
	.comm	_ZL11phylumstack,80,8
	.type	_ZL16phylumnamesstack,@object   # @_ZL16phylumnamesstack
	.local	_ZL16phylumnamesstack
	.comm	_ZL16phylumnamesstack,80,8
	.type	_ZL20withexpressionsstack,@object # @_ZL20withexpressionsstack
	.local	_ZL20withexpressionsstack
	.comm	_ZL20withexpressionsstack,80,8
	.type	_ZL13operatorstack,@object      # @_ZL13operatorstack
	.local	_ZL13operatorstack
	.comm	_ZL13operatorstack,80,8
	.type	_ZL14variablesstack,@object     # @_ZL14variablesstack
	.local	_ZL14variablesstack
	.comm	_ZL14variablesstack,80,8
	.type	.L.str.312,@object              # @.str.312
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.312:
	.space	1
	.size	.L.str.312, 1

	.type	.L.str.313,@object              # @.str.313
.L.str.313:
	.asciz	"kc_char_t const*"
	.size	.L.str.313, 17

	.type	.L.str.314,@object              # @.str.314
.L.str.314:
	.asciz	"name"
	.size	.L.str.314, 5

	.type	.L.str.315,@object              # @.str.315
.L.str.315:
	.asciz	"REAL"
	.size	.L.str.315, 5

	.type	.L.str.316,@object              # @.str.316
.L.str.316:
	.asciz	"value"
	.size	.L.str.316, 6

	.type	.L.str.317,@object              # @.str.317
.L.str.317:
	.asciz	"INTEGER"
	.size	.L.str.317, 8

	.type	.L.str.318,@object              # @.str.318
.L.str.318:
	.asciz	"void*"
	.size	.L.str.318, 6

	.type	.L.str.319,@object              # @.str.319
.L.str.319:
	.asciz	"pointer"
	.size	.L.str.319, 8

	.type	preDefTypeAndName,@object       # @preDefTypeAndName
	.data
	.globl	preDefTypeAndName
	.p2align	3, 0x0
preDefTypeAndName:
	.dword	.L.str.312
	.dword	.L.str.312
	.dword	.L.str.313
	.dword	.L.str.314
	.dword	.L.str.313
	.dword	.L.str.314
	.dword	.L.str.315
	.dword	.L.str.316
	.dword	.L.str.317
	.dword	.L.str.316
	.dword	.L.str.318
	.dword	.L.str.319
	.size	preDefTypeAndName, 96

	.type	view_gen_unparsedefs_default_c,@object # @view_gen_unparsedefs_default_c
	.bss
	.globl	view_gen_unparsedefs_default_c
	.p2align	2, 0x0
view_gen_unparsedefs_default_c:
	.space	8
	.size	view_gen_unparsedefs_default_c, 8

	.type	.L.str.321,@object              # @.str.321
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.321:
	.asciz	"\n"
	.size	.L.str.321, 2

	.type	.L.str.322,@object              # @.str.322
.L.str.322:
	.asciz	"#ifndef NO_COVARIANT_RETURN\n"
	.size	.L.str.322, 29

	.type	.L.str.323,@object              # @.str.323
.L.str.323:
	.asciz	"\n#else\n"
	.size	.L.str.323, 8

	.type	.L.str.324,@object              # @.str.324
.L.str.324:
	.asciz	"\n#endif // NO_COVARIANT_RETURN\n"
	.size	.L.str.324, 32

	.type	_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E,@object # @_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E
	.local	_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E
	.comm	_ZN12_GLOBAL__N_111gl_bindingsB5cxx11E,48,8
	.type	_ZN12_GLOBAL__N_111selvarstackE,@object # @_ZN12_GLOBAL__N_111selvarstackE
	.local	_ZN12_GLOBAL__N_111selvarstackE
	.comm	_ZN12_GLOBAL__N_111selvarstackE,80,8
	.type	_ZN12_GLOBAL__N_114dollarvarstackE,@object # @_ZN12_GLOBAL__N_114dollarvarstackE
	.local	_ZN12_GLOBAL__N_114dollarvarstackE
	.comm	_ZN12_GLOBAL__N_114dollarvarstackE,80,8
	.type	_ZN12_GLOBAL__N_117dollarvarextstackE,@object # @_ZN12_GLOBAL__N_117dollarvarextstackE
	.local	_ZN12_GLOBAL__N_117dollarvarextstackE
	.comm	_ZN12_GLOBAL__N_117dollarvarextstackE,80,8
	.type	.L.str.329,@object              # @.str.329
.L.str.329:
	.asciz	"/home/tangyan/code/auto-tests/loong-opt-cov-ts/test-suite/llvm-test-suite/MultiSource/Applications/kimwitu++/unpk.cc"
	.size	.L.str.329, 117

	.type	.L.str.330,@object              # @.str.330
.L.str.330:
	.asciz	"Unparse called for untyped pointer"
	.size	.L.str.330, 35

	.type	.L.str.331,@object              # @.str.331
.L.str.331:
	.asciz	"%d"
	.size	.L.str.331, 3

	.type	.L.str.332,@object              # @.str.332
.L.str.332:
	.asciz	"%g"
	.size	.L.str.332, 3

	.type	.L.str.333,@object              # @.str.333
.L.str.333:
	.asciz	"impl_"
	.size	.L.str.333, 6

	.type	.L.str.334,@object              # @.str.334
.L.str.334:
	.asciz	"_"
	.size	.L.str.334, 2

	.type	.L.str.335,@object              # @.str.335
.L.str.335:
	.asciz	"char* kc_language_"
	.size	.L.str.335, 19

	.type	.L.str.336,@object              # @.str.336
.L.str.336:
	.asciz	" [] = {\n"
	.size	.L.str.336, 9

	.type	.L.str.337,@object              # @.str.337
.L.str.337:
	.asciz	"abstract_"
	.size	.L.str.337, 10

	.type	.L.str.338,@object              # @.str.338
.L.str.338:
	.asciz	" "
	.size	.L.str.338, 2

	.type	.L.str.339,@object              # @.str.339
.L.str.339:
	.asciz	" (introduced at "
	.size	.L.str.339, 17

	.type	.L.str.340,@object              # @.str.340
.L.str.340:
	.asciz	":"
	.size	.L.str.340, 2

	.type	.L.str.341,@object              # @.str.341
.L.str.341:
	.asciz	")"
	.size	.L.str.341, 2

	.type	.L.str.342,@object              # @.str.342
.L.str.342:
	.asciz	"\ntypedef enum {\n"
	.size	.L.str.342, 17

	.type	.L.str.343,@object              # @.str.343
.L.str.343:
	.asciz	"last_rview\n} rview_enum;\n\nstruct impl_rviews {\n    const char *name;\n    rview_class *view;\n};\nextern struct impl_rviews rviews[];\nclass "
	.size	.L.str.343, 138

	.type	.L.str.344,@object              # @.str.344
.L.str.344:
	.asciz	"rview_class {\n\rprotected:\013\n    // only used in derivations\n    rview_class(rview_enum v): m_view(v) { }\n    rview_class(const rview_class&): m_view(base_rview_enum)\n\t\013{ /* do not copy"
	.size	.L.str.344, 184

	.type	.L.str.345,@object              # @.str.345
.L.str.345:
	.asciz	" m_view */ }\r\n\rpublic:\013\n    const char* name() const\n\t\013{ return rviews[m_view].name; }\r\n    operator rview_enum() const\n\t\013{ return m_view; }\r\n    bool operator==(const rview_cl"
	.size	.L.str.345, 177

	.type	.L.str.346,@object              # @.str.346
.L.str.346:
	.asciz	"ass& other) const\n\t\013{ return m_view == other.m_view; }\r\n"
	.size	.L.str.346, 57

	.type	.L.str.347,@object              # @.str.347
.L.str.347:
	.asciz	"    // Called when the rewrite_loop enters a node (just before the call\n    //   to do_rewrite and before entering its sons).\n    // The result of this function is used instead of current in the "
	.size	.L.str.347, 196

	.type	.L.str.348,@object              # @.str.348
.L.str.348:
	.asciz	"rewrite process.\n    // If skip_current is set to true (default is false), the result is not rewritten\n    //   any further (neither do_rewrite() nor post_rewrite() are called).\n    virtual ab"
	.size	.L.str.348, 193

	.type	.L.str.349,@object              # @.str.349
.L.str.349:
	.asciz	"stract_phylum pre_rewrite(abstract_phylum current, bool& /* skip_current */)\n\t\013{ return current; }\r\n    // Called when the rewrite_loop leaves current node (after the call to do_rewrite).\n  "
	.size	.L.str.349, 191

	.type	.L.str.350,@object              # @.str.350
.L.str.350:
	.asciz	"  // Current is the finally rewritten node.\n    // The result is used instead of the argument to build the final tree.\n    // If again is set to true (default is false) the result node is rewritt"
	.size	.L.str.350, 196

	.type	.L.str.351,@object              # @.str.351
.L.str.351:
	.asciz	"en again.\n    virtual abstract_phylum post_rewrite(abstract_phylum current, bool& /* again */)\n\t\013{ return current; }\r\n"
	.size	.L.str.351, 119

	.type	.L.str.352,@object              # @.str.352
.L.str.352:
	.asciz	"\rprivate:\013\n    rview_enum m_view;\n};\n"
	.size	.L.str.352, 38

	.type	.L.str.353,@object              # @.str.353
.L.str.353:
	.asciz	" last_uview\n} uview_enum;\n\nstruct impl_uviews {\n    const char *name;\n    uview_class *view;\n};\nextern impl_uviews uviews[];\nclass "
	.size	.L.str.353, 132

	.type	.L.str.354,@object              # @.str.354
.L.str.354:
	.asciz	"uview_class {\n\rprotected:\013\n    // only used in derivations\n    uview_class(uview_enum v): m_view(v) { }\n    uview_class(c_uview): m_view(base_uview_enum)\n\t\013{ /* do not copy m_view */ "
	.size	.L.str.354, 184

	.type	.L.str.355,@object              # @.str.355
.L.str.355:
	.asciz	"}\r\n\rpublic:\013\n    const char* name() const\n\t\013{ return uviews[m_view].name; }\r\n    operator uview_enum() const\n\t\013{ return m_view; }\r\n    bool operator==(const uview_class& other)"
	.size	.L.str.355, 177

	.type	.L.str.356,@object              # @.str.356
.L.str.356:
	.asciz	" const\n\t\013{ return m_view == other.m_view; }\r\n\rprivate:\013\n    uview_enum m_view;\n};\n\nclass "
	.size	.L.str.356, 90

	.type	.L.str.357,@object              # @.str.357
.L.str.357:
	.asciz	"printer_functor_class {\n\rpublic:\013\n    virtual void operator()(const kc_char_t*, uview) { }\n    virtual ~printer_functor_class() { }\n};\n\nclass "
	.size	.L.str.357, 143

	.type	.L.str.358,@object              # @.str.358
.L.str.358:
	.asciz	"printer_functor_function_wrapper : public printer_functor_class {\n\rpublic:\013\n    printer_functor_function_wrapper(const printer_function opf =0): m_old_printer(opf) { }\n    virtual ~printer_f"
	.size	.L.str.358, 191

	.type	.L.str.359,@object              # @.str.359
.L.str.359:
	.asciz	"unctor_function_wrapper() { }\n    virtual void operator()(const kc_char_t* s, uview v)\n\t\013{ if(m_old_printer) m_old_printer(s, v); }\r\n\rprivate:\013\n    printer_function m_old_printer;\n};"
	.size	.L.str.359, 183

	.type	.L.str.360,@object              # @.str.360
.L.str.360:
	.asciz	"union {\n"
	.size	.L.str.360, 9

	.type	.L.str.361,@object              # @.str.361
.L.str.361:
	.asciz	"};\n"
	.size	.L.str.361, 4

	.type	.L.str.362,@object              # @.str.362
.L.str.362:
	.asciz	"\nextern const char* kc_storageclassnames[];\n\n#ifdef KC_STATISTICS\nvoid do_print_operator_statistics(FILE * kc_f)\n{\n    unsigned int kc_i;\n    assertNonNull( kc_f );\n    fprintf("
	.size	.L.str.362, 178

	.type	.L.str.363,@object              # @.str.363
.L.str.363:
	.asciz	"kc_f, \"%-*s| %-*s| %-*s| %-*s| %-*s| %-*s| %-*s| %-*s| %-*s| %-*s\\n\", 38 , \"Operator\", 3, \"Sz\", 8, \"#oper\", 8, \"#new\", 8, \"#exist\", 8, \"#frnrec\", 8, \"#frrec\", 8, \"#freed\", 8, \"#rem\""
	.size	.L.str.363, 182

	.type	.L.str.364,@object              # @.str.364
.L.str.364:
	.asciz	", 9, \"total (bytes)\");\n    fprintf(kc_f, \"%-*s|%*s |%*d |%*d |%*d |%*d |%*d |%*d |%*d |%*d\\n\", 38, \"case sensitive strings\", 3, \"-\", 8, operator_statistics[sel__Str].created, 8, operator_st"
	.size	.L.str.364, 190

	.type	.L.str.365,@object              # @.str.365
.L.str.365:
	.asciz	"atistics[sel__Str].existing_not_found, 8, operator_statistics[sel__Str].created-operator_statistics[sel__Str].existing_not_found, 8, 0, 8, 0, 8, 0, 8, 0, 9, kc_casestring_strlen);\n    fprintf(kc_f, "
	.size	.L.str.365, 199

	.type	.L.str.366,@object              # @.str.366
.L.str.366:
	.asciz	"\"%-*s|%*s |%*d |%*d |%*d |%*d |%*d |%*d |%*d |%*d\\n\", 38, \"case insensitive strings\", 3, \"-\", 8, operator_statistics[sel_NoCaseStr].created, 8, operator_statistics[sel_NoCaseStr].existing_not_fo"
	.size	.L.str.366, 195

	.type	.L.str.367,@object              # @.str.367
.L.str.367:
	.asciz	"und, 8, operator_statistics[sel_NoCaseStr].created-operator_statistics[sel_NoCaseStr].existing_not_found, 8, 0, 8, 0, 8, 0, 8, 0, 9, kc_nocasestring_strlen);\n    for (kc_i = one_before_first_operato"
	.size	.L.str.367, 199

	.type	.L.str.368,@object              # @.str.368
.L.str.368:
	.asciz	"r+1; kc_i < last_operator; kc_i++) {\n\tfprintf(kc_f, \"%-*s|%*d |%*d |%*d |%*d |%*d |%*d |%*d |%*d |%*d\\n\", 38, operator_info[kc_i].name, 3, operator_info[kc_i].size, 8, operator_statistics[kc_i].c"
	.size	.L.str.368, 196

	.type	.L.str.369,@object              # @.str.369
.L.str.369:
	.asciz	"reated, 8, operator_statistics[kc_i].existing_not_found, 8, operator_statistics[kc_i].created-operator_statistics[kc_i].existing_not_found, 8, operator_statistics[kc_i].free_called[false], 8, operator_"
	.size	.L.str.369, 202

	.type	.L.str.370,@object              # @.str.370
.L.str.370:
	.asciz	"statistics[kc_i].free_called[true], 8, operator_statistics[kc_i].freed[false]+operator_statistics[kc_i].freed[true], 8, operator_statistics[kc_i].existing_not_found-(operator_statistics[kc_i].freed[fal"
	.size	.L.str.370, 202

	.type	.L.str.371,@object              # @.str.371
.L.str.371:
	.asciz	"se]+operator_statistics[kc_i].freed[true]), 9, operator_info[kc_i].size*(operator_statistics[kc_i].existing_not_found-(operator_statistics[kc_i].freed[false]+operator_statistics[kc_i].freed[true])));\n"
	.size	.L.str.371, 201

	.type	.L.str.372,@object              # @.str.372
.L.str.372:
	.asciz	"    }\n}\n#endif // KC_STATISTICS\n\n"
	.size	.L.str.372, 34

	.type	.L.str.373,@object              # @.str.373
.L.str.373:
	.asciz	"\nvoid\nht_static(kc_storageclass_t kc_a_storageclass_t)\n{\n    hashtables[kc_a_storageclass_t]->ht_static();\n}\n\nvoid\nht_dynamic(kc_storageclass_t kc_a_storageclass_t)\n{\n    "
	.size	.L.str.373, 172

	.type	.L.str.374,@object              # @.str.374
.L.str.374:
	.asciz	"hashtables[kc_a_storageclass_t]->ht_dynamic();\n}\n\nvoid\nht_inc_level(kc_storageclass_t kc_a_storageclass_t)\n{\n    hashtables[kc_a_storageclass_t]->ht_inc_level();\n}\n\nvoid\nh"
	.size	.L.str.374, 172

	.type	.L.str.375,@object              # @.str.375
.L.str.375:
	.asciz	"t_dec_level(kc_storageclass_t kc_a_storageclass_t)\n{\n    hashtables[kc_a_storageclass_t]->ht_dec_level();\n}\n\nvoid\nht_free_level(kc_storageclass_t kc_a_storageclass_t)\n{\n    hash"
	.size	.L.str.375, 178

	.type	.L.str.376,@object              # @.str.376
.L.str.376:
	.asciz	"tables[kc_a_storageclass_t]->ht_free_level();\n}\n\nhashtable_t\nht_create_simple()\n{\n    hashtable_t kc_ht=new hashtable_struct_t;\n    kc_ht->set_to_be_freed();\n    return kc_ht;\n"
	.size	.L.str.376, 177

	.type	.L.str.377,@object              # @.str.377
.L.str.377:
	.asciz	"}\n\nhashtable_t\nht_assign(hashtable_t kc_a_hashtable_t, kc_storageclass_t kc_a_storageclass_t, bool still_unique)\n{\n    hashtable_t kc_tmp = hashtables[kc_a_storageclass_t];\n    hashta"
	.size	.L.str.377, 184

	.type	.L.str.378,@object              # @.str.378
.L.str.378:
	.asciz	"bles[kc_a_storageclass_t] = kc_a_hashtable_t;\n    kc_storageclass_still_uniq[kc_a_storageclass_t] = still_unique;\n    return kc_tmp;\n}\n\nhashtable_t\nht_assigned(kc_storageclass_t kc_a_"
	.size	.L.str.378, 184

	.type	.L.str.379,@object              # @.str.379
.L.str.379:
	.asciz	"storageclass_t)\n{\n    return hashtables[kc_a_storageclass_t];\n}\n\nvoid\nht_clear(hashtable_t kc_a_hashtable_t)\n{\n    kc_a_hashtable_t->ht_clear();\n}\n\nvoid\nht_delete(ha"
	.size	.L.str.379, 166

	.type	.L.str.380,@object              # @.str.380
.L.str.380:
	.asciz	"shtable_t kc_a_hashtable_t)\n{\n    if(kc_a_hashtable_t->to_be_freed())\n\tdelete kc_a_hashtable_t;\n}\n"
	.size	.L.str.380, 99

	.type	.L.str.381,@object              # @.str.381
.L.str.381:
	.asciz	"\ntypedef struct {\n    int created;\n    int existing_not_found;\n    int free_called[2];\n    int freed[2];\n} KC_OPERATOR_STATISTICS;\n\n#ifdef KC_STATISTICS\n# define print_operat"
	.size	.L.str.381, 175

	.type	.L.str.382,@object              # @.str.382
.L.str.382:
	.asciz	"or_statistics(kc_f) do_print_operator_statistics(kc_f)\n  void\tdo_print_operator_statistics(FILE*);\n#else\n# define print_operator_statistics(kc_f)\n#endif\n\ntypedef class hashtable_struc"
	.size	.L.str.382, 184

	.type	.L.str.383,@object              # @.str.383
.L.str.383:
	.asciz	"t_t* hashtable_t;\n"
	.size	.L.str.383, 19

	.type	.L.str.384,@object              # @.str.384
.L.str.384:
	.asciz	"void\tht_static (kc_storageclass_t);\nvoid\tht_dynamic (kc_storageclass_t);\nvoid\tht_inc_level (kc_storageclass_t);\nvoid\tht_dec_level (kc_storageclass_t);\nvoid\tht_free_level (kc_storageclass_t)"
	.size	.L.str.384, 190

	.type	.L.str.385,@object              # @.str.385
.L.str.385:
	.asciz	";\nhashtable_t\tht_create_simple ();\nhashtable_t\tht_assign (hashtable_t, kc_storageclass_t, bool still_unique=false);\nhashtable_t\tht_assigned (kc_storageclass_t);\nvoid\tht_clear (hashtable_t);"
	.size	.L.str.385, 190

	.type	.L.str.386,@object              # @.str.386
.L.str.386:
	.asciz	"\nvoid\tht_delete (hashtable_t);\n"
	.size	.L.str.386, 32

	.type	.L.str.387,@object              # @.str.387
.L.str.387:
	.asciz	"\n//namespace Phylum {\r\n"
	.size	.L.str.387, 24

	.type	.L.str.388,@object              # @.str.388
.L.str.388:
	.asciz	"\nclass "
	.size	.L.str.388, 8

	.type	.L.str.389,@object              # @.str.389
.L.str.389:
	.asciz	"impl_abstract_phylum"
	.size	.L.str.389, 21

	.type	.L.str.390,@object              # @.str.390
.L.str.390:
	.asciz	"\b :\b "
	.size	.L.str.390, 6

	.type	.L.str.391,@object              # @.str.391
.L.str.391:
	.asciz	" {\n\rpublic:\013\n    virtual enum_operators prod_sel() const =0;\n    static const enum_phyla phylum_sel_;\n    enum_phyla phylum() const;\n    const char* phylum_name() const;\n    const c"
	.size	.L.str.391, 182

	.type	.L.str.392,@object              # @.str.392
.L.str.392:
	.asciz	"har* op_name() const;\n    virtual abstract_phylum subphylum(int) const;\n    virtual void set_subphylum(int, abstract_phylum);\n    void free(bool recursive=true);\n    bool eq(c_abstract_phyl"
	.size	.L.str.392, 190

	.type	.L.str.393,@object              # @.str.393
.L.str.393:
	.asciz	"um) const;\n    void print();\n    void fprint(FILE *);\n    abstract_phylum copy(bool kc_copy_attributes) const;\n"
	.size	.L.str.393, 112

	.type	.L.str.394,@object              # @.str.394
.L.str.394:
	.asciz	"\tvoid unparse(printer_functor pf, uview uv)\n\t    \013{ do_unparse(pf, uv); }\r\n        void unparse(printer_function opf, uview uv);\n"
	.size	.L.str.394, 130

	.type	.L.str.395,@object              # @.str.395
.L.str.395:
	.asciz	"\n\tvoid printdot_add_edge (c_abstract_phylum, int, int*, kc_dotedgenode_t*, const char*) const;\n\tvoid do_printdot_id (FILE*, bool, c_abstract_phylum, int) const;\n\tvoid do_printdot (FILE*, bool,"
	.size	.L.str.395, 193

	.type	.L.str.396,@object              # @.str.396
.L.str.396:
	.asciz	" int*, kc_dotedgenode_t*, const char*, bool, bool, c_abstract_phylum, int) const;\n\n\tvirtual void fprintdot(FILE *,\n\tconst char *root_label_prefix, const char *edge_label_prefix, const char *ed"
	.size	.L.str.396, 193

	.type	.L.str.397,@object              # @.str.397
.L.str.397:
	.asciz	"ge_attributes,\n\tbool print_node_labels, bool use_context_when_sharing_leaves, bool print_prologue_and_epilogue) const =0;\n"
	.size	.L.str.397, 123

	.type	.L.str.398,@object              # @.str.398
.L.str.398:
	.asciz	"\tvoid CSGIOwrite(FILE *) const;\n"
	.size	.L.str.398, 33

	.type	.L.str.399,@object              # @.str.399
.L.str.399:
	.asciz	"\tvirtual abstract_phylum rewrite(rview v) { return do_rewrite(v); }\n"
	.size	.L.str.399, 69

	.type	.L.str.400,@object              # @.str.400
.L.str.400:
	.asciz	"\tabstract_phylum rewrite(rview v) {\n\t    return rewrite_loop(v); }\n\tabstract_phylum rewrite_loop(rview v);\n"
	.size	.L.str.400, 108

	.type	.L.str.401,@object              # @.str.401
.L.str.401:
	.asciz	"\tvirtual abstract_phylum do_rewrite(rview) { return this;}\n\t// called if a subphylum of an op is rewritten and a new op is created by default rule\n\tvirtual void rewrite_members(abstract_phylum fr"
	.size	.L.str.401, 196

	.type	.L.str.402,@object              # @.str.402
.L.str.402:
	.asciz	"om) {} \n"
	.size	.L.str.402, 9

	.type	.L.str.403,@object              # @.str.403
.L.str.403:
	.asciz	"\tvirtual void post_create(){}\n"
	.size	.L.str.403, 31

	.type	.L.str.404,@object              # @.str.404
.L.str.404:
	.asciz	"\timpl_abstract_phylum()"
	.size	.L.str.404, 24

	.type	_ZN12_GLOBAL__N_113gl_no_of_argsE,@object # @_ZN12_GLOBAL__N_113gl_no_of_argsE
	.local	_ZN12_GLOBAL__N_113gl_no_of_argsE
	.comm	_ZN12_GLOBAL__N_113gl_no_of_argsE,4,4
	.type	.L.str.405,@object              # @.str.405
.L.str.405:
	.asciz	": "
	.size	.L.str.405, 3

	.type	_ZN12_GLOBAL__N_110gl_membersE,@object # @_ZN12_GLOBAL__N_110gl_membersE
	.local	_ZN12_GLOBAL__N_110gl_membersE
	.comm	_ZN12_GLOBAL__N_110gl_membersE,8,8
	.type	.L.str.406,@object              # @.str.406
.L.str.406:
	.asciz	"\013\n\t\t{ _ref=0; }\r\n\t    "
	.size	.L.str.406, 23

	.type	.L.str.407,@object              # @.str.407
.L.str.407:
	.asciz	"\tvirtual ~impl_abstract_phylum() {\n\t    if(_ref)\n\t\t_ref->reset_phylum();\n\t}\n"
	.size	.L.str.407, 77

	.type	.L.str.408,@object              # @.str.408
.L.str.408:
	.asciz	"\timpl_abstract_phylum(const impl_abstract_phylum&) {\n\t    _ref=0;\n\t}\n\tabstract_phylum_ref* get_ref() const {\n\t    return _ref;\n\t}\n\tabstract_phylum_ref* add_ref() {\n\t    if(!_ref)\n"
	.size	.L.str.408, 180

	.type	.L.str.409,@object              # @.str.409
.L.str.409:
	.asciz	"\t\t_ref=new_phylum_ref();\n\t    return _ref;\n\t}\n\tvoid set_ref(abstract_phylum_ref* r) {\n\t    _ref=r;\n\t}\n\tvirtual abstract_phylum_ref* new_phylum_ref()=0;\n\tabstract_phylum return_ptr("
	.size	.L.str.409, 181

	.type	.L.str.410,@object              # @.str.410
.L.str.410:
	.asciz	") { if(get_ref()) get_ref()->lock(); return this; }\n\rprivate:\013\n\tabstract_phylum_ref*_ref;\n"
	.size	.L.str.410, 91

	.type	.L.str.411,@object              # @.str.411
.L.str.411:
	.asciz	"explicit impl_abstract_phylum()\013\n: "
	.size	.L.str.411, 36

	.type	.L.str.412,@object              # @.str.412
.L.str.412:
	.asciz	" { }\r\n"
	.size	.L.str.412, 7

	.type	.L.str.413,@object              # @.str.413
.L.str.413:
	.asciz	"\tvirtual ~impl_abstract_phylum() { }\n"
	.size	.L.str.413, 38

	.type	.L.str.414,@object              # @.str.414
.L.str.414:
	.asciz	"\rprivate:\013\n\tvirtual void do_unparse(printer_functor, uview) =0;\n\rprotected:\013\n\tvirtual void default_unparse(printer_functor, uview);\n"
	.size	.L.str.414, 133

	.type	.L.str.415,@object              # @.str.415
.L.str.415:
	.asciz	"};\n\n"
	.size	.L.str.415, 5

	.type	.L.str.416,@object              # @.str.416
.L.str.416:
	.asciz	"template <>\nclass phylum_ptr<impl_abstract_phylum> {\n\rpublic:\013\n"
	.size	.L.str.416, 64

	.type	.L.str.417,@object              # @.str.417
.L.str.417:
	.asciz	"   phylum_ptr(bool weak=false) { _ref=0; _weak=weak; }\n    phylum_ptr(impl_abstract_phylum* t,bool weak=false) {\n\t_ref=0; _weak=weak;\n\tif(t) set_ref(t->add_ref());\n    }\n    phylum_ptr(c"
	.size	.L.str.417, 187

	.type	.L.str.418,@object              # @.str.418
.L.str.418:
	.asciz	"onst phylum_ptr<impl_abstract_phylum>& p, bool weak=false) {\n\t_ref=0; _weak=weak;\n\tset_ref(p.get_ref());\n    }\n"
	.size	.L.str.418, 112

	.type	.L.str.419,@object              # @.str.419
.L.str.419:
	.asciz	"   phylum_ptr() { _ref=0; }\n    phylum_ptr(impl_abstract_phylum* t) {\n\t_ref=0;\n\tif(t) set_ref(t->add_ref());\n    }\n    phylum_ptr(const phylum_ptr<impl_abstract_phylum>& p) {\n\t_ref=0;"
	.size	.L.str.419, 184

	.type	.L.str.420,@object              # @.str.420
.L.str.420:
	.asciz	"\n\tset_ref(p.get_ref());\n    }\n"
	.size	.L.str.420, 31

	.type	.L.str.421,@object              # @.str.421
.L.str.421:
	.asciz	"\n    ~phylum_ptr() { set_ref(0); }\n\n    template <typename T>\n    phylum_ptr<impl_abstract_phylum>& operator=(T* t) {\n\tif(t)\n\t    set_ref(t->add_ref());\n\telse\n\t    set_ref(0);\n"
	.size	.L.str.421, 177

	.type	.L.str.422,@object              # @.str.422
.L.str.422:
	.asciz	"\treturn *this;\n    }\n\n    template <typename T>\n    phylum_ptr<impl_abstract_phylum>& operator=(const phylum_ptr<T>& p) {\n\tset_ref(p.get_ref());\n\treturn *this;\n    }\n\n    imp"
	.size	.L.str.422, 175

	.type	.L.str.423,@object              # @.str.423
.L.str.423:
	.asciz	"l_abstract_phylum* get_phylum() const {\n\treturn _ref?_ref->get_abstract_phylum():0;\n    }\n\n    operator impl_abstract_phylum*() const { return get_phylum(); }\n    impl_abstract_phylum* o"
	.size	.L.str.423, 187

	.type	.L.str.424,@object              # @.str.424
.L.str.424:
	.asciz	"perator()() const { return get_phylum(); }\n    impl_abstract_phylum* operator->() const { return get_phylum(); }\n    operator bool() const { return get_phylum()!=0; }\n    bool operator!() cons"
	.size	.L.str.424, 193

	.type	.L.str.425,@object              # @.str.425
.L.str.425:
	.asciz	"t { return get_phylum()==0; }\n\n    abstract_phylum return_ptr() { if(_ref) _ref->lock(); return get_phylum(); }\n\n    bool operator==(int null) const { return null?false:(get_phylum()==0); }"
	.size	.L.str.425, 190

	.type	.L.str.426,@object              # @.str.426
.L.str.426:
	.asciz	"\n    template <typename T>\n    bool operator==(const T* t) const { return get_phylum()==t; }\n    template <typename T>\n    bool operator==(const phylum_ptr<T>& t) const { return get_phylum("
	.size	.L.str.426, 190

	.type	.L.str.427,@object              # @.str.427
.L.str.427:
	.asciz	")==t.get_phylum(); }\n\n    bool operator!=(int null) const { return null?true:(get_phylum()!=0); }\n    template <typename T>\n    bool operator!=(const T* t) const { return get_phylum()!=t; }"
	.size	.L.str.427, 190

	.type	.L.str.428,@object              # @.str.428
.L.str.428:
	.asciz	"\n    template <typename T>\n    bool operator!=(const phylum_ptr<T>& t) const { return get_phylum()!=t.get_phylum(); }\n\n    abstract_phylum_ref* get_ref() const { return _ref; }\n\n\rpro"
	.size	.L.str.428, 183

	.type	.L.str.429,@object              # @.str.429
.L.str.429:
	.asciz	"tected:\013\n"
	.size	.L.str.429, 10

	.type	.L.str.430,@object              # @.str.430
.L.str.430:
	.asciz	"   void set_ref(abstract_phylum_ref* r) {\n\tif(_ref!=r) {\n\t    if(_weak) {\n\t\tif(r) r->weak_ref();\n\t\tif(_ref) _ref->weak_unref();\n\t    }\n\t    else {\n\t\tif(r) r->ref();\n\t\tif(_ref) _"
	.size	.L.str.430, 178

	.type	.L.str.431,@object              # @.str.431
.L.str.431:
	.asciz	"ref->unref();\n\t    }\n\t    _ref=r;\n\t}\n    }\n"
	.size	.L.str.431, 44

	.type	.L.str.432,@object              # @.str.432
.L.str.432:
	.asciz	"   void set_ref(abstract_phylum_ref* r) {\n\tif(_ref!=r) {\n\t    if(r) r->ref();\n\t    if(_ref) _ref->unref();\n\t    _ref=r;\n\t}\n    }\n"
	.size	.L.str.432, 130

	.type	.L.str.433,@object              # @.str.433
.L.str.433:
	.asciz	"\n\rprivate:\013\n    abstract_phylum_ref* _ref;\n"
	.size	.L.str.433, 44

	.type	.L.str.434,@object              # @.str.434
.L.str.434:
	.asciz	"   bool _weak;\n"
	.size	.L.str.434, 16

	.type	.L.str.435,@object              # @.str.435
.L.str.435:
	.asciz	"impl_abstract_list: "
	.size	.L.str.435, 21

	.type	.L.str.436,@object              # @.str.436
.L.str.436:
	.asciz	"public impl_abstract_phylum"
	.size	.L.str.436, 28

	.type	.L.str.437,@object              # @.str.437
.L.str.437:
	.asciz	"{\n\rprivate:\013\n    void fprint_list(FILE *);\n    friend class impl_abstract_phylum;\n\rprotected:\013\n    abstract_phylum do_concat(c_abstract_phylum other, enum_operators) const;\n    ab"
	.size	.L.str.437, 180

	.type	.L.str.438,@object              # @.str.438
.L.str.438:
	.asciz	"stract_phylum do_reverse(c_abstract_phylum tail, enum_operators) const;\n    abstract_phylum do_map(abstract_phylum (*kc_fp)(abstract_phylum), enum_operators);\n    abstract_phylum do_filter(bool ("
	.size	.L.str.438, 196

	.type	.L.str.439,@object              # @.str.439
.L.str.439:
	.asciz	"*kc_fp)(abstract_phylum), enum_operators);\n    abstract_list   do_append(abstract_phylum, abstract_list);\n    abstract_phylum do_merge(abstract_list,abstract_phylum (*kc_fp)(abstract_phylum,abstr"
	.size	.L.str.439, 196

	.type	.L.str.440,@object              # @.str.440
.L.str.440:
	.asciz	"act_phylum), enum_operators);\n    abstract_phylum do_reduce(abstract_phylum neutral, abstract_phylum (*kc_fp)(abstract_phylum,abstract_phylum));\n\rpublic:\013\n"
	.size	.L.str.440, 156

	.type	.L.str.441,@object              # @.str.441
.L.str.441:
	.asciz	"explicit impl_abstract_list()\013\n: "
	.size	.L.str.441, 34

	.type	.L.str.442,@object              # @.str.442
.L.str.442:
	.asciz	"    virtual bool is_nil() const =0;\n    virtual abstract_list reverse() const =0;\n    int length() const;\n    abstract_phylum last() const;\n    // Non-virtual, non-existing... Type must be "
	.size	.L.str.442, 190

	.type	.L.str.443,@object              # @.str.443
.L.str.443:
	.asciz	"known exactly anyway because\n    // of the function given as a parameter\n    //virtual abstract_list map( abstract_phylum (*)( abstract_phylum )) =0;\n    //virtual abstract_list filter(bool (*"
	.size	.L.str.443, 193

	.type	.L.str.444,@object              # @.str.444
.L.str.444:
	.asciz	")(abstract_phylum)) =0;\n    void freelist();\n"
	.size	.L.str.444, 46

	.type	.L.str.445,@object              # @.str.445
.L.str.445:
	.asciz	"   impl_abstract_list* return_ptr() { if(get_ref()) get_ref()->lock(); return this; }\n"
	.size	.L.str.445, 87

	.type	.L.str.446,@object              # @.str.446
.L.str.446:
	.asciz	"\n//} // namespace Phylum\n\n"
	.size	.L.str.446, 27

	.type	.L.str.447,@object              # @.str.447
.L.str.447:
	.asciz	"\nclass impl_abstract_phylum;\ntypedef impl_abstract_phylum * abstract_phylum;\ntypedef const impl_abstract_phylum * c_abstract_phylum;\nclass impl_abstract_list;\ntypedef impl_abstract_list "
	.size	.L.str.447, 187

	.type	.L.str.448,@object              # @.str.448
.L.str.448:
	.asciz	"* abstract_list;\ntypedef const impl_abstract_list * c_abstract_list;\n"
	.size	.L.str.448, 70

	.type	.L.str.449,@object              # @.str.449
.L.str.449:
	.asciz	"\n// Reference to a phylum (abstract base class)\nclass abstract_phylum_ref {\n\rprotected:\013\n    abstract_phylum_ref() {\n\t_locked=false;\n\t_ref_count=0;\n"
	.size	.L.str.449, 149

	.type	.L.str.450,@object              # @.str.450
.L.str.450:
	.asciz	"\t_weak_ref_count=0;\n"
	.size	.L.str.450, 21

	.type	.L.str.451,@object              # @.str.451
.L.str.451:
	.asciz	"   }\n\n\rpublic:\013\n    void lock() {\n\t_locked=true;\n    }\n    void unlock() {\n\tif(_locked) {\n\t    _locked=false;\n\t    if(_ref_count==0 "
	.size	.L.str.451, 133

	.type	.L.str.452,@object              # @.str.452
.L.str.452:
	.asciz	"&& _weak_ref_count==0"
	.size	.L.str.452, 22

	.type	.L.str.453,@object              # @.str.453
.L.str.453:
	.asciz	") {\n\t\treset_ref();\n\t\treset_phylum();\n\t\tdelete this;\n\t    }\n\t}\n    }\n    int get_ref_count() const {\n\treturn _ref_count;\n    }\n    void ref() {\n\t_locked=false;\n\t++_re"
	.size	.L.str.453, 166

	.type	.L.str.454,@object              # @.str.454
.L.str.454:
	.asciz	"f_count;\n    }\n    void unref() {\n\tif(_ref_count)\n\t    --_ref_count;\n\tif(_ref_count==0 && !_locked) {\n\t    clear();\n"
	.size	.L.str.454, 117

	.type	.L.str.455,@object              # @.str.455
.L.str.455:
	.asciz	"\t     if(_weak_ref_count==0)\n"
	.size	.L.str.455, 30

	.type	.L.str.456,@object              # @.str.456
.L.str.456:
	.asciz	"\t\tdelete this;\n\t}\n    }\n"
	.size	.L.str.456, 25

	.type	.L.str.457,@object              # @.str.457
.L.str.457:
	.asciz	"   int get_weak_ref_count() const {\n\treturn _weak_ref_count;\n    }\n    void weak_ref()  {\n\t_locked=false;\n\t++_weak_ref_count;\n    }\n    void weak_unref() {\n\tif(_weak_ref_count)\n"
	.size	.L.str.457, 178

	.type	.L.str.458,@object              # @.str.458
.L.str.458:
	.asciz	"\t    --_weak_ref_count;\n\tif(_weak_ref_count==0 && _ref_count==0 && !_locked) {\n\t    reset_ref();\n\t    delete this;\n\t}\n    }\n"
	.size	.L.str.458, 125

	.type	.L.str.459,@object              # @.str.459
.L.str.459:
	.asciz	"\n    virtual impl_abstract_phylum* get_abstract_phylum() const=0;\n    virtual void reset_phylum()=0;\n"
	.size	.L.str.459, 102

	.type	.L.str.460,@object              # @.str.460
.L.str.460:
	.asciz	"\rprotected:\013\n    virtual void clear()=0;\n    virtual void reset_ref()=0;\n\rprivate:\013\n    int _ref_count;\n"
	.size	.L.str.460, 105

	.type	.L.str.461,@object              # @.str.461
.L.str.461:
	.asciz	"   int _weak_ref_count;\n"
	.size	.L.str.461, 25

	.type	.L.str.462,@object              # @.str.462
.L.str.462:
	.asciz	"   bool _locked;\n};\n"
	.size	.L.str.462, 21

	.type	.L.str.463,@object              # @.str.463
.L.str.463:
	.asciz	"// Template reference for each phylum\ntemplate <typename T>\nclass phylum_ref: public abstract_phylum_ref {\n\rpublic:\013\n    phylum_ref(T* t) { _phylum=t; }\n\n    T* get_phylum() const {"
	.size	.L.str.463, 182

	.type	.L.str.464,@object              # @.str.464
.L.str.464:
	.asciz	" return _phylum; }\n    impl_abstract_phylum* get_abstract_phylum() const { return _phylum; }\n\n    phylum_ref<T>& operator=(const T& t) {\n\tabstract_phylum_ref* ref=t.get_ref();\n\tif(ref)\n"
	.size	.L.str.464, 186

	.type	.L.str.465,@object              # @.str.465
.L.str.465:
	.asciz	"\t    set_phylum(static_cast<T*>(t.copy(true)));\n\telse\n\t    set_phylum(const_cast<T*>(&t));\n\treturn *this;\n    }\n    phylum_ref<T>& operator=(const phylum_ref<T>& r) {\n\tT* t=r.get_phyl"
	.size	.L.str.465, 184

	.type	.L.str.466,@object              # @.str.466
.L.str.466:
	.asciz	"um();\n\tif(t) return operator=(*t);\n\tset_phylum(0);\n\treturn *this;\n    }\n\n    void reset_phylum() { _phylum=0; }\n    void set_phylum(T* t) {\n\tif(_phylum!=t) {\n\t    _phylum->se"
	.size	.L.str.466, 175

	.type	.L.str.467,@object              # @.str.467
.L.str.467:
	.asciz	"t_ref(0);\n\t    _phylum->free();\n\t    _phylum=t;\n\t    if(_phylum)\n\t\t_phylum->set_ref(this);\n\t}\n    }\n\rprotected:\013\n    void clear() { if(_phylum) { reset_ref(); _phylum->free();"
	.size	.L.str.467, 176

	.type	.L.str.468,@object              # @.str.468
.L.str.468:
	.asciz	" _phylum=0; } }\n    void reset_ref() { if(_phylum) _phylum->set_ref(0); }\n\rprivate:\013\n    T* _phylum;\n};\n"
	.size	.L.str.468, 105

	.type	.L.str.469,@object              # @.str.469
.L.str.469:
	.asciz	"// Smart pointer containing a reference\ntemplate <typename T>\nclass phylum_ptr {\n\rpublic:\013\n"
	.size	.L.str.469, 92

	.type	.L.str.470,@object              # @.str.470
.L.str.470:
	.asciz	"   phylum_ptr(bool weak=false) { _ref=0; _weak=weak; }\n    phylum_ptr(T* t,bool weak=false) {\n\t_ref=0; _weak=weak;\n\tif(t) set_ref(static_cast<phylum_ref<T>*>(t->add_ref()));\n    }\n    ph"
	.size	.L.str.470, 187

	.type	.L.str.471,@object              # @.str.471
.L.str.471:
	.asciz	"ylum_ptr(const phylum_ptr<T>& p, bool weak=false) {\n\t_ref=0; _weak=weak;\n\tset_ref(p.get_ref());\n    }\n"
	.size	.L.str.471, 103

	.type	.L.str.472,@object              # @.str.472
.L.str.472:
	.asciz	"   phylum_ptr() { _ref=0; }\n    phylum_ptr(T* t) {\n\t_ref=0;\n\tif(t) set_ref(static_cast<phylum_ref<T>*>(t->add_ref()));\n    }\n    phylum_ptr(const phylum_ptr<T>& p) {\n\t_ref=0;\n\tset_"
	.size	.L.str.472, 181

	.type	.L.str.473,@object              # @.str.473
.L.str.473:
	.asciz	"ref(p.get_ref());\n    }\n"
	.size	.L.str.473, 25

	.type	.L.str.474,@object              # @.str.474
.L.str.474:
	.asciz	"   ~phylum_ptr() { set_ref(0); }\n\n    phylum_ptr<T>& operator=(T* t) {\n\tif(t)\n\t    set_ref(static_cast<phylum_ref<T>*>(t->add_ref()));\n\telse\n\t    set_ref(0);\n\treturn *this;\n    "
	.size	.L.str.474, 178

	.type	.L.str.475,@object              # @.str.475
.L.str.475:
	.asciz	"}\n\n    phylum_ptr<T>& operator=(const phylum_ptr<T>& p) {\n\tset_ref(p.get_ref());\n\treturn *this;\n    }\n\n    T* get_phylum() const { return _ref?_ref->get_phylum():0; }\n\n    op"
	.size	.L.str.475, 175

	.type	.L.str.476,@object              # @.str.476
.L.str.476:
	.asciz	"erator T*() const { return get_phylum(); }\n    T* operator()() const { return get_phylum(); }\n    T* operator->() const { return get_phylum(); }\n    operator bool() const { return get_phylum()"
	.size	.L.str.476, 193

	.type	.L.str.477,@object              # @.str.477
.L.str.477:
	.asciz	"!=0; }\n    bool operator!() const { return get_phylum()==0; }\n\n    T* return_ptr() const { if(_ref) _ref->lock(); return get_phylum(); }\n\n    bool operator==(int null) const { return nul"
	.size	.L.str.477, 187

	.type	.L.str.478,@object              # @.str.478
.L.str.478:
	.asciz	"l?false:(get_phylum()==0); }\n    bool operator==(const T* t) const { return get_phylum()==t; }\n    bool operator==(const phylum_ptr<T>& t) const { return get_phylum()==t.get_phylum(); }\n    bo"
	.size	.L.str.478, 193

	.type	.L.str.479,@object              # @.str.479
.L.str.479:
	.asciz	"ol operator!=(int null) const { return null?true:(get_phylum()!=0); }\n    bool operator!=(const T* t) const { return get_phylum()!=t; }\n    bool operator!=(const phylum_ptr<T>& t) const { return "
	.size	.L.str.479, 196

	.type	.L.str.480,@object              # @.str.480
.L.str.480:
	.asciz	"get_phylum()!=t.get_phylum(); }\n\n    phylum_ref<T>& operator*(){ return *add_ref(); }\n    const phylum_ref<T>& operator*() const {\n\treturn *const_cast<phylum_ptr<T>*>(this)->add_ref();\n "
	.size	.L.str.480, 187

	.type	.L.str.481,@object              # @.str.481
.L.str.481:
	.asciz	"   }\n\n    phylum_ref<T>* get_ref() const { return _ref; }\n\n    phylum_ref<T>* add_ref() {\n\tif(!_ref) set_ref(new phylum_ref<T>(0));\n\treturn _ref;\n    }\n\rprotected:\013\n"
	.size	.L.str.481, 166

	.type	.L.str.482,@object              # @.str.482
.L.str.482:
	.asciz	"   void set_ref(phylum_ref<T>* r) {\n\tif(_ref!=r) {\n\t    if(_weak) {\n\t\tif(r) r->weak_ref();\n\t\tif(_ref) _ref->weak_unref();\n\t    }\n\t    else {\n\t\tif(r) r->ref();\n\t\tif(_ref) _ref->u"
	.size	.L.str.482, 178

	.type	.L.str.483,@object              # @.str.483
.L.str.483:
	.asciz	"nref();\n\t    }\n\t    _ref=r;\n\t}\n    }\n"
	.size	.L.str.483, 38

	.type	.L.str.484,@object              # @.str.484
.L.str.484:
	.asciz	"   void set_ref(phylum_ref<T>* r) {\n\tif(_ref!=r) {\n\t    if(r) r->ref();\n\t    if(_ref) _ref->unref();\n\t    _ref=r;\n\t}\n    }\n"
	.size	.L.str.484, 124

	.type	.L.str.485,@object              # @.str.485
.L.str.485:
	.asciz	"\n\rprivate:\013\n    phylum_ref<T>* _ref;\n"
	.size	.L.str.485, 38

	.type	.L.str.486,@object              # @.str.486
.L.str.486:
	.asciz	"};\ntypedef phylum_ptr<impl_abstract_phylum> abstract_phylum_ptr;\n"
	.size	.L.str.486, 66

	.type	.L.str.487,@object              # @.str.487
.L.str.487:
	.asciz	"\ntemplate <typename T>\nclass weak_phylum_ptr: public phylum_ptr<T> {\n\rpublic:\013\n    weak_phylum_ptr(): phylum_ptr<T>(true){}\n    weak_phylum_ptr(T* t):phylum_ptr<T>(t,true){}\n    wea"
	.size	.L.str.487, 182

	.type	.L.str.488,@object              # @.str.488
.L.str.488:
	.asciz	"k_phylum_ptr(const weak_phylum_ptr<T>& p):phylum_ptr<T>(p,true){}\n    weak_phylum_ptr(const phylum_ptr<T>& p):phylum_ptr<T>(p,true){}\n\n    weak_phylum_ptr<T>& operator=(T* t) {\n\tif(t)\n\t "
	.size	.L.str.488, 187

	.type	.L.str.489,@object              # @.str.489
.L.str.489:
	.asciz	"   set_ref(static_cast<phylum_ref<T>*>(t->add_ref()));\n\telse\n\t    set_ref(0);\n\treturn *this;\n    }\n\n    weak_phylum_ptr<T>& operator=(const phylum_ptr<T>& p) {\n\tset_ref(p.get_ref()"
	.size	.L.str.489, 181

	.type	.L.str.490,@object              # @.str.490
.L.str.490:
	.asciz	");\n\treturn *this;\n    }\n};\ntypedef weak_phylum_ptr<impl_abstract_phylum> weak_abstract_phylum_ptr;\n"
	.size	.L.str.490, 100

	.type	.L.str.491,@object              # @.str.491
.L.str.491:
	.asciz	"\ntemplate <typename P, typename T>\nP phylum_cast(phylum_ptr<T>& t) {\n    return static_cast<P>(t());\n}\ntemplate <typename P, typename T>\nconst P phylum_cast(const phylum_ptr<T>& t) {\n"
	.size	.L.str.491, 184

	.type	.L.str.492,@object              # @.str.492
.L.str.492:
	.asciz	"    return static_cast<const P>(t());\n}\n"
	.size	.L.str.492, 41

	.type	.L.str.493,@object              # @.str.493
.L.str.493:
	.asciz	"\ntemplate <typename P, typename T>\nP phylum_cast(T* t) {\n    return static_cast<P>(t);\n}\ntemplate <typename P, typename T>\nconst P phylum_cast(const T* t) {\n    return static_cast<"
	.size	.L.str.493, 181

	.type	.L.str.494,@object              # @.str.494
.L.str.494:
	.asciz	"const P>(t);\n}\n"
	.size	.L.str.494, 16

	.type	.L.str.495,@object              # @.str.495
.L.str.495:
	.asciz	"\n\nvoid kc_invalid_operator( const char *kc_func_prefix, enum_phyla kc_phy, int kc_line,\n\tconst char *kc_file, enum_operators kc_oper ) __attribute__ ((noreturn));\n\ntypedef enum_phyla *en"
	.size	.L.str.495, 187

	.type	.L.str.496,@object              # @.str.496
.L.str.496:
	.asciz	"um_phyla_list;\n\n/*\n * make sure that the first 'real' storage class _always_ gets a value > 0\n * and kc_not_uniq gets a value == 0\n * (because then we can use it as a C boolean)\n */\n"
	.size	.L.str.496, 183

	.type	.L.str.497,@object              # @.str.497
.L.str.497:
	.asciz	"enum kc_storageclass_t {\n\t"
	.size	.L.str.497, 27

	.type	.L.str.498,@object              # @.str.498
.L.str.498:
	.asciz	",\nlast_storageclass\n};\n\ntypedef struct {\n    const char *name;\t\t\t// name of the phylum\n    enum_operators first_operator;\t// index in operator_info[]\n    enum_operators last_operat"
	.size	.L.str.498, 181

	.type	.L.str.499,@object              # @.str.499
.L.str.499:
	.asciz	"or;\t// index in operator_info[]\n    kc_storageclass_t uniq_stored;\t// storage class\n} KC_PHYLUM_INFO;\n\ntypedef struct {\n    const char *name;\t\t\t// name of the operator\n    size_t no_s"
	.size	.L.str.499, 184

	.type	.L.str.500,@object              # @.str.500
.L.str.500:
	.asciz	"ons;\t\t\t// number of sons\n    bool atomicity;\t\t\t// atomic type or not\n    enum_phyla phylum;\t\t\t// index in phylum_info[]\n    enum_phyla_list subphylum;\t\t// indexes in phylum_info[]\n    int n"
	.size	.L.str.500, 190

	.type	.L.str.501,@object              # @.str.501
.L.str.501:
	.asciz	"o_attrs;\t\t\t// number of attributes\n    enum_phyla_list attribute;\t\t// indexes in phylum_info[]\n    size_t size;\t\t\t// size of operator (for statistics)\n} KC_OPERATOR_INFO;\n\ntypedef enum_p"
	.size	.L.str.501, 187

	.type	.L.str.502,@object              # @.str.502
.L.str.502:
	.asciz	"hyla_list KC_UNIQ_INFO;\n\nextern KC_OPERATOR_INFO operator_info[];\nextern KC_PHYLUM_INFO phylum_info[];\nextern KC_UNIQ_INFO kc_UniqInfo[];\n\n#define KC_OP_NAME(op) (operator_info[op].na"
	.size	.L.str.502, 184

	.type	.L.str.503,@object              # @.str.503
.L.str.503:
	.asciz	"me)\n#define KC_NO_SONS(prod) (operator_info[prod].no_sons)\n#define KC_ATOMICITY(prod) (operator_info[prod].atomicity)\n\n"
	.size	.L.str.503, 120

	.type	.L.str.504,@object              # @.str.504
.L.str.504:
	.asciz	"\n#ifndef KC_TRACE_PROVIDED\n#define KC_TRACE_PROVIDED(COND,FILE,LINE,NODE) COND\n#endif\n\nvoid\nimpl_abstract_phylum::unparse(printer_function opf, uview uv)\n{\n    printer_functor_f"
	.size	.L.str.504, 178

	.type	.L.str.505,@object              # @.str.505
.L.str.505:
	.asciz	"unction_wrapper pf(opf);\n    do_unparse(pf, uv);\n}\n\n// Everything given as a pointer is expected to have an unparse-method (we\n// believe it's a phylum), unless there's a specialisation "
	.size	.L.str.505, 187

	.type	.L.str.506,@object              # @.str.506
.L.str.506:
	.asciz	"for it\n\nvoid\nunparse(abstract_phylum kc_p, printer_functor kc_printer, uview kc_current_view)\n{\n    kc_p->unparse(kc_printer, kc_current_view);\n}\n\nvoid\nunparse(void *kc_p, pr"
	.size	.L.str.506, 175

	.type	.L.str.507,@object              # @.str.507
.L.str.507:
	.asciz	"inter_functor kc_printer, uview kc_current_view)\n{\n    // MPi: 20020628 there shouldn't be any left\n    assertionFailed(\"Unparse called for untyped pointer\");\n    // MPi: cast should be u"
	.size	.L.str.507, 188

	.type	.L.str.508,@object              # @.str.508
.L.str.508:
	.asciz	"nnecessary, but there are still void*\n    reinterpret_cast<impl_abstract_phylum*>(kc_p)->unparse(kc_printer, kc_current_view);\n}\n\nvoid\nunparse(int kc_v, printer_functor kc_printer, uview"
	.size	.L.str.508, 187

	.type	.L.str.509,@object              # @.str.509
.L.str.509:
	.asciz	" kc_current_view)\n{\n    kc_char_t kc_string[200];\n    kc_print_integer(kc_string, kc_v);\n    kc_printer(kc_string, kc_current_view);\n}\n\nvoid\nunparse(double kc_v, printer_functor"
	.size	.L.str.509, 178

	.type	.L.str.510,@object              # @.str.510
.L.str.510:
	.asciz	" kc_printer, uview kc_current_view)\n{\n    kc_char_t kc_string[200];\n    kc_print_real(kc_string, kc_v);\n    kc_printer(kc_string, kc_current_view);\n}\n\nvoid\nunparse(kc_char_t *kc"
	.size	.L.str.510, 178

	.type	.L.str.511,@object              # @.str.511
.L.str.511:
	.asciz	"_v, printer_functor kc_printer, uview kc_current_view)\n{\n    kc_printer(kc_v, kc_current_view);\n}\n\nvoid\nunparse(kc_string_t kc_v, printer_functor kc_printer, uview kc_current_view)\n"
	.size	.L.str.511, 182

	.type	.L.str.512,@object              # @.str.512
.L.str.512:
	.asciz	"{\n    kc_printer(kc_v.c_str(), kc_current_view);\n}\n"
	.size	.L.str.512, 52

	.type	.L.str.513,@object              # @.str.513
.L.str.513:
	.asciz	"void\nimpl_abstract_phylum::default_unparse(printer_functor kc_printer, uview kc_current_view)\n{\n    register int no_sons = operator_info[prod_sel()].no_sons;\n    for (int i=0; i < no_sons; "
	.size	.L.str.513, 190

	.type	.L.str.514,@object              # @.str.514
.L.str.514:
	.asciz	"i++)\n\tsubphylum(i)->unparse(kc_printer, kc_current_view);\n}\n\nvoid\nimpl_casestring__Str::do_unparse(printer_functor kc_printer, uview kc_current_view)\n{\n    kc::unparse(name, kc_pri"
	.size	.L.str.514, 181

	.type	.L.str.515,@object              # @.str.515
.L.str.515:
	.asciz	"nter, kc_current_view);\n}\n\nvoid\nimpl_nocasestring_NoCaseStr::do_unparse(printer_functor kc_printer, uview kc_current_view)\n{\n    kc::unparse(name, kc_printer, kc_current_view);\n}\n"
	.size	.L.str.515, 180

	.type	.L.str.516,@object              # @.str.516
.L.str.516:
	.asciz	"\nvoid\nimpl_integer__Int::do_unparse(printer_functor kc_printer, uview kc_current_view)\n{\n    kc::unparse(value, kc_printer, kc_current_view);\n}\n\nvoid\nimpl_real__Real::do_unparse"
	.size	.L.str.516, 178

	.type	.L.str.517,@object              # @.str.517
.L.str.517:
	.asciz	"(printer_functor kc_printer, uview kc_current_view)\n{\n    kc::unparse(value, kc_printer, kc_current_view);\n}\n\nvoid\nimpl_voidptr__VoidPtr::do_unparse(printer_functor kc_printer, uview "
	.size	.L.str.517, 184

	.type	.L.str.518,@object              # @.str.518
.L.str.518:
	.asciz	"kc_current_view)\n{\n    kc::unparse(pointer, kc_printer, kc_current_view);\n}\n\n"
	.size	.L.str.518, 78

	.type	.L.str.519,@object              # @.str.519
.L.str.519:
	.asciz	"/* translation of file(s)\n"
	.size	.L.str.519, 27

	.type	.L.str.520,@object              # @.str.520
.L.str.520:
	.asciz	" */\n/* generated by:\n *  "
	.size	.L.str.520, 26

	.type	.L.str.521,@object              # @.str.521
.L.str.521:
	.asciz	"\n */\n#define KC_UNPARSE\n"
	.size	.L.str.521, 25

	.type	.L.str.522,@object              # @.str.522
.L.str.522:
	.asciz	"#include \""
	.size	.L.str.522, 11

	.type	.L.str.523,@object              # @.str.523
.L.str.523:
	.asciz	"\"\n"
	.size	.L.str.523, 3

	.type	.L.str.524,@object              # @.str.524
.L.str.524:
	.asciz	"\n#include <stdio.h>\n#include <string>\n#include <stdlib.h>\n#include \""
	.size	.L.str.524, 69

	.type	.L.str.525,@object              # @.str.525
.L.str.525:
	.asciz	"k.h\"\n#include \""
	.size	.L.str.525, 16

	.type	.L.str.526,@object              # @.str.526
.L.str.526:
	.asciz	"unpk.h\"\n\n"
	.size	.L.str.526, 10

	.type	.L.str.527,@object              # @.str.527
.L.str.527:
	.asciz	"\nimpl_uviews uviews[] = {\n"
	.size	.L.str.527, 27

	.type	.L.str.528,@object              # @.str.528
.L.str.528:
	.asciz	"\t{0,0}\n};\n"
	.size	.L.str.528, 11

	.type	.L.str.529,@object              # @.str.529
.L.str.529:
	.asciz	"#ifndef LANG_TEXT\n"
	.size	.L.str.529, 19

	.type	.L.str.530,@object              # @.str.530
.L.str.530:
	.asciz	"#define LANG_TEXT(i) kc_language[i]\n"
	.size	.L.str.530, 37

	.type	.L.str.531,@object              # @.str.531
.L.str.531:
	.asciz	"#endif\n\n"
	.size	.L.str.531, 9

	.type	.L.str.532,@object              # @.str.532
.L.str.532:
	.asciz	"#endif // KC_UNPARSE_HEADER\n"
	.size	.L.str.532, 29

	.type	.L.str.533,@object              # @.str.533
.L.str.533:
	.asciz	"\n/* Use rviews instead\nextern char *kc_rview_names[];\n*/\n"
	.size	.L.str.533, 58

	.type	.L.str.534,@object              # @.str.534
.L.str.534:
	.asciz	"#ifndef is_language\n"
	.size	.L.str.534, 21

	.type	.L.str.535,@object              # @.str.535
.L.str.535:
	.asciz	"#define is_language(L) kc_language==kc_language_##L\n"
	.size	.L.str.535, 53

	.type	.L.str.536,@object              # @.str.536
.L.str.536:
	.asciz	"#ifndef set_language\n"
	.size	.L.str.536, 22

	.type	.L.str.537,@object              # @.str.537
.L.str.537:
	.asciz	"#define set_language(L) kc_language=kc_language_##L\n"
	.size	.L.str.537, 53

	.type	.L.str.538,@object              # @.str.538
.L.str.538:
	.asciz	"extern char** kc_language;\n"
	.size	.L.str.538, 28

	.type	.L.str.539,@object              # @.str.539
.L.str.539:
	.asciz	"\n/* Use uviews instead\nextern char *kc_view_names[];\n*/\n"
	.size	.L.str.539, 57

	.type	.L.str.540,@object              # @.str.540
.L.str.540:
	.asciz	"\nvoid unparse(abstract_phylum kc_p, printer_functor kc_printer, uview kc_current_view);\nvoid unparse(void *kc_p, printer_functor kc_printer, uview kc_current_view);\nvoid unparse(int kc_v, prin"
	.size	.L.str.540, 193

	.type	.L.str.541,@object              # @.str.541
.L.str.541:
	.asciz	"ter_functor kc_printer, uview kc_current_view);\nvoid unparse(double kc_v, printer_functor kc_printer, uview kc_current_view);\nvoid unparse(kc_char_t *kc_v, printer_functor kc_printer, uview kc_cu"
	.size	.L.str.541, 196

	.type	.L.str.542,@object              # @.str.542
.L.str.542:
	.asciz	"rrent_view);\nvoid unparse(kc_string_t kc_v, printer_functor kc_printer, uview kc_current_view);\n#define PRINT(string) kc_printer(string,kc_current_view)\n#define UNPARSE(node) node->unparse(kc_"
	.size	.L.str.542, 193

	.type	.L.str.543,@object              # @.str.543
.L.str.543:
	.asciz	"printer,kc_current_view)\n"
	.size	.L.str.543, 26

	.type	.L.str.544,@object              # @.str.544
.L.str.544:
	.asciz	"\n */\n#ifndef KC_UNPARSE_HEADER\n#define KC_UNPARSE_HEADER\n\n"
	.size	.L.str.544, 59

	.type	.L.str.545,@object              # @.str.545
.L.str.545:
	.asciz	"/* translation of file \""
	.size	.L.str.545, 25

	.type	.L.str.546,@object              # @.str.546
.L.str.546:
	.asciz	"\" */\n/* generated by:\n *  "
	.size	.L.str.546, 27

	.type	.L.str.547,@object              # @.str.547
.L.str.547:
	.asciz	"\n */\n#define KC_FUNCTIONS_"
	.size	.L.str.547, 27

	.type	.L.str.548,@object              # @.str.548
.L.str.548:
	.asciz	"\n#include <stdlib.h>\n#include \""
	.size	.L.str.548, 32

	.type	.L.str.549,@object              # @.str.549
.L.str.549:
	.asciz	"k.h\"\n"
	.size	.L.str.549, 6

	.type	.L.str.550,@object              # @.str.550
.L.str.550:
	.asciz	"\n#endif // !  KC_FUNCTIONS_"
	.size	.L.str.550, 28

	.type	.L.str.551,@object              # @.str.551
.L.str.551:
	.asciz	"_HEADER\n\n"
	.size	.L.str.551, 10

	.type	.L.str.552,@object              # @.str.552
.L.str.552:
	.asciz	"\n */\n#ifndef KC_FUNCTIONS_"
	.size	.L.str.552, 27

	.type	.L.str.553,@object              # @.str.553
.L.str.553:
	.asciz	"_HEADER\n#define KC_FUNCTIONS_"
	.size	.L.str.553, 30

	.type	.L.str.554,@object              # @.str.554
.L.str.554:
	.asciz	"_HEADER\n#include \""
	.size	.L.str.554, 19

	.type	.L.str.555,@object              # @.str.555
.L.str.555:
	.asciz	"k.h\"    // in case a user forgets\n\n"
	.size	.L.str.555, 36

	.type	.L.str.556,@object              # @.str.556
.L.str.556:
	.asciz	"\n#ifndef KC_TRACE_PROVIDED\n#define KC_TRACE_PROVIDED(COND,FILE,LINE,NODE) COND\n#endif\n#ifndef KC_TRACE_REWRITE_MATCH\n#define KC_TRACE_REWRITE_MATCH(VIEW,FILE,LINE,NODE)\n#endif\n#ifn"
	.size	.L.str.556, 181

	.type	.L.str.557,@object              # @.str.557
.L.str.557:
	.asciz	"def KC_TRACE_REWRITE_RESULT\n#define KC_TRACE_REWRITE_RESULT(VIEW,FILE,LINE,NODE)\n#endif\n\t"
	.size	.L.str.557, 90

	.type	.L.str.558,@object              # @.str.558
.L.str.558:
	.asciz	"\n */\n#define KC_REWRITE\n"
	.size	.L.str.558, 25

	.type	.L.str.559,@object              # @.str.559
.L.str.559:
	.asciz	"\n#include <stdio.h>\n#include <sys/types.h>\n#include <stdlib.h>\n#include \""
	.size	.L.str.559, 74

	.type	.L.str.560,@object              # @.str.560
.L.str.560:
	.asciz	"rk.h\"\n\n"
	.size	.L.str.560, 8

	.type	.L.str.561,@object              # @.str.561
.L.str.561:
	.asciz	"#include <deque>\n#include <stack>\n#include <vector>\n"
	.size	.L.str.561, 53

	.type	.L.str.562,@object              # @.str.562
.L.str.562:
	.asciz	"\nimpl_rviews rviews[] = {\n"
	.size	.L.str.562, 27

	.type	.L.str.563,@object              # @.str.563
.L.str.563:
	.asciz	"_ptr"
	.size	.L.str.563, 5

	.type	.L.str.564,@object              # @.str.564
.L.str.564:
	.asciz	"\n\nstatic inline int\nkc_sons(abstract_phylum ph) {\n    return KC_NO_SONS(ph->prod_sel());\n}\n\nstatic abstract_phylum\nkc_create_op(enum_operators kc_op, std::vector<abstract_phylum"
	.size	.L.str.564, 178

	.type	.L.str.565,@object              # @.str.565
.L.str.565:
	.asciz	">& sons, size_t no_of_sons) {\n    size_t son_offset = sons.size()-no_of_sons;\n    switch(no_of_sons) {\n"
	.size	.L.str.565, 104

	.type	.L.str.566,@object              # @.str.566
.L.str.566:
	.asciz	"   default:\013\n\tassertionFailed(\"unexpected number of sub-phyla\");\r\n    }\r\n}\n\nstatic void\ninitialize_sons_stack(abstract_phylum"
	.size	.L.str.566, 126

	.type	.L.str.567,@object              # @.str.567
.L.str.567:
	.asciz	"& kc_p, bool& skip,\n\tstd::stack<abstract_phylum"
	.size	.L.str.567, 48

	.type	.L.str.568,@object              # @.str.568
.L.str.568:
	.asciz	">& node_stack, std::stack<int>& sons_todo,\n\trview kc_current_view_base)\n{\n    // Initialize stack for depth first rewrite\n    assertCond(kc_p);\n    size_t no_of_sons=kc_sons(kc_p);\n "
	.size	.L.str.568, 183

	.type	.L.str.569,@object              # @.str.569
.L.str.569:
	.asciz	"   while(!skip && (no_of_sons>0)) {\n\tsons_todo.push(no_of_sons);\n\tabstract_phylum parent = kc_p;\n\tfor(int i = no_of_sons-1; i>=0; --i) {\n\t    node_stack.push(kc_p);\n\t    kc_p = parent->s"
	.size	.L.str.569, 187

	.type	.L.str.570,@object              # @.str.570
.L.str.570:
	.asciz	"ubphylum(i);\n\t}\n\tkc_p = kc_current_view_base.pre_rewrite(kc_p, skip);\n\tassertCond(kc_p);\n\tno_of_sons = kc_sons(kc_p);\n    }\n    // The deepest first son is now in kc_p.\n    // On t"
	.size	.L.str.570, 181

	.type	.L.str.571,@object              # @.str.571
.L.str.571:
	.asciz	"he node_stack are the siblings and then the parent.\n}\n\nstatic bool\nsons_changed(abstract_phylum"
	.size	.L.str.571, 96

	.type	.L.str.572,@object              # @.str.572
.L.str.572:
	.asciz	" current_son, const std::vector<abstract_phylum"
	.size	.L.str.572, 48

	.type	.L.str.573,@object              # @.str.573
.L.str.573:
	.asciz	">& sons_done, size_t no_of_sons)\n{\n    bool changed = false;\n    for(int i=no_of_sons-1; i>=0; --i) {\n\tif(sons_done[sons_done.size()-no_of_sons+i] != current_son->subphylum(i)) {\n\t    ch"
	.size	.L.str.573, 187

	.type	.L.str.574,@object              # @.str.574
.L.str.574:
	.asciz	"anged=true;\n\t    break;\n\t}\n    }\n    return changed;\n}\n\nabstract_phylum impl_abstract_phylum::rewrite_loop(rview kc_current_view_base) {\n    std::stack<abstract_phylum"
	.size	.L.str.574, 168

	.type	.L.str.575,@object              # @.str.575
.L.str.575:
	.asciz	"> node_stack;\n    std::stack<int> sons_todo;\n    std::vector<abstract_phylum"
	.size	.L.str.575, 77

	.type	.L.str.576,@object              # @.str.576
.L.str.576:
	.asciz	"> sons_done;\n\n    abstract_phylum"
	.size	.L.str.576, 34

	.type	.L.str.577,@object              # @.str.577
.L.str.577:
	.asciz	" current_son=this;\n\n    do {\n\tbool skip=false;\n\tcurrent_son = kc_current_view_base.pre_rewrite(current_son, skip);\n\tinitialize_sons_stack(current_son, skip, node_stack, sons_todo, kc_cur"
	.size	.L.str.577, 187

	.type	.L.str.578,@object              # @.str.578
.L.str.578:
	.asciz	"rent_view_base);\n\t\n\tbool changed=true;\n\tdo {\n\t    assertCond(current_son);\n\n\t    abstract_phylum"
	.size	.L.str.578, 97

	.type	.L.str.579,@object              # @.str.579
.L.str.579:
	.asciz	" res=current_son;\n\t    if(!skip)\n\t\tres=current_son->do_rewrite(kc_current_view_base);\n\n\t    assertCond(res);\n\t    changed=true;\n\n\t    if(res==current_son) { // nothing has been cha"
	.size	.L.str.579, 181

	.type	.L.str.580,@object              # @.str.580
.L.str.580:
	.asciz	"nged, current_son is completely rewritten\n\t\tif(!skip) { // call post_rewrite if this node is not skipped\n\t\t    bool again=false;\n\t\t    current_son=kc_current_view_base.post_rewrite(current_son"
	.size	.L.str.580, 193

	.type	.L.str.581,@object              # @.str.581
.L.str.581:
	.asciz	", again);\n\t\t    assertCond(current_son);\n\t\t    if(again)\n\t\t\t\013break;\r // starts the whole rewrite_loop for the post_rewritten node again\n\t\t}\n\t\telse\n\t\t    skip=false;\n\n\t\tsons_do"
	.size	.L.str.581, 176

	.type	.L.str.582,@object              # @.str.582
.L.str.582:
	.asciz	"ne.push_back(current_son); // move this son to sons_done\n\n\t\tif(!node_stack.empty()) { // else all is done\n\t\t    assertCond(!sons_todo.empty());\n\t\t    assertCond(sons_todo.top()>0);\n\t\t   "
	.size	.L.str.582, 187

	.type	.L.str.583,@object              # @.str.583
.L.str.583:
	.asciz	" --sons_todo.top(); // one less to todo\n\n\t\t    if(sons_todo.top()==0) { // all sons done\n\t\t\tsons_todo.pop(); // forget it\n\n\t\t\tcurrent_son=node_stack.top(); // the parent of the original "
	.size	.L.str.583, 187

	.type	.L.str.584,@object              # @.str.584
.L.str.584:
	.asciz	"last done sons\n\t\t\tnode_stack.pop();\n\t\t\t// the last (rewritten) son of this parent is\n\t\t\t// on top of sons_done (sons_done[sons_done.size()-1])\n\n\t\t\tsize_t no_of_sons=kc_sons(current_son);"
	.size	.L.str.584, 187

	.type	.L.str.585,@object              # @.str.585
.L.str.585:
	.asciz	"\n\t\t\tassertCond(sons_done.size() >= no_of_sons);\n\t\t\tchanged = sons_changed(current_son, sons_done, no_of_sons);\n\t\t\tif(changed) {\t// some sons are different ->\n\t\t\t\t\t\013\013// create a new operat"
	.size	.L.str.585, 188

	.type	.L.str.586,@object              # @.str.586
.L.str.586:
	.asciz	"or and make it the current\n\t\t\t    \r\rabstract_phylum"
	.size	.L.str.586, 52

	.type	.L.str.587,@object              # @.str.587
.L.str.587:
	.asciz	" new_son =\n\t\t\t\t\013kc_create_op(current_son->prod_sel(), sons_done, no_of_sons);\r\n\t\t\t    new_son->rewrite_members(current_son);\n\t\t\t    current_son = new_son;\n\t\t\t    // the sons do not need t"
	.size	.L.str.587, 188

	.type	.L.str.588,@object              # @.str.588
.L.str.588:
	.asciz	"o be rewritten again\n\t\t\t    changed=false;\n\t\t\t}\n\t\t\t// The current node must still be rewritten,\n\t\t\t// but not its sons anymore (changed == false).\n\t\t\t// Those sons are in the current nod"
	.size	.L.str.588, 187

	.type	.L.str.589,@object              # @.str.589
.L.str.589:
	.asciz	"e, so no-one needs\n\t\t\t// them anymore and they are popped off the stack.\n\t\t\tsons_done.resize(sons_done.size() - no_of_sons);\n\t\t    }\n\t\t    else { // make the complete loop with the next son"
	.size	.L.str.589, 190

	.type	.L.str.590,@object              # @.str.590
.L.str.590:
	.asciz	" (changed == true)\n\t\t\tcurrent_son = node_stack.top();\n\t\t\tnode_stack.pop();\n\t\t    }\n\t\t}\n\t\telse {\n\t\t    current_son = 0; // terminates the loop\n\t\t}\n\t    }\n\t    else // somethin"
	.size	.L.str.590, 175

	.type	.L.str.591,@object              # @.str.591
.L.str.591:
	.asciz	"g has been changed -> start rewrite with the changed node again\n\t\tcurrent_son=res;\n\t} while(!changed);\n    } while(current_son);\n\n    assertCond(sons_todo.size()==0);\n    assertCond(s"
	.size	.L.str.591, 184

	.type	.L.str.592,@object              # @.str.592
.L.str.592:
	.asciz	"ons_done.size()==1);\n    return sons_done[0]"
	.size	.L.str.592, 45

	.type	.L.str.593,@object              # @.str.593
.L.str.593:
	.asciz	".return_ptr()"
	.size	.L.str.593, 14

	.type	.L.str.594,@object              # @.str.594
.L.str.594:
	.asciz	"; // done.top()\n}\n"
	.size	.L.str.594, 19

	.type	.L.str.595,@object              # @.str.595
.L.str.595:
	.asciz	"#endif // KC_REWRITE_HEADER\n"
	.size	.L.str.595, 29

	.type	.L.str.596,@object              # @.str.596
.L.str.596:
	.asciz	"\n */\n#ifndef KC_REWRITE_HEADER\n#define KC_REWRITE_HEADER\n\n"
	.size	.L.str.596, 59

	.type	.L.str.597,@object              # @.str.597
.L.str.597:
	.asciz	"abstract_phylum\nimpl_abstract_phylum::copy(bool kc_copy_attributes) const\n{\n    enum_phyla kc_phy = phylum(); // XXX - implement special cases in subclasses - MvL\n    KC_OPERATOR_INFO *kc_o"
	.size	.L.str.597, 190

	.type	.L.str.598,@object              # @.str.598
.L.str.598:
	.asciz	"p_info = &operator_info[prod_sel()];\n    kc_storageclass_t kc_st = phylum_info[kc_op_info->phylum].uniq_stored;\n    if (kc_st && kc_storageclass_still_uniq[kc_st])\n\treturn const_cast<abstract_"
	.size	.L.str.598, 193

	.type	.L.str.599,@object              # @.str.599
.L.str.599:
	.asciz	"phylum>(this);\n    abstract_phylum kc_answer=0;\n    if (kc_phy == phylum_casestring) {\n\tkc_answer=mkcasestring((dynamic_cast<c_casestring>(this))->name);\n    } else if (kc_phy == phylum_noc"
	.size	.L.str.599, 190

	.type	.L.str.600,@object              # @.str.600
.L.str.600:
	.asciz	"asestring) {\n\tkc_answer=mknocasestring((dynamic_cast<c_nocasestring>(this))->name);\n    } else if (kc_phy == phylum_voidptr) {\n\tkc_answer=mkvoidptr((dynamic_cast<c_voidptr>(this))->pointer);\n"
	.size	.L.str.600, 192

	.type	.L.str.601,@object              # @.str.601
.L.str.601:
	.asciz	"    } else if (kc_phy == phylum_integer) {\n\tkc_answer=mkinteger((dynamic_cast<c_integer>(this))->value);\n    } else if (kc_phy == phylum_real) {\n\tkc_answer=mkreal((dynamic_cast<c_real>(this))-"
	.size	.L.str.601, 193

	.type	.L.str.602,@object              # @.str.602
.L.str.602:
	.asciz	">value);\n    } else {\n\tabstract_phylum kc_subtmp["
	.size	.L.str.602, 50

	.type	.L.str.603,@object              # @.str.603
.L.str.603:
	.asciz	"], child;\n\tfor (int kc_i = 0; (child = subphylum(kc_i)); kc_i++) {\n\t    kc_subtmp[kc_i] = child->copy(kc_copy_attributes);\n\t}\n\tswitch(kc_op_info->no_sons) {\n"
	.size	.L.str.603, 158

	.type	.L.str.604,@object              # @.str.604
.L.str.604:
	.asciz	"\tdefault: assertionFailed(\"unexpected number of sub-phyla\");\n\t}\n    }\n    if (kc_copy_attributes)\n\tcopy_attributes(kc_phy, this, kc_answer);\n    return kc_answer;\n}\n\n"
	.size	.L.str.604, 167

	.type	.L.str.605,@object              # @.str.605
.L.str.605:
	.asciz	"\nvoid\ncopy_attributes(enum_phyla copyPhy, c_abstract_phylum kc_p1, abstract_phylum kc_p2)\n{\n    switch(copyPhy) {\r\n"
	.size	.L.str.605, 116

	.type	.L.str.606,@object              # @.str.606
.L.str.606:
	.asciz	"   case one_before_first_phylum: // just to avoid a warning about missing case if empty\n    default:\n\t\013break; // it's alright, no attributes to copy\r\n    }\n    enum_operators copyOp=kc_p1"
	.size	.L.str.606, 188

	.type	.L.str.607,@object              # @.str.607
.L.str.607:
	.asciz	"->prod_sel();\n    for (int i=operator_info[copyOp].no_attrs-1; i>=0; --i)\013\n\tattributeOf(kc_p2, i)=attributeOf(const_cast<abstract_phylum>(kc_p1), i);\r\n}\n\n"
	.size	.L.str.607, 155

	.type	.L.str.608,@object              # @.str.608
.L.str.608:
	.asciz	"\n\nnamespace { // all local to this file\n\r\n/* macro that does the string concatenation */\n#define kc_str_conc2(a,b) strcat(strcpy(new char[strlen(a) + strlen(b) +1], a), b)\n\n/* fun"
	.size	.L.str.608, 180

	.type	.L.str.609,@object              # @.str.609
.L.str.609:
	.asciz	"ction that reads the integers */\ninline void\nkc_do_get_int(int &c, int c_init, int &i, FILE *f)\n{\n    c = c_init;\n    i = 0;\n    while (isdigit(c)){\n\ti = (i*10) + (c-'0');\n\tc = "
	.size	.L.str.609, 178

	.type	.L.str.610,@object              # @.str.610
.L.str.610:
	.asciz	"getc(f);\n    }\n}\n\nchar *kc_malloc_area = 0;\nsize_t kc_sizeof_malloc_area = 0;\nint kc_node_count;\nint kc_node_count_base;\n\nchar*\nkc_grow_malloc_area(size_t kc_s)\n{\n  "
	.size	.L.str.610, 166

	.type	.L.str.611,@object              # @.str.611
.L.str.611:
	.asciz	"  delete kc_malloc_area;\n    kc_malloc_area = new char[kc_s];\n    kc_sizeof_malloc_area = kc_s;\n    return kc_malloc_area;\n}\n\ninline char*\nKC_GETMALLOCAREA(size_t kc_s)\n{\n   "
	.size	.L.str.611, 175

	.type	.L.str.612,@object              # @.str.612
.L.str.612:
	.asciz	" return kc_s > kc_sizeof_malloc_area ?\n\tkc_grow_malloc_area(kc_s) : kc_malloc_area;\n}\n\n/* global variables */\nint kc_no_external_ops;\nconst int KC_NOT_FOUND_OPERATOR = -1;\nint kc_f"
	.size	.L.str.612, 181

	.type	.L.str.613,@object              # @.str.613
.L.str.613:
	.asciz	"ile_offset_base;\nint kc_file_offset;\n\n/* Magic File descriptor(s) */\n/* Magic descriptors of length up to KC_MAGIC_LENGTH-1 are supported.  When changing\n * KC_MAGIC_LENGTH. change const"
	.size	.L.str.613, 187

	.type	.L.str.614,@object              # @.str.614
.L.str.614:
	.asciz	"ant in MAGIC_READ_FORMAT to be one less than\n * KC_MAGIC_LENGTH. */\n/* Every file is assumed to start with the magic file descriptor for asc_csg_v3 */\n\nchar kc_ascii_prefix_magic_v3[] = \"A"
	.size	.L.str.614, 189

	.type	.L.str.615,@object              # @.str.615
.L.str.615:
	.asciz	"#S#C#S#S#L#V#3\";\nchar kc_ascii_prefix_magic_hu[] = \"A#S#C#S#S#L#HUB\";\nconst int KC_MAGIC_LENGTH = 25;\nconst char *KC_MAGIC_READ_FORMAT = \"%24s\\n\";\n\n/* Operators with names of lengt"
	.size	.L.str.615, 181

	.type	.L.str.616,@object              # @.str.616
.L.str.616:
	.asciz	"h upto OP_LENGTH-1 are supported. */\n/* When changing OP_LENGTH, change constant in OP_READ_FOMAT to be one less */\nconst int KC_OP_LENGTH = 256;\nconst char *KC_OP_READ_FORMAT = \"%255s\\n\";\n"
	.size	.L.str.616, 190

	.type	.L.str.617,@object              # @.str.617
.L.str.617:
	.asciz	"\n//**********************\n// Error-string Routine\nconst char*\nkc_CSGIOerrorstring(KC_IO_STATUS kc_io_status)\n{\n    switch( kc_io_status ) {\n\tcase KC_CSGIOSTATUS_NO_ERR: return( \"N"
	.size	.L.str.617, 180

	.type	.L.str.618,@object              # @.str.618
.L.str.618:
	.asciz	"o errors\" );\n\tcase KC_CSGIOSTATUS_SCAN_ERR_1: return( \"Scan error(1)\" );\n\tcase KC_CSGIOSTATUS_SCAN_ERR_2: return( \"Scan error(2)\" );\n\tcase KC_CSGIOSTATUS_SCAN_ERR_3: return( \"Scan error("
	.size	.L.str.618, 187

	.type	.L.str.619,@object              # @.str.619
.L.str.619:
	.asciz	"3)\" );\n\tcase KC_CSGIOSTATUS_SCAN_ERR_4: return( \"Scan error(4)\" );\n\tcase KC_CSGIOSTATUS_SCAN_ERR_5: return( \"Scan error(5)\" );\n\tcase KC_CSGIOSTATUS_GRAM_INCONSISTENT: return( \"Grammar is"
	.size	.L.str.619, 187

	.type	.L.str.620,@object              # @.str.620
.L.str.620:
	.asciz	" inconsistent\" );\n\tcase KC_CSGIOSTATUS_ROK: return( \"Read OK structure file\" );\n\tcase KC_CSGIOSTATUS_ILLEGAL_OPTION: return( \"Illegal option in write command\" );\n\tcase KC_CSGIOSTATUS_TOO_"
	.size	.L.str.620, 188

	.type	.L.str.621,@object              # @.str.621
.L.str.621:
	.asciz	"MANY_OPERATORS: return( \"Too many operators for binary format\" );\n\tcase KC_CSGIOSTATUS_WOK: return( \"Written OK\" );\n\tcase KC_CSGIOSTATUS_TXT_FILE_INPUT: return( \"Read OK Text-file\" );\n\tc"
	.size	.L.str.621, 187

	.type	.L.str.622,@object              # @.str.622
.L.str.622:
	.asciz	"ase KC_CSGIOSTATUS_SYNTAX_ERROR: return( \"Syntax error\" );\n\tcase KC_CSGIOSTATUS_ILLEGAL_CONTEXT: return( \"Illegal context for operator\" );\n\tcase KC_CSGIOSTATUS_PREMATURE_EOF: return( \"Premat"
	.size	.L.str.622, 191

	.type	.L.str.623,@object              # @.str.623
.L.str.623:
	.asciz	"ure eof in file\" );\n\tcase KC_CSGIOSTATUS_UNEXP_FATHER_MARK: return( \"Unexpected FATHER MARKER\" );\n\tdefault: return( \"Unknown error code\" );\n    }\n}\n\nstruct csgio_info {\n  int "
	.size	.L.str.623, 176

	.type	.L.str.624,@object              # @.str.624
.L.str.624:
	.asciz	"number;      // number of node, or -1 if no number\n  bool created;    // whether the node is already written\n  csgio_info():number(-1),created(false){}\n};\ntypedef std::map<const void*,csgio"
	.size	.L.str.624, 190

	.type	.L.str.625,@object              # @.str.625
.L.str.625:
	.asciz	"_info> csgio_map;\ncsgio_map kc_CSGIOhashtable;\n\n/* Maps */\ntypedef struct {\n    int left;\n    int right;\n} kc_OpToOpMap_tuple_t;\n\nkc_OpToOpMap_tuple_t kc_OpToOpMap[KC_NO_OF_O"
	.size	.L.str.625, 175

	.type	.L.str.626,@object              # @.str.626
.L.str.626:
	.asciz	"PERATORS];\nconst int KC_NOT_USED = -1;\n\nint\nkc_op_search(char *kc_s)\n{\n    int kc_i;\n    for ( kc_i=0; kc_i < KC_NO_OF_OPERATORS; kc_i++ ) {\n\tif ( strcmp( kc_s, operator_info[kc"
	.size	.L.str.626, 178

	.type	.L.str.627,@object              # @.str.627
.L.str.627:
	.asciz	"_i].name ) == 0 ) return( kc_i );\n    }\n    return( KC_NOT_FOUND_OPERATOR );\n}\n\nvoid\nkc_initializeOpToOpMap(int kc_v)\n{\n    int kc_i;\n    for ( kc_i=0; kc_i < KC_NO_OF_OPERAT"
	.size	.L.str.627, 175

	.type	.L.str.628,@object              # @.str.628
.L.str.628:
	.asciz	"ORS; kc_i++ ) {\n\tkc_OpToOpMap[kc_i].left = kc_i;\n\tkc_OpToOpMap[kc_i].right = kc_v;\n}   }\n\nbool\nOpToOpMap_cmp_right(kc_OpToOpMap_tuple_t t1, kc_OpToOpMap_tuple_t t2)\n{\n    // sor"
	.size	.L.str.628, 178

	.type	.L.str.629,@object              # @.str.629
.L.str.629:
	.asciz	"t in DECREASING order\n    return t1.right > t2.right;\n}\n\nbool\nOpToOpMap_cmp_left(kc_OpToOpMap_tuple_t t1, kc_OpToOpMap_tuple_t t2)\n{\n    // sort in INCREASING order\n    return t"
	.size	.L.str.629, 178

	.type	.L.str.630,@object              # @.str.630
.L.str.630:
	.asciz	"1.left < t2.left;\n}\n\nvoid\nkc_renumberOpToOpMap()\n{\n    int kc_i, kc_j = 0;\n    for ( kc_i=0; kc_i < KC_NO_OF_OPERATORS; kc_i++ ) {\n\tif (kc_OpToOpMap[kc_i].right > 0) {\n\t    k"
	.size	.L.str.630, 175

	.type	.L.str.631,@object              # @.str.631
.L.str.631:
	.asciz	"c_OpToOpMap[kc_i].right = kc_j++;\n\t} else {\n\t    kc_OpToOpMap[kc_i].right = KC_NOT_USED;\n}   }\t}\n\n\n#define KC_MAKE_NEW_MAPPING(ext_op,int_op) kc_OpToOpMap[ext_op].right = int_op\n#d"
	.size	.L.str.631, 181

	.type	.L.str.632,@object              # @.str.632
.L.str.632:
	.asciz	"efine KC_MAKE_NEW_SCAN_MAPPING(ext_op) kc_OpToOpMap[ext_op].right++\n#define KC_MAP(op) (kc_OpToOpMap[op].right)\n#define KC_IS_MAPPED(op) (kc_OpToOpMap[op].right != KC_NOT_USED)\n\nvoid\nkc_"
	.size	.L.str.632, 187

	.type	.L.str.633,@object              # @.str.633
.L.str.633:
	.asciz	"error_operator_not_in_phylum(int kc_op, int kc_phy)\n{\n    const char *kc_error_message1 = \"operator not defined in phylum \";\n    const char *kc_error_message2 = \": \";\n    if ((kc_op <= "
	.size	.L.str.633, 186

	.type	.L.str.634,@object              # @.str.634
.L.str.634:
	.asciz	"one_before_first_operator) || (kc_op >= last_operator)) {\n\tchar kc_value[30];\n\tsprintf(kc_value, \"%d\",kc_op);\n\tkc_csgio_err_reason = kc_str_conc2(\"unknown operator number: \", kc_value);\n"
	.size	.L.str.634, 187

	.type	.L.str.635,@object              # @.str.635
.L.str.635:
	.asciz	"    } else {\n\tkc_csgio_err_reason = (char*)strcat(strcat(strcat(strcpy(new char[(size_t)(strlen(kc_error_message1)+strlen(phylum_info[kc_phy].name)+strlen(kc_error_message2)+strlen(operator_info[kc_"
	.size	.L.str.635, 199

	.type	.L.str.636,@object              # @.str.636
.L.str.636:
	.asciz	"op].name)+1)], kc_error_message1), phylum_info[kc_phy].name), kc_error_message2), operator_info[kc_op].name);\n    }\n    throw IO_exception(KC_CSGIOSTATUS_ILLEGAL_CONTEXT); /*NOTREACHED*/\n}\n"
	.size	.L.str.636, 190

	.type	.L.str.637,@object              # @.str.637
.L.str.637:
	.asciz	"\n} // anonymous namespace\n\nchar*\nIO_exception2char(IO_exception kc_p)\n{\n    char *kc_err_ret = 0;\n    const char *kc_err_sep = \": \";\n    if (kc_p.io_status != KC_CSGIOSTATUS_R"
	.size	.L.str.637, 176

	.type	.L.str.638,@object              # @.str.638
.L.str.638:
	.asciz	"OK && kc_p.io_status != KC_CSGIOSTATUS_WOK) {\n\tconst char *kc_io_err = kc_CSGIOerrorstring(kc_p.io_status);\n\tkc_err_ret = new char[strlen(kc_io_err)+strlen(kc_err_sep)+strlen(kc_p.err_reason)+1];"
	.size	.L.str.638, 196

	.type	.L.str.639,@object              # @.str.639
.L.str.639:
	.asciz	"\n\tstrcpy(kc_err_ret, kc_io_err);\n\tstrcat(kc_err_ret, kc_err_sep);\n\tstrcat(kc_err_ret, kc_p.err_reason);\n    }\n    return kc_err_ret;\n}\n\nconst char *kc_csgio_err_reason = \"\";\n"
	.size	.L.str.639, 175

	.type	.L.str.640,@object              # @.str.640
.L.str.640:
	.asciz	"\n#ifndef KC_NO_CSGIO_READ\nnamespace { // all local to this file\n\r\n/* Base 64 numbers are written with the digits:\n   : ; < = > ? @ A-Z [ \\ ] ^ _ ` a-y\n   Base 10 numbers are written"
	.size	.L.str.640, 182

	.type	.L.str.641,@object              # @.str.641
.L.str.641:
	.asciz	" with the ordinary digits 0-9.\n   Other characters are used in special circumstances:\n    ! Indicates switch between reading attribute and unattributed nodes.\n    # Indicates that the father i"
	.size	.L.str.641, 193

	.type	.L.str.642,@object              # @.str.642
.L.str.642:
	.asciz	"s the next PROD_INSTANCE in the file.\n    + Indicates that the following bytes are not a base 64 number\n    * Indicates a line containing a (decimal) count of attributes.\n*/\nconst char KC_B"
	.size	.L.str.642, 190

	.type	.L.str.643,@object              # @.str.643
.L.str.643:
	.asciz	"64_ZERO_CHAR =\t':';\nconst char KC_ASCII_ZERO =\t'0';\nconst char KC_SWITCH_ATTR =\t'!';\nconst char KC_FATHER_MARKER =\t'#';\nconst char KC_NON_B64_CHAR =\t'+';\nconst char KC_ATTR_COUNT =\t'*';\n"
	.size	.L.str.643, 187

	.type	.L.str.644,@object              # @.str.644
.L.str.644:
	.asciz	"const char KC_NULL_POINTER =    '.';\n\ninline bool\nKC_IS_B64(int c)\n{\n    return c>=KC_B64_ZERO_CHAR && c<KC_B64_ZERO_CHAR+64;\n}\n\n/* read and compute the base 64 integer in strea"
	.size	.L.str.644, 178

	.type	.L.str.645,@object              # @.str.645
.L.str.645:
	.asciz	"m */\nunsigned\nget_rest_of_b64(FILE *kc_stream, register int kc_read_char, char kc_trailing_char)\n{\n    int kc_next_char;\n    int kc_offset;\n    int kc_i = 0;\n\n    if (!KC_IS_B64"
	.size	.L.str.645, 178

	.type	.L.str.646,@object              # @.str.646
.L.str.646:
	.asciz	"(kc_read_char))\n\tthrow IO_exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n    kc_offset = kc_read_char - KC_B64_ZERO_CHAR;\n\n    kc_next_char = getc(kc_stream);\n    while(KC_IS_B64(kc_next_char)) {"
	.size	.L.str.646, 187

	.type	.L.str.647,@object              # @.str.647
.L.str.647:
	.asciz	"\n\tkc_offset += (kc_next_char - KC_B64_ZERO_CHAR) << (6 * (++kc_i));\n\tkc_next_char = getc(kc_stream);\n\t}\n\n    if (kc_next_char == '-') {\n\tkc_offset *= -1;\n\tkc_next_char = getc(kc_st"
	.size	.L.str.647, 181

	.type	.L.str.648,@object              # @.str.648
.L.str.648:
	.asciz	"ream);\n    }\n\n    if (kc_next_char != kc_trailing_char)\n\tthrow IO_exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n    return kc_offset;\n}\n\n/* read shared functions */\ntypedef enum { KC"
	.size	.L.str.648, 175

	.type	.L.str.649,@object              # @.str.649
.L.str.649:
	.asciz	"_NOT_READ_YET, KC_READ_EARLIER } KC_READ_STATUS;\n/* variable used by the sharing routines during a read */\n/* stores pointers to value_ptr fields */\nabstract_phylum *kc_offset_to_address_map;\n"
	.size	.L.str.649, 193

	.type	.L.str.650,@object              # @.str.650
.L.str.650:
	.asciz	"char const* *kc_offset_to_address_map_base;\n\nvoid\nkc_init_read_sharing()\n{\n  kc_offset_to_address_map = new abstract_phylum[kc_node_count];\n  for(int i=0; i<kc_node_count; ++i) kc_off"
	.size	.L.str.650, 184

	.type	.L.str.651,@object              # @.str.651
.L.str.651:
	.asciz	"set_to_address_map[i]=0;\n  kc_file_offset = 0;\n  kc_offset_to_address_map_base = new char const* [kc_node_count_base];\n  for(int j=0; j<kc_node_count_base; ++j) kc_offset_to_address_map_base[j"
	.size	.L.str.651, 193

	.type	.L.str.652,@object              # @.str.652
.L.str.652:
	.asciz	"]=0;\n  kc_file_offset_base = 0;\n}\n\nKC_READ_STATUS\nkc_read_sharing_find(FILE *kc_stream, abstract_phylum &kc_valptr)\n{\n    char kc_first_char;\n    unsigned kc_offset;\n\n    "
	.size	.L.str.652, 172

	.type	.L.str.653,@object              # @.str.653
.L.str.653:
	.asciz	"kc_first_char = getc(kc_stream);\n    if (KC_IS_B64(kc_first_char)) {\n\tkc_offset = get_rest_of_b64(kc_stream, kc_first_char, '\\n');\n\tint off=kc_file_offset - kc_offset;\n\tassertReason(off>=0"
	.size	.L.str.653, 189

	.type	.L.str.654,@object              # @.str.654
.L.str.654:
	.asciz	" && off<=kc_node_count, \"base 64 offset out of range\");\n\tkc_valptr = kc_offset_to_address_map[off];\n\treturn(KC_READ_EARLIER);\n    } else {\n\tungetc(kc_first_char, kc_stream);\n\treturn(KC"
	.size	.L.str.654, 185

	.type	.L.str.655,@object              # @.str.655
.L.str.655:
	.asciz	"_NOT_READ_YET);\n    }\n}\n\nKC_READ_STATUS\nkc_read_sharing_find_base(FILE *kc_stream, char const* &kc_valptr)\n{\n    char kc_first_char;\n    unsigned kc_offset;\n\n    kc_first_"
	.size	.L.str.655, 172

	.type	.L.str.656,@object              # @.str.656
.L.str.656:
	.asciz	"char = getc(kc_stream);\n    if (KC_IS_B64(kc_first_char)) {\n\tkc_offset = get_rest_of_b64(kc_stream, kc_first_char, '\\n');\n\tint off=kc_file_offset_base - kc_offset;\n\tassertReason(off>=0 && "
	.size	.L.str.656, 189

	.type	.L.str.657,@object              # @.str.657
.L.str.657:
	.asciz	"off<=kc_node_count_base, \"base 64 offset out of range\");\n\tkc_valptr = kc_offset_to_address_map_base[off];\n\treturn(KC_READ_EARLIER);\n    } else {\n\treturn(KC_NOT_READ_YET);\n    }\n}\n"
	.size	.L.str.657, 180

	.type	.L.str.658,@object              # @.str.658
.L.str.658:
	.asciz	"\n#define kc_read_sharing_store(kc_ptr, kc_loc) \\\n    kc_offset_to_address_map[kc_loc] = kc_ptr\n#define kc_read_sharing_store_base(kc_ptr) \\\n    kc_offset_to_address_map_base[kc_file_offse"
	.size	.L.str.658, 188

	.type	.L.str.659,@object              # @.str.659
.L.str.659:
	.asciz	"t_base++] = kc_ptr\n\n\nvoid\nkc_end_read_sharing()\n{\n  delete kc_offset_to_address_map;\n  delete kc_offset_to_address_map_base;\n}\n\nvoid\nkc_CSGIOdo_read_atom_denotation(FIL"
	.size	.L.str.659, 169

	.type	.L.str.660,@object              # @.str.660
.L.str.660:
	.asciz	"E *kc_stream, char *kc_sbase, int kc_len)\n{\n    char * kc_sptr = kc_sbase;\n    register int kc_ch, kc_ch1;\n    register char kc_test;\n    register int kc_i;\n\n    for (kc_i=0; kc_i<"
	.size	.L.str.660, 181

	.type	.L.str.661,@object              # @.str.661
.L.str.661:
	.asciz	"kc_len; kc_i++, kc_sptr++) {\n\tkc_ch = getc(kc_stream);\n\tif (kc_ch == '\\n') {\n\t    ungetc(kc_ch, kc_stream);\n\t    break;\n\t}\n\t*kc_sptr = (char) kc_ch;\n\tif ( kc_ch == '\\\\' ) {\n\t"
	.size	.L.str.661, 175

	.type	.L.str.662,@object              # @.str.662
.L.str.662:
	.asciz	"    if ( ( kc_test = getc( kc_stream ) ) != '\\\\' ) { /* Must be escaped hex */\n\t\tif (isdigit(kc_test)) kc_ch1 = kc_test - '0'; else kc_ch1 =kc_test + 10 - 'a';\n\t\tkc_ch1 = 16 * kc_ch1;\n\t\tkc_t"
	.size	.L.str.662, 191

	.type	.L.str.663,@object              # @.str.663
.L.str.663:
	.asciz	"est = getc(kc_stream);\n\t\tif (isdigit(kc_test)) kc_test= kc_test - '0'; else kc_test=kc_test + 10 - 'a';\n\t\tkc_ch1 = kc_ch1 + kc_test;\n\t\t*kc_sptr = (char)kc_ch1; /* cast is for explicit narrowin"
	.size	.L.str.663, 193

	.type	.L.str.664,@object              # @.str.664
.L.str.664:
	.asciz	"g from int to char */\n\t    }\n\t}\n    }\n\n    kc_ch = getc(kc_stream);\n    if ( kc_ch == EOF ) throw IO_exception(KC_CSGIOSTATUS_PREMATURE_EOF);\n    else if (kc_ch != '\\n') throw IO_"
	.size	.L.str.664, 180

	.type	.L.str.665,@object              # @.str.665
.L.str.665:
	.asciz	"exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n\n    *kc_sptr = '\\0';\n}\n\nabstract_phylum\nCSGIOread2dft(FILE *kc_stream, enum_phyla kc_phy)\n{\n    char *kc_sbase;\n    char const* c_kc_s"
	.size	.L.str.665, 174

	.type	.L.str.666,@object              # @.str.666
.L.str.666:
	.asciz	"base;\n    int kc_len;\n    int kc_delim;\n    abstract_phylum kc_answer;\n    int kc_location;\n    bool kc_not_read_yet = false;\n\n/* get operator */\n    int kc_ext_op;\n    int k"
	.size	.L.str.666, 175

	.type	.L.str.667,@object              # @.str.667
.L.str.667:
	.asciz	"c_testing;\n\n    /* XXX MPi: misleading comment? scan for optional unparsing version number */\n    if (kc_read_sharing_find( kc_stream, kc_answer ) == KC_READ_EARLIER ) {\n\t// MPi: I believe "
	.size	.L.str.667, 190

	.type	.L.str.668,@object              # @.str.668
.L.str.668:
	.asciz	"this is unnecessary or wrong - sharing is only done\n\t// when phyla are the _same_, so they should remain the same.\n        // kc_answer = kc_answer->copy(false);\n\treturn kc_answer;\n    }\n"
	.size	.L.str.668, 188

	.type	.L.str.669,@object              # @.str.669
.L.str.669:
	.asciz	"    kc_do_get_int(kc_testing,getc(kc_stream),kc_ext_op,kc_stream);\n    if ( kc_testing == EOF )\n\tthrow IO_exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n    if ( kc_testing == KC_NULL_POINTER )\n    "
	.size	.L.str.669, 190

	.type	.L.str.670,@object              # @.str.670
.L.str.670:
	.asciz	"{\n\tkc_do_get_int(kc_testing,getc(kc_stream),kc_ext_op,kc_stream);\n\tif ( kc_testing != '\\n' )\n\t    throw IO_exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n\treturn 0;\n    }\n    if ( kc_testing "
	.size	.L.str.670, 183

	.type	.L.str.671,@object              # @.str.671
.L.str.671:
	.asciz	"== KC_FATHER_MARKER )\n\tthrow IO_exception(KC_CSGIOSTATUS_UNEXP_FATHER_MARK);\n    if ( kc_testing != '\\n' )\n\tthrow IO_exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n    enum_operators kc_op(static_c"
	.size	.L.str.671, 189

	.type	.L.str.672,@object              # @.str.672
.L.str.672:
	.asciz	"ast<enum_operators>(KC_MAP( kc_ext_op )));\n/* end get operator */\n\n    if (kc_op<phylum_info[kc_phy].first_operator || kc_op>phylum_info[kc_phy].last_operator)\n\t    kc_error_operator_not_in"
	.size	.L.str.672, 190

	.type	.L.str.673,@object              # @.str.673
.L.str.673:
	.asciz	"_phylum(kc_op,kc_phy);\n\n    kc_location = kc_file_offset++;\n    switch( kc_op ) {\r\n    case sel__VoidPtr:\013\n\t// FATAL ERROR\n\tkc_do_get_int(kc_delim,getc(kc_stream),kc_len,kc_stream);"
	.size	.L.str.673, 182

	.type	.L.str.674,@object              # @.str.674
.L.str.674:
	.asciz	"\n\tif ( kc_delim == EOF )\n\t    throw IO_exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n\tkc_sbase = KC_GETMALLOCAREA(kc_len + 1); // +1 for '\\0'\n\tkc_CSGIOdo_read_atom_denotation(kc_stream, kc_sbase, "
	.size	.L.str.674, 189

	.type	.L.str.675,@object              # @.str.675
.L.str.675:
	.asciz	"kc_len);\n\tkc_answer = 0;\n\tbreak;\r\n    case sel__Int:\013\n\tkc_do_get_int(kc_delim,getc(kc_stream),kc_len,kc_stream);\n\tif ( kc_delim == EOF )\n\t    throw IO_exception(KC_CSGIOSTATUS_SCAN_"
	.size	.L.str.675, 182

	.type	.L.str.676,@object              # @.str.676
.L.str.676:
	.asciz	"ERR_1);\n\tkc_sbase = KC_GETMALLOCAREA(kc_len + 1); // +1 for '\\0'\n\tkc_CSGIOdo_read_atom_denotation(kc_stream, kc_sbase, kc_len);\n\tkc_answer = mkinteger(::atoi(kc_sbase));\n\tbreak;\r\n    c"
	.size	.L.str.676, 185

	.type	.L.str.677,@object              # @.str.677
.L.str.677:
	.asciz	"ase sel__Real:\013\n\tkc_do_get_int(kc_delim,getc(kc_stream),kc_len,kc_stream);\n\tif ( kc_delim == EOF )\n\t    throw IO_exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n\tkc_sbase = KC_GETMALLOCAREA(kc_len +"
	.size	.L.str.677, 189

	.type	.L.str.678,@object              # @.str.678
.L.str.678:
	.asciz	" 1); // +1 for '\\0'\n\tkc_CSGIOdo_read_atom_denotation(kc_stream, kc_sbase, kc_len);\n\tkc_answer = mkreal(::atof(kc_sbase));\n\tbreak;\r\n    case sel__Str:\013\n\tif (kc_read_sharing_find_base( "
	.size	.L.str.678, 184

	.type	.L.str.679,@object              # @.str.679
.L.str.679:
	.asciz	"kc_stream, c_kc_sbase ) == KC_NOT_READ_YET) {\n\t    kc_not_read_yet = true;\n\t    kc_do_get_int(kc_delim,getc(kc_stream),kc_len,kc_stream);\n\t    if ( kc_delim == EOF )\n\t\tthrow IO_exception(KC"
	.size	.L.str.679, 190

	.type	.L.str.680,@object              # @.str.680
.L.str.680:
	.asciz	"_CSGIOSTATUS_SCAN_ERR_1);\n\t    kc_sbase = KC_GETMALLOCAREA(kc_len + 1); /* +1 for '\\0' */\n\t    kc_CSGIOdo_read_atom_denotation(kc_stream, kc_sbase, kc_len);\n\t    c_kc_sbase=kc_sbase;\n\t}\n"
	.size	.L.str.680, 187

	.type	.L.str.681,@object              # @.str.681
.L.str.681:
	.asciz	"\tkc_answer = mkcasestring( c_kc_sbase );\n\tif (kc_not_read_yet) {\n\t    kc_read_sharing_store_base( phylum_cast<casestring>(kc_answer)->name );\n\t}\n\tbreak;\r\n    case sel_NoCaseStr:\013\n\ti"
	.size	.L.str.681, 182

	.type	.L.str.682,@object              # @.str.682
.L.str.682:
	.asciz	"f (kc_read_sharing_find_base( kc_stream, c_kc_sbase ) == KC_NOT_READ_YET) {\n\t    kc_not_read_yet = true;\n\t    kc_do_get_int(kc_delim,getc(kc_stream),kc_len,kc_stream);\n\t    if ( kc_delim == EO"
	.size	.L.str.682, 193

	.type	.L.str.683,@object              # @.str.683
.L.str.683:
	.asciz	"F )\n\t\tthrow IO_exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n\t    kc_sbase = KC_GETMALLOCAREA(kc_len + 1); /* +1 for '\\0' */\n\t    kc_CSGIOdo_read_atom_denotation(kc_stream, kc_sbase, kc_len);\n\t   "
	.size	.L.str.683, 189

	.type	.L.str.684,@object              # @.str.684
.L.str.684:
	.asciz	" c_kc_sbase=kc_sbase;\n\t}\n\tkc_answer = mknocasestring( c_kc_sbase );\n\tif (kc_not_read_yet) {\n\t    kc_read_sharing_store_base( phylum_cast<nocasestring>(kc_answer)->name );\n\t}\n\tbreak;\n"
	.size	.L.str.684, 183

	.type	.L.str.685,@object              # @.str.685
.L.str.685:
	.asciz	"    default:\013\n\tabstract_phylum kc_subtmp["
	.size	.L.str.685, 42

	.type	.L.str.686,@object              # @.str.686
.L.str.686:
	.asciz	"];\n\tfor (int kc_i = 0; kc_i < operator_info[kc_op].no_sons; ++kc_i) {\n\t    kc_subtmp[kc_i] = CSGIOread2dft(kc_stream, operator_info[kc_op].subphylum[kc_i] );\n\t    assertReason(kc_subtmp[kc_i]!"
	.size	.L.str.686, 193

	.type	.L.str.687,@object              # @.str.687
.L.str.687:
	.asciz	"=0, \"shared phylum is not contained in file (reference is wrong)\");\n\t}\n"
	.size	.L.str.687, 72

	.type	.L.str.688,@object              # @.str.688
.L.str.688:
	.asciz	"\tswitch(operator_info[kc_op].no_sons) {\n"
	.size	.L.str.688, 41

	.type	.L.str.689,@object              # @.str.689
.L.str.689:
	.asciz	"\tdefault:\013\n\t    assertionFailed(\"unexpected number of sub-phyla\"); break;\r\n\t}\r\n\t// Read attributes\n\tfor (int kc_i=0; kc_i<operator_info[kc_op].no_attrs; ++kc_i)\013\n\t    attributeOf(k"
	.size	.L.str.689, 181

	.type	.L.str.690,@object              # @.str.690
.L.str.690:
	.asciz	"c_answer, kc_i)=\013\n\t\tCSGIOread2dft(kc_stream, operator_info[kc_op].attribute[kc_i]);\r\r\n    }\n \n    kc_read_sharing_store( kc_answer, kc_location );\n    return kc_answer;\n}\n\n} "
	.size	.L.str.690, 175

	.type	.L.str.691,@object              # @.str.691
.L.str.691:
	.asciz	"// anonymous namespace\n\nvoid\nCSGIOreadphylum(FILE *kc_stream, abstract_phylum &kc_ptr, enum_phyla kc_phy)\n{\n    int kc_scan_return_code;\n    char kc_magic_no[KC_MAGIC_LENGTH];\n    "
	.size	.L.str.691, 181

	.type	.L.str.692,@object              # @.str.692
.L.str.692:
	.asciz	"char kc_dollarcode[KC_OP_LENGTH];\n    char kc_ext_name[KC_OP_LENGTH];\n    int kc_operator;\n\n    kc_csgio_err_reason = \"\";\n    kc_scan_return_code = fscanf( kc_stream, KC_MAGIC_READ_FOR"
	.size	.L.str.692, 185

	.type	.L.str.693,@object              # @.str.693
.L.str.693:
	.asciz	"MAT, kc_magic_no );\n    if ( kc_scan_return_code != 1 )\n\tthrow IO_exception(KC_CSGIOSTATUS_GRAM_INCONSISTENT, \"magic string not scanned\") ;\n    if ( strcmp( kc_magic_no, kc_ascii_prefix_magi"
	.size	.L.str.693, 191

	.type	.L.str.694,@object              # @.str.694
.L.str.694:
	.asciz	"c_v3 ) != 0 &&\n\t    strcmp( kc_magic_no, kc_ascii_prefix_magic_hu ) != 0 )\n\tthrow IO_exception(KC_CSGIOSTATUS_GRAM_INCONSISTENT,\"scanned magic string is not asc_ssl_v3 (or HUB specific) magic st"
	.size	.L.str.694, 195

	.type	.L.str.695,@object              # @.str.695
.L.str.695:
	.asciz	"ring\") ;\n    if ( fscanf( kc_stream, \"$%[^ ] \\n\", kc_dollarcode ) != 1 )\n\tthrow IO_exception(KC_CSGIOSTATUS_GRAM_INCONSISTENT,\"problems finding $ before operators\") ;\n    while ( strcmp("
	.size	.L.str.695, 187

	.type	.L.str.696,@object              # @.str.696
.L.str.696:
	.asciz	" kc_dollarcode, \"operators\" ) != 0 ) {\n\tif ( fscanf( kc_stream, \"%*[^$]$%[^ ] \\n\", kc_dollarcode) != 1 )\n\t    throw IO_exception(KC_CSGIOSTATUS_GRAM_INCONSISTENT,\"problems finding operators"
	.size	.L.str.696, 190

	.type	.L.str.697,@object              # @.str.697
.L.str.697:
	.asciz	" keyword\") ;\n    }\n    /* read all external operator definitions and initialize map */\n    kc_no_external_ops = 0;\n    kc_initializeOpToOpMap(KC_NOT_FOUND_OPERATOR);\n    while (true) {\n"
	.size	.L.str.697, 186

	.type	.L.str.698,@object              # @.str.698
.L.str.698:
	.asciz	"\tint kc_ext_arity, kc_ext_attr_arity, kc_ext_atomicity;\n\n\tif ( fscanf( kc_stream, \"%[^ ] \", kc_ext_name ) != 1 )\n\t    throw IO_exception(KC_CSGIOSTATUS_SCAN_ERR_3, \"no operator name at star"
	.size	.L.str.698, 190

	.type	.L.str.699,@object              # @.str.699
.L.str.699:
	.asciz	"t of line\") ;\n\telse if ( kc_ext_name[0] == '$' )\n\t    break;\n\telse if ( fscanf( kc_stream, \"%d %d %d\\n\", &kc_ext_arity, &kc_ext_attr_arity, &kc_ext_atomicity ) != 3 )\n\t    throw IO_exce"
	.size	.L.str.699, 186

	.type	.L.str.700,@object              # @.str.700
.L.str.700:
	.asciz	"ption(KC_CSGIOSTATUS_SCAN_ERR_4, \"no arity, attr_arity or atomicity\") ;\n\telse {\n\t    kc_operator = kc_op_search( kc_ext_name );\n\t    if ( ( kc_operator == KC_NOT_FOUND_OPERATOR ) ||\n\t\t ( "
	.size	.L.str.700, 188

	.type	.L.str.701,@object              # @.str.701
.L.str.701:
	.asciz	"KC_NO_SONS( kc_operator ) != kc_ext_arity ) ||\n\t\t ( KC_ATOMICITY( kc_operator) != (kc_ext_atomicity!=0) )\n\t       )\n\t\tthrow IO_exception(KC_CSGIOSTATUS_GRAM_INCONSISTENT, kc_str_conc2(\"proble"
	.size	.L.str.701, 192

	.type	.L.str.702,@object              # @.str.702
.L.str.702:
	.asciz	"ms with operator: \",kc_ext_name)) ;\n\t    else {\n\t\tKC_MAKE_NEW_MAPPING( kc_no_external_ops, kc_operator );\n\t\tkc_no_external_ops++;\n    }\t}   }\n    /* ascertain that we are at the $object"
	.size	.L.str.702, 186

	.type	.L.str.703,@object              # @.str.703
.L.str.703:
	.asciz	" section, or get to that point */\n    if ( strcmp( kc_ext_name, \"$object\" ) != 0 ) /* if not at $object */\n\twhile ( strcmp( kc_ext_name, \"object\" ) != 0 ) {\n\t    if ( fscanf( kc_stream, \""
	.size	.L.str.703, 188

	.type	.L.str.704,@object              # @.str.704
.L.str.704:
	.asciz	"%*[^$]$%[^ ]\", kc_ext_name ) != 1 )\n\t\tthrow IO_exception(KC_CSGIOSTATUS_GRAM_INCONSISTENT, kc_str_conc2(\"problems finding start of object section\",\"\")) ;\n\t}\n\n    /* read node_count; se"
	.size	.L.str.704, 185

	.type	.L.str.705,@object              # @.str.705
.L.str.705:
	.asciz	"t up address map */\n    if (fscanf(kc_stream, \"%d %d\\n\", &kc_node_count, &kc_node_count_base) != 2)\n\tthrow IO_exception(KC_CSGIOSTATUS_SCAN_ERR_1);\n    kc_init_read_sharing(); /* for shared"
	.size	.L.str.705, 190

	.type	.L.str.706,@object              # @.str.706
.L.str.706:
	.asciz	" values */\n\n    /* read the tree (actually a graph) */\n    kc_ptr = CSGIOread2dft( kc_stream, kc_phy );\n    kc_end_read_sharing(); /* for atomic values */\n}\n#endif // ! KC_NO_CSGIO_RE"
	.size	.L.str.706, 184

	.type	.L.str.707,@object              # @.str.707
.L.str.707:
	.asciz	"AD\n\n#ifndef KC_NO_CSGIO_WRITE\nnamespace { // all local to this file\n\r\n\n// print a string to a file, escaping backslashes and non-printables\nvoid\nkc_print_to_file(FILE *kc_f, ch"
	.size	.L.str.707, 177

	.type	.L.str.708,@object              # @.str.708
.L.str.708:
	.asciz	"ar const* kc_value)\n{\n    unsigned char const* kc_vptr = (unsigned char const*)kc_value;\n    int kc_len = strlen(kc_value);\n    int kc_i;\n\n    fprintf(kc_f, \"%d \", kc_len);\n    f"
	.size	.L.str.708, 179

	.type	.L.str.709,@object              # @.str.709
.L.str.709:
	.asciz	"or (kc_i=0; kc_i<kc_len; kc_i++, kc_vptr++) {\n\tif (*kc_vptr == '\\\\') {\n\t    fprintf(kc_f, \"\\\\\\\\\");\n\t} else if (isprint(*kc_vptr)) {\n\t    putc((char)*kc_vptr, kc_f);\n\t} else {\n"
	.size	.L.str.709, 176

	.type	.L.str.710,@object              # @.str.710
.L.str.710:
	.asciz	"\t    fprintf(kc_f, \"\\\\%.2x\", *kc_vptr);\n\t}\n    }\n    putc('\\n', kc_f);\n}\n\nvoid\nkc_print_b64_to_file(FILE *kc_f, int kc_value)\n{\n    unsigned int kc_pos_value;\n\n   "
	.size	.L.str.710, 164

	.type	.L.str.711,@object              # @.str.711
.L.str.711:
	.asciz	" if (kc_value == 0) {\n\tputc(KC_B64_ZERO_CHAR, kc_f);\n    } else {\n\tkc_pos_value = abs(kc_value);\n\twhile (kc_pos_value != 0) {\n\t    putc((kc_pos_value & ((1 << 6) - 1) ) + KC_B64_ZERO_CHA"
	.size	.L.str.711, 187

	.type	.L.str.712,@object              # @.str.712
.L.str.712:
	.asciz	"R, kc_f);\n\t    kc_pos_value >>= 6;\n\t}\n\tif (kc_value < 0) {\n\t    putc('-', kc_f);\n\t}\n    }\n    putc('\\n', kc_f);\n}\n\n// realize sharing of strings in ouput file\nvoid\n"
	.size	.L.str.712, 165

	.type	.L.str.713,@object              # @.str.713
.L.str.713:
	.asciz	"kc_CSGIOscan(c_abstract_phylum kc_p)\n{\n    if (kc_p==0) return;\n    enum_operators kc_op = kc_p->prod_sel();\n    if (kc_CSGIOhashtable[kc_p].number == -1) {\n\tkc_CSGIOhashtable[kc_p].numb"
	.size	.L.str.713, 187

	.type	.L.str.714,@object              # @.str.714
.L.str.714:
	.asciz	"er = kc_node_count++;\n\tKC_MAKE_NEW_SCAN_MAPPING( kc_op );\n\tswitch(kc_op) {\n\tcase sel__Str:\n\tcase sel_NoCaseStr: {\n\t    char const* s = static_cast<c_casestring>(kc_p)->name;\n\t    if ("
	.size	.L.str.714, 184

	.type	.L.str.715,@object              # @.str.715
.L.str.715:
	.asciz	"kc_CSGIOhashtable[s].number == -1)\013\n\t\tkc_CSGIOhashtable[s].number = kc_node_count_base++;\r\n\t    break;\n\t}\n        default: {\n\t    abstract_phylum child;\n            for (int i=0; (c"
	.size	.L.str.715, 182

	.type	.L.str.716,@object              # @.str.716
.L.str.716:
	.asciz	"hild = kc_p->subphylum(i)); ++i)\013\n\t\tkc_CSGIOscan(child);\r\n\t}\n\t}\n\tfor (int i=0; i<operator_info[kc_op].no_attrs; ++i)\013\n\t    kc_CSGIOscan(attributeOf(const_cast<abstract_phylum>(kc_p), "
	.size	.L.str.716, 184

	.type	.L.str.717,@object              # @.str.717
.L.str.717:
	.asciz	"i));\r\n    }\n}\n\nvoid\nkc_CSGIOwrite2structure(FILE *kc_stream, c_abstract_phylum kc_p)\n{\n    if (kc_p==0) {\n\tfprintf( kc_stream, \"%c\\n\", KC_NULL_POINTER );\n\treturn;\n    "
	.size	.L.str.717, 168

	.type	.L.str.718,@object              # @.str.718
.L.str.718:
	.asciz	"}\n    char _kc_value[30];\n    char *kc_value = _kc_value;\n    enum_operators kc_op = kc_p->prod_sel();\n    csgio_info &kc_hn = kc_CSGIOhashtable[kc_p];\n    if (kc_hn.created) {\n\tkc_pr"
	.size	.L.str.718, 184

	.type	.L.str.719,@object              # @.str.719
.L.str.719:
	.asciz	"int_b64_to_file( kc_stream, kc_file_offset - kc_hn.number );\n    } else {\n\tkc_hn.created = true;\n\tfprintf( kc_stream, \"%d\\n\", KC_MAP( kc_op ) );\n\tkc_file_offset++;\n\tswitch(kc_op) {\r\n"
	.size	.L.str.719, 183

	.type	.L.str.720,@object              # @.str.720
.L.str.720:
	.asciz	"\tcase sel__VoidPtr:\013\n\t    /* FATAL ERROR */\n\t    sprintf( kc_value, \"%p\", static_cast<c_voidptr>(kc_p)->pointer);\n\t    kc_print_to_file( kc_stream, kc_value );\n\t    kc_file_offset_base++"
	.size	.L.str.720, 187

	.type	.L.str.721,@object              # @.str.721
.L.str.721:
	.asciz	";\n\t    break;\r\n\tcase sel__Str:\n\tcase sel_NoCaseStr:\013\n\t    fprintf( kc_stream, \"%c\", KC_NON_B64_CHAR );\n\t    kc_print_to_file( kc_stream, static_cast<c_casestring>(kc_p)->name);\n\t "
	.size	.L.str.721, 180

	.type	.L.str.722,@object              # @.str.722
.L.str.722:
	.asciz	"   kc_file_offset_base++;\n\t    break;\r\n\tcase sel__Int:\013\n\t    sprintf( kc_value, \"%d\", static_cast<c_integer>(kc_p)->value);\n\t    kc_print_to_file( kc_stream, kc_value );\n\t    kc_file"
	.size	.L.str.722, 183

	.type	.L.str.723,@object              # @.str.723
.L.str.723:
	.asciz	"_offset_base++;\n\t    break;\r\n\tcase sel__Real:\013\n\t    sprintf( kc_value, \"%.20f\", static_cast<c_real>(kc_p)->value);\n\t    kc_print_to_file( kc_stream, kc_value );\n\t    kc_file_offset_b"
	.size	.L.str.723, 183

	.type	.L.str.724,@object              # @.str.724
.L.str.724:
	.asciz	"ase++;\n\t    break;\r\n\tdefault:\n            abstract_phylum child;\n            for (int kc_i=0; (child = kc_p->subphylum(kc_i)); ++kc_i)\013\n\t\tkc_CSGIOwrite2structure(kc_stream, child);\r\n"
	.size	.L.str.724, 183

	.type	.L.str.725,@object              # @.str.725
.L.str.725:
	.asciz	"\t    // Write attributes\n\t    for (int kc_i=0; kc_i<operator_info[kc_op].no_attrs; ++kc_i)\013\n\t\tkc_CSGIOwrite2structure(kc_stream, attributeOf(const_cast<abstract_phylum>(kc_p), kc_i));\r\n\t}\n"
	.size	.L.str.725, 189

	.type	.L.str.726,@object              # @.str.726
.L.str.726:
	.asciz	"    }\n}\n\nvoid\nCSGIOwrite(FILE *kc_stream, c_abstract_phylum kc_p)\n{\n    int kc_i;\n    kc_csgio_err_reason = \"\";\n\n    /* write out the magic string and $operators string */\n"
	.size	.L.str.726, 173

	.type	.L.str.727,@object              # @.str.727
.L.str.727:
	.asciz	"    fprintf( kc_stream, \"%s\\n$operators \\n\", kc_ascii_prefix_magic_hu );\n\n    /* Initialize map from internal operators to external operators, */\n    /* initially empty */\n    kc_no_ext"
	.size	.L.str.727, 186

	.type	.L.str.728,@object              # @.str.728
.L.str.728:
	.asciz	"ernal_ops = 0;\n    kc_node_count = 0;\n    kc_node_count_base = 0;\n    kc_initializeOpToOpMap(0); /* initialize to 0, not any other value */\n\n    // realize sharing\n    kc_CSGIOscan(kc"
	.size	.L.str.728, 184

	.type	.L.str.729,@object              # @.str.729
.L.str.729:
	.asciz	"_p);\n    /* sort the optoopmap on decreasing operator usage */\n    std::sort(&kc_OpToOpMap[0], &kc_OpToOpMap[KC_NO_OF_OPERATORS], OpToOpMap_cmp_right);\n    kc_renumberOpToOpMap();\n\n    /"
	.size	.L.str.729, 187

	.type	.L.str.730,@object              # @.str.730
.L.str.730:
	.asciz	"* write out the _sorted_ operator table */\n    for(kc_i = 0; kc_i < KC_NO_OF_OPERATORS; kc_i++) {\n\tif (kc_OpToOpMap[kc_i].right != KC_NOT_USED) {\n\t    fprintf( kc_stream, \"%s %d %d %d\\n\", K"
	.size	.L.str.730, 190

	.type	.L.str.731,@object              # @.str.731
.L.str.731:
	.asciz	"C_OP_NAME( kc_OpToOpMap[kc_i].left), KC_NO_SONS( kc_OpToOpMap[kc_i].left ), 0, KC_ATOMICITY( kc_OpToOpMap[kc_i].left ) );\n    }\t}\n\n    /* sort the optoopmap increasing on the operator number *"
	.size	.L.str.731, 193

	.type	.L.str.732,@object              # @.str.732
.L.str.732:
	.asciz	"/\n    std::sort(&kc_OpToOpMap[0], &kc_OpToOpMap[KC_NO_OF_OPERATORS], OpToOpMap_cmp_left);\n\n    /* write out the grammar terminator string and the number of nodes */\n    fprintf( kc_stream, "
	.size	.L.str.732, 190

	.type	.L.str.733,@object              # @.str.733
.L.str.733:
	.asciz	"\"$object \\n%d %d\\n\", kc_node_count, kc_node_count_base );\n\n    /* write out the tree */\n    kc_file_offset = 0;\n    kc_file_offset_base = 0;\n    kc_CSGIOwrite2structure( kc_stream, k"
	.size	.L.str.733, 183

	.type	.L.str.734,@object              # @.str.734
.L.str.734:
	.asciz	"c_p);\n    kc_CSGIOhashtable.clear();\n}\n\n} // anonymous namespace\n\nvoid\nimpl_abstract_phylum::CSGIOwrite(FILE *kc_stream) const\n{\n    kc::CSGIOwrite(kc_stream, this);\n}\n"
	.size	.L.str.734, 169

	.type	.L.str.735,@object              # @.str.735
.L.str.735:
	.asciz	"\n#endif // ! KC_NO_CSGIO_WRITE\n\n"
	.size	.L.str.735, 33

	.type	.L.str.736,@object              # @.str.736
.L.str.736:
	.asciz	"\n */\n#define KC_CSGIO\n"
	.size	.L.str.736, 23

	.type	.L.str.737,@object              # @.str.737
.L.str.737:
	.asciz	"\n#include <stdio.h>\n#include <setjmp.h>\n#include <ctype.h>\n#include <stdlib.h>\n#include <map>\n#include <algorithm>\n#include \""
	.size	.L.str.737, 126

	.type	.L.str.738,@object              # @.str.738
.L.str.738:
	.asciz	"csgiok.h\"\n\n"
	.size	.L.str.738, 12

	.type	.L.str.739,@object              # @.str.739
.L.str.739:
	.asciz	"\nextern const char *kc_csgio_err_reason;\n\ntypedef enum {\n    KC_CSGIOSTATUS_NO_ERR = 0,\n    KC_CSGIOSTATUS_SCAN_ERR_1, KC_CSGIOSTATUS_SCAN_ERR_2, KC_CSGIOSTATUS_SCAN_ERR_3,\n    KC_CSG"
	.size	.L.str.739, 184

	.type	.L.str.740,@object              # @.str.740
.L.str.740:
	.asciz	"IOSTATUS_SCAN_ERR_4, KC_CSGIOSTATUS_SCAN_ERR_5, KC_CSGIOSTATUS_GRAM_INCONSISTENT,\n    KC_CSGIOSTATUS_ROK, KC_CSGIOSTATUS_ILLEGAL_OPTION, KC_CSGIOSTATUS_TOO_MANY_OPERATORS,\n    KC_CSGIOSTATUS_WOK,"
	.size	.L.str.740, 196

	.type	.L.str.741,@object              # @.str.741
.L.str.741:
	.asciz	" KC_CSGIOSTATUS_TXT_FILE_INPUT, KC_CSGIOSTATUS_SYNTAX_ERROR,\n    KC_CSGIOSTATUS_ILLEGAL_CONTEXT, KC_CSGIOSTATUS_PREMATURE_EOF,\n    KC_CSGIOSTATUS_UNEXP_FATHER_MARK\n} KC_IO_STATUS;\n\n// XX"
	.size	.L.str.741, 187

	.type	.L.str.742,@object              # @.str.742
.L.str.742:
	.asciz	"X Needs to be extended\nstruct IO_exception {\n    IO_exception(KC_IO_STATUS _io_status, const char* _err_reason=kc_csgio_err_reason, int _line=0)\n\t: io_status(_io_status), err_reason(_err_reaso"
	.size	.L.str.742, 193

	.type	.L.str.743,@object              # @.str.743
.L.str.743:
	.asciz	"n), line(_line) { }\n    KC_IO_STATUS io_status;\n    const char *err_reason;\n    int line;\n};\n\nchar* IO_exception2char(IO_exception);\n\n#if defined(__GNUC__) && __GNUC__<3\n    "
	.size	.L.str.743, 175

	.type	.L.str.744,@object              # @.str.744
.L.str.744:
	.asciz	"extern void CSGIOreadphylum(FILE*, abstract_phylum&, enum_phyla);\n#endif\n\ntemplate<typename P> void\nCSGIOread(FILE* kc_stream, P &kc_p)\n{\n    abstract_phylum kc_value;\n#if !(define"
	.size	.L.str.744, 181

	.type	.L.str.745,@object              # @.str.745
.L.str.745:
	.asciz	"d(__GNUC__) && __GNUC__<3)\n    extern void CSGIOreadphylum(FILE*, abstract_phylum&, enum_phyla);\n#endif\n    CSGIOreadphylum( kc_stream, kc_value, kc_p->phylum_sel_ );\n    // Cast _could_ be"
	.size	.L.str.745, 190

	.type	.L.str.746,@object              # @.str.746
.L.str.746:
	.asciz	" static, but just to be completely sure\n    if (dynamic_cast<P>(kc_value)==0)\n\tthrow IO_exception(KC_CSGIOSTATUS_SCAN_ERR_5, \"Internal problem: Wrong phylum type created.\");\n    kc_p = dynam"
	.size	.L.str.746, 191

	.type	.L.str.747,@object              # @.str.747
.L.str.747:
	.asciz	"ic_cast<P>(kc_value);\n}\n\n"
	.size	.L.str.747, 26

	.type	.L.str.748,@object              # @.str.748
.L.str.748:
	.asciz	" #endif // KC_CSGIO_HEADER\n\n"
	.size	.L.str.748, 29

	.type	.L.str.749,@object              # @.str.749
.L.str.749:
	.asciz	"\n */\n#ifndef KC_CSGIO_HEADER\n#define KC_CSGIO_HEADER\n#include \""
	.size	.L.str.749, 64

	.type	.L.str.750,@object              # @.str.750
.L.str.750:
	.asciz	"\n#ifndef KC_PRINTDOT_LABELSIZE\n# define KC_PRINTDOT_LABELSIZE 1023\n#endif\n\nclass impl_kc_dotedgenode_t\n{\npublic:\n    impl_kc_dotedgenode_t(c_abstract_phylum from,c_abstract_phyl"
	.size	.L.str.750, 178

	.type	.L.str.751,@object              # @.str.751
.L.str.751:
	.asciz	"um to, int _son_nr):\n\tptr_from(from), ptr_to(to), son_nr(_son_nr), label(0), lsize(0), next(0) { }\n    c_abstract_phylum ptr_from;\n    c_abstract_phylum ptr_to;\n    int son_nr;\n    char "
	.size	.L.str.751, 187

	.type	.L.str.752,@object              # @.str.752
.L.str.752:
	.asciz	"*label;\n    int lsize;\n    kc_dotedgenode_t next;\n};\n\nstatic kc_dotedgenode_t\nkc_mkdotedgenode(struct kc_dotedge_ht*, c_abstract_phylum, c_abstract_phylum, int);\nstatic void kc_do_"
	.size	.L.str.752, 181

	.type	.L.str.753,@object              # @.str.753
.L.str.753:
	.asciz	"printdot_do_add_edge (c_abstract_phylum, c_abstract_phylum, int, int*, kc_dotedgenode_t*, const char*);\nstatic void kc_do_printdot_subgraph_prologue (FILE*, c_abstract_phylum, const char*, const cha"
	.size	.L.str.753, 199

	.type	.L.str.754,@object              # @.str.754
.L.str.754:
	.asciz	"r*, bool, bool);\nstatic void kc_do_printdot_subgraph_epilogue (FILE*);\nstatic void kc_do_printdot_genfields (FILE*, int, bool);\nstatic void kc_do_printdot_edges (FILE*, kc_dotedgenode_t, const"
	.size	.L.str.754, 193

	.type	.L.str.755,@object              # @.str.755
.L.str.755:
	.asciz	" char*, bool);\n\nstatic bool\nkc_dotedge_less(kc_dotedgenode_t p1, kc_dotedgenode_t p2)\n{\n    if(p2==0)\n\treturn false;\n    if(p1==0)\n\treturn true;\n    if(p1->ptr_from<p2->ptr_f"
	.size	.L.str.755, 175

	.type	.L.str.756,@object              # @.str.756
.L.str.756:
	.asciz	"rom)\n\treturn true;\n    if(p1->ptr_from>p2->ptr_from)\n\treturn false;\n    if(p1->ptr_to<p2->ptr_to)\n\treturn true;\n    if(p1->ptr_to>p2->ptr_to)\n\treturn false;\n    if(p1->son_nr<p2"
	.size	.L.str.756, 178

	.type	.L.str.757,@object              # @.str.757
.L.str.757:
	.asciz	"->son_nr)\n\treturn true;\n    // OPERATORHASH((unsigned) kc_phy_from);\n    // OPERATORHASH((unsigned) kc_phy_to);\n    return false;\n}\n\ntemplate<typename T>\nstruct dotedge_less : s"
	.size	.L.str.757, 178

	.type	.L.str.758,@object              # @.str.758
.L.str.758:
	.asciz	"td::binary_function<T, T, bool> {\n    bool operator()(const T& X, const T& Y) const { return kc_dotedge_less(X,Y); }\n};\n\nstruct kc_dotedge_ht: public std::set<kc_dotedgenode_t, dotedge_less"
	.size	.L.str.758, 190

	.type	.L.str.759,@object              # @.str.759
.L.str.759:
	.asciz	"<kc_dotedgenode_t> > {\n\t~kc_dotedge_ht() {\n\t\tfor(iterator i=begin();i!=end();++i)\n\t\t\tdelete const_cast<kc_dotedgenode_t>(*i);\n\t\tclear();\n\t}\n    kc_dotedgenode_t check_insert(kc_dotedg"
	.size	.L.str.759, 184

	.type	.L.str.760,@object              # @.str.760
.L.str.760:
	.asciz	"enode_t t) {\n        std::pair<iterator,bool> res=insert(t);\n        return *res.first;\n    }\n};\n\nstatic kc_dotedge_ht* fprintdot_hashtable;\n"
	.size	.L.str.760, 142

	.type	.L.str.761,@object              # @.str.761
.L.str.761:
	.asciz	"\n\nkc_dotedgenode_t\nkc_mkdotedgenode(kc_dotedge_ht* kc_a_ht, c_abstract_phylum kc_s_from, c_abstract_phylum kc_s_to, int kc_son_nr)\n{\n    kc_dotedgenode_t kc_x = new impl_kc_dotedgenode_t"
	.size	.L.str.761, 187

	.type	.L.str.762,@object              # @.str.762
.L.str.762:
	.asciz	"(kc_s_from,kc_s_to,kc_son_nr);\n \tkc_dotedgenode_t unique_kc_x=kc_a_ht->check_insert(kc_x);\n\tif(unique_kc_x!=kc_x) {\n\t\tdelete kc_x;\n\t\tkc_x=unique_kc_x;\n\t}\n    return kc_x;\n}\n\n"
	.size	.L.str.762, 175

	.type	.L.str.763,@object              # @.str.763
.L.str.763:
	.asciz	"void kc_do_printdot_subgraph_prologue(FILE *kc_f, c_abstract_phylum kc_p, const char *root_label_prefix, const char *edge_attributes, bool print_node_labels, bool use_context_when_sharing_leaves)\n{\n"
	.size	.L.str.763, 199

	.type	.L.str.764,@object              # @.str.764
.L.str.764:
	.asciz	"    if (!kc_f) kc_f = stdout;\n    fprintf(kc_f, \"/*subgraph*/ {\\n\");\n    if (root_label_prefix) {\n\tfprintf(kc_f, \"\\\"%s\\\" [shape=ellipse\", root_label_prefix);\n\tif (edge_attributes &"
	.size	.L.str.764, 181

	.type	.L.str.765,@object              # @.str.765
.L.str.765:
	.asciz	"& (strlen(edge_attributes) > 0)) {\n\t    fprintf(kc_f, \", %s\", edge_attributes);\n\t}\n\tif (print_node_labels) {\n\t    fprintf(kc_f, \", label=\\\"%s\\\\n%s\\\"\", root_label_prefix, phylum_in"
	.size	.L.str.765, 180

	.type	.L.str.766,@object              # @.str.766
.L.str.766:
	.asciz	"fo[kc_p->phylum()].name);\n\t}\n\tfprintf(kc_f, \"];\\n\");\n\tfprintf(kc_f, \"\\\"%s\\\" ->\", root_label_prefix);\n\tkc_p->do_printdot_id(kc_f, use_context_when_sharing_leaves, 0, 0);\n\tif (edg"
	.size	.L.str.766, 178

	.type	.L.str.767,@object              # @.str.767
.L.str.767:
	.asciz	"e_attributes && (strlen(edge_attributes) > 0)) {\n\t    fprintf(kc_f, \"[%s]\", edge_attributes);\n\t}\n\tfprintf(kc_f, \";\\n\");\n    }\n}\n\nvoid kc_do_printdot_subgraph_epilogue(FILE *kc"
	.size	.L.str.767, 176

	.type	.L.str.768,@object              # @.str.768
.L.str.768:
	.asciz	"_f)\n{\n    if (!kc_f) kc_f = stdout;\n    fprintf(kc_f, \"}\\n\");\n}\n\nvoid fprintdotprologue(FILE *kc_f)\n{\n    if (!kc_f) kc_f = stdout;\n    fprintf(kc_f, \"digraph kc_output{\\n"
	.size	.L.str.768, 172

	.type	.L.str.769,@object              # @.str.769
.L.str.769:
	.asciz	"\");\n    fprintf(kc_f, \"node [shape=record, height=.1, fontname=Helvetica];\\n\");\n}\n\nvoid fprintdotepilogue(FILE *kc_f)\n{\n    if (!kc_f) kc_f = stdout;\n    fprintf(kc_f, \"}\\n\""
	.size	.L.str.769, 174

	.type	.L.str.770,@object              # @.str.770
.L.str.770:
	.asciz	");\n}\n\nvoid kc_do_printdot_genfields(FILE *kc_f, int kc_prodsel, bool print_node_labels)\n{\n  int kc_i = 1;\n  KC_OPERATOR_INFO *kc_op_info = &operator_info[kc_prodsel];\n  if (kc_op_i"
	.size	.L.str.770, 181

	.type	.L.str.771,@object              # @.str.771
.L.str.771:
	.asciz	"nfo->no_sons <= 0) return;\n  if (!kc_f) kc_f = stdout;\n  while(kc_i < kc_op_info->no_sons) {\n    fprintf(kc_f, \"<f%d>\", kc_i);\n    if (print_node_labels) {\n      fprintf(kc_f, \"%s\", "
	.size	.L.str.771, 183

	.type	.L.str.772,@object              # @.str.772
.L.str.772:
	.asciz	"phylum_info[kc_op_info->subphylum[kc_i-1]].name);\n    }\n    fprintf(kc_f, \"|\");\n    kc_i++;\n  }\n  fprintf(kc_f, \"<f%d>\", kc_i);\n  if (print_node_labels) {\n    fprintf(kc_f, \"%"
	.size	.L.str.772, 176

	.type	.L.str.773,@object              # @.str.773
.L.str.773:
	.asciz	"s\", phylum_info[kc_op_info->subphylum[kc_i-1]].name);\n  }\n}\n\nvoid impl_abstract_phylum::do_printdot_id(FILE *kc_f, bool use_context_when_sharing_leaves, c_abstract_phylum kc_ctxt, int kc_s"
	.size	.L.str.773, 189

	.type	.L.str.774,@object              # @.str.774
.L.str.774:
	.asciz	"on_nr) const\n{\n    // The casts only make unique ids, so reinterpret_cast is alright\n    if (!kc_f) kc_f = stdout;\n    enum_phyla kc_phy = phylum();\n    if (kc_phy == phylum_voidptr) {\n"
	.size	.L.str.774, 186

	.type	.L.str.775,@object              # @.str.775
.L.str.775:
	.asciz	"\tfprintf(kc_f, \"kcidp%x\", reinterpret_cast<int>(this));\n\tif (use_context_when_sharing_leaves) {\n\t    fprintf(kc_f, \"_%x_%d\", reinterpret_cast<int>(kc_ctxt), kc_son_nr);\n\t}\n    } else if"
	.size	.L.str.775, 186

	.type	.L.str.776,@object              # @.str.776
.L.str.776:
	.asciz	" ((kc_phy == phylum_casestring) || (kc_phy == phylum_nocasestring)) {\n\tfprintf(kc_f, \"kcids%x\", reinterpret_cast<int>(this));\n\tif (use_context_when_sharing_leaves) {\n\t    fprintf(kc_f, \"_%x"
	.size	.L.str.776, 190

	.type	.L.str.777,@object              # @.str.777
.L.str.777:
	.asciz	"_%d\", reinterpret_cast<int>(kc_ctxt), kc_son_nr);\n\t}\n    } else if (kc_phy == phylum_integer) {\n\tfprintf(kc_f, \"kcidi%x\", reinterpret_cast<int>(this));\n\tif (use_context_when_sharing_leav"
	.size	.L.str.777, 187

	.type	.L.str.778,@object              # @.str.778
.L.str.778:
	.asciz	"es) {\n\t    fprintf(kc_f, \"_%x_%d\", reinterpret_cast<int>(kc_ctxt), kc_son_nr);\n\t}\n    } else if (kc_phy == phylum_real) {\n\tfprintf(kc_f, \"kcidf%x\", reinterpret_cast<int>(this));\n\tif "
	.size	.L.str.778, 183

	.type	.L.str.779,@object              # @.str.779
.L.str.779:
	.asciz	"(use_context_when_sharing_leaves) {\n\t    fprintf(kc_f, \"_%x_%d\", reinterpret_cast<int>(kc_ctxt), kc_son_nr);\n\t}\n    } else {\n\tfprintf(kc_f, \"kcidx%x\", reinterpret_cast<int>(this));\n}"
	.size	.L.str.779, 183

	.type	.L.str.780,@object              # @.str.780
.L.str.780:
	.asciz	"   }\n\nvoid kc_do_printdot_do_add_edge(c_abstract_phylum kc_p, c_abstract_phylum kc_sub_p, int kc_son_nr, int *kc_edge_nr, kc_dotedgenode_t *kc_edges, const char *edge_label_prefix)\n{\n    kc"
	.size	.L.str.780, 190

	.type	.L.str.781,@object              # @.str.781
.L.str.781:
	.asciz	"_dotedgenode_t kc_hn;\n    char kc_buf[30];\n    kc_hn = kc_mkdotedgenode(fprintdot_hashtable, kc_p, kc_sub_p, kc_son_nr);\n    if (! kc_hn->label) {\n\t\tkc_hn->label = new char[(size_t)(KC_PRIN"
	.size	.L.str.781, 190

	.type	.L.str.782,@object              # @.str.782
.L.str.782:
	.asciz	"TDOT_LABELSIZE+1)];\n\tkc_hn->lsize = KC_PRINTDOT_LABELSIZE;\n\tstrcpy(kc_hn->label, \"\");\n\tkc_hn->next = *kc_edges;\n\t*kc_edges = kc_hn;\n    } else {\n\tchar kc_buf2[30];\n\tsprintf(kc_bu"
	.size	.L.str.782, 179

	.type	.L.str.783,@object              # @.str.783
.L.str.783:
	.asciz	"f2, \", \");\n\tstrncat(kc_hn->label, kc_buf2, kc_hn->lsize - strlen(kc_hn->label));\n    }\n    if (edge_label_prefix) {\n\tstrncat(kc_hn->label, edge_label_prefix, kc_hn->lsize - strlen(kc_hn->"
	.size	.L.str.783, 188

	.type	.L.str.784,@object              # @.str.784
.L.str.784:
	.asciz	"label));\n    }\n    sprintf(kc_buf, \"%d\", *kc_edge_nr);\n    strncat(kc_hn->label, kc_buf, kc_hn->lsize - strlen(kc_hn->label));\n    (*kc_edge_nr)++;\n}\n\nvoid impl_abstract_phylum::"
	.size	.L.str.784, 179

	.type	.L.str.785,@object              # @.str.785
.L.str.785:
	.asciz	"printdot_add_edge(c_abstract_phylum kc_sub_p, int kc_son_nr, int *kc_edge_nr, kc_dotedgenode_t *kc_edges, const char *edge_label_prefix) const\n{\n  kc_do_printdot_do_add_edge(this, kc_sub_p, kc_so"
	.size	.L.str.785, 196

	.type	.L.str.786,@object              # @.str.786
.L.str.786:
	.asciz	"n_nr, kc_edge_nr, kc_edges, edge_label_prefix);\n}\n\nvoid kc_do_printdot_edges(FILE *kc_f, kc_dotedgenode_t kc_edges, const char *edge_attributes, bool use_context_when_sharing_leaves)\n{\n "
	.size	.L.str.786, 187

	.type	.L.str.787,@object              # @.str.787
.L.str.787:
	.asciz	"   kc_dotedgenode_t kc_p = kc_edges;\n    if (!kc_f) kc_f = stdout;\n    while(kc_p) {\n\tkc_p->ptr_from->do_printdot_id(kc_f, use_context_when_sharing_leaves, 0, 0);\n\tfprintf(kc_f, \":f%d -> \""
	.size	.L.str.787, 189

	.type	.L.str.788,@object              # @.str.788
.L.str.788:
	.asciz	", kc_p->son_nr);\n\tkc_p->ptr_to->do_printdot_id(kc_f, use_context_when_sharing_leaves, kc_p->ptr_from, kc_p->son_nr);\n\tfprintf(kc_f, \" [label=\\\"%s\\\"\", kc_p->label);\n\tif (edge_attributes &"
	.size	.L.str.788, 187

	.type	.L.str.789,@object              # @.str.789
.L.str.789:
	.asciz	"& (strlen(edge_attributes) > 0)) {\n\t    fprintf(kc_f, \", %s\", edge_attributes);\n\t}\n\tfprintf(kc_f, \"];\\n\");\n\tkc_p = kc_p->next;\n}   }\n\nvoid impl_abstract_phylum::do_printdot(FI"
	.size	.L.str.789, 176

	.type	.L.str.790,@object              # @.str.790
.L.str.790:
	.asciz	"LE *kc_f, bool kc_outmost, int *kc_edge_nr, kc_dotedgenode_t *kc_edges, const char *edge_label_prefix, bool print_node_labels, bool use_context_when_sharing_leaves, c_abstract_phylum kc_ctxt, int kc_so"
	.size	.L.str.790, 202

	.type	.L.str.791,@object              # @.str.791
.L.str.791:
	.asciz	"n_nr) const\n{\n    int kc_i;\n\n    if (!kc_f) kc_f = stdout;\n    switch(phylum()) {\n\tcase phylum_voidptr:\n\t    do_printdot_id(kc_f, use_context_when_sharing_leaves, kc_ctxt, kc_son_n"
	.size	.L.str.791, 181

	.type	.L.str.792,@object              # @.str.792
.L.str.792:
	.asciz	"r);\n\t    fprintf(kc_f, \" [label=\\\"%p\\\", shape=ellipse];\\n\", dynamic_cast<c_voidptr>(this)->pointer);\n\t    break;\n\tcase phylum_casestring:\n\tcase phylum_nocasestring:\n\t    do_printd"
	.size	.L.str.792, 180

	.type	.L.str.793,@object              # @.str.793
.L.str.793:
	.asciz	"ot_id(kc_f, use_context_when_sharing_leaves, kc_ctxt, kc_son_nr);\n#ifdef KC_UNICODE\n\t    fprintf(kc_f, \" [label=\\\"%s\\\", shape=ellipse];\\n\", kc_to_cstring(static_cast<c_casestring>(this)->n"
	.size	.L.str.793, 189

	.type	.L.str.794,@object              # @.str.794
.L.str.794:
	.asciz	"ame).c_str());\n#else\n\t    fprintf(kc_f, \" [label=\\\"%s\\\", shape=ellipse];\\n\", static_cast<c_casestring>(this)->name);\n#endif\n\t    break;\n\tcase phylum_integer:\n\t    do_printdot_i"
	.size	.L.str.794, 177

	.type	.L.str.795,@object              # @.str.795
.L.str.795:
	.asciz	"d(kc_f, use_context_when_sharing_leaves, kc_ctxt, kc_son_nr);\n\t    fprintf(kc_f, \" [label=\\\"%i\\\", shape=ellipse];\\n\", ((integer)this)->value);\n\t    break;\n\tcase phylum_real:\n\t    do_"
	.size	.L.str.795, 183

	.type	.L.str.796,@object              # @.str.796
.L.str.796:
	.asciz	"printdot_id(kc_f, use_context_when_sharing_leaves, kc_ctxt, kc_son_nr);\n\t    fprintf(kc_f, \" [label=\\\"%f\\\", shape=ellipse];\\n\", ((real)this)->value);\n\t    break;\n\tdefault:\n\t    if (!"
	.size	.L.str.796, 183

	.type	.L.str.797,@object              # @.str.797
.L.str.797:
	.asciz	"subphylum(0)) {\n\t\tdo_printdot_id(kc_f, use_context_when_sharing_leaves, kc_ctxt, kc_son_nr);\n\t\tfprintf(kc_f, \" [label=\\\"<f0>%s\\\"];\\n\", op_name());\n\t    } else {\n\t\tdo_printdot_id(kc_f"
	.size	.L.str.797, 183

	.type	.L.str.798,@object              # @.str.798
.L.str.798:
	.asciz	", use_context_when_sharing_leaves, kc_ctxt, kc_son_nr);\n\t\tfprintf(kc_f, \" [label=\\\"{<f0>%s|{\", op_name());\n\t\t\tkc_do_printdot_genfields(kc_f, prod_sel(), print_node_labels);\n\t\tfprintf(kc_f,"
	.size	.L.str.798, 189

	.type	.L.str.799,@object              # @.str.799
.L.str.799:
	.asciz	" \"}}\\\"];\\n\");\n                abstract_phylum child;\n\t\tfor (kc_i=0; (child = subphylum(kc_i)); kc_i++) {\n\t\t    printdot_add_edge(child, kc_i+1, kc_edge_nr, kc_edges, edge_label_prefix );\n"
	.size	.L.str.799, 188

	.type	.L.str.800,@object              # @.str.800
.L.str.800:
	.asciz	"\t\t    child->do_printdot( kc_f, false, kc_edge_nr, kc_edges, edge_label_prefix, print_node_labels, use_context_when_sharing_leaves, this, kc_i+1 );\n\t\t}\n\t    }\n    }\n}\n"
	.size	.L.str.800, 168

	.type	.L.str.801,@object              # @.str.801
.L.str.801:
	.asciz	"\nvoid fprintdotprologue ( FILE* );\nvoid fprintdotepilogue ( FILE* );\n"
	.size	.L.str.801, 70

	.type	.L.str.802,@object              # @.str.802
.L.str.802:
	.asciz	"Internal Error: unknown phylum number: "
	.size	.L.str.802, 40

	.type	.L.str.803,@object              # @.str.803
.L.str.803:
	.asciz	"Internal Error: unknown operator number: "
	.size	.L.str.803, 42

	.type	.L.str.804,@object              # @.str.804
.L.str.804:
	.asciz	"const char*\nphylumname_or_error(enum_phyla kc_phy)\n{\n    if ((kc_phy <= one_before_first_phylum) || (kc_phy >= last_phylum)) {\n\tchar *kc_strof_error;\n\tsprintf((kc_strof_error=new char["
	.size	.L.str.804, 185

	.type	.L.str.805,@object              # @.str.805
.L.str.805:
	.asciz	"]), \""
	.size	.L.str.805, 6

	.type	.L.str.806,@object              # @.str.806
.L.str.806:
	.asciz	"%d\", kc_phy);\n\treturn kc_strof_error;\n    } else {\n\treturn phylum_info[kc_phy].name;\n}   }\n\n\nconst char*\nkc_operatorname_or_error(enum_operators kc_operator)\n{\n    if ((k"
	.size	.L.str.806, 171

	.type	.L.str.807,@object              # @.str.807
.L.str.807:
	.asciz	"c_operator <= one_before_first_operator) || (kc_operator >= last_operator)) {\n\tchar *kc_strof_error;\n\tsprintf((kc_strof_error=new char["
	.size	.L.str.807, 136

	.type	.L.str.808,@object              # @.str.808
.L.str.808:
	.asciz	"%d\", kc_operator);\n\treturn kc_strof_error;\n    } else {\n\treturn operator_info[kc_operator].name;\n}   }\n\n"
	.size	.L.str.808, 105

	.type	.L.str.809,@object              # @.str.809
.L.str.809:
	.asciz	"const char *phylumname_or_error ( enum_phyla );\nconst char *kc_operatorname_or_error ( enum_operators );\n\n"
	.size	.L.str.809, 107

	.type	.L.str.810,@object              # @.str.810
.L.str.810:
	.asciz	"\nabstract_phylum\nkc_create(enum_operators createOp"
	.size	.L.str.810, 51

	.type	.L.str.811,@object              # @.str.811
.L.str.811:
	.asciz	", abstract_phylum"
	.size	.L.str.811, 18

	.type	.L.str.812,@object              # @.str.812
.L.str.812:
	.asciz	" kc_p"
	.size	.L.str.812, 6

	.type	.L.str.813,@object              # @.str.813
.L.str.813:
	.asciz	")\n{\n    switch(createOp) {\r\n    case sel__VoidPtr:\n    case sel__Int:\n    case sel__Real:\n    case sel__Str:\n    case sel_NoCaseStr:\013\n\tassertionFailed(\"Cannot create this kin"
	.size	.L.str.813, 175

	.type	.L.str.814,@object              # @.str.814
.L.str.814:
	.asciz	"d of phylum - predefined phyla must be handled seperately\");break;\n"
	.size	.L.str.814, 68

	.type	.L.str.815,@object              # @.str.815
.L.str.815:
	.asciz	"   \rdefault:\013\n\tassertionFailed(\"Cannot create this kind of phylum - unkown operator id\");\n    }\n    NORETURN\n}\n\nabstract_phylum&\nattributeOf(abstract_phylum kc_p, int no)\n{\n"
	.size	.L.str.815, 174

	.type	.L.str.816,@object              # @.str.816
.L.str.816:
	.asciz	"assertionFailed(\"Cannot select attribute for this kind of phylum - has no attributes\");\n"
	.size	.L.str.816, 89

	.type	.L.str.817,@object              # @.str.817
.L.str.817:
	.asciz	"   enum_operators kc_op = kc_p->prod_sel();\n    switch (kc_op) {\r\n"
	.size	.L.str.817, 67

	.type	.L.str.818,@object              # @.str.818
.L.str.818:
	.asciz	"   default:\013\n\tassertionFailed(\"Cannot select attribute for this kind of phylum - unkown operator id or no attributes\");\n    }\n    assertionFailed(\"Cannot select attribute for this kind of"
	.size	.L.str.818, 188

	.type	.L.str.819,@object              # @.str.819
.L.str.819:
	.asciz	" phylum - attribute number out of range\");\n"
	.size	.L.str.819, 44

	.type	.L.str.820,@object              # @.str.820
.L.str.820:
	.asciz	"    NORETURN\n}\n"
	.size	.L.str.820, 16

	.type	.L.str.821,@object              # @.str.821
.L.str.821:
	.asciz	"\nbool kc_storageclass_still_uniq[] = {\n"
	.size	.L.str.821, 40

	.type	.L.str.822,@object              # @.str.822
.L.str.822:
	.asciz	" };\n\nhashtable_t hashtables[] = {\n"
	.size	.L.str.822, 35

	.type	.L.str.823,@object              # @.str.823
.L.str.823:
	.asciz	"};\n\nconst char* kc_storageclassnames[] = { "
	.size	.L.str.823, 44

	.type	.L.str.824,@object              # @.str.824
.L.str.824:
	.asciz	" };\n\nnamespace { // all local to k.cc\n\r\n"
	.size	.L.str.824, 41

	.type	.L.str.825,@object              # @.str.825
.L.str.825:
	.asciz	"\n} // namespace\n\nenum_phyla\nimpl_abstract_phylum::phylum() const {\n\treturn operator_info[prod_sel()].phylum;\n}\n\nconst char*\nimpl_abstract_phylum::phylum_name() const {\n\tre"
	.size	.L.str.825, 172

	.type	.L.str.826,@object              # @.str.826
.L.str.826:
	.asciz	"turn phylum_info[phylum()].name;\n}\n\nconst char*\nimpl_abstract_phylum::op_name() const {\n\treturn operator_info[prod_sel()].name;\n}\n\ncasestring\nmkcasestring(const kc_char_t *kc"
	.size	.L.str.826, 175

	.type	.L.str.827,@object              # @.str.827
.L.str.827:
	.asciz	"_s, int length)\n{\n    KC_COLLECT_STATS0(KC_CREATE_STATS(sel__Str));\n\n    casestring"
	.size	.L.str.827, 84

	.type	.L.str.828,@object              # @.str.828
.L.str.828:
	.asciz	" kc_x=new impl_casestring__Str(kc_s);\n    if(length>=0) \n\t\tkc_x->make_own(length);\n\t\n    casestring unique_kc_x=hashtables[uniq]->ht_check_insert((casestring)kc_x);\n    if(unique_kc_x!=k"
	.size	.L.str.828, 187

	.type	.L.str.829,@object              # @.str.829
.L.str.829:
	.asciz	"c_x) {\n\t\tif(length<0) \n\tkc_x->name=0;\n\n"
	.size	.L.str.829, 40

	.type	.L.str.830,@object              # @.str.830
.L.str.830:
	.asciz	"\tdelete kc_x;\n"
	.size	.L.str.830, 15

	.type	.L.str.831,@object              # @.str.831
.L.str.831:
	.asciz	"\tkc_x=unique_kc_x;\n    } else {\n\tKC_COLLECT_STATS0(KC_EXISTINGNOTFOUND_STATS(sel__Str));\n\t\tif(length<0) \n\t\t\tkc_x->make_own(static_cast<int>(kc_strlen(kc_s)));\n\n\tkc_x->post_create();\n"
	.size	.L.str.831, 183

	.type	.L.str.832,@object              # @.str.832
.L.str.832:
	.asciz	"    }\n    return kc_x;\n}\n\nnocasestring\nmknocasestring(const kc_char_t *kc_s, int length)\n{\n    KC_COLLECT_STATS0(KC_CREATE_STATS(sel_NoCaseStr));\n\n    nocasestring"
	.size	.L.str.832, 164

	.type	.L.str.833,@object              # @.str.833
.L.str.833:
	.asciz	" kc_x=new impl_nocasestring_NoCaseStr(kc_s);\n\tif(length>=0)\n\t\tkc_x->make_own(length);\n    nocasestring unique_kc_x=hashtables[uniq]->ht_check_insert((nocasestring)kc_x);\n    if(unique_kc_x!"
	.size	.L.str.833, 190

	.type	.L.str.834,@object              # @.str.834
.L.str.834:
	.asciz	"=kc_x) {\n\t\tif(length<0)\n\tkc_x->name=0;\n"
	.size	.L.str.834, 40

	.type	.L.str.835,@object              # @.str.835
.L.str.835:
	.asciz	"\tkc_x=unique_kc_x;\n    } else {\n\tKC_COLLECT_STATS0(KC_EXISTINGNOTFOUND_STATS(sel_NoCaseStr));\n\t\tif(length<0)\n\t\t\tkc_x->make_own(static_cast<int>(kc_strlen(kc_s)));\n\tkc_x->post_create();\n"
	.size	.L.str.835, 186

	.type	.L.str.836,@object              # @.str.836
.L.str.836:
	.asciz	"    }\n\n    return kc_x;\n}\n\ninteger\nmkinteger(const INTEGER kc_i)\n{\n    KC_COLLECT_STATS0(KC_CREATE_STATS(sel__Int));\n\n    integer kc_x =new impl_integer__Int(kc_i);\n   "
	.size	.L.str.836, 169

	.type	.L.str.837,@object              # @.str.837
.L.str.837:
	.asciz	" integer unique_kc_x=hashtables[uniq]->ht_check_insert(kc_x);\n    if(unique_kc_x!=kc_x) {\n"
	.size	.L.str.837, 91

	.type	.L.str.838,@object              # @.str.838
.L.str.838:
	.asciz	"\tkc_x=unique_kc_x;\n    } else {\n\tKC_COLLECT_STATS0(KC_EXISTINGNOTFOUND_STATS(sel__Int));\n\tkc_x->post_create();\n    }\n\n    return kc_x;\n}\n\nreal\nmkreal(const REAL kc_r)\n{"
	.size	.L.str.838, 169

	.type	.L.str.839,@object              # @.str.839
.L.str.839:
	.asciz	"\n    KC_COLLECT_STATS0(KC_CREATE_STATS(sel__Real));\n\n    real kc_x=new impl_real__Real(kc_r);\n    real unique_kc_x=hashtables[uniq]->ht_check_insert(kc_x);\n    if(unique_kc_x!=kc_x) {\n"
	.size	.L.str.839, 185

	.type	.L.str.840,@object              # @.str.840
.L.str.840:
	.asciz	"\tkc_x=unique_kc_x;\n    } else {\n\tKC_COLLECT_STATS0(KC_EXISTINGNOTFOUND_STATS(sel__Real));\n\tkc_x->post_create();\n    }\n\n    return kc_x;\n}\n\nvoidptr\nmkvoidptr(void *kc_p)"
	.size	.L.str.840, 169

	.type	.L.str.841,@object              # @.str.841
.L.str.841:
	.asciz	"\n{\n    KC_COLLECT_STATS0(KC_CREATE_STATS(sel__VoidPtr));\n    voidptr kc_x=new impl_voidptr__VoidPtr(kc_p);\n    voidptr unique_kc_x=hashtables[uniq]->ht_check_insert(kc_x);\n    if(unique_kc"
	.size	.L.str.841, 189

	.type	.L.str.842,@object              # @.str.842
.L.str.842:
	.asciz	"_x!=kc_x) {\n"
	.size	.L.str.842, 13

	.type	.L.str.843,@object              # @.str.843
.L.str.843:
	.asciz	"\tkc_x=unique_kc_x;\n    } else {\n       KC_COLLECT_STATS0(KC_EXISTINGNOTFOUND_STATS(sel__VoidPtr));\n\tkc_x->post_create();\n    }\n    return kc_x;\n}\n\n"
	.size	.L.str.843, 148

	.type	.L.str.844,@object              # @.str.844
.L.str.844:
	.asciz	"\nabstract_phylum\nimpl_abstract_phylum::subphylum(int) const\n{\n  return 0;\n}\n\nvoid\nimpl_abstract_phylum::set_subphylum(int,abstract_phylum)\n{\n}\n\nvoid\nimpl_abstract"
	.size	.L.str.844, 163

	.type	.L.str.845,@object              # @.str.845
.L.str.845:
	.asciz	"_phylum::free(bool kc_rec)\n{\n    KC_COLLECT_STATS0(KC_FREE_CALLED_STATS(prod_sel(), kc_rec));\n"
	.size	.L.str.845, 95

	.type	.L.str.846,@object              # @.str.846
.L.str.846:
	.asciz	"\tif(get_ref())\n\t\tget_ref()->unlock();\n"
	.size	.L.str.846, 39

	.type	.L.str.847,@object              # @.str.847
.L.str.847:
	.asciz	"    if (!"
	.size	.L.str.847, 10

	.type	.L.str.848,@object              # @.str.848
.L.str.848:
	.asciz	"get_ref()"
	.size	.L.str.848, 10

	.type	.L.str.849,@object              # @.str.849
.L.str.849:
	.asciz	"phylum_info[phylum()].uniq_stored"
	.size	.L.str.849, 34

	.type	.L.str.850,@object              # @.str.850
.L.str.850:
	.asciz	") {\n"
	.size	.L.str.850, 5

	.type	.L.str.851,@object              # @.str.851
.L.str.851:
	.asciz	"\tif (kc_rec) {\n            abstract_phylum son;\n\t    for (int kc_i=0; (son = subphylum(kc_i)); kc_i++)\n\t    {\n\t\tif (son!=0) son->free(kc_rec);\n\t\tson=0;\n\t    }\n\t}\n"
	.size	.L.str.851, 163

	.type	.L.str.852,@object              # @.str.852
.L.str.852:
	.asciz	"\tKC_COLLECT_STATS0(KC_FREED_STATS(prod_sel(), kc_rec));\n\tdelete this;\n\t}\n}\n\nbool\nimpl_abstract_phylum::eq(c_abstract_phylum kc_p2) const\n{\n    if (this == kc_p2)\n\t\treturn tru"
	.size	.L.str.852, 175

	.type	.L.str.853,@object              # @.str.853
.L.str.853:
	.asciz	"e;\n    if (prod_sel() != kc_p2->prod_sel())\n\t\treturn false;\n\n    int kc_st = phylum_info[phylum()].uniq_stored;\n    if (kc_st && kc_storageclass_still_uniq[kc_st])\n\t\treturn false;\n"
	.size	.L.str.853, 181

	.type	.L.str.854,@object              # @.str.854
.L.str.854:
	.asciz	"\n    c_abstract_phylum son1;\n    for (int kc_i=0; (son1 = subphylum(kc_i)); kc_i++) {\n\tif (!son1->eq(kc_p2->subphylum(kc_i)))\n\t    return false;\n    }\n\n    return true;\n}\n\n"
	.size	.L.str.854, 173

	.type	.L.str.855,@object              # @.str.855
.L.str.855:
	.asciz	"static string kc_indentation = \"\";\nstatic const char *kc_printformat_not_nullary_open = \"%s%s(\\n\";\nstatic const char *kc_printformat_list_open = \"%s%s\\n\";\n\nstatic const char *kc_pri"
	.size	.L.str.855, 182

	.type	.L.str.856,@object              # @.str.856
.L.str.856:
	.asciz	"ntformat_not_nullary_close = \"%s)\\n\";\nstatic const char *kc_printformat_nullary = \"%s%s()\\n\";\n\nvoid\nimpl_abstract_phylum::fprint(FILE*kc_f)\n{\n    int kc_i;\n\n    if (!kc_f)"
	.size	.L.str.856, 172

	.type	.L.str.857,@object              # @.str.857
.L.str.857:
	.asciz	" kc_f = stdout;\n    abstract_list al = dynamic_cast<abstract_list>(this);\n    if (al != 0 && !al->is_nil()) {\n\tfprintf(kc_f, kc_printformat_list_open, kc_indentation.c_str(), op_name());\n\tk"
	.size	.L.str.857, 190

	.type	.L.str.858,@object              # @.str.858
.L.str.858:
	.asciz	"c_indentation+=\"| \";\n\tsubphylum(0)->fprint(kc_f);\n\tkc_indentation=kc_indentation.substr(0, kc_indentation.length()-2);\n\tphylum_cast<abstract_list>(subphylum(1))->fprint_list(kc_f);\n\tkc_in"
	.size	.L.str.858, 188

	.type	.L.str.859,@object              # @.str.859
.L.str.859:
	.asciz	"dentation=kc_indentation.substr(0, kc_indentation.length()-2);\n    } else // not list\n    switch(phylum()) {\n\tcase phylum_voidptr:\n\t    \013fprintf(kc_f, \"%s%p\\n\", kc_indentation.c_str(), "
	.size	.L.str.859, 186

	.type	.L.str.860,@object              # @.str.860
.L.str.860:
	.asciz	"static_cast<voidptr>(this)->pointer);\n\t    break;\r\n\tcase phylum_casestring:\n\tcase phylum_nocasestring:\n\t    \013fprintf(kc_f, \"%s%s\\n\", kc_indentation.c_str(), static_cast<casestring>(thi"
	.size	.L.str.860, 185

	.type	.L.str.861,@object              # @.str.861
.L.str.861:
	.asciz	"s)->name);\n\t    break;\r\n\tcase phylum_integer:\n\t    \013fprintf(kc_f, \"%s%i\\n\", kc_indentation.c_str(), static_cast<integer>(this)->value);\n\t    break;\r\n\tcase phylum_real:\n\t    \013fp"
	.size	.L.str.861, 177

	.type	.L.str.862,@object              # @.str.862
.L.str.862:
	.asciz	"rintf(kc_f, \"%s%f\\n\", kc_indentation.c_str(), static_cast<real>(this)->value);\n\t    break;\r\n\tdefault:\n\t    \013if (!subphylum(0)) {\n\t\tfprintf(kc_f, kc_printformat_nullary, kc_indentation."
	.size	.L.str.862, 185

	.type	.L.str.863,@object              # @.str.863
.L.str.863:
	.asciz	"c_str(), op_name());\n\t    } else {\n\t\tfprintf(kc_f, kc_printformat_not_nullary_open, kc_indentation.c_str(), op_name());\n\t\tkc_indentation+=\"  \";\n\t\tabstract_phylum son;\n\t\tfor (kc_i=0; (s"
	.size	.L.str.863, 185

	.type	.L.str.864,@object              # @.str.864
.L.str.864:
	.asciz	"on = subphylum(kc_i)); kc_i++) {\n\t\t    son->fprint(kc_f);\n\t\t}\n\t\tkc_indentation=kc_indentation.substr(0, kc_indentation.length()-2);\n\t\tfprintf(kc_f, kc_printformat_not_nullary_close, kc_inde"
	.size	.L.str.864, 190

	.type	.L.str.865,@object              # @.str.865
.L.str.865:
	.asciz	"ntation.c_str());\n\t    }\r\n    }\n}\n\nvoid \nimpl_abstract_phylum::print()\n{\n  fprint(stdout);\n}\n\nvoid \nimpl_abstract_list::fprint_list(FILE*kc_f)\n{\n    if (!kc_f"
	.size	.L.str.865, 159

	.type	.L.str.866,@object              # @.str.866
.L.str.866:
	.asciz	")\n\tkc_f = stdout;\n    if (this->is_nil()) {\n\tkc_indentation+=\"`-\";\n\tfprintf(kc_f, kc_printformat_nullary, kc_indentation.c_str(), op_name());\n    } else {\n\tkc_indentation+=\"|-\";\n"
	.size	.L.str.866, 179

	.type	.L.str.867,@object              # @.str.867
.L.str.867:
	.asciz	"\tfprintf(kc_f, kc_printformat_list_open, kc_indentation.c_str(), op_name());\n\tkc_indentation=kc_indentation.substr(0, kc_indentation.length()-2);\n\tkc_indentation+=\"| \";\n\tsubphylum(0)->fprint"
	.size	.L.str.867, 191

	.type	.L.str.868,@object              # @.str.868
.L.str.868:
	.asciz	"(kc_f);\n\tkc_indentation=kc_indentation.substr(0, kc_indentation.length()-2);\n\tphylum_cast<abstract_list>(subphylum(1))->fprint_list(kc_f);\n    }\n}\n\nint\nimpl_abstract_list::length()"
	.size	.L.str.868, 181

	.type	.L.str.869,@object              # @.str.869
.L.str.869:
	.asciz	" const\n{\n    int kc_length = 0;\n    c_abstract_phylum kc_p = this;\n    while((kc_p = kc_p->subphylum(1)))\n\tkc_length++;\n    return kc_length;\n}\n"
	.size	.L.str.869, 145

	.type	.L.str.870,@object              # @.str.870
.L.str.870:
	.asciz	"void impl_abstract_list::freelist() { }\n"
	.size	.L.str.870, 41

	.type	.L.str.871,@object              # @.str.871
.L.str.871:
	.asciz	"void impl_abstract_list::freelist()\n{\n    abstract_phylum kc_p = this, kc_tmp_p;\n    do {\n\tkc_tmp_p=kc_p->subphylum(1);\n\tkc_p->free(false);\n\tkc_p=kc_tmp_p;\n    } while(kc_p);\n}\n"
	.size	.L.str.871, 178

	.type	.L.str.872,@object              # @.str.872
.L.str.872:
	.asciz	"abstract_phylum\nimpl_abstract_list::do_concat(c_abstract_phylum kc_p2, enum_operators mk) const\n{\n    abstract_phylum next = subphylum(1);\n    if(!next)\n\treturn const_cast<abstract_phyl"
	.size	.L.str.872, 186

	.type	.L.str.873,@object              # @.str.873
.L.str.873:
	.asciz	"um>(kc_p2);\n    return kc_create(mk, subphylum(0), static_cast<abstract_list>(next)->do_concat(kc_p2, mk));\n}\n\nabstract_phylum\nimpl_abstract_list::do_reverse(c_abstract_phylum tail, enum"
	.size	.L.str.873, 187

	.type	.L.str.874,@object              # @.str.874
.L.str.874:
	.asciz	"_operators mk) const\n{\n    for (impl_abstract_list const* iterator_ = this; iterator_->subphylum(1) != 0;\n\t    iterator_ = static_cast<impl_abstract_list const*>(iterator_->subphylum(1)) )\n"
	.size	.L.str.874, 190

	.type	.L.str.875,@object              # @.str.875
.L.str.875:
	.asciz	"\ttail = kc_create(mk, iterator_->subphylum(0), const_cast<abstract_phylum>(tail));\n    return const_cast<abstract_phylum>(tail);\n}\n\nabstract_phylum\nimpl_abstract_list::last() const\n{\n"
	.size	.L.str.875, 184

	.type	.L.str.876,@object              # @.str.876
.L.str.876:
	.asciz	"    c_abstract_phylum kc_p = this, next = subphylum(1), nextnext;\n#ifdef _AFX\n    ASSERT(next);\n    if(!next)\n\treturn NULL;\n#else\n    if(!next){\n\tfflush(stdout);\n\tfprintf(stderr"
	.size	.L.str.876, 178

	.type	.L.str.877,@object              # @.str.877
.L.str.877:
	.asciz	", \"Internal Error: list::last was called with argument Nil%s\\n\", phylum_name());\n\texit(1);\n    }\n#endif\n    while ((nextnext = next->subphylum(1))) {\n\tkc_p = next;\n\tnext = nextnext"
	.size	.L.str.877, 181

	.type	.L.str.878,@object              # @.str.878
.L.str.878:
	.asciz	";\n    }\n    return const_cast<abstract_phylum>(kc_p->subphylum(0));/* XXX remove cast */\n}\n\nabstract_phylum\nimpl_abstract_list::do_map(abstract_phylum (*kc_fp)(abstract_phylum), enum_"
	.size	.L.str.878, 184

	.type	.L.str.879,@object              # @.str.879
.L.str.879:
	.asciz	"operators mk)\n{\n    abstract_phylum el = subphylum(0);\n    if (!el)\n\treturn this;\n    abstract_list next = static_cast<abstract_list>(subphylum(1));\n    return kc_create(mk, kc_fp(el)"
	.size	.L.str.879, 184

	.type	.L.str.880,@object              # @.str.880
.L.str.880:
	.asciz	", next->do_map(kc_fp, mk));\n}\n\nabstract_phylum\nimpl_abstract_list::do_filter(bool (*kc_fp)(abstract_phylum), enum_operators mk)\n{\n    abstract_phylum el = subphylum(0);\n    if (!el"
	.size	.L.str.880, 181

	.type	.L.str.881,@object              # @.str.881
.L.str.881:
	.asciz	")\n\treturn this;\n    abstract_list next = static_cast<abstract_list>(subphylum(1));\n    if ((*kc_fp)(el)) {\n\treturn kc_create(mk, el, next->do_filter(kc_fp, mk));\n    } else {\n\treturn "
	.size	.L.str.881, 184

	.type	.L.str.882,@object              # @.str.882
.L.str.882:
	.asciz	"next->do_filter(kc_fp, mk);\n    }\n}\n\nabstract_list\nimpl_abstract_list::do_append(abstract_phylum new_last, abstract_list eol)\n{\n    abstract_list next = this;\n    while (!next->"
	.size	.L.str.882, 178

	.type	.L.str.883,@object              # @.str.883
.L.str.883:
	.asciz	"is_nil())\n\tnext = phylum_cast<abstract_list>(next->subphylum(1));\n    next->set_subphylum(0, new_last);\n    next->set_subphylum(1, eol);\n    return next;\n}\n\nabstract_phylum\nimpl"
	.size	.L.str.883, 178

	.type	.L.str.884,@object              # @.str.884
.L.str.884:
	.asciz	"_abstract_list::do_merge(abstract_list second,abstract_phylum(*kc_fp)(abstract_phylum,abstract_phylum), enum_operators mk)\n{\n    abstract_phylum el = subphylum(0);\n    if (!el)\n\treturn this"
	.size	.L.str.884, 190

	.type	.L.str.885,@object              # @.str.885
.L.str.885:
	.asciz	";\n    abstract_phylum el2 = second->subphylum(0);\n    if (!el2)\n\treturn el2;\n    abstract_list next = static_cast<abstract_list>(subphylum(1));\n    abstract_list next2 = static_cast<abst"
	.size	.L.str.885, 187

	.type	.L.str.886,@object              # @.str.886
.L.str.886:
	.asciz	"ract_list>(second->subphylum(1));\n    return kc_create(mk, kc_fp(el,el2), next->do_merge(next2, kc_fp, mk));\n}\n\nabstract_phylum\nimpl_abstract_list::do_reduce(abstract_phylum neutral, abs"
	.size	.L.str.886, 187

	.type	.L.str.887,@object              # @.str.887
.L.str.887:
	.asciz	"tract_phylum(*kc_fp)(abstract_phylum,abstract_phylum)) {\n    abstract_phylum el = subphylum(0);\n    if (!el)\n\treturn neutral;\n    abstract_list next = static_cast<abstract_list>(subphylum(1"
	.size	.L.str.887, 190

	.type	.L.str.888,@object              # @.str.888
.L.str.888:
	.asciz	"));\n    return kc_fp(el,next->do_reduce(neutral,kc_fp));\n}\n\n"
	.size	.L.str.888, 61

	.type	.L.str.889,@object              # @.str.889
.L.str.889:
	.asciz	"\n */\n#ifndef KC_OPERATOR_CAST_HEADER\n#define KC_OPERATOR_CAST_HEADER\n#include \""
	.size	.L.str.889, 80

	.type	.L.str.890,@object              # @.str.890
.L.str.890:
	.asciz	"k.h\"         // in case a user forgets\n#include <typeinfo>   // for bad_cast\n\n"
	.size	.L.str.890, 79

	.type	.L.str.891,@object              # @.str.891
.L.str.891:
	.asciz	"#endif // KC_OPERATOR_CAST_HEADER\n\n"
	.size	.L.str.891, 36

	.type	.L.str.892,@object              # @.str.892
.L.str.892:
	.asciz	"\ncasestring mkcasestring( const kc_char_t *, int length = -1);\nnocasestring mknocasestring( const kc_char_t *, int length = -1);\ninteger mkinteger( const INTEGER );\nreal mkreal( const REAL "
	.size	.L.str.892, 190

	.type	.L.str.893,@object              # @.str.893
.L.str.893:
	.asciz	");\ninline casestring _Str( const kc_char_t * cc) { return mkcasestring(cc); }\ninline nocasestring NoCaseStr( const kc_char_t * cc) { return mknocasestring(cc); }\ninline integer _Int( const INT"
	.size	.L.str.893, 193

	.type	.L.str.894,@object              # @.str.894
.L.str.894:
	.asciz	"EGER cc) { return mkinteger(cc); }\ninline real _Real( const REAL cc) { return mkreal(cc); }\n"
	.size	.L.str.894, 93

	.type	.L.str.895,@object              # @.str.895
.L.str.895:
	.asciz	"\nvoid\nkc_no_default_in_with( const char *kc_func, int kc_line, const char *kc_file )\n{\n    fflush(stdout);\n#ifdef _AFX\n\tUSES_CONVERSION;\n\tconst _TCHAR* format=A2CT(KC_NO_DEFAULT_IN"
	.size	.L.str.895, 181

	.type	.L.str.896,@object              # @.str.896
.L.str.896:
	.asciz	"_WITH);\n\tconst _TCHAR* tkc_func=A2CT(kc_func);\n\tconst _TCHAR* tkc_file=A2CT(kc_file);\n\tTRACE( format, tkc_func, tkc_file, kc_line );\n#ifdef _DEBUG\n    if (AfxAssertFailedLine(kc_file, kc"
	.size	.L.str.896, 187

	.type	.L.str.897,@object              # @.str.897
.L.str.897:
	.asciz	"_line))\n#endif\n\tAfxDebugBreak();\n#else\n    fprintf( stderr, KC_NO_DEFAULT_IN_WITH, kc_func, kc_file, kc_line );\n#ifndef KC_NODEFAULT_NO_ABORT\n    abort();\n#else\n    exit( 1 );\n"
	.size	.L.str.897, 177

	.type	.L.str.898,@object              # @.str.898
.L.str.898:
	.asciz	"#endif\n#endif\n}\n\nvoid\nkc_returnless_function( const char *kc_func, int kc_line, const char *kc_file )\n{\n    fflush(stdout);\n#ifdef _AFX\n\tUSES_CONVERSION;\n\tconst _TCHAR* fo"
	.size	.L.str.898, 172

	.type	.L.str.899,@object              # @.str.899
.L.str.899:
	.asciz	"rmat=_T(\"Internal Error: function %s does not return a value, at %s:%d\");\n\tconst _TCHAR* tkc_func=A2CT(kc_func);\n\tconst _TCHAR* tkc_file=A2CT(kc_file);\n\tTRACE( format, tkc_func, tkc_file, kc"
	.size	.L.str.899, 191

	.type	.L.str.900,@object              # @.str.900
.L.str.900:
	.asciz	"_line );\n#ifdef _DEBUG\n    if (AfxAssertFailedLine(kc_file, kc_line))\n#endif\n\tAfxDebugBreak();\n#else\n    fprintf( stderr, \"Internal Error: function %s does not return a value, at %s:"
	.size	.L.str.900, 183

	.type	.L.str.901,@object              # @.str.901
.L.str.901:
	.asciz	"%d\", kc_func, kc_file, kc_line );\n#ifndef KC_NODEFAULT_NO_ABORT\n    abort();\n#else\n    exit( 1 );\n#endif\n#endif\n}\n\nvoid\nkc_assertionFailed(const char *kc_fn, int kc_l)\n"
	.size	.L.str.901, 169

	.type	.L.str.902,@object              # @.str.902
.L.str.902:
	.asciz	"{\n    fflush(stdout);\n#ifdef _AFX\n\tUSES_CONVERSION;\n\tconst _TCHAR* format=_T(\"Internal Error: Assertion failed at %s:%d\\n\");\n\tconst _TCHAR* tkc_func=A2CT(kc_fn);\n\tTRACE( format, tk"
	.size	.L.str.902, 181

	.type	.L.str.903,@object              # @.str.903
.L.str.903:
	.asciz	"c_func, kc_l );\n#ifdef _DEBUG\n    if (AfxAssertFailedLine(kc_fn, kc_l))\n#endif\n\tAfxDebugBreak();\n#else\n    fprintf( stderr, \"Internal Error: Assertion failed at %s:%d\\n\", kc_fn, kc"
	.size	.L.str.903, 181

	.type	.L.str.904,@object              # @.str.904
.L.str.904:
	.asciz	"_l );\n#ifndef KC_ASSERT_NO_ABORT\n    abort();\n#else\n    exit( 1 );\n#endif\n#endif\n}\n\nvoid\nkc_assertionReasonFailed(const char *kc_fn, int kc_l, const char *kc_s)\n{\n  "
	.size	.L.str.904, 166

	.type	.L.str.905,@object              # @.str.905
.L.str.905:
	.asciz	"  fflush(stdout);\n#ifdef _AFX\n\tUSES_CONVERSION;\n\tconst _TCHAR* format=_T(\"Internal Error: Assertion failed at file %s:%d: %s\\n\");\n\tconst _TCHAR* tkc_func=A2CT(kc_fn);\n\tconst _TCHAR* t"
	.size	.L.str.905, 184

	.type	.L.str.906,@object              # @.str.906
.L.str.906:
	.asciz	"kc_s=A2CT(kc_s);\n\tTRACE( format, tkc_func, kc_l, tkc_s );\n#ifdef _DEBUG\n    if (AfxAssertFailedLine(kc_fn, kc_l))\n#endif\n\tAfxDebugBreak();\n#else\n    fprintf( stderr, \"Internal Err"
	.size	.L.str.906, 180

	.type	.L.str.907,@object              # @.str.907
.L.str.907:
	.asciz	"or: Assertion failed at file %s:%d: %s\\n\", kc_fn, kc_l, kc_s );\n#ifndef KC_ASSERT_NO_ABORT\n    abort();\n#else\n    exit( 1 );\n#endif\n#endif\n}\n\nvoid\nkc_assertionNonNullFai"
	.size	.L.str.907, 170

	.type	.L.str.908,@object              # @.str.908
.L.str.908:
	.asciz	"led(const char *kc_fn, int kc_l, const char *kc_str)\n{\n    fflush(stdout);\n#ifdef _AFX\n\tUSES_CONVERSION;\n\tconst _TCHAR* format=_T(\"Internal Error: Assertion failed at %s:%d: pointer %s "
	.size	.L.str.908, 186

	.type	.L.str.909,@object              # @.str.909
.L.str.909:
	.asciz	"is NULL\\n\");\n\tconst _TCHAR* tkc_func=A2CT(kc_fn);\n\tconst _TCHAR* tkc_s=A2CT(kc_str);\n\tTRACE( format , tkc_func, kc_l, tkc_s);\n#ifdef _DEBUG\n    if (AfxAssertFailedLine(kc_fn, kc_l))\n"
	.size	.L.str.909, 183

	.type	.L.str.910,@object              # @.str.910
.L.str.910:
	.asciz	"#endif\n\tAfxDebugBreak();\n#else\n    fprintf( stderr, \"Internal Error: Assertion failed at %s:%d: pointer %s is NULL\\n\", kc_fn, kc_l, kc_str );\n#ifndef KC_ASSERT_NO_ABORT\n    abort();\n"
	.size	.L.str.910, 183

	.type	.L.str.911,@object              # @.str.911
.L.str.911:
	.asciz	"#else\n    exit( 1 );\n#endif\n#endif\n}\n\nvoid\nkc_assertionOperatorInPhylumFailed(int kc_op, const char *kc_str1, const char *kc_str2, const char *kc_phy, const char *kc_fn, int kc_l)\n"
	.size	.L.str.911, 181

	.type	.L.str.912,@object              # @.str.912
.L.str.912:
	.asciz	"{\n    fflush(stdout);\n#ifdef _AFX\n    USES_CONVERSION;\n    const _TCHAR* format=_T(\"Internal Error: Assertion failed at %s:%d: illegal value for (%s) %s%s: %d not a valid operator\\n\");\n"
	.size	.L.str.912, 186

	.type	.L.str.913,@object              # @.str.913
.L.str.913:
	.asciz	"    const _TCHAR* tkc_func=A2CT(kc_fn);\n    const _TCHAR* tkc_s1=A2CT(kc_str1);\n    const _TCHAR* tkc_s2=A2CT(kc_str2);\n    const _TCHAR* tname=A2CT(kc_phy);\n    if ((kc_op <= one_before_fi"
	.size	.L.str.913, 190

	.type	.L.str.914,@object              # @.str.914
.L.str.914:
	.asciz	"rst_operator) || (kc_op >= last_operator)) {\n\tTRACE (format, tkc_func, kc_l, tname, tkc_s1, tkc_s2, kc_op );\n    } else {\n\tformat=_T(\"Internal Error: Assertion failed at %s:%d: illegal value "
	.size	.L.str.914, 192

	.type	.L.str.915,@object              # @.str.915
.L.str.915:
	.asciz	"for (%s) %s%s: %s (%d) is a value of %s\\n\");\n\tconst _TCHAR* tname2=A2CT(operator_info[kc_op].name);\n\tconst _TCHAR* tname3=A2CT(phylum_info[operator_info[kc_op].phylum].name);\n\tTRACE(format,t"
	.size	.L.str.915, 191

	.type	.L.str.916,@object              # @.str.916
.L.str.916:
	.asciz	"kc_func, kc_l, tname, tkc_s1, tkc_s2, tname2, kc_op, tname3 );\n    }\n#ifdef _DEBUG\n\tif (AfxAssertFailedLine(kc_fn, kc_l))\n#endif\n\t\tAfxDebugBreak();\n#else\n    if ((kc_op <= one_befo"
	.size	.L.str.916, 181

	.type	.L.str.917,@object              # @.str.917
.L.str.917:
	.asciz	"re_first_operator) || (kc_op >= last_operator)) {\n\tfprintf( stderr, \"Internal Error: Assertion failed at %s:%d: illegal value for (%s) %s%s: %d not a valid operator\\n\",\n\t\tkc_fn, kc_l, kc_phy, "
	.size	.L.str.917, 193

	.type	.L.str.918,@object              # @.str.918
.L.str.918:
	.asciz	"kc_str1, kc_str2, kc_op );\n    } else {\n\tfprintf( stderr, \"Internal Error: Assertion failed at %s:%d: illegal value for (%s) %s%s: %s (%d) is a value of %s\\n\",\n\t\tkc_fn, kc_l, kc_phy, kc_str"
	.size	.L.str.918, 190

	.type	.L.str.919,@object              # @.str.919
.L.str.919:
	.asciz	"1, kc_str2, operator_info[kc_op].name, kc_op, phylum_info[operator_info[kc_op].phylum].name );\n    }\n#ifndef KC_ASSERT_NO_ABORT\n    abort();\n#else\n    exit( 1 );\n#endif\n#endif\n}"
	.size	.L.str.919, 178

	.type	.L.str.920,@object              # @.str.920
.L.str.920:
	.asciz	"\n\nvoid kc_invalid_operator( const char *kc_func_prefix, enum_phyla kc_phy, int kc_line, const char *kc_file, enum_operators kc_oper )\n{\n    fflush(stdout);\n#ifdef _AFX\n    USES_CONVER"
	.size	.L.str.920, 184

	.type	.L.str.921,@object              # @.str.921
.L.str.921:
	.asciz	"SION;\n    const _TCHAR* format=_T(\"Internal Error: invalid operator code in %s%s at %s:%d: %s\\n\");\n    const _TCHAR* tkc_func=A2CT(kc_func_prefix);\n    const _TCHAR* tkc_file=A2CT(kc_file);"
	.size	.L.str.921, 190

	.type	.L.str.922,@object              # @.str.922
.L.str.922:
	.asciz	"\n    const _TCHAR* ts1=A2CT(phylumname_or_error( kc_phy ));\n    const _TCHAR* ts2=A2CT(kc_operatorname_or_error( kc_oper ));\n    TRACE( format, tkc_func, ts1, tkc_file, kc_line, ts2);\n#ifde"
	.size	.L.str.922, 190

	.type	.L.str.923,@object              # @.str.923
.L.str.923:
	.asciz	"f _DEBUG\n    if (AfxAssertFailedLine(kc_file, kc_line))\n#endif\n\tAfxDebugBreak();\n#else\n    fprintf( stderr, \"Internal Error: invalid operator code in %s%s at %s:%d: %s\\n\", kc_func_pre"
	.size	.L.str.923, 184

	.type	.L.str.924,@object              # @.str.924
.L.str.924:
	.asciz	"fix, phylumname_or_error( kc_phy ), kc_file, kc_line, kc_operatorname_or_error( kc_oper ));\n#ifndef KC_INVALID_OPERATOR_NO_ABORT\n    abort();\n#else\n    exit( 1 );\n#endif\n#endif\n}\n"
	.size	.L.str.924, 180

	.type	.L.str.925,@object              # @.str.925
.L.str.925:
	.asciz	"\n#ifndef KC_NO_DEFAULT_IN_WITH\n# define KC_NO_DEFAULT_IN_WITH \"Internal Error: no default action defined in function %s at %s:%d\\n\"\n#endif\nvoid kc_no_default_in_with (const char*, int, "
	.size	.L.str.925, 186

	.type	.L.str.926,@object              # @.str.926
.L.str.926:
	.asciz	"const char*);\nvoid kc_returnless_function (const char *, int, const char*);\n\n#ifndef NDEBUG\n# define assertCond(t) do {if (!(t)) kc_assertionFailed(__FILE__,__LINE__);}while(false)\n# def"
	.size	.L.str.926, 187

	.type	.L.str.927,@object              # @.str.927
.L.str.927:
	.asciz	"ine assertReason(t,s) do {if (!(t)) kc_assertionReasonFailed(__FILE__,__LINE__,s);}while(false)\n# define assertNonNull(p) do {if (p == 0) kc_assertionNonNullFailed(__FILE__,__LINE__,#p);}while(false"
	.size	.L.str.927, 199

	.type	.L.str.928,@object              # @.str.928
.L.str.928:
	.asciz	")\n# define assertPhylum(ptr,phy) do { \\\n    assertNonNull(ptr); \\\n    if (ptr->phylum()!=phy) \\\n\tkc_assertionOperatorInPhylumFailed(ptr->prod_sel(),#ptr,\"->prod_sel()\",\"phy\",__FILE__"
	.size	.L.str.928, 183

	.type	.L.str.929,@object              # @.str.929
.L.str.929:
	.asciz	",__LINE__); \\\n    } while(false)\n#else\n# define assertCond(t)\n# define assertReason(t,s)\n# define assertNonNull(ptr)\n# define assertPhylum(op,phy)\n#endif\n#define assertionFaile"
	.size	.L.str.929, 177

	.type	.L.str.930,@object              # @.str.930
.L.str.930:
	.asciz	"d(s) kc_assertionReasonFailed(__FILE__,__LINE__,s)\n\r\nvoid kc_assertionFailed (const char*, int) __attribute__ ((noreturn));\nvoid kc_assertionReasonFailed (const char*, int, const char*) __att"
	.size	.L.str.930, 192

	.type	.L.str.931,@object              # @.str.931
.L.str.931:
	.asciz	"ribute__ ((noreturn));\nvoid kc_assertionNonNullFailed (const char*, int, const char*) __attribute__ ((noreturn));\nvoid kc_assertionOperatorInPhylumFailed (int, const char*, const char*, const cha"
	.size	.L.str.931, 196

	.type	.L.str.932,@object              # @.str.932
.L.str.932:
	.asciz	"r*, const char*, int) __attribute__ ((noreturn));\n"
	.size	.L.str.932, 51

	.type	.L.str.933,@object              # @.str.933
.L.str.933:
	.asciz	"#define KC_NO_OF_OPERATORS "
	.size	.L.str.933, 28

	.type	_ZN12_GLOBAL__N_117g_no_of_operatorsE,@object # @_ZN12_GLOBAL__N_117g_no_of_operatorsE
	.local	_ZN12_GLOBAL__N_117g_no_of_operatorsE
	.comm	_ZN12_GLOBAL__N_117g_no_of_operatorsE,4,4
	.type	.L.str.934,@object              # @.str.934
.L.str.934:
	.asciz	"\n\n"
	.size	.L.str.934, 3

	.type	.L.str.935,@object              # @.str.935
.L.str.935:
	.asciz	"#ifndef YYSTYPE_HEADER\n#define YYSTYPE_HEADER\nunion KC_YYSTYPE {\n"
	.size	.L.str.935, 66

	.type	.L.str.936,@object              # @.str.936
.L.str.936:
	.asciz	"};\n#define YYSTYPE KC_YYSTYPE\n#endif // YYSTYPE_HEADER\n"
	.size	.L.str.936, 56

	.type	.L.str.937,@object              # @.str.937
.L.str.937:
	.asciz	"typedef class impl_kc_dotedgenode_t *kc_dotedgenode_t;\n"
	.size	.L.str.937, 56

	.type	.L.str.938,@object              # @.str.938
.L.str.938:
	.asciz	"\n\nKC_OPERATOR_INFO operator_info[] = {\n"
	.size	.L.str.938, 40

	.type	.L.str.939,@object              # @.str.939
.L.str.939:
	.asciz	"    { \"\", 0, 0, one_before_first_phylum, 0, 0, 0, 0 }, /* dummy element */\n"
	.size	.L.str.939, 76

	.type	.L.str.940,@object              # @.str.940
.L.str.940:
	.asciz	"    { \"\", 0, 0, one_before_first_phylum, 0, 0, 0, 0 } /* last element */\n};\n\n"
	.size	.L.str.940, 78

	.type	.L.str.941,@object              # @.str.941
.L.str.941:
	.asciz	"KC_PHYLUM_INFO phylum_info[] = {\n"
	.size	.L.str.941, 34

	.type	.L.str.942,@object              # @.str.942
.L.str.942:
	.asciz	"    { \"\", one_before_first_operator, one_before_first_operator, (kc_storageclass_t)0 }, /* dummy element */\n"
	.size	.L.str.942, 109

	.type	.L.str.943,@object              # @.str.943
.L.str.943:
	.asciz	"    { \"\", one_before_first_operator, one_before_first_operator, (kc_storageclass_t)0 } /* last element */\n};\n\n"
	.size	.L.str.943, 111

	.type	.L.str.944,@object              # @.str.944
.L.str.944:
	.asciz	"typedef enum { one_before_first_operator = "
	.size	.L.str.944, 44

	.type	.L.str.945,@object              # @.str.945
.L.str.945:
	.asciz	" ,\n"
	.size	.L.str.945, 4

	.type	.L.str.946,@object              # @.str.946
.L.str.946:
	.asciz	"    last_operator = "
	.size	.L.str.946, 21

	.type	.L.str.947,@object              # @.str.947
.L.str.947:
	.asciz	"\n} enum_operators;\n"
	.size	.L.str.947, 20

	.type	_ZN12_GLOBAL__N_113g_no_of_phylaE,@object # @_ZN12_GLOBAL__N_113g_no_of_phylaE
	.local	_ZN12_GLOBAL__N_113g_no_of_phylaE
	.comm	_ZN12_GLOBAL__N_113g_no_of_phylaE,4,4
	.type	.L.str.948,@object              # @.str.948
.L.str.948:
	.asciz	"typedef enum { one_before_first_phylum = "
	.size	.L.str.948, 42

	.type	.L.str.949,@object              # @.str.949
.L.str.949:
	.asciz	"    last_phylum = "
	.size	.L.str.949, 19

	.type	.L.str.950,@object              # @.str.950
.L.str.950:
	.asciz	"\n} enum_phyla;\n\n"
	.size	.L.str.950, 17

	.type	.L.str.951,@object              # @.str.951
.L.str.951:
	.asciz	"\n#ifdef KC_STATISTICS\nKC_OPERATOR_STATISTICS operator_statistics[KC_NO_OF_OPERATORS];\nstatic int kc_casestring_strlen =0;\nstatic int kc_nocasestring_strlen =0;\n#  define KC_COLLECT_STATS"
	.size	.L.str.951, 187

	.type	.L.str.952,@object              # @.str.952
.L.str.952:
	.asciz	"0(v) v\n#else\n#  define KC_COLLECT_STATS0(v)\n#endif\n\n#ifndef KC_CREATE_STATS\n#  define KC_CREATE_STATS(oper) operator_statistics[oper].created++;\n#endif\n#ifndef KC_EXISTINGNOTFOU"
	.size	.L.str.952, 178

	.type	.L.str.953,@object              # @.str.953
.L.str.953:
	.asciz	"ND_STATS\n#  define KC_EXISTINGNOTFOUND_STATS(oper) operator_statistics[oper].existing_not_found++;\n#endif\n\n#ifndef KC_FREE_CALLED_STATS\n#  define KC_FREE_CALLED_STATS(oper,rec) operator_"
	.size	.L.str.953, 187

	.type	.L.str.954,@object              # @.str.954
.L.str.954:
	.asciz	"statistics[oper].free_called[(rec?true:false)]++;\n#endif\n\n#ifndef KC_FREED_STATS\n#  define KC_FREED_STATS(oper,rec) operator_statistics[oper].freed[(rec?true:false)]++;\n#endif\n"
	.size	.L.str.954, 177

	.type	.L.str.955,@object              # @.str.955
.L.str.955:
	.asciz	"\nextern bool kc_storageclass_still_uniq[];\n"
	.size	.L.str.955, 44

	.type	.L.str.956,@object              # @.str.956
.L.str.956:
	.asciz	"\n */\n#define KC_TYPES\n"
	.size	.L.str.956, 23

	.type	.L.str.957,@object              # @.str.957
.L.str.957:
	.asciz	"\n#include \""
	.size	.L.str.957, 12

	.type	.L.str.958,@object              # @.str.958
.L.str.958:
	.asciz	"k.h\"\n#include <stdio.h>\n#include <ctype.h>\n#include <string>\n#include <sys/types.h>\n#include <stdlib.h>\n\n#ifdef _MSC_VER\n#pragma warning( disable : 4786 )\n#endif\n#include"
	.size	.L.str.958, 171

	.type	.L.str.959,@object              # @.str.959
.L.str.959:
	.asciz	" <new>\n#include <set>\n#include <list>\n#include <algorithm>\n\n#if !defined(USE_HASHSET) && (defined(__GNUC__) || defined(__ICC) || defined(__ECC)) \\\n\t&& !defined(DONT_USE_HASHSET)\n#"
	.size	.L.str.959, 180

	.type	.L.str.960,@object              # @.str.960
.L.str.960:
	.asciz	"  define USE_HASHSET\n#endif\n#ifdef USE_HASHSET\n#  if defined(__GNUC__) && __GNUC__>2\n#    include <ext/hash_set>\n#  else\n#    include <hash_set>\n#  endif\n#endif\n\nusing nam"
	.size	.L.str.960, 172

	.type	.L.str.961,@object              # @.str.961
.L.str.961:
	.asciz	"espace std;\n"
	.size	.L.str.961, 13

	.type	.L.str.962,@object              # @.str.962
.L.str.962:
	.asciz	"\ninline bool\nht_less(casestring p1, casestring p2){\n    return kc_strcmp(p1->name, p2->name)<0;\n}\n\ninline bool\nht_less(nocasestring p1, nocasestring p2){\n    return kc_strcasecm"
	.size	.L.str.962, 178

	.type	.L.str.963,@object              # @.str.963
.L.str.963:
	.asciz	"p(p1->name, p2->name)<0;\n}\n\ninline bool\nht_less(real p1, real p2){\n    return p1->value < p2->value;\n}\n\ninline bool\nht_less(integer p1, integer p2){\n    return p1->value <"
	.size	.L.str.963, 172

	.type	.L.str.964,@object              # @.str.964
.L.str.964:
	.asciz	" p2->value;\n}\n\ninline bool\nht_less(voidptr p1, voidptr p2){\n    return p1->pointer < p2->pointer;\n}\n\nbool\nht_less(abstract_phylum p1, abstract_phylum p2)\n{\n    enum_ope"
	.size	.L.str.964, 169

	.type	.L.str.965,@object              # @.str.965
.L.str.965:
	.asciz	"rators prod_sel=p1->prod_sel();\n    enum_operators prod_sel2=p2->prod_sel();\n    if(prod_sel<prod_sel2)\n\treturn true;\n    if(prod_sel>prod_sel2)\n\treturn false;\n    switch(prod_sel) {\n"
	.size	.L.str.965, 184

	.type	.L.str.966,@object              # @.str.966
.L.str.966:
	.asciz	"\tcase sel_NoCaseStr:\n\t    \013return ht_less(static_cast<nocasestring>(p1),static_cast<nocasestring>(p2));\r\n\tcase sel__Str:\n\t    \013return ht_less(static_cast<casestring>(p1),static_cast<casestr"
	.size	.L.str.966, 190

	.type	.L.str.967,@object              # @.str.967
.L.str.967:
	.asciz	"ing>(p2));\r\n\tcase sel__Real:\n\t    \013return ht_less(static_cast<real>(p1),static_cast<real>(p2));\r\n\tcase sel__Int:\n\t    \013return ht_less(static_cast<integer>(p1),static_cast<integer>(p2));"
	.size	.L.str.967, 186

	.type	.L.str.968,@object              # @.str.968
.L.str.968:
	.asciz	"\r\n\tcase sel__VoidPtr:\n\t    \013return ht_less(static_cast<voidptr>(p1),static_cast<voidptr>(p2));\r\n\tdefault: {\n\t    int i=0;\n\t    bool still_unique = kc_storageclass_still_uniq[phylum_in"
	.size	.L.str.968, 184

	.type	.L.str.969,@object              # @.str.969
.L.str.969:
	.asciz	"fo[p1->phylum()].uniq_stored];\n\t    abstract_phylum sub1=0;\n\t    do {\n\t\tsub1=p1->subphylum(i);\n\t\tabstract_phylum sub2=p2->subphylum(i);\n\t\tif(still_unique) {\n\t\t    if(sub1<sub2)\n\t\t\t"
	.size	.L.str.969, 181

	.type	.L.str.970,@object              # @.str.970
.L.str.970:
	.asciz	"return true;\n\t\t    if(sub2<sub1)\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t    if(ht_less(sub1, sub2))\n\t\t\treturn true;\n\t\t    if(ht_less(sub2, sub1))\n\t\t\treturn false;\n\t\t}\n\t\t++i;\n\t"
	.size	.L.str.970, 169

	.type	.L.str.971,@object              # @.str.971
.L.str.971:
	.asciz	"    } while(sub1);\n\t}\n    }\n    return false;\n}\n\ntemplate<typename T>\nclass phylum_less : std::binary_function<T, T, bool>\n{\npublic:\n    bool operator()(const T& X, const "
	.size	.L.str.971, 172

	.type	.L.str.972,@object              # @.str.972
.L.str.972:
	.asciz	"T& Y) const\n\t\013{ return ht_less(X,Y); }\r\n};\n\ninline void deletefun(c_abstract_phylum t){\n    delete const_cast<abstract_phylum>(t);\n}\n\n"
	.size	.L.str.972, 135

	.type	.L.str.973,@object              # @.str.973
.L.str.973:
	.asciz	"\n#ifdef USE_HASHSET\nstruct hashitem {\n    size_t hashvalue;\n    casestring"
	.size	.L.str.973, 75

	.type	.L.str.974,@object              # @.str.974
.L.str.974:
	.asciz	" contents;\n    hashitem(casestring"
	.size	.L.str.974, 35

	.type	.L.str.975,@object              # @.str.975
.L.str.975:
	.asciz	" cs): contents(cs) {\n\tunsigned long h = 0;\n\tkc_char_t const *s = cs->name;\n\tfor ( ; *s; ++s)\n\t    \013h = 5*h + *s;\r\n\thashvalue=(size_t)h;\n    }\n};\n\ninline void deletefunhashi"
	.size	.L.str.975, 173

	.type	.L.str.976,@object              # @.str.976
.L.str.976:
	.asciz	"tem(hashitem t) {\n    delete t.contents;\n}\n\n#  ifdef __GNUC__\nstruct eq_hashitem { bool operator()(hashitem hi1, hashitem hi2) const {\n    return kc_strcmp(hi1.contents->name, hi2.con"
	.size	.L.str.976, 184

	.type	.L.str.977,@object              # @.str.977
.L.str.977:
	.asciz	"tents->name) == 0; } };\n\nstruct hash_hashitem { size_t operator()(hashitem hi) const {\n    return hi.hashvalue; } };\n\n#  else\nstruct comp_hashitem {\n    enum { bucket_size = 4, min"
	.size	.L.str.977, 181

	.type	.L.str.978,@object              # @.str.978
.L.str.978:
	.asciz	"_buckets = 8 };\n    // bucket_size and min_buckets are just guesses\n    size_t operator()(const hashitem hi) const {\n\treturn hi.hashvalue; }\n    bool operator()(const hashitem hi1, const ha"
	.size	.L.str.978, 190

	.type	.L.str.979,@object              # @.str.979
.L.str.979:
	.asciz	"shitem hi2) const {\n\treturn kc_strcmp(hi1.contents->name, hi2.contents->name) < 0; }\n};\n#  endif // Whether gcc or icc\n#endif // Whether hash or not\n\nstruct hashtable_level\n{\n\th"
	.size	.L.str.979, 178

	.type	.L.str.980,@object              # @.str.980
.L.str.980:
	.asciz	"ashtable_level(bool cod = true): clean_on_destruction(cod) { }\n"
	.size	.L.str.980, 64

	.type	.L.str.981,@object              # @.str.981
.L.str.981:
	.asciz	"\tvoid clear(bool free_entries=true) {\n\t    if(free_entries)\n\t\tclear_entries();\n\t    _casestring.clear();\n\t    _nocasestring.clear();\n\t    _integer.clear();\n\t    _real.clear();\n\t   "
	.size	.L.str.981, 181

	.type	.L.str.982,@object              # @.str.982
.L.str.982:
	.asciz	" _voidptr.clear();\n\t    _abstract_phylum.clear();\n\t}\n\tvoid clear_entries() {\n#ifdef USE_HASHSET\n\t\tstd::for_each(_casestring.begin(),_casestring.end(),deletefunhashitem);\n#else\n\t\tst"
	.size	.L.str.982, 181

	.type	.L.str.983,@object              # @.str.983
.L.str.983:
	.asciz	"d::for_each(_casestring.begin(),_casestring.end(),deletefun);\n#endif\n\t\tstd::for_each(_nocasestring.begin(),_nocasestring.end(),deletefun);\n\t\tstd::for_each(_integer.begin(),_integer.end(),delet"
	.size	.L.str.983, 193

	.type	.L.str.984,@object              # @.str.984
.L.str.984:
	.asciz	"efun);\n\t\tstd::for_each(_real.begin(),_real.end(),deletefun);\n\t\tstd::for_each(_voidptr.begin(),_voidptr.end(),deletefun);\n\t\tstd::for_each(_abstract_phylum.begin(),_abstract_phylum.end(),deletef"
	.size	.L.str.984, 193

	.type	.L.str.985,@object              # @.str.985
.L.str.985:
	.asciz	"un);\n\t    }\n\t~hashtable_level() {\n\t    clear(clean_on_destruction);\n\t}\n\tabstract_phylum check_insert(abstract_phylum t) {\n\t    return *_abstract_phylum.insert(t).first;\n\t}\n\tcase"
	.size	.L.str.985, 178

	.type	.L.str.986,@object              # @.str.986
.L.str.986:
	.asciz	"string check_insert(casestring t) {\n#ifdef USE_HASHSET\n\t    return (*_casestring.insert(hashitem(t)).first).contents;\n#else\n\t    return *_casestring.insert(t).first;\n#endif\n\t}\n\tnoc"
	.size	.L.str.986, 181

	.type	.L.str.987,@object              # @.str.987
.L.str.987:
	.asciz	"asestring check_insert(nocasestring t) {\n\t    return *_nocasestring.insert(t).first;\n\t}\n\tinteger check_insert(integer t) {\n\t    return *_integer.insert(t).first;\n\t}\n\treal check_insert"
	.size	.L.str.987, 184

	.type	.L.str.988,@object              # @.str.988
.L.str.988:
	.asciz	"(real t) {\n\t    return *_real.insert(t).first;\n\t}\n\tvoidptr check_insert(voidptr t) {\n\t    return *_voidptr.insert(t).first;\n\t}\n"
	.size	.L.str.988, 128

	.type	.L.str.989,@object              # @.str.989
.L.str.989:
	.asciz	"\tvoid clear() {\n\t    _casestring.clear();\n\t    _nocasestring.clear();\n\t    _integer.clear();\n\t    _real.clear();\n\t    _voidptr.clear();\n\t    _abstract_phylum.clear();\n\t}\n\tabstra"
	.size	.L.str.989, 178

	.type	.L.str.990,@object              # @.str.990
.L.str.990:
	.asciz	"ct_phylum check_insert(abstract_phylum t) {\n\t    return *_abstract_phylum.insert(abstract_phylum_ptr(t)).first;\n\t}\n\tcasestring check_insert(casestring t) {\n\t    return *_casestring.insert(c"
	.size	.L.str.990, 190

	.type	.L.str.991,@object              # @.str.991
.L.str.991:
	.asciz	"asestring_ptr(t)).first;\n\t}\n\tnocasestring check_insert(nocasestring t) {\n\t    return *_nocasestring.insert(nocasestring_ptr(t)).first;\n\t}\n\tinteger check_insert(integer t) {\n\t    retur"
	.size	.L.str.991, 184

	.type	.L.str.992,@object              # @.str.992
.L.str.992:
	.asciz	"n *_integer.insert(integer_ptr(t)).first;\n\t}\n\treal check_insert(real t) {\n\t    return *_real.insert(real_ptr(t)).first;\n\t}\n\tvoidptr check_insert(voidptr t) {\n\t    return *_voidptr.ins"
	.size	.L.str.992, 184

	.type	.L.str.993,@object              # @.str.993
.L.str.993:
	.asciz	"ert(voidptr_ptr(t)).first;\n\t}\n"
	.size	.L.str.993, 31

	.type	.L.str.994,@object              # @.str.994
.L.str.994:
	.asciz	"\rprivate:\013\n\tbool clean_on_destruction;\n#ifdef USE_HASHSET\n#  ifdef __GNUC__\n#    if __GNUC__==2 || (__GNUC__==3 && __GNUC_MINOR__==0)\n\tstd::hash_set<hashitem, hash_hashitem, eq_hashite"
	.size	.L.str.994, 185

	.type	.L.str.995,@object              # @.str.995
.L.str.995:
	.asciz	"m> _casestring;\n#    else\n\t__gnu_cxx::hash_set<hashitem, hash_hashitem, eq_hashitem> _casestring;\n#    endif\n#  else\n\tstd::hash_set<hashitem, comp_hashitem> _casestring;\n#  endif\n#"
	.size	.L.str.995, 181

	.type	.L.str.996,@object              # @.str.996
.L.str.996:
	.asciz	"else\n\tstd::set<casestring"
	.size	.L.str.996, 26

	.type	.L.str.997,@object              # @.str.997
.L.str.997:
	.asciz	", phylum_less<casestring"
	.size	.L.str.997, 25

	.type	.L.str.998,@object              # @.str.998
.L.str.998:
	.asciz	"> > _casestring;\n#endif\n\tstd::set<nocasestring"
	.size	.L.str.998, 47

	.type	.L.str.999,@object              # @.str.999
.L.str.999:
	.asciz	", phylum_less<nocasestring"
	.size	.L.str.999, 27

	.type	.L.str.1000,@object             # @.str.1000
.L.str.1000:
	.asciz	"> > _nocasestring;\n\tstd::set<integer"
	.size	.L.str.1000, 37

	.type	.L.str.1001,@object             # @.str.1001
.L.str.1001:
	.asciz	", phylum_less<integer"
	.size	.L.str.1001, 22

	.type	.L.str.1002,@object             # @.str.1002
.L.str.1002:
	.asciz	"> > _integer;\n\tstd::set<real"
	.size	.L.str.1002, 29

	.type	.L.str.1003,@object             # @.str.1003
.L.str.1003:
	.asciz	", phylum_less<real"
	.size	.L.str.1003, 19

	.type	.L.str.1004,@object             # @.str.1004
.L.str.1004:
	.asciz	"> > _real;\n\tstd::set<voidptr"
	.size	.L.str.1004, 29

	.type	.L.str.1005,@object             # @.str.1005
.L.str.1005:
	.asciz	", phylum_less<voidptr"
	.size	.L.str.1005, 22

	.type	.L.str.1006,@object             # @.str.1006
.L.str.1006:
	.asciz	"> > _voidptr;\n\tstd::set<abstract_phylum"
	.size	.L.str.1006, 40

	.type	.L.str.1007,@object             # @.str.1007
.L.str.1007:
	.asciz	", phylum_less<abstract_phylum"
	.size	.L.str.1007, 30

	.type	.L.str.1008,@object             # @.str.1008
.L.str.1008:
	.asciz	"> > _abstract_phylum;\n};\n\nclass hashtable_stack: public std::list<hashtable_level> {\n\rpublic:\013\n    hashtable_stack(): _pos(begin()) { }\n\n    void inc_level() { _pos=insert(_pos, "
	.size	.L.str.1008, 179

	.type	.L.str.1009,@object             # @.str.1009
.L.str.1009:
	.asciz	"hashtable_level()); }\n    void dec_level() { if(valid() && _pos!=end()) ++_pos; }\n    void free_level() { if(_pos!=begin()) { erase(begin(),_pos);_pos=begin(); } }\n\n    bool valid() const {"
	.size	.L.str.1009, 190

	.type	.L.str.1010,@object             # @.str.1010
.L.str.1010:
	.asciz	" return !empty(); }\n    hashtable_level& get_level() { return *_pos; }\n\n    template<typename T>\n    T check_insert(T t) {\n\treturn dynamic_cast<T>((*_pos).check_insert(t));\n    }\n\r"
	.size	.L.str.1010, 181

	.type	.L.str.1011,@object             # @.str.1011
.L.str.1011:
	.asciz	"private:\013\n    iterator _pos;\n};\n\nclass hashtable_struct_t {\n\rpublic:\013\n    // don't clean _static_level on destruction (program ends)\n    hashtable_struct_t(): _static_level(fals"
	.size	.L.str.1011, 178

	.type	.L.str.1012,@object             # @.str.1012
.L.str.1012:
	.asciz	"e), _to_be_freed(false),  _dynamic(false) { }\n\n    template <typename T>\n    T ht_check_insert(T t) {\n\tif(_dynamic && _dynamic_level.valid())\n\t    return _dynamic_level.check_insert(t);\n"
	.size	.L.str.1012, 187

	.type	.L.str.1013,@object             # @.str.1013
.L.str.1013:
	.asciz	"\telse\n\t    return dynamic_cast<T>(_static_level.check_insert(t));\n    }\n    void ht_static() {_dynamic=false; }\n    void ht_dynamic() {\n\t_dynamic=true;\n\tif(!_dynamic_level.valid())\n"
	.size	.L.str.1013, 182

	.type	.L.str.1014,@object             # @.str.1014
.L.str.1014:
	.asciz	"\t    _dynamic_level.inc_level();\n    }\n    void ht_inc_level() { _dynamic_level.inc_level(); }\n    void ht_dec_level() { _dynamic_level.dec_level(); }\n    void ht_free_level() { _dynamic_le"
	.size	.L.str.1014, 190

	.type	.L.str.1015,@object             # @.str.1015
.L.str.1015:
	.asciz	"vel.free_level(); }\n    void ht_clear() { _static_level.clear(); _dynamic_level.clear(); _dynamic=false; }\n\n    bool to_be_freed() { return _to_be_freed; }\n    void set_to_be_freed(bool b=t"
	.size	.L.str.1015, 190

	.type	.L.str.1016,@object             # @.str.1016
.L.str.1016:
	.asciz	"rue) { _to_be_freed=b; }\n\rprivate:\013\n    hashtable_level _static_level;\n    hashtable_stack _dynamic_level;\n    bool _to_be_freed; /* should be true for dynamic, false for statically alloc"
	.size	.L.str.1016, 188

	.type	.L.str.1017,@object             # @.str.1017
.L.str.1017:
	.asciz	"ated structures */\n    bool _dynamic;\n};\n\nimpl_nocasestring_NoCaseStr::impl_nocasestring_NoCaseStr(const kc_char_t* _name) : name(_name) { }\nvoid impl_nocasestring_NoCaseStr::make_own(in"
	.size	.L.str.1017, 187

	.type	.L.str.1018,@object             # @.str.1018
.L.str.1018:
	.asciz	"t length) {\n    kc_char_t *newname=new kc_char_t[length+1];\n    for (int i=0; i < length && name[i]; ++i)\n\tnewname[i] = kc_tolower(name[i]);\n    newname[length]=0;\n    name=newname;\n}"
	.size	.L.str.1018, 184

	.type	.L.str.1019,@object             # @.str.1019
.L.str.1019:
	.asciz	"\n\nimpl_casestring__Str::impl_casestring__Str(const kc_char_t* _name) : name(_name) { }\nvoid impl_casestring__Str::make_own(int length) {\n    kc_char_t *newname=kc_strncpy(new kc_char_t[leng"
	.size	.L.str.1019, 190

	.type	.L.str.1020,@object             # @.str.1020
.L.str.1020:
	.asciz	"th+1],name,length);\n    newname[length]=0;\n    name=newname;\n}\n"
	.size	.L.str.1020, 64

	.type	.L.str.1021,@object             # @.str.1021
.L.str.1021:
	.asciz	"#endif // KC_TYPES_HEADER\n"
	.size	.L.str.1021, 27

	.type	.L.str.1022,@object             # @.str.1022
.L.str.1022:
	.asciz	"\n */\n#ifndef KC_TYPES_HEADER\n#define KC_TYPES_HEADER\n\n#define KIMWITUVERSIONMAJOR "
	.size	.L.str.1022, 83

	.type	.L.str.1023,@object             # @.str.1023
.L.str.1023:
	.asciz	"\n#define KIMWITUVERSIONMINOR "
	.size	.L.str.1023, 30

	.type	.L.str.1024,@object             # @.str.1024
.L.str.1024:
	.asciz	"\n#define KIMWITUVERSIONMICRO "
	.size	.L.str.1024, 30

	.type	.L.str.1025,@object             # @.str.1025
.L.str.1025:
	.asciz	"\n\n#include <stdio.h>\n#include <stddef.h>\n#include <string>\n\nnamespace kc {\r\n\n#ifndef INTEGER\n# define INTEGER int\n#endif\n#ifndef REAL\n# define REAL double\n#endif"
	.size	.L.str.1025, 162

	.type	.L.str.1026,@object             # @.str.1026
.L.str.1026:
	.asciz	"\n\n#ifdef KC_UNICODE\n\n#define kc_t(TEXT) L ## TEXT\ntypedef wchar_t kc_char_t;\ntypedef std::wstring kc_string_t;\n\n#if defined(_WIN32) && ! defined (__GNUC__)\n#define kc_strlen "
	.size	.L.str.1026, 175

	.type	.L.str.1027,@object             # @.str.1027
.L.str.1027:
	.asciz	"wcslen\n#define kc_strcmp wcscmp\n#define kc_strcasecmp _wcsicmp\n#define kc_strcpy wcscpy\n#define kc_strncpy wcsncpy\n#define kc_tolower towlower\n#define kc_print_integer(buf,number) swp"
	.size	.L.str.1027, 184

	.type	.L.str.1028,@object             # @.str.1028
.L.str.1028:
	.asciz	"rintf(buf,kc_t(\"%d\"),number)\n#define kc_print_real(buf,number) swprintf(buf,kc_t(\"%g\"),number)\n\n// needed for printdot and csgio only\ninline\nstd::string kc_to_cstring(const std::wstr"
	.size	.L.str.1028, 183

	.type	.L.str.1029,@object             # @.str.1029
.L.str.1029:
	.asciz	"ing& s) {\n    USES_CONVERSION;\n    return W2CA(s.c_str());\n}\n\n// needed for csgio only\ninline\nstd::wstring kc_to_wstring(const std::string& s) {\n    USES_CONVERSION;\n    retu"
	.size	.L.str.1029, 175

	.type	.L.str.1030,@object             # @.str.1030
.L.str.1030:
	.asciz	"rn A2CW(s.c_str());\n}\n\n#else // !defined(_WIN32) || defined(__GNUC__)\n// if you want to use UNICODE on other platforms you have to write\n// the following functions on your own\nint kc_"
	.size	.L.str.1030, 184

	.type	.L.str.1031,@object             # @.str.1031
.L.str.1031:
	.asciz	"strlen(const kc_char_t*);\nint kc_strcmp(const kc_char_t*,const kc_char_t*);\nint kc_strcasecmp(const kc_char_t*,const kc_char_t*);\nint kc_strcpy(kc_char_t*,const kc_char_t*);\nint kc_strncpy("
	.size	.L.str.1031, 190

	.type	.L.str.1032,@object             # @.str.1032
.L.str.1032:
	.asciz	"kc_char_t*,const kc_char_t*, int);\nkc_char_t kc_tolower(kc_char_t);\nint kc_print_integer(kc_char_t* buffer, INTEGER number );\nint kc_print_real(kc_char_t* buffer, REAL number);\n\n// neede"
	.size	.L.str.1032, 187

	.type	.L.str.1033,@object             # @.str.1033
.L.str.1033:
	.asciz	"d for printdot and csgio only\nstd::string kc_to_cstring(const std::wstring& );\n// needed for csgio only\nstd::wstring kc_to_wstring(const std::string& );\n\n#endif\n\n#else // !KC_UNICO"
	.size	.L.str.1033, 181

	.type	.L.str.1034,@object             # @.str.1034
.L.str.1034:
	.asciz	"DE\n  \n#define kc_t(TEXT) TEXT  \ntypedef char kc_char_t;\ntypedef std::string kc_string_t;\n\n#define kc_strlen strlen\n#define kc_strcmp strcmp\n#if defined(_WIN32) && ! defined (__G"
	.size	.L.str.1034, 178

	.type	.L.str.1035,@object             # @.str.1035
.L.str.1035:
	.asciz	"NUC__)\n#define kc_strcasecmp _stricmp\n#else\n#define kc_strcasecmp strcasecmp\n#endif\n#define kc_strcpy strcpy\n#define kc_strncpy strncpy\n#define kc_tolower tolower  \n#define kc_p"
	.size	.L.str.1035, 178

	.type	.L.str.1036,@object             # @.str.1036
.L.str.1036:
	.asciz	"rint_integer(buf,number) sprintf(buf,kc_t(\"%d\"),number)\n#define kc_print_real(buf,number) sprintf(buf,kc_t(\"%g\"),number)\n#endif\n"
	.size	.L.str.1036, 129

	.type	.L.str.1037,@object             # @.str.1037
.L.str.1037:
	.asciz	"class uview_class;\ntypedef uview_class& uview;\ntypedef const uview_class& c_uview;\n\ntypedef class printer_functor_class& printer_functor;\ntypedef void (*printer_function)(const kc_char_t"
	.size	.L.str.1037, 187

	.type	.L.str.1038,@object             # @.str.1038
.L.str.1038:
	.asciz	"*, uview);\n"
	.size	.L.str.1038, 12

	.type	.L.str.1039,@object             # @.str.1039
.L.str.1039:
	.asciz	"\nclass rview_class;\ntypedef rview_class& rview;\ntypedef const rview_class& c_rview;\n"
	.size	.L.str.1039, 85

	.type	.L.str.1040,@object             # @.str.1040
.L.str.1040:
	.asciz	"\n\013}\n\n// Some compilers know __attribute__. Right now we test for the GNU compiler\n// and Intel's icc (for ia32) and ecc (for ia64).\n#if !defined __GNUC__ && !defined __ICC && !defined _"
	.size	.L.str.1040, 186

	.type	.L.str.1041,@object             # @.str.1041
.L.str.1041:
	.asciz	"_ECC\n# define __attribute__(x)\n#endif\n\n// Since all definitions are in namespace kc now, there is no need\n// give them a kc_ prefix. Old code may still rely on the prefix, so these\n//"
	.size	.L.str.1041, 184

	.type	.L.str.1042,@object             # @.str.1042
.L.str.1042:
	.asciz	" macros are generated for backwards compatibility\n#ifdef KC_DEPRECATED\n#define kc_PhylumInfo           phylum_info\n#define kc_OperatorInfo         operator_info\n#define kc_last_uview       "
	.size	.L.str.1042, 190

	.type	.L.str.1043,@object             # @.str.1043
.L.str.1043:
	.asciz	"    last_uview\n#define kc_uviews               uviews\n#define kc_rviews               rviews\n#define kc_ht_reuse             ht_clear\n#define kc_ht_clear             ht_clear\n#define kc_"
	.size	.L.str.1043, 187

	.type	.L.str.1044,@object             # @.str.1044
.L.str.1044:
	.asciz	"ht_assign            ht_assign\n#define kc_ht_assigned          ht_assigned\n"
	.size	.L.str.1044, 76

	.type	.L.str.1045,@object             # @.str.1045
.L.str.1045:
	.asciz	"\n#endif // KC_DEPRECATED\n\n// Some compilers are too stupid to detect that a function will always return\n// a proper value when it returns one in all branches of an if- or switch-\n// stat"
	.size	.L.str.1045, 187

	.type	.L.str.1046,@object             # @.str.1046
.L.str.1046:
	.asciz	"ement (with final else or default, of course).\n#if !defined __GNUC__\n# define NORETURN throw 0;\n#else\n# define NORETURN\n#endif\n"
	.size	.L.str.1046, 128

	.type	.L.str.1047,@object             # @.str.1047
.L.str.1047:
	.asciz	"\n} // namespace kc\n"
	.size	.L.str.1047, 20

	.type	.L.str.1048,@object             # @.str.1048
.L.str.1048:
	.asciz	"\nnamespace kc {\r\n"
	.size	.L.str.1048, 18

	.type	.L.str.1049,@object             # @.str.1049
.L.str.1049:
	.asciz	"\nabstract_phylum kc_create(enum_operators createOp"
	.size	.L.str.1049, 51

	.type	.L.str.1050,@object             # @.str.1050
.L.str.1050:
	.asciz	", abstract_phylum=0"
	.size	.L.str.1050, 20

	.type	.L.str.1051,@object             # @.str.1051
.L.str.1051:
	.asciz	");\nabstract_phylum& attributeOf(abstract_phylum kc_p, int no);\n\n"
	.size	.L.str.1051, 65

	.type	.L.str.1052,@object             # @.str.1052
.L.str.1052:
	.asciz	"void kc_initialize_abstract_phylum(abstract_phylum kc_x)\n\t    {\n"
	.size	.L.str.1052, 65

	.type	.L.str.1053,@object             # @.str.1053
.L.str.1053:
	.asciz	"}\n"
	.size	.L.str.1053, 3

	.type	.L.str.1054,@object             # @.str.1054
.L.str.1054:
	.asciz	"void kc_initialize_abstract_list(abstract_list kc_x)\n\t    {\n"
	.size	.L.str.1054, 61

	.type	.L.str.1055,@object             # @.str.1055
.L.str.1055:
	.asciz	"phylum_"
	.size	.L.str.1055, 8

	.type	.L.str.1056,@object             # @.str.1056
.L.str.1056:
	.asciz	", "
	.size	.L.str.1056, 3

	.type	.L.str.1057,@object             # @.str.1057
.L.str.1057:
	.asciz	"void impl_"
	.size	.L.str.1057, 11

	.type	.L.str.1058,@object             # @.str.1058
.L.str.1058:
	.asciz	"::set_subphylum(int no, abstract_phylum val)\n{\n    abstract_phylum newval=0;\n    switch(no) {\n\tcase 0: newval = "
	.size	.L.str.1058, 113

	.type	.L.str.1059,@object             # @.str.1059
.L.str.1059:
	.asciz	"_1 = dynamic_cast<"
	.size	.L.str.1059, 19

	.type	.L.str.1060,@object             # @.str.1060
.L.str.1060:
	.asciz	">(val);break;\n\tcase 1: newval = "
	.size	.L.str.1060, 33

	.type	.L.str.1061,@object             # @.str.1061
.L.str.1061:
	.asciz	">(val);break;\n    }\n    assertNonNull(newval);\n}\n"
	.size	.L.str.1061, 50

	.type	.L.str.1062,@object             # @.str.1062
.L.str.1062:
	.asciz	"    kc::"
	.size	.L.str.1062, 9

	.type	.L.str.1063,@object             # @.str.1063
.L.str.1063:
	.asciz	" as_"
	.size	.L.str.1063, 5

	.type	.L.str.1064,@object             # @.str.1064
.L.str.1064:
	.asciz	";\n"
	.size	.L.str.1064, 3

	.type	.L.str.1065,@object             # @.str.1065
.L.str.1065:
	.asciz	"abstract_phylum impl_"
	.size	.L.str.1065, 22

	.type	.L.str.1066,@object             # @.str.1066
.L.str.1066:
	.asciz	"::subphylum(int no) const\n{\n  switch(no){\n    case 0: return "
	.size	.L.str.1066, 62

	.type	.L.str.1067,@object             # @.str.1067
.L.str.1067:
	.asciz	"_1;\n    case 1: return "
	.size	.L.str.1067, 24

	.type	.L.str.1068,@object             # @.str.1068
.L.str.1068:
	.asciz	"_1;\n  }\n  return 0;\n}\n"
	.size	.L.str.1068, 23

	.type	.L.str.1069,@object             # @.str.1069
.L.str.1069:
	.asciz	"const enum_phyla "
	.size	.L.str.1069, 18

	.type	.L.str.1070,@object             # @.str.1070
.L.str.1070:
	.asciz	"::phylum_sel_ = phylum_"
	.size	.L.str.1070, 24

	.type	.L.str.1071,@object             # @.str.1071
.L.str.1071:
	.asciz	"::"
	.size	.L.str.1071, 3

	.type	.L.str.1072,@object             # @.str.1072
.L.str.1072:
	.asciz	"("
	.size	.L.str.1072, 2

	.type	.L.str.1073,@object             # @.str.1073
.L.str.1073:
	.asciz	" p1 , "
	.size	.L.str.1073, 7

	.type	.L.str.1074,@object             # @.str.1074
.L.str.1074:
	.asciz	" p2)\n\t\013: "
	.size	.L.str.1074, 10

	.type	.L.str.1075,@object             # @.str.1075
.L.str.1075:
	.asciz	"_1(p1), "
	.size	.L.str.1075, 9

	.type	.L.str.1076,@object             # @.str.1076
.L.str.1076:
	.asciz	"_1(p2) { }\r\n"
	.size	.L.str.1076, 13

	.type	_ZN12_GLOBAL__N_19gl_phylumE,@object # @_ZN12_GLOBAL__N_19gl_phylumE
	.local	_ZN12_GLOBAL__N_19gl_phylumE
	.comm	_ZN12_GLOBAL__N_19gl_phylumE,8,8
	.type	.L.str.1077,@object             # @.str.1077
.L.str.1077:
	.asciz	"class impl_"
	.size	.L.str.1077, 12

	.type	.L.str.1078,@object             # @.str.1078
.L.str.1078:
	.asciz	";\ntypedef impl_"
	.size	.L.str.1078, 16

	.type	.L.str.1079,@object             # @.str.1079
.L.str.1079:
	.asciz	" impl_"
	.size	.L.str.1079, 7

	.type	.L.str.1080,@object             # @.str.1080
.L.str.1080:
	.asciz	"class "
	.size	.L.str.1080, 7

	.type	.L.str.1081,@object             # @.str.1081
.L.str.1081:
	.asciz	": public impl_abstract_list"
	.size	.L.str.1081, 28

	.type	.L.str.1082,@object             # @.str.1082
.L.str.1082:
	.asciz	": public impl_abstract_phylum"
	.size	.L.str.1082, 30

	.type	.L.str.1083,@object             # @.str.1083
.L.str.1083:
	.asciz	"{\n\rpublic:\013\n"
	.size	.L.str.1083, 13

	.type	.L.str.1084,@object             # @.str.1084
.L.str.1084:
	.asciz	"explicit impl_"
	.size	.L.str.1084, 15

	.type	.L.str.1085,@object             # @.str.1085
.L.str.1085:
	.asciz	"()\013\n: "
	.size	.L.str.1085, 7

	.type	.L.str.1086,@object             # @.str.1086
.L.str.1086:
	.asciz	"   static const enum_phyla phylum_sel_;\n"
	.size	.L.str.1086, 41

	.type	.L.str.1087,@object             # @.str.1087
.L.str.1087:
	.asciz	"    void fprintdot( FILE*, const char*, const char*, const char*, bool, bool, bool ) const;\n"
	.size	.L.str.1087, 93

	.type	.L.str.1088,@object             # @.str.1088
.L.str.1088:
	.asciz	"\t"
	.size	.L.str.1088, 2

	.type	.L.str.1089,@object             # @.str.1089
.L.str.1089:
	.asciz	" rewrite(rview v) { return phylum_cast<"
	.size	.L.str.1089, 40

	.type	.L.str.1090,@object             # @.str.1090
.L.str.1090:
	.asciz	">(impl_abstract_phylum::rewrite(v)); }\n"
	.size	.L.str.1090, 40

	.type	.L.str.1091,@object             # @.str.1091
.L.str.1091:
	.asciz	"   abstract_phylum_ref* new_phylum_ref() {\n\treturn new phylum_ref<impl_"
	.size	.L.str.1091, 72

	.type	.L.str.1092,@object             # @.str.1092
.L.str.1092:
	.asciz	">(this);\n    }\n    impl_"
	.size	.L.str.1092, 25

	.type	.L.str.1093,@object             # @.str.1093
.L.str.1093:
	.asciz	"& operator=(const impl_"
	.size	.L.str.1093, 24

	.type	.L.str.1094,@object             # @.str.1094
.L.str.1094:
	.asciz	"& p) {\n\tphylum_ref<impl_"
	.size	.L.str.1094, 25

	.type	.L.str.1095,@object             # @.str.1095
.L.str.1095:
	.asciz	">* my_ref=static_cast<phylum_ref<impl_"
	.size	.L.str.1095, 39

	.type	.L.str.1096,@object             # @.str.1096
.L.str.1096:
	.asciz	">*>(get_ref());\n\t"
	.size	.L.str.1096, 18

	.type	.L.str.1097,@object             # @.str.1097
.L.str.1097:
	.asciz	" self=this;\n\tif(my_ref) {\n\t    abstract_phylum_ref* ref=p.get_ref();\n\t    self=const_cast<"
	.size	.L.str.1097, 91

	.type	.L.str.1098,@object             # @.str.1098
.L.str.1098:
	.asciz	">(&p);\n\t    if(ref)\n\t\tself=phylum_cast<"
	.size	.L.str.1098, 40

	.type	.L.str.1099,@object             # @.str.1099
.L.str.1099:
	.asciz	">(self->copy(true));\n\t    my_ref->set_phylum(self);\n\t}\n\treturn *self;\n    }\n    impl_"
	.size	.L.str.1099, 86

	.type	.L.str.1100,@object             # @.str.1100
.L.str.1100:
	.asciz	"& operator=(const phylum_ref<impl_"
	.size	.L.str.1100, 35

	.type	.L.str.1101,@object             # @.str.1101
.L.str.1101:
	.asciz	">& r) {\n\tphylum_ref<impl_"
	.size	.L.str.1101, 26

	.type	.L.str.1102,@object             # @.str.1102
.L.str.1102:
	.asciz	" self=this;\n\tif(my_ref) {\n\t    self=phylum_cast<"
	.size	.L.str.1102, 49

	.type	.L.str.1103,@object             # @.str.1103
.L.str.1103:
	.asciz	">(r.get_phylum()?r.get_phylum()->copy(true):0);\n\t    my_ref->set_phylum(self);\n\t}\n\treturn *self;\n    }\n\n    impl_"
	.size	.L.str.1103, 114

	.type	.L.str.1104,@object             # @.str.1104
.L.str.1104:
	.asciz	"* return_ptr() { if(get_ref()) get_ref()->lock(); return this; }\n"
	.size	.L.str.1104, 66

	.type	.L.str.1105,@object             # @.str.1105
.L.str.1105:
	.asciz	"typedef phylum_ptr<impl_"
	.size	.L.str.1105, 25

	.type	.L.str.1106,@object             # @.str.1106
.L.str.1106:
	.asciz	"> "
	.size	.L.str.1106, 3

	.type	.L.str.1107,@object             # @.str.1107
.L.str.1107:
	.asciz	"_ptr;\n"
	.size	.L.str.1107, 7

	.type	.L.str.1108,@object             # @.str.1108
.L.str.1108:
	.asciz	"typedef weak_phylum_ptr<impl_"
	.size	.L.str.1108, 30

	.type	.L.str.1109,@object             # @.str.1109
.L.str.1109:
	.asciz	"> weak_"
	.size	.L.str.1109, 8

	.type	_ZN12_GLOBAL__N_111gl_operatorE,@object # @_ZN12_GLOBAL__N_111gl_operatorE
	.local	_ZN12_GLOBAL__N_111gl_operatorE
	.comm	_ZN12_GLOBAL__N_111gl_operatorE,8,8
	.type	.L.str.1110,@object             # @.str.1110
.L.str.1110:
	.asciz	"this"
	.size	.L.str.1110, 5

	.type	_ZN12_GLOBAL__N_110gl_phydeclE,@object # @_ZN12_GLOBAL__N_110gl_phydeclE
	.local	_ZN12_GLOBAL__N_110gl_phydeclE
	.comm	_ZN12_GLOBAL__N_110gl_phydeclE,8,8
	.type	.L.str.1111,@object             # @.str.1111
.L.str.1111:
	.asciz	"internal error: could not find declaration of phylum:"
	.size	.L.str.1111, 54

	.type	.L.str.1112,@object             # @.str.1112
.L.str.1112:
	.asciz	"   case phylum_"
	.size	.L.str.1112, 16

	.type	.L.str.1113,@object             # @.str.1113
.L.str.1113:
	.asciz	":\013\n\tdynamic_cast<"
	.size	.L.str.1113, 18

	.type	.L.str.1114,@object             # @.str.1114
.L.str.1114:
	.asciz	">(kc_p2)->"
	.size	.L.str.1114, 11

	.type	.L.str.1115,@object             # @.str.1115
.L.str.1115:
	.asciz	" = dynamic_cast<c_"
	.size	.L.str.1115, 19

	.type	.L.str.1116,@object             # @.str.1116
.L.str.1116:
	.asciz	">(kc_p1)->"
	.size	.L.str.1116, 11

	.type	.L.str.1117,@object             # @.str.1117
.L.str.1117:
	.asciz	";\n\tbreak;\r\n"
	.size	.L.str.1117, 12

	.type	.L.str.1118,@object             # @.str.1118
.L.str.1118:
	.asciz	": {\n    c_"
	.size	.L.str.1118, 11

	.type	.L.str.1119,@object             # @.str.1119
.L.str.1119:
	.asciz	" p1 = dynamic_cast<c_"
	.size	.L.str.1119, 22

	.type	.L.str.1120,@object             # @.str.1120
.L.str.1120:
	.asciz	">(kc_p1);\n"
	.size	.L.str.1120, 11

	.type	.L.str.1121,@object             # @.str.1121
.L.str.1121:
	.asciz	" p2 = dynamic_cast<"
	.size	.L.str.1121, 20

	.type	.L.str.1122,@object             # @.str.1122
.L.str.1122:
	.asciz	">(kc_p2);\n"
	.size	.L.str.1122, 11

	.type	.L.str.1123,@object             # @.str.1123
.L.str.1123:
	.asciz	"\tbreak;\n    }\n"
	.size	.L.str.1123, 15

	.type	.L.str.1124,@object             # @.str.1124
.L.str.1124:
	.asciz	"\nconcat(c_"
	.size	.L.str.1124, 11

	.type	.L.str.1125,@object             # @.str.1125
.L.str.1125:
	.asciz	" kc_p1, c_"
	.size	.L.str.1125, 11

	.type	.L.str.1126,@object             # @.str.1126
.L.str.1126:
	.asciz	" kc_p2)\n{ return dynamic_cast<"
	.size	.L.str.1126, 31

	.type	.L.str.1127,@object             # @.str.1127
.L.str.1127:
	.asciz	">(kc_p1->do_concat(kc_p2, sel_Cons"
	.size	.L.str.1127, 35

	.type	.L.str.1128,@object             # @.str.1128
.L.str.1128:
	.asciz	")); }\n"
	.size	.L.str.1128, 7

	.type	.L.str.1129,@object             # @.str.1129
.L.str.1129:
	.asciz	"\nimpl_"
	.size	.L.str.1129, 7

	.type	.L.str.1130,@object             # @.str.1130
.L.str.1130:
	.asciz	"::reverse() const"
	.size	.L.str.1130, 18

	.type	.L.str.1131,@object             # @.str.1131
.L.str.1131:
	.asciz	"abstract_list\nimpl_"
	.size	.L.str.1131, 20

	.type	.L.str.1132,@object             # @.str.1132
.L.str.1132:
	.asciz	"\n{ return dynamic_cast<"
	.size	.L.str.1132, 24

	.type	.L.str.1133,@object             # @.str.1133
.L.str.1133:
	.asciz	">(do_reverse(Nil"
	.size	.L.str.1133, 17

	.type	.L.str.1134,@object             # @.str.1134
.L.str.1134:
	.asciz	"(), sel_Cons"
	.size	.L.str.1134, 13

	.type	.L.str.1135,@object             # @.str.1135
.L.str.1135:
	.asciz	")); }\n\n"
	.size	.L.str.1135, 8

	.type	.L.str.1136,@object             # @.str.1136
.L.str.1136:
	.asciz	"::last() const\n{ return dynamic_cast<"
	.size	.L.str.1136, 38

	.type	.L.str.1137,@object             # @.str.1137
.L.str.1137:
	.asciz	">(impl_abstract_list::last()); }\n\nbool\nimpl_"
	.size	.L.str.1137, 45

	.type	.L.str.1138,@object             # @.str.1138
.L.str.1138:
	.asciz	"::is_nil() const\n{\n  return "
	.size	.L.str.1138, 29

	.type	.L.str.1139,@object             # @.str.1139
.L.str.1139:
	.asciz	"_1==0 && "
	.size	.L.str.1139, 10

	.type	.L.str.1140,@object             # @.str.1140
.L.str.1140:
	.asciz	"_1==0;\n}\n\n"
	.size	.L.str.1140, 11

	.type	.L.str.1141,@object             # @.str.1141
.L.str.1141:
	.asciz	"::map("
	.size	.L.str.1141, 7

	.type	.L.str.1142,@object             # @.str.1142
.L.str.1142:
	.asciz	" (*kc_fp)("
	.size	.L.str.1142, 11

	.type	.L.str.1143,@object             # @.str.1143
.L.str.1143:
	.asciz	"))\n{ return dynamic_cast<"
	.size	.L.str.1143, 26

	.type	.L.str.1144,@object             # @.str.1144
.L.str.1144:
	.asciz	">(do_map((abstract_phylum (*)(abstract_phylum))kc_fp, sel_Cons"
	.size	.L.str.1144, 63

	.type	.L.str.1145,@object             # @.str.1145
.L.str.1145:
	.asciz	"::filter(bool (*kc_fp)("
	.size	.L.str.1145, 24

	.type	.L.str.1146,@object             # @.str.1146
.L.str.1146:
	.asciz	">(do_filter((bool (*)(abstract_phylum))kc_fp, sel_Cons"
	.size	.L.str.1146, 55

	.type	.L.str.1147,@object             # @.str.1147
.L.str.1147:
	.asciz	"::append("
	.size	.L.str.1147, 10

	.type	.L.str.1148,@object             # @.str.1148
.L.str.1148:
	.asciz	" new_last)\n{\n  return dynamic_cast<"
	.size	.L.str.1148, 36

	.type	.L.str.1149,@object             # @.str.1149
.L.str.1149:
	.asciz	">(do_append(new_last, Nil"
	.size	.L.str.1149, 26

	.type	.L.str.1150,@object             # @.str.1150
.L.str.1150:
	.asciz	"()));\n}\n"
	.size	.L.str.1150, 9

	.type	.L.str.1151,@object             # @.str.1151
.L.str.1151:
	.asciz	"::merge( "
	.size	.L.str.1151, 10

	.type	.L.str.1152,@object             # @.str.1152
.L.str.1152:
	.asciz	" second, "
	.size	.L.str.1152, 10

	.type	.L.str.1153,@object             # @.str.1153
.L.str.1153:
	.asciz	"))\n{\n    return dynamic_cast<"
	.size	.L.str.1153, 30

	.type	.L.str.1154,@object             # @.str.1154
.L.str.1154:
	.asciz	">(do_merge(second,(abstract_phylum(*)(abstract_phylum,abstract_phylum))kc_fp, sel_Cons"
	.size	.L.str.1154, 87

	.type	.L.str.1155,@object             # @.str.1155
.L.str.1155:
	.asciz	"));\n}\n"
	.size	.L.str.1155, 7

	.type	.L.str.1156,@object             # @.str.1156
.L.str.1156:
	.asciz	"::reduce( "
	.size	.L.str.1156, 11

	.type	.L.str.1157,@object             # @.str.1157
.L.str.1157:
	.asciz	" neutral, "
	.size	.L.str.1157, 11

	.type	.L.str.1158,@object             # @.str.1158
.L.str.1158:
	.asciz	">(do_reduce(neutral,(abstract_phylum(*)(abstract_phylum,abstract_phylum))kc_fp));\n}\n\n"
	.size	.L.str.1158, 86

	.type	.L.str.1159,@object             # @.str.1159
.L.str.1159:
	.asciz	"   enum_operators prod_sel() const{\n      return is_nil() ? sel_Nil"
	.size	.L.str.1159, 68

	.type	.L.str.1160,@object             # @.str.1160
.L.str.1160:
	.asciz	": sel_Cons"
	.size	.L.str.1160, 11

	.type	.L.str.1161,@object             # @.str.1161
.L.str.1161:
	.asciz	";\n    }\n    explicit impl_"
	.size	.L.str.1161, 27

	.type	.L.str.1162,@object             # @.str.1162
.L.str.1162:
	.asciz	" = 0, "
	.size	.L.str.1162, 7

	.type	.L.str.1163,@object             # @.str.1163
.L.str.1163:
	.asciz	" = 0);\n    abstract_phylum subphylum(int) const;\n    void set_subphylum(int, abstract_phylum);\n    friend "
	.size	.L.str.1163, 107

	.type	.L.str.1164,@object             # @.str.1164
.L.str.1164:
	.asciz	" concat(c_"
	.size	.L.str.1164, 11

	.type	.L.str.1165,@object             # @.str.1165
.L.str.1165:
	.asciz	", c_"
	.size	.L.str.1165, 5

	.type	.L.str.1166,@object             # @.str.1166
.L.str.1166:
	.asciz	");\n"
	.size	.L.str.1166, 4

	.type	.L.str.1167,@object             # @.str.1167
.L.str.1167:
	.asciz	" reverse() const;\n"
	.size	.L.str.1167, 19

	.type	.L.str.1168,@object             # @.str.1168
.L.str.1168:
	.asciz	" rewrite(rview);\n"
	.size	.L.str.1168, 18

	.type	.L.str.1169,@object             # @.str.1169
.L.str.1169:
	.asciz	"#else\n"
	.size	.L.str.1169, 7

	.type	.L.str.1170,@object             # @.str.1170
.L.str.1170:
	.asciz	"    abstract_list reverse() const;\n"
	.size	.L.str.1170, 36

	.type	.L.str.1171,@object             # @.str.1171
.L.str.1171:
	.asciz	"\tabstract_phylum rewrite(rview);\n"
	.size	.L.str.1171, 34

	.type	.L.str.1172,@object             # @.str.1172
.L.str.1172:
	.asciz	"#endif // NO_COVARIANT_RETURN\n"
	.size	.L.str.1172, 31

	.type	.L.str.1173,@object             # @.str.1173
.L.str.1173:
	.asciz	"\tabstract_phylum do_rewrite(rview);\n"
	.size	.L.str.1173, 37

	.type	.L.str.1174,@object             # @.str.1174
.L.str.1174:
	.asciz	" last() const;\n    "
	.size	.L.str.1174, 20

	.type	.L.str.1175,@object             # @.str.1175
.L.str.1175:
	.asciz	" append("
	.size	.L.str.1175, 9

	.type	.L.str.1176,@object             # @.str.1176
.L.str.1176:
	.asciz	");\n    "
	.size	.L.str.1176, 8

	.type	.L.str.1177,@object             # @.str.1177
.L.str.1177:
	.asciz	" map("
	.size	.L.str.1177, 6

	.type	.L.str.1178,@object             # @.str.1178
.L.str.1178:
	.asciz	" (*)("
	.size	.L.str.1178, 6

	.type	.L.str.1179,@object             # @.str.1179
.L.str.1179:
	.asciz	"));\n    "
	.size	.L.str.1179, 9

	.type	.L.str.1180,@object             # @.str.1180
.L.str.1180:
	.asciz	" filter( bool (*)("
	.size	.L.str.1180, 19

	.type	.L.str.1181,@object             # @.str.1181
.L.str.1181:
	.asciz	" merge( "
	.size	.L.str.1181, 9

	.type	.L.str.1182,@object             # @.str.1182
.L.str.1182:
	.asciz	" reduce( "
	.size	.L.str.1182, 10

	.type	.L.str.1183,@object             # @.str.1183
.L.str.1183:
	.asciz	"));\n    bool is_nil() const;\n"
	.size	.L.str.1183, 30

	.type	.L.str.1184,@object             # @.str.1184
.L.str.1184:
	.asciz	"_ptr "
	.size	.L.str.1184, 6

	.type	.L.str.1185,@object             # @.str.1185
.L.str.1185:
	.asciz	"_1;\n    "
	.size	.L.str.1185, 9

	.type	.L.str.1186,@object             # @.str.1186
.L.str.1186:
	.asciz	"_1;\n"
	.size	.L.str.1186, 5

	.type	.L.str.1187,@object             # @.str.1187
.L.str.1187:
	.asciz	"\rprivate:\013\n"
	.size	.L.str.1187, 12

	.type	.L.str.1188,@object             # @.str.1188
.L.str.1188:
	.asciz	"\t    impl_"
	.size	.L.str.1188, 11

	.type	.L.str.1189,@object             # @.str.1189
.L.str.1189:
	.asciz	"* nil_rewrite(rview);\n\t    impl_"
	.size	.L.str.1189, 33

	.type	.L.str.1190,@object             # @.str.1190
.L.str.1190:
	.asciz	"* cons_rewrite(rview);\n"
	.size	.L.str.1190, 24

	.type	.L.str.1191,@object             # @.str.1191
.L.str.1191:
	.asciz	"\t    impl_abstract_phylum* nil_rewrite(rview);\n\t    impl_abstract_phylum* cons_rewrite(rview);\n"
	.size	.L.str.1191, 96

	.type	.L.str.1192,@object             # @.str.1192
.L.str.1192:
	.asciz	"\tvoid nil_do_unparse(printer_functor, uview);\n\tvoid do_unparse(printer_functor, uview);\n"
	.size	.L.str.1192, 89

	.type	.L.str.1193,@object             # @.str.1193
.L.str.1193:
	.asciz	" rewrite(rview) =0;\n"
	.size	.L.str.1193, 21

	.type	.L.str.1194,@object             # @.str.1194
.L.str.1194:
	.asciz	"::fprintdot(FILE *f, const char *root_label_prefix, const char *edge_label_prefix, const char *edge_attributes, bool print_node_labels, bool use_context_when_sharing_leaves, bool print_prologue_and_epi"
	.size	.L.str.1194, 202

	.type	.L.str.1195,@object             # @.str.1195
.L.str.1195:
	.asciz	"logue) const\n{\n    int kc_edge_nr = 1;\n    kc_dotedgenode_t kc_edges = 0;\n    if (print_prologue_and_epilogue) fprintdotprologue(f);\n    /*if (kc_outmost)*/ kc_do_printdot_subgraph_prolo"
	.size	.L.str.1195, 187

	.type	.L.str.1196,@object             # @.str.1196
.L.str.1196:
	.asciz	"gue(f, this, root_label_prefix, edge_attributes, print_node_labels, use_context_when_sharing_leaves);\n    fprintdot_hashtable = new kc_dotedge_ht;\n    do_printdot(f, true, &kc_edge_nr, &kc_edges,"
	.size	.L.str.1196, 196

	.type	.L.str.1197,@object             # @.str.1197
.L.str.1197:
	.asciz	" edge_label_prefix, print_node_labels, use_context_when_sharing_leaves, 0, 0);\n    kc_do_printdot_edges(f, kc_edges, edge_attributes, use_context_when_sharing_leaves);\n    delete fprintdot_hashta"
	.size	.L.str.1197, 196

	.type	.L.str.1198,@object             # @.str.1198
.L.str.1198:
	.asciz	"ble;\n\tfprintdot_hashtable=0;\n    /*if (kc_outmost)*/ kc_do_printdot_subgraph_epilogue(f);\n    if (print_prologue_and_epilogue) fprintdotepilogue(f);\n}\n"
	.size	.L.str.1198, 152

	.type	_ZN12_GLOBAL__N_17gl_argsE,@object # @_ZN12_GLOBAL__N_17gl_argsE
	.local	_ZN12_GLOBAL__N_17gl_argsE
	.comm	_ZN12_GLOBAL__N_17gl_argsE,8,8
	.type	_ZN12_GLOBAL__N_19gl_identsE,@object # @_ZN12_GLOBAL__N_19gl_identsE
	.local	_ZN12_GLOBAL__N_19gl_identsE
	.comm	_ZN12_GLOBAL__N_19gl_identsE,8,8
	.type	_ZN12_GLOBAL__N_16gl_ccoE,@object # @_ZN12_GLOBAL__N_16gl_ccoE
	.local	_ZN12_GLOBAL__N_16gl_ccoE
	.comm	_ZN12_GLOBAL__N_16gl_ccoE,8,8
	.type	_ZN12_GLOBAL__N_16gl_stoE,@object # @_ZN12_GLOBAL__N_16gl_stoE
	.local	_ZN12_GLOBAL__N_16gl_stoE
	.comm	_ZN12_GLOBAL__N_16gl_stoE,8,8
	.type	.L.str.1199,@object             # @.str.1199
.L.str.1199:
	.asciz	"//"
	.size	.L.str.1199, 3

	.type	.L.str.1200,@object             # @.str.1200
.L.str.1200:
	.asciz	" Nil"
	.size	.L.str.1200, 5

	.type	.L.str.1201,@object             # @.str.1201
.L.str.1201:
	.asciz	"();\n    //"
	.size	.L.str.1201, 11

	.type	.L.str.1202,@object             # @.str.1202
.L.str.1202:
	.asciz	" Cons"
	.size	.L.str.1202, 6

	.type	.L.str.1203,@object             # @.str.1203
.L.str.1203:
	.asciz	","
	.size	.L.str.1203, 2

	.type	.L.str.1204,@object             # @.str.1204
.L.str.1204:
	.asciz	"();\n    "
	.size	.L.str.1204, 9

	.type	.L.str.1205,@object             # @.str.1205
.L.str.1205:
	.asciz	" yt_"
	.size	.L.str.1205, 5

	.type	.L.str.1206,@object             # @.str.1206
.L.str.1206:
	.asciz	"typedef impl_"
	.size	.L.str.1206, 14

	.type	.L.str.1207,@object             # @.str.1207
.L.str.1207:
	.asciz	" *"
	.size	.L.str.1207, 3

	.type	.L.str.1208,@object             # @.str.1208
.L.str.1208:
	.asciz	";\ntypedef const impl_"
	.size	.L.str.1208, 22

	.type	.L.str.1209,@object             # @.str.1209
.L.str.1209:
	.asciz	" *c_"
	.size	.L.str.1209, 5

	.type	_ZN12_GLOBAL__N_116gl_storageoptionE,@object # @_ZN12_GLOBAL__N_116gl_storageoptionE
	.local	_ZN12_GLOBAL__N_116gl_storageoptionE
	.comm	_ZN12_GLOBAL__N_116gl_storageoptionE,8,8
	.type	_ZN12_GLOBAL__N_112gl_atomicityE,@object # @_ZN12_GLOBAL__N_112gl_atomicityE
	.local	_ZN12_GLOBAL__N_112gl_atomicityE
	.comm	_ZN12_GLOBAL__N_112gl_atomicityE,1,1
	.type	.L.str.1210,@object             # @.str.1210
.L.str.1210:
	.asciz	"    { \""
	.size	.L.str.1210, 8

	.type	.L.str.1211,@object             # @.str.1211
.L.str.1211:
	.asciz	"\", "
	.size	.L.str.1211, 4

	.type	.L.str.1212,@object             # @.str.1212
.L.str.1212:
	.asciz	" },\n"
	.size	.L.str.1212, 5

	.type	.L.str.1213,@object             # @.str.1213
.L.str.1213:
	.asciz	"    phylum_"
	.size	.L.str.1213, 12

	.type	.L.str.1214,@object             # @.str.1214
.L.str.1214:
	.asciz	" = "
	.size	.L.str.1214, 4

	.type	.L.str.1215,@object             # @.str.1215
.L.str.1215:
	.asciz	",\n"
	.size	.L.str.1215, 3

	.type	.L.str.1216,@object             # @.str.1216
.L.str.1216:
	.asciz	"#define kc_phylum_"
	.size	.L.str.1216, 19

	.type	.L.str.1217,@object             # @.str.1217
.L.str.1217:
	.asciz	" phylum_"
	.size	.L.str.1217, 9

	.type	_ZL12cl_storageID,@object       # @_ZL12cl_storageID
	.local	_ZL12cl_storageID
	.comm	_ZL12cl_storageID,8,8
	.type	.L.str.1218,@object             # @.str.1218
.L.str.1218:
	.asciz	"'uniq' declared phylum:"
	.size	.L.str.1218, 24

	.type	_ZL11cl_uniqueID,@object        # @_ZL11cl_uniqueID
	.local	_ZL11cl_uniqueID
	.comm	_ZL11cl_uniqueID,8,8
	.type	.L.str.1219,@object             # @.str.1219
.L.str.1219:
	.asciz	"has non 'uniq' (transitive) subterm:"
	.size	.L.str.1219, 37

	.type	.L.str.1220,@object             # @.str.1220
.L.str.1220:
	.asciz	" kc_initialize_"
	.size	.L.str.1220, 16

	.type	.L.str.1221,@object             # @.str.1221
.L.str.1221:
	.asciz	" kc_x)\n{\n"
	.size	.L.str.1221, 10

	.type	.L.str.1222,@object             # @.str.1222
.L.str.1222:
	.asciz	"    return kc_x;\n}\n\n"
	.size	.L.str.1222, 21

	.type	.L.str.1223,@object             # @.str.1223
.L.str.1223:
	.asciz	"no operators defined for phylum"
	.size	.L.str.1223, 32

	.type	.L.str.1224,@object             # @.str.1224
.L.str.1224:
	.asciz	"{ "
	.size	.L.str.1224, 3

	.type	.L.str.1225,@object             # @.str.1225
.L.str.1225:
	.asciz	" } at "
	.size	.L.str.1225, 7

	.type	.L.str.1226,@object             # @.str.1226
.L.str.1226:
	.asciz	"kc_not_uniq"
	.size	.L.str.1226, 12

	.type	.L.str.1227,@object             # @.str.1227
.L.str.1227:
	.asciz	"{! "
	.size	.L.str.1227, 4

	.type	.L.str.1228,@object             # @.str.1228
.L.str.1228:
	.asciz	"&"
	.size	.L.str.1228, 2

	.type	.L.str.1229,@object             # @.str.1229
.L.str.1229:
	.asciz	"_static_hashtable,\n"
	.size	.L.str.1229, 20

	.type	.L.str.1230,@object             # @.str.1230
.L.str.1230:
	.asciz	"true"
	.size	.L.str.1230, 5

	.type	.L.str.1231,@object             # @.str.1231
.L.str.1231:
	.asciz	", true"
	.size	.L.str.1231, 7

	.type	.L.str.1232,@object             # @.str.1232
.L.str.1232:
	.asciz	"static hashtable_struct_t "
	.size	.L.str.1232, 27

	.type	.L.str.1233,@object             # @.str.1233
.L.str.1233:
	.asciz	"_static_hashtable;\n"
	.size	.L.str.1233, 20

	.type	.L.str.1234,@object             # @.str.1234
.L.str.1234:
	.asciz	"\""
	.size	.L.str.1234, 2

	.type	.L.str.1235,@object             # @.str.1235
.L.str.1235:
	.asciz	", \""
	.size	.L.str.1235, 4

	.type	.L.str.1236,@object             # @.str.1236
.L.str.1236:
	.asciz	"    phylumstorageclass_"
	.size	.L.str.1236, 24

	.type	.L.str.1237,@object             # @.str.1237
.L.str.1237:
	.asciz	"    (KC_UNIQ_INFO)0"
	.size	.L.str.1237, 20

	.type	.L.str.1238,@object             # @.str.1238
.L.str.1238:
	.asciz	",\n    phylumstorageclass_"
	.size	.L.str.1238, 26

	.type	.L.str.1239,@object             # @.str.1239
.L.str.1239:
	.asciz	",\n    (KC_UNIQ_INFO)0"
	.size	.L.str.1239, 22

	.type	.L.str.1240,@object             # @.str.1240
.L.str.1240:
	.asciz	"static enum_phyla phylumstorageclass_"
	.size	.L.str.1240, 38

	.type	.L.str.1241,@object             # @.str.1241
.L.str.1241:
	.asciz	"[] = { one_before_first_phylum, "
	.size	.L.str.1241, 33

	.type	.L.str.1242,@object             # @.str.1242
.L.str.1242:
	.asciz	"last_phylum };\n"
	.size	.L.str.1242, 16

	.type	.L.str.1243,@object             # @.str.1243
.L.str.1243:
	.asciz	"\nKC_UNIQ_INFO kc_UniqInfo[] = {\n"
	.size	.L.str.1243, 33

	.type	.L.str.1244,@object             # @.str.1244
.L.str.1244:
	.asciz	"\n};\n"
	.size	.L.str.1244, 5

	.type	.L.str.1245,@object             # @.str.1245
.L.str.1245:
	.asciz	",\n\t"
	.size	.L.str.1245, 4

	.type	.L.str.1246,@object             # @.str.1246
.L.str.1246:
	.asciz	"sel_"
	.size	.L.str.1246, 5

	.type	.L.str.1247,@object             # @.str.1247
.L.str.1247:
	.asciz	", sel_"
	.size	.L.str.1247, 7

	.type	.L.str.1248,@object             # @.str.1248
.L.str.1248:
	.asciz	"void\nimpl_"
	.size	.L.str.1248, 11

	.type	.L.str.1249,@object             # @.str.1249
.L.str.1249:
	.asciz	"::do_unparse(printer_functor kc_printer, uview kc_current_view_base)\n{\n    if(is_nil())\n\tnil_do_unparse(kc_printer, kc_current_view_base);\n    else\n\tswitch(kc_current_view_base) {\n"
	.size	.L.str.1249, 181

	.type	.L.str.1250,@object             # @.str.1250
.L.str.1250:
	.asciz	"\t}\n}\n\nvoid\nimpl_"
	.size	.L.str.1250, 17

	.type	.L.str.1251,@object             # @.str.1251
.L.str.1251:
	.asciz	"::nil_do_unparse(printer_functor kc_printer, uview kc_current_view_base)\n{\n    switch(kc_current_view_base) {\n"
	.size	.L.str.1251, 111

	.type	.L.str.1252,@object             # @.str.1252
.L.str.1252:
	.asciz	"    }\n}\n\n"
	.size	.L.str.1252, 10

	.type	.L.str.1253,@object             # @.str.1253
.L.str.1253:
	.asciz	"abstract_phylum"
	.size	.L.str.1253, 16

	.type	.L.str.1254,@object             # @.str.1254
.L.str.1254:
	.asciz	"do_"
	.size	.L.str.1254, 4

	.type	.L.str.1255,@object             # @.str.1255
.L.str.1255:
	.asciz	"rewrite(rview kc_current_view_base)\n{\n    if (is_nil()) {\n"
	.size	.L.str.1255, 59

	.type	.L.str.1256,@object             # @.str.1256
.L.str.1256:
	.asciz	"   } else { // not Nil, Cons\n"
	.size	.L.str.1256, 30

	.type	.L.str.1257,@object             # @.str.1257
.L.str.1257:
	.asciz	"   }\n}\n"
	.size	.L.str.1257, 8

	.type	.L.str.1258,@object             # @.str.1258
.L.str.1258:
	.asciz	"::set_subphylum(int no, abstract_phylum val)\n{\n    abstract_phylum newval=0;\n    switch(no) {\n"
	.size	.L.str.1258, 95

	.type	.L.str.1259,@object             # @.str.1259
.L.str.1259:
	.asciz	"   }\n    assertNonNull(newval);\n}\n"
	.size	.L.str.1259, 35

	.type	.L.str.1260,@object             # @.str.1260
.L.str.1260:
	.asciz	"::subphylum(int no) const\n{\n  switch(no){\n"
	.size	.L.str.1260, 43

	.type	.L.str.1261,@object             # @.str.1261
.L.str.1261:
	.asciz	"  }\n  return 0;\n}\n"
	.size	.L.str.1261, 19

	.type	.L.str.1262,@object             # @.str.1262
.L.str.1262:
	.asciz	"\rprivate:\013\n\tvoid do_unparse(printer_functor, uview);\n"
	.size	.L.str.1262, 54

	.type	.L.str.1263,@object             # @.str.1263
.L.str.1263:
	.asciz	"case sel_"
	.size	.L.str.1263, 10

	.type	.L.str.1264,@object             # @.str.1264
.L.str.1264:
	.asciz	": switch(no) {\n"
	.size	.L.str.1264, 16

	.type	.L.str.1265,@object             # @.str.1265
.L.str.1265:
	.asciz	"}\n\t"
	.size	.L.str.1265, 4

	.type	.L.str.1266,@object             # @.str.1266
.L.str.1266:
	.asciz	"   \rcase sel_"
	.size	.L.str.1266, 14

	.type	.L.str.1267,@object             # @.str.1267
.L.str.1267:
	.asciz	":\013\n\treturn "
	.size	.L.str.1267, 12

	.type	_ZN12_GLOBAL__N_112gl_isnotlistE,@object # @_ZN12_GLOBAL__N_112gl_isnotlistE
	.local	_ZN12_GLOBAL__N_112gl_isnotlistE
	.comm	_ZN12_GLOBAL__N_112gl_isnotlistE,1,1
	.type	.L.str.1268,@object             # @.str.1268
.L.str.1268:
	.asciz	"internal error: experimental operator_cast<>() unlikely to work with user-defined constructors"
	.size	.L.str.1268, 95

	.type	.L.str.1269,@object             # @.str.1269
.L.str.1269:
	.asciz	"template <class "
	.size	.L.str.1269, 17

	.type	.L.str.1270,@object             # @.str.1270
.L.str.1270:
	.asciz	"*\b kc_f("
	.size	.L.str.1270, 9

	.type	.L.str.1271,@object             # @.str.1271
.L.str.1271:
	.asciz	")>\n\t class "
	.size	.L.str.1271, 12

	.type	.L.str.1272,@object             # @.str.1272
.L.str.1272:
	.asciz	"*\n\t operator_cast("
	.size	.L.str.1272, 19

	.type	.L.str.1273,@object             # @.str.1273
.L.str.1273:
	.asciz	" kc_p)\n\t {\n\t     if (kc_f!="
	.size	.L.str.1273, 28

	.type	.L.str.1274,@object             # @.str.1274
.L.str.1274:
	.asciz	" || kc_p->prod_sel()!=sel_"
	.size	.L.str.1274, 27

	.type	.L.str.1275,@object             # @.str.1275
.L.str.1275:
	.asciz	")\n\t\t throw std::bad_cast();\n\t     return static_cast<class "
	.size	.L.str.1275, 60

	.type	.L.str.1276,@object             # @.str.1276
.L.str.1276:
	.asciz	"*>(kc_p);\n\t }\n\n"
	.size	.L.str.1276, 16

	.type	.L.str.1277,@object             # @.str.1277
.L.str.1277:
	.asciz	"*\b "
	.size	.L.str.1277, 4

	.type	.L.str.1278,@object             # @.str.1278
.L.str.1278:
	.asciz	" ("
	.size	.L.str.1278, 3

	.type	.L.str.1279,@object             # @.str.1279
.L.str.1279:
	.asciz	"static enum_phyla kc_attrs_"
	.size	.L.str.1279, 28

	.type	.L.str.1280,@object             # @.str.1280
.L.str.1280:
	.asciz	"[] = { "
	.size	.L.str.1280, 8

	.type	.L.str.1281,@object             # @.str.1281
.L.str.1281:
	.asciz	" };\n\t"
	.size	.L.str.1281, 6

	.type	.L.str.1282,@object             # @.str.1282
.L.str.1282:
	.asciz	"static enum_phyla kc_subphyla_"
	.size	.L.str.1282, 31

	.type	.L.str.1283,@object             # @.str.1283
.L.str.1283:
	.asciz	"false"
	.size	.L.str.1283, 6

	.type	.L.str.1284,@object             # @.str.1284
.L.str.1284:
	.asciz	", phylum_"
	.size	.L.str.1284, 10

	.type	.L.str.1285,@object             # @.str.1285
.L.str.1285:
	.asciz	"kc_subphyla_"
	.size	.L.str.1285, 13

	.type	.L.str.1286,@object             # @.str.1286
.L.str.1286:
	.asciz	"0, "
	.size	.L.str.1286, 4

	.type	.L.str.1287,@object             # @.str.1287
.L.str.1287:
	.asciz	"kc_attrs_"
	.size	.L.str.1287, 10

	.type	.L.str.1288,@object             # @.str.1288
.L.str.1288:
	.asciz	"0"
	.size	.L.str.1288, 2

	.type	.L.str.1289,@object             # @.str.1289
.L.str.1289:
	.asciz	", sizeof("
	.size	.L.str.1289, 10

	.type	.L.str.1290,@object             # @.str.1290
.L.str.1290:
	.asciz	") },\n"
	.size	.L.str.1290, 6

	.type	.L.str.1291,@object             # @.str.1291
.L.str.1291:
	.asciz	")\n\013"
	.size	.L.str.1291, 4

	.type	.L.str.1292,@object             # @.str.1292
.L.str.1292:
	.asciz	"public impl_"
	.size	.L.str.1292, 13

	.type	.L.str.1293,@object             # @.str.1293
.L.str.1293:
	.asciz	"{\n\rpublic:\013\n    enum_operators prod_sel() const\n    \013{ return sel_"
	.size	.L.str.1293, 67

	.type	.L.str.1294,@object             # @.str.1294
.L.str.1294:
	.asciz	"; }\r\n"
	.size	.L.str.1294, 6

	.type	.L.str.1295,@object             # @.str.1295
.L.str.1295:
	.asciz	");\n\t"
	.size	.L.str.1295, 5

	.type	.L.str.1296,@object             # @.str.1296
.L.str.1296:
	.asciz	"\rprivate:\013\n\texplicit impl_"
	.size	.L.str.1296, 27

	.type	.L.str.1297,@object             # @.str.1297
.L.str.1297:
	.asciz	"(const kc_char_t*);\n\tvoid make_own(int length);\n\tfriend "
	.size	.L.str.1297, 57

	.type	.L.str.1298,@object             # @.str.1298
.L.str.1298:
	.asciz	" mk"
	.size	.L.str.1298, 4

	.type	.L.str.1299,@object             # @.str.1299
.L.str.1299:
	.asciz	"(const kc_char_t*, int);\n\rpublic:\013\n\t~impl_"
	.size	.L.str.1299, 43

	.type	.L.str.1300,@object             # @.str.1300
.L.str.1300:
	.asciz	"() {\n\t#if defined (_MSC_VER) && _MSC_VER<1300\n\t    delete [] (kc_char_t*)name;\n\t#else\n\t    delete [] name;\n\t#endif\n\t}\n"
	.size	.L.str.1300, 119

	.type	.L.str.1301,@object             # @.str.1301
.L.str.1301:
	.asciz	"       abstract_phylum subphylum(int) const;\n\tvoid set_subphylum(int, abstract_phylum);\n"
	.size	.L.str.1301, 89

	.type	.L.str.1302,@object             # @.str.1302
.L.str.1302:
	.asciz	"void fprintdot( FILE*, const char*, const char*, const char*, bool, bool, bool ) const;\n"
	.size	.L.str.1302, 89

	.type	.L.str.1303,@object             # @.str.1303
.L.str.1303:
	.asciz	" rewrite( rview );"
	.size	.L.str.1303, 19

	.type	.L.str.1304,@object             # @.str.1304
.L.str.1304:
	.asciz	"abstract_phylum rewrite( rview );"
	.size	.L.str.1304, 34

	.type	.L.str.1305,@object             # @.str.1305
.L.str.1305:
	.asciz	" do_rewrite( rview );"
	.size	.L.str.1305, 22

	.type	.L.str.1306,@object             # @.str.1306
.L.str.1306:
	.asciz	"abstract_phylum do_rewrite( rview );"
	.size	.L.str.1306, 37

	.type	.L.str.1307,@object             # @.str.1307
.L.str.1307:
	.asciz	" rewrite( rview )"
	.size	.L.str.1307, 18

	.type	.L.str.1308,@object             # @.str.1308
.L.str.1308:
	.asciz	"abstract_phylum rewrite( rview )"
	.size	.L.str.1308, 33

	.type	.L.str.1309,@object             # @.str.1309
.L.str.1309:
	.asciz	"\n\013{ return this; }\r"
	.size	.L.str.1309, 20

	.type	.L.str.1310,@object             # @.str.1310
.L.str.1310:
	.asciz	"abstract_phylum_ref* new_phylum_ref() {\n        return new phylum_ref<impl_"
	.size	.L.str.1310, 76

	.type	.L.str.1311,@object             # @.str.1311
.L.str.1311:
	.asciz	">(self->copy(true));\n\t    my_ref->set_phylum(self);\n\t}\n\treturn *self;\n    }\n"
	.size	.L.str.1311, 77

	.type	.L.str.1312,@object             # @.str.1312
.L.str.1312:
	.asciz	"& operator=(const phylum_ref<"
	.size	.L.str.1312, 30

	.type	.L.str.1313,@object             # @.str.1313
.L.str.1313:
	.asciz	">& r) {\n\tphylum_ref<"
	.size	.L.str.1313, 21

	.type	.L.str.1314,@object             # @.str.1314
.L.str.1314:
	.asciz	">* my_ref=static_cast<phylum_ref<"
	.size	.L.str.1314, 34

	.type	.L.str.1315,@object             # @.str.1315
.L.str.1315:
	.asciz	">(r.get_phylum()?r.get_phylum()->copy(true):0);\n\t    my_ref->set_phylum(self);\n\t}\n\treturn *self;\n    }\n    "
	.size	.L.str.1315, 108

	.type	.L.str.1316,@object             # @.str.1316
.L.str.1316:
	.asciz	"& p) {\n\treturn "
	.size	.L.str.1316, 16

	.type	.L.str.1317,@object             # @.str.1317
.L.str.1317:
	.asciz	"::operator=(p);\n    }\n    impl_"
	.size	.L.str.1317, 32

	.type	.L.str.1318,@object             # @.str.1318
.L.str.1318:
	.asciz	">& r) {\n\treturn "
	.size	.L.str.1318, 17

	.type	.L.str.1319,@object             # @.str.1319
.L.str.1319:
	.asciz	"::operator=(r);\n    }\n    "
	.size	.L.str.1319, 27

	.type	.L.str.1320,@object             # @.str.1320
.L.str.1320:
	.asciz	"\t{\n"
	.size	.L.str.1320, 4

	.type	.L.str.1321,@object             # @.str.1321
.L.str.1321:
	.asciz	"\t}\n"
	.size	.L.str.1321, 4

	.type	_ZN12_GLOBAL__N_120gl_unparse_goto_usedE,@object # @_ZN12_GLOBAL__N_120gl_unparse_goto_usedE
	.local	_ZN12_GLOBAL__N_120gl_unparse_goto_usedE
	.comm	_ZN12_GLOBAL__N_120gl_unparse_goto_usedE,1,1
	.type	.L.str.1322,@object             # @.str.1322
.L.str.1322:
	.asciz	"::do_unparse(printer_functor kc_printer, uview kc_current_view_base)\n{\n    switch(kc_current_view_base) {\n"
	.size	.L.str.1322, 107

	.type	.L.str.1323,@object             # @.str.1323
.L.str.1323:
	.asciz	"\t}\n}\n\n"
	.size	.L.str.1323, 7

	.type	_ZN12_GLOBAL__N_114gl_alternativeE,@object # @_ZN12_GLOBAL__N_114gl_alternativeE
	.local	_ZN12_GLOBAL__N_114gl_alternativeE
	.comm	_ZN12_GLOBAL__N_114gl_alternativeE,8,8
	.type	_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE,@object # @_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE
	.local	_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE
	.comm	_ZN12_GLOBAL__N_120gl_rewrite_goto_usedE,1,1
	.type	.L.str.1324,@object             # @.str.1324
.L.str.1324:
	.asciz	"    switch(kc_current_view_base) {\n"
	.size	.L.str.1324, 36

	.type	.L.str.1325,@object             # @.str.1325
.L.str.1325:
	.asciz	"    }\n"
	.size	.L.str.1325, 7

	.type	_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE,@object # @_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE
	.local	_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE
	.comm	_ZN12_GLOBAL__N_122gl_rewrite_rewriteinfoE,8,8
	.type	.L.str.1326,@object             # @.str.1326
.L.str.1326:
	.asciz	"rewrite(rview kc_current_view_base)\n{\n"
	.size	.L.str.1326, 39

	.type	.L.str.1327,@object             # @.str.1327
.L.str.1327:
	.asciz	"\n}\n"
	.size	.L.str.1327, 4

	.type	.L.str.1328,@object             # @.str.1328
.L.str.1328:
	.asciz	"// TODO: Is this code ever generated?\n"
	.size	.L.str.1328, 39

	.type	.L.str.1329,@object             # @.str.1329
.L.str.1329:
	.asciz	"));\n"
	.size	.L.str.1329, 5

	.type	.L.str.1330,@object             # @.str.1330
.L.str.1330:
	.asciz	"    "
	.size	.L.str.1330, 5

	.type	.L.str.1331,@object             # @.str.1331
.L.str.1331:
	.asciz	"    sel_"
	.size	.L.str.1331, 9

	.type	.L.str.1332,@object             # @.str.1332
.L.str.1332:
	.asciz	"#define kc_tag_"
	.size	.L.str.1332, 16

	.type	.L.str.1333,@object             # @.str.1333
.L.str.1333:
	.asciz	"void kc_initialize_"
	.size	.L.str.1333, 20

	.type	.L.str.1334,@object             # @.str.1334
.L.str.1334:
	.asciz	"()\n\t    {\n"
	.size	.L.str.1334, 11

	.type	.L.str.1335,@object             # @.str.1335
.L.str.1335:
	.asciz	", _"
	.size	.L.str.1335, 4

	.type	.L.str.1336,@object             # @.str.1336
.L.str.1336:
	.asciz	"case "
	.size	.L.str.1336, 6

	.type	.L.str.1337,@object             # @.str.1337
.L.str.1337:
	.asciz	": newval = "
	.size	.L.str.1337, 12

	.type	.L.str.1338,@object             # @.str.1338
.L.str.1338:
	.asciz	" = dynamic_cast<"
	.size	.L.str.1338, 17

	.type	.L.str.1339,@object             # @.str.1339
.L.str.1339:
	.asciz	">(val);break;\n"
	.size	.L.str.1339, 15

	.type	.L.str.1340,@object             # @.str.1340
.L.str.1340:
	.asciz	": return "
	.size	.L.str.1340, 10

	.type	.L.str.1341,@object             # @.str.1341
.L.str.1341:
	.asciz	"\t    for ("
	.size	.L.str.1341, 11

	.type	.L.str.1342,@object             # @.str.1342
.L.str.1342:
	.asciz	" iterator_ = this; iterator_->"
	.size	.L.str.1342, 31

	.type	.L.str.1343,@object             # @.str.1343
.L.str.1343:
	.asciz	"_1 != 0; iterator_ = iterator_->"
	.size	.L.str.1343, 33

	.type	.L.str.1344,@object             # @.str.1344
.L.str.1344:
	.asciz	"_1)\n\t\t\013iterator_->"
	.size	.L.str.1344, 19

	.type	.L.str.1345,@object             # @.str.1345
.L.str.1345:
	.asciz	"_1->unparse(kc_printer, kc_current_view);\r\n"
	.size	.L.str.1345, 44

	.type	.L.str.1346,@object             # @.str.1346
.L.str.1346:
	.asciz	"\t    "
	.size	.L.str.1346, 6

	.type	.L.str.1347,@object             # @.str.1347
.L.str.1347:
	.asciz	"->"
	.size	.L.str.1347, 3

	.type	.L.str.1348,@object             # @.str.1348
.L.str.1348:
	.asciz	"unparse(kc_printer, kc_current_view );\n"
	.size	.L.str.1348, 40

	.type	.L.str.1349,@object             # @.str.1349
.L.str.1349:
	.asciz	"default_unparse(kc_printer, kc_current_view );\n"
	.size	.L.str.1349, 48

	.type	.L.str.1350,@object             # @.str.1350
.L.str.1350:
	.asciz	"l_"
	.size	.L.str.1350, 3

	.type	.L.str.1351,@object             # @.str.1351
.L.str.1351:
	.asciz	" == "
	.size	.L.str.1351, 5

	.type	.L.str.1352,@object             # @.str.1352
.L.str.1352:
	.asciz	") &&  (l_"
	.size	.L.str.1352, 10

	.type	.L.str.1353,@object             # @.str.1353
.L.str.1353:
	.asciz	"\tif (("
	.size	.L.str.1353, 7

	.type	.L.str.1354,@object             # @.str.1354
.L.str.1354:
	.asciz	"))\n\t    return this;\n\telse {\n\t    impl_"
	.size	.L.str.1354, 40

	.type	.L.str.1355,@object             # @.str.1355
.L.str.1355:
	.asciz	"* kc_result= "
	.size	.L.str.1355, 14

	.type	.L.str.1356,@object             # @.str.1356
.L.str.1356:
	.asciz	");\n\t    kc_result->rewrite_members(this);\n\t    return kc_result;\n\t}"
	.size	.L.str.1356, 68

	.type	.L.str.1357,@object             # @.str.1357
.L.str.1357:
	.asciz	"\treturn this;"
	.size	.L.str.1357, 14

	.type	.L.str.1358,@object             # @.str.1358
.L.str.1358:
	.asciz	" kc_rp = (("
	.size	.L.str.1358, 12

	.type	.L.str.1359,@object             # @.str.1359
.L.str.1359:
	.asciz	"))\n\t    ? this\n\t    : "
	.size	.L.str.1359, 23

	.type	.L.str.1360,@object             # @.str.1360
.L.str.1360:
	.asciz	"_ptr l_"
	.size	.L.str.1360, 8

	.type	.L.str.1361,@object             # @.str.1361
.L.str.1361:
	.asciz	" ="
	.size	.L.str.1361, 3

	.type	.L.str.1362,@object             # @.str.1362
.L.str.1362:
	.asciz	" l_"
	.size	.L.str.1362, 4

	.type	.L.str.1363,@object             # @.str.1363
.L.str.1363:
	.asciz	"\013"
	.size	.L.str.1363, 2

	.type	.L.str.1364,@object             # @.str.1364
.L.str.1364:
	.asciz	"->rewrite(kc_current_view_base);\r\n"
	.size	.L.str.1364, 35

	.type	.L.str.1365,@object             # @.str.1365
.L.str.1365:
	.asciz	"\013static_cast<"
	.size	.L.str.1365, 14

	.type	.L.str.1366,@object             # @.str.1366
.L.str.1366:
	.asciz	">("
	.size	.L.str.1366, 3

	.type	.L.str.1367,@object             # @.str.1367
.L.str.1367:
	.asciz	"->rewrite(kc_current_view_base));\r\n"
	.size	.L.str.1367, 36

	.type	.L.str.1368,@object             # @.str.1368
.L.str.1368:
	.asciz	" && (dynamic_cast<impl_"
	.size	.L.str.1368, 24

	.type	.L.str.1369,@object             # @.str.1369
.L.str.1369:
	.asciz	"*>(kc_x)->"
	.size	.L.str.1369, 11

	.type	.L.str.1370,@object             # @.str.1370
.L.str.1370:
	.asciz	" && (kc_x->"
	.size	.L.str.1370, 12

	.type	.L.str.1371,@object             # @.str.1371
.L.str.1371:
	.asciz	" == _"
	.size	.L.str.1371, 6

	.type	.L.str.1372,@object             # @.str.1372
.L.str.1372:
	.asciz	"(_"
	.size	.L.str.1372, 3

	.type	.L.str.1373,@object             # @.str.1373
.L.str.1373:
	.asciz	" = _"
	.size	.L.str.1373, 5

	.type	.L.str.1374,@object             # @.str.1374
.L.str.1374:
	.asciz	" _"
	.size	.L.str.1374, 3

	.type	.L.str.1375,@object             # @.str.1375
.L.str.1375:
	.asciz	"assertPhylum(_"
	.size	.L.str.1375, 15

	.type	.L.str.1376,@object             # @.str.1376
.L.str.1376:
	.asciz	": return reinterpret_cast<abstract_phylum&>(phylum_cast<"
	.size	.L.str.1376, 57

	.type	.L.str.1377,@object             # @.str.1377
.L.str.1377:
	.asciz	"*>(kc_p)->"
	.size	.L.str.1377, 11

	.type	.L.str.1378,@object             # @.str.1378
.L.str.1378:
	.asciz	"phylum_cast<"
	.size	.L.str.1378, 13

	.type	.L.str.1379,@object             # @.str.1379
.L.str.1379:
	.asciz	">(kc_p1)"
	.size	.L.str.1379, 9

	.type	_ZN12_GLOBAL__N_118gl_generic_counterE,@object # @_ZN12_GLOBAL__N_118gl_generic_counterE
	.local	_ZN12_GLOBAL__N_118gl_generic_counterE
	.comm	_ZN12_GLOBAL__N_118gl_generic_counterE,4,4
	.type	.L.str.1380,@object             # @.str.1380
.L.str.1380:
	.asciz	">(kc_p"
	.size	.L.str.1380, 7

	.type	.L.str.1381,@object             # @.str.1381
.L.str.1381:
	.asciz	"* "
	.size	.L.str.1381, 3

	.type	.L.str.1382,@object             # @.str.1382
.L.str.1382:
	.asciz	"_ptr& "
	.size	.L.str.1382, 7

	.type	.L.str.1383,@object             # @.str.1383
.L.str.1383:
	.asciz	"*& "
	.size	.L.str.1383, 4

	.type	.L.str.1384,@object             # @.str.1384
.L.str.1384:
	.asciz	" /* = "
	.size	.L.str.1384, 7

	.type	.L.str.1385,@object             # @.str.1385
.L.str.1385:
	.asciz	"*/;\n"
	.size	.L.str.1385, 5

	.type	.L.str.1386,@object             # @.str.1386
.L.str.1386:
	.asciz	"\treturn this;\n"
	.size	.L.str.1386, 15

	.type	.L.str.1387,@object             # @.str.1387
.L.str.1387:
	.asciz	" kc_rp = this;\n"
	.size	.L.str.1387, 16

	.type	.L.str.1388,@object             # @.str.1388
.L.str.1388:
	.asciz	"    p2->"
	.size	.L.str.1388, 9

	.type	.L.str.1389,@object             # @.str.1389
.L.str.1389:
	.asciz	" = p1->"
	.size	.L.str.1389, 8

	.type	.L.str.1390,@object             # @.str.1390
.L.str.1390:
	.asciz	"kc_x"
	.size	.L.str.1390, 5

	.type	.L.str.1391,@object             # @.str.1391
.L.str.1391:
	.asciz	" \""
	.size	.L.str.1391, 3

	.type	.L.str.1392,@object             # @.str.1392
.L.str.1392:
	.asciz	"    kc_x->"
	.size	.L.str.1392, 11

	.type	.L.str.1393,@object             # @.str.1393
.L.str.1393:
	.asciz	"["
	.size	.L.str.1393, 2

	.type	.L.str.1394,@object             # @.str.1394
.L.str.1394:
	.asciz	"]"
	.size	.L.str.1394, 2

	.type	.L.str.1395,@object             # @.str.1395
.L.str.1395:
	.asciz	"'"
	.size	.L.str.1395, 2

	.type	.L.str.1396,@object             # @.str.1396
.L.str.1396:
	.asciz	"$"
	.size	.L.str.1396, 2

	.type	_ZN12_GLOBAL__N_113gl_outer_viewE,@object # @_ZN12_GLOBAL__N_113gl_outer_viewE
	.local	_ZN12_GLOBAL__N_113gl_outer_viewE
	.comm	_ZN12_GLOBAL__N_113gl_outer_viewE,4,4
	.type	.L.str.1397,@object             # @.str.1397
.L.str.1397:
	.asciz	"\\\n\\n"
	.size	.L.str.1397, 5

	.type	_ZN12_GLOBAL__N_114g_fe_selvar_nrE,@object # @_ZN12_GLOBAL__N_114g_fe_selvar_nrE
	.local	_ZN12_GLOBAL__N_114g_fe_selvar_nrE
	.comm	_ZN12_GLOBAL__N_114g_fe_selvar_nrE,4,4
	.type	.L.str.1398,@object             # @.str.1398
.L.str.1398:
	.asciz	"kc_fe_selvar_"
	.size	.L.str.1398, 14

	.type	.L.str.1399,@object             # @.str.1399
.L.str.1399:
	.asciz	" = kc_fe_selvar_"
	.size	.L.str.1399, 17

	.type	.L.str.1400,@object             # @.str.1400
.L.str.1400:
	.asciz	"    kc_fe_selvar_"
	.size	.L.str.1400, 18

	.type	.L.str.1401,@object             # @.str.1401
.L.str.1401:
	.asciz	"->prod_sel() == sel_Cons"
	.size	.L.str.1401, 25

	.type	.L.str.1402,@object             # @.str.1402
.L.str.1402:
	.asciz	"    && kc_fe_selvar_"
	.size	.L.str.1402, 21

	.type	.L.str.1403,@object             # @.str.1403
.L.str.1403:
	.asciz	" kc_fe_selvar_"
	.size	.L.str.1403, 15

	.type	.L.str.1404,@object             # @.str.1404
.L.str.1404:
	.asciz	"namespace kc { }\nusing namespace kc;\n/* included stuff */\n"
	.size	.L.str.1404, 59

	.type	.L.str.1405,@object             # @.str.1405
.L.str.1405:
	.asciz	"/* end included stuff */\n\n"
	.size	.L.str.1405, 27

	.type	_ZL8cl_scope,@object            # @_ZL8cl_scope
	.local	_ZL8cl_scope
	.comm	_ZL8cl_scope,4,4
	.type	.L.str.1406,@object             # @.str.1406
.L.str.1406:
	.asciz	"'default' can not be &-ed with (other) patterns"
	.size	.L.str.1406, 48

	.type	.L.str.1407,@object             # @.str.1407
.L.str.1407:
	.asciz	"more &-ed patterns than expressions"
	.size	.L.str.1407, 36

	.type	.L.str.1408,@object             # @.str.1408
.L.str.1408:
	.asciz	"fewer &-ed patterns than expressions"
	.size	.L.str.1408, 37

	.type	.L.str.1409,@object             # @.str.1409
.L.str.1409:
	.asciz	"Internal Error: PatternchainitemGroup was not handled correctly"
	.size	.L.str.1409, 64

	.type	.L.str.1410,@object             # @.str.1410
.L.str.1410:
	.asciz	"too few subpatterns for operator"
	.size	.L.str.1410, 33

	.type	.L.str.1411,@object             # @.str.1411
.L.str.1411:
	.asciz	"outermost operator"
	.size	.L.str.1411, 19

	.type	.L.str.1412,@object             # @.str.1412
.L.str.1412:
	.asciz	"not in expected phylum"
	.size	.L.str.1412, 23

	.type	.L.str.1413,@object             # @.str.1413
.L.str.1413:
	.asciz	"integer"
	.size	.L.str.1413, 8

	.type	.L.str.1414,@object             # @.str.1414
.L.str.1414:
	.asciz	"real"
	.size	.L.str.1414, 5

	.type	.L.str.1415,@object             # @.str.1415
.L.str.1415:
	.asciz	"unexpected int subterm"
	.size	.L.str.1415, 23

	.type	.L.str.1416,@object             # @.str.1416
.L.str.1416:
	.asciz	"casestring"
	.size	.L.str.1416, 11

	.type	.L.str.1417,@object             # @.str.1417
.L.str.1417:
	.asciz	"nocasestring"
	.size	.L.str.1417, 13

	.type	.L.str.1418,@object             # @.str.1418
.L.str.1418:
	.asciz	"unexpected string subterm"
	.size	.L.str.1418, 26

	.type	.L.str.1419,@object             # @.str.1419
.L.str.1419:
	.asciz	"too many subpatterns for operator"
	.size	.L.str.1419, 34

	.type	.L.str.1420,@object             # @.str.1420
.L.str.1420:
	.asciz	"operator"
	.size	.L.str.1420, 9

	.type	.L.str.1421,@object             # @.str.1421
.L.str.1421:
	.asciz	"not in phylum"
	.size	.L.str.1421, 14

	.type	.L.str.1422,@object             # @.str.1422
.L.str.1422:
	.asciz	"."
	.size	.L.str.1422, 2

	.type	.L.str.1423,@object             # @.str.1423
.L.str.1423:
	.asciz	"\t\""
	.size	.L.str.1423, 3

	.type	.L.str.1424,@object             # @.str.1424
.L.str.1424:
	.asciz	"*\n"
	.size	.L.str.1424, 3

	.type	.L.str.1425,@object             # @.str.1425
.L.str.1425:
	.asciz	") {\n    "
	.size	.L.str.1425, 9

	.type	.L.str.1426,@object             # @.str.1426
.L.str.1426:
	.asciz	" kc_x=new impl_"
	.size	.L.str.1426, 16

	.type	.L.str.1427,@object             # @.str.1427
.L.str.1427:
	.asciz	");\n\tKC_COLLECT_STATS0(KC_CREATE_STATS(sel_"
	.size	.L.str.1427, 43

	.type	.L.str.1428,@object             # @.str.1428
.L.str.1428:
	.asciz	" unique_kc_x= hashtables["
	.size	.L.str.1428, 26

	.type	.L.str.1429,@object             # @.str.1429
.L.str.1429:
	.asciz	"]->ht_check_insert(kc_x);\n    if(unique_kc_x!=kc_x) {\n    "
	.size	.L.str.1429, 59

	.type	.L.str.1430,@object             # @.str.1430
.L.str.1430:
	.asciz	"\t// kc_x already deleted in ht_check_insert\n"
	.size	.L.str.1430, 45

	.type	.L.str.1431,@object             # @.str.1431
.L.str.1431:
	.asciz	"\tkc_x=unique_kc_x;\n    } else {\n\tKC_COLLECT_STATS0(KC_EXISTINGNOTFOUND_STATS(sel_"
	.size	.L.str.1431, 82

	.type	.L.str.1432,@object             # @.str.1432
.L.str.1432:
	.asciz	"));\n\tkc_x->post_create();\n"
	.size	.L.str.1432, 27

	.type	.L.str.1433,@object             # @.str.1433
.L.str.1433:
	.asciz	"\t\tkc_x = kc_initialize_"
	.size	.L.str.1433, 24

	.type	.L.str.1434,@object             # @.str.1434
.L.str.1434:
	.asciz	"(kc_x);\n"
	.size	.L.str.1434, 9

	.type	.L.str.1435,@object             # @.str.1435
.L.str.1435:
	.asciz	"   }\n    return static_cast<impl_"
	.size	.L.str.1435, 34

	.type	.L.str.1436,@object             # @.str.1436
.L.str.1436:
	.asciz	"*>(kc_x);\n}\n\n"
	.size	.L.str.1436, 14

	.type	.L.str.1437,@object             # @.str.1437
.L.str.1437:
	.asciz	" kc_x = new impl_"
	.size	.L.str.1437, 18

	.type	.L.str.1438,@object             # @.str.1438
.L.str.1438:
	.asciz	"));\n\tKC_COLLECT_STATS0(KC_EXISTINGNOTFOUND_STATS(sel_"
	.size	.L.str.1438, 54

	.type	.L.str.1439,@object             # @.str.1439
.L.str.1439:
	.asciz	"));\n\tkc_x->post_create();\n    "
	.size	.L.str.1439, 31

	.type	.L.str.1440,@object             # @.str.1440
.L.str.1440:
	.asciz	"    kc_x = kc_initialize_"
	.size	.L.str.1440, 26

	.type	.L.str.1441,@object             # @.str.1441
.L.str.1441:
	.asciz	"(kc_x);\n    "
	.size	.L.str.1441, 13

	.type	.L.str.1442,@object             # @.str.1442
.L.str.1442:
	.asciz	"    return static_cast<impl_"
	.size	.L.str.1442, 29

	.type	.L.str.1443,@object             # @.str.1443
.L.str.1443:
	.asciz	"*>(kc_x);\n    "
	.size	.L.str.1443, 15

	.type	.L.str.1444,@object             # @.str.1444
.L.str.1444:
	.asciz	"}\n\n    "
	.size	.L.str.1444, 8

	.type	.L.str.1445,@object             # @.str.1445
.L.str.1445:
	.asciz	"\n#ifndef KC_TRACE_PROVIDED\n#define KC_TRACE_PROVIDED(COND,FILE,LINE,NODE) COND\n#endif\n\n"
	.size	.L.str.1445, 88

	.type	.L.str.1446,@object             # @.str.1446
.L.str.1446:
	.asciz	"="
	.size	.L.str.1446, 2

	.type	.L.str.1447,@object             # @.str.1447
.L.str.1447:
	.asciz	"attribute"
	.size	.L.str.1447, 10

	.type	.L.str.1448,@object             # @.str.1448
.L.str.1448:
	.asciz	"(with %attr) should not be static in phylum"
	.size	.L.str.1448, 44

	.type	.L.str.1449,@object             # @.str.1449
.L.str.1449:
	.asciz	"is not part of any phylum or operator; defined in"
	.size	.L.str.1449, 50

	.type	.L.str.1450,@object             # @.str.1450
.L.str.1450:
	.asciz	"abstract_list"
	.size	.L.str.1450, 14

	.type	.L.str.1451,@object             # @.str.1451
.L.str.1451:
	.asciz	"must not be defined in predefined phylum"
	.size	.L.str.1451, 41

	.type	.L.str.1452,@object             # @.str.1452
.L.str.1452:
	.asciz	"must not be declared in list operator"
	.size	.L.str.1452, 38

	.type	.L.str.1453,@object             # @.str.1453
.L.str.1453:
	.asciz	"~"
	.size	.L.str.1453, 2

	.type	_ZN12_GLOBAL__N_112gl_return_IDE,@object # @_ZN12_GLOBAL__N_112gl_return_IDE
	.local	_ZN12_GLOBAL__N_112gl_return_IDE
	.comm	_ZN12_GLOBAL__N_112gl_return_IDE,8,8
	.type	_ZN12_GLOBAL__N_114gl_return_typeE,@object # @_ZN12_GLOBAL__N_114gl_return_typeE
	.data
	.p2align	3, 0x0
_ZN12_GLOBAL__N_114gl_return_typeE:
	.dword	.L.str.312
	.size	_ZN12_GLOBAL__N_114gl_return_typeE, 8

	.type	_ZN12_GLOBAL__N_113gl_star_countE,@object # @_ZN12_GLOBAL__N_113gl_star_countE
	.local	_ZN12_GLOBAL__N_113gl_star_countE
	.comm	_ZN12_GLOBAL__N_113gl_star_countE,4,4
	.type	_ZN12_GLOBAL__N_111gl_functionE,@object # @_ZN12_GLOBAL__N_111gl_functionE
	.p2align	3, 0x0
_ZN12_GLOBAL__N_111gl_functionE:
	.dword	.L.str.312
	.size	_ZN12_GLOBAL__N_111gl_functionE, 8

	.type	.L.str.1454,@object             # @.str.1454
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1454:
	.asciz	"{"
	.size	.L.str.1454, 2

	.type	.L.str.1455,@object             # @.str.1455
.L.str.1455:
	.asciz	"_ref=0;\n\t\t"
	.size	.L.str.1455, 11

	.type	.L.str.1456,@object             # @.str.1456
.L.str.1456:
	.asciz	"}"
	.size	.L.str.1456, 2

	.type	.L.str.1457,@object             # @.str.1457
.L.str.1457:
	.asciz	"()"
	.size	.L.str.1457, 3

	.type	.L.str.1458,@object             # @.str.1458
.L.str.1458:
	.asciz	"main"
	.size	.L.str.1458, 5

	.type	.L.str.1459,@object             # @.str.1459
.L.str.1459:
	.asciz	"} // namespace kc\n"
	.size	.L.str.1459, 19

	.type	.L.str.1460,@object             # @.str.1460
.L.str.1460:
	.asciz	"namespace kc {\r\n"
	.size	.L.str.1460, 17

	.type	.L.str.1461,@object             # @.str.1461
.L.str.1461:
	.asciz	"constructor does not belong to phylum or operator:"
	.size	.L.str.1461, 51

	.type	.L.str.1462,@object             # @.str.1462
.L.str.1462:
	.asciz	"destructor does not belong to phylum or operator:"
	.size	.L.str.1462, 50

	.type	.L.str.1463,@object             # @.str.1463
.L.str.1463:
	.asciz	"static "
	.size	.L.str.1463, 8

	.type	_ZN12_GLOBAL__N_123gl_print_line_directiveE,@object # @_ZN12_GLOBAL__N_123gl_print_line_directiveE
	.local	_ZN12_GLOBAL__N_123gl_print_line_directiveE
	.comm	_ZN12_GLOBAL__N_123gl_print_line_directiveE,1,1
	.type	.L.str.1464,@object             # @.str.1464
.L.str.1464:
	.asciz	"kc_selvar_"
	.size	.L.str.1464, 11

	.type	_ZN12_GLOBAL__N_113g_ctext_levelE,@object # @_ZN12_GLOBAL__N_113g_ctext_levelE
	.local	_ZN12_GLOBAL__N_113g_ctext_levelE
	.comm	_ZN12_GLOBAL__N_113g_ctext_levelE,4,4
	.type	.L.str.1465,@object             # @.str.1465
.L.str.1465:
	.asciz	"{\n"
	.size	.L.str.1465, 3

	.type	.L.str.1466,@object             # @.str.1466
.L.str.1466:
	.asciz	"_1"
	.size	.L.str.1466, 3

	.type	.L.str.1467,@object             # @.str.1467
.L.str.1467:
	.asciz	"internal error: no info for withcases of CTextWithexpression"
	.size	.L.str.1467, 61

	.type	.L.str.1468,@object             # @.str.1468
.L.str.1468:
	.asciz	"while(\n"
	.size	.L.str.1468, 8

	.type	.L.str.1469,@object             # @.str.1469
.L.str.1469:
	.asciz	"    ) {\n"
	.size	.L.str.1469, 9

	.type	.L.str.1470,@object             # @.str.1470
.L.str.1470:
	.asciz	"kc_fe_selvar"
	.size	.L.str.1470, 13

	.type	.L.str.1471,@object             # @.str.1471
.L.str.1471:
	.asciz	"illegal dollar variable (not allowed in &-ed pattern context)"
	.size	.L.str.1471, 62

	.type	.L.str.1472,@object             # @.str.1472
.L.str.1472:
	.asciz	"illegal dollar variable"
	.size	.L.str.1472, 24

	.type	_ZN12_GLOBAL__N_113g_withexpr_nrE,@object # @_ZN12_GLOBAL__N_113g_withexpr_nrE
	.local	_ZN12_GLOBAL__N_113g_withexpr_nrE
	.comm	_ZN12_GLOBAL__N_113g_withexpr_nrE,4,4
	.type	.L.str.1473,@object             # @.str.1473
.L.str.1473:
	.asciz	" = phylum_cast<"
	.size	.L.str.1473, 16

	.type	.L.str.1474,@object             # @.str.1474
.L.str.1474:
	.asciz	"could not infer type of with-expression argument:"
	.size	.L.str.1474, 50

	.type	.L.str.1475,@object             # @.str.1475
.L.str.1475:
	.asciz	"struct "
	.size	.L.str.1475, 8

	.type	.L.str.1476,@object             # @.str.1476
.L.str.1476:
	.asciz	"_class: rview_class {\n\t"
	.size	.L.str.1476, 24

	.type	.L.str.1477,@object             # @.str.1477
.L.str.1477:
	.asciz	"_class():rview_class("
	.size	.L.str.1477, 22

	.type	.L.str.1478,@object             # @.str.1478
.L.str.1478:
	.asciz	"_enum){}\n};\nextern "
	.size	.L.str.1478, 20

	.type	.L.str.1479,@object             # @.str.1479
.L.str.1479:
	.asciz	"_class "
	.size	.L.str.1479, 8

	.type	.L.str.1480,@object             # @.str.1480
.L.str.1480:
	.asciz	"_baseclass: public rview_class {\n\rprotected:\013\n\t"
	.size	.L.str.1480, 48

	.type	.L.str.1481,@object             # @.str.1481
.L.str.1481:
	.asciz	"_baseclass():rview_class("
	.size	.L.str.1481, 26

	.type	.L.str.1482,@object             # @.str.1482
.L.str.1482:
	.asciz	"_enum){}\n};\n// class "
	.size	.L.str.1482, 22

	.type	.L.str.1483,@object             # @.str.1483
.L.str.1483:
	.asciz	"_class is defined externally\n"
	.size	.L.str.1483, 30

	.type	.L.str.1484,@object             # @.str.1484
.L.str.1484:
	.asciz	"_class: uview_class {\n\t"
	.size	.L.str.1484, 24

	.type	.L.str.1485,@object             # @.str.1485
.L.str.1485:
	.asciz	"_class():uview_class("
	.size	.L.str.1485, 22

	.type	.L.str.1486,@object             # @.str.1486
.L.str.1486:
	.asciz	"_baseclass: public uview_class {\n\rprotected:\013\n\t"
	.size	.L.str.1486, 48

	.type	.L.str.1487,@object             # @.str.1487
.L.str.1487:
	.asciz	"_baseclass():uview_class("
	.size	.L.str.1487, 26

	.type	.L.str.1488,@object             # @.str.1488
.L.str.1488:
	.asciz	"{\""
	.size	.L.str.1488, 3

	.type	.L.str.1489,@object             # @.str.1489
.L.str.1489:
	.asciz	"\",&"
	.size	.L.str.1489, 4

	.type	.L.str.1490,@object             # @.str.1490
.L.str.1490:
	.asciz	"},\n\t"
	.size	.L.str.1490, 5

	.type	.L.str.1491,@object             # @.str.1491
.L.str.1491:
	.asciz	"\", 0},\n\t"
	.size	.L.str.1491, 9

	.type	.L.str.1492,@object             # @.str.1492
.L.str.1492:
	.asciz	"_enum"
	.size	.L.str.1492, 6

	.type	.L.str.1493,@object             # @.str.1493
.L.str.1493:
	.asciz	"\t\"\""
	.size	.L.str.1493, 4

	.type	.L.str.1494,@object             # @.str.1494
.L.str.1494:
	.asciz	" }\n"
	.size	.L.str.1494, 4

	.type	.L.str.1495,@object             # @.str.1495
.L.str.1495:
	.asciz	"kc::unparse("
	.size	.L.str.1495, 13

	.type	.L.str.1496,@object             # @.str.1496
.L.str.1496:
	.asciz	", kc_printer, "
	.size	.L.str.1496, 15

	.type	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf,@object # @_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf
	.local	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf
	.comm	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf,10,1
	.type	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr,@object # @_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr
	.data
	.p2align	3, 0x0
_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr:
	.dword	-1                              # 0xffffffffffffffff
	.size	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr, 8

	.type	.L.str.1497,@object             # @.str.1497
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1497:
	.asciz	"       { kc_printer(LANG_TEXT("
	.size	.L.str.1497, 31

	.type	.L.str.1498,@object             # @.str.1498
.L.str.1498:
	.asciz	"), "
	.size	.L.str.1498, 4

	.type	.L.str.1499,@object             # @.str.1499
.L.str.1499:
	.asciz	"); }\n"
	.size	.L.str.1499, 6

	.type	.L.str.1500,@object             # @.str.1500
.L.str.1500:
	.asciz	"\t{ kc_printer(kc_t(\""
	.size	.L.str.1500, 21

	.type	.L.str.1501,@object             # @.str.1501
.L.str.1501:
	.asciz	"\"), "
	.size	.L.str.1501, 5

	.type	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf_0,@object # @_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf_0
	.local	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf_0
	.comm	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf_0,10,1
	.type	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr_0,@object # @_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr_0
	.data
	.p2align	3, 0x0
_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr_0:
	.dword	-1                              # 0xffffffffffffffff
	.size	_ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE7last_nr_0, 8

	.type	.L.str.1502,@object             # @.str.1502
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1502:
	.asciz	"kc_current_view"
	.size	.L.str.1502, 16

	.type	.L.str.1503,@object             # @.str.1503
.L.str.1503:
	.asciz	"if("
	.size	.L.str.1503, 4

	.type	.L.str.1504,@object             # @.str.1504
.L.str.1504:
	.asciz	")\n    "
	.size	.L.str.1504, 7

	.type	.L.str.1505,@object             # @.str.1505
.L.str.1505:
	.asciz	"is_language("
	.size	.L.str.1505, 13

	.type	.L.str.1506,@object             # @.str.1506
.L.str.1506:
	.asciz	" || is_language("
	.size	.L.str.1506, 17

	.type	.L.str.1507,@object             # @.str.1507
.L.str.1507:
	.asciz	"extern char* kc_language_"
	.size	.L.str.1507, 26

	.type	.L.str.1508,@object             # @.str.1508
.L.str.1508:
	.asciz	"[];\n"
	.size	.L.str.1508, 5

	.type	.L.str.1509,@object             # @.str.1509
.L.str.1509:
	.asciz	" at "
	.size	.L.str.1509, 5

	.type	.L.str.1510,@object             # @.str.1510
.L.str.1510:
	.asciz	" col:"
	.size	.L.str.1510, 6

	.type	.L.str.1511,@object             # @.str.1511
.L.str.1511:
	.asciz	"(it's a "
	.size	.L.str.1511, 9

	.type	.L.str.1512,@object             # @.str.1512
.L.str.1512:
	.asciz	"pattern variable"
	.size	.L.str.1512, 17

	.type	.L.str.1513,@object             # @.str.1513
.L.str.1513:
	.asciz	"function"
	.size	.L.str.1513, 9

	.type	.L.str.1514,@object             # @.str.1514
.L.str.1514:
	.asciz	"rewrite view"
	.size	.L.str.1514, 13

	.type	.L.str.1515,@object             # @.str.1515
.L.str.1515:
	.asciz	"predefined rewrite view"
	.size	.L.str.1515, 24

	.type	.L.str.1516,@object             # @.str.1516
.L.str.1516:
	.asciz	"unparse view"
	.size	.L.str.1516, 13

	.type	.L.str.1517,@object             # @.str.1517
.L.str.1517:
	.asciz	"predefined unparse view"
	.size	.L.str.1517, 24

	.type	.L.str.1518,@object             # @.str.1518
.L.str.1518:
	.asciz	"storageclass"
	.size	.L.str.1518, 13

	.type	.L.str.1519,@object             # @.str.1519
.L.str.1519:
	.asciz	"predefined storageclass"
	.size	.L.str.1519, 24

	.type	.L.str.1520,@object             # @.str.1520
.L.str.1520:
	.asciz	"(it's an "
	.size	.L.str.1520, 10

	.type	.L.str.1521,@object             # @.str.1521
.L.str.1521:
	.asciz	"predefined operator"
	.size	.L.str.1521, 20

	.type	.L.str.1522,@object             # @.str.1522
.L.str.1522:
	.asciz	"phylum"
	.size	.L.str.1522, 7

	.type	.L.str.1523,@object             # @.str.1523
.L.str.1523:
	.asciz	"predefined phylum"
	.size	.L.str.1523, 18

	.type	.L.str.1524,@object             # @.str.1524
.L.str.1524:
	.asciz	"\tcase phylum_"
	.size	.L.str.1524, 14

	.type	.L.str.1525,@object             # @.str.1525
.L.str.1525:
	.asciz	": {\n\t    kc_do_printdot_id_of__"
	.size	.L.str.1525, 32

	.type	.L.str.1526,@object             # @.str.1526
.L.str.1526:
	.asciz	"(kc_f, kc_p->ptr_to.yt_"
	.size	.L.str.1526, 24

	.type	.L.str.1527,@object             # @.str.1527
.L.str.1527:
	.asciz	", use_context_when_sharing_leaves, kc_p->ptr_from.yt_voidptr, kc_p->son_nr);\n\tbreak; }\n"
	.size	.L.str.1527, 88

	.type	.L.str.1528,@object             # @.str.1528
.L.str.1528:
	.asciz	"Not used anymore"
	.size	.L.str.1528, 17

	.type	.L.str.1529,@object             # @.str.1529
.L.str.1529:
	.asciz	"KC_TRACE_PROVIDED(("
	.size	.L.str.1529, 20

	.type	.L.str.1530,@object             # @.str.1530
.L.str.1530:
	.asciz	"), \""
	.size	.L.str.1530, 5

	.type	.L.str.1531,@object             # @.str.1531
.L.str.1531:
	.asciz	", this)"
	.size	.L.str.1531, 8

	.type	.L.str.1532,@object             # @.str.1532
.L.str.1532:
	.asciz	") && KC_TRACE_PROVIDED(("
	.size	.L.str.1532, 25

	.type	.L.str.1533,@object             # @.str.1533
.L.str.1533:
	.asciz	", this"
	.size	.L.str.1533, 7

	.type	.L.str.1534,@object             # @.str.1534
.L.str.1534:
	.asciz	") && ("
	.size	.L.str.1534, 7

	.type	.L.str.1535,@object             # @.str.1535
.L.str.1535:
	.asciz	")->value == "
	.size	.L.str.1535, 13

	.type	.L.str.1536,@object             # @.str.1536
.L.str.1536:
	.asciz	"kc_strcmp("
	.size	.L.str.1536, 11

	.type	.L.str.1537,@object             # @.str.1537
.L.str.1537:
	.asciz	"->name, kc_t(\""
	.size	.L.str.1537, 15

	.type	.L.str.1538,@object             # @.str.1538
.L.str.1538:
	.asciz	"\"))==0"
	.size	.L.str.1538, 7

	.type	.L.str.1539,@object             # @.str.1539
.L.str.1539:
	.asciz	"String literal type neither casestring nor nocasestring"
	.size	.L.str.1539, 56

	.type	.L.str.1540,@object             # @.str.1540
.L.str.1540:
	.asciz	"1 /*default*/"
	.size	.L.str.1540, 14

	.type	.L.str.1541,@object             # @.str.1541
.L.str.1541:
	.asciz	"\tconst "
	.size	.L.str.1541, 8

	.type	.L.str.1542,@object             # @.str.1542
.L.str.1542:
	.asciz	"->prod_sel() == sel_"
	.size	.L.str.1542, 21

	.type	.L.str.1543,@object             # @.str.1543
.L.str.1543:
	.asciz	" true "
	.size	.L.str.1543, 7

	.type	.L.str.1544,@object             # @.str.1544
.L.str.1544:
	.asciz	"phylum_cast<const "
	.size	.L.str.1544, 19

	.type	.L.str.1545,@object             # @.str.1545
.L.str.1545:
	.asciz	"*>"
	.size	.L.str.1545, 3

	.type	.L.str.1546,@object             # @.str.1546
.L.str.1546:
	.asciz	"this->"
	.size	.L.str.1546, 7

	.type	.L.str.1547,@object             # @.str.1547
.L.str.1547:
	.asciz	")->"
	.size	.L.str.1547, 4

	.type	.L.str.1548,@object             # @.str.1548
.L.str.1548:
	.asciz	"((("
	.size	.L.str.1548, 4

	.type	.L.str.1549,@object             # @.str.1549
.L.str.1549:
	.asciz	")) ? this : "
	.size	.L.str.1549, 13

	.type	.L.str.1550,@object             # @.str.1550
.L.str.1550:
	.asciz	"))"
	.size	.L.str.1550, 3

	.type	.L.str.1551,@object             # @.str.1551
.L.str.1551:
	.asciz	"this/**/"
	.size	.L.str.1551, 9

	.type	.L.str.1552,@object             # @.str.1552
.L.str.1552:
	.asciz	"->eq("
	.size	.L.str.1552, 6

	.type	.L.str.1553,@object             # @.str.1553
.L.str.1553:
	.asciz	")) && ("
	.size	.L.str.1553, 8

	.type	.L.str.1554,@object             # @.str.1554
.L.str.1554:
	.asciz	"   case "
	.size	.L.str.1554, 9

	.type	.L.str.1555,@object             # @.str.1555
.L.str.1555:
	.asciz	": return kc_create(kc_op"
	.size	.L.str.1555, 25

	.type	.L.str.1556,@object             # @.str.1556
.L.str.1556:
	.asciz	", sons[son_offset"
	.size	.L.str.1556, 18

	.type	.L.str.1557,@object             # @.str.1557
.L.str.1557:
	.asciz	"+"
	.size	.L.str.1557, 2

	.type	.L.str.1558,@object             # @.str.1558
.L.str.1558:
	.asciz	": kc_answer = kc_create(prod_sel()"
	.size	.L.str.1558, 35

	.type	.L.str.1559,@object             # @.str.1559
.L.str.1559:
	.asciz	", kc_subtmp["
	.size	.L.str.1559, 13

	.type	.L.str.1560,@object             # @.str.1560
.L.str.1560:
	.asciz	"); break;\n"
	.size	.L.str.1560, 11

	.type	.L.str.1561,@object             # @.str.1561
.L.str.1561:
	.asciz	": kc_answer = kc_create(kc_op"
	.size	.L.str.1561, 30

	.type	.L.str.1562,@object             # @.str.1562
.L.str.1562:
	.asciz	"\t{ KC_TRACE_REWRITE_MATCH(kc_current_view, \""
	.size	.L.str.1562, 45

	.type	.L.str.1563,@object             # @.str.1563
.L.str.1563:
	.asciz	", this);\n"
	.size	.L.str.1563, 10

	.type	.L.str.1564,@object             # @.str.1564
.L.str.1564:
	.asciz	" kc_result = "
	.size	.L.str.1564, 14

	.type	.L.str.1565,@object             # @.str.1565
.L.str.1565:
	.asciz	"\tKC_TRACE_REWRITE_RESULT(kc_current_view,\""
	.size	.L.str.1565, 43

	.type	.L.str.1566,@object             # @.str.1566
.L.str.1566:
	.asciz	"\","
	.size	.L.str.1566, 3

	.type	.L.str.1567,@object             # @.str.1567
.L.str.1567:
	.asciz	",kc_result);\n\treturn kc_result;\n"
	.size	.L.str.1567, 33

	.type	.L.str.1568,@object             # @.str.1568
.L.str.1568:
	.asciz	"_ptr kc_result = "
	.size	.L.str.1568, 18

	.type	.L.str.1569,@object             # @.str.1569
.L.str.1569:
	.asciz	",kc_result);\n\treturn (kc_result() == this ? this : kc_result->rewrite( kc_current_view_base ))->return_ptr();\n"
	.size	.L.str.1569, 111

	.type	.L.str.1570,@object             # @.str.1570
.L.str.1570:
	.asciz	",kc_result);\n\treturn (const_cast<const impl_"
	.size	.L.str.1570, 45

	.type	.L.str.1571,@object             # @.str.1571
.L.str.1571:
	.asciz	"*>(kc_result) == this) ? this : kc_result->rewrite( kc_current_view_base );\n"
	.size	.L.str.1571, 77

	.type	.L.str.1572,@object             # @.str.1572
.L.str.1572:
	.asciz	"\n\t}\n"
	.size	.L.str.1572, 5

	.type	.L.str.1573,@object             # @.str.1573
.L.str.1573:
	.asciz	"Completely empty rewrite pattern not possible."
	.size	.L.str.1573, 47

	.type	.L.str.1574,@object             # @.str.1574
.L.str.1574:
	.asciz	")) { KC_TRACE_REWRITE_MATCH(kc_current_view, \""
	.size	.L.str.1574, 47

	.type	.L.str.1575,@object             # @.str.1575
.L.str.1575:
	.asciz	"\n\t} else\n"
	.size	.L.str.1575, 10

	.type	.L.str.1576,@object             # @.str.1576
.L.str.1576:
	.asciz	"\013goto kc_rewrite_default\r;\n"
	.size	.L.str.1576, 28

	.type	.L.str.1577,@object             # @.str.1577
.L.str.1577:
	.asciz	"break;"
	.size	.L.str.1577, 7

	.type	.L.str.1578,@object             # @.str.1578
.L.str.1578:
	.asciz	")) {\n"
	.size	.L.str.1578, 6

	.type	.L.str.1579,@object             # @.str.1579
.L.str.1579:
	.asciz	"\t} else\n"
	.size	.L.str.1579, 9

	.type	.L.str.1580,@object             # @.str.1580
.L.str.1580:
	.asciz	"{/* EMPTY */ /*skip: no matching pattern in foreach patterns*/}\n"
	.size	.L.str.1580, 65

	.type	.L.str.1581,@object             # @.str.1581
.L.str.1581:
	.asciz	"kc_no_default_in_with( \""
	.size	.L.str.1581, 25

	.type	.L.str.1582,@object             # @.str.1582
.L.str.1582:
	.asciz	"\", __LINE__, __FILE__ );\n"
	.size	.L.str.1582, 26

	.type	.L.str.1583,@object             # @.str.1583
.L.str.1583:
	.asciz	"{ kc_no_default_in_with( \""
	.size	.L.str.1583, 27

	.type	.L.str.1584,@object             # @.str.1584
.L.str.1584:
	.asciz	"\", __LINE__, __FILE__ );\n   return static_cast<"
	.size	.L.str.1584, 48

	.type	.L.str.1585,@object             # @.str.1585
.L.str.1585:
	.asciz	">(0); }\n"
	.size	.L.str.1585, 9

	.type	.L.str.1586,@object             # @.str.1586
.L.str.1586:
	.asciz	"    case "
	.size	.L.str.1586, 10

	.type	.L.str.1587,@object             # @.str.1587
.L.str.1587:
	.asciz	"_enum: {\n\t\t"
	.size	.L.str.1587, 12

	.type	.L.str.1588,@object             # @.str.1588
.L.str.1588:
	.asciz	"_class& kc_current_view=static_cast<"
	.size	.L.str.1588, 37

	.type	.L.str.1589,@object             # @.str.1589
.L.str.1589:
	.asciz	"_class&>(kc_current_view_base);\n"
	.size	.L.str.1589, 33

	.type	_ZN12_GLOBAL__N_17gl_viewE,@object # @_ZN12_GLOBAL__N_17gl_viewE
	.local	_ZN12_GLOBAL__N_17gl_viewE
	.comm	_ZN12_GLOBAL__N_17gl_viewE,8,8
	.type	.L.str.1590,@object             # @.str.1590
.L.str.1590:
	.asciz	"    kc_rewrite_default:\n"
	.size	.L.str.1590, 25

	.type	.L.str.1591,@object             # @.str.1591
.L.str.1591:
	.asciz	"    default:;\n"
	.size	.L.str.1591, 15

	.type	.L.str.1592,@object             # @.str.1592
.L.str.1592:
	.asciz	"    default:\n"
	.size	.L.str.1592, 14

	.type	.L.str.1593,@object             # @.str.1593
.L.str.1593:
	.asciz	"base_rview"
	.size	.L.str.1593, 11

	.type	.L.str.1594,@object             # @.str.1594
.L.str.1594:
	.asciz	"    kc_unparsing_default:\n"
	.size	.L.str.1594, 27

	.type	.L.str.1595,@object             # @.str.1595
.L.str.1595:
	.asciz	"_enum: {\n\t\tuview kc_current_view=kc_current_view_base;\n"
	.size	.L.str.1595, 56

	.type	.L.str.1596,@object             # @.str.1596
.L.str.1596:
	.asciz	"\013goto kc_unparsing_default\r;\n"
	.size	.L.str.1596, 30

	.type	.L.str.1597,@object             # @.str.1597
.L.str.1597:
	.asciz	"virtual"
	.size	.L.str.1597, 8

	.type	.L.str.1598,@object             # @.str.1598
.L.str.1598:
	.asciz	"typedef"
	.size	.L.str.1598, 8

	.type	.L.str.1599,@object             # @.str.1599
.L.str.1599:
	.asciz	"extern"
	.size	.L.str.1599, 7

	.type	.L.str.1600,@object             # @.str.1600
.L.str.1600:
	.asciz	"static"
	.size	.L.str.1600, 7

	.type	.L.str.1601,@object             # @.str.1601
.L.str.1601:
	.asciz	"register"
	.size	.L.str.1601, 9

	.type	.L.str.1602,@object             # @.str.1602
.L.str.1602:
	.asciz	"auto"
	.size	.L.str.1602, 5

	.type	.L.str.1603,@object             # @.str.1603
.L.str.1603:
	.asciz	"unsigned"
	.size	.L.str.1603, 9

	.type	.L.str.1604,@object             # @.str.1604
.L.str.1604:
	.asciz	"volatile"
	.size	.L.str.1604, 9

	.type	.L.str.1605,@object             # @.str.1605
.L.str.1605:
	.asciz	"const"
	.size	.L.str.1605, 6

	.type	.L.str.1606,@object             # @.str.1606
.L.str.1606:
	.asciz	"operator "
	.size	.L.str.1606, 10

	.type	.L.str.1607,@object             # @.str.1607
.L.str.1607:
	.asciz	"::operator "
	.size	.L.str.1607, 12

	.type	.L.str.1608,@object             # @.str.1608
.L.str.1608:
	.asciz	"*"
	.size	.L.str.1608, 2

	.type	.L.str.1609,@object             # @.str.1609
.L.str.1609:
	.asciz	" ..."
	.size	.L.str.1609, 5

	.type	.L.str.1610,@object             # @.str.1610
.L.str.1610:
	.asciz	";"
	.size	.L.str.1610, 2

	.type	.L.str.1611,@object             # @.str.1611
.L.str.1611:
	.asciz	" kc_arg_missing"
	.size	.L.str.1611, 16

	.type	.L.str.1612,@object             # @.str.1612
.L.str.1612:
	.asciz	"kc_arg_missing"
	.size	.L.str.1612, 15

	.type	.L.str.1613,@object             # @.str.1613
.L.str.1613:
	.asciz	"public "
	.size	.L.str.1613, 8

	.type	.L.str.1614,@object             # @.str.1614
.L.str.1614:
	.asciz	", public "
	.size	.L.str.1614, 10

	.type	.L.str.1615,@object             # @.str.1615
.L.str.1615:
	.asciz	": warning"
	.size	.L.str.1615, 10

	.type	.L.str.1616,@object             # @.str.1616
.L.str.1616:
	.asciz	"warning"
	.size	.L.str.1616, 8

	.type	.L.str.1617,@object             # @.str.1617
.L.str.1617:
	.asciz	": error"
	.size	.L.str.1617, 8

	.type	.L.str.1618,@object             # @.str.1618
.L.str.1618:
	.asciz	"error"
	.size	.L.str.1618, 6

	.type	.L.str.1619,@object             # @.str.1619
.L.str.1619:
	.asciz	": fatal error"
	.size	.L.str.1619, 14

	.type	.L.str.1620,@object             # @.str.1620
.L.str.1620:
	.asciz	"fatal error"
	.size	.L.str.1620, 12

	.type	_ZTVN2kc27impl_nocasestring_NoCaseStrE,@object # @_ZTVN2kc27impl_nocasestring_NoCaseStrE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc27impl_nocasestring_NoCaseStrE
	.p2align	3, 0x0
_ZTVN2kc27impl_nocasestring_NoCaseStrE:
	.dword	0
	.dword	_ZTIN2kc27impl_nocasestring_NoCaseStrE
	.dword	_ZNK2kc27impl_nocasestring_NoCaseStr8prod_selEv
	.dword	_ZNK2kc20impl_abstract_phylum9subphylumEi
	.dword	_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_
	.dword	_ZN2kc27impl_nocasestring_NoCaseStr7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc27impl_nocasestring_NoCaseStrD2Ev
	.dword	_ZN2kc27impl_nocasestring_NoCaseStrD0Ev
	.dword	_ZN2kc27impl_nocasestring_NoCaseStr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc27impl_nocasestring_NoCaseStrE, 104

	.type	_ZTIN2kc27impl_nocasestring_NoCaseStrE,@object # @_ZTIN2kc27impl_nocasestring_NoCaseStrE
	.globl	_ZTIN2kc27impl_nocasestring_NoCaseStrE
	.p2align	3, 0x0
_ZTIN2kc27impl_nocasestring_NoCaseStrE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc27impl_nocasestring_NoCaseStrE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc27impl_nocasestring_NoCaseStrE, 24

	.type	_ZTSN2kc27impl_nocasestring_NoCaseStrE,@object # @_ZTSN2kc27impl_nocasestring_NoCaseStrE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc27impl_nocasestring_NoCaseStrE
_ZTSN2kc27impl_nocasestring_NoCaseStrE:
	.asciz	"N2kc27impl_nocasestring_NoCaseStrE"
	.size	_ZTSN2kc27impl_nocasestring_NoCaseStrE, 35

	.type	_ZTVN2kc20impl_casestring__StrE,@object # @_ZTVN2kc20impl_casestring__StrE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc20impl_casestring__StrE
	.p2align	3, 0x0
_ZTVN2kc20impl_casestring__StrE:
	.dword	0
	.dword	_ZTIN2kc20impl_casestring__StrE
	.dword	_ZNK2kc20impl_casestring__Str8prod_selEv
	.dword	_ZNK2kc20impl_abstract_phylum9subphylumEi
	.dword	_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_
	.dword	_ZN2kc20impl_casestring__Str7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_casestring__StrD2Ev
	.dword	_ZN2kc20impl_casestring__StrD0Ev
	.dword	_ZN2kc20impl_casestring__Str10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc20impl_casestring__StrE, 104

	.type	_ZTIN2kc20impl_casestring__StrE,@object # @_ZTIN2kc20impl_casestring__StrE
	.globl	_ZTIN2kc20impl_casestring__StrE
	.p2align	3, 0x0
_ZTIN2kc20impl_casestring__StrE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc20impl_casestring__StrE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc20impl_casestring__StrE, 24

	.type	_ZTSN2kc20impl_casestring__StrE,@object # @_ZTSN2kc20impl_casestring__StrE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc20impl_casestring__StrE
_ZTSN2kc20impl_casestring__StrE:
	.asciz	"N2kc20impl_casestring__StrE"
	.size	_ZTSN2kc20impl_casestring__StrE, 28

	.type	_ZTVN2kc17impl_integer__IntE,@object # @_ZTVN2kc17impl_integer__IntE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc17impl_integer__IntE
	.p2align	3, 0x0
_ZTVN2kc17impl_integer__IntE:
	.dword	0
	.dword	_ZTIN2kc17impl_integer__IntE
	.dword	_ZNK2kc17impl_integer__Int8prod_selEv
	.dword	_ZNK2kc20impl_abstract_phylum9subphylumEi
	.dword	_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_
	.dword	_ZN2kc17impl_integer__Int7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc17impl_integer__IntD0Ev
	.dword	_ZN2kc17impl_integer__Int10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc17impl_integer__IntE, 104

	.type	_ZTIN2kc17impl_integer__IntE,@object # @_ZTIN2kc17impl_integer__IntE
	.globl	_ZTIN2kc17impl_integer__IntE
	.p2align	3, 0x0
_ZTIN2kc17impl_integer__IntE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc17impl_integer__IntE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc17impl_integer__IntE, 24

	.type	_ZTSN2kc17impl_integer__IntE,@object # @_ZTSN2kc17impl_integer__IntE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc17impl_integer__IntE
_ZTSN2kc17impl_integer__IntE:
	.asciz	"N2kc17impl_integer__IntE"
	.size	_ZTSN2kc17impl_integer__IntE, 25

	.type	_ZTVN2kc15impl_real__RealE,@object # @_ZTVN2kc15impl_real__RealE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc15impl_real__RealE
	.p2align	3, 0x0
_ZTVN2kc15impl_real__RealE:
	.dword	0
	.dword	_ZTIN2kc15impl_real__RealE
	.dword	_ZNK2kc15impl_real__Real8prod_selEv
	.dword	_ZNK2kc20impl_abstract_phylum9subphylumEi
	.dword	_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_
	.dword	_ZN2kc15impl_real__Real7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc15impl_real__RealD0Ev
	.dword	_ZN2kc15impl_real__Real10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc15impl_real__RealE, 104

	.type	_ZTIN2kc15impl_real__RealE,@object # @_ZTIN2kc15impl_real__RealE
	.globl	_ZTIN2kc15impl_real__RealE
	.p2align	3, 0x0
_ZTIN2kc15impl_real__RealE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc15impl_real__RealE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc15impl_real__RealE, 24

	.type	_ZTSN2kc15impl_real__RealE,@object # @_ZTSN2kc15impl_real__RealE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc15impl_real__RealE
_ZTSN2kc15impl_real__RealE:
	.asciz	"N2kc15impl_real__RealE"
	.size	_ZTSN2kc15impl_real__RealE, 23

	.type	_ZTVN2kc21impl_voidptr__VoidPtrE,@object # @_ZTVN2kc21impl_voidptr__VoidPtrE
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTVN2kc21impl_voidptr__VoidPtrE
	.p2align	3, 0x0
_ZTVN2kc21impl_voidptr__VoidPtrE:
	.dword	0
	.dword	_ZTIN2kc21impl_voidptr__VoidPtrE
	.dword	_ZNK2kc21impl_voidptr__VoidPtr8prod_selEv
	.dword	_ZNK2kc20impl_abstract_phylum9subphylumEi
	.dword	_ZN2kc20impl_abstract_phylum13set_subphylumEiPS0_
	.dword	_ZN2kc21impl_voidptr__VoidPtr7rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum10do_rewriteERNS_11rview_classE
	.dword	_ZN2kc20impl_abstract_phylum15rewrite_membersEPS0_
	.dword	_ZN2kc20impl_abstract_phylum11post_createEv
	.dword	_ZN2kc20impl_abstract_phylumD2Ev
	.dword	_ZN2kc21impl_voidptr__VoidPtrD0Ev
	.dword	_ZN2kc21impl_voidptr__VoidPtr10do_unparseERNS_21printer_functor_classERNS_11uview_classE
	.dword	_ZN2kc20impl_abstract_phylum15default_unparseERNS_21printer_functor_classERNS_11uview_classE
	.size	_ZTVN2kc21impl_voidptr__VoidPtrE, 104

	.type	_ZTIN2kc21impl_voidptr__VoidPtrE,@object # @_ZTIN2kc21impl_voidptr__VoidPtrE
	.globl	_ZTIN2kc21impl_voidptr__VoidPtrE
	.p2align	3, 0x0
_ZTIN2kc21impl_voidptr__VoidPtrE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc21impl_voidptr__VoidPtrE
	.dword	_ZTIN2kc20impl_abstract_phylumE
	.size	_ZTIN2kc21impl_voidptr__VoidPtrE, 24

	.type	_ZTSN2kc21impl_voidptr__VoidPtrE,@object # @_ZTSN2kc21impl_voidptr__VoidPtrE
	.section	.rodata,"a",@progbits
	.globl	_ZTSN2kc21impl_voidptr__VoidPtrE
_ZTSN2kc21impl_voidptr__VoidPtrE:
	.asciz	"N2kc21impl_voidptr__VoidPtrE"
	.size	_ZTSN2kc21impl_voidptr__VoidPtrE, 29

	.type	_ZTVN2kc32printer_functor_function_wrapperE,@object # @_ZTVN2kc32printer_functor_function_wrapperE
	.section	.data.rel.ro._ZTVN2kc32printer_functor_function_wrapperE,"awG",@progbits,_ZTVN2kc32printer_functor_function_wrapperE,comdat
	.weak	_ZTVN2kc32printer_functor_function_wrapperE
	.p2align	3, 0x0
_ZTVN2kc32printer_functor_function_wrapperE:
	.dword	0
	.dword	_ZTIN2kc32printer_functor_function_wrapperE
	.dword	_ZN2kc32printer_functor_function_wrapperclEPKcRNS_11uview_classE
	.dword	_ZN2kc21printer_functor_classD2Ev
	.dword	_ZN2kc32printer_functor_function_wrapperD0Ev
	.size	_ZTVN2kc32printer_functor_function_wrapperE, 40

	.type	_ZTIN2kc32printer_functor_function_wrapperE,@object # @_ZTIN2kc32printer_functor_function_wrapperE
	.section	.data.rel.ro._ZTIN2kc32printer_functor_function_wrapperE,"awG",@progbits,_ZTIN2kc32printer_functor_function_wrapperE,comdat
	.weak	_ZTIN2kc32printer_functor_function_wrapperE
	.p2align	3, 0x0
_ZTIN2kc32printer_functor_function_wrapperE:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTSN2kc32printer_functor_function_wrapperE
	.dword	_ZTIN2kc21printer_functor_classE
	.size	_ZTIN2kc32printer_functor_function_wrapperE, 24

	.type	_ZTSN2kc32printer_functor_function_wrapperE,@object # @_ZTSN2kc32printer_functor_function_wrapperE
	.section	.rodata._ZTSN2kc32printer_functor_function_wrapperE,"aG",@progbits,_ZTSN2kc32printer_functor_function_wrapperE,comdat
	.weak	_ZTSN2kc32printer_functor_function_wrapperE
_ZTSN2kc32printer_functor_function_wrapperE:
	.asciz	"N2kc32printer_functor_function_wrapperE"
	.size	_ZTSN2kc32printer_functor_function_wrapperE, 40

	.type	_ZTIN2kc21printer_functor_classE,@object # @_ZTIN2kc21printer_functor_classE
	.section	.data.rel.ro._ZTIN2kc21printer_functor_classE,"awG",@progbits,_ZTIN2kc21printer_functor_classE,comdat
	.weak	_ZTIN2kc21printer_functor_classE
	.p2align	3, 0x0
_ZTIN2kc21printer_functor_classE:
	.dword	_ZTVN10__cxxabiv117__class_type_infoE+16
	.dword	_ZTSN2kc21printer_functor_classE
	.size	_ZTIN2kc21printer_functor_classE, 16

	.type	_ZTSN2kc21printer_functor_classE,@object # @_ZTSN2kc21printer_functor_classE
	.section	.rodata._ZTSN2kc21printer_functor_classE,"aG",@progbits,_ZTSN2kc21printer_functor_classE,comdat
	.weak	_ZTSN2kc21printer_functor_classE
_ZTSN2kc21printer_functor_classE:
	.asciz	"N2kc21printer_functor_classE"
	.size	_ZTSN2kc21printer_functor_classE, 29

	.type	_ZTV13count_printer,@object     # @_ZTV13count_printer
	.section	.data.rel.ro._ZTV13count_printer,"awG",@progbits,_ZTV13count_printer,comdat
	.weak	_ZTV13count_printer
	.p2align	3, 0x0
_ZTV13count_printer:
	.dword	0
	.dword	_ZTI13count_printer
	.dword	_ZN13count_printerclEPKcRN2kc11uview_classE
	.dword	_ZN2kc21printer_functor_classD2Ev
	.dword	_ZN13count_printerD0Ev
	.size	_ZTV13count_printer, 40

	.type	_ZTI13count_printer,@object     # @_ZTI13count_printer
	.section	.data.rel.ro._ZTI13count_printer,"awG",@progbits,_ZTI13count_printer,comdat
	.weak	_ZTI13count_printer
	.p2align	3, 0x0
_ZTI13count_printer:
	.dword	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.dword	_ZTS13count_printer
	.dword	_ZTIN2kc21printer_functor_classE
	.size	_ZTI13count_printer, 24

	.type	_ZTS13count_printer,@object     # @_ZTS13count_printer
	.section	.rodata._ZTS13count_printer,"aG",@progbits,_ZTS13count_printer,comdat
	.weak	_ZTS13count_printer
_ZTS13count_printer:
	.asciz	"13count_printer"
	.size	_ZTS13count_printer, 16

	.type	.L.str.1621,@object             # @.str.1621
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1621:
	.asciz	"%f"
	.size	.L.str.1621, 3

	.type	.L.str.1622,@object             # @.str.1622
.L.str.1622:
	.asciz	"basic_string::replace"
	.size	.L.str.1622, 22

	.type	.L.str.1623,@object             # @.str.1623
.L.str.1623:
	.asciz	"%s: __pos (which is %zu) > this->size() (which is %zu)"
	.size	.L.str.1623, 55

	.type	.L.str.1624,@object             # @.str.1624
.L.str.1624:
	.asciz	"%l"
	.size	.L.str.1624, 3

	.type	.L.str.1625,@object             # @.str.1625
.L.str.1625:
	.asciz	"%c"
	.size	.L.str.1625, 3

	.type	.L.str.1626,@object             # @.str.1626
.L.str.1626:
	.asciz	"%p"
	.size	.L.str.1626, 3

	.type	.L.str.1627,@object             # @.str.1627
.L.str.1627:
	.asciz	"%s"
	.size	.L.str.1627, 3

	.type	.L.str.1628,@object             # @.str.1628
.L.str.1628:
	.asciz	"basic_string: construction from null is not valid"
	.size	.L.str.1628, 50

	.type	.L.str.1629,@object             # @.str.1629
.L.str.1629:
	.asciz	"cannot create std::deque larger than max_size()"
	.size	.L.str.1629, 48

	.type	_ZStL19piecewise_construct,@object # @_ZStL19piecewise_construct
	.section	.rodata,"a",@progbits
_ZStL19piecewise_construct:
	.space	1
	.size	_ZStL19piecewise_construct, 1

	.section	.init_array,"aw",@init_array
	.p2align	3, 0x0
	.dword	_GLOBAL__sub_I_unpk.cc
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3, 0x0
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.dword	__gxx_personality_v0
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _GLOBAL__sub_I_unpk.cc
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZN2kc10base_uviewE
	.addrsig_sym _ZN2kc13view_filenameE
	.addrsig_sym _ZN2kc10view_errorE
	.addrsig_sym _ZN2kc14view_error_tIDE
	.addrsig_sym _ZN2kc10view_checkE
	.addrsig_sym _ZN2kc16view_check_countE
	.addrsig_sym _ZN2kc17view_check_count1E
	.addrsig_sym _ZN2kc33view_check_outmostopers_in_phylumE
	.addrsig_sym _ZN2kc13view_set_typeE
	.addrsig_sym _ZN2kc17view_check_is_varE
	.addrsig_sym _ZN2kc26view_gen_initializephyla_cE
	.addrsig_sym _ZN2kc12view_check_uE
	.addrsig_sym _ZN2kc12view_check_rE
	.addrsig_sym _ZN2kc20view_check_viewnamesE
	.addrsig_sym _ZN2kc15view_check_uniqE
	.addrsig_sym _ZN2kc16view_check_uniq1E
	.addrsig_sym _ZN2kc16view_check_uniq2E
	.addrsig_sym _ZN2kc21view_make_patternrepsE
	.addrsig_sym _ZN2kc27view_printer_outputfilelineE
	.addrsig_sym _ZN2kc18view_printer_resetE
	.addrsig_sym _ZN2kc37view_no_of_printed_string_chars_resetE
	.addrsig_sym _ZN2kc19view_open_namespaceE
	.addrsig_sym _ZN2kc20view_close_namespaceE
	.addrsig_sym _ZN2kc12view_gen_k_hE
	.addrsig_sym _ZN2kc16view_gen_end_k_hE
	.addrsig_sym _ZN2kc12view_gen_k_cE
	.addrsig_sym _ZN2kc16view_gen_alloc_hE
	.addrsig_sym _ZN2kc16view_gen_alloc_cE
	.addrsig_sym _ZN2kc19view_gen_deprecatedE
	.addrsig_sym _ZN2kc20view_gen_enumphyla_hE
	.addrsig_sym _ZN2kc24view_gen_enumoperators_hE
	.addrsig_sym _ZN2kc27view_gen_operatormap_type_hE
	.addrsig_sym _ZN2kc20view_gen_phylummap_cE
	.addrsig_sym _ZN2kc22view_gen_operatormap_cE
	.addrsig_sym _ZN2kc15view_count_argsE
	.addrsig_sym _ZN2kc16view_count_attrsE
	.addrsig_sym _ZN2kc27view_count_nonstaticmembersE
	.addrsig_sym _ZN2kc29view_gen_operatormap_subphylaE
	.addrsig_sym _ZN2kc31view_gen_operatormap_attributesE
	.addrsig_sym _ZN2kc18view_gen_uniqmap_cE
	.addrsig_sym _ZN2kc20view_gen_uniqmap_c_1E
	.addrsig_sym _ZN2kc20view_gen_uniqmap_c_2E
	.addrsig_sym _ZN2kc23view_gen_nodetypedefs_hE
	.addrsig_sym _ZN2kc20view_gen_nodetypes_hE
	.addrsig_sym _ZN2kc24view_gen_yaccstacktype_hE
	.addrsig_sym _ZN2kc24view_gen_noofoperators_hE
	.addrsig_sym _ZN2kc23view_gen_assertmacros_hE
	.addrsig_sym _ZN2kc23view_gen_assertmacros_cE
	.addrsig_sym _ZN2kc24view_gen_operatordecls_hE
	.addrsig_sym _ZN2kc23view_gen_operatorcast_hE
	.addrsig_sym _ZN2kc23view_gen_operatordefs_cE
	.addrsig_sym _ZN2kc25view_gen_operatordefs_c_0E
	.addrsig_sym _ZN2kc25view_gen_operatordefs_c_1E
	.addrsig_sym _ZN2kc25view_gen_operatordefs_c_2E
	.addrsig_sym _ZN2kc36view_gen_initializephyla_whiletest_cE
	.addrsig_sym _ZN2kc34view_gen_initializephyla_init_el_cE
	.addrsig_sym _ZN2kc38view_gen_initializephyla_update_loop_cE
	.addrsig_sym _ZN2kc31view_gen_operatordefs_nonhash_cE
	.addrsig_sym _ZN2kc28view_gen_operatordefs_hash_cE
	.addrsig_sym _ZN2kc25view_gen_access_functionsE
	.addrsig_sym _ZN2kc24view_gen_create_functionE
	.addrsig_sym _ZN2kc29view_gen_attributeOf_functionE
	.addrsig_sym _ZN2kc17view_gen_argseqnrE
	.addrsig_sym _ZN2kc22view_gen_fnarg_assertsE
	.addrsig_sym _ZN2kc24view_gen_fnarg_and_declsE
	.addrsig_sym _ZN2kc31view_gen_fnarg_and_decls_predefE
	.addrsig_sym _ZN2kc20view_gen_assignmentsE
	.addrsig_sym _ZN2kc24view_gen_assignment_inisE
	.addrsig_sym _ZN2kc29view_gen_user_assignment_inisE
	.addrsig_sym _ZN2kc27view_gen_assignments_predefE
	.addrsig_sym _ZN2kc31view_gen_assignments_predef_iniE
	.addrsig_sym _ZN2kc13view_gen_testE
	.addrsig_sym _ZN2kc22view_gen_error_decls_hE
	.addrsig_sym _ZN2kc21view_gen_error_defs_cE
	.addrsig_sym _ZN2kc24view_gen_printdotdecls_hE
	.addrsig_sym _ZN2kc23view_gen_printdotdefs_cE
	.addrsig_sym _ZN2kc24view_gen_printdotedges_cE
	.addrsig_sym _ZN2kc20view_gen_listdecls_hE
	.addrsig_sym _ZN2kc19view_gen_listdefs_cE
	.addrsig_sym _ZN2kc17view_gen_includesE
	.addrsig_sym _ZN2kc20view_do_gen_includesE
	.addrsig_sym _ZN2kc22view_gen_csgio_start_hE
	.addrsig_sym _ZN2kc20view_gen_csgio_end_hE
	.addrsig_sym _ZN2kc16view_gen_csgio_hE
	.addrsig_sym _ZN2kc22view_gen_csgio_start_cE
	.addrsig_sym _ZN2kc16view_gen_csgio_cE
	.addrsig_sym _ZN2kc26view_gen_copy_attributes_cE
	.addrsig_sym _ZN2kc19view_gen_copydefs_cE
	.addrsig_sym _ZN2kc19view_gen_rewritek_hE
	.addrsig_sym _ZN2kc23view_gen_end_rewritek_hE
	.addrsig_sym _ZN2kc19view_gen_rewritek_cE
	.addrsig_sym _ZN2kc22view_gen_rewritedefs_cE
	.addrsig_sym _ZN2kc30view_gen_rewritedefs_default_cE
	.addrsig_sym _ZN2kc28view_gen_rewritedefs_other_cE
	.addrsig_sym _ZN2kc33view_gen_rewritedefs_rewritearg_cE
	.addrsig_sym _ZN2kc29view_gen_rewritedefs_nl_arg_cE
	.addrsig_sym _ZN2kc30view_gen_rewritedefs_testarg_cE
	.addrsig_sym _ZN2kc32view_gen_rewritedefs_dotestarg_cE
	.addrsig_sym _ZN2kc27view_gen_rewritedefs_args_cE
	.addrsig_sym _ZN2kc27view_gen_rewritedefs_body_cE
	.addrsig_sym _ZN2kc30view_gen_withcases_and_defaultE
	.addrsig_sym _ZN2kc18view_rw_predicatesE
	.addrsig_sym _ZN2kc18view_wc_predicatesE
	.addrsig_sym _ZN2kc19view_unp_predicatesE
	.addrsig_sym _ZN2kc16view_wc_bindingsE
	.addrsig_sym _ZN2kc17view_unp_bindingsE
	.addrsig_sym _ZN2kc16view_rw_bindingsE
	.addrsig_sym _ZN2kc14view_gen_fnk_hE
	.addrsig_sym _ZN2kc19view_gen_fnkdecls_cE
	.addrsig_sym _ZN2kc14view_gen_fnk_cE
	.addrsig_sym _ZN2kc24view_gen_fn_pointer_nameE
	.addrsig_sym _ZN2kc16view_gen_fnkargsE
	.addrsig_sym _ZN2kc17view_gen_fnkdeclsE
	.addrsig_sym _ZN2kc20view_gen_fns_start_hE
	.addrsig_sym _ZN2kc18view_gen_fns_end_hE
	.addrsig_sym _ZN2kc20view_gen_fns_start_cE
	.addrsig_sym _ZN2kc25view_gen_fns_owninclude_cE
	.addrsig_sym _ZN2kc15view_gen_unpk_hE
	.addrsig_sym _ZN2kc23view_gen_unparsedecls_hE
	.addrsig_sym _ZN2kc23view_gen_rewritedecls_hE
	.addrsig_sym _ZN2kc14view_uview_defE
	.addrsig_sym _ZN2kc19view_gen_end_unpk_hE
	.addrsig_sym _ZN2kc15view_gen_unpk_cE
	.addrsig_sym _ZN2kc29view_gen_default_types_unpk_cE
	.addrsig_sym _ZN2kc22view_gen_unparsedefs_cE
	.addrsig_sym _ZN2kc28view_gen_unparsedefs_other_cE
	.addrsig_sym _ZN2kc17view_gen_unpstr_cE
	.addrsig_sym _ZN2kc24view_gen_user_predicatesE
	.addrsig_sym _ZN2kc23view_predicate_bindingsE
	.addrsig_sym _ZN2kc23view_checklanguagenamesE
	.addrsig_sym _ZN2kc22view_output_collectionE
	.addrsig_sym _ZN2kc22view_gen_classdecls1_hE
	.addrsig_sym _ZN2kc22view_gen_classdecls2_hE
	.addrsig_sym _ZN2kc20view_gen_classdefs_cE
	.addrsig_sym _ZN2kc24view_gen_subphylumdefs_cE
	.addrsig_sym _ZN2kc13view_gen_castE
	.addrsig_sym _ZN2kc21view_gen_hashtables_hE
	.addrsig_sym _ZN2kc21view_gen_hashtables_cE
	.addrsig_sym _ZN2kc20view_gen_yxx_union_hE
	.addrsig_sym _ZN2kc21view_gen_member_dcl_hE
	.addrsig_sym _ZN2kc28view_gen_set_subphylumdefs_cE
	.addrsig_sym _ZN2kc19view_gen_viewvars_cE
	.addrsig_sym _ZN2kc21view_gen_argseqnr_recE
	.addrsig_sym _ZN2kc18view_gen_opt_constE
	.addrsig_sym _ZN2kc21view_uview_class_declE
	.addrsig_sym _ZN2kc20view_uview_class_defE
	.addrsig_sym _ZN2kc21view_rview_class_declE
	.addrsig_sym _ZN2kc20view_rview_class_defE
	.addrsig_sym _ZN2kc20view_collect_stringsE
	.addrsig_sym _ZN2kc16view_class_of_opE
	.addrsig_sym _ZN2kc17view_class_of_phyE
	.addrsig_sym _ZL16outmostoperators
	.addrsig_sym __dso_handle
	.addrsig_sym _ZL17dollarvarsallowed
	.addrsig_sym _ZL16inforeachcontext
	.addrsig_sym _ZL14argumentsstack
	.addrsig_sym _ZL11phylumstack
	.addrsig_sym _ZL16phylumnamesstack
	.addrsig_sym _ZL20withexpressionsstack
	.addrsig_sym _ZL13operatorstack
	.addrsig_sym _ZL14variablesstack
	.addrsig_sym view_gen_unparsedefs_default_c
	.addrsig_sym g_options
	.addrsig_sym _ZN12_GLOBAL__N_111gl_bindingsB5cxx11E
	.addrsig_sym _ZN12_GLOBAL__N_111selvarstackE
	.addrsig_sym _ZN12_GLOBAL__N_114dollarvarstackE
	.addrsig_sym _ZN12_GLOBAL__N_117dollarvarextstackE
	.addrsig_sym kimwitu_copyright
	.addrsig_sym _ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf
	.addrsig_sym _ZZN2kc23impl_unparseitem_UnpStr10do_unparseERNS_21printer_functor_classERNS_11uview_classEE3buf_0
	.addrsig_sym _ZTIN2kc27impl_nocasestring_NoCaseStrE
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTSN2kc27impl_nocasestring_NoCaseStrE
	.addrsig_sym _ZTIN2kc20impl_abstract_phylumE
	.addrsig_sym _ZTIN2kc20impl_casestring__StrE
	.addrsig_sym _ZTSN2kc20impl_casestring__StrE
	.addrsig_sym _ZTIN2kc17impl_integer__IntE
	.addrsig_sym _ZTSN2kc17impl_integer__IntE
	.addrsig_sym _ZTIN2kc15impl_real__RealE
	.addrsig_sym _ZTSN2kc15impl_real__RealE
	.addrsig_sym _ZTIN2kc21impl_voidptr__VoidPtrE
	.addrsig_sym _ZTSN2kc21impl_voidptr__VoidPtrE
	.addrsig_sym _ZTIN2kc32printer_functor_function_wrapperE
	.addrsig_sym _ZTSN2kc32printer_functor_function_wrapperE
	.addrsig_sym _ZTIN2kc21printer_functor_classE
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSN2kc21printer_functor_classE
	.addrsig_sym _ZTI13count_printer
	.addrsig_sym _ZTS13count_printer
	.addrsig_sym _ZStL19piecewise_construct
