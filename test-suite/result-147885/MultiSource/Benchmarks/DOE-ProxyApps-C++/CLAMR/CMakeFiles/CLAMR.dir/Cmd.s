	.file	"Cmd.cc"
                                        # Start of file scope inline assembly
	.globl	_ZSt21ios_base_library_initv

                                        # End of file scope inline assembly
	.text
	.globl	_ZN2PP3CmdC2Ev                  # -- Begin function _ZN2PP3CmdC2Ev
	.p2align	5
	.type	_ZN2PP3CmdC2Ev,@function
_ZN2PP3CmdC2Ev:                         # @_ZN2PP3CmdC2Ev
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s3, $a0
	addi.d	$a0, $a0, 8
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	addi.d	$a0, $s3, 24
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	st.d	$a0, $s3, 8
	st.d	$zero, $s3, 16
	st.b	$zero, $s3, 24
	addi.d	$s0, $s3, 48
	addi.d	$a0, $s3, 64
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	st.d	$a0, $s3, 48
	st.d	$zero, $s3, 56
	st.b	$zero, $s3, 64
	addi.d	$s1, $s3, 96
	addi.d	$s6, $s3, 112
	st.d	$s6, $s3, 96
	st.d	$zero, $s3, 104
	st.b	$zero, $s3, 112
	addi.d	$s2, $s3, 128
	addi.d	$fp, $s3, 144
	st.d	$fp, $s3, 128
	st.d	$zero, $s3, 136
	st.b	$zero, $s3, 144
	addi.d	$s4, $s3, 160
	ori	$a2, $zero, 80
	move	$a0, $s4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp0:
	move	$a0, $s4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp1:
# %bb.1:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EEC2Ev.exit
	addi.d	$s7, $s3, 256
	st.d	$s7, $s3, 240
	st.d	$zero, $s3, 248
	st.b	$zero, $s3, 256
	addi.d	$s5, $s3, 288
	st.d	$s5, $s3, 272
	st.d	$zero, $s3, 280
	st.b	$zero, $s3, 288
	addi.d	$a0, $s3, 304
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	addi.d	$a0, $s3, 328
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	addi.d	$a0, $s3, 352
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	st.d	$zero, $s3, 368
	st.w	$zero, $s3, 376
	addi.d	$s8, $s3, 392
	st.d	$zero, $s3, 408
	st.w	$zero, $s3, 416
	st.d	$zero, $s3, 424
	st.d	$zero, $s3, 304
	vrepli.b	$vr0, 0
	vst	$vr0, $s3, 312
	vst	$vr0, $s3, 328
	vst	$vr0, $s3, 344
	ld.d	$a2, $s3, 56
	st.w	$zero, $s3, 360
	vst	$vr0, $sp, 48                   # 16-byte Folded Spill
	vst	$vr0, $s3, 384
	st.w	$zero, $s3, 400
.Ltmp3:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp4:
# %bb.2:                                # %.noexc
	ld.d	$a2, $s3, 104
.Ltmp5:
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1)
	ori	$a4, $zero, 2
	move	$a0, $s1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp6:
# %bb.3:                                # %.noexc4
	ld.d	$a2, $s3, 136
.Ltmp7:
	pcalau12i	$a0, %pc_hi20(.L.str.2)
	addi.d	$a3, $a0, %pc_lo12(.L.str.2)
	ori	$a4, $zero, 14
	move	$a0, $s2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp8:
# %bb.4:                                # %.noexc5
	ld.d	$a2, $s3, 16
	st.d	$zero, $s3, 0
	vld	$vr0, $sp, 48                   # 16-byte Folded Reload
	vst	$vr0, $s3, 80
.Ltmp9:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp10:
# %bb.5:                                # %_ZN2PP3Cmd4initEv.exit
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB0_6:
.Ltmp2:
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	b	.LBB0_12
.LBB0_7:
.Ltmp11:
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt13_Bvector_baseISaIbEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt13_Bvector_baseISaIbEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 272
	beq	$a0, $s5, .LBB0_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $s5, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB0_9:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $s3, 240
	beq	$a0, $s7, .LBB0_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	ld.d	$a1, $s7, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB0_11:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB0_12:
	ld.d	$a0, $s2, 0
	bne	$a0, $fp, .LBB0_17
# %bb.13:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12
	ld.d	$a0, $s1, 0
	bne	$a0, $s6, .LBB0_18
.LBB0_14:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit15
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB0_19
.LBB0_15:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit18
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB0_20
.LBB0_16:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit21
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB0_17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i10
	ld.d	$a1, $fp, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	beq	$a0, $s6, .LBB0_14
.LBB0_18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i13
	ld.d	$a1, $s6, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB0_15
.LBB0_19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i16
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB0_16
.LBB0_20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i19
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end0:
	.size	_ZN2PP3CmdC2Ev, .Lfunc_end0-_ZN2PP3CmdC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table0:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    # >> Call Site 1 <<
	.uleb128 .Ltmp0-.Lfunc_begin0           #   Call between .Lfunc_begin0 and .Ltmp0
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp1-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp1
	.uleb128 .Ltmp2-.Lfunc_begin0           #     jumps to .Ltmp2
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3-.Lfunc_begin0           # >> Call Site 3 <<
	.uleb128 .Ltmp10-.Ltmp3                 #   Call between .Ltmp3 and .Ltmp10
	.uleb128 .Ltmp11-.Lfunc_begin0          #     jumps to .Ltmp11
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp10-.Lfunc_begin0          # >> Call Site 4 <<
	.uleb128 .Lfunc_end0-.Ltmp10            #   Call between .Ltmp10 and .Lfunc_end0
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end0:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd4initEv               # -- Begin function _ZN2PP3Cmd4initEv
	.p2align	5
	.type	_ZN2PP3Cmd4initEv,@function
_ZN2PP3Cmd4initEv:                      # @_ZN2PP3Cmd4initEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	ld.d	$a2, $a0, 56
	addi.d	$a0, $a0, 48
	pcalau12i	$a1, %pc_hi20(.L.str)
	addi.d	$s0, $a1, %pc_lo12(.L.str)
	move	$a1, $zero
	move	$a3, $s0
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 104
	addi.d	$a0, $fp, 96
	pcalau12i	$a1, %pc_hi20(.L.str.1)
	addi.d	$a3, $a1, %pc_lo12(.L.str.1)
	ori	$a4, $zero, 2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 136
	addi.d	$a0, $fp, 128
	pcalau12i	$a1, %pc_hi20(.L.str.2)
	addi.d	$a3, $a1, %pc_lo12(.L.str.2)
	ori	$a4, $zero, 14
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 16
	st.d	$zero, $fp, 0
	addi.d	$a0, $fp, 8
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 80
	move	$a1, $zero
	move	$a3, $s0
	move	$a4, $zero
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jr	$t8
.Lfunc_end1:
	.size	_ZN2PP3Cmd4initEv, .Lfunc_end1-_ZN2PP3Cmd4initEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEED2Ev,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEED2Ev,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEED2Ev # -- Begin function _ZNSt13_Bvector_baseISaIbEED2Ev
	.p2align	5
	.type	_ZNSt13_Bvector_baseISaIbEED2Ev,@function
_ZNSt13_Bvector_baseISaIbEED2Ev:        # @_ZNSt13_Bvector_baseISaIbEED2Ev
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 0
	beqz	$a2, .LBB2_2
# %bb.1:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$a1, $a0, 32
	sub.d	$a1, $a1, $a2
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$zero, $fp, 0
	st.w	$zero, $fp, 8
	st.d	$zero, $fp, 16
	st.w	$zero, $fp, 24
	st.d	$zero, $fp, 32
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
.LBB2_2:                                # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	ret
.Lfunc_end2:
	.size	_ZNSt13_Bvector_baseISaIbEED2Ev, .Lfunc_end2-_ZNSt13_Bvector_baseISaIbEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$s0, $fp, 8
	beq	$a0, $s0, .LBB3_6
# %bb.1:                                # %.lr.ph.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB3_3
	.p2align	4, , 16
.LBB3_2:                                # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i
                                        #   in Loop: Header=BB3_3 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB3_5
.LBB3_3:                                # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB3_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
                                        #   in Loop: Header=BB3_3 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB3_2
.LBB3_5:                                # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split
	ld.d	$a0, $fp, 0
.LBB3_6:                                # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit
	beqz	$a0, .LBB3_8
# %bb.7:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB3_8:                                # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end3:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, .Lfunc_end3-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EED2Ev
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,@function
_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev:     # @_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	vld	$vr0, $a0, 16
	vld	$vr1, $a0, 32
	vld	$vr2, $a0, 48
	vld	$vr3, $a0, 64
	vst	$vr0, $sp, 32
	vst	$vr1, $sp, 48
	vst	$vr2, $sp, 0
	vst	$vr3, $sp, 16
.Ltmp12:
	addi.d	$a1, $sp, 32
	addi.d	$a2, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp13:
# %bb.1:
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB4_7
# %bb.2:
	ld.d	$s0, $fp, 72
	ld.d	$a1, $fp, 40
	addi.d	$a2, $s0, 8
	bgeu	$a1, $a2, .LBB4_6
# %bb.3:                                # %.lr.ph.i.i.preheader
	addi.d	$a1, $a1, -8
	.p2align	4, , 16
.LBB4_4:                                # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB4_4
# %bb.5:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.loopexit.i
	ld.d	$a0, $fp, 0
.LBB4_6:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
	ld.d	$a1, $fp, 8
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB4_7:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EED2Ev.exit
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB4_8:
.Ltmp14:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end4:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev, .Lfunc_end4-_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table4:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Ltmp12-.Lfunc_begin1          # >> Call Site 1 <<
	.uleb128 .Ltmp13-.Ltmp12                #   Call between .Ltmp12 and .Ltmp13
	.uleb128 .Ltmp14-.Lfunc_begin1          #     jumps to .Ltmp14
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp13-.Lfunc_begin1          # >> Call Site 2 <<
	.uleb128 .Lfunc_end4-.Ltmp13            #   Call between .Ltmp13 and .Lfunc_end4
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3CmdC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3CmdC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3CmdC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3CmdC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3CmdC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	st.d	$s1, $sp, 192                   # 8-byte Folded Spill
	st.d	$s2, $sp, 184                   # 8-byte Folded Spill
	st.d	$s3, $sp, 176                   # 8-byte Folded Spill
	st.d	$s4, $sp, 168                   # 8-byte Folded Spill
	st.d	$s5, $sp, 160                   # 8-byte Folded Spill
	st.d	$s6, $sp, 152                   # 8-byte Folded Spill
	st.d	$s7, $sp, 144                   # 8-byte Folded Spill
	st.d	$s8, $sp, 136                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s7, $a7
	move	$s8, $a6
	move	$s1, $a5
	move	$s6, $a4
	move	$s2, $a3
	move	$fp, $a2
	move	$s5, $a1
	move	$s3, $a0
	addi.d	$a0, $a0, 8
	st.d	$a0, $sp, 88                    # 8-byte Folded Spill
	addi.d	$a0, $s3, 24
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	st.d	$a0, $s3, 8
	st.d	$zero, $s3, 16
	st.b	$zero, $s3, 24
	addi.d	$s0, $s3, 48
	addi.d	$a0, $s3, 64
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	st.d	$a0, $s3, 48
	st.d	$zero, $s3, 56
	st.b	$zero, $s3, 64
	addi.d	$a0, $s3, 96
	st.d	$a0, $sp, 80                    # 8-byte Folded Spill
	addi.d	$a0, $s3, 112
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	st.d	$a0, $s3, 96
	st.d	$zero, $s3, 104
	st.b	$zero, $s3, 112
	addi.d	$a0, $s3, 128
	st.d	$a0, $sp, 72                    # 8-byte Folded Spill
	addi.d	$a0, $s3, 144
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	st.d	$a0, $s3, 128
	st.d	$zero, $s3, 136
	st.b	$zero, $s3, 144
	addi.d	$s4, $s3, 160
	ori	$a2, $zero, 80
	move	$a0, $s4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
.Ltmp15:
	move	$a0, $s4
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
.Ltmp16:
# %bb.1:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EEC2Ev.exit
	addi.d	$a0, $s3, 256
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	st.d	$a0, $s3, 240
	st.d	$zero, $s3, 248
	st.b	$zero, $s3, 256
	addi.d	$a0, $s3, 288
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	st.d	$a0, $s3, 272
	st.d	$zero, $s3, 280
	st.b	$zero, $s3, 288
	st.d	$zero, $s3, 368
	st.w	$zero, $s3, 376
	st.d	$zero, $s3, 408
	st.w	$zero, $s3, 416
	st.d	$zero, $s3, 424
	st.d	$zero, $s3, 304
	vrepli.b	$vr0, 0
	vst	$vr0, $s3, 312
	vst	$vr0, $s3, 328
	vst	$vr0, $s3, 344
	ld.d	$a2, $s3, 56
	st.w	$zero, $s3, 360
	vst	$vr0, $sp, 48                   # 16-byte Folded Spill
	vst	$vr0, $s3, 384
	st.w	$zero, $s3, 400
.Ltmp18:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	move	$a0, $s0
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp19:
# %bb.2:                                # %.noexc
	ld.d	$a2, $s3, 104
.Ltmp20:
	pcalau12i	$a0, %pc_hi20(.L.str.1)
	addi.d	$a3, $a0, %pc_lo12(.L.str.1)
	ori	$a4, $zero, 2
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp21:
# %bb.3:                                # %.noexc13
	ld.d	$a2, $s3, 136
.Ltmp22:
	pcalau12i	$a0, %pc_hi20(.L.str.2)
	addi.d	$a3, $a0, %pc_lo12(.L.str.2)
	ori	$a4, $zero, 14
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp23:
# %bb.4:                                # %.noexc14
	ld.d	$a2, $s3, 16
	st.d	$zero, $s3, 0
	vld	$vr0, $sp, 48                   # 16-byte Folded Reload
	vst	$vr0, $s3, 80
.Ltmp24:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp25:
# %bb.5:                                # %_ZN2PP3Cmd4initEv.exit
	st.d	$fp, $s3, 80
	st.d	$s2, $s3, 88
.Ltmp26:
	move	$a0, $s0
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp27:
# %bb.6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_.exit
	st.w	$s1, $s3, 0
	st.w	$s8, $s3, 4
.Ltmp28:
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	move	$a1, $s7
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp29:
# %bb.7:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_.exit18
	st.d	$s6, $s3, 40
	addi.d	$s1, $sp, 112
	ld.d	$a1, $s5, 8
	ld.d	$fp, $s5, 0
	st.d	$s1, $sp, 96
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 128
	move	$a0, $s1
	bltu	$a1, $a2, .LBB5_10
# %bb.8:                                # %.noexc.i
.Ltmp30:
	addi.d	$a0, $sp, 96
	addi.d	$a1, $sp, 128
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp31:
# %bb.9:                                # %.noexc19
	ld.d	$a1, $sp, 128
	st.d	$a0, $sp, 96
	st.d	$a1, $sp, 112
.LBB5_10:                               # %._crit_edge.i.i
	ld.d	$a3, $sp, 232
	ld.d	$a2, $sp, 224
	addi.w	$a4, $zero, -1
	beq	$a1, $a4, .LBB5_14
# %bb.11:                               # %._crit_edge.i.i
	bnez	$a1, .LBB5_13
# %bb.12:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB5_14
.LBB5_13:
	addi.d	$a4, $a1, 1
	move	$a1, $fp
	move	$fp, $a2
	move	$a2, $a4
	move	$s2, $a3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	move	$a2, $fp
	move	$a3, $s2
.LBB5_14:
	ld.d	$a0, $sp, 128
	st.d	$a0, $sp, 104
.Ltmp33:
	addi.d	$a1, $sp, 96
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14process_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp34:
# %bb.15:
	ld.d	$a0, $sp, 96
	beq	$a0, $s1, .LBB5_17
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB5_17:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s8, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
.LBB5_18:
.Ltmp35:
	ld.d	$a2, $sp, 96
	move	$fp, $a0
	beq	$a2, $s1, .LBB5_22
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	ld.d	$a0, $sp, 112
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB5_22
.LBB5_20:
.Ltmp17:
	move	$fp, $a0
	b	.LBB5_27
.LBB5_21:
.Ltmp32:
	move	$fp, $a0
.LBB5_22:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit22
	addi.d	$s1, $s3, 304
	addi.d	$s2, $s3, 328
	addi.d	$s5, $s3, 352
	addi.d	$a0, $s3, 392
	pcaddu18i	$ra, %call36(_ZNSt13_Bvector_baseISaIbEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt13_Bvector_baseISaIbEED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 272
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	beq	$a0, $a1, .LBB5_24
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB5_24:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit25
	ld.d	$a0, $s3, 240
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	beq	$a0, $a1, .LBB5_26
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB5_26:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit28
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
.LBB5_27:
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB5_32
# %bb.28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB5_33
.LBB5_29:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB5_34
.LBB5_30:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	bne	$a0, $a1, .LBB5_35
.LBB5_31:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB5_32:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB5_29
.LBB5_33:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB5_30
.LBB5_34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	beq	$a0, $a1, .LBB5_31
.LBB5_35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end5:
	.size	_ZN2PP3CmdC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end5-_ZN2PP3CmdC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table5:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin2-.Lfunc_begin2    # >> Call Site 1 <<
	.uleb128 .Ltmp15-.Lfunc_begin2          #   Call between .Lfunc_begin2 and .Ltmp15
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp15-.Lfunc_begin2          # >> Call Site 2 <<
	.uleb128 .Ltmp16-.Ltmp15                #   Call between .Ltmp15 and .Ltmp16
	.uleb128 .Ltmp17-.Lfunc_begin2          #     jumps to .Ltmp17
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp18-.Lfunc_begin2          # >> Call Site 3 <<
	.uleb128 .Ltmp31-.Ltmp18                #   Call between .Ltmp18 and .Ltmp31
	.uleb128 .Ltmp32-.Lfunc_begin2          #     jumps to .Ltmp32
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp31-.Lfunc_begin2          # >> Call Site 4 <<
	.uleb128 .Ltmp33-.Ltmp31                #   Call between .Ltmp31 and .Ltmp33
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp33-.Lfunc_begin2          # >> Call Site 5 <<
	.uleb128 .Ltmp34-.Ltmp33                #   Call between .Ltmp33 and .Ltmp34
	.uleb128 .Ltmp35-.Lfunc_begin2          #     jumps to .Ltmp35
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp34-.Lfunc_begin2          # >> Call Site 6 <<
	.uleb128 .Lfunc_end5-.Ltmp34            #   Call between .Ltmp34 and .Lfunc_end5
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end2:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd14process_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd14process_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd14process_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd14process_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd14process_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	addi.d	$sp, $sp, -352
	.cfi_def_cfa_offset 352
	st.d	$ra, $sp, 344                   # 8-byte Folded Spill
	st.d	$fp, $sp, 336                   # 8-byte Folded Spill
	st.d	$s0, $sp, 328                   # 8-byte Folded Spill
	st.d	$s1, $sp, 320                   # 8-byte Folded Spill
	st.d	$s2, $sp, 312                   # 8-byte Folded Spill
	st.d	$s3, $sp, 304                   # 8-byte Folded Spill
	st.d	$s4, $sp, 296                   # 8-byte Folded Spill
	st.d	$s5, $sp, 288                   # 8-byte Folded Spill
	st.d	$s6, $sp, 280                   # 8-byte Folded Spill
	st.d	$s7, $sp, 272                   # 8-byte Folded Spill
	st.d	$s8, $sp, 264                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a1, $sp, 16                    # 8-byte Folded Spill
	move	$fp, $a0
	addi.d	$a0, $sp, 240
	st.d	$a0, $sp, 224
	st.d	$zero, $sp, 232
	st.b	$zero, $sp, 240
	st.w	$zero, $sp, 220
	addi.d	$s1, $fp, 128
	addi.d	$s8, $sp, 72
	addi.d	$s7, $sp, 40
	addi.d	$a0, $fp, 160
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	pcalau12i	$a0, %pc_hi20(.L.str.2)
	addi.d	$s3, $a0, %pc_lo12(.L.str.2)
	ori	$s2, $zero, 16
	addi.w	$s0, $zero, -1
	b	.LBB6_3
	.p2align	4, , 16
.LBB6_1:                                #   in Loop: Header=BB6_3 Depth=1
.Ltmp55:
	addi.d	$a1, $sp, 88
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp56:
.LBB6_2:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EE9push_backERKS1_.exit
                                        #   in Loop: Header=BB6_3 Depth=1
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB6_3:                                # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $fp, 136
.Ltmp36:
	ori	$a4, $zero, 14
	move	$a0, $s1
	move	$a1, $zero
	move	$a3, $s3
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp37:
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
                                        #   in Loop: Header=BB6_3 Depth=1
.Ltmp38:
	addi.d	$a1, $sp, 220
	addi.d	$a3, $sp, 224
	move	$a0, $fp
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd17extract_next_wordERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_RNS2_18basic_stringstreamIcS5_S6_EES1_)
	jirl	$ra, $ra, 0
.Ltmp39:
# %bb.5:                                #   in Loop: Header=BB6_3 Depth=1
	beqz	$a0, .LBB6_28
# %bb.6:                                #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a1, $sp, 232
	ld.d	$s4, $sp, 224
	st.d	$s8, $sp, 56
	st.d	$a1, $sp, 256
	move	$a0, $s8
	bltu	$a1, $s2, .LBB6_9
# %bb.7:                                # %.noexc.i
                                        #   in Loop: Header=BB6_3 Depth=1
.Ltmp44:
	addi.d	$a0, $sp, 56
	addi.d	$a1, $sp, 256
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp45:
# %bb.8:                                # %.noexc
                                        #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a1, $sp, 256
	st.d	$a0, $sp, 56
	st.d	$a1, $sp, 72
.LBB6_9:                                # %._crit_edge.i.i
                                        #   in Loop: Header=BB6_3 Depth=1
	beq	$a1, $s0, .LBB6_13
# %bb.10:                               # %._crit_edge.i.i
                                        #   in Loop: Header=BB6_3 Depth=1
	bnez	$a1, .LBB6_12
# %bb.11:                               #   in Loop: Header=BB6_3 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB6_13
	.p2align	4, , 16
.LBB6_12:                               #   in Loop: Header=BB6_3 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB6_13:                               #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a0, $sp, 256
	ld.w	$s4, $fp, 0
	ld.w	$s5, $fp, 4
	ld.d	$a1, $fp, 16
	ld.d	$s6, $fp, 8
	st.d	$a0, $sp, 64
	st.d	$s7, $sp, 24
	st.d	$a1, $sp, 256
	move	$a0, $s7
	bltu	$a1, $s2, .LBB6_16
# %bb.14:                               # %.noexc.i13
                                        #   in Loop: Header=BB6_3 Depth=1
.Ltmp47:
	addi.d	$a0, $sp, 24
	addi.d	$a1, $sp, 256
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp48:
# %bb.15:                               # %.noexc14
                                        #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a1, $sp, 256
	st.d	$a0, $sp, 24
	st.d	$a1, $sp, 40
.LBB6_16:                               # %._crit_edge.i.i12
                                        #   in Loop: Header=BB6_3 Depth=1
	beq	$a1, $s0, .LBB6_20
# %bb.17:                               # %._crit_edge.i.i12
                                        #   in Loop: Header=BB6_3 Depth=1
	bnez	$a1, .LBB6_19
# %bb.18:                               #   in Loop: Header=BB6_3 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB6_20
	.p2align	4, , 16
.LBB6_19:                               #   in Loop: Header=BB6_3 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB6_20:                               #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a0, $sp, 256
	ld.d	$a5, $fp, 40
	st.d	$a0, $sp, 32
.Ltmp50:
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	addi.d	$a4, $sp, 24
	move	$a2, $s4
	move	$a3, $s5
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp51:
# %bb.21:                               #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a0, $sp, 24
	beq	$a0, $s7, .LBB6_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a1, $sp, 40
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB6_23:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a0, $sp, 56
	beq	$a0, $s8, .LBB6_25
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i16
                                        #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB6_25:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit18
                                        #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a1, $fp, 224
	ld.d	$a0, $fp, 208
	addi.d	$a1, $a1, -128
	beq	$a0, $a1, .LBB6_1
# %bb.26:                               #   in Loop: Header=BB6_3 Depth=1
.Ltmp53:
	addi.d	$a1, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp54:
# %bb.27:                               # %.noexc19
                                        #   in Loop: Header=BB6_3 Depth=1
	ld.d	$a0, $fp, 208
	addi.d	$a0, $a0, 128
	st.d	$a0, $fp, 208
	b	.LBB6_2
.LBB6_28:
.Ltmp41:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15reset_name_typeEv)
	jirl	$ra, $ra, 0
.Ltmp42:
# %bb.29:
	ld.d	$a0, $sp, 224
	addi.d	$a1, $sp, 240
	beq	$a0, $a1, .LBB6_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
	ld.d	$a1, $sp, 240
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB6_31:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29
	ld.d	$s8, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 312                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 320                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 328                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 336                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 344                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 352
	ret
.LBB6_32:                               # %.loopexit.split-lp
.Ltmp43:
	move	$fp, $a0
	addi.d	$a1, $sp, 240
	ld.d	$a0, $sp, 224
	beq	$a0, $a1, .LBB6_39
	b	.LBB6_43
.LBB6_33:
.Ltmp46:
	move	$fp, $a0
	addi.d	$a1, $sp, 240
	ld.d	$a0, $sp, 224
	beq	$a0, $a1, .LBB6_39
	b	.LBB6_43
.LBB6_34:
.Ltmp49:
	move	$fp, $a0
	ld.d	$a0, $sp, 56
	beq	$a0, $s8, .LBB6_38
	b	.LBB6_41
.LBB6_35:
.Ltmp57:
	move	$fp, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a1, $sp, 240
	ld.d	$a0, $sp, 224
	beq	$a0, $a1, .LBB6_39
	b	.LBB6_43
.LBB6_36:
.Ltmp52:
	ld.d	$a2, $sp, 24
	move	$fp, $a0
	bne	$a2, $s7, .LBB6_40
# %bb.37:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit23
	ld.d	$a0, $sp, 56
	bne	$a0, $s8, .LBB6_41
.LBB6_38:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit26
	addi.d	$a1, $sp, 240
	ld.d	$a0, $sp, 224
	bne	$a0, $a1, .LBB6_43
.LBB6_39:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB6_40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
	ld.d	$a0, $sp, 40
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 56
	beq	$a0, $s8, .LBB6_38
.LBB6_41:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i24
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a1, $sp, 240
	ld.d	$a0, $sp, 224
	beq	$a0, $a1, .LBB6_39
	b	.LBB6_43
.LBB6_42:                               # %.loopexit
.Ltmp40:
	move	$fp, $a0
	addi.d	$a1, $sp, 240
	ld.d	$a0, $sp, 224
	beq	$a0, $a1, .LBB6_39
.LBB6_43:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	ld.d	$a1, $sp, 240
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end6:
	.size	_ZN2PP3Cmd14process_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end6-_ZN2PP3Cmd14process_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table6:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Ltmp55-.Lfunc_begin3          # >> Call Site 1 <<
	.uleb128 .Ltmp56-.Ltmp55                #   Call between .Ltmp55 and .Ltmp56
	.uleb128 .Ltmp57-.Lfunc_begin3          #     jumps to .Ltmp57
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp56-.Lfunc_begin3          # >> Call Site 2 <<
	.uleb128 .Ltmp36-.Ltmp56                #   Call between .Ltmp56 and .Ltmp36
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp36-.Lfunc_begin3          # >> Call Site 3 <<
	.uleb128 .Ltmp39-.Ltmp36                #   Call between .Ltmp36 and .Ltmp39
	.uleb128 .Ltmp40-.Lfunc_begin3          #     jumps to .Ltmp40
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp44-.Lfunc_begin3          # >> Call Site 4 <<
	.uleb128 .Ltmp45-.Ltmp44                #   Call between .Ltmp44 and .Ltmp45
	.uleb128 .Ltmp46-.Lfunc_begin3          #     jumps to .Ltmp46
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp45-.Lfunc_begin3          # >> Call Site 5 <<
	.uleb128 .Ltmp47-.Ltmp45                #   Call between .Ltmp45 and .Ltmp47
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp47-.Lfunc_begin3          # >> Call Site 6 <<
	.uleb128 .Ltmp48-.Ltmp47                #   Call between .Ltmp47 and .Ltmp48
	.uleb128 .Ltmp49-.Lfunc_begin3          #     jumps to .Ltmp49
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp48-.Lfunc_begin3          # >> Call Site 7 <<
	.uleb128 .Ltmp50-.Ltmp48                #   Call between .Ltmp48 and .Ltmp50
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp50-.Lfunc_begin3          # >> Call Site 8 <<
	.uleb128 .Ltmp51-.Ltmp50                #   Call between .Ltmp50 and .Ltmp51
	.uleb128 .Ltmp52-.Lfunc_begin3          #     jumps to .Ltmp52
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp51-.Lfunc_begin3          # >> Call Site 9 <<
	.uleb128 .Ltmp53-.Ltmp51                #   Call between .Ltmp51 and .Ltmp53
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp53-.Lfunc_begin3          # >> Call Site 10 <<
	.uleb128 .Ltmp54-.Ltmp53                #   Call between .Ltmp53 and .Ltmp54
	.uleb128 .Ltmp57-.Lfunc_begin3          #     jumps to .Ltmp57
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp41-.Lfunc_begin3          # >> Call Site 11 <<
	.uleb128 .Ltmp42-.Ltmp41                #   Call between .Ltmp41 and .Ltmp42
	.uleb128 .Ltmp43-.Lfunc_begin3          #     jumps to .Ltmp43
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp42-.Lfunc_begin3          # >> Call Site 12 <<
	.uleb128 .Lfunc_end6-.Ltmp42            #   Call between .Ltmp42 and .Lfunc_end6
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end3:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd8add_wordENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_ # -- Begin function _ZN2PP3Cmd8add_wordENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_
	.p2align	5
	.type	_ZN2PP3Cmd8add_wordENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_,@function
_ZN2PP3Cmd8add_wordENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_: # @_ZN2PP3Cmd8add_wordENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception4
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s2, $a4
	move	$s0, $a3
	move	$s1, $a2
	move	$fp, $a0
	addi.d	$s4, $sp, 56
	ld.d	$a2, $a1, 8
	ld.d	$s3, $a1, 0
	st.d	$s4, $sp, 40
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 200
	move	$a0, $s4
	bltu	$a2, $a1, .LBB7_2
# %bb.1:                                # %.noexc.i
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 200
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 200
	st.d	$a0, $sp, 40
	st.d	$a2, $sp, 56
.LBB7_2:                                # %._crit_edge.i.i
	addi.w	$s5, $zero, -1
	beq	$a2, $s5, .LBB7_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a2, .LBB7_5
# %bb.4:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB7_6
.LBB7_5:
	addi.d	$a2, $a2, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 200
	st.d	$a0, $sp, 48
	addi.d	$s3, $sp, 24
	ld.d	$a1, $s2, 8
	ld.d	$s2, $s2, 0
	st.d	$s3, $sp, 8
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 200
	move	$a0, $s3
	bltu	$a1, $a2, .LBB7_9
# %bb.7:                                # %.noexc.i10
.Ltmp58:
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 200
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp59:
# %bb.8:                                # %.noexc
	ld.d	$a1, $sp, 200
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB7_9:                                # %._crit_edge.i.i9
	beq	$a1, $s5, .LBB7_13
# %bb.10:                               # %._crit_edge.i.i9
	bnez	$a1, .LBB7_12
# %bb.11:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB7_13
.LBB7_12:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB7_13:
	ld.d	$a0, $sp, 200
	ld.d	$a5, $fp, 40
	st.d	$a0, $sp, 16
.Ltmp61:
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 40
	addi.d	$a4, $sp, 8
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp62:
# %bb.14:
	ld.d	$a0, $sp, 8
	beq	$a0, $s3, .LBB7_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_16:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 40
	beq	$a0, $s4, .LBB7_18
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_18:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	ld.d	$a1, $fp, 224
	ld.d	$a0, $fp, 208
	addi.d	$a1, $a1, -128
	beq	$a0, $a1, .LBB7_21
# %bb.19:
.Ltmp64:
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp65:
# %bb.20:                               # %.noexc15
	ld.d	$a0, $fp, 208
	addi.d	$a0, $a0, 128
	st.d	$a0, $fp, 208
	b	.LBB7_22
.LBB7_21:
	addi.d	$a0, $fp, 160
.Ltmp66:
	addi.d	$a1, $sp, 72
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp67:
.LBB7_22:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EE9push_backERKS1_.exit
	addi.d	$a0, $sp, 72
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB7_23:
.Ltmp60:
	move	$fp, $a0
	b	.LBB7_27
.LBB7_24:
.Ltmp68:
	move	$fp, $a0
	addi.d	$a0, $sp, 72
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB7_25:
.Ltmp63:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s3, .LBB7_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i17
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB7_27:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit19
	ld.d	$a0, $sp, 40
	bne	$a0, $s4, .LBB7_29
# %bb.28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit22
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB7_29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end7:
	.size	_ZN2PP3Cmd8add_wordENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_, .Lfunc_end7-_ZN2PP3Cmd8add_wordENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table7:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin4-.Lfunc_begin4    # >> Call Site 1 <<
	.uleb128 .Ltmp58-.Lfunc_begin4          #   Call between .Lfunc_begin4 and .Ltmp58
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp58-.Lfunc_begin4          # >> Call Site 2 <<
	.uleb128 .Ltmp59-.Ltmp58                #   Call between .Ltmp58 and .Ltmp59
	.uleb128 .Ltmp60-.Lfunc_begin4          #     jumps to .Ltmp60
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp59-.Lfunc_begin4          # >> Call Site 3 <<
	.uleb128 .Ltmp61-.Ltmp59                #   Call between .Ltmp59 and .Ltmp61
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp61-.Lfunc_begin4          # >> Call Site 4 <<
	.uleb128 .Ltmp62-.Ltmp61                #   Call between .Ltmp61 and .Ltmp62
	.uleb128 .Ltmp63-.Lfunc_begin4          #     jumps to .Ltmp63
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp62-.Lfunc_begin4          # >> Call Site 5 <<
	.uleb128 .Ltmp64-.Ltmp62                #   Call between .Ltmp62 and .Ltmp64
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp64-.Lfunc_begin4          # >> Call Site 6 <<
	.uleb128 .Ltmp67-.Ltmp64                #   Call between .Ltmp64 and .Ltmp67
	.uleb128 .Ltmp68-.Lfunc_begin4          #     jumps to .Ltmp68
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp67-.Lfunc_begin4          # >> Call Site 7 <<
	.uleb128 .Lfunc_end7-.Ltmp67            #   Call between .Ltmp67 and .Lfunc_end7
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd10erase_wordEi        # -- Begin function _ZN2PP3Cmd10erase_wordEi
	.p2align	5
	.type	_ZN2PP3Cmd10erase_wordEi,@function
_ZN2PP3Cmd10erase_wordEi:               # @_ZN2PP3Cmd10erase_wordEi
	.cfi_startproc
# %bb.0:
	ld.d	$a5, $a0, 176
	ld.d	$a3, $a0, 184
	ld.d	$a2, $a0, 200
	sub.d	$a3, $a5, $a3
	srai.d	$a3, $a3, 7
	add.d	$a4, $a3, $a1
	bltz	$a4, .LBB8_3
# %bb.1:
	ori	$a3, $zero, 3
	bltu	$a3, $a4, .LBB8_4
# %bb.2:
	ld.d	$a3, $a2, 0
	slli.d	$a1, $a1, 7
	add.d	$a4, $a5, $a1
	b	.LBB8_6
.LBB8_3:
	srai.d	$a1, $a4, 2
	b	.LBB8_5
.LBB8_4:
	srli.d	$a1, $a4, 2
.LBB8_5:
	slli.d	$a3, $a1, 3
	ldx.d	$a3, $a2, $a3
	alsl.d	$a2, $a1, $a2, 3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a4, $a1
	slli.d	$a1, $a1, 7
	add.d	$a4, $a3, $a1
.LBB8_6:                                # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	addi.d	$a1, $a0, 160
	st.d	$a4, $sp, 40
	st.d	$a3, $sp, 48
	addi.d	$a0, $a3, 512
	st.d	$a0, $sp, 56
	st.d	$a2, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a2, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end8:
	.size	_ZN2PP3Cmd10erase_wordEi, .Lfunc_end8-_ZN2PP3Cmd10erase_wordEi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd15erase_last_wordEv   # -- Begin function _ZN2PP3Cmd15erase_last_wordEv
	.p2align	5
	.type	_ZN2PP3Cmd15erase_last_wordEv,@function
_ZN2PP3Cmd15erase_last_wordEv:          # @_ZN2PP3Cmd15erase_last_wordEv
	.cfi_startproc
# %bb.0:
	ld.d	$a2, $a0, 200
	ld.d	$a1, $a0, 232
	ld.d	$a3, $a0, 176
	ld.d	$a4, $a0, 192
	sub.d	$a5, $a1, $a2
	srli.d	$a5, $a5, 3
	ld.d	$a6, $a0, 208
	ld.d	$a7, $a0, 216
	sltu	$a1, $zero, $a1
	sub.d	$a5, $a5, $a1
	ld.d	$a1, $a0, 184
	sub.d	$a6, $a6, $a7
	srli.d	$a6, $a6, 7
	sub.d	$a4, $a4, $a3
	srli.d	$a4, $a4, 7
	add.d	$a4, $a6, $a4
	alsl.w	$a5, $a5, $a4, 2
	sub.d	$a4, $a3, $a1
	srai.d	$a4, $a4, 7
	add.d	$a4, $a5, $a4
	bltz	$a4, .LBB9_4
# %bb.1:
	ori	$a6, $zero, 3
	bltu	$a6, $a4, .LBB9_5
# %bb.2:
	slli.d	$a4, $a5, 7
	add.d	$a3, $a3, $a4
	sub.d	$a1, $a3, $a1
	srai.d	$a4, $a1, 7
	addi.d	$a1, $a4, -1
	bgtz	$a4, .LBB9_7
.LBB9_3:
	srai.d	$a3, $a1, 2
	b	.LBB9_10
.LBB9_4:
	srai.d	$a3, $a4, 2
	b	.LBB9_6
.LBB9_5:
	srli.d	$a3, $a4, 2
.LBB9_6:
	slli.d	$a1, $a3, 3
	ldx.d	$a1, $a2, $a1
	alsl.d	$a2, $a3, $a2, 3
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a4, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
	sub.d	$a1, $a3, $a1
	srai.d	$a4, $a1, 7
	addi.d	$a1, $a4, -1
	blez	$a4, .LBB9_3
.LBB9_7:
	ori	$a5, $zero, 4
	bltu	$a5, $a4, .LBB9_9
# %bb.8:
	ld.d	$a4, $a2, 0
	addi.d	$a3, $a3, -128
	b	.LBB9_11
.LBB9_9:
	srli.d	$a3, $a1, 2
.LBB9_10:
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a2, $a4
	alsl.d	$a2, $a3, $a2, 3
	slli.d	$a3, $a3, 2
	sub.d	$a1, $a1, $a3
	slli.d	$a1, $a1, 7
	add.d	$a3, $a4, $a1
.LBB9_11:                               # %_ZStmiRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	addi.d	$a1, $a0, 160
	st.d	$a3, $sp, 40
	st.d	$a4, $sp, 48
	addi.d	$a0, $a4, 512
	st.d	$a0, $sp, 56
	st.d	$a2, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a2, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.Lfunc_end9:
	.size	_ZN2PP3Cmd15erase_last_wordEv, .Lfunc_end9-_ZN2PP3Cmd15erase_last_wordEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv # -- Begin function _ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv
	.p2align	5
	.type	_ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv,@function
_ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv: # @_ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv
# %bb.0:
	ld.d	$a1, $a0, 72
	ld.d	$a2, $a0, 40
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $a0, 48
	ld.d	$a4, $a0, 56
	sub.d	$a1, $a2, $a1
	ld.d	$a2, $a0, 32
	ld.d	$a0, $a0, 16
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a1, $a1, $a3, 2
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
	ret
.Lfunc_end10:
	.size	_ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv, .Lfunc_end10-_ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd13remove_commasEv     # -- Begin function _ZN2PP3Cmd13remove_commasEv
	.p2align	5
	.type	_ZN2PP3Cmd13remove_commasEv,@function
_ZN2PP3Cmd13remove_commasEv:            # @_ZN2PP3Cmd13remove_commasEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a0
	move	$s1, $zero
	addi.d	$s0, $a0, 160
	ori	$s2, $zero, 4
	ori	$s3, $zero, 12
	ori	$s4, $zero, 3
	b	.LBB11_5
.LBB11_1:                               #   in Loop: Header=BB11_5 Depth=1
	srai.d	$a1, $a2, 2
.LBB11_2:                               #   in Loop: Header=BB11_5 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a1, $a0, 3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a3, $a1
.LBB11_3:                               # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
                                        #   in Loop: Header=BB11_5 Depth=1
	st.d	$a1, $sp, 40
	st.d	$a3, $sp, 48
	addi.d	$a1, $a3, 512
	st.d	$a1, $sp, 56
	st.d	$a0, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a2, $sp, 40
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, -1
.LBB11_4:                               #   in Loop: Header=BB11_5 Depth=1
	addi.w	$s1, $s1, 1
.LBB11_5:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB11_16
# %bb.6:                                #   in Loop: Header=BB11_5 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s1
	bltz	$a2, .LBB11_9
# %bb.7:                                #   in Loop: Header=BB11_5 Depth=1
	bgeu	$a2, $s2, .LBB11_10
# %bb.8:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
                                        #   in Loop: Header=BB11_5 Depth=1
	slli.d	$a2, $s1, 7
	add.d	$a2, $a1, $a2
	ld.w	$a2, $a2, 32
	bne	$a2, $s3, .LBB11_4
	b	.LBB11_14
	.p2align	4, , 16
.LBB11_9:                               #   in Loop: Header=BB11_5 Depth=1
	srai.d	$a3, $a2, 2
	b	.LBB11_11
	.p2align	4, , 16
.LBB11_10:                              #   in Loop: Header=BB11_5 Depth=1
	srli.d	$a3, $a2, 2
.LBB11_11:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB11_5 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a0, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	ld.w	$a3, $a3, 32
	bne	$a3, $s3, .LBB11_4
# %bb.12:                               #   in Loop: Header=BB11_5 Depth=1
	bltz	$a2, .LBB11_1
# %bb.13:                               #   in Loop: Header=BB11_5 Depth=1
	bltu	$s4, $a2, .LBB11_15
.LBB11_14:                              # %.thread10
                                        #   in Loop: Header=BB11_5 Depth=1
	ld.d	$a3, $a0, 0
	slli.d	$a2, $s1, 7
	add.d	$a1, $a1, $a2
	b	.LBB11_3
.LBB11_15:                              #   in Loop: Header=BB11_5 Depth=1
	srli.d	$a1, $a2, 2
	b	.LBB11_2
.LBB11_16:
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end11:
	.size	_ZN2PP3Cmd13remove_commasEv, .Lfunc_end11-_ZN2PP3Cmd13remove_commasEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EEixEm,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EEixEm,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EEixEm # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EEixEm
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EEixEm,@function
_ZNSt5dequeIN2PP4WordESaIS1_EEixEm:     # @_ZNSt5dequeIN2PP4WordESaIS1_EEixEm
# %bb.0:
	ld.d	$a3, $a0, 16
	ld.d	$a2, $a0, 24
	ld.d	$a0, $a0, 40
	sub.d	$a2, $a3, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $a1
	bltz	$a2, .LBB12_3
# %bb.1:
	ori	$a4, $zero, 3
	bltu	$a4, $a2, .LBB12_4
# %bb.2:
	slli.d	$a0, $a1, 7
	add.d	$a0, $a3, $a0
	ret
.LBB12_3:
	srai.d	$a1, $a2, 2
	b	.LBB12_5
.LBB12_4:
	srli.d	$a1, $a2, 2
.LBB12_5:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	ret
.Lfunc_end12:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EEixEm, .Lfunc_end12-_ZNSt5dequeIN2PP4WordESaIS1_EEixEm
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd14set_index_baseEi    # -- Begin function _ZN2PP3Cmd14set_index_baseEi
	.p2align	5
	.type	_ZN2PP3Cmd14set_index_baseEi,@function
_ZN2PP3Cmd14set_index_baseEi:           # @_ZN2PP3Cmd14set_index_baseEi
# %bb.0:
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	st.w	$a1, $a0, %pc_lo12(_ZN2PPL10index_baseE)
	ret
.Lfunc_end13:
	.size	_ZN2PP3Cmd14set_index_baseEi, .Lfunc_end13-_ZN2PP3Cmd14set_index_baseEi
                                        # -- End function
	.globl	_ZN2PP3Cmd18set_case_sensitiveEb # -- Begin function _ZN2PP3Cmd18set_case_sensitiveEb
	.p2align	5
	.type	_ZN2PP3Cmd18set_case_sensitiveEb,@function
_ZN2PP3Cmd18set_case_sensitiveEb:       # @_ZN2PP3Cmd18set_case_sensitiveEb
# %bb.0:
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	st.b	$a1, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
	ret
.Lfunc_end14:
	.size	_ZN2PP3Cmd18set_case_sensitiveEb, .Lfunc_end14-_ZN2PP3Cmd18set_case_sensitiveEb
                                        # -- End function
	.globl	_ZN2PP3Cmd17extract_next_wordERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_RNS2_18basic_stringstreamIcS5_S6_EES1_ # -- Begin function _ZN2PP3Cmd17extract_next_wordERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_RNS2_18basic_stringstreamIcS5_S6_EES1_
	.p2align	5
	.type	_ZN2PP3Cmd17extract_next_wordERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_RNS2_18basic_stringstreamIcS5_S6_EES1_,@function
_ZN2PP3Cmd17extract_next_wordERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_RNS2_18basic_stringstreamIcS5_S6_EES1_: # @_ZN2PP3Cmd17extract_next_wordERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_RNS2_18basic_stringstreamIcS5_S6_EES1_
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception5
# %bb.0:
	addi.d	$sp, $sp, -192
	.cfi_def_cfa_offset 192
	st.d	$ra, $sp, 184                   # 8-byte Folded Spill
	st.d	$fp, $sp, 176                   # 8-byte Folded Spill
	st.d	$s0, $sp, 168                   # 8-byte Folded Spill
	st.d	$s1, $sp, 160                   # 8-byte Folded Spill
	st.d	$s2, $sp, 152                   # 8-byte Folded Spill
	st.d	$s3, $sp, 144                   # 8-byte Folded Spill
	st.d	$s4, $sp, 136                   # 8-byte Folded Spill
	st.d	$s5, $sp, 128                   # 8-byte Folded Spill
	st.d	$s6, $sp, 120                   # 8-byte Folded Spill
	st.d	$s7, $sp, 112                   # 8-byte Folded Spill
	st.d	$s8, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.w	$a4, $a1, 0
	bltz	$a4, .LBB15_5
# %bb.1:
	move	$s2, $a2
	move	$s4, $a0
	ld.w	$a0, $a2, 8
	bge	$a4, $a0, .LBB15_5
# %bb.2:
	move	$fp, $a1
	move	$s0, $a3
	ld.d	$a1, $s4, 96
	ld.d	$a3, $s4, 104
	move	$a0, $s2
	move	$a2, $a4
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm)
	jirl	$ra, $ra, 0
	addi.w	$s1, $a0, 0
	addi.w	$s6, $zero, -1
	beq	$s1, $s6, .LBB15_5
# %bb.3:
	move	$s3, $a0
	ld.d	$a0, $s2, 0
	ldx.b	$a1, $a0, $s1
	addi.d	$a0, $s4, 128
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm)
	jirl	$ra, $ra, 0
	beq	$a0, $s6, .LBB15_7
# %bb.4:
	ld.d	$a0, $s2, 0
	ldx.b	$a4, $a0, $s1
	ld.d	$a2, $s0, 8
	ori	$a3, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	addi.d	$a1, $s3, 1
	st.w	$a1, $fp, 0
	b	.LBB15_6
.LBB15_5:
	move	$a0, $zero
.LBB15_6:
	ld.d	$s8, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 168                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 176                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 184                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 192
	ret
.LBB15_7:
	addi.d	$a0, $sp, 80
	ld.d	$a1, $s4, 136
	ld.d	$s4, $s4, 128
	st.d	$a0, $sp, 64
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 32
	bltu	$a1, $a2, .LBB15_9
# %bb.8:                                # %.noexc.i
	addi.d	$a0, $sp, 64
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 80
.LBB15_9:                               # %._crit_edge.i.i
	beq	$a1, $s6, .LBB15_13
# %bb.10:                               # %._crit_edge.i.i
	bnez	$a1, .LBB15_12
# %bb.11:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB15_13
.LBB15_12:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB15_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a5, $sp, 32
	ld.d	$a0, $s2, 0
	st.d	$a5, $sp, 72
	ldx.bu	$s4, $a0, $s1
	ori	$a0, $zero, 34
	bne	$s4, $a0, .LBB15_17
# %bb.14:
.Ltmp69:
	pcalau12i	$a0, %pc_hi20(.L.str.3)
	addi.d	$a3, $a0, %pc_lo12(.L.str.3)
	addi.d	$a0, $sp, 64
	ori	$a4, $zero, 1
	move	$a1, $zero
	move	$a2, $a5
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp70:
# %bb.15:                               # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit_crit_edge
	ld.d	$a0, $s2, 0
	ldx.bu	$a0, $a0, $s1
	ld.d	$a5, $sp, 72
	ori	$a1, $zero, 39
	beq	$a0, $a1, .LBB15_18
.LBB15_16:
	addi.d	$a0, $s4, -34
	sltui	$a0, $a0, 1
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	b	.LBB15_20
.LBB15_17:
	move	$a0, $s4
	ori	$a1, $zero, 39
	bne	$a0, $a1, .LBB15_16
.LBB15_18:
.Ltmp71:
	pcalau12i	$a0, %pc_hi20(.L.str.4)
	addi.d	$a3, $a0, %pc_lo12(.L.str.4)
	addi.d	$a0, $sp, 64
	ori	$a4, $zero, 1
	move	$a1, $zero
	move	$a2, $a5
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp72:
# %bb.19:                               # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit83_crit_edge
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	ld.d	$a5, $sp, 72
.LBB15_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit83
	slli.d	$a0, $s3, 32
	ori	$a1, $zero, 0
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	ori	$s8, $zero, 0
	ld.d	$a1, $sp, 64
	lu32i.d	$s8, 1
	add.d	$a0, $a0, $s8
	srai.d	$a2, $a0, 32
	move	$a0, $s2
	move	$a3, $a5
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm)
	jirl	$ra, $ra, 0
	addi.w	$a1, $a0, 0
	beq	$a1, $s6, .LBB15_41
# %bb.21:                               # %.lr.ph104.preheader
	addi.d	$a1, $s3, 1
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	lu32i.d	$a1, -1
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	ori	$s5, $zero, 3
	lu32i.d	$s5, 3
	ori	$s4, $zero, 46
	ori	$s7, $zero, 10
	b	.LBB15_23
.LBB15_22:                              # %.critedge.loopexit
                                        #   in Loop: Header=BB15_23 Depth=1
	ld.d	$a1, $sp, 64
	ld.d	$a3, $sp, 72
	add.d	$a0, $a2, $s8
	srai.d	$a2, $a0, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm)
	jirl	$ra, $ra, 0
	addi.w	$a1, $a0, 0
	beq	$a1, $s6, .LBB15_41
.LBB15_23:                              # %.lr.ph104
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_30 Depth 2
	ld.d	$a1, $s2, 0
	addi.w	$a2, $a0, 0
	ldx.bu	$a2, $a1, $a2
	ori	$a3, $zero, 45
	beq	$a2, $a3, .LBB15_25
# %bb.24:                               # %.lr.ph104
                                        #   in Loop: Header=BB15_23 Depth=1
	ori	$a3, $zero, 43
	bne	$a2, $a3, .LBB15_32
.LBB15_25:                              #   in Loop: Header=BB15_23 Depth=1
	slli.d	$a2, $a0, 32
	ld.d	$a3, $sp, 24                    # 8-byte Folded Reload
	add.d	$a3, $a2, $a3
	srai.d	$a3, $a3, 32
	ldx.bu	$a3, $a1, $a3
	addi.d	$a3, $a3, -68
	ori	$a4, $zero, 33
	bltu	$a4, $a3, .LBB15_32
# %bb.26:                               #   in Loop: Header=BB15_23 Depth=1
	ori	$a4, $zero, 1
	sll.d	$a3, $a4, $a3
	and	$a3, $a3, $s5
	beqz	$a3, .LBB15_32
# %bb.27:                               #   in Loop: Header=BB15_23 Depth=1
	addi.w	$a3, $a0, -2
	blt	$a3, $s1, .LBB15_22
# %bb.28:                               # %.lr.ph.preheader
                                        #   in Loop: Header=BB15_23 Depth=1
	add.d	$a1, $a1, $s1
	addi.w	$a3, $a0, 0
	ld.d	$a4, $sp, 8                     # 8-byte Folded Reload
	b	.LBB15_30
	.p2align	4, , 16
.LBB15_29:                              #   in Loop: Header=BB15_30 Depth=2
	addi.w	$a4, $a4, 1
	addi.d	$a1, $a1, 1
	beq	$a3, $a4, .LBB15_22
.LBB15_30:                              # %.lr.ph
                                        #   Parent Loop BB15_23 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.b	$a5, $a1, 0
	beq	$a5, $s4, .LBB15_29
# %bb.31:                               # %.lr.ph
                                        #   in Loop: Header=BB15_30 Depth=2
	addi.d	$a5, $a5, -48
	bltu	$a5, $s7, .LBB15_29
.LBB15_32:                              # %.critedge.thread
	ld.d	$a3, $s2, 8
	ld.d	$a4, $sp, 16                    # 8-byte Folded Reload
	beqz	$a4, .LBB15_34
.LBB15_33:
	addi.w	$a1, $a3, -1
	addi.w	$a0, $a0, 0
	slt	$a2, $a0, $a1
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
.LBB15_34:
	bltu	$a3, $s1, .LBB15_61
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i.i
	add.d	$s4, $a0, $a4
	sub.w	$a0, $s4, $s3
	addi.d	$s3, $sp, 48
	st.d	$s3, $sp, 32
	ld.d	$s5, $s2, 0
	sub.d	$a1, $a3, $s1
	sltu	$a2, $a0, $a1
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$s2, $a0, $a1
	ori	$a1, $zero, 16
	st.d	$s2, $sp, 96
	move	$a0, $s3
	bltu	$s2, $a1, .LBB15_38
# %bb.36:                               # %.noexc10.i.i
.Ltmp74:
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 96
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp75:
# %bb.37:                               # %.noexc84
	ld.d	$a1, $sp, 96
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB15_38:                              # %._crit_edge.i.i.i
	beqz	$s2, .LBB15_43
# %bb.39:                               # %._crit_edge.i.i.i
	ori	$a2, $zero, 1
	add.d	$a1, $s5, $s1
	bne	$s2, $a2, .LBB15_42
# %bb.40:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB15_43
.LBB15_41:                              # %.critedge._crit_edge
	ld.d	$a0, $s2, 8
	ld.d	$a3, $s2, 8
	ld.d	$a4, $sp, 16                    # 8-byte Folded Reload
	bnez	$a4, .LBB15_33
	b	.LBB15_34
.LBB15_42:
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB15_43:
	ld.d	$a0, $sp, 96
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 40
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $s0, 0
	addi.d	$a2, $s0, 16
	beq	$a0, $a2, .LBB15_51
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 32
	addi.d	$s1, $sp, 80
	beq	$a1, $s3, .LBB15_54
# %bb.45:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a2, $a2, 0
	vld	$vr0, $sp, 40
	st.d	$a1, $s0, 0
	vst	$vr0, $s0, 8
	beqz	$a0, .LBB15_53
.LBB15_46:
	st.d	$a0, $sp, 32
	st.d	$a2, $sp, 48
	st.d	$zero, $sp, 40
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 32
	beq	$a0, $s3, .LBB15_48
.LBB15_47:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB15_48:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 64
	st.w	$s4, $fp, 0
	beq	$a0, $s1, .LBB15_50
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i85
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB15_50:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit87
	ori	$a0, $zero, 1
	b	.LBB15_6
.LBB15_51:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 32
	addi.d	$s1, $sp, 80
	beq	$a1, $s3, .LBB15_54
# %bb.52:
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 40
	st.d	$a1, $s0, 0
	vst	$vr0, $s0, 8
	bnez	$a0, .LBB15_46
.LBB15_53:
	st.d	$s3, $sp, 32
	move	$a0, $s3
	st.d	$zero, $sp, 40
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 32
	bne	$a0, $s3, .LBB15_47
	b	.LBB15_48
.LBB15_54:
	addi.d	$a2, $sp, 32
	beq	$a2, $s0, .LBB15_60
# %bb.55:
	ld.d	$a2, $sp, 40
	beqz	$a2, .LBB15_59
# %bb.56:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB15_58
# %bb.57:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB15_59
.LBB15_58:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB15_59:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 40
	ld.d	$a1, $s0, 0
	st.d	$a0, $s0, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 32
	st.d	$zero, $sp, 40
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 32
	bne	$a0, $s3, .LBB15_47
	b	.LBB15_48
.LBB15_60:
	move	$a0, $a1
	st.d	$zero, $sp, 40
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 32
	bne	$a0, $s3, .LBB15_47
	b	.LBB15_48
.LBB15_61:
.Ltmp76:
	pcalau12i	$a0, %pc_hi20(.L.str.222)
	addi.d	$a0, $a0, %pc_lo12(.L.str.222)
	pcalau12i	$a1, %pc_hi20(.L.str.221)
	addi.d	$a1, $a1, %pc_lo12(.L.str.221)
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZSt24__throw_out_of_range_fmtPKcz)
	jirl	$ra, $ra, 0
.Ltmp77:
# %bb.62:                               # %.noexc
.LBB15_63:
.Ltmp73:
	b	.LBB15_65
.LBB15_64:
.Ltmp78:
.LBB15_65:
	move	$fp, $a0
	ld.d	$a0, $sp, 64
	addi.d	$a1, $sp, 80
	beq	$a0, $a1, .LBB15_67
# %bb.66:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i88
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB15_67:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end15:
	.size	_ZN2PP3Cmd17extract_next_wordERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_RNS2_18basic_stringstreamIcS5_S6_EES1_, .Lfunc_end15-_ZN2PP3Cmd17extract_next_wordERiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_RNS2_18basic_stringstreamIcS5_S6_EES1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table15:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5    # >> Call Site 1 <<
	.uleb128 .Ltmp69-.Lfunc_begin5          #   Call between .Lfunc_begin5 and .Ltmp69
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp69-.Lfunc_begin5          # >> Call Site 2 <<
	.uleb128 .Ltmp72-.Ltmp69                #   Call between .Ltmp69 and .Ltmp72
	.uleb128 .Ltmp73-.Lfunc_begin5          #     jumps to .Ltmp73
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp72-.Lfunc_begin5          # >> Call Site 3 <<
	.uleb128 .Ltmp74-.Ltmp72                #   Call between .Ltmp72 and .Ltmp74
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp74-.Lfunc_begin5          # >> Call Site 4 <<
	.uleb128 .Ltmp75-.Ltmp74                #   Call between .Ltmp74 and .Ltmp75
	.uleb128 .Ltmp78-.Lfunc_begin5          #     jumps to .Ltmp78
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp75-.Lfunc_begin5          # >> Call Site 5 <<
	.uleb128 .Ltmp76-.Ltmp75                #   Call between .Ltmp75 and .Ltmp76
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp76-.Lfunc_begin5          # >> Call Site 6 <<
	.uleb128 .Ltmp77-.Ltmp76                #   Call between .Ltmp76 and .Ltmp77
	.uleb128 .Ltmp78-.Lfunc_begin5          #     jumps to .Ltmp78
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp77-.Lfunc_begin5          # >> Call Site 7 <<
	.uleb128 .Lfunc_end15-.Ltmp77           #   Call between .Ltmp77 and .Lfunc_end15
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd15reset_name_typeEv   # -- Begin function _ZN2PP3Cmd15reset_name_typeEv
	.p2align	5
	.type	_ZN2PP3Cmd15reset_name_typeEv,@function
_ZN2PP3Cmd15reset_name_typeEv:          # @_ZN2PP3Cmd15reset_name_typeEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$fp, $a0
	ld.d	$a1, $a0, 232
	ld.d	$a0, $a0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 32
	addi.d	$s1, $fp, 240
	addi.d	$s0, $fp, 272
	beqz	$a2, .LBB16_4
# %bb.1:
	ld.d	$a2, $fp, 184
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB16_5
# %bb.2:
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB16_7
# %bb.3:
	srli.d	$a1, $a2, 2
	b	.LBB16_6
.LBB16_4:
	ld.d	$a2, $fp, 248
	pcalau12i	$a0, %pc_hi20(.L.str.5)
	addi.d	$s2, $a0, %pc_lo12(.L.str.5)
	ori	$a4, $zero, 1
	move	$a0, $s1
	move	$a1, $zero
	move	$a3, $s2
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 280
	ori	$a4, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	move	$a3, $s2
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	pcaddu18i	$t8, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jr	$t8
.LBB16_5:
	srai.d	$a1, $a3, 9
.LBB16_6:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB16_7:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$s3, $sp, 24
	ld.d	$a2, $a1, 8
	ld.d	$s2, $a1, 0
	st.d	$s3, $sp, 8
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 40
	move	$a0, $s3
	bltu	$a2, $a1, .LBB16_9
# %bb.8:                                # %.noexc.i.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a2, $sp, 24
.LBB16_9:                               # %._crit_edge.i.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB16_13
# %bb.10:                               # %._crit_edge.i.i.i
	bnez	$a2, .LBB16_12
# %bb.11:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB16_13
.LBB16_12:
	addi.d	$a2, $a2, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB16_13:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a2, $sp, 40
	ld.d	$a0, $fp, 240
	addi.d	$a1, $fp, 256
	st.d	$a2, $sp, 16
	beq	$a0, $a1, .LBB16_17
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 8
	beq	$a1, $s3, .LBB16_20
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i
	ld.d	$a4, $sp, 24
	ld.d	$a3, $fp, 256
	st.d	$a1, $fp, 240
	st.d	$a2, $fp, 248
	st.d	$a4, $fp, 256
	beqz	$a0, .LBB16_19
# %bb.16:
	st.d	$a0, $sp, 8
	st.d	$a3, $sp, 24
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s3, .LBB16_26
	b	.LBB16_27
.LBB16_17:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 8
	beq	$a1, $s3, .LBB16_20
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i.thread
	ld.d	$a0, $sp, 24
	st.d	$a1, $fp, 240
	st.d	$a2, $fp, 248
	st.d	$a0, $fp, 256
.LBB16_19:
	st.d	$s3, $sp, 8
	move	$a0, $s3
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s3, .LBB16_26
	b	.LBB16_27
.LBB16_20:
	addi.d	$a3, $sp, 8
	beq	$a3, $s1, .LBB16_75
# %bb.21:
	beqz	$a2, .LBB16_25
# %bb.22:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB16_24
# %bb.23:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB16_25
.LBB16_24:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB16_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 16
	ld.d	$a1, $fp, 240
	st.d	$a0, $fp, 248
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 8
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	beq	$a0, $s3, .LBB16_27
.LBB16_26:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB16_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcalau12i	$a0, %pc_hi20(_ZN2PPL14case_sensitiveE)
	ld.bu	$a0, $a0, %pc_lo12(_ZN2PPL14case_sensitiveE)
	bnez	$a0, .LBB16_31
# %bb.28:
	ld.d	$s2, $fp, 248
	beqz	$s2, .LBB16_31
# %bb.29:                               # %.lr.ph.i.preheader
	ld.d	$s3, $fp, 240
	.p2align	4, , 16
.LBB16_30:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	ld.b	$a0, $s3, 0
	pcaddu18i	$ra, %call36(tolower)
	jirl	$ra, $ra, 0
	st.b	$a0, $s3, 0
	addi.d	$s2, $s2, -1
	addi.d	$s3, $s3, 1
	bnez	$s2, .LBB16_30
.LBB16_31:                              # %_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_PDoFiiEET0_T_SD_SC_T1_.exit
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.6)
	addi.d	$a3, $a0, %pc_lo12(.L.str.6)
	ori	$a4, $zero, 7
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB16_45
# %bb.32:
	ori	$a3, $zero, 4
	bgeu	$a1, $a3, .LBB16_46
# %bb.33:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit6
	ld.w	$a0, $a2, 32
	ori	$a1, $zero, 13
	beq	$a0, $a1, .LBB16_48
.LBB16_34:
	ld.d	$a0, $fp, 248
	ori	$s2, $zero, 21
	beq	$a0, $s2, .LBB16_49
.LBB16_35:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread32
	beq	$a0, $s2, .LBB16_51
.LBB16_36:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit8.thread33
	ori	$a1, $zero, 20
	beq	$a0, $a1, .LBB16_53
.LBB16_37:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit10.thread34
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB16_55
.LBB16_38:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit12.thread35
	ori	$a1, $zero, 6
	beq	$a0, $a1, .LBB16_59
.LBB16_39:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit14.thread36
	ori	$a1, $zero, 5
	beq	$a0, $a1, .LBB16_63
.LBB16_40:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit16.thread37
	ori	$a1, $zero, 2
	beq	$a0, $a1, .LBB16_56
.LBB16_41:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit18.thread38
	ori	$a1, $zero, 6
	beq	$a0, $a1, .LBB16_60
.LBB16_42:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit20.thread39
	ori	$a1, $zero, 5
	beq	$a0, $a1, .LBB16_64
.LBB16_43:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit22.thread40
	ori	$s2, $zero, 4
	beq	$a0, $s2, .LBB16_66
.LBB16_44:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit24.thread41
	beq	$a0, $s2, .LBB16_68
	b	.LBB16_70
.LBB16_45:
	srai.d	$a2, $a3, 9
	b	.LBB16_47
.LBB16_46:
	srli.d	$a2, $a1, 2
.LBB16_47:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
	ld.w	$a0, $a2, 32
	ori	$a1, $zero, 13
	bne	$a0, $a1, .LBB16_34
.LBB16_48:
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.7)
	addi.d	$a3, $a0, %pc_lo12(.L.str.7)
	ori	$a4, $zero, 10
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	ori	$s2, $zero, 21
	bne	$a0, $s2, .LBB16_35
.LBB16_49:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	ld.d	$a0, $s1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.8)
	addi.d	$a1, $a1, %pc_lo12(.L.str.8)
	ori	$a2, $zero, 21
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB16_51
# %bb.50:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.9)
	addi.d	$a3, $a0, %pc_lo12(.L.str.9)
	ori	$a4, $zero, 5
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	bne	$a0, $s2, .LBB16_36
.LBB16_51:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit8
	ld.d	$a0, $s1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.10)
	addi.d	$a1, $a1, %pc_lo12(.L.str.10)
	ori	$a2, $zero, 21
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB16_73
# %bb.52:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit8.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.9)
	addi.d	$a3, $a0, %pc_lo12(.L.str.9)
	ori	$a4, $zero, 5
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	ori	$a1, $zero, 20
	bne	$a0, $a1, .LBB16_37
.LBB16_53:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit10
	ld.d	$a0, $s1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.11)
	addi.d	$a1, $a1, %pc_lo12(.L.str.11)
	ori	$a2, $zero, 20
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB16_73
# %bb.54:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit10.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.9)
	addi.d	$a3, $a0, %pc_lo12(.L.str.9)
	ori	$a4, $zero, 5
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	ori	$a1, $zero, 2
	bne	$a0, $a1, .LBB16_38
.LBB16_55:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit12
	ld.d	$a0, $s1, 0
	ld.hu	$a0, $a0, 0
	lu12i.w	$a1, 6
	ori	$a1, $a1, 1641
	beq	$a0, $a1, .LBB16_58
.LBB16_56:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit18
	ld.d	$a0, $s1, 0
	ld.hu	$a0, $a0, 0
	lu12i.w	$a1, 6
	ori	$a1, $a1, 3940
	bne	$a0, $a1, .LBB16_73
# %bb.57:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit18.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a3, $a0, %pc_lo12(.L.str.13)
	ori	$a4, $zero, 12
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	ori	$a1, $zero, 6
	bne	$a0, $a1, .LBB16_42
	b	.LBB16_60
.LBB16_58:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit12.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a3, $a0, %pc_lo12(.L.str.13)
	ori	$a4, $zero, 12
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	ori	$a1, $zero, 6
	bne	$a0, $a1, .LBB16_39
.LBB16_59:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit14
	ld.d	$a0, $s1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.14)
	addi.d	$a1, $a1, %pc_lo12(.L.str.14)
	ori	$a2, $zero, 6
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB16_62
.LBB16_60:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit20
	ld.d	$a0, $s1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.17)
	addi.d	$a1, $a1, %pc_lo12(.L.str.17)
	ori	$a2, $zero, 6
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB16_73
# %bb.61:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit20.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a3, $a0, %pc_lo12(.L.str.13)
	ori	$a4, $zero, 12
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	ori	$a1, $zero, 5
	bne	$a0, $a1, .LBB16_43
	b	.LBB16_64
.LBB16_62:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit14.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a3, $a0, %pc_lo12(.L.str.13)
	ori	$a4, $zero, 12
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	ori	$a1, $zero, 5
	bne	$a0, $a1, .LBB16_40
.LBB16_63:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit16
	ld.d	$a0, $s1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.15)
	addi.d	$a1, $a1, %pc_lo12(.L.str.15)
	ori	$a2, $zero, 5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB16_74
.LBB16_64:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit22
	ld.d	$a0, $s1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.18)
	addi.d	$a1, $a1, %pc_lo12(.L.str.18)
	ori	$a2, $zero, 5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB16_73
# %bb.65:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit22.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a3, $a0, %pc_lo12(.L.str.13)
	ori	$a4, $zero, 12
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	ori	$s2, $zero, 4
	bne	$a0, $s2, .LBB16_44
.LBB16_66:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit24
	ld.d	$a0, $s1, 0
	ld.w	$a0, $a0, 0
	lu12i.w	$a1, 460535
	ori	$a1, $a1, 1139
	bne	$a0, $a1, .LBB16_68
# %bb.67:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit24.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a3, $a0, %pc_lo12(.L.str.13)
	ori	$a4, $zero, 12
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	bne	$a0, $s2, .LBB16_70
.LBB16_68:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit26
	ld.d	$a0, $s1, 0
	ld.w	$a0, $a0, 0
	lu12i.w	$a1, 452182
	ori	$a1, $a1, 2167
	bne	$a0, $a1, .LBB16_73
# %bb.69:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit26.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a3, $a0, %pc_lo12(.L.str.13)
	ori	$a4, $zero, 12
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
.LBB16_70:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit26.thread42
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB16_73
# %bb.71:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit28
	ld.d	$a0, $s1, 0
	pcalau12i	$a1, %pc_hi20(.L.str.21)
	addi.d	$a1, $a1, %pc_lo12(.L.str.21)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB16_73
# %bb.72:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit28.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a3, $a0, %pc_lo12(.L.str.13)
	ori	$a4, $zero, 12
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.LBB16_73:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit28.thread43
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB16_74:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit16.thread
	ld.d	$a2, $fp, 280
	pcalau12i	$a0, %pc_hi20(.L.str.13)
	addi.d	$a3, $a0, %pc_lo12(.L.str.13)
	ori	$a4, $zero, 12
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 248
	ori	$a1, $zero, 2
	bne	$a0, $a1, .LBB16_41
	b	.LBB16_56
.LBB16_75:
	move	$a0, $a1
	st.d	$zero, $sp, 16
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 8
	bne	$a0, $s3, .LBB16_26
	b	.LBB16_27
.Lfunc_end16:
	.size	_ZN2PP3Cmd15reset_name_typeEv, .Lfunc_end16-_ZN2PP3Cmd15reset_name_typeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP4Word10get_stringB5cxx11Ev,"axG",@progbits,_ZN2PP4Word10get_stringB5cxx11Ev,comdat
	.weak	_ZN2PP4Word10get_stringB5cxx11Ev # -- Begin function _ZN2PP4Word10get_stringB5cxx11Ev
	.p2align	5
	.type	_ZN2PP4Word10get_stringB5cxx11Ev,@function
_ZN2PP4Word10get_stringB5cxx11Ev:       # @_ZN2PP4Word10get_stringB5cxx11Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$a0, $a0, 16
	ld.d	$a2, $a1, 8
	ld.d	$s0, $a1, 0
	st.d	$a0, $fp, 0
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 0
	bltu	$a2, $a1, .LBB17_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 0
	st.d	$a0, $fp, 0
	st.d	$a2, $fp, 16
.LBB17_2:                               # %._crit_edge.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB17_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a2, .LBB17_5
# %bb.4:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB17_6
.LBB17_5:
	addi.d	$a2, $a2, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB17_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 8
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end17:
	.size	_ZN2PP4Word10get_stringB5cxx11Ev, .Lfunc_end17-_ZN2PP4Word10get_stringB5cxx11Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,"axG",@progbits,_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,comdat
	.weak	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_ # -- Begin function _ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.p2align	5
	.type	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,@function
_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_: # @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$fp, $a0, 8
	move	$s0, $a1
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	bne	$fp, $a0, .LBB18_3
# %bb.1:
	beqz	$fp, .LBB18_4
# %bb.2:
	ld.d	$a0, $s1, 0
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$a0, $a0, 1
	b	.LBB18_5
.LBB18_3:
	move	$a0, $zero
	b	.LBB18_5
.LBB18_4:
	ori	$a0, $zero, 1
.LBB18_5:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end18:
	.size	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_, .Lfunc_end18-_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd16get_cmd_filenameERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd16get_cmd_filenameERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd16get_cmd_filenameERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd16get_cmd_filenameERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd16get_cmd_filenameERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception6
# %bb.0:
	addi.d	$sp, $sp, -624
	.cfi_def_cfa_offset 624
	st.d	$ra, $sp, 616                   # 8-byte Folded Spill
	st.d	$fp, $sp, 608                   # 8-byte Folded Spill
	st.d	$s0, $sp, 600                   # 8-byte Folded Spill
	st.d	$s1, $sp, 592                   # 8-byte Folded Spill
	st.d	$s2, $sp, 584                   # 8-byte Folded Spill
	st.d	$s3, $sp, 576                   # 8-byte Folded Spill
	st.d	$s4, $sp, 568                   # 8-byte Folded Spill
	st.d	$s5, $sp, 560                   # 8-byte Folded Spill
	st.d	$s6, $sp, 552                   # 8-byte Folded Spill
	st.d	$s7, $sp, 544                   # 8-byte Folded Spill
	st.d	$s8, $sp, 536                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s6, $a0, 16
	addi.d	$s1, $a2, 16
	ori	$s8, $zero, 1
	ori	$s7, $zero, 128
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ori	$s2, $zero, 0
	lu32i.d	$s2, -1
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$s3, $a0, %pc_lo12(.L.str.22)
	b	.LBB19_2
	.p2align	4, , 16
.LBB19_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit27
                                        #   in Loop: Header=BB19_2 Depth=1
	addi.d	$s8, $s8, 1
	addi.d	$s7, $s7, 128
.LBB19_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s8, $a2, .LBB19_38
# %bb.3:                                #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s8, $a2
	bltz	$a2, .LBB19_6
# %bb.4:                                #   in Loop: Header=BB19_2 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB19_7
# %bb.5:                                #   in Loop: Header=BB19_2 Depth=1
	add.d	$a0, $a1, $s7
	b	.LBB19_9
	.p2align	4, , 16
.LBB19_6:                               #   in Loop: Header=BB19_2 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB19_8
	.p2align	4, , 16
.LBB19_7:                               #   in Loop: Header=BB19_2 Depth=1
	srli.d	$a1, $a2, 2
.LBB19_8:                               #   in Loop: Header=BB19_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB19_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB19_2 Depth=1
	st.d	$s6, $fp, 0
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	st.d	$a1, $sp, 16
	move	$a0, $s6
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB19_11
# %bb.10:                               # %.noexc.i.i
                                        #   in Loop: Header=BB19_2 Depth=1
	addi.d	$a1, $sp, 16
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB19_11:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
	beq	$a1, $a2, .LBB19_15
# %bb.12:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB19_2 Depth=1
	bnez	$a1, .LBB19_14
# %bb.13:                               #   in Loop: Header=BB19_2 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB19_15
	.p2align	4, , 16
.LBB19_14:                              #   in Loop: Header=BB19_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB19_15:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a0, $sp, 16
	st.d	$a0, $fp, 8
	ld.d	$a1, $fp, 0
	slli.d	$a2, $a0, 32
	add.d	$a2, $a2, $s2
	srai.d	$a2, $a2, 32
	ldx.bu	$a2, $a1, $a2
	ori	$a3, $zero, 39
	beq	$a2, $a3, .LBB19_17
# %bb.16:                               # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB19_2 Depth=1
	ori	$a3, $zero, 34
	bne	$a2, $a3, .LBB19_19
.LBB19_17:                              #   in Loop: Header=BB19_2 Depth=1
	addi.d	$a1, $a0, -1
.Ltmp79:
	ori	$a2, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm)
	jirl	$ra, $ra, 0
.Ltmp80:
# %bb.18:                               # %._crit_edge
                                        #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a1, $fp, 0
.LBB19_19:                              #   in Loop: Header=BB19_2 Depth=1
	ld.bu	$a0, $a1, 0
	ori	$a1, $zero, 39
	beq	$a0, $a1, .LBB19_21
# %bb.20:                               #   in Loop: Header=BB19_2 Depth=1
	ori	$a1, $zero, 34
	bne	$a0, $a1, .LBB19_22
.LBB19_21:                              #   in Loop: Header=BB19_2 Depth=1
.Ltmp82:
	ori	$a2, $zero, 1
	move	$a0, $fp
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm)
	jirl	$ra, $ra, 0
.Ltmp83:
.LBB19_22:                              #   in Loop: Header=BB19_2 Depth=1
.Ltmp85:
	ori	$a2, $zero, 4
	move	$a0, $s1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp86:
# %bb.23:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a1, $fp, 0
	ld.d	$a2, $fp, 8
.Ltmp87:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp88:
# %bb.24:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB19_2 Depth=1
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB19_40
# %bb.25:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB19_2 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB19_27
# %bb.26:                               #   in Loop: Header=BB19_2 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB19_29
	.p2align	4, , 16
.LBB19_27:                              #   in Loop: Header=BB19_2 Depth=1
.Ltmp89:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp90:
# %bb.28:                               # %.noexc30
                                        #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp91:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp92:
.LBB19_29:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB19_2 Depth=1
.Ltmp93:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp94:
# %bb.30:                               # %.noexc32
                                        #   in Loop: Header=BB19_2 Depth=1
.Ltmp95:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp96:
# %bb.31:                               # %_ZNSolsEPFRSoS_E.exit
                                        #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a1, $fp, 0
.Ltmp98:
	addi.d	$a0, $sp, 16
	ori	$a2, $zero, 8
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode)
	jirl	$ra, $ra, 0
.Ltmp99:
# %bb.32:                               #   in Loop: Header=BB19_2 Depth=1
.Ltmp101:
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv)
	jirl	$ra, $ra, 0
.Ltmp102:
# %bb.33:                               # %.noexc
                                        #   in Loop: Header=BB19_2 Depth=1
	bnez	$a0, .LBB19_35
# %bb.34:                               #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a0, $sp, 16
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 16
	add.d	$a0, $a1, $a0
	ld.w	$a1, $a0, 32
	ori	$a1, $a1, 4
.Ltmp103:
	pcaddu18i	$ra, %call36(_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate)
	jirl	$ra, $ra, 0
.Ltmp104:
.LBB19_35:                              # %_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv.exit
                                        #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a0, $sp, 16
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 48
	ldx.wu	$a0, $a1, $a0
	andi	$s4, $a0, 5
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	beqz	$s4, .LBB19_39
# %bb.36:                               #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a0, $fp, 0
	beq	$a0, $s6, .LBB19_1
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i25
                                        #   in Loop: Header=BB19_2 Depth=1
	ld.d	$a1, $s6, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB19_1
.LBB19_38:                              # %.critedge.thread
	st.d	$s6, $fp, 0
	st.d	$zero, $fp, 8
	st.b	$zero, $fp, 16
.LBB19_39:                              # %.critedge
	ld.d	$s8, $sp, 536                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 544                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 552                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 560                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 568                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 576                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 584                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 592                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 600                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 608                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 616                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 624
	ret
.LBB19_40:
.Ltmp106:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp107:
# %bb.41:                               # %.noexc29
.LBB19_42:
.Ltmp81:
	b	.LBB19_48
.LBB19_43:
.Ltmp84:
	b	.LBB19_48
.LBB19_44:
.Ltmp100:
	b	.LBB19_48
.LBB19_45:                              # %.loopexit.split-lp
.Ltmp108:
	b	.LBB19_48
.LBB19_46:
.Ltmp105:
	move	$s0, $a0
	addi.d	$a0, $sp, 16
	pcaddu18i	$ra, %call36(_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev)
	jirl	$ra, $ra, 0
	b	.LBB19_49
.LBB19_47:                              # %.loopexit
.Ltmp97:
.LBB19_48:
	move	$s0, $a0
.LBB19_49:
	ld.d	$a0, $fp, 0
	beq	$a0, $s6, .LBB19_51
# %bb.50:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $s6, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB19_51:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end19:
	.size	_ZN2PP3Cmd16get_cmd_filenameERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end19-_ZN2PP3Cmd16get_cmd_filenameERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table19:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin6-.Lfunc_begin6    # >> Call Site 1 <<
	.uleb128 .Ltmp79-.Lfunc_begin6          #   Call between .Lfunc_begin6 and .Ltmp79
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp79-.Lfunc_begin6          # >> Call Site 2 <<
	.uleb128 .Ltmp80-.Ltmp79                #   Call between .Ltmp79 and .Ltmp80
	.uleb128 .Ltmp81-.Lfunc_begin6          #     jumps to .Ltmp81
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp82-.Lfunc_begin6          # >> Call Site 3 <<
	.uleb128 .Ltmp83-.Ltmp82                #   Call between .Ltmp82 and .Ltmp83
	.uleb128 .Ltmp84-.Lfunc_begin6          #     jumps to .Ltmp84
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp85-.Lfunc_begin6          # >> Call Site 4 <<
	.uleb128 .Ltmp96-.Ltmp85                #   Call between .Ltmp85 and .Ltmp96
	.uleb128 .Ltmp97-.Lfunc_begin6          #     jumps to .Ltmp97
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp98-.Lfunc_begin6          # >> Call Site 5 <<
	.uleb128 .Ltmp99-.Ltmp98                #   Call between .Ltmp98 and .Ltmp99
	.uleb128 .Ltmp100-.Lfunc_begin6         #     jumps to .Ltmp100
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp101-.Lfunc_begin6         # >> Call Site 6 <<
	.uleb128 .Ltmp104-.Ltmp101              #   Call between .Ltmp101 and .Ltmp104
	.uleb128 .Ltmp105-.Lfunc_begin6         #     jumps to .Ltmp105
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp104-.Lfunc_begin6         # >> Call Site 7 <<
	.uleb128 .Ltmp106-.Ltmp104              #   Call between .Ltmp104 and .Ltmp106
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp106-.Lfunc_begin6         # >> Call Site 8 <<
	.uleb128 .Ltmp107-.Ltmp106              #   Call between .Ltmp106 and .Ltmp107
	.uleb128 .Ltmp108-.Lfunc_begin6         #     jumps to .Ltmp108
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp107-.Lfunc_begin6         # >> Call Site 9 <<
	.uleb128 .Lfunc_end19-.Ltmp107          #   Call between .Ltmp107 and .Lfunc_end19
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end6:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd22handle_cmd_unary_minusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd22handle_cmd_unary_minusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd22handle_cmd_unary_minusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd22handle_cmd_unary_minusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd22handle_cmd_unary_minusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception7
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	st.d	$a1, $sp, 0                     # 8-byte Folded Spill
	move	$s0, $a0
	move	$s1, $zero
	addi.d	$s5, $sp, 96
	addi.d	$s6, $sp, 32
	ori	$s7, $zero, 45
	ori	$s8, $zero, 1
	addi.w	$s4, $zero, -1
	ori	$fp, $zero, 4
	ori	$s2, $zero, 2
	.p2align	4, , 16
.LBB20_1:                               # %._crit_edge.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s0, 208
	ld.d	$a3, $s0, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s0, 192
	ld.d	$a4, $s0, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	st.d	$s5, $sp, 80
	st.h	$s7, $sp, 96
	st.d	$s8, $sp, 88
	addi.w	$a2, $a0, -1
.Ltmp109:
	addi.d	$a3, $sp, 80
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp110:
# %bb.2:                                #   in Loop: Header=BB20_1 Depth=1
	move	$s3, $a0
	ld.d	$a0, $sp, 80
	beq	$a0, $s5, .LBB20_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB20_1 Depth=1
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB20_1 Depth=1
	beq	$s3, $s4, .LBB20_47
# %bb.5:                                #   in Loop: Header=BB20_1 Depth=1
	ld.d	$a0, $s0, 176
	ld.d	$a2, $s0, 184
	addi.w	$s1, $s3, 1
	ld.d	$a1, $s0, 200
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s1
	bltz	$a2, .LBB20_8
# %bb.6:                                #   in Loop: Header=BB20_1 Depth=1
	bgeu	$a2, $fp, .LBB20_9
# %bb.7:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
                                        #   in Loop: Header=BB20_1 Depth=1
	slli.d	$a1, $s1, 7
	add.d	$a1, $a0, $a1
	ld.wu	$a1, $a1, 32
	bstrpick.d	$a1, $a1, 31, 1
	slli.w	$a1, $a1, 1
	beq	$a1, $s2, .LBB20_11
	b	.LBB20_16
	.p2align	4, , 16
.LBB20_8:                               #   in Loop: Header=BB20_1 Depth=1
	srai.d	$a3, $a2, 2
	b	.LBB20_10
	.p2align	4, , 16
.LBB20_9:                               #   in Loop: Header=BB20_1 Depth=1
	srli.d	$a3, $a2, 2
.LBB20_10:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB20_1 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a1, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	ld.wu	$a3, $a3, 32
	bstrpick.d	$a3, $a3, 31, 1
	slli.w	$a3, $a3, 1
	bne	$a3, $s2, .LBB20_14
.LBB20_11:                              # %._crit_edge.i.i41
                                        #   in Loop: Header=BB20_1 Depth=1
	st.d	$s6, $sp, 16
	st.h	$s7, $sp, 32
	st.d	$s8, $sp, 24
.Ltmp125:
	addi.d	$a2, $sp, 16
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp126:
# %bb.12:                               #   in Loop: Header=BB20_1 Depth=1
	ld.d	$a0, $sp, 16
	beq	$a0, $s6, .LBB20_1
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
                                        #   in Loop: Header=BB20_1 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB20_1
.LBB20_14:
	bltz	$a2, .LBB20_17
# %bb.15:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB20_18
.LBB20_16:                              # %.thread64
	slli.d	$a1, $s1, 7
	add.d	$a0, $a0, $a1
	b	.LBB20_20
.LBB20_17:
	srai.d	$a0, $a2, 2
	b	.LBB20_19
.LBB20_18:
	srli.d	$a0, $a2, 2
.LBB20_19:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB20_20:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit30
	ld.d	$fp, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 0                     # 8-byte Folded Reload
	move	$a1, $s2
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s2, 16
	pcalau12i	$a0, %pc_hi20(.L.str.24)
	addi.d	$a1, $a0, %pc_lo12(.L.str.24)
	ori	$a2, $zero, 57
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB20_48
# %bb.21:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB20_23
# %bb.22:
	ld.bu	$a0, $s2, 67
	b	.LBB20_24
.LBB20_23:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.LBB20_24:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.25)
	addi.d	$a1, $a0, %pc_lo12(.L.str.25)
	ori	$a2, $zero, 16
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s1
	bltz	$a1, .LBB20_27
# %bb.25:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB20_28
# %bb.26:
	slli.d	$a0, $s1, 7
	add.d	$a0, $a2, $a0
	b	.LBB20_30
.LBB20_27:
	srai.d	$a2, $a1, 2
	b	.LBB20_29
.LBB20_28:
	srli.d	$a2, $a1, 2
.LBB20_29:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB20_30:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit32
	addi.d	$s2, $sp, 64
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	st.d	$s2, $sp, 48
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $s2
	bltu	$a1, $a2, .LBB20_32
# %bb.31:                               # %.noexc.i.i
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB20_32:                              # %._crit_edge.i.i.i
	beq	$a1, $s4, .LBB20_36
# %bb.33:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB20_35
# %bb.34:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB20_36
.LBB20_35:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB20_36:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a2, $sp, 112
	ld.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
.Ltmp112:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp113:
# %bb.37:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB20_49
# %bb.38:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i52
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB20_40
# %bb.39:
	ld.bu	$a0, $s1, 67
	b	.LBB20_42
.LBB20_40:
.Ltmp114:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp115:
# %bb.41:                               # %.noexc56
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp116:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp117:
.LBB20_42:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp118:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp119:
# %bb.43:                               # %.noexc58
.Ltmp120:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp121:
# %bb.44:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 48
	beq	$a0, $s2, .LBB20_46
# %bb.45:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_46:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB20_47:                              # %.loopexit
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB20_48:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB20_49:
.Ltmp122:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp123:
# %bb.50:                               # %.noexc55
.LBB20_51:
.Ltmp124:
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	beq	$a2, $s2, .LBB20_58
# %bb.52:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	ld.d	$a0, $sp, 64
	b	.LBB20_57
.LBB20_53:
.Ltmp127:
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s6, .LBB20_58
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i48
	ld.d	$a0, $sp, 32
	b	.LBB20_57
.LBB20_55:
.Ltmp111:
	ld.d	$a2, $sp, 80
	move	$fp, $a0
	beq	$a2, $s5, .LBB20_58
# %bb.56:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	ld.d	$a0, $sp, 96
.LBB20_57:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit28
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB20_58:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit28
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end20:
	.size	_ZN2PP3Cmd22handle_cmd_unary_minusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end20-_ZN2PP3Cmd22handle_cmd_unary_minusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table20:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Ltmp109-.Lfunc_begin7         # >> Call Site 1 <<
	.uleb128 .Ltmp110-.Ltmp109              #   Call between .Ltmp109 and .Ltmp110
	.uleb128 .Ltmp111-.Lfunc_begin7         #     jumps to .Ltmp111
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp110-.Lfunc_begin7         # >> Call Site 2 <<
	.uleb128 .Ltmp125-.Ltmp110              #   Call between .Ltmp110 and .Ltmp125
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp125-.Lfunc_begin7         # >> Call Site 3 <<
	.uleb128 .Ltmp126-.Ltmp125              #   Call between .Ltmp125 and .Ltmp126
	.uleb128 .Ltmp127-.Lfunc_begin7         #     jumps to .Ltmp127
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp126-.Lfunc_begin7         # >> Call Site 4 <<
	.uleb128 .Ltmp112-.Ltmp126              #   Call between .Ltmp126 and .Ltmp112
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp112-.Lfunc_begin7         # >> Call Site 5 <<
	.uleb128 .Ltmp121-.Ltmp112              #   Call between .Ltmp112 and .Ltmp121
	.uleb128 .Ltmp124-.Lfunc_begin7         #     jumps to .Ltmp124
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp121-.Lfunc_begin7         # >> Call Site 6 <<
	.uleb128 .Ltmp122-.Ltmp121              #   Call between .Ltmp121 and .Ltmp122
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp122-.Lfunc_begin7         # >> Call Site 7 <<
	.uleb128 .Ltmp123-.Ltmp122              #   Call between .Ltmp122 and .Ltmp123
	.uleb128 .Ltmp124-.Lfunc_begin7         #     jumps to .Ltmp124
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp123-.Lfunc_begin7         # >> Call Site 8 <<
	.uleb128 .Lfunc_end20-.Ltmp123          #   Call between .Ltmp123 and .Lfunc_end20
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end7:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	bge	$a2, $a1, .LBB21_2
# %bb.1:
	addi.w	$s8, $zero, -1
	b	.LBB21_24
.LBB21_2:                               # %.lr.ph
	move	$s0, $a3
	move	$s8, $a1
	move	$s1, $a0
	addi.d	$s3, $sp, 16
	addi.w	$s4, $a2, 1
	slli.d	$s5, $a1, 7
	addi.w	$s6, $zero, -1
	move	$fp, $a1
	.p2align	4, , 16
.LBB21_3:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $fp, $a1
	bltz	$a1, .LBB21_6
# %bb.4:                                #   in Loop: Header=BB21_3 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB21_7
# %bb.5:                                #   in Loop: Header=BB21_3 Depth=1
	add.d	$a0, $a2, $s5
	b	.LBB21_9
	.p2align	4, , 16
.LBB21_6:                               #   in Loop: Header=BB21_3 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB21_8
	.p2align	4, , 16
.LBB21_7:                               #   in Loop: Header=BB21_3 Depth=1
	srli.d	$a2, $a1, 2
.LBB21_8:                               #   in Loop: Header=BB21_3 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB21_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB21_3 Depth=1
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$s3, $sp, 0
	st.d	$a1, $sp, 32
	move	$a0, $s3
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB21_11
# %bb.10:                               # %.noexc.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB21_11:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	beq	$a1, $s6, .LBB21_14
# %bb.12:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	bnez	$a1, .LBB21_17
# %bb.13:                               #   in Loop: Header=BB21_3 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB21_14:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB21_3 Depth=1
	ld.d	$a2, $sp, 32
	ld.d	$a0, $s0, 8
	st.d	$a2, $sp, 8
	bne	$a2, $a0, .LBB21_18
.LBB21_15:                              #   in Loop: Header=BB21_3 Depth=1
	ld.d	$s2, $sp, 0
	beqz	$a2, .LBB21_22
# %bb.16:                               #   in Loop: Header=BB21_3 Depth=1
	ld.d	$a1, $s0, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s7, $a0, 1
	bne	$s2, $s3, .LBB21_19
	b	.LBB21_20
	.p2align	4, , 16
.LBB21_17:                              #   in Loop: Header=BB21_3 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 32
	ld.d	$a0, $s0, 8
	st.d	$a2, $sp, 8
	beq	$a2, $a0, .LBB21_15
.LBB21_18:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB21_3 Depth=1
	ld.d	$s2, $sp, 0
	move	$s7, $zero
	beq	$s2, $s3, .LBB21_20
.LBB21_19:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB21_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB21_3 Depth=1
	bnez	$s7, .LBB21_24
# %bb.21:                               #   in Loop: Header=BB21_3 Depth=1
	addi.d	$fp, $fp, 1
	addi.w	$s8, $s8, 1
	addi.d	$s5, $s5, 128
	bne	$s4, $s8, .LBB21_3
	b	.LBB21_23
.LBB21_22:                              #   in Loop: Header=BB21_3 Depth=1
	ori	$s7, $zero, 1
	bne	$s2, $s3, .LBB21_19
	b	.LBB21_20
.LBB21_23:
	move	$s8, $s6
.LBB21_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit._crit_edge
	move	$a0, $s8
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end21:
	.size	_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end21-_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception8
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	st.d	$s1, $sp, 192                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a3, $a2, 8
	ori	$a4, $zero, 1
	bne	$a3, $a4, .LBB22_26
# %bb.1:                                # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	ld.d	$a2, $a2, 0
	ld.bu	$a3, $a2, 0
	ori	$a4, $zero, 43
	bne	$a3, $a4, .LBB22_3
# %bb.2:                                # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	move	$a2, $a1
	ld.d	$s1, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	pcaddu18i	$t8, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jr	$t8
.LBB22_3:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit9
	ld.bu	$a2, $a2, 0
	ori	$a3, $zero, 45
	bne	$a2, $a3, .LBB22_26
# %bb.4:                                # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit9.thread
	ld.d	$a2, $a0, 176
	ld.d	$a4, $a0, 184
	addi.w	$fp, $a1, 1
	ld.d	$a3, $a0, 200
	sub.d	$a4, $a2, $a4
	srai.d	$a4, $a4, 7
	add.d	$a4, $a4, $fp
	bltz	$a4, .LBB22_7
# %bb.5:
	ori	$a5, $zero, 4
	bgeu	$a4, $a5, .LBB22_8
# %bb.6:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
	slli.d	$a3, $fp, 7
	add.d	$a3, $a2, $a3
	ld.wu	$a3, $a3, 32
	bstrpick.d	$a3, $a3, 31, 1
	slli.w	$a3, $a3, 1
	ori	$a4, $zero, 2
	beq	$a3, $a4, .LBB22_12
	b	.LBB22_26
.LBB22_7:
	srai.d	$a5, $a4, 2
	b	.LBB22_9
.LBB22_8:
	srli.d	$a5, $a4, 2
.LBB22_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	slli.d	$a6, $a5, 3
	ldx.d	$a6, $a3, $a6
	slli.d	$a5, $a5, 2
	sub.d	$a5, $a4, $a5
	slli.d	$a5, $a5, 7
	add.d	$a5, $a6, $a5
	ld.wu	$a5, $a5, 32
	bstrpick.d	$a5, $a5, 31, 1
	slli.w	$a5, $a5, 1
	ori	$a6, $zero, 2
	bne	$a5, $a6, .LBB22_26
# %bb.10:
	bltz	$a4, .LBB22_13
# %bb.11:
	ori	$a5, $zero, 3
	bltu	$a5, $a4, .LBB22_14
.LBB22_12:
	move	$s1, $a0
	move	$s0, $a1
	slli.d	$a0, $fp, 7
	add.d	$a1, $a2, $a0
	b	.LBB22_16
.LBB22_13:
	srai.d	$a2, $a4, 2
	b	.LBB22_15
.LBB22_14:
	srli.d	$a2, $a4, 2
.LBB22_15:
	move	$s1, $a0
	move	$s0, $a1
	slli.d	$a0, $a2, 3
	ldx.d	$a0, $a3, $a0
	slli.d	$a1, $a2, 2
	sub.d	$a1, $a4, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB22_16:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit11
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp128:
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZN2PP4Word12negate_valueEv)
	jirl	$ra, $ra, 0
.Ltmp129:
# %bb.17:
.Ltmp130:
	move	$a0, $s1
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp131:
# %bb.18:                               # %.noexc
	ld.d	$a5, $s1, 176
	ld.d	$a2, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a1, $a5, $a2
	srai.d	$a1, $a1, 7
	add.d	$a4, $a1, $s0
	addi.d	$a1, $s1, 160
	bltz	$a4, .LBB22_21
# %bb.19:
	ori	$a3, $zero, 3
	bltu	$a3, $a4, .LBB22_22
# %bb.20:
	ld.d	$a3, $s1, 192
	slli.d	$a4, $s0, 7
	add.d	$a4, $a5, $a4
	b	.LBB22_24
.LBB22_21:
	srai.d	$a5, $a4, 2
	b	.LBB22_23
.LBB22_22:
	srli.d	$a5, $a4, 2
.LBB22_23:
	slli.d	$a2, $a5, 3
	ldx.d	$a2, $a0, $a2
	alsl.d	$a0, $a5, $a0, 3
	addi.d	$a3, $a2, 512
	slli.d	$a5, $a5, 2
	sub.d	$a4, $a4, $a5
	slli.d	$a4, $a4, 7
	add.d	$a4, $a2, $a4
.LBB22_24:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i
	st.d	$a4, $sp, 160
	st.d	$a2, $sp, 168
	st.d	$a3, $sp, 176
	st.d	$a0, $sp, 184
.Ltmp132:
	addi.d	$a0, $sp, 128
	addi.d	$a2, $sp, 160
	addi.d	$a3, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp133:
# %bb.25:
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB22_26:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit9.thread14
	ld.d	$s1, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
.LBB22_27:
.Ltmp134:
	move	$fp, $a0
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end22:
	.size	_ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end22-_ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table22:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Lfunc_begin8-.Lfunc_begin8    # >> Call Site 1 <<
	.uleb128 .Ltmp128-.Lfunc_begin8         #   Call between .Lfunc_begin8 and .Ltmp128
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp128-.Lfunc_begin8         # >> Call Site 2 <<
	.uleb128 .Ltmp133-.Ltmp128              #   Call between .Ltmp128 and .Ltmp133
	.uleb128 .Ltmp134-.Lfunc_begin8         #     jumps to .Ltmp134
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp133-.Lfunc_begin8         # >> Call Site 3 <<
	.uleb128 .Lfunc_end22-.Ltmp133          #   Call between .Ltmp133 and .Lfunc_end22
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end8:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd21handle_cmd_unary_plusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd21handle_cmd_unary_plusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd21handle_cmd_unary_plusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd21handle_cmd_unary_plusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd21handle_cmd_unary_plusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception9
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	st.d	$s2, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 128                   # 8-byte Folded Spill
	st.d	$s4, $sp, 120                   # 8-byte Folded Spill
	st.d	$s5, $sp, 112                   # 8-byte Folded Spill
	st.d	$s6, $sp, 104                   # 8-byte Folded Spill
	st.d	$s7, $sp, 96                    # 8-byte Folded Spill
	st.d	$s8, $sp, 88                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	move	$s2, $a1
	move	$s0, $a0
	move	$s1, $zero
	addi.d	$s5, $sp, 64
	ori	$s6, $zero, 43
	ori	$s7, $zero, 1
	addi.w	$s4, $zero, -1
	ori	$s8, $zero, 4
	ori	$fp, $zero, 2
	b	.LBB23_3
	.p2align	4, , 16
.LBB23_1:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
                                        #   in Loop: Header=BB23_3 Depth=1
	slli.d	$a1, $s1, 7
	add.d	$a1, $a0, $a1
	ld.wu	$a1, $a1, 32
	bstrpick.d	$a1, $a1, 31, 1
	slli.w	$a1, $a1, 1
	bne	$a1, $fp, .LBB23_14
.LBB23_2:                               #   in Loop: Header=BB23_3 Depth=1
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.LBB23_3:                               # %._crit_edge.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s0, 208
	ld.d	$a3, $s0, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s0, 192
	ld.d	$a4, $s0, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	st.d	$s5, $sp, 48
	st.h	$s6, $sp, 64
	st.d	$s7, $sp, 56
	addi.w	$a2, $a0, -1
.Ltmp135:
	addi.d	$a3, $sp, 48
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp136:
# %bb.4:                                #   in Loop: Header=BB23_3 Depth=1
	move	$s3, $a0
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB23_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB23_3 Depth=1
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB23_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB23_3 Depth=1
	beq	$s3, $s4, .LBB23_45
# %bb.7:                                #   in Loop: Header=BB23_3 Depth=1
	ld.d	$a0, $s0, 176
	ld.d	$a2, $s0, 184
	addi.w	$s1, $s3, 1
	ld.d	$a1, $s0, 200
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s1
	bltz	$a2, .LBB23_10
# %bb.8:                                #   in Loop: Header=BB23_3 Depth=1
	bltu	$a2, $s8, .LBB23_1
# %bb.9:                                #   in Loop: Header=BB23_3 Depth=1
	srli.d	$a3, $a2, 2
	b	.LBB23_11
	.p2align	4, , 16
.LBB23_10:                              #   in Loop: Header=BB23_3 Depth=1
	srai.d	$a3, $a2, 2
.LBB23_11:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB23_3 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a1, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	ld.wu	$a3, $a3, 32
	bstrpick.d	$a3, $a3, 31, 1
	slli.w	$a3, $a3, 1
	beq	$a3, $fp, .LBB23_2
# %bb.12:
	bltz	$a2, .LBB23_15
# %bb.13:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB23_16
.LBB23_14:                              # %.thread52
	slli.d	$a1, $s1, 7
	add.d	$a0, $a0, $a1
	b	.LBB23_18
.LBB23_15:
	srai.d	$a0, $a2, 2
	b	.LBB23_17
.LBB23_16:
	srli.d	$a0, $a2, 2
.LBB23_17:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB23_18:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit29
	ld.d	$fp, $sp, 8                     # 8-byte Folded Reload
	move	$a1, $s2
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s2, 16
	pcalau12i	$a0, %pc_hi20(.L.str.27)
	addi.d	$a1, $a0, %pc_lo12(.L.str.27)
	ori	$a2, $zero, 57
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB23_46
# %bb.19:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB23_21
# %bb.20:
	ld.bu	$a0, $s2, 67
	b	.LBB23_22
.LBB23_21:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.LBB23_22:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.25)
	addi.d	$a1, $a0, %pc_lo12(.L.str.25)
	ori	$a2, $zero, 16
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s1
	bltz	$a1, .LBB23_25
# %bb.23:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB23_26
# %bb.24:
	slli.d	$a0, $s1, 7
	add.d	$a0, $a2, $a0
	b	.LBB23_28
.LBB23_25:
	srai.d	$a2, $a1, 2
	b	.LBB23_27
.LBB23_26:
	srli.d	$a2, $a1, 2
.LBB23_27:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB23_28:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit31
	addi.d	$s2, $sp, 32
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	st.d	$s2, $sp, 16
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 80
	move	$a0, $s2
	bltu	$a1, $a2, .LBB23_30
# %bb.29:                               # %.noexc.i.i
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB23_30:                              # %._crit_edge.i.i.i
	beq	$a1, $s4, .LBB23_34
# %bb.31:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB23_33
# %bb.32:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB23_34
.LBB23_33:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB23_34:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a2, $sp, 80
	ld.d	$a1, $sp, 16
	st.d	$a2, $sp, 24
.Ltmp138:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp139:
# %bb.35:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB23_47
# %bb.36:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i41
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB23_38
# %bb.37:
	ld.bu	$a0, $s1, 67
	b	.LBB23_40
.LBB23_38:
.Ltmp140:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp141:
# %bb.39:                               # %.noexc45
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp142:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp143:
.LBB23_40:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp144:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp145:
# %bb.41:                               # %.noexc47
.Ltmp146:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp147:
# %bb.42:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 16
	beq	$a0, $s2, .LBB23_44
# %bb.43:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i34
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB23_44:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit36
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB23_45:                              # %.loopexit
	ld.d	$s8, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB23_46:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB23_47:
.Ltmp148:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp149:
# %bb.48:                               # %.noexc44
.LBB23_49:
.Ltmp150:
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s2, .LBB23_54
# %bb.50:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i37
	ld.d	$a0, $sp, 32
	b	.LBB23_53
.LBB23_51:
.Ltmp137:
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	beq	$a2, $s5, .LBB23_54
# %bb.52:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i25
	ld.d	$a0, $sp, 64
.LBB23_53:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit27
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB23_54:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit27
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end23:
	.size	_ZN2PP3Cmd21handle_cmd_unary_plusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end23-_ZN2PP3Cmd21handle_cmd_unary_plusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table23:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Lfunc_begin9-.Lfunc_begin9    # >> Call Site 1 <<
	.uleb128 .Ltmp135-.Lfunc_begin9         #   Call between .Lfunc_begin9 and .Ltmp135
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp135-.Lfunc_begin9         # >> Call Site 2 <<
	.uleb128 .Ltmp136-.Ltmp135              #   Call between .Ltmp135 and .Ltmp136
	.uleb128 .Ltmp137-.Lfunc_begin9         #     jumps to .Ltmp137
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp136-.Lfunc_begin9         # >> Call Site 3 <<
	.uleb128 .Ltmp138-.Ltmp136              #   Call between .Ltmp136 and .Ltmp138
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp138-.Lfunc_begin9         # >> Call Site 4 <<
	.uleb128 .Ltmp147-.Ltmp138              #   Call between .Ltmp138 and .Ltmp147
	.uleb128 .Ltmp150-.Lfunc_begin9         #     jumps to .Ltmp150
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp147-.Lfunc_begin9         # >> Call Site 5 <<
	.uleb128 .Ltmp148-.Ltmp147              #   Call between .Ltmp147 and .Ltmp148
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp148-.Lfunc_begin9         # >> Call Site 6 <<
	.uleb128 .Ltmp149-.Ltmp148              #   Call between .Ltmp148 and .Ltmp149
	.uleb128 .Ltmp150-.Lfunc_begin9         #     jumps to .Ltmp150
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp149-.Lfunc_begin9         # >> Call Site 7 <<
	.uleb128 .Lfunc_end23-.Ltmp149          #   Call between .Ltmp149 and .Lfunc_end23
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end9:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd12delete_wordsEii     # -- Begin function _ZN2PP3Cmd12delete_wordsEii
	.p2align	5
	.type	_ZN2PP3Cmd12delete_wordsEii,@function
_ZN2PP3Cmd12delete_wordsEii:            # @_ZN2PP3Cmd12delete_wordsEii
	.cfi_startproc
# %bb.0:
	ld.d	$a6, $a0, 176
	ld.d	$a5, $a0, 184
	ld.d	$a3, $a0, 200
	sub.d	$a4, $a6, $a5
	srai.d	$a7, $a4, 7
	add.d	$t0, $a7, $a1
	bltz	$t0, .LBB24_4
# %bb.1:
	ori	$a4, $zero, 3
	bltu	$a4, $t0, .LBB24_5
# %bb.2:
	slli.d	$a1, $a1, 7
	add.d	$a1, $a6, $a1
	move	$a4, $a3
	add.d	$a7, $a7, $a2
	bgez	$a7, .LBB24_7
.LBB24_3:
	srai.d	$a2, $a7, 2
	b	.LBB24_10
.LBB24_4:
	srai.d	$a1, $t0, 2
	b	.LBB24_6
.LBB24_5:
	srli.d	$a1, $t0, 2
.LBB24_6:
	alsl.d	$a4, $a1, $a3, 3
	slli.d	$t1, $a1, 3
	ldx.d	$t1, $a3, $t1
	slli.d	$a1, $a1, 2
	sub.d	$a1, $t0, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $t1, $a1
	add.d	$a7, $a7, $a2
	bltz	$a7, .LBB24_3
.LBB24_7:
	ori	$t0, $zero, 3
	bltu	$t0, $a7, .LBB24_9
# %bb.8:
	slli.d	$a2, $a2, 7
	add.d	$a2, $a6, $a2
	b	.LBB24_11
.LBB24_9:
	srli.d	$a2, $a7, 2
.LBB24_10:
	slli.d	$a5, $a2, 3
	ldx.d	$a5, $a3, $a5
	alsl.d	$a3, $a2, $a3, 3
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a7, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a5, $a2
.LBB24_11:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit3
	sub.d	$a5, $a2, $a5
	srai.d	$a6, $a5, 7
	addi.w	$a7, $zero, -1
	addi.d	$a5, $a6, 1
	blt	$a6, $a7, .LBB24_14
# %bb.12:
	ori	$a6, $zero, 3
	bltu	$a6, $a5, .LBB24_15
# %bb.13:
	addi.d	$a2, $a2, 128
	b	.LBB24_17
.LBB24_14:
	srai.d	$a2, $a5, 2
	b	.LBB24_16
.LBB24_15:
	srli.d	$a2, $a5, 2
.LBB24_16:
	slli.d	$a6, $a2, 3
	ldx.d	$a6, $a3, $a6
	alsl.d	$a3, $a2, $a3, 3
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a5, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a6, $a2
.LBB24_17:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit5
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a5, $a4, 0
	st.d	$a1, $sp, 72
	st.d	$a5, $sp, 80
	addi.d	$a1, $a5, 512
	st.d	$a1, $sp, 88
	ld.d	$a5, $a3, 0
	addi.d	$a1, $a0, 160
	st.d	$a4, $sp, 96
	st.d	$a2, $sp, 40
	st.d	$a5, $sp, 48
	addi.d	$a0, $a5, 512
	st.d	$a0, $sp, 56
	st.d	$a3, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a2, $sp, 72
	addi.d	$a3, $sp, 40
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.Lfunc_end24:
	.size	_ZN2PP3Cmd12delete_wordsEii, .Lfunc_end24-_ZN2PP3Cmd12delete_wordsEii
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd23handle_cmd_multiplicityERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd23handle_cmd_multiplicityERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd23handle_cmd_multiplicityERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd23handle_cmd_multiplicityERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd23handle_cmd_multiplicityERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception10
# %bb.0:
	addi.d	$sp, $sp, -320
	.cfi_def_cfa_offset 320
	st.d	$ra, $sp, 312                   # 8-byte Folded Spill
	st.d	$fp, $sp, 304                   # 8-byte Folded Spill
	st.d	$s0, $sp, 296                   # 8-byte Folded Spill
	st.d	$s1, $sp, 288                   # 8-byte Folded Spill
	st.d	$s2, $sp, 280                   # 8-byte Folded Spill
	st.d	$s3, $sp, 272                   # 8-byte Folded Spill
	st.d	$s4, $sp, 264                   # 8-byte Folded Spill
	st.d	$s5, $sp, 256                   # 8-byte Folded Spill
	st.d	$s6, $sp, 248                   # 8-byte Folded Spill
	st.d	$s7, $sp, 240                   # 8-byte Folded Spill
	st.d	$s8, $sp, 232                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 0                     # 8-byte Folded Spill
	move	$s0, $a1
	move	$s1, $a0
	move	$s2, $zero
	addi.d	$s3, $a0, 160
	addi.d	$s7, $sp, 152
	ori	$fp, $zero, 1
	addi.w	$s6, $zero, -1
	ori	$s8, $zero, 3
	.p2align	4, , 16
.LBB25_1:                               # %._crit_edge.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 232
	ld.d	$a1, $s1, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s1, 208
	ld.d	$a3, $s1, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s1, 192
	ld.d	$a4, $s1, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	st.d	$s7, $sp, 136
	ori	$a1, $zero, 42
	st.h	$a1, $sp, 152
	st.d	$fp, $sp, 144
	addi.w	$a2, $a0, -1
.Ltmp151:
	addi.d	$a3, $sp, 136
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp152:
# %bb.2:                                #   in Loop: Header=BB25_1 Depth=1
	move	$s2, $a0
	ld.d	$a0, $sp, 136
	beq	$a0, $s7, .LBB25_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB25_1 Depth=1
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB25_1 Depth=1
	beq	$s2, $s6, .LBB25_80
# %bb.5:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB25_1 Depth=1
	beqz	$s2, .LBB25_34
# %bb.6:                                #   in Loop: Header=BB25_1 Depth=1
	ld.d	$a1, $s1, 232
	ld.d	$a0, $s1, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s1, 208
	ld.d	$a4, $s1, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s1, 192
	ld.d	$a1, $s1, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	addi.w	$a2, $a2, -1
	beq	$s2, $a2, .LBB25_37
# %bb.7:                                #   in Loop: Header=BB25_1 Depth=1
	ld.d	$a2, $s1, 184
	addi.w	$s4, $s2, -1
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s4
	bltz	$a2, .LBB25_10
# %bb.8:                                #   in Loop: Header=BB25_1 Depth=1
	ori	$a3, $zero, 4
	bgeu	$a2, $a3, .LBB25_11
# %bb.9:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit47.thread
                                        #   in Loop: Header=BB25_1 Depth=1
	slli.d	$a0, $s4, 7
	add.d	$a0, $a1, $a0
	ld.wu	$a0, $a0, 32
	bstrpick.d	$a0, $a0, 31, 1
	slli.w	$a0, $a0, 1
	ori	$a2, $zero, 2
	beq	$a0, $a2, .LBB25_15
	b	.LBB25_42
	.p2align	4, , 16
.LBB25_10:                              #   in Loop: Header=BB25_1 Depth=1
	srai.d	$a3, $a2, 2
	b	.LBB25_12
	.p2align	4, , 16
.LBB25_11:                              #   in Loop: Header=BB25_1 Depth=1
	srli.d	$a3, $a2, 2
.LBB25_12:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit47
                                        #   in Loop: Header=BB25_1 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a0, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	ld.wu	$a3, $a3, 32
	bstrpick.d	$a3, $a3, 31, 1
	slli.w	$a3, $a3, 1
	ori	$a4, $zero, 2
	bne	$a3, $a4, .LBB25_40
# %bb.13:                               #   in Loop: Header=BB25_1 Depth=1
	bltz	$a2, .LBB25_16
# %bb.14:                               #   in Loop: Header=BB25_1 Depth=1
	bltu	$s8, $a2, .LBB25_17
.LBB25_15:                              # %.thread92
                                        #   in Loop: Header=BB25_1 Depth=1
	slli.d	$a0, $s4, 7
	add.d	$a0, $a1, $a0
	b	.LBB25_19
	.p2align	4, , 16
.LBB25_16:                              #   in Loop: Header=BB25_1 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB25_18
.LBB25_17:                              #   in Loop: Header=BB25_1 Depth=1
	srli.d	$a1, $a2, 2
.LBB25_18:                              #   in Loop: Header=BB25_1 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB25_19:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit61
                                        #   in Loop: Header=BB25_1 Depth=1
	move	$a1, $s0
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s1, 176
	ld.d	$a2, $s1, 184
	addi.w	$s5, $s2, 1
	ld.d	$a1, $s1, 200
	sub.d	$a2, $a3, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s5
	bltz	$a2, .LBB25_22
# %bb.20:                               #   in Loop: Header=BB25_1 Depth=1
	bltu	$s8, $a2, .LBB25_23
# %bb.21:                               #   in Loop: Header=BB25_1 Depth=1
	slli.d	$a1, $s5, 7
	add.d	$a1, $a3, $a1
	st.w	$a0, $a1, 40
	b	.LBB25_25
	.p2align	4, , 16
.LBB25_22:                              #   in Loop: Header=BB25_1 Depth=1
	srai.d	$a3, $a2, 2
	b	.LBB25_24
	.p2align	4, , 16
.LBB25_23:                              #   in Loop: Header=BB25_1 Depth=1
	srli.d	$a3, $a2, 2
.LBB25_24:                              #   in Loop: Header=BB25_1 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a5, $a1, $a4
	andi	$a6, $a2, 3
	slli.d	$a6, $a6, 7
	add.d	$a5, $a5, $a6
	st.w	$a0, $a5, 40
	ldx.d	$a0, $a1, $a4
	slli.d	$a1, $a3, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB25_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit65
                                        #   in Loop: Header=BB25_1 Depth=1
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp167:
	move	$a0, $s1
	move	$a1, $s4
	move	$a2, $s5
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp168:
# %bb.26:                               # %.noexc66
                                        #   in Loop: Header=BB25_1 Depth=1
	ld.d	$a4, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a2, $a4, $a1
	srai.d	$a2, $a2, 7
	add.d	$a3, $a2, $s4
	bltz	$a3, .LBB25_29
# %bb.27:                               #   in Loop: Header=BB25_1 Depth=1
	bltu	$s8, $a3, .LBB25_30
# %bb.28:                               #   in Loop: Header=BB25_1 Depth=1
	ld.d	$a2, $s1, 192
	slli.d	$a3, $s4, 7
	add.d	$a3, $a4, $a3
	b	.LBB25_32
	.p2align	4, , 16
.LBB25_29:                              #   in Loop: Header=BB25_1 Depth=1
	srai.d	$a4, $a3, 2
	b	.LBB25_31
	.p2align	4, , 16
.LBB25_30:                              #   in Loop: Header=BB25_1 Depth=1
	srli.d	$a4, $a3, 2
.LBB25_31:                              #   in Loop: Header=BB25_1 Depth=1
	slli.d	$a1, $a4, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a4, $a0, 3
	addi.d	$a2, $a1, 512
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
.LBB25_32:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i
                                        #   in Loop: Header=BB25_1 Depth=1
	st.d	$a3, $sp, 200
	st.d	$a1, $sp, 208
	st.d	$a2, $sp, 216
	st.d	$a0, $sp, 224
.Ltmp169:
	addi.d	$a0, $sp, 168
	addi.d	$a2, $sp, 200
	addi.d	$a3, $sp, 8
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp170:
# %bb.33:                               #   in Loop: Header=BB25_1 Depth=1
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	b	.LBB25_1
.LBB25_34:
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s0, 16
	pcalau12i	$a0, %pc_hi20(.L.str.29)
	addi.d	$a1, $a0, %pc_lo12(.L.str.29)
	ori	$a2, $zero, 42
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB25_81
# %bb.35:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB25_48
.LBB25_36:
	ld.bu	$a0, $s0, 67
	b	.LBB25_49
.LBB25_37:
	ld.d	$a2, $s1, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s2
	bltz	$a2, .LBB25_43
# %bb.38:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB25_44
# %bb.39:
	slli.d	$a0, $s2, 7
	add.d	$a0, $a1, $a0
	b	.LBB25_46
.LBB25_40:
	bltz	$a2, .LBB25_50
# %bb.41:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB25_51
.LBB25_42:                              # %.thread90
	slli.d	$a0, $s4, 7
	add.d	$a0, $a1, $a0
	b	.LBB25_53
.LBB25_43:
	srai.d	$a1, $a2, 2
	b	.LBB25_45
.LBB25_44:
	srli.d	$a1, $a2, 2
.LBB25_45:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB25_46:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	move	$a1, $s0
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s0, 16
	pcalau12i	$a0, %pc_hi20(.L.str.30)
	addi.d	$a1, $a0, %pc_lo12(.L.str.30)
	ori	$a2, $zero, 40
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB25_81
# %bb.47:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i69
	ld.bu	$a0, $s0, 56
	bnez	$a0, .LBB25_36
.LBB25_48:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB25_49:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	b	.LBB25_79
.LBB25_50:
	srai.d	$a1, $a2, 2
	b	.LBB25_52
.LBB25_51:
	srli.d	$a1, $a2, 2
.LBB25_52:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB25_53:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit49
	move	$a1, $s0
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s0, 16
	pcalau12i	$a0, %pc_hi20(.L.str.31)
	addi.d	$a1, $a0, %pc_lo12(.L.str.31)
	ori	$a2, $zero, 48
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB25_81
# %bb.54:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i74
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB25_56
# %bb.55:
	ld.bu	$a0, $s0, 67
	b	.LBB25_57
.LBB25_56:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB25_57:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit77
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.25)
	addi.d	$a1, $a0, %pc_lo12(.L.str.25)
	ori	$a2, $zero, 16
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s4
	bltz	$a1, .LBB25_60
# %bb.58:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB25_61
# %bb.59:
	slli.d	$a0, $s4, 7
	add.d	$a0, $a2, $a0
	b	.LBB25_63
.LBB25_60:
	srai.d	$a2, $a1, 2
	b	.LBB25_62
.LBB25_61:
	srli.d	$a2, $a1, 2
.LBB25_62:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB25_63:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit51
	addi.d	$s3, $sp, 24
	st.d	$s3, $sp, 8
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 200
	move	$a0, $s3
	bltu	$a1, $a2, .LBB25_65
# %bb.64:                               # %.noexc.i.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 200
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 200
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB25_65:                              # %._crit_edge.i.i.i
	beq	$a1, $s6, .LBB25_69
# %bb.66:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB25_68
# %bb.67:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB25_69
.LBB25_68:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB25_69:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a2, $sp, 200
	ld.d	$a1, $sp, 8
	st.d	$a2, $sp, 16
.Ltmp154:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp155:
# %bb.70:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB25_82
# %bb.71:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i79
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB25_73
# %bb.72:
	ld.bu	$a0, $s1, 67
	b	.LBB25_75
.LBB25_73:
.Ltmp156:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp157:
# %bb.74:                               # %.noexc83
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp158:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp159:
.LBB25_75:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp160:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp161:
# %bb.76:                               # %.noexc85
.Ltmp162:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp163:
# %bb.77:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 8
	beq	$a0, $s3, .LBB25_79
# %bb.78:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i54
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB25_79:                              # %.loopexit.sink.split
	ori	$a0, $zero, 2
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	st.w	$a0, $a1, 0
.LBB25_80:                              # %.loopexit
	ld.d	$s8, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 296                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 304                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 312                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 320
	ret
.LBB25_81:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB25_82:
.Ltmp164:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp165:
# %bb.83:                               # %.noexc82
.LBB25_84:
.Ltmp166:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s3, .LBB25_90
# %bb.85:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i57
	ld.d	$a0, $sp, 24
	b	.LBB25_88
.LBB25_86:
.Ltmp153:
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s7, .LBB25_90
# %bb.87:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	ld.d	$a0, $sp, 152
.LBB25_88:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB25_89:
.Ltmp171:
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB25_90:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end25:
	.size	_ZN2PP3Cmd23handle_cmd_multiplicityERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end25-_ZN2PP3Cmd23handle_cmd_multiplicityERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table25:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Ltmp151-.Lfunc_begin10        # >> Call Site 1 <<
	.uleb128 .Ltmp152-.Ltmp151              #   Call between .Ltmp151 and .Ltmp152
	.uleb128 .Ltmp153-.Lfunc_begin10        #     jumps to .Ltmp153
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp152-.Lfunc_begin10        # >> Call Site 2 <<
	.uleb128 .Ltmp167-.Ltmp152              #   Call between .Ltmp152 and .Ltmp167
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp167-.Lfunc_begin10        # >> Call Site 3 <<
	.uleb128 .Ltmp170-.Ltmp167              #   Call between .Ltmp167 and .Ltmp170
	.uleb128 .Ltmp171-.Lfunc_begin10        #     jumps to .Ltmp171
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp170-.Lfunc_begin10        # >> Call Site 4 <<
	.uleb128 .Ltmp154-.Ltmp170              #   Call between .Ltmp170 and .Ltmp154
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp154-.Lfunc_begin10        # >> Call Site 5 <<
	.uleb128 .Ltmp163-.Ltmp154              #   Call between .Ltmp154 and .Ltmp163
	.uleb128 .Ltmp166-.Lfunc_begin10        #     jumps to .Ltmp166
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp163-.Lfunc_begin10        # >> Call Site 6 <<
	.uleb128 .Ltmp164-.Ltmp163              #   Call between .Ltmp163 and .Ltmp164
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp164-.Lfunc_begin10        # >> Call Site 7 <<
	.uleb128 .Ltmp165-.Ltmp164              #   Call between .Ltmp164 and .Ltmp165
	.uleb128 .Ltmp166-.Lfunc_begin10        #     jumps to .Ltmp166
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp165-.Lfunc_begin10        # >> Call Site 8 <<
	.uleb128 .Lfunc_end25-.Ltmp165          #   Call between .Ltmp165 and .Lfunc_end25
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end10:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	ld.d	$a2, $a1, 16
	ld.d	$a2, $a2, -24
	addi.d	$fp, $a1, 16
	add.d	$a1, $fp, $a2
	ld.d	$s1, $a1, 240
	beqz	$s1, .LBB26_23
# %bb.1:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	move	$s0, $a0
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB26_3
# %bb.2:
	ld.bu	$a0, $s1, 67
	b	.LBB26_4
.LBB26_3:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB26_4:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.193)
	addi.d	$a1, $a0, %pc_lo12(.L.str.193)
	ori	$a2, $zero, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s0, 4
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.59)
	addi.d	$a1, $a0, %pc_lo12(.L.str.59)
	ori	$a2, $zero, 1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB26_23
# %bb.5:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i6
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB26_7
# %bb.6:
	ld.bu	$a0, $s2, 67
	b	.LBB26_8
.LBB26_7:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.LBB26_8:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit9
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a1, $a0, %pc_lo12(.L.str.22)
	ori	$a2, $zero, 4
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	ld.w	$a1, $s0, 0
	ld.d	$a2, $a0, 16
	ld.d	$a4, $a0, 24
	addi.w	$a3, $a1, -1
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a4
	srai.d	$a1, $a1, 5
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB26_11
# %bb.9:
	ori	$a4, $zero, 15
	bltu	$a4, $a1, .LBB26_12
# %bb.10:
	slli.d	$a0, $a3, 5
	add.d	$a0, $a2, $a0
	b	.LBB26_14
.LBB26_11:
	srai.d	$a2, $a1, 4
	b	.LBB26_13
.LBB26_12:
	srli.d	$a2, $a1, 4
.LBB26_13:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB26_14:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s1, $a1, 240
	beqz	$s1, .LBB26_23
# %bb.15:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i11
	ld.bu	$a1, $s1, 56
	beqz	$a1, .LBB26_17
# %bb.16:
	ld.bu	$a1, $s1, 67
	b	.LBB26_18
.LBB26_17:
	move	$s2, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s2
.LBB26_18:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit14
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.194)
	addi.d	$a1, $a0, %pc_lo12(.L.str.194)
	ori	$a2, $zero, 9
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 8
	ld.d	$a2, $s0, 16
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$fp, $a1, 240
	beqz	$fp, .LBB26_23
# %bb.19:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i16
	ld.bu	$a1, $fp, 56
	beqz	$a1, .LBB26_21
# %bb.20:
	ld.bu	$a1, $fp, 67
	b	.LBB26_22
.LBB26_21:
	move	$s0, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $fp
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s0
.LBB26_22:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit19
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZNSo5flushEv)
	jr	$t8
.LBB26_23:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end26:
	.size	_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end26-_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd13replace_wordsEiiRNS_4WordE # -- Begin function _ZN2PP3Cmd13replace_wordsEiiRNS_4WordE
	.p2align	5
	.type	_ZN2PP3Cmd13replace_wordsEiiRNS_4WordE,@function
_ZN2PP3Cmd13replace_wordsEiiRNS_4WordE: # @_ZN2PP3Cmd13replace_wordsEiiRNS_4WordE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a3
	move	$s1, $a1
	move	$s0, $a0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
	ld.d	$a4, $s0, 176
	ld.d	$a2, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a4, $a2
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s1
	bltz	$a1, .LBB27_3
# %bb.1:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB27_4
# %bb.2:
	ld.d	$a3, $s0, 192
	slli.d	$a1, $s1, 7
	add.d	$a4, $a4, $a1
	b	.LBB27_6
.LBB27_3:
	srai.d	$a4, $a1, 2
	b	.LBB27_5
.LBB27_4:
	srli.d	$a4, $a1, 2
.LBB27_5:
	slli.d	$a2, $a4, 3
	ldx.d	$a2, $a0, $a2
	alsl.d	$a0, $a4, $a0, 3
	addi.d	$a3, $a2, 512
	slli.d	$a4, $a4, 2
	sub.d	$a1, $a1, $a4
	slli.d	$a1, $a1, 7
	add.d	$a4, $a2, $a1
.LBB27_6:                               # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
	addi.d	$a1, $s0, 160
	st.d	$a4, $sp, 32
	st.d	$a2, $sp, 40
	st.d	$a3, $sp, 48
	st.d	$a0, $sp, 56
	addi.d	$a0, $sp, 0
	addi.d	$a2, $sp, 32
	move	$a3, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end27:
	.size	_ZN2PP3Cmd13replace_wordsEiiRNS_4WordE, .Lfunc_end27-_ZN2PP3Cmd13replace_wordsEiiRNS_4WordE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception11
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s3, $a3
	ld.d	$a3, $a3, 8
	ld.d	$t0, $s3, 0
	sub.d	$s5, $a3, $t0
	slli.d	$a3, $s5, 30
	srai.d	$s6, $a3, 32
	srli.d	$t0, $s6, 61
	st.d	$a7, $sp, 48                    # 8-byte Folded Spill
	st.d	$a6, $sp, 80                    # 8-byte Folded Spill
	st.d	$a5, $sp, 72                    # 8-byte Folded Spill
	st.d	$a4, $sp, 64                    # 8-byte Folded Spill
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	bnez	$t0, .LBB28_53
# %bb.1:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	move	$s7, $a2
	move	$s2, $a0
	ld.d	$s0, $sp, 224
	ld.d	$s1, $sp, 216
	beqz	$a3, .LBB28_3
# %bb.2:                                # %.lr.ph.preheader.i.i.i.i.i
	srai.d	$fp, $a3, 30
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	st.d	$a0, $sp, 96
	alsl.d	$a0, $s6, $a0, 2
	st.d	$a0, $sp, 112
	move	$a0, $s4
	move	$a1, $zero
	move	$a2, $fp
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s4, $fp
	b	.LBB28_4
.LBB28_3:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
	move	$a0, $zero
	st.d	$zero, $sp, 112
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 96
.LBB28_4:                               # %.loopexit69
	st.d	$a0, $sp, 104
.Ltmp172:
	addi.d	$a1, $sp, 96
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp173:
# %bb.5:
	beqz	$a0, .LBB28_50
# %bb.6:
	ld.d	$a0, $sp, 208
	beqz	$a0, .LBB28_15
# %bb.7:
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.d	$a4, $a2, $a3
	addi.w	$a2, $a4, 0
	blez	$a2, .LBB28_50
# %bb.8:                                # %.lr.ph.i
	ld.d	$a3, $s2, 184
	move	$a2, $zero
	sub.d	$a3, $a1, $a3
	srai.d	$a3, $a3, 7
	bstrpick.d	$a4, $a4, 30, 0
	ori	$a5, $zero, 4
	ori	$a6, $zero, 1
	move	$a7, $a3
	b	.LBB28_12
	.p2align	4, , 16
.LBB28_9:                               #   in Loop: Header=BB28_12 Depth=1
	srai.d	$t0, $a7, 2
.LBB28_10:                              #   in Loop: Header=BB28_12 Depth=1
	add.d	$t1, $a2, $a3
	slli.d	$t2, $t0, 3
	ldx.d	$t2, $a0, $t2
	slli.d	$t0, $t0, 2
	sub.d	$t0, $t1, $t0
	slli.d	$t0, $t0, 7
	add.d	$t0, $t2, $t0
.LBB28_11:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB28_12 Depth=1
	st.b	$a6, $t0, 36
	addi.d	$a2, $a2, 1
	addi.d	$a1, $a1, 128
	addi.d	$a4, $a4, -1
	addi.d	$a7, $a7, 1
	beqz	$a4, .LBB28_50
.LBB28_12:                              # =>This Inner Loop Header: Depth=1
	bltz	$a7, .LBB28_9
# %bb.13:                               #   in Loop: Header=BB28_12 Depth=1
	move	$t0, $a1
	bltu	$a7, $a5, .LBB28_11
# %bb.14:                               #   in Loop: Header=BB28_12 Depth=1
	srli.d	$t0, $a7, 2
	b	.LBB28_10
.LBB28_15:
	st.w	$zero, $sp, 92
.Ltmp175:
	addi.d	$a1, $sp, 96
	addi.d	$a3, $sp, 92
	move	$a0, $s2
	move	$a2, $s3
	move	$a4, $s1
	move	$a5, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_)
	jirl	$ra, $ra, 0
.Ltmp176:
# %bb.16:
	beqz	$a0, .LBB28_50
# %bb.17:
	bstrpick.d	$a0, $s5, 33, 2
	slli.d	$a0, $a0, 2
	beqz	$a0, .LBB28_42
# %bb.18:
.Ltmp178:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11find_equalsEv)
	jirl	$ra, $ra, 0
.Ltmp179:
# %bb.19:
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a1, $a0, %pc_lo12(_ZN2PPL10index_baseE)
.Ltmp181:
	addi.d	$a0, $sp, 91
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp182:
# %bb.20:
.Ltmp184:
	addi.d	$a0, $sp, 91
	addi.d	$a1, $sp, 96
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils9start_dexERSt6vectorIiSaIiEERKS3_)
	jirl	$ra, $ra, 0
.Ltmp185:
# %bb.21:                               # %.preheader
	move	$fp, $a0
	st.d	$s7, $sp, 40                    # 8-byte Folded Spill
.LBB28_22:                              # %.loopexit.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB28_26 Depth 2
                                        #     Child Loop BB28_39 Depth 2
	addi.d	$s6, $s4, 1
	slli.d	$a0, $s4, 7
	addi.d	$s7, $a0, 128
	b	.LBB28_26
	.p2align	4, , 16
.LBB28_23:                              #   in Loop: Header=BB28_26 Depth=2
	srai.d	$a2, $a3, 2
.LBB28_24:                              #   in Loop: Header=BB28_26 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB28_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit66
                                        #   in Loop: Header=BB28_26 Depth=2
	ld.w	$s8, $a0, 40
	addi.d	$s6, $s6, 1
	addi.w	$s4, $s4, 1
	addi.d	$s7, $s7, 128
	bgtz	$s8, .LBB28_38
.LBB28_26:                              # %.loopexit
                                        #   Parent Loop BB28_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s6, $a2, .LBB28_50
# %bb.27:                               #   in Loop: Header=BB28_26 Depth=2
	ld.d	$a2, $s2, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s6, $a2
	bltz	$a3, .LBB28_30
# %bb.28:                               #   in Loop: Header=BB28_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB28_31
# %bb.29:                               #   in Loop: Header=BB28_26 Depth=2
	add.d	$a0, $a1, $s7
	b	.LBB28_33
	.p2align	4, , 16
.LBB28_30:                              #   in Loop: Header=BB28_26 Depth=2
	srai.d	$a1, $a3, 2
	b	.LBB28_32
	.p2align	4, , 16
.LBB28_31:                              #   in Loop: Header=BB28_26 Depth=2
	srli.d	$a1, $a3, 2
.LBB28_32:                              #   in Loop: Header=BB28_26 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB28_33:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit64
                                        #   in Loop: Header=BB28_26 Depth=2
.Ltmp187:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word8get_boolERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp188:
# %bb.34:                               #   in Loop: Header=BB28_26 Depth=2
	move	$s5, $a0
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s6, $a1
	bltz	$a3, .LBB28_23
# %bb.35:                               #   in Loop: Header=BB28_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB28_37
# %bb.36:                               #   in Loop: Header=BB28_26 Depth=2
	add.d	$a0, $a2, $s7
	b	.LBB28_25
	.p2align	4, , 16
.LBB28_37:                              #   in Loop: Header=BB28_26 Depth=2
	srli.d	$a2, $a3, 2
	b	.LBB28_24
.LBB28_38:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB28_22 Depth=1
	addi.d	$a0, $s6, -1
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	alsl.d	$s6, $fp, $a0, 2
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	.p2align	4, , 16
.LBB28_39:                              # %.lr.ph
                                        #   Parent Loop BB28_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp190:
	st.d	$s0, $sp, 16
	st.d	$s1, $sp, 8
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	st.d	$a0, $sp, 0
	move	$a0, $s2
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	move	$a2, $s4
	move	$a3, $fp
	ld.d	$a4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$a5, $sp, 64                    # 8-byte Folded Reload
	move	$a6, $s7
	move	$a7, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp191:
# %bb.40:                               #   in Loop: Header=BB28_39 Depth=2
	st.w	$s5, $s6, 0
	addi.w	$fp, $fp, 1
	addi.w	$s8, $s8, -1
	addi.d	$s6, $s6, 4
	bnez	$s8, .LBB28_39
# %bb.41:                               #   in Loop: Header=BB28_22 Depth=1
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	b	.LBB28_22
.LBB28_42:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.w	$a4, $zero, -2
	addi.d	$a1, $a3, 2
	blt	$a3, $a4, .LBB28_45
# %bb.43:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB28_46
# %bb.44:
	addi.d	$a0, $a2, 256
	b	.LBB28_48
.LBB28_45:
	srai.d	$a2, $a1, 2
	b	.LBB28_47
.LBB28_46:
	srli.d	$a2, $a1, 2
.LBB28_47:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB28_48:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
.Ltmp193:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word8get_boolERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp194:
# %bb.49:
	st.w	$a0, $s7, 0
.LBB28_50:                              # %_ZN2PP3Cmd13set_processedEb.exit
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB28_52
# %bb.51:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB28_52:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB28_53:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB28_54:
.Ltmp195:
	b	.LBB28_62
.LBB28_55:
.Ltmp186:
	b	.LBB28_62
.LBB28_56:
.Ltmp183:
	b	.LBB28_62
.LBB28_57:
.Ltmp180:
	b	.LBB28_62
.LBB28_58:
.Ltmp177:
	b	.LBB28_62
.LBB28_59:
.Ltmp174:
	b	.LBB28_62
.LBB28_60:
.Ltmp192:
	b	.LBB28_62
.LBB28_61:
.Ltmp189:
.LBB28_62:
	move	$fp, $a0
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB28_64
# %bb.63:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB28_64:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit68
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end28:
	.size	_ZN2PP3Cmd12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end28-_ZN2PP3Cmd12get_bool_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table28:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Lfunc_begin11-.Lfunc_begin11  # >> Call Site 1 <<
	.uleb128 .Ltmp172-.Lfunc_begin11        #   Call between .Lfunc_begin11 and .Ltmp172
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp172-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Ltmp173-.Ltmp172              #   Call between .Ltmp172 and .Ltmp173
	.uleb128 .Ltmp174-.Lfunc_begin11        #     jumps to .Ltmp174
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp175-.Lfunc_begin11        # >> Call Site 3 <<
	.uleb128 .Ltmp176-.Ltmp175              #   Call between .Ltmp175 and .Ltmp176
	.uleb128 .Ltmp177-.Lfunc_begin11        #     jumps to .Ltmp177
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp178-.Lfunc_begin11        # >> Call Site 4 <<
	.uleb128 .Ltmp179-.Ltmp178              #   Call between .Ltmp178 and .Ltmp179
	.uleb128 .Ltmp180-.Lfunc_begin11        #     jumps to .Ltmp180
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp181-.Lfunc_begin11        # >> Call Site 5 <<
	.uleb128 .Ltmp182-.Ltmp181              #   Call between .Ltmp181 and .Ltmp182
	.uleb128 .Ltmp183-.Lfunc_begin11        #     jumps to .Ltmp183
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp184-.Lfunc_begin11        # >> Call Site 6 <<
	.uleb128 .Ltmp185-.Ltmp184              #   Call between .Ltmp184 and .Ltmp185
	.uleb128 .Ltmp186-.Lfunc_begin11        #     jumps to .Ltmp186
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp187-.Lfunc_begin11        # >> Call Site 7 <<
	.uleb128 .Ltmp188-.Ltmp187              #   Call between .Ltmp187 and .Ltmp188
	.uleb128 .Ltmp189-.Lfunc_begin11        #     jumps to .Ltmp189
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp190-.Lfunc_begin11        # >> Call Site 8 <<
	.uleb128 .Ltmp191-.Ltmp190              #   Call between .Ltmp190 and .Ltmp191
	.uleb128 .Ltmp192-.Lfunc_begin11        #     jumps to .Ltmp192
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp193-.Lfunc_begin11        # >> Call Site 9 <<
	.uleb128 .Ltmp194-.Ltmp193              #   Call between .Ltmp193 and .Ltmp194
	.uleb128 .Ltmp195-.Lfunc_begin11        #     jumps to .Ltmp195
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp194-.Lfunc_begin11        # >> Call Site 10 <<
	.uleb128 .Lfunc_end28-.Ltmp194          #   Call between .Ltmp194 and .Lfunc_end28
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end11:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception12
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	st.d	$s2, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 128                   # 8-byte Folded Spill
	st.d	$s4, $sp, 120                   # 8-byte Folded Spill
	st.d	$s5, $sp, 112                   # 8-byte Folded Spill
	st.d	$s6, $sp, 104                   # 8-byte Folded Spill
	st.d	$s7, $sp, 96                    # 8-byte Folded Spill
	st.d	$s8, $sp, 88                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a5, $a1, 8
	st.d	$a1, $sp, 40                    # 8-byte Folded Spill
	ld.d	$a4, $a1, 0
	sub.d	$a1, $a5, $a4
	srai.d	$s2, $a1, 2
	addi.w	$s3, $s2, 0
	move	$fp, $a3
	move	$s1, $a2
	move	$s0, $a0
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	blez	$s3, .LBB29_2
# %bb.1:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11find_equalsEv)
	jirl	$ra, $ra, 0
	addi.d	$a0, $a0, -1
	sltui	$s6, $a0, 1
	b	.LBB29_3
.LBB29_2:
	move	$s6, $zero
.LBB29_3:
	slti	$a0, $s3, 1
	or	$s4, $a0, $s6
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	addi.w	$a2, $s2, 5
	masknez	$a4, $a2, $s4
	ori	$s5, $zero, 3
	sub.d	$a3, $a1, $a0
	ld.d	$a5, $s0, 208
	ld.d	$a6, $s0, 216
	srli.d	$a3, $a3, 3
	sltu	$a1, $zero, $a1
	sub.d	$a3, $a3, $a1
	sub.d	$a1, $a5, $a6
	srli.d	$a5, $a1, 7
	ld.d	$a6, $s0, 192
	ld.d	$a1, $s0, 176
	alsl.d	$a5, $a3, $a5, 2
	maskeqz	$a3, $s5, $s4
	or	$s8, $a3, $a4
	sub.d	$a4, $a6, $a1
	srli.d	$a4, $a4, 7
	add.w	$s7, $a5, $a4
	blt	$s7, $s8, .LBB29_7
# %bb.4:
	st.d	$s8, $sp, 0                     # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	addi.d	$a2, $s2, 3
	bstrpick.d	$a2, $a2, 31, 0
	ori	$a3, $zero, 1
	ld.d	$a4, $s0, 184
	maskeqz	$a3, $a3, $s4
	masknez	$a2, $a2, $s4
	or	$s8, $a3, $a2
	sub.d	$a2, $a1, $a4
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s8
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	bltz	$a2, .LBB29_10
# %bb.5:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB29_19
# %bb.6:
	slli.d	$a0, $s8, 7
	add.d	$a0, $a1, $a0
	b	.LBB29_21
.LBB29_7:
	add.d	$a0, $s2, $a2
	addi.w	$a0, $a0, -1
	masknez	$a0, $a0, $s4
	or	$s2, $a3, $a0
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.34)
	addi.d	$a1, $a0, %pc_lo12(.L.str.34)
	ori	$a2, $zero, 38
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s2, $a1, 240
	beqz	$s2, .LBB29_295
# %bb.8:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a1, $s2, 56
	beqz	$a1, .LBB29_11
# %bb.9:
	ld.bu	$a1, $s2, 67
	b	.LBB29_12
.LBB29_10:
	srai.d	$a1, $a2, 2
	b	.LBB29_20
.LBB29_11:
	move	$s3, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s3
.LBB29_12:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.35)
	addi.d	$a1, $a0, %pc_lo12(.L.str.35)
	ori	$a2, $zero, 22
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s0, 208
	ld.d	$a3, $s0, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s0, 192
	ld.d	$a4, $s0, 176
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srai.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo9_M_insertImEERSoT_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB29_295
# %bb.13:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i219
	ld.bu	$a1, $s0, 56
	beqz	$a1, .LBB29_15
# %bb.14:
	ld.bu	$a1, $s0, 67
	b	.LBB29_16
.LBB29_15:
	move	$s1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s1
.LBB29_16:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit222
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB29_295
# %bb.17:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i224
	ld.bu	$a1, $s0, 56
	beqz	$a1, .LBB29_292
.LBB29_18:
	ld.bu	$a1, $s0, 67
	b	.LBB29_293
.LBB29_19:
	srli.d	$a1, $a2, 2
.LBB29_20:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_21:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$s2, $sp, 64
	st.d	$s2, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 80
	move	$a0, $s2
	bltu	$a1, $a2, .LBB29_23
# %bb.22:                               # %.noexc.i.i
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB29_23:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	beq	$a1, $a2, .LBB29_27
# %bb.24:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB29_26
# %bb.25:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB29_27
.LBB29_26:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB29_27:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 48
	ori	$s3, $zero, 1
	st.d	$a1, $sp, 56
	bne	$a1, $s3, .LBB29_29
# %bb.28:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -61
	sltu	$s3, $zero, $a1
.LBB29_29:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	beq	$a0, $s2, .LBB29_31
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_31:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	beqz	$s3, .LBB29_72
# %bb.32:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	alsl.w	$a0, $a0, $s5, 1
	ori	$a1, $zero, 2
	ld.d	$a2, $s0, 176
	ld.d	$a3, $s0, 184
	maskeqz	$a4, $a1, $s4
	masknez	$a5, $a0, $s4
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a3
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s8
	or	$s3, $a4, $a5
	bltz	$a1, .LBB29_35
# %bb.33:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB29_36
# %bb.34:
	slli.d	$a0, $s8, 7
	add.d	$a0, $a2, $a0
	b	.LBB29_38
.LBB29_35:
	srai.d	$a2, $a1, 2
	b	.LBB29_37
.LBB29_36:
	srli.d	$a2, $a1, 2
.LBB29_37:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_38:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit121
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s4, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.37)
	addi.d	$a1, $a0, %pc_lo12(.L.str.37)
	ori	$a2, $zero, 35
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s5, $a1, 240
	beqz	$s5, .LBB29_295
# %bb.39:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i229
	ld.bu	$a1, $s5, 56
	beqz	$a1, .LBB29_41
# %bb.40:
	ld.bu	$a1, $s5, 67
	b	.LBB29_42
.LBB29_41:
	move	$s2, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s2
.LBB29_42:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit232
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.38)
	addi.d	$a1, $a0, %pc_lo12(.L.str.38)
	ori	$a2, $zero, 15
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s4
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.39)
	addi.d	$a1, $a0, %pc_lo12(.L.str.39)
	ori	$a2, $zero, 5
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s8
	bltz	$a1, .LBB29_45
# %bb.43:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB29_46
# %bb.44:
	slli.d	$a0, $s8, 7
	add.d	$a0, $a2, $a0
	b	.LBB29_48
.LBB29_45:
	srai.d	$a2, $a1, 2
	b	.LBB29_47
.LBB29_46:
	srli.d	$a2, $a1, 2
.LBB29_47:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_48:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit123
	addi.d	$s5, $sp, 64
	st.d	$s5, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 80
	move	$a0, $s5
	bltu	$a1, $a2, .LBB29_50
# %bb.49:                               # %.noexc.i.i125
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB29_50:                              # %._crit_edge.i.i.i124
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
	beq	$a1, $a2, .LBB29_54
# %bb.51:                               # %._crit_edge.i.i.i124
	bnez	$a1, .LBB29_53
# %bb.52:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB29_54
.LBB29_53:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB29_54:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit126
	ld.d	$a2, $sp, 80
	ld.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
.Ltmp196:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp197:
# %bb.55:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB29_296
# %bb.56:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i234
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB29_58
# %bb.57:
	ld.bu	$a0, $s4, 67
	b	.LBB29_60
.LBB29_58:
.Ltmp198:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp199:
# %bb.59:                               # %.noexc237
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp200:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp201:
.LBB29_60:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp202:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp203:
# %bb.61:                               # %.noexc239
.Ltmp204:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp205:
# %bb.62:                               # %_ZNSolsEPFRSoS_E.exit
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB29_296
# %bb.63:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i243
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB29_65
# %bb.64:
	ld.bu	$a0, $s4, 67
	b	.LBB29_67
.LBB29_65:
.Ltmp206:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp207:
# %bb.66:                               # %.noexc248
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp208:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp209:
.LBB29_67:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i245
.Ltmp210:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp211:
# %bb.68:                               # %.noexc250
.Ltmp212:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp213:
# %bb.69:                               # %_ZNSolsEPFRSoS_E.exit127
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB29_71
# %bb.70:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i128
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_71:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit130
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB29_72:
	ld.d	$s8, $sp, 16                    # 8-byte Folded Reload
	beqz	$s8, .LBB29_77
# %bb.73:                               # %.critedge
	beqz	$s6, .LBB29_80
# %bb.74:                               # %.critedge117.preheader
	ld.d	$a6, $sp, 24                    # 8-byte Folded Reload
	blez	$s8, .LBB29_255
# %bb.75:                               # %.lr.ph382
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a0, $a0, %pc_lo12(_ZN2PPL10index_baseE)
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	bstrpick.d	$a2, $a6, 30, 0
	ori	$a3, $zero, 8
	bgeu	$a2, $a3, .LBB29_85
# %bb.76:
	move	$a3, $zero
	b	.LBB29_88
.LBB29_77:
	ld.d	$a2, $s0, 176
	ld.d	$a0, $s0, 184
	ld.d	$a1, $s0, 200
	sub.d	$a0, $a2, $a0
	srai.d	$a4, $a0, 7
	addi.w	$s4, $zero, -2
	addi.d	$a3, $a4, 2
	blt	$a4, $s4, .LBB29_83
# %bb.78:
	ori	$a0, $zero, 4
	ld.d	$s8, $sp, 0                     # 8-byte Folded Reload
	bgeu	$a3, $a0, .LBB29_90
# %bb.79:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit138.thread
	ld.w	$a1, $a2, 296
	ori	$a0, $zero, 1
	bne	$a1, $a0, .LBB29_94
	b	.LBB29_294
.LBB29_80:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	ld.d	$s7, $sp, 8                     # 8-byte Folded Reload
	blt	$a3, $s7, .LBB29_84
# %bb.81:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB29_95
# %bb.82:
	addi.d	$a0, $a2, 128
	b	.LBB29_97
.LBB29_83:
	srai.d	$a0, $a3, 2
	ld.d	$s8, $sp, 0                     # 8-byte Folded Reload
	b	.LBB29_91
.LBB29_84:
	srai.d	$a2, $a1, 2
	b	.LBB29_96
.LBB29_85:                              # %vector.ph
	bstrpick.d	$a3, $a6, 30, 3
	slli.d	$a3, $a3, 3
	vreplgr2vr.w	$vr0, $a0
	addi.d	$a4, $a1, 16
	move	$a5, $a3
	.p2align	4, , 16
.LBB29_86:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vst	$vr0, $a4, -16
	vst	$vr0, $a4, 0
	addi.d	$a5, $a5, -8
	addi.d	$a4, $a4, 32
	bnez	$a5, .LBB29_86
# %bb.87:                               # %middle.block
	beq	$a2, $a3, .LBB29_252
.LBB29_88:                              # %.critedge117.preheader437
	alsl.d	$a1, $a3, $a1, 2
	sub.d	$a2, $a2, $a3
	.p2align	4, , 16
.LBB29_89:                              # %.critedge117
                                        # =>This Inner Loop Header: Depth=1
	st.w	$a0, $a1, 0
	addi.d	$a2, $a2, -1
	addi.d	$a1, $a1, 4
	bnez	$a2, .LBB29_89
	b	.LBB29_252
.LBB29_90:
	srli.d	$a0, $a3, 2
.LBB29_91:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit138
	slli.d	$a5, $a0, 3
	ldx.d	$a5, $a1, $a5
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a3, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a5, $a0
	ld.w	$a5, $a0, 40
	ori	$a0, $zero, 1
	beq	$a5, $a0, .LBB29_294
# %bb.92:
	blt	$a4, $s4, .LBB29_112
# %bb.93:
	ori	$a0, $zero, 3
	bltu	$a0, $a3, .LBB29_256
.LBB29_94:                              # %.thread370
	addi.d	$a0, $a2, 256
	b	.LBB29_258
.LBB29_95:
	srli.d	$a2, $a1, 2
.LBB29_96:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_97:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit157
	addi.d	$s2, $sp, 64
	st.d	$s2, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 80
	move	$a0, $s2
	bltu	$a1, $a2, .LBB29_99
# %bb.98:                               # %.noexc.i.i159
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB29_99:                              # %._crit_edge.i.i.i158
	beq	$a1, $s7, .LBB29_103
# %bb.100:                              # %._crit_edge.i.i.i158
	bnez	$a1, .LBB29_102
# %bb.101:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB29_103
.LBB29_102:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB29_103:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit160
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 48
	ori	$s3, $zero, 1
	st.d	$a1, $sp, 56
	bne	$a1, $s3, .LBB29_105
# %bb.104:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -40
	sltu	$s3, $zero, $a1
.LBB29_105:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit162
	beq	$a0, $s2, .LBB29_107
# %bb.106:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i163
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_107:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit165
	ld.d	$a1, $s0, 176
	ld.d	$a2, $s0, 184
	ld.d	$a0, $s0, 200
	beqz	$s3, .LBB29_153
# %bb.108:
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s7, .LBB29_111
# %bb.109:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB29_113
# %bb.110:
	addi.d	$a0, $a1, 128
	b	.LBB29_115
.LBB29_111:
	srai.d	$a1, $a2, 2
	b	.LBB29_114
.LBB29_112:
	srai.d	$a0, $a3, 2
	b	.LBB29_257
.LBB29_113:
	srli.d	$a1, $a2, 2
.LBB29_114:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_115:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit167
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.43)
	addi.d	$a1, $a0, %pc_lo12(.L.str.43)
	ori	$a2, $zero, 73
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB29_295
# %bb.116:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i277
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB29_118
# %bb.117:
	ld.bu	$a0, $s4, 67
	b	.LBB29_119
.LBB29_118:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.LBB29_119:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit281
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.44)
	addi.d	$a1, $a0, %pc_lo12(.L.str.44)
	ori	$a2, $zero, 13
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 240
	ld.d	$a2, $s0, 248
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.45)
	addi.d	$a1, $a0, %pc_lo12(.L.str.45)
	ori	$a2, $zero, 11
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB29_295
# %bb.120:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i283
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB29_122
# %bb.121:
	ld.bu	$a0, $s5, 67
	b	.LBB29_123
.LBB29_122:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.LBB29_123:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit287
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	blt	$a3, $s7, .LBB29_126
# %bb.124:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB29_127
# %bb.125:
	addi.d	$a0, $a2, 128
	b	.LBB29_129
.LBB29_126:
	srai.d	$a2, $a1, 2
	b	.LBB29_128
.LBB29_127:
	srli.d	$a2, $a1, 2
.LBB29_128:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_129:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit169
	addi.d	$s5, $sp, 64
	st.d	$s5, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 80
	move	$a0, $s5
	bltu	$a1, $a2, .LBB29_131
# %bb.130:                              # %.noexc.i.i171
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB29_131:                             # %._crit_edge.i.i.i170
	beq	$a1, $s7, .LBB29_135
# %bb.132:                              # %._crit_edge.i.i.i170
	bnez	$a1, .LBB29_134
# %bb.133:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB29_135
.LBB29_134:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB29_135:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit172
	ld.d	$a2, $sp, 80
	ld.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
.Ltmp214:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp215:
# %bb.136:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit173
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB29_298
# %bb.137:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i289
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB29_139
# %bb.138:
	ld.bu	$a0, $s4, 67
	b	.LBB29_141
.LBB29_139:
.Ltmp216:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp217:
# %bb.140:                              # %.noexc294
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp218:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp219:
.LBB29_141:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i291
.Ltmp220:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp221:
# %bb.142:                              # %.noexc296
.Ltmp222:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp223:
# %bb.143:                              # %_ZNSolsEPFRSoS_E.exit174
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB29_298
# %bb.144:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i300
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB29_146
# %bb.145:
	ld.bu	$a0, $s4, 67
	b	.LBB29_148
.LBB29_146:
.Ltmp224:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp225:
# %bb.147:                              # %.noexc305
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp226:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp227:
.LBB29_148:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i302
.Ltmp228:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp229:
# %bb.149:                              # %.noexc307
.Ltmp230:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp231:
# %bb.150:                              # %_ZNSolsEPFRSoS_E.exit175
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB29_152
# %bb.151:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i176
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_152:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit178
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
	ld.d	$a1, $s0, 176
	ld.d	$a2, $s0, 184
	ld.d	$a0, $s0, 200
.LBB29_153:
	ld.d	$a3, $sp, 32                    # 8-byte Folded Reload
	slli.d	$a3, $a3, 30
	ori	$a4, $zero, 0
	lu32i.d	$a4, 2
	add.d	$a3, $a3, $a4
	srai.d	$s6, $a3, 32
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s6
	bltz	$a2, .LBB29_156
# %bb.154:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB29_157
# %bb.155:
	slli.d	$a0, $s6, 7
	add.d	$a0, $a1, $a0
	b	.LBB29_159
.LBB29_156:
	srai.d	$a1, $a2, 2
	b	.LBB29_158
.LBB29_157:
	srli.d	$a1, $a2, 2
.LBB29_158:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_159:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit186
	addi.d	$s2, $sp, 64
	st.d	$s2, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 80
	move	$a0, $s2
	bltu	$a1, $a2, .LBB29_161
# %bb.160:                              # %.noexc.i.i188
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB29_161:                             # %._crit_edge.i.i.i187
	beq	$a1, $s7, .LBB29_165
# %bb.162:                              # %._crit_edge.i.i.i187
	bnez	$a1, .LBB29_164
# %bb.163:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB29_165
.LBB29_164:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB29_165:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit189
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 48
	ori	$s3, $zero, 1
	st.d	$a1, $sp, 56
	bne	$a1, $s3, .LBB29_167
# %bb.166:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -41
	sltu	$s3, $zero, $a1
.LBB29_167:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit191
	beq	$a0, $s2, .LBB29_169
# %bb.168:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i192
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_169:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit194
	beqz	$s3, .LBB29_214
# %bb.170:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s6
	bltz	$a1, .LBB29_173
# %bb.171:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB29_174
# %bb.172:
	slli.d	$a0, $s6, 7
	add.d	$a0, $a2, $a0
	b	.LBB29_176
.LBB29_173:
	srai.d	$a2, $a1, 2
	b	.LBB29_175
.LBB29_174:
	srli.d	$a2, $a1, 2
.LBB29_175:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_176:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit196
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.48)
	addi.d	$a1, $a0, %pc_lo12(.L.str.48)
	ori	$a2, $zero, 74
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB29_295
# %bb.177:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i311
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB29_179
# %bb.178:
	ld.bu	$a0, $s4, 67
	b	.LBB29_180
.LBB29_179:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.LBB29_180:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit315
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.44)
	addi.d	$a1, $a0, %pc_lo12(.L.str.44)
	ori	$a2, $zero, 13
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 240
	ld.d	$a2, $s0, 248
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.45)
	addi.d	$a1, $a0, %pc_lo12(.L.str.45)
	ori	$a2, $zero, 11
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB29_295
# %bb.181:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i317
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB29_183
# %bb.182:
	ld.bu	$a0, $s5, 67
	b	.LBB29_184
.LBB29_183:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.LBB29_184:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit321
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s6
	bltz	$a1, .LBB29_187
# %bb.185:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB29_188
# %bb.186:
	slli.d	$a0, $s6, 7
	add.d	$a0, $a2, $a0
	b	.LBB29_190
.LBB29_187:
	srai.d	$a2, $a1, 2
	b	.LBB29_189
.LBB29_188:
	srli.d	$a2, $a1, 2
.LBB29_189:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_190:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit198
	addi.d	$s5, $sp, 64
	st.d	$s5, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 80
	move	$a0, $s5
	bltu	$a1, $a2, .LBB29_192
# %bb.191:                              # %.noexc.i.i200
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB29_192:                             # %._crit_edge.i.i.i199
	beq	$a1, $s7, .LBB29_196
# %bb.193:                              # %._crit_edge.i.i.i199
	bnez	$a1, .LBB29_195
# %bb.194:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB29_196
.LBB29_195:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB29_196:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit201
	ld.d	$a2, $sp, 80
	ld.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
.Ltmp232:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp233:
# %bb.197:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit202
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB29_300
# %bb.198:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i323
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB29_200
# %bb.199:
	ld.bu	$a0, $s4, 67
	b	.LBB29_202
.LBB29_200:
.Ltmp234:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp235:
# %bb.201:                              # %.noexc328
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp236:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp237:
.LBB29_202:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i325
.Ltmp238:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp239:
# %bb.203:                              # %.noexc330
.Ltmp240:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp241:
# %bb.204:                              # %_ZNSolsEPFRSoS_E.exit203
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB29_300
# %bb.205:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i334
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB29_207
# %bb.206:
	ld.bu	$a0, $s4, 67
	b	.LBB29_209
.LBB29_207:
.Ltmp242:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp243:
# %bb.208:                              # %.noexc339
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp244:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp245:
.LBB29_209:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i336
.Ltmp246:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp247:
# %bb.210:                              # %.noexc341
.Ltmp248:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp249:
# %bb.211:                              # %_ZNSolsEPFRSoS_E.exit204
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB29_213
# %bb.212:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i205
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_213:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit207
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB29_214:
	blez	$s8, .LBB29_255
# %bb.215:                              # %.lr.ph
	move	$s8, $zero
	addi.d	$a0, $s1, 16
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	addi.d	$a0, $s1, 256
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	bstrpick.d	$a0, $a0, 30, 0
	sub.d	$s7, $zero, $a0
	ori	$s6, $zero, 1
	pcalau12i	$s3, %pc_hi20(_ZN2PPL10index_baseE)
	pcalau12i	$a0, %pc_hi20(.L.str.49)
	addi.d	$a0, $a0, %pc_lo12(.L.str.49)
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ori	$s2, $zero, 1
.LBB29_216:                             # %.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB29_218 Depth 2
	slli.d	$s4, $s8, 2
	slli.d	$a0, $s8, 7
	addi.d	$s8, $s8, 1
	addi.d	$s5, $a0, 256
	b	.LBB29_218
	.p2align	4, , 16
.LBB29_217:                             #   in Loop: Header=BB29_218 Depth=2
	addi.d	$s8, $s8, 1
	addi.d	$s4, $s4, 4
	add.d	$a0, $s7, $s8
	addi.d	$s5, $s5, 128
	beq	$a0, $s6, .LBB29_249
.LBB29_218:                             #   Parent Loop BB29_216 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s8, $a1
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB29_221
# %bb.219:                              #   in Loop: Header=BB29_218 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB29_222
# %bb.220:                              #   in Loop: Header=BB29_218 Depth=2
	add.d	$a0, $a2, $s5
	b	.LBB29_224
	.p2align	4, , 16
.LBB29_221:                             #   in Loop: Header=BB29_218 Depth=2
	srai.d	$a2, $a3, 2
	b	.LBB29_223
	.p2align	4, , 16
.LBB29_222:                             #   in Loop: Header=BB29_218 Depth=2
	srli.d	$a2, $a3, 2
.LBB29_223:                             #   in Loop: Header=BB29_218 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s8, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 128
.LBB29_224:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit215
                                        #   in Loop: Header=BB29_218 Depth=2
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a1, $a1, 0
	stx.w	$a0, $a1, $s4
	ld.w	$a1, $fp, 0
	blt	$s6, $a1, .LBB29_217
# %bb.225:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit215
                                        #   in Loop: Header=BB29_218 Depth=2
	ld.w	$a1, $s3, %pc_lo12(_ZN2PPL10index_baseE)
	bge	$a0, $a1, .LBB29_217
# %bb.226:                              #   in Loop: Header=BB29_216 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $a1, $s8
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB29_229
# %bb.227:                              #   in Loop: Header=BB29_216 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB29_230
# %bb.228:                              #   in Loop: Header=BB29_216 Depth=1
	add.d	$a0, $a2, $s5
	b	.LBB29_232
.LBB29_229:                             #   in Loop: Header=BB29_216 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB29_231
.LBB29_230:                             #   in Loop: Header=BB29_216 Depth=1
	srli.d	$a2, $a3, 2
.LBB29_231:                             #   in Loop: Header=BB29_216 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $a1, $s8
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 128
.LBB29_232:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit217
                                        #   in Loop: Header=BB29_216 Depth=1
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 54
	ld.d	$s2, $sp, 32                    # 8-byte Folded Reload
	move	$a0, $s2
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s3, %pc_lo12(_ZN2PPL10index_baseE)
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s5, $a1, 240
	beqz	$s5, .LBB29_295
# %bb.233:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i345
                                        #   in Loop: Header=BB29_216 Depth=1
	ld.bu	$a1, $s5, 56
	beqz	$a1, .LBB29_235
# %bb.234:                              #   in Loop: Header=BB29_216 Depth=1
	ld.bu	$a1, $s5, 67
	b	.LBB29_236
.LBB29_235:                             #   in Loop: Header=BB29_216 Depth=1
	move	$s2, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s2
.LBB29_236:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit349
                                        #   in Loop: Header=BB29_216 Depth=1
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a1, $a0, %pc_lo12(.L.str.50)
	ori	$a2, $zero, 53
	ld.d	$s2, $sp, 32                    # 8-byte Folded Reload
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	ldx.d	$s5, $a1, $a0
	beqz	$s5, .LBB29_295
# %bb.237:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i351
                                        #   in Loop: Header=BB29_216 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB29_239
# %bb.238:                              #   in Loop: Header=BB29_216 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB29_240
.LBB29_239:                             #   in Loop: Header=BB29_216 Depth=1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.LBB29_240:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit355
                                        #   in Loop: Header=BB29_216 Depth=1
	ext.w.b	$a1, $a0
	ld.d	$s2, $sp, 32                    # 8-byte Folded Reload
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.51)
	addi.d	$a1, $a0, %pc_lo12(.L.str.51)
	ori	$a2, $zero, 20
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ldx.w	$a1, $a0, $s4
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s5, $a1, 240
	beqz	$s5, .LBB29_295
# %bb.241:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i357
                                        #   in Loop: Header=BB29_216 Depth=1
	ld.bu	$a1, $s5, 56
	beqz	$a1, .LBB29_243
# %bb.242:                              #   in Loop: Header=BB29_216 Depth=1
	ld.bu	$a1, $s5, 67
	b	.LBB29_244
.LBB29_243:                             #   in Loop: Header=BB29_216 Depth=1
	move	$s2, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s2
.LBB29_244:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit361
                                        #   in Loop: Header=BB29_216 Depth=1
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s5, $a1, 240
	beqz	$s5, .LBB29_295
# %bb.245:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i363
                                        #   in Loop: Header=BB29_216 Depth=1
	ld.bu	$a1, $s5, 56
	beqz	$a1, .LBB29_247
# %bb.246:                              #   in Loop: Header=BB29_216 Depth=1
	ld.bu	$a1, $s5, 67
	b	.LBB29_248
.LBB29_247:                             #   in Loop: Header=BB29_216 Depth=1
	move	$s2, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s2
.LBB29_248:                             # %.thread
                                        #   in Loop: Header=BB29_216 Depth=1
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	add.d	$a0, $s7, $s8
	move	$s2, $zero
	bnez	$a0, .LBB29_216
	b	.LBB29_250
.LBB29_249:                             # %._crit_edge
	andi	$a0, $s2, 1
	bnez	$a0, .LBB29_251
.LBB29_250:                             # %._crit_edge.thread413
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB29_251:                             # %.loopexit374
	ld.d	$a6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	blez	$a0, .LBB29_255
.LBB29_252:                             # %.lr.ph386
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a1, $a0, 0
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a2, $a0, %pc_lo12(_ZN2PPL10index_baseE)
	bstrpick.d	$a0, $a6, 30, 0
	addi.d	$a3, $a0, -1
	.p2align	4, , 16
.LBB29_253:                             # =>This Inner Loop Header: Depth=1
	ld.w	$a4, $a1, 0
	slt	$a0, $a4, $a2
	xori	$a0, $a0, 1
	blt	$a4, $a2, .LBB29_294
# %bb.254:                              #   in Loop: Header=BB29_253 Depth=1
	sltu	$a4, $zero, $a3
	addi.d	$a3, $a3, -1
	addi.d	$a1, $a1, 4
	bnez	$a4, .LBB29_253
	b	.LBB29_294
.LBB29_255:
	ori	$a0, $zero, 1
	b	.LBB29_294
.LBB29_256:
	srli.d	$a0, $a3, 2
.LBB29_257:
	slli.d	$a2, $a0, 3
	ldx.d	$a1, $a1, $a2
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a3, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB29_258:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit140
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.40)
	addi.d	$a1, $a0, %pc_lo12(.L.str.40)
	ori	$a2, $zero, 29
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 2
	blt	$a3, $s4, .LBB29_261
# %bb.259:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB29_262
# %bb.260:
	addi.d	$a0, $a2, 256
	b	.LBB29_264
.LBB29_261:
	srai.d	$a2, $a1, 2
	b	.LBB29_263
.LBB29_262:
	srli.d	$a2, $a1, 2
.LBB29_263:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_264:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit142
	addi.d	$s5, $sp, 64
	st.d	$s5, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 80
	move	$a0, $s5
	bltu	$a1, $a2, .LBB29_266
# %bb.265:                              # %.noexc.i.i144
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB29_266:                             # %._crit_edge.i.i.i143
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
	beq	$a1, $a2, .LBB29_270
# %bb.267:                              # %._crit_edge.i.i.i143
	bnez	$a1, .LBB29_269
# %bb.268:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB29_270
.LBB29_269:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB29_270:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit145
	ld.d	$a2, $sp, 80
	ld.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
.Ltmp256:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp257:
# %bb.271:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit146
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB29_302
# %bb.272:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i254
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB29_274
# %bb.273:
	ld.bu	$a0, $s3, 67
	b	.LBB29_276
.LBB29_274:
.Ltmp258:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp259:
# %bb.275:                              # %.noexc259
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp260:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp261:
.LBB29_276:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i256
.Ltmp262:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp263:
# %bb.277:                              # %.noexc261
.Ltmp264:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp265:
# %bb.278:                              # %_ZNSolsEPFRSoS_E.exit147
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB29_280
# %bb.279:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i148
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_280:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit150
	pcalau12i	$a0, %pc_hi20(.L.str.41)
	addi.d	$a1, $a0, %pc_lo12(.L.str.41)
	ori	$a2, $zero, 17
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 2
	blt	$a3, $s4, .LBB29_283
# %bb.281:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB29_284
# %bb.282:
	addi.d	$a0, $a2, 256
	b	.LBB29_286
.LBB29_283:
	srai.d	$a2, $a1, 2
	b	.LBB29_285
.LBB29_284:
	srli.d	$a2, $a1, 2
.LBB29_285:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB29_286:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit152
	ld.w	$a1, $a0, 40
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB29_295
# %bb.287:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i265
	ld.bu	$a1, $s0, 56
	beqz	$a1, .LBB29_289
# %bb.288:
	ld.bu	$a1, $s0, 67
	b	.LBB29_290
.LBB29_289:
	move	$s1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s1
.LBB29_290:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit269
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB29_295
# %bb.291:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i271
	ld.bu	$a1, $s0, 56
	bnez	$a1, .LBB29_18
.LBB29_292:
	move	$s1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s1
.LBB29_293:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit227
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	slt	$a0, $s7, $s8
	xori	$a0, $a0, 1
	ori	$a1, $zero, 2
	st.w	$a1, $fp, 0
.LBB29_294:                             # %.loopexit
	ld.d	$s8, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB29_295:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB29_296:                             # %.invoke
.Ltmp269:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp270:
# %bb.297:                              # %.cont
.LBB29_298:                             # %.invoke423
.Ltmp253:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp254:
# %bb.299:                              # %.cont424
.LBB29_300:                             # %.invoke425
.Ltmp250:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp251:
# %bb.301:                              # %.cont426
.LBB29_302:
.Ltmp266:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp267:
# %bb.303:                              # %.noexc258
.LBB29_304:
.Ltmp268:
	b	.LBB29_308
.LBB29_305:
.Ltmp252:
	b	.LBB29_308
.LBB29_306:
.Ltmp255:
	b	.LBB29_308
.LBB29_307:
.Ltmp271:
.LBB29_308:
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	beq	$a2, $s5, .LBB29_310
# %bb.309:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i134
	ld.d	$a0, $sp, 64
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB29_310:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end29:
	.size	_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end29-_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table29:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Lfunc_begin12-.Lfunc_begin12  # >> Call Site 1 <<
	.uleb128 .Ltmp196-.Lfunc_begin12        #   Call between .Lfunc_begin12 and .Ltmp196
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp196-.Lfunc_begin12        # >> Call Site 2 <<
	.uleb128 .Ltmp213-.Ltmp196              #   Call between .Ltmp196 and .Ltmp213
	.uleb128 .Ltmp271-.Lfunc_begin12        #     jumps to .Ltmp271
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp213-.Lfunc_begin12        # >> Call Site 3 <<
	.uleb128 .Ltmp214-.Ltmp213              #   Call between .Ltmp213 and .Ltmp214
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp214-.Lfunc_begin12        # >> Call Site 4 <<
	.uleb128 .Ltmp231-.Ltmp214              #   Call between .Ltmp214 and .Ltmp231
	.uleb128 .Ltmp255-.Lfunc_begin12        #     jumps to .Ltmp255
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp231-.Lfunc_begin12        # >> Call Site 5 <<
	.uleb128 .Ltmp232-.Ltmp231              #   Call between .Ltmp231 and .Ltmp232
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp232-.Lfunc_begin12        # >> Call Site 6 <<
	.uleb128 .Ltmp249-.Ltmp232              #   Call between .Ltmp232 and .Ltmp249
	.uleb128 .Ltmp252-.Lfunc_begin12        #     jumps to .Ltmp252
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp249-.Lfunc_begin12        # >> Call Site 7 <<
	.uleb128 .Ltmp256-.Ltmp249              #   Call between .Ltmp249 and .Ltmp256
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp256-.Lfunc_begin12        # >> Call Site 8 <<
	.uleb128 .Ltmp265-.Ltmp256              #   Call between .Ltmp256 and .Ltmp265
	.uleb128 .Ltmp268-.Lfunc_begin12        #     jumps to .Ltmp268
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp265-.Lfunc_begin12        # >> Call Site 9 <<
	.uleb128 .Ltmp269-.Ltmp265              #   Call between .Ltmp265 and .Ltmp269
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp269-.Lfunc_begin12        # >> Call Site 10 <<
	.uleb128 .Ltmp270-.Ltmp269              #   Call between .Ltmp269 and .Ltmp270
	.uleb128 .Ltmp271-.Lfunc_begin12        #     jumps to .Ltmp271
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp253-.Lfunc_begin12        # >> Call Site 11 <<
	.uleb128 .Ltmp254-.Ltmp253              #   Call between .Ltmp253 and .Ltmp254
	.uleb128 .Ltmp255-.Lfunc_begin12        #     jumps to .Ltmp255
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp250-.Lfunc_begin12        # >> Call Site 12 <<
	.uleb128 .Ltmp251-.Ltmp250              #   Call between .Ltmp250 and .Ltmp251
	.uleb128 .Ltmp252-.Lfunc_begin12        #     jumps to .Ltmp252
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp266-.Lfunc_begin12        # >> Call Site 13 <<
	.uleb128 .Ltmp267-.Ltmp266              #   Call between .Ltmp266 and .Ltmp267
	.uleb128 .Ltmp268-.Lfunc_begin12        #     jumps to .Ltmp268
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp267-.Lfunc_begin12        # >> Call Site 14 <<
	.uleb128 .Lfunc_end29-.Ltmp267          #   Call between .Ltmp267 and .Lfunc_end29
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end12:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd13set_processedEb     # -- Begin function _ZN2PP3Cmd13set_processedEb
	.p2align	5
	.type	_ZN2PP3Cmd13set_processedEb,@function
_ZN2PP3Cmd13set_processedEb:            # @_ZN2PP3Cmd13set_processedEb
# %bb.0:
	ld.d	$a3, $a0, 232
	ld.d	$a2, $a0, 200
	sub.d	$a4, $a3, $a2
	srai.d	$a4, $a4, 3
	sltu	$a3, $zero, $a3
	ld.d	$a5, $a0, 208
	ld.d	$a6, $a0, 216
	sub.d	$a4, $a4, $a3
	ld.d	$a7, $a0, 192
	ld.d	$a3, $a0, 176
	sub.d	$a5, $a5, $a6
	srai.d	$a5, $a5, 7
	alsl.d	$a4, $a4, $a5, 2
	sub.d	$a5, $a7, $a3
	srai.d	$a5, $a5, 7
	add.d	$a6, $a4, $a5
	addi.w	$a4, $a6, 0
	blez	$a4, .LBB30_9
# %bb.1:                                # %.lr.ph
	ld.d	$a4, $a0, 184
	move	$a0, $zero
	sub.d	$a4, $a3, $a4
	srai.d	$a5, $a4, 7
	bstrpick.d	$a6, $a6, 30, 0
	ori	$a7, $zero, 3
	b	.LBB30_5
	.p2align	4, , 16
.LBB30_2:                               #   in Loop: Header=BB30_5 Depth=1
	srai.d	$t0, $a5, 2
.LBB30_3:                               #   in Loop: Header=BB30_5 Depth=1
	slli.d	$t1, $t0, 3
	ldx.d	$t1, $a2, $t1
	slli.d	$t0, $t0, 9
	sub.d	$t0, $t1, $t0
	add.d	$t0, $t0, $a4
.LBB30_4:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB30_5 Depth=1
	st.b	$a1, $t0, 36
	addi.d	$a0, $a0, 1
	addi.d	$a5, $a5, 1
	addi.d	$a6, $a6, -1
	addi.d	$a4, $a4, 128
	beqz	$a6, .LBB30_9
.LBB30_5:                               # =>This Inner Loop Header: Depth=1
	bltz	$a5, .LBB30_2
# %bb.6:                                #   in Loop: Header=BB30_5 Depth=1
	bltu	$a7, $a5, .LBB30_8
# %bb.7:                                #   in Loop: Header=BB30_5 Depth=1
	slli.d	$t0, $a0, 7
	add.d	$t0, $a3, $t0
	b	.LBB30_4
	.p2align	4, , 16
.LBB30_8:                               #   in Loop: Header=BB30_5 Depth=1
	srli.d	$t0, $a5, 2
	b	.LBB30_3
.LBB30_9:                               # %._crit_edge
	ret
.Lfunc_end30:
	.size	_ZN2PP3Cmd13set_processedEb, .Lfunc_end30-_ZN2PP3Cmd13set_processedEb
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_
.LCPI31_0:
	.word	0                               # 0x0
	.word	4                               # 0x4
	.word	4                               # 0x4
	.word	4                               # 0x4
	.text
	.globl	_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_
	.p2align	5
	.type	_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_,@function
_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_: # @_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a6, $a1, 8
	ld.d	$a7, $a1, 0
	sub.d	$a6, $a6, $a7
	srai.d	$a6, $a6, 2
	addi.w	$a7, $a6, 0
	st.d	$a5, $sp, 48                    # 8-byte Folded Spill
	move	$s4, $a3
	move	$s1, $a0
	beqz	$a7, .LBB31_27
# %bb.1:
	move	$s2, $a4
	st.d	$a7, $sp, 24                    # 8-byte Folded Spill
	st.d	$a6, $sp, 16                    # 8-byte Folded Spill
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11find_equalsEv)
	jirl	$ra, $ra, 0
	move	$a7, $zero
	addi.d	$a1, $s2, 16
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	addi.d	$fp, $a0, 1
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	slli.d	$a1, $a0, 7
	addi.d	$s3, $a1, 128
	pcalau12i	$a1, %pc_hi20(.L.str.52)
	addi.d	$s7, $a1, %pc_lo12(.L.str.52)
	pcalau12i	$a1, %pc_hi20(.L.str.53)
	addi.d	$s8, $a1, %pc_lo12(.L.str.53)
	b	.LBB31_5
.LBB31_2:                               #   in Loop: Header=BB31_5 Depth=1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.LBB31_3:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
                                        #   in Loop: Header=BB31_5 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ori	$a1, $zero, 2
	st.w	$a1, $a0, 0
	ld.w	$a7, $s4, 0
	move	$s2, $s0
.LBB31_4:                               #   in Loop: Header=BB31_5 Depth=1
	add.d	$a7, $a7, $s6
	addi.d	$fp, $fp, 1
	addi.d	$s3, $s3, 128
.LBB31_5:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s1, 232
	ld.d	$a1, $s1, 200
	sub.d	$a3, $a2, $a1
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	ld.d	$a4, $s1, 208
	ld.d	$a5, $s1, 216
	sub.d	$a3, $a3, $a2
	ld.d	$a6, $s1, 192
	ld.d	$a2, $s1, 176
	sub.d	$a4, $a4, $a5
	srli.d	$a4, $a4, 7
	alsl.d	$a3, $a3, $a4, 2
	sub.d	$a4, $a6, $a2
	srli.d	$a4, $a4, 7
	add.w	$a3, $a3, $a4
	st.w	$a7, $s4, 0
	bge	$fp, $a3, .LBB31_15
# %bb.6:                                #   in Loop: Header=BB31_5 Depth=1
	ld.d	$a3, $s1, 184
	sub.d	$a3, $a2, $a3
	srai.d	$a3, $a3, 7
	add.d	$a3, $fp, $a3
	bltz	$a3, .LBB31_9
# %bb.7:                                #   in Loop: Header=BB31_5 Depth=1
	ori	$a0, $zero, 3
	bltu	$a0, $a3, .LBB31_10
# %bb.8:                                #   in Loop: Header=BB31_5 Depth=1
	add.d	$a1, $a2, $s3
	ld.w	$s6, $a1, 40
	bgtz	$s6, .LBB31_4
	b	.LBB31_12
	.p2align	4, , 16
.LBB31_9:                               #   in Loop: Header=BB31_5 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB31_11
	.p2align	4, , 16
.LBB31_10:                              #   in Loop: Header=BB31_5 Depth=1
	srli.d	$a2, $a3, 2
.LBB31_11:                              #   in Loop: Header=BB31_5 Depth=1
	slli.d	$a4, $a2, 3
	ldx.d	$a1, $a1, $a4
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a3, $a2
	slli.d	$a2, $a2, 7
	add.d	$a1, $a1, $a2
	ld.w	$s6, $a1, 40
	bgtz	$s6, .LBB31_4
.LBB31_12:                              #   in Loop: Header=BB31_5 Depth=1
	move	$a0, $s1
	move	$s0, $s2
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 24
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	move	$a0, $s2
	move	$a1, $s7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ori	$a2, $zero, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB31_70
# %bb.13:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB31_5 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB31_2
# %bb.14:                               #   in Loop: Header=BB31_5 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB31_3
.LBB31_15:
	ld.d	$fp, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a0, $fp, 0
	ld.w	$s7, $a0, 0
	beqz	$s7, .LBB31_68
# %bb.16:                               # %.preheader86
	ori	$a2, $zero, 2
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	blt	$a1, $a2, .LBB31_23
# %bb.17:                               # %.lr.ph.preheader
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	addi.d	$a1, $a1, 1
	bstrpick.d	$a1, $a1, 31, 0
	addi.d	$a3, $a1, -2
	ori	$a4, $zero, 8
	bltu	$a3, $a4, .LBB31_21
# %bb.18:                               # %vector.ph
	move	$a4, $a3
	bstrins.d	$a4, $zero, 2, 0
	ori	$a5, $zero, 2
	move	$a2, $a3
	bstrins.d	$a2, $a5, 2, 0
	pcalau12i	$a5, %pc_hi20(.LCPI31_0)
	vld	$vr0, $a5, %pc_lo12(.LCPI31_0)
	vinsgr2vr.w	$vr1, $s7, 0
	ori	$a5, $zero, 1
	vinsgr2vr.w	$vr2, $a5, 0
	vshuf.w	$vr0, $vr2, $vr1
	addi.d	$a5, $a0, 20
	vrepli.w	$vr1, 1
	move	$a6, $a4
	.p2align	4, , 16
.LBB31_19:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr2, $a5, -16
	vld	$vr3, $a5, 0
	vmul.w	$vr0, $vr2, $vr0
	vmul.w	$vr1, $vr3, $vr1
	addi.d	$a6, $a6, -8
	addi.d	$a5, $a5, 32
	bnez	$a6, .LBB31_19
# %bb.20:                               # %middle.block
	vmul.w	$vr0, $vr1, $vr0
	vshuf4i.w	$vr1, $vr0, 14
	vmul.w	$vr0, $vr0, $vr1
	vreplvei.w	$vr1, $vr0, 1
	vmul.w	$vr0, $vr0, $vr1
	vpickve2gr.w	$s7, $vr0, 0
	beq	$a3, $a4, .LBB31_23
.LBB31_21:                              # %.lr.ph.preheader104
	alsl.d	$a0, $a2, $a0, 2
	addi.d	$a0, $a0, -4
	sub.d	$a1, $a1, $a2
	.p2align	4, , 16
.LBB31_22:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a2, $a0, 0
	mul.w	$s7, $a2, $s7
	addi.d	$a1, $a1, -1
	addi.d	$a0, $a0, 4
	bnez	$a1, .LBB31_22
.LBB31_23:                              # %._crit_edge
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a1, $a0, %pc_lo12(_ZN2PPL10index_baseE)
	addi.d	$a0, $sp, 71
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 71
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils9start_dexERSt6vectorIiSaIiEERKS3_)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s4, 0
	sub.d	$a0, $a0, $s7
	add.w	$s4, $a0, $a1
	blez	$s4, .LBB31_30
# %bb.24:
	move	$a0, $s1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.54)
	addi.d	$a1, $a0, %pc_lo12(.L.str.54)
	ori	$a2, $zero, 35
	ld.d	$fp, $sp, 56                    # 8-byte Folded Reload
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	move	$a1, $s7
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s1, $a1, 240
	beqz	$s1, .LBB31_70
# %bb.25:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i60
	ld.bu	$a1, $s1, 56
	beqz	$a1, .LBB31_41
# %bb.26:
	ld.bu	$a1, $s1, 67
	b	.LBB31_42
.LBB31_27:
	ld.d	$a1, $s1, 176
	ld.d	$a2, $s1, 184
	ori	$a3, $zero, 1
	ld.d	$a0, $s1, 200
	st.w	$a3, $s4, 0
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB31_32
# %bb.28:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB31_33
# %bb.29:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
	ori	$a3, $zero, 1
	st.b	$a3, $a1, 36
	addi.d	$a3, $a2, 1
	b	.LBB31_35
.LBB31_30:
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.w	$a0, $a0, 0
	ori	$a1, $zero, 2
	bne	$a0, $a1, .LBB31_59
# %bb.31:
	move	$a0, $zero
	b	.LBB31_69
.LBB31_32:
	srai.d	$a3, $a3, 9
	b	.LBB31_34
.LBB31_33:
	srli.d	$a3, $a2, 2
.LBB31_34:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a0, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	ori	$a4, $zero, 1
	st.b	$a4, $a3, 36
	addi.w	$a4, $zero, -1
	addi.d	$a3, $a2, 1
	blt	$a2, $a4, .LBB31_37
.LBB31_35:
	ori	$a2, $zero, 3
	bltu	$a2, $a3, .LBB31_38
# %bb.36:
	addi.d	$a1, $a1, 128
	b	.LBB31_40
.LBB31_37:
	srai.d	$a1, $a3, 2
	b	.LBB31_39
.LBB31_38:
	srli.d	$a1, $a3, 2
.LBB31_39:
	slli.d	$a2, $a1, 3
	ldx.d	$a0, $a0, $a2
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a3, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB31_40:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit54
	ori	$a0, $zero, 1
	st.b	$a0, $a1, 36
	b	.LBB31_69
.LBB31_41:
	move	$fp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $fp
.LBB31_42:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit63
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.55)
	addi.d	$a1, $a0, %pc_lo12(.L.str.55)
	ori	$a2, $zero, 46
	ld.d	$fp, $sp, 56                    # 8-byte Folded Reload
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB31_70
# %bb.43:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i65
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB31_45
# %bb.44:
	ld.bu	$a0, $s1, 67
	b	.LBB31_46
.LBB31_45:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB31_46:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit68
	ext.w.b	$a1, $a0
	ld.d	$fp, $sp, 56                    # 8-byte Folded Reload
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.56)
	addi.d	$a1, $a0, %pc_lo12(.L.str.56)
	ori	$a2, $zero, 31
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB31_70
# %bb.47:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i70
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB31_49
# %bb.48:
	ld.bu	$a0, $s1, 67
	b	.LBB31_50
.LBB31_49:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB31_50:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit73
	ext.w.b	$a1, $a0
	ld.d	$fp, $sp, 56                    # 8-byte Folded Reload
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.57)
	addi.d	$a1, $a0, %pc_lo12(.L.str.57)
	ori	$a2, $zero, 35
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB31_70
# %bb.51:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i75
	ld.bu	$a1, $s0, 56
	beqz	$a1, .LBB31_53
# %bb.52:
	ld.bu	$a1, $s0, 67
	b	.LBB31_54
.LBB31_53:
	move	$fp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $fp
.LBB31_54:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit78
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB31_70
# %bb.55:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i80
	ld.bu	$a1, $s0, 56
	beqz	$a1, .LBB31_57
# %bb.56:
	ld.bu	$a1, $s0, 67
	b	.LBB31_58
.LBB31_57:
	move	$fp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $fp
.LBB31_58:                              # %.thread
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	move	$a0, $zero
	ori	$a1, $zero, 2
	ld.d	$a2, $sp, 48                    # 8-byte Folded Reload
	st.w	$a1, $a2, 0
	b	.LBB31_69
.LBB31_59:                              # %.preheader
	ld.d	$a6, $sp, 8                     # 8-byte Folded Reload
	bltz	$a6, .LBB31_68
# %bb.60:                               # %.lr.ph95
	ld.d	$a1, $s1, 176
	ld.d	$a0, $s1, 184
	move	$a2, $zero
	ld.d	$a3, $s1, 200
	sub.d	$a4, $a1, $a0
	srai.d	$a5, $a4, 7
	addi.d	$a0, $a6, 1
	bstrpick.d	$a6, $a0, 31, 0
	ori	$a7, $zero, 3
	b	.LBB31_64
	.p2align	4, , 16
.LBB31_61:                              #   in Loop: Header=BB31_64 Depth=1
	srai.d	$a0, $a5, 2
.LBB31_62:                              #   in Loop: Header=BB31_64 Depth=1
	slli.d	$t0, $a0, 3
	ldx.d	$t0, $a3, $t0
	slli.d	$a0, $a0, 9
	sub.d	$a0, $t0, $a0
	add.d	$t0, $a0, $a4
.LBB31_63:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit58
                                        #   in Loop: Header=BB31_64 Depth=1
	ori	$a0, $zero, 1
	st.b	$a0, $t0, 36
	addi.d	$a2, $a2, 1
	addi.d	$a5, $a5, 1
	addi.d	$a6, $a6, -1
	addi.d	$a4, $a4, 128
	beqz	$a6, .LBB31_69
.LBB31_64:                              # =>This Inner Loop Header: Depth=1
	bltz	$a5, .LBB31_61
# %bb.65:                               #   in Loop: Header=BB31_64 Depth=1
	bltu	$a7, $a5, .LBB31_67
# %bb.66:                               #   in Loop: Header=BB31_64 Depth=1
	slli.d	$a0, $a2, 7
	add.d	$t0, $a1, $a0
	b	.LBB31_63
	.p2align	4, , 16
.LBB31_67:                              #   in Loop: Header=BB31_64 Depth=1
	srli.d	$a0, $a5, 2
	b	.LBB31_62
.LBB31_68:
	ori	$a0, $zero, 1
.LBB31_69:
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB31_70:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end31:
	.size	_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_, .Lfunc_end31-_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd11find_equalsEv       # -- Begin function _ZN2PP3Cmd11find_equalsEv
	.p2align	5
	.type	_ZN2PP3Cmd11find_equalsEv,@function
_ZN2PP3Cmd11find_equalsEv:              # @_ZN2PP3Cmd11find_equalsEv
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	move	$s3, $zero
	move	$s2, $zero
	move	$s4, $zero
	addi.d	$s5, $sp, 16
	addi.w	$s0, $zero, -1
	ori	$s6, $zero, 3
	ori	$s7, $zero, 16
	ori	$s8, $zero, 1
	.p2align	4, , 16
.LBB32_1:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s4, $a2, .LBB32_21
# %bb.2:                                #   in Loop: Header=BB32_1 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s4, $a2
	bltz	$a2, .LBB32_5
# %bb.3:                                #   in Loop: Header=BB32_1 Depth=1
	bltu	$s6, $a2, .LBB32_6
# %bb.4:                                #   in Loop: Header=BB32_1 Depth=1
	add.d	$a0, $a1, $s3
	b	.LBB32_8
	.p2align	4, , 16
.LBB32_5:                               #   in Loop: Header=BB32_1 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB32_7
	.p2align	4, , 16
.LBB32_6:                               #   in Loop: Header=BB32_1 Depth=1
	srli.d	$a1, $a2, 2
.LBB32_7:                               #   in Loop: Header=BB32_1 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB32_8:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB32_1 Depth=1
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	st.d	$s5, $sp, 0
	st.d	$a1, $sp, 32
	move	$a0, $s5
	bltu	$a1, $s7, .LBB32_10
# %bb.9:                                # %.noexc.i.i
                                        #   in Loop: Header=BB32_1 Depth=1
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB32_10:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB32_1 Depth=1
	beq	$a1, $s0, .LBB32_13
# %bb.11:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB32_1 Depth=1
	bnez	$a1, .LBB32_15
# %bb.12:                               #   in Loop: Header=BB32_1 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
.LBB32_13:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB32_1 Depth=1
	ld.d	$a1, $sp, 32
	ld.d	$a0, $sp, 0
	st.d	$a1, $sp, 8
	bne	$a1, $s8, .LBB32_16
.LBB32_14:                              #   in Loop: Header=BB32_1 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -61
	sltui	$s1, $a1, 1
	bne	$a0, $s5, .LBB32_17
	b	.LBB32_18
	.p2align	4, , 16
.LBB32_15:                              #   in Loop: Header=BB32_1 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	ld.d	$a0, $sp, 0
	st.d	$a1, $sp, 8
	beq	$a1, $s8, .LBB32_14
.LBB32_16:                              #   in Loop: Header=BB32_1 Depth=1
	move	$s1, $zero
	beq	$a0, $s5, .LBB32_18
.LBB32_17:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB32_1 Depth=1
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB32_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB32_1 Depth=1
	bnez	$s1, .LBB32_20
# %bb.19:                               #   in Loop: Header=BB32_1 Depth=1
	addi.d	$s4, $s4, 1
	addi.w	$s2, $s2, 1
	addi.d	$s3, $s3, 128
	b	.LBB32_1
.LBB32_20:
	move	$s0, $s2
.LBB32_21:                              # %.split.loop.exit11
	move	$a0, $s0
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end32:
	.size	_ZN2PP3Cmd11find_equalsEv, .Lfunc_end32-_ZN2PP3Cmd11find_equalsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception13
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	st.d	$s1, $sp, 192                   # 8-byte Folded Spill
	st.d	$s2, $sp, 184                   # 8-byte Folded Spill
	st.d	$s3, $sp, 176                   # 8-byte Folded Spill
	st.d	$s4, $sp, 168                   # 8-byte Folded Spill
	st.d	$s5, $sp, 160                   # 8-byte Folded Spill
	st.d	$s6, $sp, 152                   # 8-byte Folded Spill
	st.d	$s7, $sp, 144                   # 8-byte Folded Spill
	st.d	$s8, $sp, 136                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$t0, $a6, 0
	move	$s0, $a3
	slli.d	$a3, $a3, 2
	ldx.w	$a6, $t0, $a3
	ld.d	$s8, $sp, 224
	move	$s4, $a7
	move	$s1, $a2
	move	$t1, $a1
	alsl.d	$a7, $s0, $t0, 2
	beqz	$a6, .LBB33_2
# %bb.1:
	addi.d	$a1, $a6, 1
	st.w	$a1, $a7, 0
	bnez	$s8, .LBB33_3
	b	.LBB33_191
.LBB33_2:
	ld.d	$a1, $a5, 0
	slli.d	$a2, $s0, 3
	stx.d	$a0, $a1, $a2
	ld.d	$a1, $a4, 0
	stx.w	$s1, $a1, $a3
	ld.w	$a6, $a7, 0
	addi.d	$a1, $a6, 1
	st.w	$a1, $a7, 0
	beqz	$s8, .LBB33_191
.LBB33_3:
	blez	$a6, .LBB33_191
# %bb.4:
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	ld.d	$fp, $sp, 240
	ld.d	$a6, $sp, 232
	ld.d	$a0, $a4, 0
	ld.d	$a1, $a5, 0
	ld.d	$a2, $s4, 8
	ld.d	$a4, $s4, 0
	ldx.w	$a0, $a0, $a3
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	slli.d	$a0, $s0, 3
	ldx.d	$a0, $a1, $a0
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	sub.d	$s7, $a2, $a4
	ori	$a0, $zero, 2
	srai.d	$s2, $s7, 2
	st.d	$t1, $sp, 24                    # 8-byte Folded Spill
	st.d	$a6, $sp, 32                    # 8-byte Folded Spill
	bne	$s8, $a0, .LBB33_8
# %bb.5:
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a2, $a0, 176
	ld.d	$a1, $a0, 184
	ld.d	$a0, $a0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s1
	bltz	$a1, .LBB33_12
# %bb.6:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB33_13
# %bb.7:
	slli.d	$a0, $s1, 7
	add.d	$a0, $a2, $a0
	b	.LBB33_15
.LBB33_8:
	ori	$a0, $zero, 1
	bne	$s8, $a0, .LBB33_16
# %bb.9:
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a2, $a0, 176
	ld.d	$a1, $a0, 184
	ld.d	$a0, $a0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s1
	bltz	$a1, .LBB33_192
# %bb.10:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB33_193
# %bb.11:
	slli.d	$a0, $s1, 7
	add.d	$a0, $a2, $a0
	b	.LBB33_195
.LBB33_12:
	srai.d	$a2, $a1, 2
	b	.LBB33_14
.LBB33_13:
	srli.d	$a2, $a1, 2
.LBB33_14:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB33_15:                              # %.thread
	move	$a1, $a6
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.LBB33_16:                              # %.thread
	st.d	$zero, $sp, 0                   # 8-byte Folded Spill
	addi.w	$a0, $s2, 0
	bstrpick.d	$s5, $s2, 30, 0
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	blez	$a0, .LBB33_196
.LBB33_17:                              # %.lr.ph
	ld.d	$a0, $s4, 0
	ori	$a1, $zero, 8
	bgeu	$s5, $a1, .LBB33_19
# %bb.18:
	move	$a1, $zero
	ori	$s6, $zero, 1
	b	.LBB33_22
.LBB33_19:                              # %vector.ph
	bstrpick.d	$a1, $s2, 30, 3
	slli.d	$a1, $a1, 3
	vrepli.w	$vr0, 1
	addi.d	$a2, $a0, 16
	move	$a3, $a1
	vori.b	$vr1, $vr0, 0
	.p2align	4, , 16
.LBB33_20:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr2, $a2, -16
	vld	$vr3, $a2, 0
	vmul.w	$vr0, $vr2, $vr0
	vmul.w	$vr1, $vr3, $vr1
	addi.d	$a3, $a3, -8
	addi.d	$a2, $a2, 32
	bnez	$a3, .LBB33_20
# %bb.21:                               # %middle.block
	vmul.w	$vr0, $vr1, $vr0
	vshuf4i.w	$vr1, $vr0, 14
	vmul.w	$vr0, $vr0, $vr1
	vreplvei.w	$vr1, $vr0, 1
	vmul.w	$vr0, $vr0, $vr1
	vpickve2gr.w	$s6, $vr0, 0
	beq	$s5, $a1, .LBB33_24
.LBB33_22:                              # %scalar.ph.preheader
	alsl.d	$a0, $a1, $a0, 2
	sub.d	$a1, $s5, $a1
	.p2align	4, , 16
.LBB33_23:                              # %scalar.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a2, $a0, 0
	mul.w	$s6, $a2, $s6
	addi.d	$a1, $a1, -1
	addi.d	$a0, $a0, 4
	bnez	$a1, .LBB33_23
.LBB33_24:                              # %._crit_edge
	slli.d	$s2, $s7, 30
	srai.d	$s3, $s2, 32
	srli.d	$a0, $s3, 61
	bnez	$a0, .LBB33_197
.LBB33_25:                              # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	st.d	$s1, $sp, 8                     # 8-byte Folded Spill
	beqz	$s2, .LBB33_27
# %bb.26:                               # %.lr.ph.preheader.i.i.i.i.i
	srai.d	$s7, $s2, 30
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $fp
	move	$fp, $s8
	move	$s8, $a0
	st.d	$a0, $sp, 104
	alsl.d	$a0, $s3, $a0, 2
	st.d	$a0, $sp, 120
	move	$a0, $s8
	move	$a1, $zero
	move	$a2, $s7
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s8, $s7
	move	$s8, $fp
	move	$fp, $s1
	b	.LBB33_28
.LBB33_27:                              # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
	move	$a0, $zero
	st.d	$zero, $sp, 120
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 104
.LBB33_28:                              # %.loopexit
	ld.d	$s7, $sp, 40                    # 8-byte Folded Reload
	pcalau12i	$a1, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a1, $a1, %pc_lo12(_ZN2PPL10index_baseE)
	st.d	$a0, $sp, 112
.Ltmp272:
	addi.d	$a0, $sp, 103
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp273:
# %bb.29:
.Ltmp274:
	addi.d	$a0, $sp, 103
	addi.d	$a3, $sp, 104
	move	$a1, $s0
	move	$a2, $s6
	move	$a4, $s4
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils11reverse_dexEiiRSt6vectorIiSaIiEERKS3_)
	jirl	$ra, $ra, 0
.Ltmp275:
# %bb.30:
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	addi.d	$s0, $a0, 16
.Ltmp276:
	pcalau12i	$a0, %pc_hi20(.L.str.196)
	addi.d	$a1, $a0, %pc_lo12(.L.str.196)
	ori	$a2, $zero, 42
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp277:
# %bb.31:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp278:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp279:
# %bb.32:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
.Ltmp280:
	pcalau12i	$a1, %pc_hi20(.L.str.42)
	addi.d	$a1, $a1, %pc_lo12(.L.str.42)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp281:
# %bb.33:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit88.preheader
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	blez	$a0, .LBB33_39
# %bb.34:                               # %.lr.ph293
	move	$s1, $zero
	move	$s4, $zero
	ori	$a0, $zero, 0
	lu32i.d	$a0, -1
	add.d	$a0, $s2, $a0
	srai.d	$s2, $a0, 32
	pcalau12i	$a0, %pc_hi20(.L.str.197)
	addi.d	$s3, $a0, %pc_lo12(.L.str.197)
	b	.LBB33_36
	.p2align	4, , 16
.LBB33_35:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit92
                                        #   in Loop: Header=BB33_36 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s1, $s1, 4
	beq	$s5, $s4, .LBB33_39
.LBB33_36:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $sp, 104
	ldx.w	$a1, $a0, $s1
.Ltmp282:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp283:
# %bb.37:                               #   in Loop: Header=BB33_36 Depth=1
	bge	$s4, $s2, .LBB33_35
# %bb.38:                               #   in Loop: Header=BB33_36 Depth=1
.Ltmp284:
	ori	$a2, $zero, 1
	move	$a0, $s0
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp285:
	b	.LBB33_35
.LBB33_39:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit88._crit_edge
.Ltmp287:
	pcalau12i	$a0, %pc_hi20(.L.str.198)
	addi.d	$a1, $a0, %pc_lo12(.L.str.198)
	ori	$a2, $zero, 4
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp288:
# %bb.40:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit90
	ld.d	$a2, $s7, 176
	ld.d	$a1, $s7, 184
	ld.d	$a0, $s7, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	ld.d	$a4, $sp, 8                     # 8-byte Folded Reload
	add.d	$a1, $a1, $a4
	bltz	$a1, .LBB33_43
# %bb.41:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB33_44
# %bb.42:
	slli.d	$a0, $a4, 7
	add.d	$a0, $a2, $a0
	b	.LBB33_46
.LBB33_43:
	srai.d	$a2, $a1, 2
	b	.LBB33_45
.LBB33_44:
	srli.d	$a2, $a1, 2
.LBB33_45:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB33_46:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit94
	addi.d	$s1, $sp, 80
	st.d	$s1, $sp, 64
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 128
	move	$a0, $s1
	bltu	$a1, $a2, .LBB33_49
# %bb.47:                               # %.noexc.i.i
.Ltmp289:
	addi.d	$a0, $sp, 64
	addi.d	$a1, $sp, 128
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp290:
# %bb.48:                               # %.noexc95
	ld.d	$a1, $sp, 128
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 80
.LBB33_49:                              # %._crit_edge.i.i.i
	addi.w	$s4, $zero, -1
	beq	$a1, $s4, .LBB33_53
# %bb.50:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB33_52
# %bb.51:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB33_53
.LBB33_52:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB33_53:
	ld.d	$a2, $sp, 128
	ld.d	$a1, $sp, 64
	st.d	$a2, $sp, 72
.Ltmp292:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp293:
# %bb.54:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit97
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB33_200
# %bb.55:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB33_57
# %bb.56:
	ld.bu	$a0, $s3, 67
	b	.LBB33_59
.LBB33_57:
.Ltmp294:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp295:
# %bb.58:                               # %.noexc165
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp296:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp297:
.LBB33_59:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp298:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp299:
# %bb.60:                               # %.noexc167
.Ltmp300:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp301:
# %bb.61:                               # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 64
	beq	$a0, $s1, .LBB33_63
# %bb.62:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB33_63:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
.Ltmp302:
	pcalau12i	$a0, %pc_hi20(.L.str.199)
	addi.d	$a1, $a0, %pc_lo12(.L.str.199)
	ori	$a2, $zero, 47
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp303:
# %bb.64:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit100
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a2, $a0, 176
	ld.d	$a1, $a0, 184
	ld.d	$a0, $a0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB33_67
# %bb.65:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB33_68
# %bb.66:
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
	b	.LBB33_70
.LBB33_67:
	srai.d	$a2, $a1, 2
	b	.LBB33_69
.LBB33_68:
	srli.d	$a2, $a1, 2
.LBB33_69:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB33_70:                              # %_ZN2PP3Cmd20get_file_line_numberEi.exit
	ld.w	$a1, $a0, 84
.Ltmp304:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp305:
# %bb.71:
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB33_202
# %bb.72:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i170
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB33_74
# %bb.73:
	ld.bu	$a0, $s3, 67
	b	.LBB33_76
.LBB33_74:
.Ltmp306:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp307:
# %bb.75:                               # %.noexc175
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp308:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp309:
.LBB33_76:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i172
.Ltmp310:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp311:
# %bb.77:                               # %.noexc177
.Ltmp312:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp313:
# %bb.78:                               # %_ZNSolsEPFRSoS_E.exit102
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a2, $a0, 176
	ld.d	$a1, $a0, 184
	ld.d	$a0, $a0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB33_81
# %bb.79:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB33_82
# %bb.80:
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
	b	.LBB33_84
.LBB33_81:
	srai.d	$a2, $a1, 2
	b	.LBB33_83
.LBB33_82:
	srli.d	$a2, $a1, 2
.LBB33_83:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB33_84:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
	addi.d	$s3, $sp, 80
	ld.d	$a1, $a0, 96
	ld.d	$s2, $a0, 88
	st.d	$s3, $sp, 64
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 128
	move	$a0, $s3
	bltu	$a1, $a2, .LBB33_87
# %bb.85:                               # %.noexc.i.i.i
.Ltmp314:
	addi.d	$a0, $sp, 64
	addi.d	$a1, $sp, 128
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp315:
# %bb.86:                               # %.noexc104
	ld.d	$a1, $sp, 128
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 80
.LBB33_87:                              # %._crit_edge.i.i.i.i
	beq	$a1, $s4, .LBB33_91
# %bb.88:                               # %._crit_edge.i.i.i.i
	bnez	$a1, .LBB33_90
# %bb.89:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB33_91
.LBB33_90:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB33_91:
	ld.d	$a0, $sp, 128
	st.d	$a0, $sp, 72
.Ltmp317:
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a1, $a0, %pc_lo12(.L.str.22)
	ori	$a2, $zero, 4
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp318:
# %bb.92:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit106
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a3, $a1, 176
	ld.d	$a2, $a1, 184
	ld.d	$a0, $s7, 40
	ld.d	$a1, $a1, 200
	sub.d	$a2, $a3, $a2
	srai.d	$a2, $a2, 7
	ld.d	$a4, $sp, 56                    # 8-byte Folded Reload
	add.d	$a2, $a2, $a4
	bltz	$a2, .LBB33_95
# %bb.93:
	ori	$a4, $zero, 3
	bltu	$a4, $a2, .LBB33_96
# %bb.94:
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	slli.d	$a1, $a1, 7
	add.d	$a1, $a3, $a1
	b	.LBB33_98
.LBB33_95:
	srai.d	$a3, $a2, 2
	b	.LBB33_97
.LBB33_96:
	srli.d	$a3, $a2, 2
.LBB33_97:
	slli.d	$a4, $a3, 3
	ldx.d	$a1, $a1, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 7
	add.d	$a1, $a1, $a2
.LBB33_98:                              # %_ZN2PP3Cmd15get_line_numberEi.exit
	ld.w	$a1, $a1, 80
	ld.d	$a2, $a0, 16
	ld.d	$a4, $a0, 24
	addi.w	$a3, $a1, -1
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a4
	srai.d	$a1, $a1, 5
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB33_101
# %bb.99:
	ori	$a4, $zero, 15
	bltu	$a4, $a1, .LBB33_102
# %bb.100:
	slli.d	$a0, $a3, 5
	add.d	$a0, $a2, $a0
	b	.LBB33_104
.LBB33_101:
	srai.d	$a2, $a1, 4
	b	.LBB33_103
.LBB33_102:
	srli.d	$a2, $a1, 4
.LBB33_103:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB33_104:                             # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp319:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp320:
# %bb.105:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit111
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB33_198
# %bb.106:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i181
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB33_108
# %bb.107:
	ld.bu	$a0, $s2, 67
	b	.LBB33_110
.LBB33_108:
.Ltmp321:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp322:
# %bb.109:                              # %.noexc186
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp323:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp324:
.LBB33_110:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i183
.Ltmp325:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp326:
# %bb.111:                              # %.noexc188
.Ltmp327:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp328:
# %bb.112:                              # %_ZNSolsEPFRSoS_E.exit113
.Ltmp329:
	pcalau12i	$a0, %pc_hi20(.L.str.194)
	addi.d	$a1, $a0, %pc_lo12(.L.str.194)
	ori	$a2, $zero, 9
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp330:
# %bb.113:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit115
	ld.d	$a1, $sp, 64
	ld.d	$a2, $sp, 72
.Ltmp331:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp332:
# %bb.114:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit117
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB33_198
# %bb.115:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i192
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB33_117
# %bb.116:
	ld.bu	$a0, $s2, 67
	b	.LBB33_119
.LBB33_117:
.Ltmp333:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp334:
# %bb.118:                              # %.noexc197
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp335:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp336:
.LBB33_119:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i194
.Ltmp337:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp338:
# %bb.120:                              # %.noexc199
.Ltmp339:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp340:
# %bb.121:                              # %_ZNSolsEPFRSoS_E.exit119
	ori	$a0, $zero, 2
	bne	$s8, $a0, .LBB33_138
# %bb.122:
.Ltmp341:
	pcalau12i	$a0, %pc_hi20(.L.str.200)
	addi.d	$a1, $a0, %pc_lo12(.L.str.200)
	ori	$a2, $zero, 63
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp342:
# %bb.123:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit121
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB33_198
# %bb.124:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i203
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB33_126
# %bb.125:
	ld.bu	$a0, $s1, 67
	b	.LBB33_128
.LBB33_126:
.Ltmp343:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp344:
# %bb.127:                              # %.noexc208
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp345:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp346:
.LBB33_128:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i205
.Ltmp347:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp348:
# %bb.129:                              # %.noexc210
.Ltmp349:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp350:
# %bb.130:                              # %_ZNSolsEPFRSoS_E.exit123
.Ltmp351:
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.201)
	addi.d	$a1, $a0, %pc_lo12(.L.str.201)
	ori	$a2, $zero, 36
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp352:
# %bb.131:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit125
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB33_198
# %bb.132:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i214
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB33_134
# %bb.133:
	ld.bu	$a0, $s2, 67
	b	.LBB33_136
.LBB33_134:
.Ltmp353:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp354:
# %bb.135:                              # %.noexc219
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp355:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp356:
.LBB33_136:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i216
.Ltmp357:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp358:
# %bb.137:                              # %.noexc221
.Ltmp359:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp360:
.LBB33_138:                             # %_ZNSolsEPFRSoS_E.exit127
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	beqz	$a0, .LBB33_155
# %bb.139:
.Ltmp361:
	pcalau12i	$a0, %pc_hi20(.L.str.202)
	addi.d	$a1, $a0, %pc_lo12(.L.str.202)
	ori	$a2, $zero, 63
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp362:
# %bb.140:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit135
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB33_198
# %bb.141:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i225
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB33_143
# %bb.142:
	ld.bu	$a0, $s1, 67
	b	.LBB33_145
.LBB33_143:
.Ltmp363:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp364:
# %bb.144:                              # %.noexc230
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp365:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp366:
.LBB33_145:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i227
.Ltmp367:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp368:
# %bb.146:                              # %.noexc232
.Ltmp369:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp370:
# %bb.147:                              # %_ZNSolsEPFRSoS_E.exit137
.Ltmp371:
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.203)
	addi.d	$a1, $a0, %pc_lo12(.L.str.203)
	ori	$a2, $zero, 34
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp372:
# %bb.148:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit139
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB33_198
# %bb.149:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i236
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB33_151
# %bb.150:
	ld.bu	$a0, $s2, 67
	b	.LBB33_153
.LBB33_151:
.Ltmp373:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp374:
# %bb.152:                              # %.noexc241
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp375:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp376:
.LBB33_153:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i238
.Ltmp377:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp378:
# %bb.154:                              # %.noexc243
.Ltmp379:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp380:
.LBB33_155:                             # %_ZNSolsEPFRSoS_E.exit141
.Ltmp381:
	pcalau12i	$a0, %pc_hi20(.L.str.204)
	addi.d	$a1, $a0, %pc_lo12(.L.str.204)
	ori	$a2, $zero, 61
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp382:
# %bb.156:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit143
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB33_198
# %bb.157:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i247
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB33_159
# %bb.158:
	ld.bu	$a0, $s1, 67
	b	.LBB33_161
.LBB33_159:
.Ltmp383:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp384:
# %bb.160:                              # %.noexc252
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp385:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp386:
.LBB33_161:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i249
.Ltmp387:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp388:
# %bb.162:                              # %.noexc254
.Ltmp389:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp390:
# %bb.163:                              # %_ZNSolsEPFRSoS_E.exit145
.Ltmp391:
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.205)
	addi.d	$a1, $a0, %pc_lo12(.L.str.205)
	ori	$a2, $zero, 33
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp392:
# %bb.164:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit147
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB33_198
# %bb.165:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i258
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB33_167
# %bb.166:
	ld.bu	$a0, $s2, 67
	b	.LBB33_169
.LBB33_167:
.Ltmp393:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp394:
# %bb.168:                              # %.noexc263
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp395:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp396:
.LBB33_169:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i260
.Ltmp397:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp398:
# %bb.170:                              # %.noexc265
.Ltmp399:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp400:
# %bb.171:                              # %_ZNSolsEPFRSoS_E.exit149
.Ltmp401:
	pcalau12i	$a0, %pc_hi20(.L.str.206)
	addi.d	$a1, $a0, %pc_lo12(.L.str.206)
	ori	$a2, $zero, 59
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp402:
# %bb.172:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit151
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB33_198
# %bb.173:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i269
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB33_175
# %bb.174:
	ld.bu	$a0, $s1, 67
	b	.LBB33_177
.LBB33_175:
.Ltmp403:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp404:
# %bb.176:                              # %.noexc274
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp405:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp406:
.LBB33_177:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i271
.Ltmp407:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp408:
# %bb.178:                              # %.noexc276
.Ltmp409:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp410:
# %bb.179:                              # %_ZNSolsEPFRSoS_E.exit153
.Ltmp411:
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.207)
	addi.d	$a1, $a0, %pc_lo12(.L.str.207)
	ori	$a2, $zero, 43
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp412:
# %bb.180:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit155
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB33_198
# %bb.181:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i280
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB33_183
# %bb.182:
	ld.bu	$a0, $s1, 67
	b	.LBB33_185
.LBB33_183:
.Ltmp413:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp414:
# %bb.184:                              # %.noexc285
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp415:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp416:
.LBB33_185:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i282
.Ltmp417:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp418:
# %bb.186:                              # %.noexc287
.Ltmp419:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp420:
# %bb.187:                              # %_ZNSolsEPFRSoS_E.exit157
	addi.d	$a0, $s8, -2
	sltui	$a1, $a0, 1
	ori	$a0, $zero, 1
	masknez	$a2, $a0, $a1
	ld.d	$a0, $sp, 64
	ori	$a3, $zero, 3
	maskeqz	$a1, $a3, $a1
	or	$a1, $a1, $a2
	st.w	$a1, $fp, 0
	beq	$a0, $s3, .LBB33_189
# %bb.188:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i158
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB33_189:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit160
	ld.d	$a0, $sp, 104
	beqz	$a0, .LBB33_191
# %bb.190:
	ld.d	$a1, $sp, 120
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB33_191:
	ld.d	$s8, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
.LBB33_192:
	srai.d	$a2, $a1, 2
	b	.LBB33_194
.LBB33_193:
	srli.d	$a2, $a1, 2
.LBB33_194:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB33_195:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit83
	move	$a1, $a6
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word7warningERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	addi.w	$a0, $s2, 0
	bstrpick.d	$s5, $s2, 30, 0
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	bgtz	$a0, .LBB33_17
.LBB33_196:
	ori	$s6, $zero, 1
	slli.d	$s2, $s7, 30
	srai.d	$s3, $s2, 32
	srli.d	$a0, $s3, 61
	beqz	$a0, .LBB33_25
.LBB33_197:                             # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB33_198:                             # %.invoke
.Ltmp421:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp422:
# %bb.199:                              # %.cont
.LBB33_200:
.Ltmp427:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp428:
# %bb.201:                              # %.noexc164
.LBB33_202:
.Ltmp424:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp425:
# %bb.203:                              # %.noexc174
.LBB33_204:
.Ltmp316:
	b	.LBB33_209
.LBB33_205:
.Ltmp291:
	b	.LBB33_209
.LBB33_206:
.Ltmp429:
	ld.d	$a2, $sp, 64
	move	$fp, $a0
	bne	$a2, $s1, .LBB33_211
	b	.LBB33_212
.LBB33_207:
.Ltmp426:
	b	.LBB33_209
.LBB33_208:
.Ltmp286:
.LBB33_209:
	move	$fp, $a0
	b	.LBB33_212
.LBB33_210:
.Ltmp423:
	ld.d	$a2, $sp, 64
	move	$fp, $a0
	beq	$a2, $s3, .LBB33_212
.LBB33_211:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i128
	ld.d	$a0, $sp, 80
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB33_212:
	ld.d	$a0, $sp, 104
	beqz	$a0, .LBB33_214
# %bb.213:
	ld.d	$a1, $sp, 120
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB33_214:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit162
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end33:
	.size	_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end33-_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table33:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13  # >> Call Site 1 <<
	.uleb128 .Ltmp272-.Lfunc_begin13        #   Call between .Lfunc_begin13 and .Ltmp272
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp272-.Lfunc_begin13        # >> Call Site 2 <<
	.uleb128 .Ltmp281-.Ltmp272              #   Call between .Ltmp272 and .Ltmp281
	.uleb128 .Ltmp426-.Lfunc_begin13        #     jumps to .Ltmp426
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp282-.Lfunc_begin13        # >> Call Site 3 <<
	.uleb128 .Ltmp285-.Ltmp282              #   Call between .Ltmp282 and .Ltmp285
	.uleb128 .Ltmp286-.Lfunc_begin13        #     jumps to .Ltmp286
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp287-.Lfunc_begin13        # >> Call Site 4 <<
	.uleb128 .Ltmp288-.Ltmp287              #   Call between .Ltmp287 and .Ltmp288
	.uleb128 .Ltmp426-.Lfunc_begin13        #     jumps to .Ltmp426
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp289-.Lfunc_begin13        # >> Call Site 5 <<
	.uleb128 .Ltmp290-.Ltmp289              #   Call between .Ltmp289 and .Ltmp290
	.uleb128 .Ltmp291-.Lfunc_begin13        #     jumps to .Ltmp291
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp290-.Lfunc_begin13        # >> Call Site 6 <<
	.uleb128 .Ltmp292-.Ltmp290              #   Call between .Ltmp290 and .Ltmp292
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp292-.Lfunc_begin13        # >> Call Site 7 <<
	.uleb128 .Ltmp301-.Ltmp292              #   Call between .Ltmp292 and .Ltmp301
	.uleb128 .Ltmp429-.Lfunc_begin13        #     jumps to .Ltmp429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp301-.Lfunc_begin13        # >> Call Site 8 <<
	.uleb128 .Ltmp302-.Ltmp301              #   Call between .Ltmp301 and .Ltmp302
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp302-.Lfunc_begin13        # >> Call Site 9 <<
	.uleb128 .Ltmp313-.Ltmp302              #   Call between .Ltmp302 and .Ltmp313
	.uleb128 .Ltmp426-.Lfunc_begin13        #     jumps to .Ltmp426
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp314-.Lfunc_begin13        # >> Call Site 10 <<
	.uleb128 .Ltmp315-.Ltmp314              #   Call between .Ltmp314 and .Ltmp315
	.uleb128 .Ltmp316-.Lfunc_begin13        #     jumps to .Ltmp316
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp315-.Lfunc_begin13        # >> Call Site 11 <<
	.uleb128 .Ltmp317-.Ltmp315              #   Call between .Ltmp315 and .Ltmp317
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp317-.Lfunc_begin13        # >> Call Site 12 <<
	.uleb128 .Ltmp420-.Ltmp317              #   Call between .Ltmp317 and .Ltmp420
	.uleb128 .Ltmp423-.Lfunc_begin13        #     jumps to .Ltmp423
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp420-.Lfunc_begin13        # >> Call Site 13 <<
	.uleb128 .Ltmp421-.Ltmp420              #   Call between .Ltmp420 and .Ltmp421
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp421-.Lfunc_begin13        # >> Call Site 14 <<
	.uleb128 .Ltmp422-.Ltmp421              #   Call between .Ltmp421 and .Ltmp422
	.uleb128 .Ltmp423-.Lfunc_begin13        #     jumps to .Ltmp423
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp427-.Lfunc_begin13        # >> Call Site 15 <<
	.uleb128 .Ltmp428-.Ltmp427              #   Call between .Ltmp427 and .Ltmp428
	.uleb128 .Ltmp429-.Lfunc_begin13        #     jumps to .Ltmp429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp424-.Lfunc_begin13        # >> Call Site 16 <<
	.uleb128 .Ltmp425-.Ltmp424              #   Call between .Ltmp424 and .Ltmp425
	.uleb128 .Ltmp426-.Lfunc_begin13        #     jumps to .Ltmp426
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp425-.Lfunc_begin13        # >> Call Site 17 <<
	.uleb128 .Lfunc_end33-.Ltmp425          #   Call between .Ltmp425 and .Lfunc_end33
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end13:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception14
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s3, $a3
	ld.d	$a3, $a3, 8
	ld.d	$t0, $s3, 0
	sub.d	$s5, $a3, $t0
	slli.d	$a3, $s5, 30
	srai.d	$s6, $a3, 32
	srli.d	$t0, $s6, 61
	st.d	$a7, $sp, 48                    # 8-byte Folded Spill
	st.d	$a6, $sp, 80                    # 8-byte Folded Spill
	st.d	$a5, $sp, 72                    # 8-byte Folded Spill
	st.d	$a4, $sp, 64                    # 8-byte Folded Spill
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	bnez	$t0, .LBB34_53
# %bb.1:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	move	$s7, $a2
	move	$s2, $a0
	ld.d	$s0, $sp, 224
	ld.d	$s1, $sp, 216
	beqz	$a3, .LBB34_3
# %bb.2:                                # %.lr.ph.preheader.i.i.i.i.i
	srai.d	$fp, $a3, 30
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	st.d	$a0, $sp, 96
	alsl.d	$a0, $s6, $a0, 2
	st.d	$a0, $sp, 112
	move	$a0, $s4
	move	$a1, $zero
	move	$a2, $fp
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s4, $fp
	b	.LBB34_4
.LBB34_3:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
	move	$a0, $zero
	st.d	$zero, $sp, 112
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 96
.LBB34_4:                               # %.loopexit66
	st.d	$a0, $sp, 104
.Ltmp430:
	addi.d	$a1, $sp, 96
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp431:
# %bb.5:
	beqz	$a0, .LBB34_50
# %bb.6:
	ld.d	$a0, $sp, 208
	beqz	$a0, .LBB34_15
# %bb.7:
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.d	$a4, $a2, $a3
	addi.w	$a2, $a4, 0
	blez	$a2, .LBB34_50
# %bb.8:                                # %.lr.ph.i
	ld.d	$a3, $s2, 184
	move	$a2, $zero
	sub.d	$a3, $a1, $a3
	srai.d	$a3, $a3, 7
	bstrpick.d	$a4, $a4, 30, 0
	ori	$a5, $zero, 4
	ori	$a6, $zero, 1
	move	$a7, $a3
	b	.LBB34_12
	.p2align	4, , 16
.LBB34_9:                               #   in Loop: Header=BB34_12 Depth=1
	srai.d	$t0, $a7, 2
.LBB34_10:                              #   in Loop: Header=BB34_12 Depth=1
	add.d	$t1, $a2, $a3
	slli.d	$t2, $t0, 3
	ldx.d	$t2, $a0, $t2
	slli.d	$t0, $t0, 2
	sub.d	$t0, $t1, $t0
	slli.d	$t0, $t0, 7
	add.d	$t0, $t2, $t0
.LBB34_11:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB34_12 Depth=1
	st.b	$a6, $t0, 36
	addi.d	$a2, $a2, 1
	addi.d	$a1, $a1, 128
	addi.d	$a4, $a4, -1
	addi.d	$a7, $a7, 1
	beqz	$a4, .LBB34_50
.LBB34_12:                              # =>This Inner Loop Header: Depth=1
	bltz	$a7, .LBB34_9
# %bb.13:                               #   in Loop: Header=BB34_12 Depth=1
	move	$t0, $a1
	bltu	$a7, $a5, .LBB34_11
# %bb.14:                               #   in Loop: Header=BB34_12 Depth=1
	srli.d	$t0, $a7, 2
	b	.LBB34_10
.LBB34_15:
	st.w	$zero, $sp, 92
.Ltmp433:
	addi.d	$a1, $sp, 96
	addi.d	$a3, $sp, 92
	move	$a0, $s2
	move	$a2, $s3
	move	$a4, $s1
	move	$a5, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_)
	jirl	$ra, $ra, 0
.Ltmp434:
# %bb.16:
	beqz	$a0, .LBB34_50
# %bb.17:
	bstrpick.d	$a0, $s5, 33, 2
	slli.d	$a0, $a0, 2
	beqz	$a0, .LBB34_42
# %bb.18:
.Ltmp436:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11find_equalsEv)
	jirl	$ra, $ra, 0
.Ltmp437:
# %bb.19:
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a1, $a0, %pc_lo12(_ZN2PPL10index_baseE)
.Ltmp439:
	addi.d	$a0, $sp, 91
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp440:
# %bb.20:
.Ltmp442:
	addi.d	$a0, $sp, 91
	addi.d	$a1, $sp, 96
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils9start_dexERSt6vectorIiSaIiEERKS3_)
	jirl	$ra, $ra, 0
.Ltmp443:
# %bb.21:                               # %.preheader
	move	$fp, $a0
	st.d	$s7, $sp, 40                    # 8-byte Folded Spill
.LBB34_22:                              # %.loopexit.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB34_26 Depth 2
                                        #     Child Loop BB34_39 Depth 2
	addi.d	$s6, $s4, 1
	slli.d	$a0, $s4, 7
	addi.d	$s7, $a0, 128
	b	.LBB34_26
	.p2align	4, , 16
.LBB34_23:                              #   in Loop: Header=BB34_26 Depth=2
	srai.d	$a2, $a3, 2
.LBB34_24:                              #   in Loop: Header=BB34_26 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB34_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit63
                                        #   in Loop: Header=BB34_26 Depth=2
	ld.w	$s8, $a0, 40
	addi.d	$s6, $s6, 1
	addi.w	$s4, $s4, 1
	addi.d	$s7, $s7, 128
	bgtz	$s8, .LBB34_38
.LBB34_26:                              # %.loopexit
                                        #   Parent Loop BB34_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s6, $a2, .LBB34_50
# %bb.27:                               #   in Loop: Header=BB34_26 Depth=2
	ld.d	$a2, $s2, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s6, $a2
	bltz	$a3, .LBB34_30
# %bb.28:                               #   in Loop: Header=BB34_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB34_31
# %bb.29:                               #   in Loop: Header=BB34_26 Depth=2
	add.d	$a0, $a1, $s7
	b	.LBB34_33
	.p2align	4, , 16
.LBB34_30:                              #   in Loop: Header=BB34_26 Depth=2
	srai.d	$a1, $a3, 2
	b	.LBB34_32
	.p2align	4, , 16
.LBB34_31:                              #   in Loop: Header=BB34_26 Depth=2
	srli.d	$a1, $a3, 2
.LBB34_32:                              #   in Loop: Header=BB34_26 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB34_33:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit61
                                        #   in Loop: Header=BB34_26 Depth=2
.Ltmp445:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word8get_boolERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp446:
# %bb.34:                               #   in Loop: Header=BB34_26 Depth=2
	move	$s5, $a0
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s6, $a1
	bltz	$a3, .LBB34_23
# %bb.35:                               #   in Loop: Header=BB34_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB34_37
# %bb.36:                               #   in Loop: Header=BB34_26 Depth=2
	add.d	$a0, $a2, $s7
	b	.LBB34_25
	.p2align	4, , 16
.LBB34_37:                              #   in Loop: Header=BB34_26 Depth=2
	srli.d	$a2, $a3, 2
	b	.LBB34_24
.LBB34_38:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB34_22 Depth=1
	addi.d	$a0, $s6, -1
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	add.d	$s6, $a0, $fp
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	.p2align	4, , 16
.LBB34_39:                              # %.lr.ph
                                        #   Parent Loop BB34_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp448:
	st.d	$s0, $sp, 16
	st.d	$s1, $sp, 8
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	st.d	$a0, $sp, 0
	move	$a0, $s2
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	move	$a2, $s4
	move	$a3, $fp
	ld.d	$a4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$a5, $sp, 64                    # 8-byte Folded Reload
	move	$a6, $s7
	move	$a7, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp449:
# %bb.40:                               #   in Loop: Header=BB34_39 Depth=2
	st.b	$s5, $s6, 0
	addi.w	$fp, $fp, 1
	addi.w	$s8, $s8, -1
	addi.d	$s6, $s6, 1
	bnez	$s8, .LBB34_39
# %bb.41:                               #   in Loop: Header=BB34_22 Depth=1
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	b	.LBB34_22
.LBB34_42:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.w	$a4, $zero, -2
	addi.d	$a1, $a3, 2
	blt	$a3, $a4, .LBB34_45
# %bb.43:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB34_46
# %bb.44:
	addi.d	$a0, $a2, 256
	b	.LBB34_48
.LBB34_45:
	srai.d	$a2, $a1, 2
	b	.LBB34_47
.LBB34_46:
	srli.d	$a2, $a1, 2
.LBB34_47:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB34_48:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
.Ltmp451:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word8get_boolERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp452:
# %bb.49:
	st.b	$a0, $s7, 0
.LBB34_50:                              # %_ZN2PP3Cmd13set_processedEb.exit
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB34_52
# %bb.51:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB34_52:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB34_53:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB34_54:
.Ltmp453:
	b	.LBB34_62
.LBB34_55:
.Ltmp444:
	b	.LBB34_62
.LBB34_56:
.Ltmp441:
	b	.LBB34_62
.LBB34_57:
.Ltmp438:
	b	.LBB34_62
.LBB34_58:
.Ltmp435:
	b	.LBB34_62
.LBB34_59:
.Ltmp432:
	b	.LBB34_62
.LBB34_60:
.Ltmp450:
	b	.LBB34_62
.LBB34_61:
.Ltmp447:
.LBB34_62:
	move	$fp, $a0
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB34_64
# %bb.63:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB34_64:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit65
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end34:
	.size	_ZN2PP3Cmd8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end34-_ZN2PP3Cmd8get_boolERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPbRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table34:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14  # >> Call Site 1 <<
	.uleb128 .Ltmp430-.Lfunc_begin14        #   Call between .Lfunc_begin14 and .Ltmp430
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp430-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Ltmp431-.Ltmp430              #   Call between .Ltmp430 and .Ltmp431
	.uleb128 .Ltmp432-.Lfunc_begin14        #     jumps to .Ltmp432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp433-.Lfunc_begin14        # >> Call Site 3 <<
	.uleb128 .Ltmp434-.Ltmp433              #   Call between .Ltmp433 and .Ltmp434
	.uleb128 .Ltmp435-.Lfunc_begin14        #     jumps to .Ltmp435
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp436-.Lfunc_begin14        # >> Call Site 4 <<
	.uleb128 .Ltmp437-.Ltmp436              #   Call between .Ltmp436 and .Ltmp437
	.uleb128 .Ltmp438-.Lfunc_begin14        #     jumps to .Ltmp438
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp439-.Lfunc_begin14        # >> Call Site 5 <<
	.uleb128 .Ltmp440-.Ltmp439              #   Call between .Ltmp439 and .Ltmp440
	.uleb128 .Ltmp441-.Lfunc_begin14        #     jumps to .Ltmp441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp442-.Lfunc_begin14        # >> Call Site 6 <<
	.uleb128 .Ltmp443-.Ltmp442              #   Call between .Ltmp442 and .Ltmp443
	.uleb128 .Ltmp444-.Lfunc_begin14        #     jumps to .Ltmp444
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp445-.Lfunc_begin14        # >> Call Site 7 <<
	.uleb128 .Ltmp446-.Ltmp445              #   Call between .Ltmp445 and .Ltmp446
	.uleb128 .Ltmp447-.Lfunc_begin14        #     jumps to .Ltmp447
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp448-.Lfunc_begin14        # >> Call Site 8 <<
	.uleb128 .Ltmp449-.Ltmp448              #   Call between .Ltmp448 and .Ltmp449
	.uleb128 .Ltmp450-.Lfunc_begin14        #     jumps to .Ltmp450
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp451-.Lfunc_begin14        # >> Call Site 9 <<
	.uleb128 .Ltmp452-.Ltmp451              #   Call between .Ltmp451 and .Ltmp452
	.uleb128 .Ltmp453-.Lfunc_begin14        #     jumps to .Ltmp453
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp452-.Lfunc_begin14        # >> Call Site 10 <<
	.uleb128 .Lfunc_end34-.Ltmp452          #   Call between .Ltmp452 and .Lfunc_end34
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception15
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s3, $a3
	ld.d	$a3, $a3, 8
	ld.d	$t0, $s3, 0
	sub.d	$s5, $a3, $t0
	slli.d	$a3, $s5, 30
	srai.d	$s6, $a3, 32
	srli.d	$t0, $s6, 61
	st.d	$a7, $sp, 48                    # 8-byte Folded Spill
	st.d	$a6, $sp, 80                    # 8-byte Folded Spill
	st.d	$a5, $sp, 72                    # 8-byte Folded Spill
	st.d	$a4, $sp, 64                    # 8-byte Folded Spill
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	bnez	$t0, .LBB35_53
# %bb.1:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	move	$s7, $a2
	move	$s2, $a0
	ld.d	$s0, $sp, 224
	ld.d	$s1, $sp, 216
	beqz	$a3, .LBB35_3
# %bb.2:                                # %.lr.ph.preheader.i.i.i.i.i
	srai.d	$fp, $a3, 30
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	st.d	$a0, $sp, 96
	alsl.d	$a0, $s6, $a0, 2
	st.d	$a0, $sp, 112
	move	$a0, $s4
	move	$a1, $zero
	move	$a2, $fp
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s4, $fp
	b	.LBB35_4
.LBB35_3:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
	move	$a0, $zero
	st.d	$zero, $sp, 112
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 96
.LBB35_4:                               # %.loopexit65
	st.d	$a0, $sp, 104
.Ltmp454:
	addi.d	$a1, $sp, 96
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp455:
# %bb.5:
	beqz	$a0, .LBB35_50
# %bb.6:
	ld.d	$a0, $sp, 208
	beqz	$a0, .LBB35_15
# %bb.7:
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.d	$a4, $a2, $a3
	addi.w	$a2, $a4, 0
	blez	$a2, .LBB35_50
# %bb.8:                                # %.lr.ph.i
	ld.d	$a3, $s2, 184
	move	$a2, $zero
	sub.d	$a3, $a1, $a3
	srai.d	$a3, $a3, 7
	bstrpick.d	$a4, $a4, 30, 0
	ori	$a5, $zero, 4
	ori	$a6, $zero, 1
	move	$a7, $a3
	b	.LBB35_12
	.p2align	4, , 16
.LBB35_9:                               #   in Loop: Header=BB35_12 Depth=1
	srai.d	$t0, $a7, 2
.LBB35_10:                              #   in Loop: Header=BB35_12 Depth=1
	add.d	$t1, $a2, $a3
	slli.d	$t2, $t0, 3
	ldx.d	$t2, $a0, $t2
	slli.d	$t0, $t0, 2
	sub.d	$t0, $t1, $t0
	slli.d	$t0, $t0, 7
	add.d	$t0, $t2, $t0
.LBB35_11:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB35_12 Depth=1
	st.b	$a6, $t0, 36
	addi.d	$a2, $a2, 1
	addi.d	$a1, $a1, 128
	addi.d	$a4, $a4, -1
	addi.d	$a7, $a7, 1
	beqz	$a4, .LBB35_50
.LBB35_12:                              # =>This Inner Loop Header: Depth=1
	bltz	$a7, .LBB35_9
# %bb.13:                               #   in Loop: Header=BB35_12 Depth=1
	move	$t0, $a1
	bltu	$a7, $a5, .LBB35_11
# %bb.14:                               #   in Loop: Header=BB35_12 Depth=1
	srli.d	$t0, $a7, 2
	b	.LBB35_10
.LBB35_15:
	st.w	$zero, $sp, 92
.Ltmp457:
	addi.d	$a1, $sp, 96
	addi.d	$a3, $sp, 92
	move	$a0, $s2
	move	$a2, $s3
	move	$a4, $s1
	move	$a5, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_)
	jirl	$ra, $ra, 0
.Ltmp458:
# %bb.16:
	beqz	$a0, .LBB35_50
# %bb.17:
	bstrpick.d	$a0, $s5, 33, 2
	slli.d	$a0, $a0, 2
	beqz	$a0, .LBB35_42
# %bb.18:
.Ltmp459:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11find_equalsEv)
	jirl	$ra, $ra, 0
.Ltmp460:
# %bb.19:
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a1, $a0, %pc_lo12(_ZN2PPL10index_baseE)
.Ltmp462:
	addi.d	$a0, $sp, 91
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp463:
# %bb.20:
.Ltmp465:
	addi.d	$a0, $sp, 91
	addi.d	$a1, $sp, 96
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils9start_dexERSt6vectorIiSaIiEERKS3_)
	jirl	$ra, $ra, 0
.Ltmp466:
# %bb.21:                               # %.preheader
	move	$fp, $a0
	st.d	$s7, $sp, 40                    # 8-byte Folded Spill
.LBB35_22:                              # %.loopexit.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB35_26 Depth 2
                                        #     Child Loop BB35_39 Depth 2
	addi.d	$s6, $s4, 1
	slli.d	$a0, $s4, 7
	addi.d	$s7, $a0, 128
	b	.LBB35_26
	.p2align	4, , 16
.LBB35_23:                              #   in Loop: Header=BB35_26 Depth=2
	srai.d	$a2, $a3, 2
.LBB35_24:                              #   in Loop: Header=BB35_26 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB35_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit62
                                        #   in Loop: Header=BB35_26 Depth=2
	ld.w	$s8, $a0, 40
	addi.d	$s6, $s6, 1
	addi.w	$s4, $s4, 1
	addi.d	$s7, $s7, 128
	bgtz	$s8, .LBB35_38
.LBB35_26:                              # %.loopexit
                                        #   Parent Loop BB35_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s6, $a2, .LBB35_50
# %bb.27:                               #   in Loop: Header=BB35_26 Depth=2
	ld.d	$a2, $s2, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s6, $a2
	bltz	$a3, .LBB35_30
# %bb.28:                               #   in Loop: Header=BB35_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB35_31
# %bb.29:                               #   in Loop: Header=BB35_26 Depth=2
	add.d	$a0, $a1, $s7
	b	.LBB35_33
	.p2align	4, , 16
.LBB35_30:                              #   in Loop: Header=BB35_26 Depth=2
	srai.d	$a1, $a3, 2
	b	.LBB35_32
	.p2align	4, , 16
.LBB35_31:                              #   in Loop: Header=BB35_26 Depth=2
	srli.d	$a1, $a3, 2
.LBB35_32:                              #   in Loop: Header=BB35_26 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB35_33:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit60
                                        #   in Loop: Header=BB35_26 Depth=2
.Ltmp468:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp469:
# %bb.34:                               #   in Loop: Header=BB35_26 Depth=2
	move	$s5, $a0
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s6, $a1
	bltz	$a3, .LBB35_23
# %bb.35:                               #   in Loop: Header=BB35_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB35_37
# %bb.36:                               #   in Loop: Header=BB35_26 Depth=2
	add.d	$a0, $a2, $s7
	b	.LBB35_25
	.p2align	4, , 16
.LBB35_37:                              #   in Loop: Header=BB35_26 Depth=2
	srli.d	$a2, $a3, 2
	b	.LBB35_24
.LBB35_38:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB35_22 Depth=1
	addi.d	$a0, $s6, -1
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	alsl.d	$s6, $fp, $a0, 2
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	.p2align	4, , 16
.LBB35_39:                              # %.lr.ph
                                        #   Parent Loop BB35_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp471:
	st.d	$s0, $sp, 16
	st.d	$s1, $sp, 8
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	st.d	$a0, $sp, 0
	move	$a0, $s2
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	move	$a2, $s4
	move	$a3, $fp
	ld.d	$a4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$a5, $sp, 64                    # 8-byte Folded Reload
	move	$a6, $s7
	move	$a7, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp472:
# %bb.40:                               #   in Loop: Header=BB35_39 Depth=2
	st.w	$s5, $s6, 0
	addi.w	$fp, $fp, 1
	addi.w	$s8, $s8, -1
	addi.d	$s6, $s6, 4
	bnez	$s8, .LBB35_39
# %bb.41:                               #   in Loop: Header=BB35_22 Depth=1
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	b	.LBB35_22
.LBB35_42:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.w	$a4, $zero, -2
	addi.d	$a1, $a3, 2
	blt	$a3, $a4, .LBB35_45
# %bb.43:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB35_46
# %bb.44:
	addi.d	$a0, $a2, 256
	b	.LBB35_48
.LBB35_45:
	srai.d	$a2, $a1, 2
	b	.LBB35_47
.LBB35_46:
	srli.d	$a2, $a1, 2
.LBB35_47:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB35_48:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
.Ltmp474:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp475:
# %bb.49:
	st.w	$a0, $s7, 0
.LBB35_50:                              # %_ZN2PP3Cmd13set_processedEb.exit
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB35_52
# %bb.51:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB35_52:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB35_53:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB35_54:
.Ltmp467:
	b	.LBB35_61
.LBB35_55:
.Ltmp464:
	b	.LBB35_61
.LBB35_56:
.Ltmp461:
	b	.LBB35_61
.LBB35_57:
.Ltmp476:
	b	.LBB35_61
.LBB35_58:
.Ltmp456:
	b	.LBB35_61
.LBB35_59:
.Ltmp473:
	b	.LBB35_61
.LBB35_60:
.Ltmp470:
.LBB35_61:
	move	$fp, $a0
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB35_63
# %bb.62:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB35_63:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit64
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end35:
	.size	_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end35-_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table35:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Lfunc_begin15-.Lfunc_begin15  # >> Call Site 1 <<
	.uleb128 .Ltmp454-.Lfunc_begin15        #   Call between .Lfunc_begin15 and .Ltmp454
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp454-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp455-.Ltmp454              #   Call between .Ltmp454 and .Ltmp455
	.uleb128 .Ltmp456-.Lfunc_begin15        #     jumps to .Ltmp456
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp457-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Ltmp458-.Ltmp457              #   Call between .Ltmp457 and .Ltmp458
	.uleb128 .Ltmp476-.Lfunc_begin15        #     jumps to .Ltmp476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp459-.Lfunc_begin15        # >> Call Site 4 <<
	.uleb128 .Ltmp460-.Ltmp459              #   Call between .Ltmp459 and .Ltmp460
	.uleb128 .Ltmp461-.Lfunc_begin15        #     jumps to .Ltmp461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp462-.Lfunc_begin15        # >> Call Site 5 <<
	.uleb128 .Ltmp463-.Ltmp462              #   Call between .Ltmp462 and .Ltmp463
	.uleb128 .Ltmp464-.Lfunc_begin15        #     jumps to .Ltmp464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp465-.Lfunc_begin15        # >> Call Site 6 <<
	.uleb128 .Ltmp466-.Ltmp465              #   Call between .Ltmp465 and .Ltmp466
	.uleb128 .Ltmp467-.Lfunc_begin15        #     jumps to .Ltmp467
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp468-.Lfunc_begin15        # >> Call Site 7 <<
	.uleb128 .Ltmp469-.Ltmp468              #   Call between .Ltmp468 and .Ltmp469
	.uleb128 .Ltmp470-.Lfunc_begin15        #     jumps to .Ltmp470
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp471-.Lfunc_begin15        # >> Call Site 8 <<
	.uleb128 .Ltmp472-.Ltmp471              #   Call between .Ltmp471 and .Ltmp472
	.uleb128 .Ltmp473-.Lfunc_begin15        #     jumps to .Ltmp473
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp474-.Lfunc_begin15        # >> Call Site 9 <<
	.uleb128 .Ltmp475-.Ltmp474              #   Call between .Ltmp474 and .Ltmp475
	.uleb128 .Ltmp476-.Lfunc_begin15        #     jumps to .Ltmp476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp475-.Lfunc_begin15        # >> Call Site 10 <<
	.uleb128 .Lfunc_end35-.Ltmp475          #   Call between .Ltmp475 and .Lfunc_end35
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPlRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPlRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPlRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPlRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPlRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception16
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s3, $a3
	ld.d	$a3, $a3, 8
	ld.d	$t0, $s3, 0
	sub.d	$s5, $a3, $t0
	slli.d	$a3, $s5, 30
	srai.d	$s6, $a3, 32
	srli.d	$t0, $s6, 61
	st.d	$a7, $sp, 48                    # 8-byte Folded Spill
	st.d	$a6, $sp, 80                    # 8-byte Folded Spill
	st.d	$a5, $sp, 72                    # 8-byte Folded Spill
	st.d	$a4, $sp, 64                    # 8-byte Folded Spill
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	bnez	$t0, .LBB36_53
# %bb.1:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	move	$s7, $a2
	move	$s2, $a0
	ld.d	$s0, $sp, 224
	ld.d	$s1, $sp, 216
	beqz	$a3, .LBB36_3
# %bb.2:                                # %.lr.ph.preheader.i.i.i.i.i
	srai.d	$fp, $a3, 30
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	st.d	$a0, $sp, 96
	alsl.d	$a0, $s6, $a0, 2
	st.d	$a0, $sp, 112
	move	$a0, $s4
	move	$a1, $zero
	move	$a2, $fp
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s4, $fp
	b	.LBB36_4
.LBB36_3:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
	move	$a0, $zero
	st.d	$zero, $sp, 112
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 96
.LBB36_4:                               # %.loopexit65
	st.d	$a0, $sp, 104
.Ltmp477:
	addi.d	$a1, $sp, 96
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp478:
# %bb.5:
	beqz	$a0, .LBB36_50
# %bb.6:
	ld.d	$a0, $sp, 208
	beqz	$a0, .LBB36_15
# %bb.7:
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.d	$a4, $a2, $a3
	addi.w	$a2, $a4, 0
	blez	$a2, .LBB36_50
# %bb.8:                                # %.lr.ph.i
	ld.d	$a3, $s2, 184
	move	$a2, $zero
	sub.d	$a3, $a1, $a3
	srai.d	$a3, $a3, 7
	bstrpick.d	$a4, $a4, 30, 0
	ori	$a5, $zero, 4
	ori	$a6, $zero, 1
	move	$a7, $a3
	b	.LBB36_12
	.p2align	4, , 16
.LBB36_9:                               #   in Loop: Header=BB36_12 Depth=1
	srai.d	$t0, $a7, 2
.LBB36_10:                              #   in Loop: Header=BB36_12 Depth=1
	add.d	$t1, $a2, $a3
	slli.d	$t2, $t0, 3
	ldx.d	$t2, $a0, $t2
	slli.d	$t0, $t0, 2
	sub.d	$t0, $t1, $t0
	slli.d	$t0, $t0, 7
	add.d	$t0, $t2, $t0
.LBB36_11:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB36_12 Depth=1
	st.b	$a6, $t0, 36
	addi.d	$a2, $a2, 1
	addi.d	$a1, $a1, 128
	addi.d	$a4, $a4, -1
	addi.d	$a7, $a7, 1
	beqz	$a4, .LBB36_50
.LBB36_12:                              # =>This Inner Loop Header: Depth=1
	bltz	$a7, .LBB36_9
# %bb.13:                               #   in Loop: Header=BB36_12 Depth=1
	move	$t0, $a1
	bltu	$a7, $a5, .LBB36_11
# %bb.14:                               #   in Loop: Header=BB36_12 Depth=1
	srli.d	$t0, $a7, 2
	b	.LBB36_10
.LBB36_15:
	st.w	$zero, $sp, 92
.Ltmp480:
	addi.d	$a1, $sp, 96
	addi.d	$a3, $sp, 92
	move	$a0, $s2
	move	$a2, $s3
	move	$a4, $s1
	move	$a5, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_)
	jirl	$ra, $ra, 0
.Ltmp481:
# %bb.16:
	beqz	$a0, .LBB36_50
# %bb.17:
	bstrpick.d	$a0, $s5, 33, 2
	slli.d	$a0, $a0, 2
	beqz	$a0, .LBB36_42
# %bb.18:
.Ltmp482:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11find_equalsEv)
	jirl	$ra, $ra, 0
.Ltmp483:
# %bb.19:
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a1, $a0, %pc_lo12(_ZN2PPL10index_baseE)
.Ltmp485:
	addi.d	$a0, $sp, 91
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp486:
# %bb.20:
.Ltmp488:
	addi.d	$a0, $sp, 91
	addi.d	$a1, $sp, 96
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils9start_dexERSt6vectorIiSaIiEERKS3_)
	jirl	$ra, $ra, 0
.Ltmp489:
# %bb.21:                               # %.preheader
	move	$fp, $a0
	st.d	$s7, $sp, 40                    # 8-byte Folded Spill
.LBB36_22:                              # %.loopexit.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB36_26 Depth 2
                                        #     Child Loop BB36_39 Depth 2
	addi.d	$s6, $s4, 1
	slli.d	$a0, $s4, 7
	addi.d	$s7, $a0, 128
	b	.LBB36_26
	.p2align	4, , 16
.LBB36_23:                              #   in Loop: Header=BB36_26 Depth=2
	srai.d	$a2, $a3, 2
.LBB36_24:                              #   in Loop: Header=BB36_26 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB36_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit62
                                        #   in Loop: Header=BB36_26 Depth=2
	ld.w	$s8, $a0, 40
	addi.d	$s6, $s6, 1
	addi.w	$s4, $s4, 1
	addi.d	$s7, $s7, 128
	bgtz	$s8, .LBB36_38
.LBB36_26:                              # %.loopexit
                                        #   Parent Loop BB36_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s6, $a2, .LBB36_50
# %bb.27:                               #   in Loop: Header=BB36_26 Depth=2
	ld.d	$a2, $s2, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s6, $a2
	bltz	$a3, .LBB36_30
# %bb.28:                               #   in Loop: Header=BB36_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB36_31
# %bb.29:                               #   in Loop: Header=BB36_26 Depth=2
	add.d	$a0, $a1, $s7
	b	.LBB36_33
	.p2align	4, , 16
.LBB36_30:                              #   in Loop: Header=BB36_26 Depth=2
	srai.d	$a1, $a3, 2
	b	.LBB36_32
	.p2align	4, , 16
.LBB36_31:                              #   in Loop: Header=BB36_26 Depth=2
	srli.d	$a1, $a3, 2
.LBB36_32:                              #   in Loop: Header=BB36_26 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB36_33:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit60
                                        #   in Loop: Header=BB36_26 Depth=2
.Ltmp491:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word11get_int64_tERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp492:
# %bb.34:                               #   in Loop: Header=BB36_26 Depth=2
	move	$s5, $a0
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s6, $a1
	bltz	$a3, .LBB36_23
# %bb.35:                               #   in Loop: Header=BB36_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB36_37
# %bb.36:                               #   in Loop: Header=BB36_26 Depth=2
	add.d	$a0, $a2, $s7
	b	.LBB36_25
	.p2align	4, , 16
.LBB36_37:                              #   in Loop: Header=BB36_26 Depth=2
	srli.d	$a2, $a3, 2
	b	.LBB36_24
.LBB36_38:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB36_22 Depth=1
	addi.d	$a0, $s6, -1
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	alsl.d	$s6, $fp, $a0, 3
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	.p2align	4, , 16
.LBB36_39:                              # %.lr.ph
                                        #   Parent Loop BB36_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp494:
	st.d	$s0, $sp, 16
	st.d	$s1, $sp, 8
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	st.d	$a0, $sp, 0
	move	$a0, $s2
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	move	$a2, $s4
	move	$a3, $fp
	ld.d	$a4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$a5, $sp, 64                    # 8-byte Folded Reload
	move	$a6, $s7
	move	$a7, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp495:
# %bb.40:                               #   in Loop: Header=BB36_39 Depth=2
	st.d	$s5, $s6, 0
	addi.w	$fp, $fp, 1
	addi.w	$s8, $s8, -1
	addi.d	$s6, $s6, 8
	bnez	$s8, .LBB36_39
# %bb.41:                               #   in Loop: Header=BB36_22 Depth=1
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	b	.LBB36_22
.LBB36_42:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.w	$a4, $zero, -2
	addi.d	$a1, $a3, 2
	blt	$a3, $a4, .LBB36_45
# %bb.43:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB36_46
# %bb.44:
	addi.d	$a0, $a2, 256
	b	.LBB36_48
.LBB36_45:
	srai.d	$a2, $a1, 2
	b	.LBB36_47
.LBB36_46:
	srli.d	$a2, $a1, 2
.LBB36_47:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB36_48:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
.Ltmp497:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word11get_int64_tERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp498:
# %bb.49:
	st.d	$a0, $s7, 0
.LBB36_50:                              # %_ZN2PP3Cmd13set_processedEb.exit
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB36_52
# %bb.51:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB36_52:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB36_53:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB36_54:
.Ltmp490:
	b	.LBB36_61
.LBB36_55:
.Ltmp487:
	b	.LBB36_61
.LBB36_56:
.Ltmp484:
	b	.LBB36_61
.LBB36_57:
.Ltmp499:
	b	.LBB36_61
.LBB36_58:
.Ltmp479:
	b	.LBB36_61
.LBB36_59:
.Ltmp496:
	b	.LBB36_61
.LBB36_60:
.Ltmp493:
.LBB36_61:
	move	$fp, $a0
	ld.d	$a0, $sp, 96
	beqz	$a0, .LBB36_63
# %bb.62:
	ld.d	$a1, $sp, 112
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB36_63:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit64
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end36:
	.size	_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPlRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end36-_ZN2PP3Cmd7get_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPlRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table36:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Lfunc_begin16-.Lfunc_begin16  # >> Call Site 1 <<
	.uleb128 .Ltmp477-.Lfunc_begin16        #   Call between .Lfunc_begin16 and .Ltmp477
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp477-.Lfunc_begin16        # >> Call Site 2 <<
	.uleb128 .Ltmp478-.Ltmp477              #   Call between .Ltmp477 and .Ltmp478
	.uleb128 .Ltmp479-.Lfunc_begin16        #     jumps to .Ltmp479
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp480-.Lfunc_begin16        # >> Call Site 3 <<
	.uleb128 .Ltmp481-.Ltmp480              #   Call between .Ltmp480 and .Ltmp481
	.uleb128 .Ltmp499-.Lfunc_begin16        #     jumps to .Ltmp499
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp482-.Lfunc_begin16        # >> Call Site 4 <<
	.uleb128 .Ltmp483-.Ltmp482              #   Call between .Ltmp482 and .Ltmp483
	.uleb128 .Ltmp484-.Lfunc_begin16        #     jumps to .Ltmp484
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp485-.Lfunc_begin16        # >> Call Site 5 <<
	.uleb128 .Ltmp486-.Ltmp485              #   Call between .Ltmp485 and .Ltmp486
	.uleb128 .Ltmp487-.Lfunc_begin16        #     jumps to .Ltmp487
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp488-.Lfunc_begin16        # >> Call Site 6 <<
	.uleb128 .Ltmp489-.Ltmp488              #   Call between .Ltmp488 and .Ltmp489
	.uleb128 .Ltmp490-.Lfunc_begin16        #     jumps to .Ltmp490
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp491-.Lfunc_begin16        # >> Call Site 7 <<
	.uleb128 .Ltmp492-.Ltmp491              #   Call between .Ltmp491 and .Ltmp492
	.uleb128 .Ltmp493-.Lfunc_begin16        #     jumps to .Ltmp493
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp494-.Lfunc_begin16        # >> Call Site 8 <<
	.uleb128 .Ltmp495-.Ltmp494              #   Call between .Ltmp494 and .Ltmp495
	.uleb128 .Ltmp496-.Lfunc_begin16        #     jumps to .Ltmp496
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp497-.Lfunc_begin16        # >> Call Site 9 <<
	.uleb128 .Ltmp498-.Ltmp497              #   Call between .Ltmp497 and .Ltmp498
	.uleb128 .Ltmp499-.Lfunc_begin16        #     jumps to .Ltmp499
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp498-.Lfunc_begin16        # >> Call Site 10 <<
	.uleb128 .Lfunc_end36-.Ltmp498          #   Call between .Ltmp498 and .Lfunc_end36
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end16:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception17
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	fst.d	$fs0, $sp, 112                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	.cfi_offset 56, -96
	move	$s3, $a3
	ld.d	$a3, $a3, 8
	ld.d	$t0, $s3, 0
	sub.d	$s5, $a3, $t0
	slli.d	$a3, $s5, 30
	srai.d	$s6, $a3, 32
	srli.d	$t0, $s6, 61
	st.d	$a7, $sp, 48                    # 8-byte Folded Spill
	st.d	$a6, $sp, 72                    # 8-byte Folded Spill
	st.d	$a5, $sp, 64                    # 8-byte Folded Spill
	st.d	$a4, $sp, 56                    # 8-byte Folded Spill
	bnez	$t0, .LBB37_53
# %bb.1:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	move	$s7, $a2
	move	$s8, $a1
	move	$s2, $a0
	ld.d	$s0, $sp, 224
	ld.d	$s1, $sp, 216
	beqz	$a3, .LBB37_3
# %bb.2:                                # %.lr.ph.preheader.i.i.i.i.i
	srai.d	$fp, $a3, 30
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s4, $a0
	st.d	$a0, $sp, 88
	alsl.d	$a0, $s6, $a0, 2
	st.d	$a0, $sp, 104
	move	$a0, $s4
	move	$a1, $zero
	move	$a2, $fp
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s4, $fp
	b	.LBB37_4
.LBB37_3:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
	move	$a0, $zero
	st.d	$zero, $sp, 104
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 88
.LBB37_4:                               # %.loopexit65
	st.d	$a0, $sp, 96
.Ltmp500:
	addi.d	$a1, $sp, 88
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp501:
# %bb.5:
	beqz	$a0, .LBB37_50
# %bb.6:
	ld.d	$a0, $sp, 208
	beqz	$a0, .LBB37_15
# %bb.7:
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.d	$a4, $a2, $a3
	addi.w	$a2, $a4, 0
	blez	$a2, .LBB37_50
# %bb.8:                                # %.lr.ph.i
	ld.d	$a3, $s2, 184
	move	$a2, $zero
	sub.d	$a3, $a1, $a3
	srai.d	$a3, $a3, 7
	bstrpick.d	$a4, $a4, 30, 0
	ori	$a5, $zero, 4
	ori	$a6, $zero, 1
	move	$a7, $a3
	b	.LBB37_12
	.p2align	4, , 16
.LBB37_9:                               #   in Loop: Header=BB37_12 Depth=1
	srai.d	$t0, $a7, 2
.LBB37_10:                              #   in Loop: Header=BB37_12 Depth=1
	add.d	$t1, $a2, $a3
	slli.d	$t2, $t0, 3
	ldx.d	$t2, $a0, $t2
	slli.d	$t0, $t0, 2
	sub.d	$t0, $t1, $t0
	slli.d	$t0, $t0, 7
	add.d	$t0, $t2, $t0
.LBB37_11:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB37_12 Depth=1
	st.b	$a6, $t0, 36
	addi.d	$a2, $a2, 1
	addi.d	$a1, $a1, 128
	addi.d	$a4, $a4, -1
	addi.d	$a7, $a7, 1
	beqz	$a4, .LBB37_50
.LBB37_12:                              # =>This Inner Loop Header: Depth=1
	bltz	$a7, .LBB37_9
# %bb.13:                               #   in Loop: Header=BB37_12 Depth=1
	move	$t0, $a1
	bltu	$a7, $a5, .LBB37_11
# %bb.14:                               #   in Loop: Header=BB37_12 Depth=1
	srli.d	$t0, $a7, 2
	b	.LBB37_10
.LBB37_15:
	st.w	$zero, $sp, 84
.Ltmp503:
	addi.d	$a1, $sp, 88
	addi.d	$a3, $sp, 84
	move	$a0, $s2
	move	$a2, $s3
	move	$a4, $s1
	move	$a5, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_)
	jirl	$ra, $ra, 0
.Ltmp504:
# %bb.16:
	beqz	$a0, .LBB37_50
# %bb.17:
	bstrpick.d	$a0, $s5, 33, 2
	slli.d	$a0, $a0, 2
	beqz	$a0, .LBB37_42
# %bb.18:
.Ltmp505:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11find_equalsEv)
	jirl	$ra, $ra, 0
.Ltmp506:
# %bb.19:
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a1, $a0, %pc_lo12(_ZN2PPL10index_baseE)
.Ltmp508:
	addi.d	$a0, $sp, 83
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp509:
# %bb.20:
.Ltmp511:
	st.d	$s7, $sp, 40                    # 8-byte Folded Spill
	addi.d	$a0, $sp, 83
	addi.d	$a1, $sp, 88
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils9start_dexERSt6vectorIiSaIiEERKS3_)
	jirl	$ra, $ra, 0
.Ltmp512:
# %bb.21:                               # %.preheader
	move	$fp, $a0
.LBB37_22:                              # %.loopexit.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB37_26 Depth 2
                                        #     Child Loop BB37_39 Depth 2
	addi.d	$s5, $s4, 1
	slli.d	$a0, $s4, 7
	addi.d	$s6, $a0, 128
	b	.LBB37_26
	.p2align	4, , 16
.LBB37_23:                              #   in Loop: Header=BB37_26 Depth=2
	srai.d	$a2, $a3, 2
.LBB37_24:                              #   in Loop: Header=BB37_26 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s5, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB37_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit62
                                        #   in Loop: Header=BB37_26 Depth=2
	ld.w	$s7, $a0, 40
	addi.d	$s5, $s5, 1
	addi.w	$s4, $s4, 1
	addi.d	$s6, $s6, 128
	bgtz	$s7, .LBB37_38
.LBB37_26:                              # %.loopexit
                                        #   Parent Loop BB37_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s5, $a2, .LBB37_50
# %bb.27:                               #   in Loop: Header=BB37_26 Depth=2
	ld.d	$a2, $s2, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s5, $a2
	bltz	$a3, .LBB37_30
# %bb.28:                               #   in Loop: Header=BB37_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB37_31
# %bb.29:                               #   in Loop: Header=BB37_26 Depth=2
	add.d	$a0, $a1, $s6
	b	.LBB37_33
	.p2align	4, , 16
.LBB37_30:                              #   in Loop: Header=BB37_26 Depth=2
	srai.d	$a1, $a3, 2
	b	.LBB37_32
	.p2align	4, , 16
.LBB37_31:                              #   in Loop: Header=BB37_26 Depth=2
	srli.d	$a1, $a3, 2
.LBB37_32:                              #   in Loop: Header=BB37_26 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s5, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB37_33:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit60
                                        #   in Loop: Header=BB37_26 Depth=2
.Ltmp514:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_doubleERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp515:
# %bb.34:                               #   in Loop: Header=BB37_26 Depth=2
	fmov.d	$fs0, $fa0
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s5, $a1
	bltz	$a3, .LBB37_23
# %bb.35:                               #   in Loop: Header=BB37_26 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB37_37
# %bb.36:                               #   in Loop: Header=BB37_26 Depth=2
	add.d	$a0, $a2, $s6
	b	.LBB37_25
	.p2align	4, , 16
.LBB37_37:                              #   in Loop: Header=BB37_26 Depth=2
	srli.d	$a2, $a3, 2
	b	.LBB37_24
.LBB37_38:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB37_22 Depth=1
	addi.d	$a0, $s5, -1
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	alsl.d	$s5, $fp, $a0, 3
	ld.d	$s6, $sp, 48                    # 8-byte Folded Reload
	.p2align	4, , 16
.LBB37_39:                              # %.lr.ph
                                        #   Parent Loop BB37_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp517:
	st.d	$s0, $sp, 16
	st.d	$s1, $sp, 8
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	st.d	$a0, $sp, 0
	move	$a0, $s2
	move	$a1, $s8
	move	$a2, $s4
	move	$a3, $fp
	ld.d	$a4, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a5, $sp, 56                    # 8-byte Folded Reload
	move	$a6, $s6
	move	$a7, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp518:
# %bb.40:                               #   in Loop: Header=BB37_39 Depth=2
	fst.d	$fs0, $s5, 0
	addi.w	$fp, $fp, 1
	addi.w	$s7, $s7, -1
	addi.d	$s5, $s5, 8
	bnez	$s7, .LBB37_39
# %bb.41:                               #   in Loop: Header=BB37_22 Depth=1
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	b	.LBB37_22
.LBB37_42:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.w	$a4, $zero, -2
	addi.d	$a1, $a3, 2
	blt	$a3, $a4, .LBB37_45
# %bb.43:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB37_46
# %bb.44:
	addi.d	$a0, $a2, 256
	b	.LBB37_48
.LBB37_45:
	srai.d	$a2, $a1, 2
	b	.LBB37_47
.LBB37_46:
	srli.d	$a2, $a1, 2
.LBB37_47:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB37_48:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
.Ltmp520:
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_doubleERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp521:
# %bb.49:
	fst.d	$fa0, $s7, 0
.LBB37_50:                              # %_ZN2PP3Cmd13set_processedEb.exit
	ld.d	$a0, $sp, 88
	beqz	$a0, .LBB37_52
# %bb.51:
	ld.d	$a1, $sp, 104
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB37_52:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	fld.d	$fs0, $sp, 112                  # 8-byte Folded Reload
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB37_53:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB37_54:
.Ltmp513:
	b	.LBB37_61
.LBB37_55:
.Ltmp510:
	b	.LBB37_61
.LBB37_56:
.Ltmp507:
	b	.LBB37_61
.LBB37_57:
.Ltmp522:
	b	.LBB37_61
.LBB37_58:
.Ltmp502:
	b	.LBB37_61
.LBB37_59:
.Ltmp519:
	b	.LBB37_61
.LBB37_60:
.Ltmp516:
.LBB37_61:
	move	$fp, $a0
	ld.d	$a0, $sp, 88
	beqz	$a0, .LBB37_63
# %bb.62:
	ld.d	$a1, $sp, 104
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB37_63:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit64
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end37:
	.size	_ZN2PP3Cmd8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end37-_ZN2PP3Cmd8get_realERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPdRKSt6vectorIiSaIiEERS9_IPS0_SaISE_EERSB_iSI_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table37:
.Lexception17:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Lfunc_begin17-.Lfunc_begin17  # >> Call Site 1 <<
	.uleb128 .Ltmp500-.Lfunc_begin17        #   Call between .Lfunc_begin17 and .Ltmp500
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp500-.Lfunc_begin17        # >> Call Site 2 <<
	.uleb128 .Ltmp501-.Ltmp500              #   Call between .Ltmp500 and .Ltmp501
	.uleb128 .Ltmp502-.Lfunc_begin17        #     jumps to .Ltmp502
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp503-.Lfunc_begin17        # >> Call Site 3 <<
	.uleb128 .Ltmp504-.Ltmp503              #   Call between .Ltmp503 and .Ltmp504
	.uleb128 .Ltmp522-.Lfunc_begin17        #     jumps to .Ltmp522
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp505-.Lfunc_begin17        # >> Call Site 4 <<
	.uleb128 .Ltmp506-.Ltmp505              #   Call between .Ltmp505 and .Ltmp506
	.uleb128 .Ltmp507-.Lfunc_begin17        #     jumps to .Ltmp507
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp508-.Lfunc_begin17        # >> Call Site 5 <<
	.uleb128 .Ltmp509-.Ltmp508              #   Call between .Ltmp508 and .Ltmp509
	.uleb128 .Ltmp510-.Lfunc_begin17        #     jumps to .Ltmp510
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp511-.Lfunc_begin17        # >> Call Site 6 <<
	.uleb128 .Ltmp512-.Ltmp511              #   Call between .Ltmp511 and .Ltmp512
	.uleb128 .Ltmp513-.Lfunc_begin17        #     jumps to .Ltmp513
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp514-.Lfunc_begin17        # >> Call Site 7 <<
	.uleb128 .Ltmp515-.Ltmp514              #   Call between .Ltmp514 and .Ltmp515
	.uleb128 .Ltmp516-.Lfunc_begin17        #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp517-.Lfunc_begin17        # >> Call Site 8 <<
	.uleb128 .Ltmp518-.Ltmp517              #   Call between .Ltmp517 and .Ltmp518
	.uleb128 .Ltmp519-.Lfunc_begin17        #     jumps to .Ltmp519
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp520-.Lfunc_begin17        # >> Call Site 9 <<
	.uleb128 .Ltmp521-.Ltmp520              #   Call between .Ltmp520 and .Ltmp521
	.uleb128 .Ltmp522-.Lfunc_begin17        #     jumps to .Ltmp522
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp521-.Lfunc_begin17        # >> Call Site 10 <<
	.uleb128 .Lfunc_end37-.Ltmp521          #   Call between .Ltmp521 and .Lfunc_end37
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end17:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbRS8_IPS0_SaISG_EERSD_iSK_bRNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbRS8_IPS0_SaISG_EERSD_iSK_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbRS8_IPS0_SaISG_EERSD_iSK_bRNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbRS8_IPS0_SaISG_EERSD_iSK_bRNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbRS8_IPS0_SaISG_EERSD_iSK_bRNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception18
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	st.d	$s6, $sp, 168                   # 8-byte Folded Spill
	st.d	$s7, $sp, 160                   # 8-byte Folded Spill
	st.d	$s8, $sp, 152                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s3, $a3
	ld.d	$a3, $a3, 8
	ld.d	$t0, $s3, 0
	sub.d	$fp, $a3, $t0
	slli.d	$a3, $fp, 30
	srai.d	$s1, $a3, 32
	srli.d	$t0, $s1, 61
	st.d	$a7, $sp, 40                    # 8-byte Folded Spill
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	bnez	$t0, .LBB38_89
# %bb.1:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	move	$s5, $a6
	move	$s6, $a5
	move	$s4, $a4
	move	$s7, $a1
	move	$s2, $a0
	ld.d	$a0, $sp, 264
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 256
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	beqz	$a3, .LBB38_3
# %bb.2:                                # %.lr.ph.preheader.i.i.i.i.i
	srai.d	$s0, $a3, 30
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s8, $a0
	st.d	$a0, $sp, 120
	alsl.d	$a0, $s1, $a0, 2
	st.d	$a0, $sp, 136
	move	$a0, $s8
	move	$a1, $zero
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s8, $s0
	b	.LBB38_4
.LBB38_3:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
	move	$a0, $zero
	st.d	$zero, $sp, 136
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 120
.LBB38_4:                               # %.loopexit
	st.d	$a0, $sp, 128
.Ltmp523:
	addi.d	$a1, $sp, 120
	move	$a0, $s2
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp524:
# %bb.5:
	beqz	$a0, .LBB38_61
# %bb.6:
	ld.d	$a0, $sp, 248
	beqz	$a0, .LBB38_15
# %bb.7:
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.d	$a4, $a2, $a3
	addi.w	$a2, $a4, 0
	blez	$a2, .LBB38_61
# %bb.8:                                # %.lr.ph.i
	ld.d	$a3, $s2, 184
	move	$a2, $zero
	sub.d	$a3, $a1, $a3
	srai.d	$a3, $a3, 7
	bstrpick.d	$a4, $a4, 30, 0
	ori	$a5, $zero, 4
	ori	$a6, $zero, 1
	move	$a7, $a3
	b	.LBB38_12
	.p2align	4, , 16
.LBB38_9:                               #   in Loop: Header=BB38_12 Depth=1
	srai.d	$t0, $a7, 2
.LBB38_10:                              #   in Loop: Header=BB38_12 Depth=1
	add.d	$t1, $a2, $a3
	slli.d	$t2, $t0, 3
	ldx.d	$t2, $a0, $t2
	slli.d	$t0, $t0, 2
	sub.d	$t0, $t1, $t0
	slli.d	$t0, $t0, 7
	add.d	$t0, $t2, $t0
.LBB38_11:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.i
                                        #   in Loop: Header=BB38_12 Depth=1
	st.b	$a6, $t0, 36
	addi.d	$a2, $a2, 1
	addi.d	$a1, $a1, 128
	addi.d	$a4, $a4, -1
	addi.d	$a7, $a7, 1
	beqz	$a4, .LBB38_61
.LBB38_12:                              # =>This Inner Loop Header: Depth=1
	bltz	$a7, .LBB38_9
# %bb.13:                               #   in Loop: Header=BB38_12 Depth=1
	move	$t0, $a1
	bltu	$a7, $a5, .LBB38_11
# %bb.14:                               #   in Loop: Header=BB38_12 Depth=1
	srli.d	$t0, $a7, 2
	b	.LBB38_10
.LBB38_15:
	st.w	$zero, $sp, 116
.Ltmp526:
	addi.d	$a1, $sp, 120
	addi.d	$a3, $sp, 116
	move	$a0, $s2
	move	$a2, $s3
	ld.d	$a4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a5, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_)
	jirl	$ra, $ra, 0
.Ltmp527:
# %bb.16:
	beqz	$a0, .LBB38_61
# %bb.17:
	bstrpick.d	$a0, $fp, 33, 2
	slli.d	$a0, $a0, 2
	beqz	$s4, .LBB38_22
# %bb.18:
	bnez	$a0, .LBB38_22
# %bb.19:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.w	$a4, $zero, -2
	addi.d	$a1, $a3, 2
	blt	$a3, $a4, .LBB38_53
# %bb.20:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB38_57
# %bb.21:
	addi.d	$a0, $a2, 256
	b	.LBB38_59
.LBB38_22:
	beqz	$a0, .LBB38_54
# %bb.23:
.Ltmp528:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11find_equalsEv)
	jirl	$ra, $ra, 0
.Ltmp529:
# %bb.24:
	move	$s8, $a0
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a1, $a0, %pc_lo12(_ZN2PPL10index_baseE)
.Ltmp531:
	addi.d	$a0, $sp, 79
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utilsC1Ei)
	jirl	$ra, $ra, 0
.Ltmp532:
# %bb.25:
.Ltmp534:
	addi.d	$a0, $sp, 79
	addi.d	$a1, $sp, 120
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP12Parser_utils9start_dexERSt6vectorIiSaIiEERKS3_)
	jirl	$ra, $ra, 0
.Ltmp535:
# %bb.26:                               # %.preheader
	move	$fp, $a0
	ld.d	$s0, $sp, 240
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	.p2align	4, , 16
.LBB38_27:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB38_48 Depth 2
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $s2, 192
	ld.d	$a1, $s2, 176
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	addi.d	$s8, $s8, 1
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s8, $a2, .LBB38_61
# %bb.28:                               #   in Loop: Header=BB38_27 Depth=1
	ld.d	$a2, $s2, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s8
	bltz	$a2, .LBB38_31
# %bb.29:                               #   in Loop: Header=BB38_27 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB38_32
# %bb.30:                               #   in Loop: Header=BB38_27 Depth=1
	slli.d	$a0, $s8, 7
	add.d	$a0, $a1, $a0
	b	.LBB38_34
	.p2align	4, , 16
.LBB38_31:                              #   in Loop: Header=BB38_27 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB38_33
	.p2align	4, , 16
.LBB38_32:                              #   in Loop: Header=BB38_27 Depth=1
	srli.d	$a1, $a2, 2
.LBB38_33:                              #   in Loop: Header=BB38_27 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB38_34:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit65
                                        #   in Loop: Header=BB38_27 Depth=1
	addi.d	$a2, $sp, 96
	st.d	$a2, $sp, 80
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	ori	$a3, $zero, 1
	st.b	$a3, $a0, 36
	st.d	$a1, $sp, 144
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB38_37
# %bb.35:                               # %.noexc.i.i67
                                        #   in Loop: Header=BB38_27 Depth=1
.Ltmp537:
	addi.d	$a0, $sp, 80
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp538:
# %bb.36:                               # %.noexc68
                                        #   in Loop: Header=BB38_27 Depth=1
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
.LBB38_37:                              # %._crit_edge.i.i.i66
                                        #   in Loop: Header=BB38_27 Depth=1
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB38_41
# %bb.38:                               # %._crit_edge.i.i.i66
                                        #   in Loop: Header=BB38_27 Depth=1
	bnez	$a1, .LBB38_40
# %bb.39:                               #   in Loop: Header=BB38_27 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB38_41
	.p2align	4, , 16
.LBB38_40:                              #   in Loop: Header=BB38_27 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB38_41:                              #   in Loop: Header=BB38_27 Depth=1
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a3, $sp, 144
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s8
	st.d	$a3, $sp, 88
	bltz	$a1, .LBB38_44
# %bb.42:                               #   in Loop: Header=BB38_27 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB38_45
# %bb.43:                               #   in Loop: Header=BB38_27 Depth=1
	slli.d	$a0, $s8, 7
	add.d	$a0, $a2, $a0
	ld.w	$s1, $a0, 40
	bgtz	$s1, .LBB38_47
	b	.LBB38_51
	.p2align	4, , 16
.LBB38_44:                              #   in Loop: Header=BB38_27 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB38_46
	.p2align	4, , 16
.LBB38_45:                              #   in Loop: Header=BB38_27 Depth=1
	srli.d	$a2, $a1, 2
.LBB38_46:                              #   in Loop: Header=BB38_27 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	ld.w	$s1, $a0, 40
	blez	$s1, .LBB38_51
.LBB38_47:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB38_27 Depth=1
	slli.d	$s4, $fp, 5
	.p2align	4, , 16
.LBB38_48:                              # %.lr.ph
                                        #   Parent Loop BB38_27 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
.Ltmp540:
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	st.d	$a0, $sp, 16
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	st.d	$a0, $sp, 8
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	st.d	$a0, $sp, 0
	move	$a0, $s2
	move	$a1, $s7
	move	$a2, $s8
	move	$a3, $fp
	move	$a4, $s5
	move	$a5, $s6
	move	$a6, $s0
	move	$a7, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd14error_dup_lineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiRSt6vectorIiSaIiEERS8_IPS0_SaISC_EESB_RKSA_iRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp541:
# %bb.49:                               #   in Loop: Header=BB38_48 Depth=2
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	add.d	$a0, $a0, $s4
.Ltmp542:
	addi.d	$a1, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp543:
# %bb.50:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_.exit
                                        #   in Loop: Header=BB38_48 Depth=2
	addi.w	$fp, $fp, 1
	addi.w	$s1, $s1, -1
	addi.d	$s4, $s4, 32
	bnez	$s1, .LBB38_48
.LBB38_51:                              # %._crit_edge
                                        #   in Loop: Header=BB38_27 Depth=1
	ld.d	$a0, $sp, 80
	addi.d	$a1, $sp, 96
	beq	$a0, $a1, .LBB38_27
# %bb.52:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i72
                                        #   in Loop: Header=BB38_27 Depth=1
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB38_27
.LBB38_53:
	srai.d	$a2, $a1, 2
	b	.LBB38_58
.LBB38_54:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.w	$a4, $zero, -2
	addi.d	$a1, $a3, 2
	blt	$a3, $a4, .LBB38_64
# %bb.55:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB38_65
# %bb.56:
	addi.d	$a0, $a2, 256
	b	.LBB38_67
.LBB38_57:
	srli.d	$a2, $a1, 2
.LBB38_58:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB38_59:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
.Ltmp548:
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word15get_single_charERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp549:
# %bb.60:
	move	$a4, $a0
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp550:
	ori	$a3, $zero, 1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
.Ltmp551:
.LBB38_61:                              # %_ZN2PP3Cmd13set_processedEb.exit
	ld.d	$a0, $sp, 120
	beqz	$a0, .LBB38_63
# %bb.62:
	ld.d	$a1, $sp, 136
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB38_63:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$s8, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB38_64:
	srai.d	$a2, $a1, 2
	b	.LBB38_66
.LBB38_65:
	srli.d	$a2, $a1, 2
.LBB38_66:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB38_67:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit62
	ori	$a2, $zero, 1
	addi.d	$s0, $sp, 96
	st.d	$s0, $sp, 80
	ld.d	$a1, $a0, 8
	ld.d	$fp, $a0, 0
	st.b	$a2, $a0, 36
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 144
	move	$a0, $s0
	bltu	$a1, $a2, .LBB38_70
# %bb.68:                               # %.noexc.i.i
.Ltmp545:
	addi.d	$a0, $sp, 80
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp546:
# %bb.69:                               # %.noexc63
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
.LBB38_70:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB38_74
# %bb.71:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB38_73
# %bb.72:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB38_74
.LBB38_73:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB38_74:
	ld.d	$a2, $sp, 144
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$fp, $a0, 0
	st.d	$a2, $sp, 88
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB38_78
# %bb.75:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 80
	beq	$a1, $s0, .LBB38_81
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i
	st.d	$a1, $fp, 0
	st.d	$a2, $fp, 8
	ld.d	$a2, $sp, 96
	ld.d	$a1, $fp, 16
	st.d	$a2, $fp, 16
	beqz	$a0, .LBB38_80
# %bb.77:
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
	st.d	$zero, $sp, 88
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 80
	bne	$a0, $s0, .LBB38_87
	b	.LBB38_61
.LBB38_78:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 80
	beq	$a1, $s0, .LBB38_81
# %bb.79:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i.thread
	st.d	$a1, $fp, 0
	st.d	$a2, $fp, 8
	ld.d	$a0, $sp, 96
	st.d	$a0, $fp, 16
.LBB38_80:
	st.d	$s0, $sp, 80
	move	$a0, $s0
	st.d	$zero, $sp, 88
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 80
	bne	$a0, $s0, .LBB38_87
	b	.LBB38_61
.LBB38_81:
	addi.d	$a3, $sp, 80
	beq	$a3, $fp, .LBB38_88
# %bb.82:
	beqz	$a2, .LBB38_86
# %bb.83:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB38_85
# %bb.84:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB38_86
.LBB38_85:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB38_86:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 88
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 80
	st.d	$zero, $sp, 88
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 80
	beq	$a0, $s0, .LBB38_61
.LBB38_87:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB38_61
.LBB38_88:
	move	$a0, $a1
	st.d	$zero, $sp, 88
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 80
	bne	$a0, $s0, .LBB38_87
	b	.LBB38_61
.LBB38_89:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB38_90:
.Ltmp547:
	b	.LBB38_97
.LBB38_91:
.Ltmp536:
	b	.LBB38_97
.LBB38_92:
.Ltmp533:
	b	.LBB38_97
.LBB38_93:
.Ltmp530:
	b	.LBB38_97
.LBB38_94:
.Ltmp552:
	b	.LBB38_97
.LBB38_95:
.Ltmp539:
	b	.LBB38_97
.LBB38_96:
.Ltmp525:
.LBB38_97:
	move	$fp, $a0
	ld.d	$a0, $sp, 120
	beqz	$a0, .LBB38_100
	b	.LBB38_102
.LBB38_98:
.Ltmp544:
	ld.d	$a2, $sp, 80
	move	$fp, $a0
	addi.d	$a0, $sp, 96
	bne	$a2, $a0, .LBB38_101
# %bb.99:
	ld.d	$a0, $sp, 120
	bnez	$a0, .LBB38_102
.LBB38_100:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit80
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB38_101:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i76
	ld.d	$a0, $sp, 96
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 120
	beqz	$a0, .LBB38_100
.LBB38_102:
	ld.d	$a1, $sp, 136
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end38:
	.size	_ZN2PP3Cmd8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbRS8_IPS0_SaISG_EERSD_iSK_bRNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end38-_ZN2PP3Cmd8get_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS6_SaIS6_EERKS8_IiSaIiEEbRS8_IPS0_SaISG_EERSD_iSK_bRNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table38:
.Lexception18:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Lfunc_begin18-.Lfunc_begin18  # >> Call Site 1 <<
	.uleb128 .Ltmp523-.Lfunc_begin18        #   Call between .Lfunc_begin18 and .Ltmp523
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp523-.Lfunc_begin18        # >> Call Site 2 <<
	.uleb128 .Ltmp524-.Ltmp523              #   Call between .Ltmp523 and .Ltmp524
	.uleb128 .Ltmp525-.Lfunc_begin18        #     jumps to .Ltmp525
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp526-.Lfunc_begin18        # >> Call Site 3 <<
	.uleb128 .Ltmp527-.Ltmp526              #   Call between .Ltmp526 and .Ltmp527
	.uleb128 .Ltmp552-.Lfunc_begin18        #     jumps to .Ltmp552
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp528-.Lfunc_begin18        # >> Call Site 4 <<
	.uleb128 .Ltmp529-.Ltmp528              #   Call between .Ltmp528 and .Ltmp529
	.uleb128 .Ltmp530-.Lfunc_begin18        #     jumps to .Ltmp530
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp531-.Lfunc_begin18        # >> Call Site 5 <<
	.uleb128 .Ltmp532-.Ltmp531              #   Call between .Ltmp531 and .Ltmp532
	.uleb128 .Ltmp533-.Lfunc_begin18        #     jumps to .Ltmp533
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp534-.Lfunc_begin18        # >> Call Site 6 <<
	.uleb128 .Ltmp535-.Ltmp534              #   Call between .Ltmp534 and .Ltmp535
	.uleb128 .Ltmp536-.Lfunc_begin18        #     jumps to .Ltmp536
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp537-.Lfunc_begin18        # >> Call Site 7 <<
	.uleb128 .Ltmp538-.Ltmp537              #   Call between .Ltmp537 and .Ltmp538
	.uleb128 .Ltmp539-.Lfunc_begin18        #     jumps to .Ltmp539
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp538-.Lfunc_begin18        # >> Call Site 8 <<
	.uleb128 .Ltmp540-.Ltmp538              #   Call between .Ltmp538 and .Ltmp540
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp540-.Lfunc_begin18        # >> Call Site 9 <<
	.uleb128 .Ltmp543-.Ltmp540              #   Call between .Ltmp540 and .Ltmp543
	.uleb128 .Ltmp544-.Lfunc_begin18        #     jumps to .Ltmp544
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp543-.Lfunc_begin18        # >> Call Site 10 <<
	.uleb128 .Ltmp548-.Ltmp543              #   Call between .Ltmp543 and .Ltmp548
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp548-.Lfunc_begin18        # >> Call Site 11 <<
	.uleb128 .Ltmp551-.Ltmp548              #   Call between .Ltmp548 and .Ltmp551
	.uleb128 .Ltmp552-.Lfunc_begin18        #     jumps to .Ltmp552
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp551-.Lfunc_begin18        # >> Call Site 12 <<
	.uleb128 .Ltmp545-.Ltmp551              #   Call between .Ltmp551 and .Ltmp545
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp545-.Lfunc_begin18        # >> Call Site 13 <<
	.uleb128 .Ltmp546-.Ltmp545              #   Call between .Ltmp545 and .Ltmp546
	.uleb128 .Ltmp547-.Lfunc_begin18        #     jumps to .Ltmp547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp546-.Lfunc_begin18        # >> Call Site 14 <<
	.uleb128 .Lfunc_end38-.Ltmp546          #   Call between .Ltmp546 and .Lfunc_end38
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end18:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd8get_sizeERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd8get_sizeERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd8get_sizeERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd8get_sizeERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd8get_sizeERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception19
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a4, $fp, 0
	sub.d	$s5, $a1, $a4
	slli.d	$s7, $s5, 30
	srai.d	$s6, $s7, 32
	srli.d	$a1, $s6, 61
	bnez	$a1, .LBB39_28
# %bb.1:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i
	move	$s0, $a3
	move	$s1, $a2
	move	$s2, $a0
	beqz	$s7, .LBB39_3
# %bb.2:                                # %.lr.ph.preheader.i.i.i.i.i
	srai.d	$s4, $s7, 30
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s3, $a0
	st.d	$a0, $sp, 40
	alsl.d	$a0, $s6, $a0, 2
	st.d	$a0, $sp, 56
	move	$a0, $s3
	move	$a1, $zero
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s3, $s4
	b	.LBB39_4
.LBB39_3:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
	move	$s3, $zero
	move	$a0, $zero
	st.d	$zero, $sp, 56
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 40
.LBB39_4:                               # %.loopexit55
	st.d	$a0, $sp, 48
.Ltmp553:
	addi.d	$a1, $sp, 40
	move	$a0, $s2
	move	$a2, $s1
	move	$a3, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp554:
# %bb.5:
	beqz	$a0, .LBB39_25
# %bb.6:                                # %_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_.exit.i34
	st.w	$zero, $sp, 36
	beqz	$s7, .LBB39_9
# %bb.7:                                # %.lr.ph.preheader.i.i.i.i.i36
	srai.d	$s3, $s7, 30
.Ltmp556:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp557:
# %bb.8:                                # %.noexc45
	move	$s4, $a0
	st.d	$a0, $sp, 8
	alsl.d	$a0, $s6, $a0, 2
	st.d	$a0, $sp, 24
	move	$a0, $s4
	move	$a1, $zero
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	add.d	$a0, $s4, $s3
	b	.LBB39_10
.LBB39_9:                               # %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i43
	move	$a0, $zero
	st.d	$zero, $sp, 24
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 8
.LBB39_10:                              # %.loopexit
	st.d	$a0, $sp, 16
.Ltmp559:
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 8
	addi.d	$a3, $sp, 36
	move	$a0, $s2
	move	$a4, $s1
	move	$a5, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_)
	jirl	$ra, $ra, 0
.Ltmp560:
# %bb.11:
	beqz	$a0, .LBB39_22
# %bb.12:                               # %.preheader
	srai.d	$a1, $s5, 2
	addi.w	$a4, $a1, 0
	ld.d	$a0, $fp, 0
	addi.w	$a1, $a1, -1
	ori	$a2, $zero, 2
	ori	$a3, $zero, 1
	blt	$a4, $a2, .LBB39_20
# %bb.13:                               # %.lr.ph
	ori	$a3, $zero, 9
	bstrpick.d	$a2, $a1, 31, 0
	bgeu	$a4, $a3, .LBB39_15
# %bb.14:
	move	$a4, $zero
	ori	$a3, $zero, 1
	b	.LBB39_18
.LBB39_15:                              # %vector.ph
	bstrpick.d	$a3, $a2, 30, 3
	slli.d	$a4, $a3, 3
	vrepli.w	$vr0, 1
	addi.d	$a3, $a0, 16
	move	$a5, $a4
	vori.b	$vr1, $vr0, 0
	.p2align	4, , 16
.LBB39_16:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	vld	$vr2, $a3, -16
	vld	$vr3, $a3, 0
	vmul.w	$vr0, $vr2, $vr0
	vmul.w	$vr1, $vr3, $vr1
	addi.d	$a5, $a5, -8
	addi.d	$a3, $a3, 32
	bnez	$a5, .LBB39_16
# %bb.17:                               # %middle.block
	vmul.w	$vr0, $vr1, $vr0
	vshuf4i.w	$vr1, $vr0, 14
	vmul.w	$vr0, $vr0, $vr1
	vreplvei.w	$vr1, $vr0, 1
	vmul.w	$vr0, $vr0, $vr1
	vpickve2gr.w	$a3, $vr0, 0
	beq	$a4, $a2, .LBB39_20
.LBB39_18:                              # %scalar.ph.preheader
	alsl.d	$a5, $a4, $a0, 2
	sub.d	$a2, $a2, $a4
	.p2align	4, , 16
.LBB39_19:                              # %scalar.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$a4, $a5, 0
	mul.w	$a3, $a4, $a3
	addi.d	$a2, $a2, -1
	addi.d	$a5, $a5, 4
	bnez	$a2, .LBB39_19
.LBB39_20:                              # %._crit_edge
	ld.d	$a2, $sp, 40
	ld.w	$a4, $sp, 36
	slli.d	$a5, $a1, 2
	ldx.w	$a2, $a2, $a5
	ldx.w	$a5, $a0, $a5
	addi.w	$a4, $a4, -1
	div.w	$a3, $a4, $a3
	add.w	$a2, $a3, $a2
	bge	$a5, $a2, .LBB39_22
# %bb.21:
	alsl.d	$a0, $a1, $a0, 2
	st.w	$a2, $a0, 0
.LBB39_22:
	ld.d	$a0, $sp, 8
	beqz	$a0, .LBB39_24
# %bb.23:
	ld.d	$a1, $sp, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_24:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit48
	ld.d	$s3, $sp, 40
.LBB39_25:
	beqz	$s3, .LBB39_27
# %bb.26:
	ld.d	$a0, $sp, 56
	sub.d	$a1, $a0, $s3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_27:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit50
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB39_28:                              # %.noexc
	pcalau12i	$a0, %pc_hi20(.L.str.224)
	addi.d	$a0, $a0, %pc_lo12(.L.str.224)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB39_29:
.Ltmp558:
	move	$fp, $a0
	b	.LBB39_32
.LBB39_30:
.Ltmp561:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beqz	$a2, .LBB39_32
# %bb.31:
	ld.d	$a0, $sp, 24
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_32:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$s3, $sp, 40
	b	.LBB39_34
.LBB39_33:
.Ltmp555:
	move	$fp, $a0
.LBB39_34:
	beqz	$s3, .LBB39_36
# %bb.35:
	ld.d	$a0, $sp, 56
	sub.d	$a1, $a0, $s3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB39_36:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit52
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end39:
	.size	_ZN2PP3Cmd8get_sizeERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end39-_ZN2PP3Cmd8get_sizeERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table39:
.Lexception19:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Lfunc_begin19-.Lfunc_begin19  # >> Call Site 1 <<
	.uleb128 .Ltmp553-.Lfunc_begin19        #   Call between .Lfunc_begin19 and .Ltmp553
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp553-.Lfunc_begin19        # >> Call Site 2 <<
	.uleb128 .Ltmp554-.Ltmp553              #   Call between .Ltmp553 and .Ltmp554
	.uleb128 .Ltmp555-.Lfunc_begin19        #     jumps to .Ltmp555
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp556-.Lfunc_begin19        # >> Call Site 3 <<
	.uleb128 .Ltmp557-.Ltmp556              #   Call between .Ltmp556 and .Ltmp557
	.uleb128 .Ltmp558-.Lfunc_begin19        #     jumps to .Ltmp558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp557-.Lfunc_begin19        # >> Call Site 4 <<
	.uleb128 .Ltmp559-.Ltmp557              #   Call between .Ltmp557 and .Ltmp559
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp559-.Lfunc_begin19        # >> Call Site 5 <<
	.uleb128 .Ltmp560-.Ltmp559              #   Call between .Ltmp559 and .Ltmp560
	.uleb128 .Ltmp561-.Lfunc_begin19        #     jumps to .Ltmp561
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp560-.Lfunc_begin19        # >> Call Site 6 <<
	.uleb128 .Lfunc_end39-.Ltmp560          #   Call between .Ltmp560 and .Lfunc_end39
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end19:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd9get_sizebERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd9get_sizebERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd9get_sizebERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd9get_sizebERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd9get_sizebERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception20
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.d	$a4, $a1, 8
	ld.d	$a5, $a1, 0
	sub.d	$a4, $a4, $a5
	srai.d	$a4, $a4, 2
	addi.w	$s1, $a4, 0
	ori	$a4, $zero, 2
	move	$fp, $a3
	move	$s0, $a2
	move	$s2, $a0
	bne	$s1, $a4, .LBB40_14
# %bb.1:                                # %.noexc
	move	$s3, $a1
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	st.d	$a0, $sp, 40
	addi.d	$a0, $a0, 8
	st.d	$a0, $sp, 56
	st.d	$zero, $s1, 0
	st.d	$a0, $sp, 48
.Ltmp562:
	addi.d	$a1, $sp, 40
	move	$a0, $s2
	move	$a2, $s0
	move	$a3, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12check_syntaxERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp563:
# %bb.2:
	beqz	$a0, .LBB40_13
# %bb.3:
	st.w	$zero, $sp, 36
.Ltmp565:
	ori	$a0, $zero, 8
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp566:
# %bb.4:                                # %.noexc39
	st.d	$a0, $sp, 8
	addi.d	$a1, $a0, 8
	st.d	$a1, $sp, 24
	st.d	$zero, $a0, 0
	st.d	$a1, $sp, 16
.Ltmp568:
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 8
	addi.d	$a3, $sp, 36
	move	$a0, $s2
	move	$a4, $s0
	move	$a5, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9get_nvalsERSt6vectorIiSaIiEERKS3_RiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES7_)
	jirl	$ra, $ra, 0
.Ltmp569:
# %bb.5:
	beqz	$a0, .LBB40_10
# %bb.6:
	ld.d	$a0, $sp, 40
	ld.d	$a1, $s3, 0
	ld.w	$a2, $a0, 0
	ld.w	$a3, $sp, 36
	ld.w	$a4, $a1, 0
	add.d	$a2, $a2, $a3
	addi.w	$a2, $a2, -1
	bge	$a4, $a2, .LBB40_8
# %bb.7:
	st.w	$a2, $a1, 0
.LBB40_8:
	ld.w	$a0, $a0, 4
	ld.w	$a2, $a1, 4
	bge	$a2, $a0, .LBB40_10
# %bb.9:
	st.w	$a0, $a1, 4
.LBB40_10:
	ld.d	$a0, $sp, 8
	beqz	$a0, .LBB40_12
# %bb.11:
	ld.d	$a1, $sp, 24
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB40_12:
	ld.d	$s1, $sp, 40
	beqz	$s1, .LBB40_27
.LBB40_13:                              # %.thread
	ld.d	$a0, $sp, 56
	sub.d	$a1, $a0, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB40_27
.LBB40_14:
	move	$a0, $s2
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s0, 16
	pcalau12i	$a0, %pc_hi20(.L.str.32)
	addi.d	$a1, $a0, %pc_lo12(.L.str.32)
	ori	$a2, $zero, 34
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB40_28
# %bb.15:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB40_17
# %bb.16:
	ld.bu	$a0, $s0, 67
	b	.LBB40_18
.LBB40_17:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB40_18:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.33)
	addi.d	$a1, $a0, %pc_lo12(.L.str.33)
	ori	$a2, $zero, 14
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB40_28
# %bb.19:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i49
	ld.bu	$a1, $s0, 56
	beqz	$a1, .LBB40_21
# %bb.20:
	ld.bu	$a1, $s0, 67
	b	.LBB40_22
.LBB40_21:
	move	$s1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s1
.LBB40_22:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit52
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB40_28
# %bb.23:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i54
	ld.bu	$a1, $s0, 56
	beqz	$a1, .LBB40_25
# %bb.24:
	ld.bu	$a1, $s0, 67
	b	.LBB40_26
.LBB40_25:
	move	$s1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s1
.LBB40_26:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit57
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB40_27:
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB40_28:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB40_29:
.Ltmp570:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	bnez	$a2, .LBB40_32
# %bb.30:
	ld.d	$s1, $sp, 40
	bnez	$s1, .LBB40_35
.LBB40_31:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit46
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB40_32:
	ld.d	$a0, $sp, 24
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$s1, $sp, 40
	beqz	$s1, .LBB40_31
	b	.LBB40_35
.LBB40_33:
.Ltmp567:
	move	$fp, $a0
	ld.d	$s1, $sp, 40
	beqz	$s1, .LBB40_31
	b	.LBB40_35
.LBB40_34:                              # %.thread64
.Ltmp564:
	move	$fp, $a0
.LBB40_35:
	ld.d	$a0, $sp, 56
	sub.d	$a1, $a0, $s1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end40:
	.size	_ZN2PP3Cmd9get_sizebERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end40-_ZN2PP3Cmd9get_sizebERSt6vectorIiSaIiEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table40:
.Lexception20:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Lfunc_begin20-.Lfunc_begin20  # >> Call Site 1 <<
	.uleb128 .Ltmp562-.Lfunc_begin20        #   Call between .Lfunc_begin20 and .Ltmp562
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp562-.Lfunc_begin20        # >> Call Site 2 <<
	.uleb128 .Ltmp563-.Ltmp562              #   Call between .Ltmp562 and .Ltmp563
	.uleb128 .Ltmp564-.Lfunc_begin20        #     jumps to .Ltmp564
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp565-.Lfunc_begin20        # >> Call Site 3 <<
	.uleb128 .Ltmp566-.Ltmp565              #   Call between .Ltmp565 and .Ltmp566
	.uleb128 .Ltmp567-.Lfunc_begin20        #     jumps to .Ltmp567
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp568-.Lfunc_begin20        # >> Call Site 4 <<
	.uleb128 .Ltmp569-.Ltmp568              #   Call between .Ltmp568 and .Ltmp569
	.uleb128 .Ltmp570-.Lfunc_begin20        #     jumps to .Ltmp570
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp569-.Lfunc_begin20        # >> Call Site 5 <<
	.uleb128 .Lfunc_end40-.Ltmp569          #   Call between .Ltmp569 and .Lfunc_end40
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end20:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,"axG",@progbits,_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,comdat
	.weak	_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_ # -- Begin function _ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.p2align	5
	.type	_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,@function
_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_: # @_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$s1, $a0
	ld.d	$fp, $a0, 8
	move	$s0, $a1
	move	$a0, $a1
	pcaddu18i	$ra, %call36(strlen)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	ori	$a0, $zero, 1
	bne	$fp, $a1, .LBB41_4
# %bb.1:
	beqz	$fp, .LBB41_3
# %bb.2:
	ld.d	$a0, $s1, 0
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltu	$a0, $zero, $a0
	b	.LBB41_4
.LBB41_3:
	move	$a0, $zero
.LBB41_4:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end41:
	.size	_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_, .Lfunc_end41-_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd19check_for_dimensionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd19check_for_dimensionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd19check_for_dimensionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd19check_for_dimensionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd19check_for_dimensionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception21
# %bb.0:
	addi.d	$sp, $sp, -576
	.cfi_def_cfa_offset 576
	st.d	$ra, $sp, 568                   # 8-byte Folded Spill
	st.d	$fp, $sp, 560                   # 8-byte Folded Spill
	st.d	$s0, $sp, 552                   # 8-byte Folded Spill
	st.d	$s1, $sp, 544                   # 8-byte Folded Spill
	st.d	$s2, $sp, 536                   # 8-byte Folded Spill
	st.d	$s3, $sp, 528                   # 8-byte Folded Spill
	st.d	$s4, $sp, 520                   # 8-byte Folded Spill
	st.d	$s5, $sp, 512                   # 8-byte Folded Spill
	st.d	$s6, $sp, 504                   # 8-byte Folded Spill
	st.d	$s7, $sp, 496                   # 8-byte Folded Spill
	st.d	$s8, $sp, 488                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a0
	ld.d	$a3, $a0, 176
	ld.d	$a4, $a0, 184
	ld.d	$a0, $a0, 200
	move	$s8, $a2
	move	$fp, $a1
	sub.d	$a2, $a3, $a4
	srai.d	$a1, $a2, 7
	bltz	$a2, .LBB42_3
# %bb.1:
	ori	$a2, $zero, 4
	bltu	$a1, $a2, .LBB42_5
# %bb.2:
	srli.d	$a2, $a1, 2
	b	.LBB42_4
.LBB42_3:
	srai.d	$a2, $a2, 9
.LBB42_4:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a3, $a0, $a1
.LBB42_5:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$s6, $sp, 464
	st.d	$s6, $sp, 448
	ld.d	$a1, $a3, 8
	ld.d	$s2, $a3, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $s6
	bltu	$a1, $a2, .LBB42_7
# %bb.6:                                # %.noexc.i.i
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 448
	st.d	$a1, $sp, 464
.LBB42_7:                               # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	beq	$a1, $a2, .LBB42_11
# %bb.8:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB42_10
# %bb.9:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB42_11
.LBB42_10:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB42_11:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a1, $sp, 112
	ld.d	$a2, $s1, 176
	ld.d	$a3, $s1, 184
	ld.d	$a0, $s1, 200
	st.d	$a1, $sp, 456
	sub.d	$a3, $a2, $a3
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB42_14
# %bb.12:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB42_16
# %bb.13:
	srli.d	$a2, $a1, 2
	b	.LBB42_15
.LBB42_14:
	srai.d	$a2, $a3, 9
.LBB42_15:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB42_16:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit63
	ld.w	$a0, $a2, 32
	ori	$a1, $zero, 13
	bne	$a0, $a1, .LBB42_55
# %bb.17:                               # %.preheader
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	move	$fp, $zero
	move	$s0, $zero
	addi.d	$s3, $sp, 128
	ori	$s4, $zero, 3
	ori	$s5, $zero, 16
	ori	$s7, $zero, 1
	b	.LBB42_21
	.p2align	4, , 16
.LBB42_18:                              #   in Loop: Header=BB42_21 Depth=1
	move	$s2, $zero
	beq	$a0, $s3, .LBB42_20
.LBB42_19:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB42_21 Depth=1
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB42_21 Depth=1
	addi.d	$s0, $s0, 1
	addi.d	$fp, $fp, 128
	bnez	$s2, .LBB42_55
.LBB42_21:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s1, 232
	ld.d	$a0, $s1, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s1, 208
	ld.d	$a4, $s1, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s1, 192
	ld.d	$a1, $s1, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s0, $a2, .LBB42_37
# %bb.22:                               #   in Loop: Header=BB42_21 Depth=1
	ld.d	$a2, $s1, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s0, $a2
	bltz	$a2, .LBB42_25
# %bb.23:                               #   in Loop: Header=BB42_21 Depth=1
	bltu	$s4, $a2, .LBB42_26
# %bb.24:                               #   in Loop: Header=BB42_21 Depth=1
	add.d	$a0, $a1, $fp
	b	.LBB42_28
	.p2align	4, , 16
.LBB42_25:                              #   in Loop: Header=BB42_21 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB42_27
	.p2align	4, , 16
.LBB42_26:                              #   in Loop: Header=BB42_21 Depth=1
	srli.d	$a1, $a2, 2
.LBB42_27:                              #   in Loop: Header=BB42_21 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB42_28:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit65
                                        #   in Loop: Header=BB42_21 Depth=1
	st.d	$s3, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 312
	move	$a0, $s3
	bltu	$a1, $s5, .LBB42_31
# %bb.29:                               # %.noexc.i.i67
                                        #   in Loop: Header=BB42_21 Depth=1
.Ltmp615:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 312
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp616:
# %bb.30:                               # %.noexc
                                        #   in Loop: Header=BB42_21 Depth=1
	ld.d	$a1, $sp, 312
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB42_31:                              # %._crit_edge.i.i.i66
                                        #   in Loop: Header=BB42_21 Depth=1
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB42_34
# %bb.32:                               # %._crit_edge.i.i.i66
                                        #   in Loop: Header=BB42_21 Depth=1
	bnez	$a1, .LBB42_35
# %bb.33:                               #   in Loop: Header=BB42_21 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB42_34:                              #   in Loop: Header=BB42_21 Depth=1
	ld.d	$a1, $sp, 312
	ld.d	$a0, $sp, 112
	st.d	$a1, $sp, 120
	bne	$a1, $s7, .LBB42_18
	b	.LBB42_36
	.p2align	4, , 16
.LBB42_35:                              #   in Loop: Header=BB42_21 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 312
	ld.d	$a0, $sp, 112
	st.d	$a1, $sp, 120
	bne	$a1, $s7, .LBB42_18
.LBB42_36:                              #   in Loop: Header=BB42_21 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -61
	sltui	$s2, $a1, 1
	bne	$a0, $s3, .LBB42_19
	b	.LBB42_20
.LBB42_37:                              # %.critedge
	ld.d	$a2, $s1, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	ld.d	$a4, $sp, 40                    # 8-byte Folded Reload
	blt	$a3, $a4, .LBB42_40
# %bb.38:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB42_41
# %bb.39:
	addi.d	$a0, $a1, 128
	b	.LBB42_43
.LBB42_40:
	srai.d	$a1, $a2, 2
	b	.LBB42_42
.LBB42_41:
	srli.d	$a1, $a2, 2
.LBB42_42:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB42_43:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit73
	addi.d	$fp, $sp, 128
	st.d	$fp, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 312
	move	$a0, $fp
	bltu	$a1, $a2, .LBB42_46
# %bb.44:                               # %.noexc.i.i75
.Ltmp571:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 312
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp572:
# %bb.45:                               # %.noexc76
	ld.d	$a1, $sp, 312
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB42_46:                              # %._crit_edge.i.i.i74
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB42_50
# %bb.47:                               # %._crit_edge.i.i.i74
	bnez	$a1, .LBB42_49
# %bb.48:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB42_50
.LBB42_49:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB42_50:
	ld.d	$a0, $sp, 312
	ld.d	$s2, $sp, 112
	st.d	$a0, $sp, 120
	ori	$a1, $zero, 9
	ori	$s0, $zero, 1
	bne	$a0, $a1, .LBB42_52
# %bb.51:
	pcalau12i	$a0, %pc_hi20(.L.str.58)
	addi.d	$a1, $a0, %pc_lo12(.L.str.58)
	ori	$a2, $zero, 9
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltu	$s0, $zero, $a0
.LBB42_52:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	beq	$s2, $fp, .LBB42_54
# %bb.53:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i78
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_54:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit80
	beqz	$s0, .LBB42_58
.LBB42_55:
	move	$fp, $zero
	ld.d	$a0, $sp, 448
	beq	$a0, $s6, .LBB42_57
.LBB42_56:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i216
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_57:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit218
	move	$a0, $fp
	ld.d	$s8, $sp, 488                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 496                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 504                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 512                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 520                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 528                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 536                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 544                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 552                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 560                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 568                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 576
	ret
.LBB42_58:
	st.d	$s8, $sp, 16                    # 8-byte Folded Spill
	ld.d	$a0, $s1, 80
	ld.d	$fp, $a0, 16
	beqz	$fp, .LBB42_69
# %bb.59:                               # %.lr.ph.i.i.i
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	addi.d	$s8, $a0, 8
	ld.d	$s7, $sp, 456
	ld.d	$s2, $sp, 448
	lu12i.w	$a0, 524287
	ori	$s5, $a0, 4095
	ori	$s0, $zero, 16
	ori	$s4, $zero, 24
	move	$s3, $fp
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	b	.LBB42_62
	.p2align	4, , 16
.LBB42_60:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB42_62 Depth=1
	sub.d	$a0, $s6, $s7
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s5
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s5, $a1
	or	$a0, $a0, $a1
.LBB42_61:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB42_62 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s3, $a0
	masknez	$a2, $s0, $a0
	maskeqz	$a3, $s4, $a0
	or	$a2, $a3, $a2
	ldx.d	$s3, $s3, $a2
	maskeqz	$a0, $s8, $a0
	or	$s8, $a0, $a1
	beqz	$s3, .LBB42_64
.LBB42_62:                              # =>This Inner Loop Header: Depth=1
	ld.d	$s6, $s3, 40
	sltu	$a0, $s7, $s6
	masknez	$a1, $s6, $a0
	maskeqz	$a0, $s7, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB42_60
# %bb.63:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB42_62 Depth=1
	ld.d	$a0, $s3, 32
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB42_61
	b	.LBB42_60
.LBB42_64:                              # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i
	addi.d	$s6, $sp, 464
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	beq	$s8, $a0, .LBB42_69
# %bb.65:
	ld.d	$s0, $s8, 40
	sltu	$a0, $s0, $s7
	masknez	$a1, $s7, $a0
	maskeqz	$a0, $s0, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB42_67
# %bb.66:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s8, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB42_68
.LBB42_67:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $s7, $s0
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s5
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s5, $a1
	or	$a0, $a0, $a1
.LBB42_68:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB42_108
.LBB42_69:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit.thread
	addi.d	$s3, $sp, 296
	ld.d	$a1, $sp, 456
	ld.d	$s2, $sp, 448
	st.d	$s3, $sp, 280
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $s3
	bltu	$a1, $a2, .LBB42_72
# %bb.70:                               # %.noexc.i
.Ltmp574:
	addi.d	$a0, $sp, 280
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp575:
# %bb.71:                               # %.noexc84
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 280
	st.d	$a1, $sp, 296
.LBB42_72:                              # %._crit_edge.i.i
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB42_76
# %bb.73:                               # %._crit_edge.i.i
	bnez	$a1, .LBB42_75
# %bb.74:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB42_76
.LBB42_75:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB42_76:
	ld.d	$a0, $sp, 112
	st.d	$a0, $sp, 288
.Ltmp577:
	addi.d	$a0, $sp, 312
	addi.d	$a1, $sp, 280
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp578:
# %bb.77:
	ld.d	$a0, $sp, 280
	beq	$a0, $s3, .LBB42_79
# %bb.78:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i85
	ld.d	$a1, $sp, 296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_79:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit87
	ld.d	$s3, $s1, 80
	addi.d	$s2, $sp, 96
	ld.d	$a1, $sp, 320
	ld.d	$s4, $sp, 312
	st.d	$s2, $sp, 80
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 480
	move	$a0, $s2
	bltu	$a1, $a2, .LBB42_82
# %bb.80:                               # %.noexc.i.i89
.Ltmp580:
	addi.d	$a0, $sp, 80
	addi.d	$a1, $sp, 480
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp581:
# %bb.81:                               # %.noexc90
	ld.d	$a1, $sp, 480
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
.LBB42_82:                              # %._crit_edge.i.i.i88
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB42_86
# %bb.83:                               # %._crit_edge.i.i.i88
	bnez	$a1, .LBB42_85
# %bb.84:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB42_86
.LBB42_85:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB42_86:
	ld.d	$a0, $sp, 80
	ld.d	$fp, $sp, 480
	addi.d	$s4, $sp, 128
	st.d	$s4, $sp, 112
	beq	$a0, $s2, .LBB42_88
# %bb.87:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i91
	ld.d	$a1, $sp, 96
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
	b	.LBB42_89
.LBB42_88:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	addi.d	$a2, $fp, 1
	move	$a0, $s4
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB42_89:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	st.d	$fp, $sp, 120
	st.d	$s2, $sp, 80
	st.d	$zero, $sp, 88
	st.b	$zero, $sp, 96
	addi.d	$a0, $sp, 144
.Ltmp583:
	addi.d	$a1, $sp, 312
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp584:
# %bb.90:                               # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit
.Ltmp586:
	addi.d	$a1, $sp, 112
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp587:
# %bb.91:
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 80
	beq	$a0, $s2, .LBB42_93
# %bb.92:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i92
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_93:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit94
	ld.d	$a0, $sp, 416
	addi.d	$a1, $sp, 432
	beq	$a0, $a1, .LBB42_95
# %bb.94:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i95
	ld.d	$a1, $sp, 432
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_95:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i96
	ld.d	$a0, $sp, 384
	beqz	$a0, .LBB42_97
# %bb.96:
	ld.d	$a1, $sp, 400
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_97:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
	ld.d	$a0, $sp, 344
	ld.d	$fp, $sp, 352
	beq	$a0, $fp, .LBB42_103
# %bb.98:                               # %.lr.ph.i.i.i97.preheader
	addi.d	$s0, $a0, 16
	b	.LBB42_100
	.p2align	4, , 16
.LBB42_99:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB42_100 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB42_102
.LBB42_100:                             # %.lr.ph.i.i.i97
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB42_99
# %bb.101:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB42_100 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB42_99
.LBB42_102:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 344
.LBB42_103:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB42_105
# %bb.104:
	ld.d	$a1, $sp, 360
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_105:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 312
	addi.d	$a1, $sp, 328
	beq	$a0, $a1, .LBB42_107
# %bb.106:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_107:                             # %_ZN2PP8VariableD2Ev.exit
	ld.d	$s3, $s1, 80
	ld.d	$fp, $s3, 16
.LBB42_108:
	addi.d	$s0, $s3, 8
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	beqz	$fp, .LBB42_119
# %bb.109:                              # %.lr.ph.i.i.i107
	ld.d	$s5, $sp, 456
	ld.d	$s2, $sp, 448
	lu12i.w	$a0, 524287
	ori	$s4, $a0, 4095
	ori	$s7, $zero, 16
	ori	$s8, $zero, 24
	b	.LBB42_112
	.p2align	4, , 16
.LBB42_110:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i132
                                        #   in Loop: Header=BB42_112 Depth=1
	sub.d	$a0, $s3, $s5
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s4
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
.LBB42_111:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i113
                                        #   in Loop: Header=BB42_112 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $fp, $a0
	masknez	$a2, $s7, $a0
	maskeqz	$a3, $s8, $a0
	or	$a2, $a3, $a2
	ldx.d	$fp, $fp, $a2
	maskeqz	$a0, $s0, $a0
	or	$s0, $a0, $a1
	beqz	$fp, .LBB42_114
.LBB42_112:                             # =>This Inner Loop Header: Depth=1
	ld.d	$s3, $fp, 40
	sltu	$a0, $s5, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB42_110
# %bb.113:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i111
                                        #   in Loop: Header=BB42_112 Depth=1
	ld.d	$a0, $fp, 32
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB42_111
	b	.LBB42_110
.LBB42_114:                             # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i120
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	beq	$s0, $a0, .LBB42_119
# %bb.115:
	ld.d	$fp, $s0, 40
	sltu	$a0, $fp, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB42_117
# %bb.116:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i122
	ld.d	$a1, $s0, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB42_118
.LBB42_117:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i128
	sub.d	$a0, $s5, $fp
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s4
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
.LBB42_118:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i124
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s0, $a0
	ld.d	$a2, $sp, 8                     # 8-byte Folded Reload
	maskeqz	$a0, $a2, $a0
	or	$a0, $a0, $a1
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
.LBB42_119:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit137
	move	$s2, $zero
	st.d	$zero, $sp, 24                  # 8-byte Folded Spill
	move	$s4, $zero
	st.d	$zero, $sp, 328
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 312
	addi.d	$s8, $sp, 128
	addi.d	$s5, $sp, 128
	ori	$fp, $zero, 2
	ori	$s0, $zero, 256
	addi.d	$s7, $sp, 128
	ori	$s6, $zero, 1
	b	.LBB42_122
	.p2align	4, , 16
.LBB42_120:                             #   in Loop: Header=BB42_122 Depth=1
	move	$s3, $s2
.LBB42_121:                             # %_ZNSt6vectorIiSaIiEE9push_backEOi.exit
                                        #   in Loop: Header=BB42_122 Depth=1
	addi.d	$fp, $fp, 1
	addi.d	$s0, $s0, 128
	move	$s2, $s3
.LBB42_122:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s1, 232
	ld.d	$a0, $s1, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s1, 208
	ld.d	$a4, $s1, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s1, 192
	ld.d	$a1, $s1, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a3, $a2, $a3, 2
	sub.d	$a4, $a5, $a1
	ld.d	$a2, $s1, 184
	srli.d	$a4, $a4, 7
	add.w	$a3, $a3, $a4
	bge	$fp, $a3, .LBB42_195
# %bb.123:                              #   in Loop: Header=BB42_122 Depth=1
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $fp, $a2
	bltz	$a3, .LBB42_126
# %bb.124:                              #   in Loop: Header=BB42_122 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB42_127
# %bb.125:                              #   in Loop: Header=BB42_122 Depth=1
	add.d	$a0, $a1, $s0
	b	.LBB42_129
	.p2align	4, , 16
.LBB42_126:                             #   in Loop: Header=BB42_122 Depth=1
	srai.d	$a1, $a3, 2
	b	.LBB42_128
	.p2align	4, , 16
.LBB42_127:                             #   in Loop: Header=BB42_122 Depth=1
	srli.d	$a1, $a3, 2
.LBB42_128:                             #   in Loop: Header=BB42_122 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $fp, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB42_129:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit140
                                        #   in Loop: Header=BB42_122 Depth=1
	st.d	$s8, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	st.d	$a1, $sp, 80
	move	$a0, $s8
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB42_132
# %bb.130:                              # %.noexc.i.i142
                                        #   in Loop: Header=BB42_122 Depth=1
.Ltmp589:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp590:
# %bb.131:                              # %.noexc143
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB42_132:                             # %._crit_edge.i.i.i141
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB42_135
# %bb.133:                              # %._crit_edge.i.i.i141
                                        #   in Loop: Header=BB42_122 Depth=1
	bnez	$a1, .LBB42_137
# %bb.134:                              #   in Loop: Header=BB42_122 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB42_135:                             #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 112
	st.d	$a1, $sp, 120
	bne	$a1, $s6, .LBB42_138
.LBB42_136:                             #   in Loop: Header=BB42_122 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -40
	sltui	$s3, $a1, 1
	bne	$a0, $s8, .LBB42_139
	b	.LBB42_140
	.p2align	4, , 16
.LBB42_137:                             #   in Loop: Header=BB42_122 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 112
	st.d	$a1, $sp, 120
	beq	$a1, $s6, .LBB42_136
.LBB42_138:                             #   in Loop: Header=BB42_122 Depth=1
	move	$s3, $zero
	beq	$a0, $s8, .LBB42_140
.LBB42_139:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i147
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_140:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit149
                                        #   in Loop: Header=BB42_122 Depth=1
	bnez	$s3, .LBB42_120
# %bb.141:                              #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a3, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a1, $a3, $a1
	srai.d	$a2, $a1, 7
	add.d	$a1, $fp, $a2
	bltz	$a1, .LBB42_144
# %bb.142:                              #   in Loop: Header=BB42_122 Depth=1
	ori	$a4, $zero, 4
	bgeu	$a1, $a4, .LBB42_145
# %bb.143:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit154.thread
                                        #   in Loop: Header=BB42_122 Depth=1
	add.d	$a0, $a3, $s0
	ld.w	$a1, $a0, 32
	ori	$a2, $zero, 12
	beq	$a1, $a2, .LBB42_120
	b	.LBB42_148
.LBB42_144:                             #   in Loop: Header=BB42_122 Depth=1
	srai.d	$a3, $a1, 2
	b	.LBB42_146
.LBB42_145:                             #   in Loop: Header=BB42_122 Depth=1
	srli.d	$a3, $a1, 2
.LBB42_146:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit154
                                        #   in Loop: Header=BB42_122 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a0, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a2, $a2, $a3
	add.d	$a2, $fp, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a4, $a2
	ld.w	$a2, $a2, 32
	ori	$a3, $zero, 12
	beq	$a2, $a3, .LBB42_120
# %bb.147:                              #   in Loop: Header=BB42_122 Depth=1
	slli.d	$a2, $a1, 1
	bstrins.d	$a2, $zero, 2, 0
	ldx.d	$a0, $a0, $a2
	andi	$a1, $a1, 3
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB42_148:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit156
                                        #   in Loop: Header=BB42_122 Depth=1
	st.d	$s5, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	st.d	$a1, $sp, 80
	move	$a0, $s5
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB42_151
# %bb.149:                              # %.noexc.i.i158
                                        #   in Loop: Header=BB42_122 Depth=1
.Ltmp592:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp593:
# %bb.150:                              # %.noexc159
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB42_151:                             # %._crit_edge.i.i.i157
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB42_154
# %bb.152:                              # %._crit_edge.i.i.i157
                                        #   in Loop: Header=BB42_122 Depth=1
	bnez	$a1, .LBB42_156
# %bb.153:                              #   in Loop: Header=BB42_122 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB42_154:                             #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 112
	st.d	$a1, $sp, 120
	bne	$a1, $s6, .LBB42_157
.LBB42_155:                             #   in Loop: Header=BB42_122 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -58
	sltui	$s3, $a1, 1
	bne	$a0, $s5, .LBB42_158
	b	.LBB42_159
.LBB42_156:                             #   in Loop: Header=BB42_122 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 112
	st.d	$a1, $sp, 120
	beq	$a1, $s6, .LBB42_155
.LBB42_157:                             #   in Loop: Header=BB42_122 Depth=1
	move	$s3, $zero
	beq	$a0, $s5, .LBB42_159
.LBB42_158:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i163
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_159:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit165
                                        #   in Loop: Header=BB42_122 Depth=1
	bnez	$s3, .LBB42_120
# %bb.160:                              #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a2, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $fp, $a1
	bltz	$a3, .LBB42_163
# %bb.161:                              #   in Loop: Header=BB42_122 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB42_164
# %bb.162:                              #   in Loop: Header=BB42_122 Depth=1
	add.d	$a0, $a2, $s0
	b	.LBB42_166
.LBB42_163:                             #   in Loop: Header=BB42_122 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB42_165
.LBB42_164:                             #   in Loop: Header=BB42_122 Depth=1
	srli.d	$a2, $a3, 2
.LBB42_165:                             #   in Loop: Header=BB42_122 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $fp, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB42_166:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit170
                                        #   in Loop: Header=BB42_122 Depth=1
	st.d	$s7, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	st.d	$a1, $sp, 80
	move	$a0, $s7
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB42_169
# %bb.167:                              # %.noexc.i.i172
                                        #   in Loop: Header=BB42_122 Depth=1
.Ltmp595:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp596:
# %bb.168:                              # %.noexc173
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB42_169:                             # %._crit_edge.i.i.i171
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB42_172
# %bb.170:                              # %._crit_edge.i.i.i171
                                        #   in Loop: Header=BB42_122 Depth=1
	bnez	$a1, .LBB42_174
# %bb.171:                              #   in Loop: Header=BB42_122 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB42_172:                             #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 112
	st.d	$a1, $sp, 120
	bne	$a1, $s6, .LBB42_175
.LBB42_173:                             #   in Loop: Header=BB42_122 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -41
	sltui	$s3, $a1, 1
	bne	$a0, $s7, .LBB42_176
	b	.LBB42_177
.LBB42_174:                             #   in Loop: Header=BB42_122 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 112
	st.d	$a1, $sp, 120
	beq	$a1, $s6, .LBB42_173
.LBB42_175:                             #   in Loop: Header=BB42_122 Depth=1
	move	$s3, $zero
	beq	$a0, $s7, .LBB42_177
.LBB42_176:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i177
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_177:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit179
                                        #   in Loop: Header=BB42_122 Depth=1
	ld.d	$a1, $s1, 176
	ld.d	$a2, $s1, 184
	ld.d	$a0, $s1, 200
	bnez	$s3, .LBB42_195
# %bb.178:                              #   in Loop: Header=BB42_122 Depth=1
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $fp, $a2
	bltz	$a3, .LBB42_181
# %bb.179:                              #   in Loop: Header=BB42_122 Depth=1
	ori	$a4, $zero, 3
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
	bltu	$a4, $a3, .LBB42_182
# %bb.180:                              #   in Loop: Header=BB42_122 Depth=1
	add.d	$a0, $a1, $s0
	b	.LBB42_184
.LBB42_181:                             #   in Loop: Header=BB42_122 Depth=1
	srai.d	$a1, $a3, 2
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
	b	.LBB42_183
.LBB42_182:                             #   in Loop: Header=BB42_122 Depth=1
	srli.d	$a1, $a3, 2
.LBB42_183:                             #   in Loop: Header=BB42_122 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $fp, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB42_184:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit184
                                        #   in Loop: Header=BB42_122 Depth=1
.Ltmp598:
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp599:
# %bb.185:                              #   in Loop: Header=BB42_122 Depth=1
	beq	$s4, $s3, .LBB42_187
# %bb.186:                              #   in Loop: Header=BB42_122 Depth=1
	st.w	$a0, $s4, 0
	addi.d	$s4, $s4, 4
	st.d	$s4, $sp, 320
	move	$s3, $s2
	addi.d	$s5, $sp, 128
	b	.LBB42_194
.LBB42_187:                             #   in Loop: Header=BB42_122 Depth=1
	move	$s5, $a0
	sub.d	$s4, $s3, $s2
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	beq	$s4, $a0, .LBB42_223
# %bb.188:                              # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB42_122 Depth=1
	srai.d	$a0, $s4, 2
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	ori	$s6, $zero, 1
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	lu52i.d	$a1, $a1, 511
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$s7, $a0, $a1
	slli.d	$a0, $s7, 2
.Ltmp600:
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp601:
# %bb.189:                              # %.noexc187
                                        #   in Loop: Header=BB42_122 Depth=1
	move	$s3, $a0
	stx.w	$s5, $a0, $s4
	blez	$s4, .LBB42_191
# %bb.190:                              #   in Loop: Header=BB42_122 Depth=1
	move	$a0, $s3
	move	$a1, $s2
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB42_191:                             # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i.i
                                        #   in Loop: Header=BB42_122 Depth=1
	addi.d	$s5, $sp, 128
	beqz	$s2, .LBB42_193
# %bb.192:                              # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i.i
                                        #   in Loop: Header=BB42_122 Depth=1
	move	$a0, $s2
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_193:                             # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJiEEEvDpOT_.exit.i.i
                                        #   in Loop: Header=BB42_122 Depth=1
	add.d	$a0, $s3, $s4
	addi.d	$s4, $a0, 4
	st.d	$s3, $sp, 312
	st.d	$s4, $sp, 320
	alsl.d	$a0, $s7, $s3, 2
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	st.d	$a0, $sp, 328
.LBB42_194:                             # %_ZNSt6vectorIiSaIiEE9push_backEOi.exit
                                        #   in Loop: Header=BB42_122 Depth=1
	addi.d	$s7, $sp, 128
	b	.LBB42_121
.LBB42_195:                             # %split
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	addi.d	$s6, $sp, 464
	bltz	$a3, .LBB42_198
# %bb.196:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB42_199
# %bb.197:
	ld.w	$s2, $a1, 80
	ld.w	$s3, $a1, 84
	b	.LBB42_201
.LBB42_198:
	srai.d	$a1, $a3, 9
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	b	.LBB42_200
.LBB42_199:
	slli.d	$a1, $a2, 1
	bstrins.d	$a1, $zero, 2, 0
	ldx.d	$a0, $a0, $a1
	andi	$a1, $a2, 3
.LBB42_200:
	slli.d	$a2, $a1, 7
	add.d	$a2, $a0, $a2
	ld.w	$s2, $a2, 80
	ld.w	$s3, $a2, 84
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB42_201:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit193
	addi.d	$s0, $sp, 128
	ld.d	$a2, $a1, 96
	ld.d	$s4, $a1, 88
	st.d	$s0, $sp, 112
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 80
	move	$a0, $s0
	bltu	$a2, $a1, .LBB42_204
# %bb.202:                              # %.noexc.i.i195
.Ltmp606:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp607:
# %bb.203:                              # %.noexc196
	ld.d	$a2, $sp, 80
	st.d	$a0, $sp, 112
	st.d	$a2, $sp, 128
.LBB42_204:                             # %._crit_edge.i.i.i194
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	beq	$a2, $a1, .LBB42_208
# %bb.205:                              # %._crit_edge.i.i.i194
	bnez	$a2, .LBB42_207
# %bb.206:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB42_208
.LBB42_207:
	addi.d	$a2, $a2, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB42_208:
	ld.d	$a1, $sp, 80
	st.d	$a1, $sp, 120
	addi.d	$s5, $sp, 64
	ld.d	$s4, $sp, 112
	st.d	$s5, $sp, 48
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 80
	move	$a0, $s5
	bltu	$a1, $a2, .LBB42_211
# %bb.209:                              # %.noexc.i198
.Ltmp609:
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp610:
# %bb.210:                              # %.noexc199
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB42_211:                             # %._crit_edge.i.i197
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB42_215
# %bb.212:                              # %._crit_edge.i.i197
	bnez	$a1, .LBB42_214
# %bb.213:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB42_215
.LBB42_214:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB42_215:
	ld.d	$a0, $sp, 80
	ld.d	$a5, $s1, 40
	st.d	$a0, $sp, 56
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	addi.d	$a0, $a0, 64
.Ltmp612:
	addi.d	$a1, $sp, 312
	addi.d	$a4, $sp, 48
	move	$a2, $s2
	move	$a3, $s3
	ld.d	$a6, $sp, 32                    # 8-byte Folded Reload
	move	$a7, $fp
	pcaddu18i	$ra, %call36(_ZN2PP8Variable10set_boundsERSt6vectorIiSaIiEEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeISA_SaISA_EERNS5_18basic_stringstreamIcS8_S9_EERi)
	jirl	$ra, $ra, 0
.Ltmp613:
# %bb.216:
	ld.d	$a0, $sp, 48
	beq	$a0, $s5, .LBB42_218
# %bb.217:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i201
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_218:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit203
	ld.d	$a0, $sp, 112
	beq	$a0, $s0, .LBB42_220
# %bb.219:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i204
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_220:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit206
	ld.d	$a0, $sp, 312
	beqz	$a0, .LBB42_222
# %bb.221:
	ld.d	$a1, $sp, 328
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_222:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ori	$fp, $zero, 1
	ld.d	$a0, $sp, 448
	bne	$a0, $s6, .LBB42_56
	b	.LBB42_57
.LBB42_223:
.Ltmp603:
	addi.d	$s6, $sp, 464
	pcalau12i	$a0, %pc_hi20(.L.str.225)
	addi.d	$a0, $a0, %pc_lo12(.L.str.225)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp604:
# %bb.224:                              # %.noexc186
.LBB42_225:
.Ltmp582:
	move	$fp, $a0
	b	.LBB42_234
.LBB42_226:
.Ltmp576:
	b	.LBB42_253
.LBB42_227:
.Ltmp611:
	move	$fp, $a0
	b	.LBB42_239
.LBB42_228:
.Ltmp608:
	move	$fp, $a0
	b	.LBB42_241
.LBB42_229:
.Ltmp588:
	move	$fp, $a0
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB42_232
.LBB42_230:
.Ltmp585:
	ld.d	$a2, $sp, 112
	move	$fp, $a0
	beq	$a2, $s4, .LBB42_232
# %bb.231:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_232:                             # %.body
	ld.d	$a0, $sp, 80
	beq	$a0, $s2, .LBB42_234
# %bb.233:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i103
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_234:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit105
	addi.d	$a0, $sp, 312
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB42_254
.LBB42_235:
.Ltmp579:
	ld.d	$a2, $sp, 280
	move	$fp, $a0
	beq	$a2, $s3, .LBB42_254
# %bb.236:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i100
	ld.d	$a0, $sp, 296
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB42_254
.LBB42_237:
.Ltmp614:
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	beq	$a2, $s5, .LBB42_239
# %bb.238:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i208
	ld.d	$a0, $sp, 64
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_239:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit210
	ld.d	$a0, $sp, 112
	beq	$a0, $s0, .LBB42_241
# %bb.240:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i211
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_241:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit213
	ld.d	$s2, $sp, 312
	b	.LBB42_250
.LBB42_242:
.Ltmp573:
	b	.LBB42_253
.LBB42_243:                             # %.loopexit.split-lp
.Ltmp605:
	b	.LBB42_249
.LBB42_244:
.Ltmp597:
	b	.LBB42_248
.LBB42_245:
.Ltmp594:
	b	.LBB42_248
.LBB42_246:                             # %.loopexit
.Ltmp602:
	b	.LBB42_248
.LBB42_247:
.Ltmp591:
.LBB42_248:
	addi.d	$s6, $sp, 464
.LBB42_249:
	move	$fp, $a0
.LBB42_250:
	beqz	$s2, .LBB42_254
# %bb.251:
	ld.d	$a0, $sp, 328
	sub.d	$a1, $a0, $s2
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB42_254
.LBB42_252:
.Ltmp617:
.LBB42_253:
	move	$fp, $a0
.LBB42_254:
	ld.d	$a0, $sp, 448
	beq	$a0, $s6, .LBB42_256
# %bb.255:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i219
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB42_256:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit221
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end42:
	.size	_ZN2PP3Cmd19check_for_dimensionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end42-_ZN2PP3Cmd19check_for_dimensionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table42:
.Lexception21:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Lfunc_begin21-.Lfunc_begin21  # >> Call Site 1 <<
	.uleb128 .Ltmp615-.Lfunc_begin21        #   Call between .Lfunc_begin21 and .Ltmp615
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp615-.Lfunc_begin21        # >> Call Site 2 <<
	.uleb128 .Ltmp616-.Ltmp615              #   Call between .Ltmp615 and .Ltmp616
	.uleb128 .Ltmp617-.Lfunc_begin21        #     jumps to .Ltmp617
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp616-.Lfunc_begin21        # >> Call Site 3 <<
	.uleb128 .Ltmp571-.Ltmp616              #   Call between .Ltmp616 and .Ltmp571
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp571-.Lfunc_begin21        # >> Call Site 4 <<
	.uleb128 .Ltmp572-.Ltmp571              #   Call between .Ltmp571 and .Ltmp572
	.uleb128 .Ltmp573-.Lfunc_begin21        #     jumps to .Ltmp573
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp572-.Lfunc_begin21        # >> Call Site 5 <<
	.uleb128 .Ltmp574-.Ltmp572              #   Call between .Ltmp572 and .Ltmp574
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp574-.Lfunc_begin21        # >> Call Site 6 <<
	.uleb128 .Ltmp575-.Ltmp574              #   Call between .Ltmp574 and .Ltmp575
	.uleb128 .Ltmp576-.Lfunc_begin21        #     jumps to .Ltmp576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp575-.Lfunc_begin21        # >> Call Site 7 <<
	.uleb128 .Ltmp577-.Ltmp575              #   Call between .Ltmp575 and .Ltmp577
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp577-.Lfunc_begin21        # >> Call Site 8 <<
	.uleb128 .Ltmp578-.Ltmp577              #   Call between .Ltmp577 and .Ltmp578
	.uleb128 .Ltmp579-.Lfunc_begin21        #     jumps to .Ltmp579
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp578-.Lfunc_begin21        # >> Call Site 9 <<
	.uleb128 .Ltmp580-.Ltmp578              #   Call between .Ltmp578 and .Ltmp580
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp580-.Lfunc_begin21        # >> Call Site 10 <<
	.uleb128 .Ltmp581-.Ltmp580              #   Call between .Ltmp580 and .Ltmp581
	.uleb128 .Ltmp582-.Lfunc_begin21        #     jumps to .Ltmp582
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp581-.Lfunc_begin21        # >> Call Site 11 <<
	.uleb128 .Ltmp583-.Ltmp581              #   Call between .Ltmp581 and .Ltmp583
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp583-.Lfunc_begin21        # >> Call Site 12 <<
	.uleb128 .Ltmp584-.Ltmp583              #   Call between .Ltmp583 and .Ltmp584
	.uleb128 .Ltmp585-.Lfunc_begin21        #     jumps to .Ltmp585
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp586-.Lfunc_begin21        # >> Call Site 13 <<
	.uleb128 .Ltmp587-.Ltmp586              #   Call between .Ltmp586 and .Ltmp587
	.uleb128 .Ltmp588-.Lfunc_begin21        #     jumps to .Ltmp588
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp587-.Lfunc_begin21        # >> Call Site 14 <<
	.uleb128 .Ltmp589-.Ltmp587              #   Call between .Ltmp587 and .Ltmp589
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp589-.Lfunc_begin21        # >> Call Site 15 <<
	.uleb128 .Ltmp590-.Ltmp589              #   Call between .Ltmp589 and .Ltmp590
	.uleb128 .Ltmp591-.Lfunc_begin21        #     jumps to .Ltmp591
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp590-.Lfunc_begin21        # >> Call Site 16 <<
	.uleb128 .Ltmp592-.Ltmp590              #   Call between .Ltmp590 and .Ltmp592
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp592-.Lfunc_begin21        # >> Call Site 17 <<
	.uleb128 .Ltmp593-.Ltmp592              #   Call between .Ltmp592 and .Ltmp593
	.uleb128 .Ltmp594-.Lfunc_begin21        #     jumps to .Ltmp594
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp593-.Lfunc_begin21        # >> Call Site 18 <<
	.uleb128 .Ltmp595-.Ltmp593              #   Call between .Ltmp593 and .Ltmp595
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp595-.Lfunc_begin21        # >> Call Site 19 <<
	.uleb128 .Ltmp596-.Ltmp595              #   Call between .Ltmp595 and .Ltmp596
	.uleb128 .Ltmp597-.Lfunc_begin21        #     jumps to .Ltmp597
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp596-.Lfunc_begin21        # >> Call Site 20 <<
	.uleb128 .Ltmp598-.Ltmp596              #   Call between .Ltmp596 and .Ltmp598
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp598-.Lfunc_begin21        # >> Call Site 21 <<
	.uleb128 .Ltmp601-.Ltmp598              #   Call between .Ltmp598 and .Ltmp601
	.uleb128 .Ltmp602-.Lfunc_begin21        #     jumps to .Ltmp602
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp601-.Lfunc_begin21        # >> Call Site 22 <<
	.uleb128 .Ltmp606-.Ltmp601              #   Call between .Ltmp601 and .Ltmp606
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp606-.Lfunc_begin21        # >> Call Site 23 <<
	.uleb128 .Ltmp607-.Ltmp606              #   Call between .Ltmp606 and .Ltmp607
	.uleb128 .Ltmp608-.Lfunc_begin21        #     jumps to .Ltmp608
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp607-.Lfunc_begin21        # >> Call Site 24 <<
	.uleb128 .Ltmp609-.Ltmp607              #   Call between .Ltmp607 and .Ltmp609
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp609-.Lfunc_begin21        # >> Call Site 25 <<
	.uleb128 .Ltmp610-.Ltmp609              #   Call between .Ltmp609 and .Ltmp610
	.uleb128 .Ltmp611-.Lfunc_begin21        #     jumps to .Ltmp611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp610-.Lfunc_begin21        # >> Call Site 26 <<
	.uleb128 .Ltmp612-.Ltmp610              #   Call between .Ltmp610 and .Ltmp612
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp612-.Lfunc_begin21        # >> Call Site 27 <<
	.uleb128 .Ltmp613-.Ltmp612              #   Call between .Ltmp612 and .Ltmp613
	.uleb128 .Ltmp614-.Lfunc_begin21        #     jumps to .Ltmp614
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp613-.Lfunc_begin21        # >> Call Site 28 <<
	.uleb128 .Ltmp603-.Ltmp613              #   Call between .Ltmp613 and .Ltmp603
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp603-.Lfunc_begin21        # >> Call Site 29 <<
	.uleb128 .Ltmp604-.Ltmp603              #   Call between .Ltmp603 and .Ltmp604
	.uleb128 .Ltmp605-.Lfunc_begin21        #     jumps to .Ltmp605
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp604-.Lfunc_begin21        # >> Call Site 30 <<
	.uleb128 .Lfunc_end42-.Ltmp604          #   Call between .Ltmp604 and .Lfunc_end42
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end21:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_,comdat
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_ # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_
	.p2align	5
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$s5, $a0, 16
	addi.d	$fp, $a0, 8
	beqz	$s5, .LBB43_11
# %bb.1:                                # %.lr.ph.i.i
	ld.d	$s4, $a1, 8
	ld.d	$s0, $a1, 0
	lu12i.w	$s3, -524288
	lu12i.w	$a0, 524287
	ori	$s2, $a0, 4095
	ori	$s6, $zero, 16
	ori	$s7, $zero, 24
	move	$s1, $fp
	b	.LBB43_4
	.p2align	4, , 16
.LBB43_2:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
                                        #   in Loop: Header=BB43_4 Depth=1
	sub.d	$a0, $s8, $s4
	slt	$a1, $s3, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$a0, $a0, $a1
.LBB43_3:                               # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i
                                        #   in Loop: Header=BB43_4 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s5, $a0
	masknez	$a2, $s6, $a0
	maskeqz	$a3, $s7, $a0
	or	$a2, $a3, $a2
	ldx.d	$s5, $s5, $a2
	maskeqz	$a0, $s1, $a0
	or	$s1, $a0, $a1
	beqz	$s5, .LBB43_6
.LBB43_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$s8, $s5, 40
	sltu	$a0, $s4, $s8
	masknez	$a1, $s8, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB43_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
                                        #   in Loop: Header=BB43_4 Depth=1
	ld.d	$a0, $s5, 32
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB43_3
	b	.LBB43_2
.LBB43_6:                               # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i
	beq	$s1, $fp, .LBB43_11
# %bb.7:
	ld.d	$s5, $s1, 40
	sltu	$a0, $s5, $s4
	masknez	$a1, $s4, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB43_9
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
	ld.d	$a1, $s1, 32
	move	$a0, $s0
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB43_10
.LBB43_9:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i
	sub.d	$a0, $s4, $s5
	slt	$a1, $s3, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$a0, $a0, $a1
.LBB43_10:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s1, $a0
	maskeqz	$a0, $fp, $a0
	or	$fp, $a0, $a1
.LBB43_11:                              # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE4findERS7_.exit
	move	$a0, $fp
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end43:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_, .Lfunc_end43-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_,"axG",@progbits,_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_,comdat
	.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_ # -- Begin function _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_
	.p2align	5
	.type	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_,@function
_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_: # @_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	st.d	$s7, $sp, 32                    # 8-byte Folded Spill
	st.d	$s8, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$s7, $a0, 16
	move	$a2, $a1
	addi.d	$s6, $a0, 8
	beqz	$s7, .LBB44_11
# %bb.1:                                # %.lr.ph.i.i.i
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s5, $a2, 8
	st.d	$a2, $sp, 16                    # 8-byte Folded Spill
	ld.d	$s2, $a2, 0
	lu12i.w	$s4, -524288
	lu12i.w	$a0, 524287
	ori	$s3, $a0, 4095
	ori	$s8, $zero, 16
	ori	$s0, $zero, 24
	move	$s1, $s6
	b	.LBB44_4
	.p2align	4, , 16
.LBB44_2:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB44_4 Depth=1
	sub.d	$a0, $fp, $s5
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s3
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
.LBB44_3:                               # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB44_4 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s7, $a0
	masknez	$a2, $s8, $a0
	maskeqz	$a3, $s0, $a0
	or	$a2, $a3, $a2
	ldx.d	$s7, $s7, $a2
	maskeqz	$a0, $s1, $a0
	or	$s1, $a0, $a1
	beqz	$s7, .LBB44_6
.LBB44_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$fp, $s7, 40
	sltu	$a0, $s5, $fp
	masknez	$a1, $fp, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB44_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB44_4 Depth=1
	ld.d	$a0, $s7, 32
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB44_3
	b	.LBB44_2
.LBB44_6:                               # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE11lower_boundERSB_.exit
	beq	$s1, $s6, .LBB44_14
# %bb.7:
	ld.d	$fp, $s1, 40
	sltu	$a0, $fp, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB44_12
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a1, $s1, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB44_12
# %bb.9:                                # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	bltz	$a0, .LBB44_13
.LBB44_10:
	move	$a1, $zero
	b	.LBB44_16
.LBB44_11:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE11lower_boundERSB_.exit.thread
	move	$s1, $s6
	b	.LBB44_15
.LBB44_12:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $s5, $fp
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s3
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s3, $a1
	or	$a0, $a0, $a1
	addi.w	$a0, $a0, 0
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	bgez	$a0, .LBB44_10
.LBB44_13:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	b	.LBB44_15
.LBB44_14:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
.LBB44_15:                              # %.critedge
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	ori	$a1, $zero, 1
.LBB44_16:
	move	$a0, $s1
	ld.d	$s8, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.Lfunc_end44:
	.size	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_, .Lfunc_end44-_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP8Variable11get_varnameB5cxx11Ev,"axG",@progbits,_ZN2PP8Variable11get_varnameB5cxx11Ev,comdat
	.weak	_ZN2PP8Variable11get_varnameB5cxx11Ev # -- Begin function _ZN2PP8Variable11get_varnameB5cxx11Ev
	.p2align	5
	.type	_ZN2PP8Variable11get_varnameB5cxx11Ev,@function
_ZN2PP8Variable11get_varnameB5cxx11Ev:  # @_ZN2PP8Variable11get_varnameB5cxx11Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$a0, $a0, 16
	ld.d	$a2, $a1, 8
	ld.d	$s0, $a1, 0
	st.d	$a0, $fp, 0
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 0
	bltu	$a2, $a1, .LBB45_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 0
	st.d	$a0, $fp, 0
	st.d	$a2, $fp, 16
.LBB45_2:                               # %._crit_edge.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB45_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a2, .LBB45_5
# %bb.4:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB45_6
.LBB45_5:
	addi.d	$a2, $a2, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB45_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 8
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end45:
	.size	_ZN2PP8Variable11get_varnameB5cxx11Ev, .Lfunc_end45-_ZN2PP8Variable11get_varnameB5cxx11Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_ # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.p2align	5
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception22
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s1, $a1
	move	$s0, $a0
	addi.d	$fp, $a0, 16
	st.d	$fp, $a0, 0
	ld.d	$a0, $a1, 0
	addi.d	$s3, $a1, 16
	move	$s2, $a2
	beq	$a0, $s3, .LBB46_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a0, $s0, 0
	ld.d	$a0, $s3, 0
	st.d	$a0, $s0, 16
	b	.LBB46_3
.LBB46_2:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a0, $s1, 8
	addi.d	$a2, $a0, 1
	move	$a0, $fp
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB46_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $s1, 8
	st.d	$a0, $s0, 8
	st.d	$s3, $s1, 0
	st.d	$zero, $s1, 8
	st.b	$zero, $s1, 16
	addi.d	$a0, $s0, 32
.Ltmp618:
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp619:
# %bb.4:
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB46_5:
.Ltmp620:
	ld.d	$a2, $s0, 0
	move	$s0, $a0
	beq	$a2, $fp, .LBB46_7
# %bb.6:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $fp, 0
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB46_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end46:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_, .Lfunc_end46-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,"aG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_,comdat
	.p2align	2, 0x0
GCC_except_table46:
.Lexception22:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Lfunc_begin22-.Lfunc_begin22  # >> Call Site 1 <<
	.uleb128 .Ltmp618-.Lfunc_begin22        #   Call between .Lfunc_begin22 and .Ltmp618
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp618-.Lfunc_begin22        # >> Call Site 2 <<
	.uleb128 .Ltmp619-.Ltmp618              #   Call between .Ltmp618 and .Ltmp619
	.uleb128 .Ltmp620-.Lfunc_begin22        #     jumps to .Ltmp620
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp619-.Lfunc_begin22        # >> Call Site 3 <<
	.uleb128 .Lfunc_end46-.Ltmp619          #   Call between .Ltmp619 and .Lfunc_end46
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end22:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,"axG",@progbits,_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,comdat
	.weak	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev # -- Begin function _ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.p2align	5
	.type	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,@function
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev: # @_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 136
	addi.d	$a1, $fp, 152
	beq	$a0, $a1, .LBB47_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $fp, 104
	beqz	$a0, .LBB47_4
# %bb.3:
	ld.d	$a1, $fp, 120
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_4:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
	ld.d	$a0, $fp, 64
	ld.d	$s0, $fp, 72
	beq	$a0, $s0, .LBB47_10
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB47_7
	.p2align	4, , 16
.LBB47_6:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB47_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB47_9
.LBB47_7:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB47_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB47_6
.LBB47_9:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $fp, 64
.LBB47_10:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB47_12
# %bb.11:
	ld.d	$a1, $fp, 80
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_12:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB47_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB47_14:                              # %_ZN2PP8VariableD2Ev.exit
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB47_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB47_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end47:
	.size	_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev, .Lfunc_end47-_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP8VariableD2Ev,"axG",@progbits,_ZN2PP8VariableD2Ev,comdat
	.weak	_ZN2PP8VariableD2Ev             # -- Begin function _ZN2PP8VariableD2Ev
	.p2align	5
	.type	_ZN2PP8VariableD2Ev,@function
_ZN2PP8VariableD2Ev:                    # @_ZN2PP8VariableD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 104
	addi.d	$a1, $fp, 120
	beq	$a0, $a1, .LBB48_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 72
	beqz	$a0, .LBB48_4
# %bb.3:
	ld.d	$a1, $fp, 88
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_4:                               # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$a0, $fp, 32
	ld.d	$s0, $fp, 40
	beq	$a0, $s0, .LBB48_10
# %bb.5:                                # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB48_7
	.p2align	4, , 16
.LBB48_6:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB48_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB48_9
.LBB48_7:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB48_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB48_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB48_6
.LBB48_9:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $fp, 32
.LBB48_10:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB48_12
# %bb.11:
	ld.d	$a1, $fp, 48
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB48_12:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB48_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB48_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit4
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end48:
	.size	_ZN2PP8VariableD2Ev, .Lfunc_end48-_ZN2PP8VariableD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2PP4Word12get_filenameB5cxx11Ev,"axG",@progbits,_ZN2PP4Word12get_filenameB5cxx11Ev,comdat
	.weak	_ZN2PP4Word12get_filenameB5cxx11Ev # -- Begin function _ZN2PP4Word12get_filenameB5cxx11Ev
	.p2align	5
	.type	_ZN2PP4Word12get_filenameB5cxx11Ev,@function
_ZN2PP4Word12get_filenameB5cxx11Ev:     # @_ZN2PP4Word12get_filenameB5cxx11Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$a0, $a0, 16
	ld.d	$a2, $a1, 96
	ld.d	$s0, $a1, 88
	st.d	$a0, $fp, 0
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 0
	bltu	$a2, $a1, .LBB49_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 0
	st.d	$a0, $fp, 0
	st.d	$a2, $fp, 16
.LBB49_2:                               # %._crit_edge.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB49_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a2, .LBB49_5
# %bb.4:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB49_6
.LBB49_5:
	addi.d	$a2, $a2, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB49_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 8
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end49:
	.size	_ZN2PP4Word12get_filenameB5cxx11Ev, .Lfunc_end49-_ZN2PP4Word12get_filenameB5cxx11Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd25check_for_var_descriptionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd25check_for_var_descriptionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd25check_for_var_descriptionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd25check_for_var_descriptionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd25check_for_var_descriptionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception23
# %bb.0:
	addi.d	$sp, $sp, -608
	.cfi_def_cfa_offset 608
	st.d	$ra, $sp, 600                   # 8-byte Folded Spill
	st.d	$fp, $sp, 592                   # 8-byte Folded Spill
	st.d	$s0, $sp, 584                   # 8-byte Folded Spill
	st.d	$s1, $sp, 576                   # 8-byte Folded Spill
	st.d	$s2, $sp, 568                   # 8-byte Folded Spill
	st.d	$s3, $sp, 560                   # 8-byte Folded Spill
	st.d	$s4, $sp, 552                   # 8-byte Folded Spill
	st.d	$s5, $sp, 544                   # 8-byte Folded Spill
	st.d	$s6, $sp, 536                   # 8-byte Folded Spill
	st.d	$s7, $sp, 528                   # 8-byte Folded Spill
	st.d	$s8, $sp, 520                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	ld.d	$a3, $a0, 176
	ld.d	$a4, $a0, 184
	ld.d	$a0, $a0, 200
	move	$s3, $a2
	move	$s1, $a1
	sub.d	$a2, $a3, $a4
	srai.d	$a1, $a2, 7
	bltz	$a2, .LBB50_3
# %bb.1:
	ori	$a2, $zero, 4
	bltu	$a1, $a2, .LBB50_5
# %bb.2:
	srli.d	$a2, $a1, 2
	b	.LBB50_4
.LBB50_3:
	srai.d	$a2, $a2, 9
.LBB50_4:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a3, $a0, $a1
.LBB50_5:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$fp, $sp, 128
	st.d	$fp, $sp, 112
	ld.d	$a1, $a3, 8
	ld.d	$s2, $a3, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 312
	move	$a0, $fp
	bltu	$a1, $a2, .LBB50_7
# %bb.6:                                # %.noexc.i.i
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 312
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 312
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB50_7:                               # %._crit_edge.i.i.i
	addi.w	$s8, $zero, -1
	beq	$a1, $s8, .LBB50_11
# %bb.8:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB50_10
# %bb.9:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB50_11
.LBB50_10:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB50_11:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a0, $sp, 312
	ld.d	$s2, $sp, 112
	st.d	$a0, $sp, 120
	ori	$a1, $zero, 20
	ori	$s4, $zero, 1
	bne	$a0, $a1, .LBB50_13
# %bb.12:
	pcalau12i	$a0, %pc_hi20(.L.str.60)
	addi.d	$a1, $a0, %pc_lo12(.L.str.60)
	ori	$a2, $zero, 20
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltu	$s4, $zero, $a0
.LBB50_13:                              # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	beq	$s2, $fp, .LBB50_15
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	bnez	$s4, .LBB50_232
# %bb.16:
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a2, $a0, $a1
	srai.d	$a2, $a2, 3
	sltu	$a0, $zero, $a0
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a0
	ld.d	$a5, $s0, 192
	ld.d	$a0, $s0, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a0
	srai.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	ori	$a3, $zero, 3
	bne	$a2, $a3, .LBB50_20
# %bb.17:
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a0, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s8, .LBB50_23
# %bb.18:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB50_47
# %bb.19:
	addi.d	$a0, $a0, 128
	b	.LBB50_49
.LBB50_20:
	ld.d	$a2, $s0, 184
	sub.d	$a3, $a0, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB50_24
# %bb.21:
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB50_26
# %bb.22:
	srli.d	$a0, $a2, 2
	b	.LBB50_25
.LBB50_23:
	srai.d	$a0, $a2, 2
	b	.LBB50_48
.LBB50_24:
	srai.d	$a0, $a3, 9
.LBB50_25:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB50_26:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit49
	move	$a1, $s1
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.61)
	addi.d	$a1, $a0, %pc_lo12(.L.str.61)
	ori	$a2, $zero, 62
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_233
# %bb.27:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_29
# %bb.28:
	ld.bu	$a0, $s1, 67
	b	.LBB50_30
.LBB50_29:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB50_30:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.62)
	addi.d	$a1, $a0, %pc_lo12(.L.str.62)
	ori	$a2, $zero, 34
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_233
# %bb.31:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i168
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_33
# %bb.32:
	ld.bu	$a0, $s1, 67
	b	.LBB50_34
.LBB50_33:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB50_34:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit171
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.63)
	addi.d	$a1, $a0, %pc_lo12(.L.str.63)
	ori	$a2, $zero, 35
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_233
# %bb.35:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i173
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_37
# %bb.36:
	ld.bu	$a0, $s1, 67
	b	.LBB50_38
.LBB50_37:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB50_38:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit176
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.64)
	addi.d	$a1, $a0, %pc_lo12(.L.str.64)
	ori	$a2, $zero, 57
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_233
# %bb.39:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i178
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_41
# %bb.40:
	ld.bu	$a0, $s1, 67
	b	.LBB50_42
.LBB50_41:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB50_42:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit181
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.65)
	addi.d	$a1, $a0, %pc_lo12(.L.str.65)
	ori	$a2, $zero, 17
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s0, 208
	ld.d	$a3, $s0, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s0, 192
	ld.d	$a4, $s0, 176
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srai.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo9_M_insertImEERSoT_)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.66)
	addi.d	$a1, $a0, %pc_lo12(.L.str.66)
	ori	$a2, $zero, 26
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_233
# %bb.43:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i183
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_45
# %bb.44:
	ld.bu	$a0, $s1, 67
	b	.LBB50_46
.LBB50_45:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB50_46:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit186
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $s3, 0
	b	.LBB50_232
.LBB50_47:
	srli.d	$a0, $a2, 2
.LBB50_48:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB50_49:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit52
	addi.d	$s5, $sp, 496
	st.d	$s5, $sp, 480
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $s5
	bltu	$a1, $a2, .LBB50_51
# %bb.50:                               # %.noexc.i.i54
	addi.d	$a0, $sp, 480
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 480
	st.d	$a1, $sp, 496
.LBB50_51:                              # %._crit_edge.i.i.i53
	beq	$a1, $s8, .LBB50_55
# %bb.52:                               # %._crit_edge.i.i.i53
	bnez	$a1, .LBB50_54
# %bb.53:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB50_55
.LBB50_54:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB50_55:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit55
	ld.d	$a1, $sp, 112
	ld.d	$a0, $s0, 176
	ld.d	$a2, $s0, 184
	st.d	$a1, $sp, 488
	ld.d	$a1, $s0, 200
	sub.d	$a3, $a0, $a2
	srai.d	$a2, $a3, 7
	addi.d	$a4, $a2, 1
	blt	$a2, $s8, .LBB50_61
# %bb.56:
	ori	$a5, $zero, 3
	bltu	$a5, $a4, .LBB50_62
# %bb.57:
	addi.d	$a4, $a0, 128
	ld.w	$a4, $a4, 32
	ori	$a5, $zero, 13
	beq	$a4, $a5, .LBB50_64
.LBB50_58:
	bltz	$a2, .LBB50_68
# %bb.59:
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB50_70
# %bb.60:
	srli.d	$a0, $a2, 2
	b	.LBB50_69
.LBB50_61:
	srai.d	$a5, $a4, 2
	b	.LBB50_63
.LBB50_62:
	srli.d	$a5, $a4, 2
.LBB50_63:
	slli.d	$a6, $a5, 3
	ldx.d	$a6, $a1, $a6
	slli.d	$a5, $a5, 2
	sub.d	$a4, $a4, $a5
	slli.d	$a4, $a4, 7
	add.d	$a4, $a6, $a4
	ld.w	$a4, $a4, 32
	ori	$a5, $zero, 13
	bne	$a4, $a5, .LBB50_58
.LBB50_64:
	addi.w	$a4, $zero, -2
	addi.d	$a3, $a2, 2
	blt	$a2, $a4, .LBB50_67
# %bb.65:
	ori	$a2, $zero, 3
	bltu	$a2, $a3, .LBB50_121
# %bb.66:
	addi.d	$a0, $a0, 256
	b	.LBB50_123
.LBB50_67:
	srai.d	$a0, $a3, 2
	b	.LBB50_122
.LBB50_68:
	srai.d	$a0, $a3, 9
.LBB50_69:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB50_70:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit59
.Ltmp621:
	move	$a1, $s1
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp622:
# %bb.71:
	addi.d	$s0, $s1, 16
.Ltmp623:
	pcalau12i	$a0, %pc_hi20(.L.str.67)
	addi.d	$a1, $a0, %pc_lo12(.L.str.67)
	ori	$a2, $zero, 34
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp624:
# %bb.72:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_234
# %bb.73:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i188
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_75
# %bb.74:
	ld.bu	$a0, $s1, 67
	b	.LBB50_77
.LBB50_75:
.Ltmp625:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp626:
# %bb.76:                               # %.noexc192
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp627:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp628:
.LBB50_77:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp629:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp630:
# %bb.78:                               # %.noexc194
.Ltmp631:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp632:
# %bb.79:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp633:
	pcalau12i	$a0, %pc_hi20(.L.str.68)
	addi.d	$a1, $a0, %pc_lo12(.L.str.68)
	ori	$a2, $zero, 47
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp634:
# %bb.80:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit60
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_234
# %bb.81:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i198
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_83
# %bb.82:
	ld.bu	$a0, $s1, 67
	b	.LBB50_85
.LBB50_83:
.Ltmp635:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp636:
# %bb.84:                               # %.noexc203
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp637:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp638:
.LBB50_85:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i200
.Ltmp639:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp640:
# %bb.86:                               # %.noexc205
.Ltmp641:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp642:
# %bb.87:                               # %_ZNSolsEPFRSoS_E.exit61
.Ltmp643:
	pcalau12i	$a0, %pc_hi20(.L.str.69)
	addi.d	$a1, $a0, %pc_lo12(.L.str.69)
	ori	$a2, $zero, 53
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp644:
# %bb.88:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit62
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_234
# %bb.89:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i209
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_91
# %bb.90:
	ld.bu	$a0, $s1, 67
	b	.LBB50_93
.LBB50_91:
.Ltmp645:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp646:
# %bb.92:                               # %.noexc214
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp647:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp648:
.LBB50_93:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i211
.Ltmp649:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp650:
# %bb.94:                               # %.noexc216
.Ltmp651:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp652:
# %bb.95:                               # %_ZNSolsEPFRSoS_E.exit63
.Ltmp653:
	pcalau12i	$a0, %pc_hi20(.L.str.70)
	addi.d	$a1, $a0, %pc_lo12(.L.str.70)
	ori	$a2, $zero, 56
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp654:
# %bb.96:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit64
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_234
# %bb.97:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i220
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_99
# %bb.98:
	ld.bu	$a0, $s1, 67
	b	.LBB50_101
.LBB50_99:
.Ltmp655:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp656:
# %bb.100:                              # %.noexc225
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp657:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp658:
.LBB50_101:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i222
.Ltmp659:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp660:
# %bb.102:                              # %.noexc227
.Ltmp661:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp662:
# %bb.103:                              # %_ZNSolsEPFRSoS_E.exit65
.Ltmp663:
	pcalau12i	$a0, %pc_hi20(.L.str.71)
	addi.d	$a1, $a0, %pc_lo12(.L.str.71)
	ori	$a2, $zero, 25
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp664:
# %bb.104:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit66
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_234
# %bb.105:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i231
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_107
# %bb.106:
	ld.bu	$a0, $s1, 67
	b	.LBB50_109
.LBB50_107:
.Ltmp665:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp666:
# %bb.108:                              # %.noexc236
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp667:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp668:
.LBB50_109:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i233
.Ltmp669:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp670:
# %bb.110:                              # %.noexc238
.Ltmp671:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp672:
# %bb.111:                              # %_ZNSolsEPFRSoS_E.exit67
.Ltmp673:
	pcalau12i	$a0, %pc_hi20(.L.str.72)
	addi.d	$a1, $a0, %pc_lo12(.L.str.72)
	ori	$a2, $zero, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp674:
# %bb.112:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit68
	ld.d	$a1, $sp, 480
	ld.d	$a2, $sp, 488
.Ltmp675:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp676:
# %bb.113:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_234
# %bb.114:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i242
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_116
# %bb.115:
	ld.bu	$a0, $s1, 67
	b	.LBB50_118
.LBB50_116:
.Ltmp677:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp678:
# %bb.117:                              # %.noexc247
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp679:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp680:
.LBB50_118:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i244
.Ltmp681:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp682:
# %bb.119:                              # %.noexc249
.Ltmp683:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp684:
# %bb.120:                              # %_ZNSolsEPFRSoS_E.exit69
	ori	$a0, $zero, 2
	st.w	$a0, $s3, 0
	b	.LBB50_230
.LBB50_121:
	srli.d	$a0, $a3, 2
.LBB50_122:
	slli.d	$a2, $a0, 3
	ldx.d	$a1, $a1, $a2
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a3, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB50_123:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit71
	addi.d	$a3, $sp, 464
	st.d	$a3, $sp, 448
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $a3
	bltu	$a1, $a2, .LBB50_126
# %bb.124:                              # %.noexc.i.i73
.Ltmp688:
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp689:
# %bb.125:                              # %.noexc
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 448
	st.d	$a1, $sp, 464
.LBB50_126:                             # %._crit_edge.i.i.i72
	beq	$a1, $s8, .LBB50_130
# %bb.127:                              # %._crit_edge.i.i.i72
	bnez	$a1, .LBB50_129
# %bb.128:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB50_130
.LBB50_129:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB50_130:
	st.d	$s1, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a1, $s0, 80
	ld.d	$a0, $sp, 112
	ld.d	$s4, $a1, 16
	st.d	$a0, $sp, 456
	lu12i.w	$s7, 524287
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	beqz	$s4, .LBB50_141
# %bb.131:                              # %.lr.ph.i.i.i
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	addi.d	$s5, $a1, 8
	ld.d	$fp, $sp, 488
	ld.d	$s2, $sp, 480
	ori	$s6, $s7, 4095
	ori	$s1, $zero, 16
	ori	$s8, $zero, 24
	move	$s3, $s4
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	b	.LBB50_134
	.p2align	4, , 16
.LBB50_132:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB50_134 Depth=1
	sub.d	$a0, $s7, $fp
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s6
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
.LBB50_133:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB50_134 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s3, $a0
	masknez	$a2, $s1, $a0
	maskeqz	$a3, $s8, $a0
	or	$a2, $a3, $a2
	ldx.d	$s3, $s3, $a2
	maskeqz	$a0, $s5, $a0
	or	$s5, $a0, $a1
	beqz	$s3, .LBB50_136
.LBB50_134:                             # =>This Inner Loop Header: Depth=1
	ld.d	$s7, $s3, 40
	sltu	$a0, $fp, $s7
	masknez	$a1, $s7, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB50_132
# %bb.135:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB50_134 Depth=1
	ld.d	$a0, $s3, 32
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB50_133
	b	.LBB50_132
.LBB50_136:                             # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	lu12i.w	$s7, 524287
	ld.d	$s3, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	beq	$s5, $a0, .LBB50_141
# %bb.137:
	ld.d	$s1, $s5, 40
	sltu	$a0, $s1, $fp
	masknez	$a1, $fp, $a0
	maskeqz	$a0, $s1, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB50_139
# %bb.138:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s5, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB50_140
.LBB50_139:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $fp, $s1
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s6
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
.LBB50_140:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB50_180
.LBB50_141:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit.thread
	addi.d	$s3, $sp, 296
	ld.d	$a1, $sp, 488
	ld.d	$s2, $sp, 480
	st.d	$s3, $sp, 280
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $s3
	bltu	$a1, $a2, .LBB50_144
# %bb.142:                              # %.noexc.i
.Ltmp691:
	addi.d	$a0, $sp, 280
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp692:
# %bb.143:                              # %.noexc75
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 280
	st.d	$a1, $sp, 296
.LBB50_144:                             # %._crit_edge.i.i
	beq	$a1, $s8, .LBB50_148
# %bb.145:                              # %._crit_edge.i.i
	bnez	$a1, .LBB50_147
# %bb.146:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB50_148
.LBB50_147:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB50_148:
	ld.d	$a0, $sp, 112
	st.d	$a0, $sp, 288
.Ltmp694:
	addi.d	$a0, $sp, 312
	addi.d	$a1, $sp, 280
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp695:
# %bb.149:
	ld.d	$a0, $sp, 280
	beq	$a0, $s3, .LBB50_151
# %bb.150:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i76
	ld.d	$a1, $sp, 296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_151:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit78
	ld.d	$s3, $s0, 80
	addi.d	$s2, $sp, 96
	ld.d	$a1, $sp, 320
	ld.d	$s4, $sp, 312
	st.d	$s2, $sp, 80
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 512
	move	$a0, $s2
	bltu	$a1, $a2, .LBB50_154
# %bb.152:                              # %.noexc.i.i80
.Ltmp697:
	addi.d	$a0, $sp, 80
	addi.d	$a1, $sp, 512
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp698:
# %bb.153:                              # %.noexc81
	ld.d	$a1, $sp, 512
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
.LBB50_154:                             # %._crit_edge.i.i.i79
	beq	$a1, $s8, .LBB50_158
# %bb.155:                              # %._crit_edge.i.i.i79
	bnez	$a1, .LBB50_157
# %bb.156:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB50_158
.LBB50_157:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB50_158:
	ld.d	$a0, $sp, 80
	ld.d	$fp, $sp, 512
	addi.d	$s4, $sp, 128
	st.d	$s4, $sp, 112
	beq	$a0, $s2, .LBB50_160
# %bb.159:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i82
	ld.d	$a1, $sp, 96
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
	b	.LBB50_161
.LBB50_160:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	addi.d	$a2, $fp, 1
	move	$a0, $s4
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB50_161:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	st.d	$fp, $sp, 120
	st.d	$s2, $sp, 80
	st.d	$zero, $sp, 88
	st.b	$zero, $sp, 96
	addi.d	$a0, $sp, 144
.Ltmp700:
	addi.d	$a1, $sp, 312
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp701:
# %bb.162:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit
.Ltmp703:
	addi.d	$a1, $sp, 112
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp704:
# %bb.163:
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 80
	beq	$a0, $s2, .LBB50_165
# %bb.164:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i83
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_165:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit85
	ld.d	$a0, $sp, 416
	addi.d	$a1, $sp, 432
	beq	$a0, $a1, .LBB50_167
# %bb.166:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i86
	ld.d	$a1, $sp, 432
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_167:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i87
	ld.d	$a0, $sp, 384
	beqz	$a0, .LBB50_169
# %bb.168:
	ld.d	$a1, $sp, 400
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_169:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
	ld.d	$a0, $sp, 344
	ld.d	$fp, $sp, 352
	beq	$a0, $fp, .LBB50_175
# %bb.170:                              # %.lr.ph.i.i.i88.preheader
	addi.d	$s1, $a0, 16
	b	.LBB50_172
	.p2align	4, , 16
.LBB50_171:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB50_172 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $fp, .LBB50_174
.LBB50_172:                             # %.lr.ph.i.i.i88
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB50_171
# %bb.173:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB50_172 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB50_171
.LBB50_174:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 344
.LBB50_175:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB50_177
# %bb.176:
	ld.d	$a1, $sp, 360
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_177:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 312
	addi.d	$a1, $sp, 328
	beq	$a0, $a1, .LBB50_179
# %bb.178:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_179:                             # %_ZN2PP8VariableD2Ev.exit
	ld.d	$s3, $s0, 80
	ld.d	$s4, $s3, 16
.LBB50_180:
	addi.d	$s3, $s3, 8
	beqz	$s4, .LBB50_191
# %bb.181:                              # %.lr.ph.i.i.i98
	ld.d	$s5, $sp, 488
	ld.d	$s2, $sp, 480
	ori	$fp, $s7, 4095
	ori	$s1, $zero, 16
	ori	$s8, $zero, 24
	move	$s6, $s3
	b	.LBB50_184
	.p2align	4, , 16
.LBB50_182:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i123
                                        #   in Loop: Header=BB50_184 Depth=1
	sub.d	$a0, $s7, $s5
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $fp
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$a0, $a0, $a1
.LBB50_183:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i104
                                        #   in Loop: Header=BB50_184 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s4, $a0
	masknez	$a2, $s1, $a0
	maskeqz	$a3, $s8, $a0
	or	$a2, $a3, $a2
	ldx.d	$s4, $s4, $a2
	maskeqz	$a0, $s6, $a0
	or	$s6, $a0, $a1
	beqz	$s4, .LBB50_186
.LBB50_184:                             # =>This Inner Loop Header: Depth=1
	ld.d	$s7, $s4, 40
	sltu	$a0, $s5, $s7
	masknez	$a1, $s7, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB50_182
# %bb.185:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i102
                                        #   in Loop: Header=BB50_184 Depth=1
	ld.d	$a0, $s4, 32
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB50_183
	b	.LBB50_182
.LBB50_186:                             # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i111
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 24                    # 8-byte Folded Reload
	beq	$s6, $s3, .LBB50_195
# %bb.187:
	ld.d	$s1, $s6, 40
	sltu	$a0, $s1, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s1, $a0
	or	$a2, $a0, $a1
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	beqz	$a2, .LBB50_189
# %bb.188:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i113
	ld.d	$a1, $s6, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB50_190
.LBB50_189:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i119
	sub.d	$a0, $s5, $s1
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $fp
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$a0, $a0, $a1
.LBB50_190:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i115
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s6, $a0
	maskeqz	$a0, $s3, $a0
	or	$s3, $a0, $a1
	ld.bu	$a0, $s3, 160
	addi.d	$s5, $sp, 496
	bnez	$a0, .LBB50_192
	b	.LBB50_196
.LBB50_191:
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 24                    # 8-byte Folded Reload
	ld.bu	$a0, $s3, 160
	addi.d	$s5, $sp, 496
	beqz	$a0, .LBB50_196
.LBB50_192:
	ld.d	$a0, $s0, 176
	ld.d	$a2, $s0, 184
	ld.d	$a1, $s0, 200
	sub.d	$a3, $a0, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB50_202
# %bb.193:
	ori	$a3, $zero, 4
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	bltu	$a2, $a3, .LBB50_204
# %bb.194:
	srli.d	$a0, $a2, 2
	b	.LBB50_203
.LBB50_195:
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.bu	$a0, $s3, 160
	addi.d	$s5, $sp, 496
	bnez	$a0, .LBB50_192
.LBB50_196:
	addi.d	$s0, $sp, 64
	ld.d	$a1, $sp, 456
	ld.d	$fp, $sp, 448
	st.d	$s0, $sp, 48
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $s0
	bltu	$a1, $a2, .LBB50_199
# %bb.197:                              # %.noexc.i144
.Ltmp706:
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp707:
# %bb.198:                              # %.noexc145
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB50_199:                             # %._crit_edge.i.i143
	beq	$a1, $s8, .LBB50_225
# %bb.200:                              # %._crit_edge.i.i143
	bnez	$a1, .LBB50_224
# %bb.201:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB50_225
.LBB50_202:
	srai.d	$a0, $a3, 9
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
.LBB50_203:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB50_204:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit130
.Ltmp711:
	move	$a1, $s7
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp712:
# %bb.205:
	addi.d	$s0, $s7, 16
.Ltmp713:
	pcalau12i	$a0, %pc_hi20(.L.str.73)
	addi.d	$a1, $a0, %pc_lo12(.L.str.73)
	ori	$a2, $zero, 56
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp714:
# %bb.206:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit132
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_236
# %bb.207:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i253
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_209
# %bb.208:
	ld.bu	$a0, $s1, 67
	b	.LBB50_211
.LBB50_209:
.Ltmp715:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp716:
# %bb.210:                              # %.noexc258
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp717:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp718:
.LBB50_211:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i255
.Ltmp719:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp720:
# %bb.212:                              # %.noexc260
.Ltmp721:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp722:
# %bb.213:                              # %_ZNSolsEPFRSoS_E.exit134
.Ltmp723:
	pcalau12i	$a0, %pc_hi20(.L.str.72)
	addi.d	$a1, $a0, %pc_lo12(.L.str.72)
	ori	$a2, $zero, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp724:
# %bb.214:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit136
	ld.d	$a1, $sp, 480
	ld.d	$a2, $sp, 488
.Ltmp725:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp726:
# %bb.215:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit138
.Ltmp727:
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.74)
	addi.d	$a1, $a0, %pc_lo12(.L.str.74)
	ori	$a2, $zero, 16
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp728:
# %bb.216:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit140
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB50_236
# %bb.217:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i264
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB50_219
# %bb.218:
	ld.bu	$a0, $s1, 67
	b	.LBB50_221
.LBB50_219:
.Ltmp729:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp730:
# %bb.220:                              # %.noexc269
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp731:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp732:
.LBB50_221:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i266
.Ltmp733:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp734:
# %bb.222:                              # %.noexc271
.Ltmp735:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp736:
# %bb.223:                              # %_ZNSolsEPFRSoS_E.exit142
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
	b	.LBB50_228
.LBB50_224:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB50_225:
	ld.d	$a0, $sp, 112
	st.d	$a0, $sp, 56
	addi.d	$a0, $s3, 168
.Ltmp708:
	addi.d	$a1, $sp, 48
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp709:
# %bb.226:                              # %_ZN2PP8Variable15set_descriptionENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
	ld.d	$a0, $sp, 48
	beq	$a0, $s0, .LBB50_228
# %bb.227:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i148
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_228:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit150
	ld.d	$a0, $sp, 448
	addi.d	$a1, $sp, 464
	beq	$a0, $a1, .LBB50_230
# %bb.229:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i154
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_230:
	ld.d	$a0, $sp, 480
	beq	$a0, $s5, .LBB50_232
# %bb.231:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i160
	ld.d	$a1, $sp, 496
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_232:
	xori	$a0, $s4, 1
	ld.d	$s8, $sp, 520                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 528                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 536                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 544                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 552                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 560                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 568                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 576                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 584                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 592                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 600                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 608
	ret
.LBB50_233:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB50_234:                             # %.invoke
.Ltmp685:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp686:
# %bb.235:                              # %.cont
.LBB50_236:                             # %.invoke280
.Ltmp737:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp738:
# %bb.237:                              # %.cont281
.LBB50_238:
.Ltmp699:
	move	$fp, $a0
	b	.LBB50_248
.LBB50_239:
.Ltmp693:
	b	.LBB50_253
.LBB50_240:
.Ltmp710:
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	beq	$a2, $s0, .LBB50_254
# %bb.241:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i151
	ld.d	$a0, $sp, 64
	b	.LBB50_251
.LBB50_242:
.Ltmp690:
	b	.LBB50_259
.LBB50_243:
.Ltmp705:
	move	$fp, $a0
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB50_246
.LBB50_244:
.Ltmp702:
	ld.d	$a2, $sp, 112
	move	$fp, $a0
	beq	$a2, $s4, .LBB50_246
# %bb.245:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_246:                             # %.body
	ld.d	$a0, $sp, 80
	beq	$a0, $s2, .LBB50_248
# %bb.247:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i94
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB50_248:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit96
	addi.d	$a0, $sp, 312
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB50_254
.LBB50_249:
.Ltmp696:
	ld.d	$a2, $sp, 280
	move	$fp, $a0
	beq	$a2, $s3, .LBB50_254
# %bb.250:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i91
	ld.d	$a0, $sp, 296
.LBB50_251:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit153
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB50_254
.LBB50_252:
.Ltmp739:
.LBB50_253:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit153
	move	$fp, $a0
.LBB50_254:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit153
	ld.d	$a0, $sp, 448
	addi.d	$a1, $sp, 464
	bne	$a0, $a1, .LBB50_257
# %bb.255:
	ld.d	$a0, $sp, 480
	addi.d	$a1, $sp, 496
	bne	$a0, $a1, .LBB50_260
.LBB50_256:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit165
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB50_257:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i157
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 480
	addi.d	$a1, $sp, 496
	beq	$a0, $a1, .LBB50_256
	b	.LBB50_260
.LBB50_258:
.Ltmp687:
.LBB50_259:
	move	$fp, $a0
	ld.d	$a0, $sp, 480
	addi.d	$a1, $sp, 496
	beq	$a0, $a1, .LBB50_256
.LBB50_260:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i163
	ld.d	$a1, $sp, 496
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end50:
	.size	_ZN2PP3Cmd25check_for_var_descriptionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end50-_ZN2PP3Cmd25check_for_var_descriptionERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table50:
.Lexception23:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Lfunc_begin23-.Lfunc_begin23  # >> Call Site 1 <<
	.uleb128 .Ltmp621-.Lfunc_begin23        #   Call between .Lfunc_begin23 and .Ltmp621
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp621-.Lfunc_begin23        # >> Call Site 2 <<
	.uleb128 .Ltmp684-.Ltmp621              #   Call between .Ltmp621 and .Ltmp684
	.uleb128 .Ltmp687-.Lfunc_begin23        #     jumps to .Ltmp687
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp688-.Lfunc_begin23        # >> Call Site 3 <<
	.uleb128 .Ltmp689-.Ltmp688              #   Call between .Ltmp688 and .Ltmp689
	.uleb128 .Ltmp690-.Lfunc_begin23        #     jumps to .Ltmp690
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp689-.Lfunc_begin23        # >> Call Site 4 <<
	.uleb128 .Ltmp691-.Ltmp689              #   Call between .Ltmp689 and .Ltmp691
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp691-.Lfunc_begin23        # >> Call Site 5 <<
	.uleb128 .Ltmp692-.Ltmp691              #   Call between .Ltmp691 and .Ltmp692
	.uleb128 .Ltmp693-.Lfunc_begin23        #     jumps to .Ltmp693
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp692-.Lfunc_begin23        # >> Call Site 6 <<
	.uleb128 .Ltmp694-.Ltmp692              #   Call between .Ltmp692 and .Ltmp694
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp694-.Lfunc_begin23        # >> Call Site 7 <<
	.uleb128 .Ltmp695-.Ltmp694              #   Call between .Ltmp694 and .Ltmp695
	.uleb128 .Ltmp696-.Lfunc_begin23        #     jumps to .Ltmp696
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp695-.Lfunc_begin23        # >> Call Site 8 <<
	.uleb128 .Ltmp697-.Ltmp695              #   Call between .Ltmp695 and .Ltmp697
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp697-.Lfunc_begin23        # >> Call Site 9 <<
	.uleb128 .Ltmp698-.Ltmp697              #   Call between .Ltmp697 and .Ltmp698
	.uleb128 .Ltmp699-.Lfunc_begin23        #     jumps to .Ltmp699
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp698-.Lfunc_begin23        # >> Call Site 10 <<
	.uleb128 .Ltmp700-.Ltmp698              #   Call between .Ltmp698 and .Ltmp700
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp700-.Lfunc_begin23        # >> Call Site 11 <<
	.uleb128 .Ltmp701-.Ltmp700              #   Call between .Ltmp700 and .Ltmp701
	.uleb128 .Ltmp702-.Lfunc_begin23        #     jumps to .Ltmp702
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp703-.Lfunc_begin23        # >> Call Site 12 <<
	.uleb128 .Ltmp704-.Ltmp703              #   Call between .Ltmp703 and .Ltmp704
	.uleb128 .Ltmp705-.Lfunc_begin23        #     jumps to .Ltmp705
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp704-.Lfunc_begin23        # >> Call Site 13 <<
	.uleb128 .Ltmp706-.Ltmp704              #   Call between .Ltmp704 and .Ltmp706
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp706-.Lfunc_begin23        # >> Call Site 14 <<
	.uleb128 .Ltmp736-.Ltmp706              #   Call between .Ltmp706 and .Ltmp736
	.uleb128 .Ltmp739-.Lfunc_begin23        #     jumps to .Ltmp739
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp736-.Lfunc_begin23        # >> Call Site 15 <<
	.uleb128 .Ltmp708-.Ltmp736              #   Call between .Ltmp736 and .Ltmp708
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp708-.Lfunc_begin23        # >> Call Site 16 <<
	.uleb128 .Ltmp709-.Ltmp708              #   Call between .Ltmp708 and .Ltmp709
	.uleb128 .Ltmp710-.Lfunc_begin23        #     jumps to .Ltmp710
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp709-.Lfunc_begin23        # >> Call Site 17 <<
	.uleb128 .Ltmp685-.Ltmp709              #   Call between .Ltmp709 and .Ltmp685
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp685-.Lfunc_begin23        # >> Call Site 18 <<
	.uleb128 .Ltmp686-.Ltmp685              #   Call between .Ltmp685 and .Ltmp686
	.uleb128 .Ltmp687-.Lfunc_begin23        #     jumps to .Ltmp687
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp737-.Lfunc_begin23        # >> Call Site 19 <<
	.uleb128 .Ltmp738-.Ltmp737              #   Call between .Ltmp737 and .Ltmp738
	.uleb128 .Ltmp739-.Lfunc_begin23        #     jumps to .Ltmp739
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp738-.Lfunc_begin23        # >> Call Site 20 <<
	.uleb128 .Lfunc_end50-.Ltmp738          #   Call between .Ltmp738 and .Lfunc_end50
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end23:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd20substitute_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd20substitute_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd20substitute_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd20substitute_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd20substitute_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	move	$s0, $a1
	move	$s1, $a0
	move	$s3, $zero
	move	$s4, $zero
	addi.d	$s5, $sp, 32
	ori	$s6, $zero, 3
	ori	$s7, $zero, 16
	addi.w	$s8, $zero, -1
	ori	$fp, $zero, 1
	b	.LBB51_2
	.p2align	4, , 16
.LBB51_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB51_2 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, 128
	bnez	$s2, .LBB51_20
.LBB51_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 232
	ld.d	$a1, $s1, 200
	ld.d	$a3, $s1, 208
	ld.d	$a4, $s1, 216
	sub.d	$a2, $a0, $a1
	srai.d	$a2, $a2, 3
	sltu	$a6, $zero, $a0
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $s1, 192
	ld.d	$a5, $s1, 176
	sub.d	$a6, $a2, $a6
	srai.d	$a3, $a3, 7
	alsl.d	$a6, $a6, $a3, 2
	sub.d	$a4, $a4, $a5
	srai.d	$a4, $a4, 7
	add.w	$a6, $a6, $a4
	bge	$s4, $a6, .LBB51_19
# %bb.3:                                #   in Loop: Header=BB51_2 Depth=1
	ld.d	$a0, $s1, 184
	sub.d	$a0, $a5, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $s4, $a0
	bltz	$a0, .LBB51_6
# %bb.4:                                #   in Loop: Header=BB51_2 Depth=1
	bltu	$s6, $a0, .LBB51_7
# %bb.5:                                #   in Loop: Header=BB51_2 Depth=1
	add.d	$a0, $a5, $s3
	b	.LBB51_9
	.p2align	4, , 16
.LBB51_6:                               #   in Loop: Header=BB51_2 Depth=1
	srai.d	$a2, $a0, 2
	b	.LBB51_8
	.p2align	4, , 16
.LBB51_7:                               #   in Loop: Header=BB51_2 Depth=1
	srli.d	$a2, $a0, 2
.LBB51_8:                               #   in Loop: Header=BB51_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a0, $a0, $a2
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB51_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB51_2 Depth=1
	st.d	$s5, $sp, 16
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 48
	move	$a0, $s5
	bltu	$a1, $s7, .LBB51_11
# %bb.10:                               # %.noexc.i.i
                                        #   in Loop: Header=BB51_2 Depth=1
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB51_11:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB51_2 Depth=1
	beq	$a1, $s8, .LBB51_14
# %bb.12:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB51_2 Depth=1
	bnez	$a1, .LBB51_16
# %bb.13:                               #   in Loop: Header=BB51_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB51_14:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB51_2 Depth=1
	ld.d	$a1, $sp, 48
	ld.d	$a0, $sp, 16
	st.d	$a1, $sp, 24
	bne	$a1, $fp, .LBB51_17
.LBB51_15:                              #   in Loop: Header=BB51_2 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -61
	sltui	$s2, $a1, 1
	bne	$a0, $s5, .LBB51_18
	b	.LBB51_1
	.p2align	4, , 16
.LBB51_16:                              #   in Loop: Header=BB51_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	ld.d	$a0, $sp, 16
	st.d	$a1, $sp, 24
	beq	$a1, $fp, .LBB51_15
.LBB51_17:                              #   in Loop: Header=BB51_2 Depth=1
	move	$s2, $zero
	beq	$a0, $s5, .LBB51_1
.LBB51_18:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB51_2 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB51_1
.LBB51_19:
	move	$a1, $zero
	b	.LBB51_21
.LBB51_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit._crit_edge
	ld.d	$a0, $s1, 232
	ld.d	$a1, $s1, 200
	ld.d	$a3, $s1, 208
	ld.d	$a4, $s1, 216
	ld.d	$a5, $s1, 192
	ld.d	$a6, $s1, 176
	sub.d	$a1, $a0, $a1
	srai.d	$a2, $a1, 3
	sub.d	$a1, $a3, $a4
	srai.d	$a3, $a1, 7
	sub.d	$a1, $a5, $a6
	srai.d	$a4, $a1, 7
	ori	$a1, $zero, 1
.LBB51_21:                              # %split
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a2, $a0
	alsl.d	$a0, $a0, $a3, 2
	add.d	$a0, $a0, $a4
	addi.d	$a0, $a0, -1
	st.w	$a0, $sp, 16
	addi.d	$a2, $sp, 16
	move	$a0, $s1
	move	$a3, $s0
	ld.d	$a4, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.Lfunc_end51:
	.size	_ZN2PP3Cmd20substitute_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end51-_ZN2PP3Cmd20substitute_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_ # -- Begin function _ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.p2align	5
	.type	_ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_,@function
_ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_: # @_ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception24
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	st.d	$s2, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 128                   # 8-byte Folded Spill
	st.d	$s4, $sp, 120                   # 8-byte Folded Spill
	st.d	$s5, $sp, 112                   # 8-byte Folded Spill
	st.d	$s6, $sp, 104                   # 8-byte Folded Spill
	st.d	$s7, $sp, 96                    # 8-byte Folded Spill
	st.d	$s8, $sp, 88                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a2
	ld.w	$a2, $a2, 0
	st.d	$a4, $sp, 8                     # 8-byte Folded Spill
	st.d	$a3, $sp, 0                     # 8-byte Folded Spill
	bge	$a2, $a1, .LBB52_2
.LBB52_1:                               # %._crit_edge
	ld.d	$s8, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB52_2:                               # %.lr.ph
	move	$s3, $a1
	move	$s2, $a0
	addi.d	$s7, $sp, 64
	addi.d	$s5, $a1, -1
	slli.d	$s8, $a1, 7
	addi.w	$s1, $zero, -1
	b	.LBB52_4
	.p2align	4, , 16
.LBB52_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit46
                                        #   in Loop: Header=BB52_4 Depth=1
	ld.w	$a0, $fp, 0
	addi.d	$s8, $s8, 128
	move	$s5, $s0
	move	$s3, $s4
	bge	$s0, $a0, .LBB52_1
.LBB52_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	addi.d	$s0, $s5, 1
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s0, $a1
	bltz	$a3, .LBB52_7
# %bb.5:                                #   in Loop: Header=BB52_4 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB52_8
# %bb.6:                                #   in Loop: Header=BB52_4 Depth=1
	add.d	$a0, $a2, $s8
	b	.LBB52_10
	.p2align	4, , 16
.LBB52_7:                               #   in Loop: Header=BB52_4 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB52_9
	.p2align	4, , 16
.LBB52_8:                               #   in Loop: Header=BB52_4 Depth=1
	srli.d	$a2, $a3, 2
.LBB52_9:                               #   in Loop: Header=BB52_4 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s5, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 128
.LBB52_10:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB52_4 Depth=1
	st.d	$s7, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	st.d	$a1, $sp, 16
	move	$a0, $s7
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB52_12
# %bb.11:                               # %.noexc.i.i
                                        #   in Loop: Header=BB52_4 Depth=1
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 16
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB52_12:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB52_4 Depth=1
	beq	$a1, $s1, .LBB52_16
# %bb.13:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB52_4 Depth=1
	bnez	$a1, .LBB52_15
# %bb.14:                               #   in Loop: Header=BB52_4 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB52_16
	.p2align	4, , 16
.LBB52_15:                              #   in Loop: Header=BB52_4 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB52_16:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB52_4 Depth=1
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a5, $sp, 16
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s5, $a1
	addi.d	$a4, $a3, 1
	st.d	$a5, $sp, 56
	bltz	$a4, .LBB52_19
# %bb.17:                               #   in Loop: Header=BB52_4 Depth=1
	ori	$a5, $zero, 3
	bltu	$a5, $a4, .LBB52_20
# %bb.18:                               #   in Loop: Header=BB52_4 Depth=1
	add.d	$a4, $a2, $s8
	ld.w	$a4, $a4, 32
	addi.w	$s4, $s3, 1
	ori	$a5, $zero, 13
	beq	$a4, $a5, .LBB52_22
	b	.LBB52_45
	.p2align	4, , 16
.LBB52_19:                              #   in Loop: Header=BB52_4 Depth=1
	srai.d	$a4, $a4, 2
	b	.LBB52_21
	.p2align	4, , 16
.LBB52_20:                              #   in Loop: Header=BB52_4 Depth=1
	srli.d	$a4, $a4, 2
.LBB52_21:                              #   in Loop: Header=BB52_4 Depth=1
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a1, $a4
	add.d	$a4, $s5, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a4, $a5
	addi.d	$a4, $a4, 128
	ld.w	$a4, $a4, 32
	addi.w	$s4, $s3, 1
	ori	$a5, $zero, 13
	bne	$a4, $a5, .LBB52_45
.LBB52_22:                              #   in Loop: Header=BB52_4 Depth=1
	ld.w	$a4, $fp, 0
	bge	$s0, $a4, .LBB52_26
# %bb.23:                               #   in Loop: Header=BB52_4 Depth=1
	addi.d	$a3, $a3, 2
	bltz	$a3, .LBB52_27
# %bb.24:                               #   in Loop: Header=BB52_4 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB52_28
# %bb.25:                               #   in Loop: Header=BB52_4 Depth=1
	add.d	$a0, $a2, $s8
	addi.d	$a0, $a0, 128
	b	.LBB52_30
	.p2align	4, , 16
.LBB52_26:                              #   in Loop: Header=BB52_4 Depth=1
	move	$s6, $zero
	b	.LBB52_41
.LBB52_27:                              #   in Loop: Header=BB52_4 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB52_29
.LBB52_28:                              #   in Loop: Header=BB52_4 Depth=1
	srli.d	$a2, $a3, 2
.LBB52_29:                              #   in Loop: Header=BB52_4 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s5, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 256
.LBB52_30:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit32
                                        #   in Loop: Header=BB52_4 Depth=1
	addi.d	$a2, $sp, 32
	st.d	$a2, $sp, 16
	ld.d	$a1, $a0, 8
	ld.d	$s5, $a0, 0
	st.d	$a1, $sp, 80
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB52_33
# %bb.31:                               # %.noexc.i.i34
                                        #   in Loop: Header=BB52_4 Depth=1
.Ltmp740:
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp741:
# %bb.32:                               # %.noexc
                                        #   in Loop: Header=BB52_4 Depth=1
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB52_33:                              # %._crit_edge.i.i.i33
                                        #   in Loop: Header=BB52_4 Depth=1
	beq	$a1, $s1, .LBB52_37
# %bb.34:                               # %._crit_edge.i.i.i33
                                        #   in Loop: Header=BB52_4 Depth=1
	bnez	$a1, .LBB52_36
# %bb.35:                               #   in Loop: Header=BB52_4 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB52_37
.LBB52_36:                              #   in Loop: Header=BB52_4 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB52_37:                              #   in Loop: Header=BB52_4 Depth=1
	ld.d	$a0, $sp, 80
	ld.d	$s5, $sp, 16
	st.d	$a0, $sp, 24
	ori	$a1, $zero, 2
	bne	$a0, $a1, .LBB52_39
# %bb.38:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit37
                                        #   in Loop: Header=BB52_4 Depth=1
	pcalau12i	$a0, %pc_hi20(.L.str.75)
	addi.d	$a1, $a0, %pc_lo12(.L.str.75)
	ori	$a2, $zero, 2
	move	$a0, $s5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s6, $a0, 1
	pcalau12i	$a0, %pc_hi20(.L.str.76)
	addi.d	$a1, $a0, %pc_lo12(.L.str.76)
	ori	$a2, $zero, 2
	move	$a0, $s5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$a0, $a0, 1
	masknez	$a1, $s6, $a0
	maskeqz	$a0, $s1, $a0
	or	$s6, $a0, $a1
	addi.d	$a0, $sp, 32
	bne	$s5, $a0, .LBB52_40
	b	.LBB52_41
.LBB52_39:                              #   in Loop: Header=BB52_4 Depth=1
	move	$s6, $zero
	addi.d	$a0, $sp, 32
	beq	$s5, $a0, .LBB52_41
.LBB52_40:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
                                        #   in Loop: Header=BB52_4 Depth=1
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB52_41:                              #   in Loop: Header=BB52_4 Depth=1
.Ltmp743:
	addi.d	$a2, $sp, 48
	move	$a0, $s2
	move	$a1, $s3
	move	$a3, $s6
	ld.d	$a4, $sp, 0                     # 8-byte Folded Reload
	ld.d	$a5, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd7subvar0EiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp744:
# %bb.42:                               #   in Loop: Header=BB52_4 Depth=1
	beqz	$s6, .LBB52_45
# %bb.43:                               #   in Loop: Header=BB52_4 Depth=1
.Ltmp745:
	move	$a0, $s2
	move	$a1, $s4
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp746:
# %bb.44:                               #   in Loop: Header=BB52_4 Depth=1
	ld.w	$a0, $fp, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $fp, 0
.LBB52_45:                              #   in Loop: Header=BB52_4 Depth=1
	ld.d	$a0, $sp, 48
	beq	$a0, $s7, .LBB52_3
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i44
                                        #   in Loop: Header=BB52_4 Depth=1
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB52_3
.LBB52_47:
.Ltmp742:
	b	.LBB52_49
.LBB52_48:
.Ltmp747:
.LBB52_49:
	move	$fp, $a0
	ld.d	$a0, $sp, 48
	beq	$a0, $s7, .LBB52_51
# %bb.50:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB52_51:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end52:
	.size	_ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_, .Lfunc_end52-_ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table52:
.Lexception24:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Lfunc_begin24-.Lfunc_begin24  # >> Call Site 1 <<
	.uleb128 .Ltmp740-.Lfunc_begin24        #   Call between .Lfunc_begin24 and .Ltmp740
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp740-.Lfunc_begin24        # >> Call Site 2 <<
	.uleb128 .Ltmp741-.Ltmp740              #   Call between .Ltmp740 and .Ltmp741
	.uleb128 .Ltmp742-.Lfunc_begin24        #     jumps to .Ltmp742
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp741-.Lfunc_begin24        # >> Call Site 3 <<
	.uleb128 .Ltmp743-.Ltmp741              #   Call between .Ltmp741 and .Ltmp743
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp743-.Lfunc_begin24        # >> Call Site 4 <<
	.uleb128 .Ltmp746-.Ltmp743              #   Call between .Ltmp743 and .Ltmp746
	.uleb128 .Ltmp747-.Lfunc_begin24        #     jumps to .Ltmp747
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp746-.Lfunc_begin24        # >> Call Site 5 <<
	.uleb128 .Lfunc_end52-.Ltmp746          #   Call between .Ltmp746 and .Lfunc_end52
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end24:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd7subvar0EiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd7subvar0EiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd7subvar0EiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd7subvar0EiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd7subvar0EiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception25
# %bb.0:
	addi.d	$sp, $sp, -384
	.cfi_def_cfa_offset 384
	st.d	$ra, $sp, 376                   # 8-byte Folded Spill
	st.d	$fp, $sp, 368                   # 8-byte Folded Spill
	st.d	$s0, $sp, 360                   # 8-byte Folded Spill
	st.d	$s1, $sp, 352                   # 8-byte Folded Spill
	st.d	$s2, $sp, 344                   # 8-byte Folded Spill
	st.d	$s3, $sp, 336                   # 8-byte Folded Spill
	st.d	$s4, $sp, 328                   # 8-byte Folded Spill
	st.d	$s5, $sp, 320                   # 8-byte Folded Spill
	st.d	$s6, $sp, 312                   # 8-byte Folded Spill
	st.d	$s7, $sp, 304                   # 8-byte Folded Spill
	st.d	$s8, $sp, 296                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a0, $sp, 64                    # 8-byte Folded Spill
	ld.d	$a0, $a0, 80
	st.d	$zero, $sp, 280
	ld.d	$s0, $a0, 16
	move	$s2, $a5
	move	$s1, $a4
	st.d	$a3, $sp, 24                    # 8-byte Folded Spill
	move	$s8, $a2
	move	$s4, $a1
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 264
	beqz	$s0, .LBB53_14
# %bb.1:                                # %.lr.ph.i.i.i
	st.d	$s4, $sp, 48                    # 8-byte Folded Spill
	st.d	$s1, $sp, 40                    # 8-byte Folded Spill
	move	$s4, $s2
	addi.d	$s3, $a0, 8
	ld.d	$fp, $s8, 8
	st.d	$s8, $sp, 32                    # 8-byte Folded Spill
	ld.d	$s5, $s8, 0
	lu12i.w	$s7, -524288
	lu12i.w	$a0, 524287
	ori	$s6, $a0, 4095
	ori	$s1, $zero, 16
	ori	$s8, $zero, 24
	st.d	$s3, $sp, 56                    # 8-byte Folded Spill
	b	.LBB53_4
	.p2align	4, , 16
.LBB53_2:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB53_4 Depth=1
	sub.d	$a0, $s2, $fp
	slt	$a1, $s7, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s6
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
.LBB53_3:                               # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB53_4 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s0, $a0
	masknez	$a2, $s1, $a0
	maskeqz	$a3, $s8, $a0
	or	$a2, $a3, $a2
	ldx.d	$s0, $s0, $a2
	maskeqz	$a0, $s3, $a0
	or	$s3, $a0, $a1
	beqz	$s0, .LBB53_6
.LBB53_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s0, 40
	sltu	$a0, $fp, $s2
	masknez	$a1, $s2, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB53_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB53_4 Depth=1
	ld.d	$a0, $s0, 32
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB53_3
	b	.LBB53_2
.LBB53_6:                               # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i
	move	$s2, $s4
	ld.d	$s1, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s8, $sp, 32                    # 8-byte Folded Reload
	beq	$s3, $a0, .LBB53_14
# %bb.7:
	ld.d	$s0, $s3, 40
	sltu	$a0, $s0, $fp
	masknez	$a1, $fp, $a0
	maskeqz	$a0, $s0, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB53_13
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s3, 32
	move	$a0, $s5
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB53_13
# %bb.9:                                # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit
	addi.w	$s5, $a0, 0
	bltz	$s5, .LBB53_14
.LBB53_10:
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a2, $s0, 176
	ld.d	$a0, $s0, 184
	ld.d	$a1, $s0, 200
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s4
	bltz	$a0, .LBB53_42
# %bb.11:
	ori	$a3, $zero, 3
	bltu	$a3, $a0, .LBB53_43
# %bb.12:
	slli.d	$a0, $s4, 7
	add.d	$a0, $a2, $a0
	ld.w	$a1, $a0, 80
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	ld.w	$a1, $a0, 84
	st.d	$a1, $sp, 16                    # 8-byte Folded Spill
	b	.LBB53_45
.LBB53_13:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $fp, $s0
	slt	$a1, $s7, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s6
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
	addi.w	$s5, $a0, 0
	bgez	$s5, .LBB53_10
.LBB53_14:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit.thread
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a2, $a0, 176
	ld.d	$a1, $a0, 184
	ld.d	$a0, $a0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s4
	bltz	$a1, .LBB53_17
# %bb.15:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB53_18
# %bb.16:
	slli.d	$a0, $s4, 7
	add.d	$a0, $a2, $a0
	b	.LBB53_20
.LBB53_17:
	srai.d	$a2, $a1, 2
	b	.LBB53_19
.LBB53_18:
	srli.d	$a2, $a1, 2
.LBB53_19:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB53_20:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit91
.Ltmp771:
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp772:
# %bb.21:
	addi.d	$s0, $s1, 16
.Ltmp773:
	pcalau12i	$a0, %pc_hi20(.L.str.77)
	addi.d	$a1, $a0, %pc_lo12(.L.str.77)
	ori	$a2, $zero, 50
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp774:
# %bb.22:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB53_108
# %bb.23:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB53_25
# %bb.24:
	ld.bu	$a0, $s1, 67
	b	.LBB53_27
.LBB53_25:
.Ltmp775:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp776:
# %bb.26:                               # %.noexc104
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp777:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp778:
.LBB53_27:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp779:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp780:
# %bb.28:                               # %.noexc106
.Ltmp781:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp782:
# %bb.29:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp783:
	pcalau12i	$a0, %pc_hi20(.L.str.78)
	addi.d	$a1, $a0, %pc_lo12(.L.str.78)
	ori	$a2, $zero, 21
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp784:
# %bb.30:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit95
	ld.d	$a1, $s8, 0
	ld.d	$a2, $s8, 8
.Ltmp785:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp786:
# %bb.31:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB53_108
# %bb.32:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i109
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB53_34
# %bb.33:
	ld.bu	$a0, $s1, 67
	b	.LBB53_36
.LBB53_34:
.Ltmp787:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp788:
# %bb.35:                               # %.noexc114
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp789:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp790:
.LBB53_36:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i111
.Ltmp791:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp792:
# %bb.37:                               # %.noexc116
.Ltmp793:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp794:
# %bb.38:                               # %_ZNSolsEPFRSoS_E.exit98
	ori	$a0, $zero, 2
	st.w	$a0, $s2, 0
.LBB53_39:
	ld.d	$a0, $sp, 264
	beqz	$a0, .LBB53_41
# %bb.40:
	ld.d	$a1, $sp, 280
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_41:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit
	ld.d	$s8, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 312                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 320                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 328                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 336                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 344                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 352                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 360                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 368                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 376                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 384
	ret
.LBB53_42:
	srai.d	$a2, $a0, 2
	b	.LBB53_44
.LBB53_43:
	srli.d	$a2, $a0, 2
.LBB53_44:
	slli.d	$a3, $a2, 3
	ldx.d	$a1, $a1, $a3
	andi	$a3, $a0, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
	ld.w	$a4, $a3, 80
	st.d	$a4, $sp, 32                    # 8-byte Folded Spill
	ld.w	$a3, $a3, 84
	st.d	$a3, $sp, 16                    # 8-byte Folded Spill
	slli.d	$a2, $a2, 2
	sub.d	$a0, $a0, $a2
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB53_45:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit40
	addi.d	$a3, $sp, 248
	ld.d	$a1, $a0, 96
	ld.d	$s6, $a0, 88
	st.d	$a3, $sp, 232
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 200
	move	$a0, $a3
	bltu	$a1, $a2, .LBB53_48
# %bb.46:                               # %.noexc.i.i
.Ltmp748:
	addi.d	$a0, $sp, 232
	addi.d	$a1, $sp, 200
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp749:
# %bb.47:                               # %.noexc
	ld.d	$a1, $sp, 200
	st.d	$a0, $sp, 232
	st.d	$a1, $sp, 248
.LBB53_48:                              # %._crit_edge.i.i.i
	addi.w	$fp, $zero, -1
	beq	$a1, $fp, .LBB53_52
# %bb.49:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB53_51
# %bb.50:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB53_52
.LBB53_51:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB53_52:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a3, $sp, 200
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s4
	st.d	$a3, $sp, 240
	bltz	$a1, .LBB53_55
# %bb.53:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB53_56
# %bb.54:
	slli.d	$a0, $s4, 7
	add.d	$a0, $a2, $a0
	b	.LBB53_58
.LBB53_55:
	srai.d	$a2, $a1, 2
	b	.LBB53_57
.LBB53_56:
	srli.d	$a2, $a1, 2
.LBB53_57:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB53_58:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit42
	addi.d	$s8, $sp, 184
	st.d	$s8, $sp, 168
	ld.d	$a1, $a0, 8
	ld.d	$s6, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 288
	move	$a0, $s8
	bltu	$a1, $a2, .LBB53_61
# %bb.59:                               # %.noexc.i.i44
.Ltmp751:
	addi.d	$a0, $sp, 168
	addi.d	$a1, $sp, 288
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp752:
# %bb.60:                               # %.noexc45
	ld.d	$a1, $sp, 288
	st.d	$a0, $sp, 168
	st.d	$a1, $sp, 184
.LBB53_61:                              # %._crit_edge.i.i.i43
	beq	$a1, $fp, .LBB53_65
# %bb.62:                               # %._crit_edge.i.i.i43
	bnez	$a1, .LBB53_64
# %bb.63:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB53_65
.LBB53_64:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB53_65:
	ld.d	$a0, $sp, 288
	st.d	$a0, $sp, 176
	addi.d	$s4, $sp, 152
	ld.d	$a1, $sp, 240
	ld.d	$s7, $sp, 232
	st.d	$s4, $sp, 136
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 288
	move	$a0, $s4
	bltu	$a1, $a2, .LBB53_68
# %bb.66:                               # %.noexc.i
.Ltmp754:
	addi.d	$a0, $sp, 136
	addi.d	$a1, $sp, 288
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp755:
# %bb.67:                               # %.noexc46
	ld.d	$a1, $sp, 288
	st.d	$a0, $sp, 136
	st.d	$a1, $sp, 152
.LBB53_68:                              # %._crit_edge.i.i
	slti	$a2, $s5, 0
	masknez	$a3, $s3, $a2
	ld.d	$a4, $sp, 56                    # 8-byte Folded Reload
	maskeqz	$a2, $a4, $a2
	or	$a2, $a2, $a3
	addi.d	$s6, $a2, 64
	beq	$a1, $fp, .LBB53_72
# %bb.69:                               # %._crit_edge.i.i
	bnez	$a1, .LBB53_71
# %bb.70:
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB53_72
.LBB53_71:
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB53_72:
	ld.d	$a0, $sp, 288
	ld.d	$a7, $s0, 40
	st.d	$a0, $sp, 144
.Ltmp757:
	st.d	$s2, $sp, 8
	addi.d	$a0, $sp, 200
	addi.d	$a2, $sp, 264
	addi.d	$a3, $sp, 168
	addi.d	$a6, $sp, 136
	st.d	$s1, $sp, 0
	move	$a1, $s6
	ld.d	$a4, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a5, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP8Variable13get_var_valueERSt6vectorIiSaIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiSA_PSt5dequeISA_SaISA_EERNS5_18basic_stringstreamIcS8_S9_EERi)
	jirl	$ra, $ra, 0
.Ltmp758:
# %bb.73:
	ld.d	$a0, $sp, 136
	beq	$a0, $s4, .LBB53_75
# %bb.74:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_75:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$s5, $fp
	ld.d	$a0, $sp, 168
	beq	$a0, $s8, .LBB53_77
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i47
	ld.d	$a1, $sp, 184
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_77:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit49
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	beqz	$s4, .LBB53_88
# %bb.78:
	addi.d	$s3, $sp, 120
	ld.d	$a1, $sp, 240
	ld.d	$s7, $sp, 232
	st.d	$s3, $sp, 104
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 288
	move	$a0, $s3
	bltu	$a1, $a2, .LBB53_81
# %bb.79:                               # %.noexc.i51
.Ltmp760:
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 288
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp761:
# %bb.80:                               # %.noexc52
	ld.d	$a1, $sp, 288
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
.LBB53_81:                              # %._crit_edge.i.i50
	beq	$a1, $s5, .LBB53_85
# %bb.82:                               # %._crit_edge.i.i50
	bnez	$a1, .LBB53_84
# %bb.83:
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB53_85
.LBB53_84:
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB53_85:
	ld.d	$a0, $sp, 288
	ld.d	$a6, $s0, 40
	st.d	$a0, $sp, 112
.Ltmp762:
	addi.d	$a1, $sp, 264
	addi.d	$a5, $sp, 104
	st.d	$s2, $sp, 0
	move	$a0, $s6
	move	$a2, $s4
	ld.d	$a3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 16                    # 8-byte Folded Reload
	move	$a7, $s1
	pcaddu18i	$ra, %call36(_ZN2PP8Variable8bump_varERSt6vectorIiSaIiEEiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeISA_SaISA_EERNS5_18basic_stringstreamIcS8_S9_EERi)
	jirl	$ra, $ra, 0
.Ltmp763:
# %bb.86:
	ld.d	$a0, $sp, 104
	beq	$a0, $s3, .LBB53_88
# %bb.87:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i54
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_88:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit56
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $fp
	bltz	$a1, .LBB53_91
# %bb.89:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB53_92
# %bb.90:
	slli.d	$a0, $fp, 7
	add.d	$fp, $a2, $a0
	b	.LBB53_94
.LBB53_91:
	srai.d	$a2, $a1, 2
	b	.LBB53_93
.LBB53_92:
	srli.d	$a2, $a1, 2
.LBB53_93:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$fp, $a0, $a1
.LBB53_94:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit67
	addi.d	$s1, $sp, 88
	ld.d	$a1, $sp, 208
	ld.d	$s0, $sp, 200
	st.d	$s1, $sp, 72
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 288
	move	$a0, $s1
	bltu	$a1, $a2, .LBB53_97
# %bb.95:                               # %.noexc.i69
.Ltmp765:
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 288
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp766:
# %bb.96:                               # %.noexc70
	ld.d	$a1, $sp, 288
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
.LBB53_97:                              # %._crit_edge.i.i68
	beq	$a1, $s5, .LBB53_101
# %bb.98:                               # %._crit_edge.i.i68
	bnez	$a1, .LBB53_100
# %bb.99:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB53_101
.LBB53_100:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB53_101:
	ld.d	$a0, $sp, 288
	st.d	$a0, $sp, 80
.Ltmp768:
	addi.d	$a1, $sp, 72
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word9set_valueENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp769:
# %bb.102:
	ld.d	$a0, $sp, 72
	beq	$a0, $s1, .LBB53_104
# %bb.103:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i72
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_104:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit74
	ld.d	$a0, $sp, 200
	addi.d	$a1, $sp, 216
	beq	$a0, $a1, .LBB53_106
# %bb.105:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i75
	ld.d	$a1, $sp, 216
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_106:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit77
	ld.d	$a0, $sp, 232
	addi.d	$a1, $sp, 248
	beq	$a0, $a1, .LBB53_39
# %bb.107:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i78
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB53_39
.LBB53_108:                             # %.invoke
.Ltmp795:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp796:
# %bb.109:                              # %.cont
.LBB53_110:
.Ltmp756:
	move	$fp, $a0
	b	.LBB53_123
.LBB53_111:
.Ltmp753:
	move	$fp, $a0
	b	.LBB53_126
.LBB53_112:
.Ltmp750:
	b	.LBB53_131
.LBB53_113:
.Ltmp764:
	ld.d	$a2, $sp, 104
	move	$fp, $a0
	beq	$a2, $s3, .LBB53_119
# %bb.114:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i63
	ld.d	$a0, $sp, 120
	b	.LBB53_118
.LBB53_115:
.Ltmp767:
	move	$fp, $a0
	b	.LBB53_119
.LBB53_116:
.Ltmp770:
	ld.d	$a2, $sp, 72
	move	$fp, $a0
	beq	$a2, $s1, .LBB53_119
# %bb.117:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i81
	ld.d	$a0, $sp, 88
.LBB53_118:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_119:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65
	ld.d	$a0, $sp, 200
	addi.d	$a1, $sp, 216
	beq	$a0, $a1, .LBB53_126
# %bb.120:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i84
	ld.d	$a1, $sp, 216
	b	.LBB53_125
.LBB53_121:
.Ltmp759:
	ld.d	$a2, $sp, 136
	move	$fp, $a0
	beq	$a2, $s4, .LBB53_123
# %bb.122:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i57
	ld.d	$a0, $sp, 152
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_123:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit59
	ld.d	$a0, $sp, 168
	beq	$a0, $s8, .LBB53_126
# %bb.124:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i60
	ld.d	$a1, $sp, 184
.LBB53_125:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit62
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB53_126:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit62
	ld.d	$a0, $sp, 232
	addi.d	$a1, $sp, 248
	bne	$a0, $a1, .LBB53_129
# %bb.127:
	ld.d	$a0, $sp, 264
	bnez	$a0, .LBB53_132
.LBB53_128:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit101
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB53_129:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i87
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 264
	beqz	$a0, .LBB53_128
	b	.LBB53_132
.LBB53_130:
.Ltmp797:
.LBB53_131:
	move	$fp, $a0
	ld.d	$a0, $sp, 264
	beqz	$a0, .LBB53_128
.LBB53_132:
	ld.d	$a1, $sp, 280
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end53:
	.size	_ZN2PP3Cmd7subvar0EiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end53-_ZN2PP3Cmd7subvar0EiRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiRNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table53:
.Lexception25:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Lfunc_begin25-.Lfunc_begin25  # >> Call Site 1 <<
	.uleb128 .Ltmp771-.Lfunc_begin25        #   Call between .Lfunc_begin25 and .Ltmp771
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp771-.Lfunc_begin25        # >> Call Site 2 <<
	.uleb128 .Ltmp794-.Ltmp771              #   Call between .Ltmp771 and .Ltmp794
	.uleb128 .Ltmp797-.Lfunc_begin25        #     jumps to .Ltmp797
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp794-.Lfunc_begin25        # >> Call Site 3 <<
	.uleb128 .Ltmp748-.Ltmp794              #   Call between .Ltmp794 and .Ltmp748
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp748-.Lfunc_begin25        # >> Call Site 4 <<
	.uleb128 .Ltmp749-.Ltmp748              #   Call between .Ltmp748 and .Ltmp749
	.uleb128 .Ltmp750-.Lfunc_begin25        #     jumps to .Ltmp750
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp749-.Lfunc_begin25        # >> Call Site 5 <<
	.uleb128 .Ltmp751-.Ltmp749              #   Call between .Ltmp749 and .Ltmp751
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp751-.Lfunc_begin25        # >> Call Site 6 <<
	.uleb128 .Ltmp752-.Ltmp751              #   Call between .Ltmp751 and .Ltmp752
	.uleb128 .Ltmp753-.Lfunc_begin25        #     jumps to .Ltmp753
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp752-.Lfunc_begin25        # >> Call Site 7 <<
	.uleb128 .Ltmp754-.Ltmp752              #   Call between .Ltmp752 and .Ltmp754
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp754-.Lfunc_begin25        # >> Call Site 8 <<
	.uleb128 .Ltmp755-.Ltmp754              #   Call between .Ltmp754 and .Ltmp755
	.uleb128 .Ltmp756-.Lfunc_begin25        #     jumps to .Ltmp756
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp755-.Lfunc_begin25        # >> Call Site 9 <<
	.uleb128 .Ltmp757-.Ltmp755              #   Call between .Ltmp755 and .Ltmp757
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp757-.Lfunc_begin25        # >> Call Site 10 <<
	.uleb128 .Ltmp758-.Ltmp757              #   Call between .Ltmp757 and .Ltmp758
	.uleb128 .Ltmp759-.Lfunc_begin25        #     jumps to .Ltmp759
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp758-.Lfunc_begin25        # >> Call Site 11 <<
	.uleb128 .Ltmp760-.Ltmp758              #   Call between .Ltmp758 and .Ltmp760
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp760-.Lfunc_begin25        # >> Call Site 12 <<
	.uleb128 .Ltmp761-.Ltmp760              #   Call between .Ltmp760 and .Ltmp761
	.uleb128 .Ltmp767-.Lfunc_begin25        #     jumps to .Ltmp767
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp761-.Lfunc_begin25        # >> Call Site 13 <<
	.uleb128 .Ltmp762-.Ltmp761              #   Call between .Ltmp761 and .Ltmp762
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp762-.Lfunc_begin25        # >> Call Site 14 <<
	.uleb128 .Ltmp763-.Ltmp762              #   Call between .Ltmp762 and .Ltmp763
	.uleb128 .Ltmp764-.Lfunc_begin25        #     jumps to .Ltmp764
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp763-.Lfunc_begin25        # >> Call Site 15 <<
	.uleb128 .Ltmp765-.Ltmp763              #   Call between .Ltmp763 and .Ltmp765
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp765-.Lfunc_begin25        # >> Call Site 16 <<
	.uleb128 .Ltmp766-.Ltmp765              #   Call between .Ltmp765 and .Ltmp766
	.uleb128 .Ltmp767-.Lfunc_begin25        #     jumps to .Ltmp767
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp766-.Lfunc_begin25        # >> Call Site 17 <<
	.uleb128 .Ltmp768-.Ltmp766              #   Call between .Ltmp766 and .Ltmp768
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp768-.Lfunc_begin25        # >> Call Site 18 <<
	.uleb128 .Ltmp769-.Ltmp768              #   Call between .Ltmp768 and .Ltmp769
	.uleb128 .Ltmp770-.Lfunc_begin25        #     jumps to .Ltmp770
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp769-.Lfunc_begin25        # >> Call Site 19 <<
	.uleb128 .Ltmp795-.Ltmp769              #   Call between .Ltmp769 and .Ltmp795
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp795-.Lfunc_begin25        # >> Call Site 20 <<
	.uleb128 .Ltmp796-.Ltmp795              #   Call between .Ltmp795 and .Ltmp796
	.uleb128 .Ltmp797-.Lfunc_begin25        #     jumps to .Ltmp797
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp796-.Lfunc_begin25        # >> Call Site 21 <<
	.uleb128 .Lfunc_end53-.Ltmp796          #   Call between .Ltmp796 and .Lfunc_end53
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end25:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd13set_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd13set_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd13set_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd13set_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd13set_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception26
# %bb.0:
	addi.d	$sp, $sp, -752
	.cfi_def_cfa_offset 752
	st.d	$ra, $sp, 744                   # 8-byte Folded Spill
	st.d	$fp, $sp, 736                   # 8-byte Folded Spill
	st.d	$s0, $sp, 728                   # 8-byte Folded Spill
	st.d	$s1, $sp, 720                   # 8-byte Folded Spill
	st.d	$s2, $sp, 712                   # 8-byte Folded Spill
	st.d	$s3, $sp, 704                   # 8-byte Folded Spill
	st.d	$s4, $sp, 696                   # 8-byte Folded Spill
	st.d	$s5, $sp, 688                   # 8-byte Folded Spill
	st.d	$s6, $sp, 680                   # 8-byte Folded Spill
	st.d	$s7, $sp, 672                   # 8-byte Folded Spill
	st.d	$s8, $sp, 664                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 88                    # 8-byte Folded Spill
	st.d	$a1, $sp, 96                    # 8-byte Folded Spill
	move	$s0, $a0
	move	$s1, $zero
	move	$s6, $zero
	move	$s7, $zero
	addi.w	$s4, $zero, -1
	ori	$s5, $zero, 4
	addi.d	$s8, $sp, 160
	ori	$fp, $zero, 16
	ori	$s3, $zero, 1
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	.p2align	4, , 16
.LBB54_1:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s7, $a2, .LBB54_480
# %bb.2:                                #   in Loop: Header=BB54_1 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s7, $a2
	bltz	$a2, .LBB54_5
# %bb.3:                                #   in Loop: Header=BB54_1 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB54_6
# %bb.4:                                #   in Loop: Header=BB54_1 Depth=1
	add.d	$a0, $a1, $s1
	b	.LBB54_8
	.p2align	4, , 16
.LBB54_5:                               #   in Loop: Header=BB54_1 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB54_7
	.p2align	4, , 16
.LBB54_6:                               #   in Loop: Header=BB54_1 Depth=1
	srli.d	$a1, $a2, 2
.LBB54_7:                               #   in Loop: Header=BB54_1 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_8:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB54_1 Depth=1
	st.d	$s8, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 376
	move	$a0, $s8
	bltu	$a1, $fp, .LBB54_10
# %bb.9:                                # %.noexc.i.i
                                        #   in Loop: Header=BB54_1 Depth=1
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 376
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 376
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB54_10:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB54_1 Depth=1
	beq	$a1, $s4, .LBB54_13
# %bb.11:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB54_1 Depth=1
	bnez	$a1, .LBB54_15
# %bb.12:                               #   in Loop: Header=BB54_1 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB54_13:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB54_1 Depth=1
	ld.d	$a1, $sp, 376
	ld.d	$a0, $sp, 144
	st.d	$a1, $sp, 152
	bne	$a1, $s3, .LBB54_16
.LBB54_14:                              #   in Loop: Header=BB54_1 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -61
	sltui	$s2, $a1, 1
	bne	$a0, $s8, .LBB54_17
	b	.LBB54_18
	.p2align	4, , 16
.LBB54_15:                              #   in Loop: Header=BB54_1 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 376
	ld.d	$a0, $sp, 144
	st.d	$a1, $sp, 152
	beq	$a1, $s3, .LBB54_14
.LBB54_16:                              #   in Loop: Header=BB54_1 Depth=1
	move	$s2, $zero
	beq	$a0, $s8, .LBB54_18
.LBB54_17:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB54_1 Depth=1
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB54_1 Depth=1
	ld.d	$a0, $sp, 104                   # 8-byte Folded Reload
	addi.w	$a0, $a0, 1
	bnez	$s2, .LBB54_20
# %bb.19:                               #   in Loop: Header=BB54_1 Depth=1
	addi.d	$s7, $s7, 1
	addi.w	$s6, $s6, 1
	addi.d	$s5, $s5, 2
	addi.d	$s1, $s1, 128
	st.d	$a0, $sp, 104                   # 8-byte Folded Spill
	b	.LBB54_1
.LBB54_20:
	move	$s2, $a0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB54_23
# %bb.21:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB54_25
# %bb.22:
	srli.d	$a2, $a1, 2
	b	.LBB54_24
.LBB54_23:
	srai.d	$a2, $a3, 9
.LBB54_24:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB54_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit146
	addi.d	$a0, $sp, 640
	st.d	$a0, $sp, 624
	ld.d	$a1, $a2, 8
	ld.d	$fp, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 144
	bltu	$a1, $a2, .LBB54_27
# %bb.26:                               # %.noexc.i.i148
	addi.d	$a0, $sp, 624
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 624
	st.d	$a1, $sp, 640
.LBB54_27:                              # %._crit_edge.i.i.i147
	addi.w	$s8, $zero, -1
	beq	$a1, $s8, .LBB54_31
# %bb.28:                               # %._crit_edge.i.i.i147
	bnez	$a1, .LBB54_30
# %bb.29:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB54_31
.LBB54_30:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_31:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit149
	ld.d	$a2, $sp, 144
	ld.d	$a0, $s0, 176
	ld.d	$a3, $s0, 184
	ld.d	$a1, $s0, 200
	st.d	$a2, $sp, 632
	sub.d	$a3, $a0, $a3
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB54_34
# %bb.32:
	ori	$a4, $zero, 4
	bgeu	$a2, $a4, .LBB54_35
# %bb.33:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit151.thread
	ld.w	$a1, $a0, 32
	ori	$a2, $zero, 13
	beq	$a1, $a2, .LBB54_39
	b	.LBB54_478
.LBB54_34:
	srai.d	$a4, $a3, 9
	b	.LBB54_36
.LBB54_35:
	srli.d	$a4, $a2, 2
.LBB54_36:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit151
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a1, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a2, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a5, $a4
	ld.w	$a4, $a4, 32
	ori	$a5, $zero, 13
	bne	$a4, $a5, .LBB54_478
# %bb.37:
	bltz	$a2, .LBB54_40
# %bb.38:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB54_41
.LBB54_39:                              # %.thread637
	ld.w	$a1, $a0, 80
	st.d	$a1, $sp, 80                    # 8-byte Folded Spill
	ld.w	$s1, $a0, 84
	b	.LBB54_43
.LBB54_40:
	srai.d	$a3, $a3, 9
	slli.d	$a0, $a3, 3
	ldx.d	$a0, $a1, $a0
	slli.d	$a1, $a3, 2
	sub.d	$a1, $a2, $a1
	b	.LBB54_42
.LBB54_41:
	slli.d	$a0, $a2, 1
	bstrins.d	$a0, $zero, 2, 0
	ldx.d	$a0, $a1, $a0
	andi	$a1, $a2, 3
.LBB54_42:
	slli.d	$a2, $a1, 7
	add.d	$a2, $a0, $a2
	ld.w	$a3, $a2, 80
	st.d	$a3, $sp, 80                    # 8-byte Folded Spill
	ld.w	$s1, $a2, 84
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_43:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit157
	addi.d	$a3, $sp, 608
	ld.d	$a1, $a0, 96
	ld.d	$s4, $a0, 88
	st.d	$a3, $sp, 592
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 144
	move	$a0, $a3
	bltu	$a1, $a2, .LBB54_46
# %bb.44:                               # %.noexc.i.i159
.Ltmp798:
	addi.d	$a0, $sp, 592
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp799:
# %bb.45:                               # %.noexc
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 592
	st.d	$a1, $sp, 608
.LBB54_46:                              # %._crit_edge.i.i.i158
	beq	$a1, $s8, .LBB54_50
# %bb.47:                               # %._crit_edge.i.i.i158
	bnez	$a1, .LBB54_49
# %bb.48:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB54_50
.LBB54_49:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_50:
	ld.d	$a0, $sp, 144
	st.d	$a0, $sp, 600
	st.d	$zero, $sp, 584
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 32                   # 16-byte Folded Spill
	vst	$vr0, $sp, 568
	sltui	$a1, $s6, 3
	ori	$a2, $zero, 3
	masknez	$a0, $a2, $a1
	st.d	$a1, $sp, 72                    # 8-byte Folded Spill
	maskeqz	$a1, $s6, $a1
	st.d	$a1, $sp, 64                    # 8-byte Folded Spill
	or	$fp, $a1, $a0
	ori	$a0, $zero, 4
	ld.d	$a1, $sp, 104                   # 8-byte Folded Reload
	sub.d	$s3, $a1, $fp
	st.d	$s1, $sp, 56                    # 8-byte Folded Spill
	bgeu	$s2, $a0, .LBB54_57
# %bb.51:
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a1, $a0
	srai.d	$a3, $a3, 3
	sltu	$a1, $zero, $a1
	ld.d	$a4, $s0, 208
	ld.d	$a5, $s0, 216
	sub.d	$a3, $a3, $a1
	ld.d	$a6, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a4, $a4, $a5
	srai.d	$a4, $a4, 7
	alsl.d	$a3, $a3, $a4, 2
	sub.d	$a4, $a6, $a1
	srai.d	$a4, $a4, 7
	add.d	$a3, $a3, $a4
	beq	$a3, $a2, .LBB54_104
# %bb.52:
.Ltmp949:
	move	$a0, $s0
	ld.d	$a1, $sp, 96                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp950:
# %bb.53:
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	addi.d	$s4, $a0, 16
.Ltmp951:
	pcalau12i	$a0, %pc_hi20(.L.str.79)
	addi.d	$a1, $a0, %pc_lo12(.L.str.79)
	ori	$a2, $zero, 38
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp952:
# %bb.54:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $s4, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB54_481
# %bb.55:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB54_68
# %bb.56:
	ld.bu	$a0, $s5, 67
	b	.LBB54_70
.LBB54_57:
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $s0, 192
	ld.d	$a1, $s0, 176
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	addi.w	$a3, $s3, 6
	sub.d	$a4, $a4, $a1
	srli.d	$a4, $a4, 7
	add.w	$a2, $a2, $a4
	bge	$a2, $a3, .LBB54_64
# %bb.58:
.Ltmp914:
	move	$a0, $s0
	ld.d	$s0, $sp, 96                    # 8-byte Folded Reload
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12fatal_error2ERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp915:
# %bb.59:
	addi.d	$s0, $s0, 16
.Ltmp916:
	pcalau12i	$a0, %pc_hi20(.L.str.80)
	addi.d	$a1, $a0, %pc_lo12(.L.str.80)
	ori	$a2, $zero, 43
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp917:
# %bb.60:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit203
.Ltmp918:
	slli.d	$a0, $fp, 1
	sub.w	$a1, $s5, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp919:
# %bb.61:
	move	$s1, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB54_483
# %bb.62:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i467
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB54_77
# %bb.63:
	ld.bu	$a0, $s2, 67
	b	.LBB54_79
.LBB54_64:
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s8, .LBB54_67
# %bb.65:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB54_118
# %bb.66:
	addi.d	$a0, $a1, 128
	b	.LBB54_120
.LBB54_67:
	srai.d	$a1, $a2, 2
	b	.LBB54_119
.LBB54_68:
.Ltmp953:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp954:
# %bb.69:                               # %.noexc407
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp955:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp956:
.LBB54_70:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp957:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp958:
# %bb.71:                               # %.noexc409
.Ltmp959:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp960:
# %bb.72:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp961:
	pcalau12i	$a0, %pc_hi20(.L.str.35)
	addi.d	$a1, $a0, %pc_lo12(.L.str.35)
	ori	$a2, $zero, 22
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp962:
# %bb.73:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit164
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s0, 208
	ld.d	$a3, $s0, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s0, 192
	ld.d	$a4, $s0, 176
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srai.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.Ltmp963:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo9_M_insertImEERSoT_)
	jirl	$ra, $ra, 0
.Ltmp964:
# %bb.74:                               # %_ZNSolsEm.exit
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB54_481
# %bb.75:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i412
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB54_85
# %bb.76:
	ld.bu	$a0, $s5, 67
	b	.LBB54_87
.LBB54_77:
.Ltmp920:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp921:
# %bb.78:                               # %.noexc472
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp922:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp923:
.LBB54_79:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i469
.Ltmp924:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp925:
# %bb.80:                               # %.noexc474
.Ltmp926:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp927:
# %bb.81:                               # %_ZNSolsEPFRSoS_E.exit205
.Ltmp928:
	pcalau12i	$a0, %pc_hi20(.L.str.81)
	addi.d	$a1, $a0, %pc_lo12(.L.str.81)
	ori	$a2, $zero, 47
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp929:
# %bb.82:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit207
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB54_483
# %bb.83:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i478
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB54_92
# %bb.84:
	ld.bu	$a0, $s1, 67
	b	.LBB54_94
.LBB54_85:
.Ltmp965:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp966:
# %bb.86:                               # %.noexc417
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp967:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp968:
.LBB54_87:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i414
.Ltmp969:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp970:
# %bb.88:                               # %.noexc419
.Ltmp971:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp972:
# %bb.89:                               # %_ZNSolsEPFRSoS_E.exit168
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB54_481
# %bb.90:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i423
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB54_99
# %bb.91:
	ld.bu	$a0, $s5, 67
	b	.LBB54_101
.LBB54_92:
.Ltmp930:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp931:
# %bb.93:                               # %.noexc483
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp932:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp933:
.LBB54_94:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i480
.Ltmp934:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp935:
# %bb.95:                               # %.noexc485
.Ltmp936:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp937:
# %bb.96:                               # %_ZNSolsEPFRSoS_E.exit209
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB54_483
# %bb.97:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i489
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB54_113
# %bb.98:
	ld.bu	$a0, $s1, 67
	b	.LBB54_115
.LBB54_99:
.Ltmp973:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp974:
# %bb.100:                              # %.noexc428
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp975:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp976:
.LBB54_101:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i425
.Ltmp977:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp978:
# %bb.102:                              # %.noexc430
.Ltmp979:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp980:
# %bb.103:                              # %_ZNSolsEPFRSoS_E.exit170
	ori	$a0, $zero, 2
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	st.w	$a0, $a1, 0
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	ori	$a3, $zero, 3
	bltu	$a2, $a3, .LBB54_468
.LBB54_104:
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.w	$fp, $zero, -2
	addi.d	$a2, $a3, 2
	blt	$a3, $fp, .LBB54_107
# %bb.105:
	ori	$a4, $zero, 4
	bgeu	$a2, $a4, .LBB54_108
# %bb.106:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit173.thread
	ld.w	$a0, $a1, 296
	ori	$a2, $zero, 1
	bne	$a0, $a2, .LBB54_112
	b	.LBB54_207
.LBB54_107:
	srai.d	$a4, $a2, 2
	b	.LBB54_109
.LBB54_108:
	srli.d	$a4, $a2, 2
.LBB54_109:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit173
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a2, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a5, $a4
	ld.w	$a4, $a4, 40
	ori	$a5, $zero, 1
	beq	$a4, $a5, .LBB54_207
# %bb.110:
	blt	$a3, $fp, .LBB54_117
# %bb.111:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB54_157
.LBB54_112:                             # %.thread647
	addi.d	$a0, $a1, 256
	b	.LBB54_159
.LBB54_113:
.Ltmp938:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp939:
# %bb.114:                              # %.noexc494
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp940:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp941:
.LBB54_115:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i491
.Ltmp942:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp943:
# %bb.116:                              # %.noexc496
.Ltmp944:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp945:
	b	.LBB54_467
.LBB54_117:
	srai.d	$a1, $a2, 2
	b	.LBB54_158
.LBB54_118:
	srli.d	$a1, $a2, 2
.LBB54_119:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_120:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit213
	addi.d	$fp, $sp, 160
	st.d	$fp, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 376
	move	$a0, $fp
	bltu	$a1, $a2, .LBB54_123
# %bb.121:                              # %.noexc.i.i215
.Ltmp801:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 376
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp802:
# %bb.122:                              # %.noexc216
	ld.d	$a1, $sp, 376
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB54_123:                             # %._crit_edge.i.i.i214
	beq	$a1, $s8, .LBB54_127
# %bb.124:                              # %._crit_edge.i.i.i214
	bnez	$a1, .LBB54_126
# %bb.125:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB54_127
.LBB54_126:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_127:
	ld.d	$a1, $sp, 376
	ld.d	$a0, $sp, 144
	ori	$s1, $zero, 1
	st.d	$a1, $sp, 152
	bne	$a1, $s1, .LBB54_129
# %bb.128:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -40
	sltu	$s1, $zero, $a1
.LBB54_129:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	beq	$a0, $fp, .LBB54_131
# %bb.130:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i218
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_131:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit220
	beqz	$s1, .LBB54_135
# %bb.132:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	blt	$a3, $s8, .LBB54_138
# %bb.133:
	ori	$a3, $zero, 3
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	bltu	$a3, $a1, .LBB54_357
# %bb.134:
	addi.d	$a0, $a2, 128
	b	.LBB54_359
.LBB54_135:
	ori	$a2, $zero, 3
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	masknez	$a0, $a2, $a0
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	or	$a0, $a1, $a0
	ld.d	$a3, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a4, $sp, 104                   # 8-byte Folded Reload
	sub.d	$a0, $a4, $a0
	addi.w	$s5, $a0, 3
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a3, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s5
	bltz	$a1, .LBB54_139
# %bb.136:
	bltu	$a2, $a1, .LBB54_140
# %bb.137:
	slli.d	$a0, $s5, 7
	add.d	$a0, $a3, $a0
	b	.LBB54_142
.LBB54_138:
	srai.d	$a2, $a1, 2
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	b	.LBB54_358
.LBB54_139:
	srai.d	$a2, $a1, 2
	b	.LBB54_141
.LBB54_140:
	srli.d	$a2, $a1, 2
.LBB54_141:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_142:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit259
	addi.d	$fp, $sp, 160
	st.d	$fp, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 376
	move	$a0, $fp
	bltu	$a1, $a2, .LBB54_145
# %bb.143:                              # %.noexc.i.i261
.Ltmp804:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 376
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp805:
# %bb.144:                              # %.noexc262
	ld.d	$a1, $sp, 376
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB54_145:                             # %._crit_edge.i.i.i260
	beq	$a1, $s8, .LBB54_149
# %bb.146:                              # %._crit_edge.i.i.i260
	bnez	$a1, .LBB54_148
# %bb.147:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB54_149
.LBB54_148:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_149:
	ld.d	$a1, $sp, 376
	ld.d	$a0, $sp, 144
	ori	$s1, $zero, 1
	st.d	$a1, $sp, 152
	bne	$a1, $s1, .LBB54_151
# %bb.150:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -41
	sltu	$s1, $zero, $a1
.LBB54_151:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit265
	beq	$a0, $fp, .LBB54_153
# %bb.152:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i266
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_153:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit268
	beqz	$s1, .LBB54_207
# %bb.154:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s5
	bltz	$a1, .LBB54_414
# %bb.155:
	ori	$a3, $zero, 3
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	bltu	$a3, $a1, .LBB54_415
# %bb.156:
	slli.d	$a0, $s5, 7
	add.d	$a0, $a2, $a0
	b	.LBB54_417
.LBB54_157:
	srli.d	$a1, $a2, 2
.LBB54_158:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_159:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit175
.Ltmp981:
	ld.d	$a1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp982:
# %bb.160:
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	addi.d	$s4, $a0, 16
.Ltmp983:
	pcalau12i	$a0, %pc_hi20(.L.str.40)
	addi.d	$a1, $a0, %pc_lo12(.L.str.40)
	ori	$a2, $zero, 29
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp984:
# %bb.161:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit177
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 2
	blt	$a3, $fp, .LBB54_164
# %bb.162:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB54_165
# %bb.163:
	addi.d	$a0, $a2, 256
	b	.LBB54_167
.LBB54_164:
	srai.d	$a2, $a1, 2
	b	.LBB54_166
.LBB54_165:
	srli.d	$a2, $a1, 2
.LBB54_166:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_167:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit179
	addi.d	$s1, $sp, 160
	st.d	$s1, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s5, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 376
	move	$a0, $s1
	bltu	$a1, $a2, .LBB54_170
# %bb.168:                              # %.noexc.i.i181
.Ltmp985:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 376
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp986:
# %bb.169:                              # %.noexc182
	ld.d	$a1, $sp, 376
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB54_170:                             # %._crit_edge.i.i.i180
	beq	$a1, $s8, .LBB54_174
# %bb.171:                              # %._crit_edge.i.i.i180
	bnez	$a1, .LBB54_173
# %bb.172:
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB54_174
.LBB54_173:
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_174:
	ld.d	$a2, $sp, 376
	ld.d	$a1, $sp, 144
	st.d	$a2, $sp, 152
.Ltmp988:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp989:
# %bb.175:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s5, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s5, $a0
	ld.d	$s6, $a0, 240
	beqz	$s6, .LBB54_489
# %bb.176:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i434
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_178
# %bb.177:
	ld.bu	$a0, $s6, 67
	b	.LBB54_180
.LBB54_178:
.Ltmp990:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp991:
# %bb.179:                              # %.noexc439
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp992:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp993:
.LBB54_180:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i436
.Ltmp994:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp995:
# %bb.181:                              # %.noexc441
.Ltmp996:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp997:
# %bb.182:                              # %_ZNSolsEPFRSoS_E.exit186
	ld.d	$a0, $sp, 144
	beq	$a0, $s1, .LBB54_184
# %bb.183:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i187
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_184:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit189
.Ltmp998:
	pcalau12i	$a0, %pc_hi20(.L.str.41)
	addi.d	$a1, $a0, %pc_lo12(.L.str.41)
	ori	$a2, $zero, 17
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp999:
# %bb.185:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit191
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 2
	blt	$a3, $fp, .LBB54_188
# %bb.186:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB54_189
# %bb.187:
	addi.d	$a0, $a2, 256
	b	.LBB54_191
.LBB54_188:
	srai.d	$a2, $a1, 2
	b	.LBB54_190
.LBB54_189:
	srli.d	$a2, $a1, 2
.LBB54_190:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_191:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit193
	ld.w	$a1, $a0, 40
.Ltmp1000:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1001:
# %bb.192:
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB54_481
# %bb.193:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i445
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB54_195
# %bb.194:
	ld.bu	$a0, $s5, 67
	b	.LBB54_197
.LBB54_195:
.Ltmp1002:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1003:
# %bb.196:                              # %.noexc450
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp1004:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp1005:
.LBB54_197:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i447
.Ltmp1006:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1007:
# %bb.198:                              # %.noexc452
.Ltmp1008:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1009:
# %bb.199:                              # %_ZNSolsEPFRSoS_E.exit195
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB54_481
# %bb.200:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i456
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB54_202
# %bb.201:
	ld.bu	$a0, $s5, 67
	b	.LBB54_204
.LBB54_202:
.Ltmp1010:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1011:
# %bb.203:                              # %.noexc461
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp1012:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp1013:
.LBB54_204:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i458
.Ltmp1014:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1015:
# %bb.205:                              # %.noexc463
.Ltmp1016:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1017:
# %bb.206:                              # %_ZNSolsEPFRSoS_E.exit197
	ori	$a0, $zero, 2
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	st.w	$a0, $a1, 0
.LBB54_207:                             # %.thread648
	addi.w	$a0, $s3, 1
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	addi.d	$s3, $sp, 160
	ori	$s6, $zero, 3
	ori	$s1, $zero, 16
	.p2align	4, , 16
.LBB54_208:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB54_228 Depth 2
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a2, $a2, $a1
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $s0, 192
	ld.d	$a1, $s0, 176
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	addi.d	$s7, $s7, 1
	sub.d	$a3, $a4, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	addi.w	$a3, $s7, 0
	bge	$a3, $a2, .LBB54_236
# %bb.209:                              #   in Loop: Header=BB54_208 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s7
	bltz	$a2, .LBB54_212
# %bb.210:                              #   in Loop: Header=BB54_208 Depth=1
	bltu	$s6, $a2, .LBB54_213
# %bb.211:                              #   in Loop: Header=BB54_208 Depth=1
	slli.d	$a0, $s7, 7
	add.d	$a0, $a1, $a0
	ld.w	$fp, $a0, 40
	b	.LBB54_215
	.p2align	4, , 16
.LBB54_212:                             #   in Loop: Header=BB54_208 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB54_214
	.p2align	4, , 16
.LBB54_213:                             #   in Loop: Header=BB54_208 Depth=1
	srli.d	$a1, $a2, 2
.LBB54_214:                             #   in Loop: Header=BB54_208 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	andi	$a3, $a2, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a0, $a3
	ld.w	$fp, $a3, 40
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_215:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit311
                                        #   in Loop: Header=BB54_208 Depth=1
	st.d	$s3, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	st.d	$a1, $sp, 376
	move	$a0, $s3
	bltu	$a1, $s1, .LBB54_218
# %bb.216:                              # %.noexc.i.i313
                                        #   in Loop: Header=BB54_208 Depth=1
.Ltmp1102:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 376
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1103:
# %bb.217:                              # %.noexc314
                                        #   in Loop: Header=BB54_208 Depth=1
	ld.d	$a1, $sp, 376
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB54_218:                             # %._crit_edge.i.i.i312
                                        #   in Loop: Header=BB54_208 Depth=1
	beq	$a1, $s8, .LBB54_221
# %bb.219:                              # %._crit_edge.i.i.i312
                                        #   in Loop: Header=BB54_208 Depth=1
	bnez	$a1, .LBB54_222
# %bb.220:                              #   in Loop: Header=BB54_208 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
.LBB54_221:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit315
                                        #   in Loop: Header=BB54_208 Depth=1
	ld.d	$a0, $sp, 376
	st.d	$a0, $sp, 152
	bgtz	$fp, .LBB54_228
	b	.LBB54_223
	.p2align	4, , 16
.LBB54_222:                             #   in Loop: Header=BB54_208 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 376
	st.d	$a0, $sp, 152
	bgtz	$fp, .LBB54_228
	.p2align	4, , 16
.LBB54_223:                             # %._crit_edge
                                        #   in Loop: Header=BB54_208 Depth=1
	ld.d	$a0, $sp, 144
	beq	$a0, $s3, .LBB54_208
# %bb.224:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i316
                                        #   in Loop: Header=BB54_208 Depth=1
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_208
	.p2align	4, , 16
.LBB54_225:                             #   in Loop: Header=BB54_228 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_226:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB54_228 Depth=2
	ld.d	$a0, $sp, 376
	st.d	$a0, $s4, 8
	ld.d	$a0, $sp, 576
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 576
.LBB54_227:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB54_228 Depth=2
	addi.w	$fp, $fp, -1
	beqz	$fp, .LBB54_223
.LBB54_228:                             # %.lr.ph
                                        #   Parent Loop BB54_208 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$s4, $sp, 576
	ld.d	$a0, $sp, 584
	beq	$s4, $a0, .LBB54_235
# %bb.229:                              #   in Loop: Header=BB54_228 Depth=2
	addi.d	$a0, $s4, 16
	st.d	$a0, $s4, 0
	ld.d	$a1, $sp, 152
	ld.d	$s5, $sp, 144
	st.d	$a1, $sp, 376
	bltu	$a1, $s1, .LBB54_232
# %bb.230:                              # %.noexc.i.i320
                                        #   in Loop: Header=BB54_228 Depth=2
.Ltmp1105:
	addi.d	$a1, $sp, 376
	move	$a0, $s4
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1106:
# %bb.231:                              # %.noexc321
                                        #   in Loop: Header=BB54_228 Depth=2
	st.d	$a0, $s4, 0
	ld.d	$a1, $sp, 376
	st.d	$a1, $s4, 16
.LBB54_232:                             # %._crit_edge.i.i.i319
                                        #   in Loop: Header=BB54_228 Depth=2
	beq	$a1, $s8, .LBB54_226
# %bb.233:                              # %._crit_edge.i.i.i319
                                        #   in Loop: Header=BB54_228 Depth=2
	bnez	$a1, .LBB54_225
# %bb.234:                              #   in Loop: Header=BB54_228 Depth=2
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB54_226
	.p2align	4, , 16
.LBB54_235:                             #   in Loop: Header=BB54_228 Depth=2
.Ltmp1107:
	addi.d	$a0, $sp, 568
	addi.d	$a1, $sp, 144
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1108:
	b	.LBB54_227
.LBB54_236:
	ori	$a0, $zero, 3
	bltu	$a0, $s2, .LBB54_238
# %bb.237:                              # %._crit_edge683.thread
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	st.d	$a0, $sp, 80                    # 8-byte Folded Spill
	st.d	$zero, $sp, 560
	vld	$vr0, $sp, 32                   # 16-byte Folded Reload
	vst	$vr0, $sp, 544
	b	.LBB54_292
.LBB54_238:                             # %.lr.ph.preheader.i.i.i.i.i
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	st.d	$a0, $sp, 80                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	bstrpick.d	$s3, $a0, 31, 0
	slli.d	$s5, $s3, 2
.Ltmp1024:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1025:
# %bb.239:                              # %.lr.ph682
	move	$s4, $a0
	st.d	$a0, $sp, 544
	alsl.d	$a0, $s3, $a0, 2
	st.d	$a0, $sp, 560
	move	$a0, $s4
	move	$a1, $zero
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	move	$s2, $zero
	ori	$s7, $zero, 3
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	masknez	$a0, $s7, $a0
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	or	$a0, $a1, $a0
	ld.d	$a1, $sp, 104                   # 8-byte Folded Reload
	sub.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 1
	bstrpick.d	$a0, $a0, 31, 0
	alsl.d	$a0, $a0, $s4, 2
	st.d	$a0, $sp, 552
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	addi.d	$s4, $a0, 16
	addi.d	$a0, $a0, 256
	st.d	$a0, $sp, 104                   # 8-byte Folded Spill
	ori	$s5, $zero, 1
.LBB54_240:                             # %.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB54_241 Depth 2
	addi.d	$a0, $s2, 1
	slli.d	$fp, $s2, 2
	slli.d	$a1, $s2, 7
	addi.d	$s1, $a1, 256
	.p2align	4, , 16
.LBB54_241:                             #   Parent Loop BB54_240 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	move	$s2, $a0
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s2, $a1
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB54_244
# %bb.242:                              #   in Loop: Header=BB54_241 Depth=2
	bltu	$s7, $a3, .LBB54_245
# %bb.243:                              #   in Loop: Header=BB54_241 Depth=2
	add.d	$a0, $a2, $s1
	b	.LBB54_247
	.p2align	4, , 16
.LBB54_244:                             #   in Loop: Header=BB54_241 Depth=2
	srai.d	$a2, $a3, 2
	b	.LBB54_246
	.p2align	4, , 16
.LBB54_245:                             #   in Loop: Header=BB54_241 Depth=2
	srli.d	$a2, $a3, 2
.LBB54_246:                             #   in Loop: Header=BB54_241 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 128
.LBB54_247:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit327
                                        #   in Loop: Header=BB54_241 Depth=2
.Ltmp1027:
	ld.d	$a1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1028:
# %bb.248:                              #   in Loop: Header=BB54_241 Depth=2
	ld.d	$a1, $sp, 544
	stx.w	$a0, $a1, $fp
	blez	$a0, .LBB54_250
# %bb.249:                              # %_ZNSolsEPFRSoS_E.exit343
                                        #   in Loop: Header=BB54_241 Depth=2
	addi.d	$a0, $s2, 1
	addi.d	$fp, $fp, 4
	addi.d	$s1, $s1, 128
	bltu	$s2, $s3, .LBB54_241
	b	.LBB54_291
.LBB54_250:                             #   in Loop: Header=BB54_240 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $a1, $s2
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB54_253
# %bb.251:                              #   in Loop: Header=BB54_240 Depth=1
	bltu	$s7, $a3, .LBB54_254
# %bb.252:                              #   in Loop: Header=BB54_240 Depth=1
	add.d	$a0, $a2, $s1
	b	.LBB54_256
.LBB54_253:                             #   in Loop: Header=BB54_240 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB54_255
.LBB54_254:                             #   in Loop: Header=BB54_240 Depth=1
	srli.d	$a2, $a3, 2
.LBB54_255:                             #   in Loop: Header=BB54_240 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $a1, $s2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 128
.LBB54_256:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit329
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1030:
	ld.d	$a1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1031:
# %bb.257:                              #   in Loop: Header=BB54_240 Depth=1
.Ltmp1032:
	pcalau12i	$a0, %pc_hi20(.L.str.49)
	addi.d	$a1, $a0, %pc_lo12(.L.str.49)
	ori	$a2, $zero, 54
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1033:
# %bb.258:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit331
                                        #   in Loop: Header=BB54_240 Depth=1
	pcalau12i	$a0, %pc_hi20(_ZN2PPL10index_baseE)
	ld.w	$a1, $a0, %pc_lo12(_ZN2PPL10index_baseE)
.Ltmp1034:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1035:
# %bb.259:                              #   in Loop: Header=BB54_240 Depth=1
	move	$s5, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s5, $a0
	ld.d	$s6, $a0, 240
	beqz	$s6, .LBB54_485
# %bb.260:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i588
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_262
# %bb.261:                              #   in Loop: Header=BB54_240 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_264
.LBB54_262:                             #   in Loop: Header=BB54_240 Depth=1
.Ltmp1036:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1037:
# %bb.263:                              # %.noexc593
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp1038:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp1039:
.LBB54_264:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i590
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1040:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1041:
# %bb.265:                              # %.noexc595
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1042:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1043:
# %bb.266:                              # %_ZNSolsEPFRSoS_E.exit333
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1044:
	pcalau12i	$a0, %pc_hi20(.L.str.50)
	addi.d	$a1, $a0, %pc_lo12(.L.str.50)
	ori	$a2, $zero, 53
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1045:
# %bb.267:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit335
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.d	$a0, $s4, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 104                   # 8-byte Folded Reload
	ldx.d	$s5, $a1, $a0
	beqz	$s5, .LBB54_485
# %bb.268:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i599
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB54_270
# %bb.269:                              #   in Loop: Header=BB54_240 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB54_272
.LBB54_270:                             #   in Loop: Header=BB54_240 Depth=1
.Ltmp1046:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1047:
# %bb.271:                              # %.noexc604
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp1048:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp1049:
.LBB54_272:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i601
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1050:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1051:
# %bb.273:                              # %.noexc606
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1052:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1053:
# %bb.274:                              # %_ZNSolsEPFRSoS_E.exit337
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1054:
	pcalau12i	$a0, %pc_hi20(.L.str.51)
	addi.d	$a1, $a0, %pc_lo12(.L.str.51)
	ori	$a2, $zero, 20
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1055:
# %bb.275:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit339
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.d	$a0, $sp, 544
	ldx.w	$a1, $a0, $fp
.Ltmp1056:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1057:
# %bb.276:                              #   in Loop: Header=BB54_240 Depth=1
	move	$s5, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s5, $a0
	ld.d	$s6, $a0, 240
	beqz	$s6, .LBB54_485
# %bb.277:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i610
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_279
# %bb.278:                              #   in Loop: Header=BB54_240 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_281
.LBB54_279:                             #   in Loop: Header=BB54_240 Depth=1
.Ltmp1058:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1059:
# %bb.280:                              # %.noexc615
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp1060:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp1061:
.LBB54_281:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i612
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1062:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1063:
# %bb.282:                              # %.noexc617
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1064:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1065:
# %bb.283:                              # %_ZNSolsEPFRSoS_E.exit341
                                        #   in Loop: Header=BB54_240 Depth=1
	move	$s5, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s5, $a0
	ld.d	$s6, $a0, 240
	beqz	$s6, .LBB54_485
# %bb.284:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i621
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.bu	$a0, $s6, 56
	beqz	$a0, .LBB54_286
# %bb.285:                              #   in Loop: Header=BB54_240 Depth=1
	ld.bu	$a0, $s6, 67
	b	.LBB54_288
.LBB54_286:                             #   in Loop: Header=BB54_240 Depth=1
.Ltmp1066:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1067:
# %bb.287:                              # %.noexc626
                                        #   in Loop: Header=BB54_240 Depth=1
	ld.d	$a0, $s6, 0
	ld.d	$a2, $a0, 48
.Ltmp1068:
	ori	$a1, $zero, 10
	move	$a0, $s6
	jirl	$ra, $a2, 0
.Ltmp1069:
.LBB54_288:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i623
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1070:
	ext.w.b	$a1, $a0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1071:
# %bb.289:                              # %.noexc628
                                        #   in Loop: Header=BB54_240 Depth=1
.Ltmp1072:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1073:
# %bb.290:                              # %_ZNSolsEPFRSoS_E.exit343.thread
                                        #   in Loop: Header=BB54_240 Depth=1
	move	$s5, $zero
	bltu	$s2, $s3, .LBB54_240
	b	.LBB54_315
.LBB54_291:                             # %._crit_edge683
	andi	$a0, $s5, 1
	beqz	$a0, .LBB54_315
.LBB54_292:
	ld.d	$a0, $s0, 80
	ld.d	$s6, $a0, 16
	beqz	$s6, .LBB54_309
# %bb.293:                              # %.lr.ph.i.i.i
	addi.d	$s1, $a0, 8
	ld.d	$s5, $sp, 632
	ld.d	$s4, $sp, 624
	lu12i.w	$a0, 524287
	ori	$s2, $a0, 4095
	ori	$s7, $zero, 16
	ori	$fp, $zero, 24
	st.d	$s1, $sp, 104                   # 8-byte Folded Spill
	b	.LBB54_296
	.p2align	4, , 16
.LBB54_294:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB54_296 Depth=1
	sub.d	$a0, $s3, $s5
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$a0, $a0, $a1
.LBB54_295:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB54_296 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s6, $a0
	masknez	$a2, $s7, $a0
	maskeqz	$a3, $fp, $a0
	or	$a2, $a3, $a2
	ldx.d	$s6, $s6, $a2
	maskeqz	$a0, $s1, $a0
	or	$s1, $a0, $a1
	beqz	$s6, .LBB54_298
.LBB54_296:                             # =>This Inner Loop Header: Depth=1
	ld.d	$s3, $s6, 40
	sltu	$a0, $s5, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB54_294
# %bb.297:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB54_296 Depth=1
	ld.d	$a0, $s6, 32
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB54_295
	b	.LBB54_294
.LBB54_298:                             # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i
	ld.d	$s6, $sp, 104                   # 8-byte Folded Reload
	beq	$s1, $s6, .LBB54_309
# %bb.299:
	ld.d	$fp, $s1, 40
	sltu	$a0, $fp, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $fp, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB54_301
# %bb.300:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s1, 32
	move	$a0, $s4
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB54_302
.LBB54_301:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $s5, $fp
	lu12i.w	$a2, -524288
	slt	$a1, $a2, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$a0, $a0, $a1
.LBB54_302:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit
	addi.w	$fp, $a0, 0
	bltz	$fp, .LBB54_309
# %bb.303:
	addi.d	$s2, $sp, 528
	ld.d	$a1, $sp, 600
	ld.d	$s4, $sp, 592
	st.d	$s2, $sp, 512
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 144
	move	$a0, $s2
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	bltu	$a1, $a2, .LBB54_306
# %bb.304:                              # %.noexc.i
.Ltmp1078:
	addi.d	$a0, $sp, 512
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1079:
# %bb.305:                              # %.noexc345
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 512
	st.d	$a1, $sp, 528
.LBB54_306:                             # %._crit_edge.i.i
	slti	$a2, $fp, 0
	masknez	$a3, $s1, $a2
	maskeqz	$a2, $s6, $a2
	or	$fp, $a2, $a3
	beq	$a1, $s8, .LBB54_408
# %bb.307:                              # %._crit_edge.i.i
	bnez	$a1, .LBB54_407
# %bb.308:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB54_408
.LBB54_309:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit.thread
	addi.d	$s1, $sp, 360
	ld.d	$a1, $sp, 632
	ld.d	$s4, $sp, 624
	st.d	$s1, $sp, 344
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 144
	move	$a0, $s1
	ld.d	$s3, $sp, 56                    # 8-byte Folded Reload
	bltu	$a1, $a2, .LBB54_312
# %bb.310:                              # %.noexc.i353
.Ltmp1084:
	addi.d	$a0, $sp, 344
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1085:
# %bb.311:                              # %.noexc354
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 344
	st.d	$a1, $sp, 360
.LBB54_312:                             # %._crit_edge.i.i352
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	beq	$a1, $s8, .LBB54_317
# %bb.313:                              # %._crit_edge.i.i352
	bnez	$a1, .LBB54_316
# %bb.314:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB54_317
.LBB54_315:                             # %._crit_edge683.thread707
	ori	$a0, $zero, 2
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	st.w	$a0, $a1, 0
	b	.LBB54_412
.LBB54_316:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_317:
	ld.d	$a0, $sp, 144
	st.d	$a0, $sp, 352
	addi.d	$s2, $sp, 328
	ld.d	$a1, $sp, 600
	ld.d	$s4, $sp, 592
	st.d	$s2, $sp, 312
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 144
	move	$a0, $s2
	bltu	$a1, $a2, .LBB54_320
# %bb.318:                              # %.noexc.i357
.Ltmp1087:
	addi.d	$a0, $sp, 312
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1088:
# %bb.319:                              # %.noexc358
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 312
	st.d	$a1, $sp, 328
.LBB54_320:                             # %._crit_edge.i.i356
	beq	$a1, $s8, .LBB54_324
# %bb.321:                              # %._crit_edge.i.i356
	bnez	$a1, .LBB54_323
# %bb.322:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB54_324
.LBB54_323:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_324:
	ld.d	$a0, $sp, 144
	ld.d	$a7, $s0, 40
	st.d	$a0, $sp, 320
.Ltmp1090:
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	st.d	$a0, $sp, 8
	addi.d	$a0, $sp, 376
	addi.d	$a1, $sp, 344
	addi.d	$a2, $sp, 544
	addi.d	$a3, $sp, 568
	addi.d	$a6, $sp, 312
	st.d	$fp, $sp, 0
	ld.d	$a4, $sp, 80                    # 8-byte Folded Reload
	move	$a5, $s3
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEERS7_IS6_SaIS6_EEiiS6_PSt5dequeIS6_SB_ERNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp1091:
# %bb.325:
	ld.d	$a0, $sp, 312
	beq	$a0, $s2, .LBB54_327
# %bb.326:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i360
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_327:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit362
	ld.d	$a0, $sp, 344
	beq	$a0, $s1, .LBB54_329
# %bb.328:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i363
	ld.d	$a1, $sp, 360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_329:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit365
	ld.d	$fp, $s0, 80
	addi.d	$s0, $sp, 128
	ld.d	$a1, $sp, 384
	ld.d	$s1, $sp, 376
	st.d	$s0, $sp, 112
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 656
	move	$a0, $s0
	bltu	$a1, $a2, .LBB54_332
# %bb.330:                              # %.noexc.i.i368
.Ltmp1093:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 656
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1094:
# %bb.331:                              # %.noexc369
	ld.d	$a1, $sp, 656
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB54_332:                             # %._crit_edge.i.i.i366
	beq	$a1, $s8, .LBB54_336
# %bb.333:                              # %._crit_edge.i.i.i366
	bnez	$a1, .LBB54_335
# %bb.334:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB54_336
.LBB54_335:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_336:
	ld.d	$a0, $sp, 112
	ld.d	$s2, $sp, 656
	addi.d	$s1, $sp, 160
	st.d	$s1, $sp, 144
	beq	$a0, $s0, .LBB54_338
# %bb.337:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i370
	ld.d	$a1, $sp, 128
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
	b	.LBB54_339
.LBB54_338:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	addi.d	$a2, $s2, 1
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_339:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	st.d	$s2, $sp, 152
	st.d	$s0, $sp, 112
	st.d	$zero, $sp, 120
	st.b	$zero, $sp, 128
	addi.d	$a0, $sp, 176
.Ltmp1096:
	addi.d	$a1, $sp, 376
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC2ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1097:
# %bb.340:                              # %_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_.exit
.Ltmp1099:
	addi.d	$a1, $sp, 144
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp1100:
# %bb.341:
	addi.d	$a0, $sp, 144
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 112
	beq	$a0, $s0, .LBB54_343
# %bb.342:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i371
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_343:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit373
	ld.d	$a0, $sp, 480
	addi.d	$a1, $sp, 496
	beq	$a0, $a1, .LBB54_345
# %bb.344:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i374
	ld.d	$a1, $sp, 496
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_345:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i375
	ld.d	$a0, $sp, 448
	beqz	$a0, .LBB54_347
# %bb.346:
	ld.d	$a1, $sp, 464
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_347:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
	ld.d	$a0, $sp, 408
	ld.d	$fp, $sp, 416
	beq	$a0, $fp, .LBB54_353
# %bb.348:                              # %.lr.ph.i.i.i377.preheader
	addi.d	$s0, $a0, 16
	b	.LBB54_350
	.p2align	4, , 16
.LBB54_349:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB54_350 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB54_352
.LBB54_350:                             # %.lr.ph.i.i.i377
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB54_349
# %bb.351:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB54_350 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_349
.LBB54_352:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $sp, 408
.LBB54_353:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB54_355
# %bb.354:
	ld.d	$a1, $sp, 424
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_355:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB54_412
# %bb.356:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
	ld.d	$a1, $sp, 392
	b	.LBB54_411
.LBB54_357:
	srli.d	$a2, $a1, 2
.LBB54_358:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_359:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit222
.Ltmp862:
	move	$a1, $fp
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp863:
# %bb.360:
	addi.d	$s1, $fp, 16
.Ltmp864:
	pcalau12i	$a0, %pc_hi20(.L.str.82)
	addi.d	$a1, $a0, %pc_lo12(.L.str.82)
	ori	$a2, $zero, 74
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp865:
# %bb.361:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit224
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB54_483
# %bb.362:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i500
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB54_364
# %bb.363:
	ld.bu	$a0, $s2, 67
	b	.LBB54_366
.LBB54_364:
.Ltmp866:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp867:
# %bb.365:                              # %.noexc505
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp868:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp869:
.LBB54_366:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i502
.Ltmp870:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp871:
# %bb.367:                              # %.noexc507
.Ltmp872:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp873:
# %bb.368:                              # %_ZNSolsEPFRSoS_E.exit226
.Ltmp874:
	pcalau12i	$a0, %pc_hi20(.L.str.44)
	addi.d	$a1, $a0, %pc_lo12(.L.str.44)
	ori	$a2, $zero, 13
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp875:
# %bb.369:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit228
	ld.d	$a1, $sp, 624
	ld.d	$a2, $sp, 632
.Ltmp876:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp877:
# %bb.370:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit230
.Ltmp878:
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.45)
	addi.d	$a1, $a0, %pc_lo12(.L.str.45)
	ori	$a2, $zero, 11
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp879:
# %bb.371:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit232
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB54_483
# %bb.372:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i511
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB54_374
# %bb.373:
	ld.bu	$a0, $s3, 67
	b	.LBB54_376
.LBB54_374:
.Ltmp880:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp881:
# %bb.375:                              # %.noexc516
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp882:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp883:
.LBB54_376:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i513
.Ltmp884:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp885:
# %bb.377:                              # %.noexc518
.Ltmp886:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp887:
# %bb.378:                              # %_ZNSolsEPFRSoS_E.exit234
.Ltmp888:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp889:
# %bb.379:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit236
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	blt	$a3, $s8, .LBB54_382
# %bb.380:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB54_383
# %bb.381:
	addi.d	$a0, $a2, 128
	b	.LBB54_385
.LBB54_382:
	srai.d	$a2, $a1, 2
	b	.LBB54_384
.LBB54_383:
	srli.d	$a2, $a1, 2
.LBB54_384:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_385:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit238
	addi.d	$s2, $sp, 160
	st.d	$s2, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 376
	move	$a0, $s2
	bltu	$a1, $a2, .LBB54_388
# %bb.386:                              # %.noexc.i.i240
.Ltmp890:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 376
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp891:
# %bb.387:                              # %.noexc241
	ld.d	$a1, $sp, 376
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB54_388:                             # %._crit_edge.i.i.i239
	beq	$a1, $s8, .LBB54_392
# %bb.389:                              # %._crit_edge.i.i.i239
	bnez	$a1, .LBB54_391
# %bb.390:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB54_392
.LBB54_391:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_392:
	ld.d	$a2, $sp, 376
	ld.d	$a1, $sp, 144
	st.d	$a2, $sp, 152
.Ltmp893:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp894:
# %bb.393:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit244
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB54_487
# %bb.394:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i522
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB54_396
# %bb.395:
	ld.bu	$a0, $s1, 67
	b	.LBB54_398
.LBB54_396:
.Ltmp895:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp896:
# %bb.397:                              # %.noexc527
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp897:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp898:
.LBB54_398:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i524
.Ltmp899:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp900:
# %bb.399:                              # %.noexc529
.Ltmp901:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp902:
# %bb.400:                              # %_ZNSolsEPFRSoS_E.exit246
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB54_487
# %bb.401:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i533
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB54_403
# %bb.402:
	ld.bu	$a0, $s1, 67
	b	.LBB54_405
.LBB54_403:
.Ltmp903:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp904:
# %bb.404:                              # %.noexc538
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp905:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp906:
.LBB54_405:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i535
.Ltmp907:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp908:
# %bb.406:                              # %.noexc540
.Ltmp909:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp910:
	b	.LBB54_465
.LBB54_407:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_408:
	ld.d	$a0, $sp, 144
	ld.d	$a6, $s0, 40
	st.d	$a0, $sp, 520
	addi.d	$a0, $fp, 64
.Ltmp1081:
	addi.d	$a1, $sp, 544
	addi.d	$a2, $sp, 568
	addi.d	$a5, $sp, 512
	ld.d	$a3, $sp, 88                    # 8-byte Folded Reload
	st.d	$a3, $sp, 0
	ld.d	$a3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 56                    # 8-byte Folded Reload
	move	$a7, $s3
	pcaddu18i	$ra, %call36(_ZN2PP8Variable13set_var_valueERSt6vectorIiSaIiEERS1_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISA_EEiiSA_PSt5dequeISA_SB_ERNS5_18basic_stringstreamIcS8_S9_EERi)
	jirl	$ra, $ra, 0
.Ltmp1082:
# %bb.409:
	ld.d	$a0, $sp, 512
	beq	$a0, $s2, .LBB54_412
# %bb.410:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i346
	ld.d	$a1, $sp, 528
.LBB54_411:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit348
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_412:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit348
	ld.d	$a0, $sp, 544
	beqz	$a0, .LBB54_468
# %bb.413:
	ld.d	$a1, $sp, 560
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_468
.LBB54_414:
	srai.d	$a2, $a1, 2
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	b	.LBB54_416
.LBB54_415:
	srli.d	$a2, $a1, 2
.LBB54_416:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_417:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit270
.Ltmp807:
	move	$a1, $fp
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp808:
# %bb.418:
	addi.d	$s1, $fp, 16
.Ltmp809:
	pcalau12i	$a0, %pc_hi20(.L.str.48)
	addi.d	$a1, $a0, %pc_lo12(.L.str.48)
	ori	$a2, $zero, 74
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp810:
# %bb.419:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit272
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB54_491
# %bb.420:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i544
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB54_422
# %bb.421:
	ld.bu	$a0, $s2, 67
	b	.LBB54_424
.LBB54_422:
.Ltmp811:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp812:
# %bb.423:                              # %.noexc549
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp813:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp814:
.LBB54_424:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i546
.Ltmp815:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp816:
# %bb.425:                              # %.noexc551
.Ltmp817:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp818:
# %bb.426:                              # %_ZNSolsEPFRSoS_E.exit274
.Ltmp819:
	pcalau12i	$a0, %pc_hi20(.L.str.44)
	addi.d	$a1, $a0, %pc_lo12(.L.str.44)
	ori	$a2, $zero, 13
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp820:
# %bb.427:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit276
	ld.d	$a1, $sp, 624
	ld.d	$a2, $sp, 632
.Ltmp821:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp822:
# %bb.428:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit278
.Ltmp823:
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.45)
	addi.d	$a1, $a0, %pc_lo12(.L.str.45)
	ori	$a2, $zero, 11
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp824:
# %bb.429:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit280
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB54_491
# %bb.430:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i555
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB54_432
# %bb.431:
	ld.bu	$a0, $s3, 67
	b	.LBB54_434
.LBB54_432:
.Ltmp825:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp826:
# %bb.433:                              # %.noexc560
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp827:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp828:
.LBB54_434:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i557
.Ltmp829:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp830:
# %bb.435:                              # %.noexc562
.Ltmp831:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp832:
# %bb.436:                              # %_ZNSolsEPFRSoS_E.exit282
.Ltmp833:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp834:
# %bb.437:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit284
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s5
	bltz	$a1, .LBB54_440
# %bb.438:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB54_441
# %bb.439:
	slli.d	$a0, $s5, 7
	add.d	$a0, $a2, $a0
	b	.LBB54_443
.LBB54_440:
	srai.d	$a2, $a1, 2
	b	.LBB54_442
.LBB54_441:
	srli.d	$a2, $a1, 2
.LBB54_442:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB54_443:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit286
	addi.d	$s2, $sp, 160
	st.d	$s2, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 376
	move	$a0, $s2
	bltu	$a1, $a2, .LBB54_446
# %bb.444:                              # %.noexc.i.i288
.Ltmp835:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 376
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp836:
# %bb.445:                              # %.noexc289
	ld.d	$a1, $sp, 376
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB54_446:                             # %._crit_edge.i.i.i287
	beq	$a1, $s8, .LBB54_450
# %bb.447:                              # %._crit_edge.i.i.i287
	bnez	$a1, .LBB54_449
# %bb.448:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB54_450
.LBB54_449:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB54_450:
	ld.d	$a2, $sp, 376
	ld.d	$a1, $sp, 144
	st.d	$a2, $sp, 152
.Ltmp838:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp839:
# %bb.451:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit292
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB54_493
# %bb.452:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i566
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB54_454
# %bb.453:
	ld.bu	$a0, $s1, 67
	b	.LBB54_456
.LBB54_454:
.Ltmp840:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp841:
# %bb.455:                              # %.noexc571
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp842:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp843:
.LBB54_456:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i568
.Ltmp844:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp845:
# %bb.457:                              # %.noexc573
.Ltmp846:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp847:
# %bb.458:                              # %_ZNSolsEPFRSoS_E.exit294
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB54_493
# %bb.459:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i577
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB54_461
# %bb.460:
	ld.bu	$a0, $s1, 67
	b	.LBB54_463
.LBB54_461:
.Ltmp848:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp849:
# %bb.462:                              # %.noexc582
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp850:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp851:
.LBB54_463:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i579
.Ltmp852:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp853:
# %bb.464:                              # %.noexc584
.Ltmp854:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp855:
.LBB54_465:                             # %_ZNSolsEPFRSoS_E.exit248
	ld.d	$a0, $sp, 144
	beq	$a0, $s2, .LBB54_467
# %bb.466:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i249
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_467:                             # %_ZNSolsEPFRSoS_E.exit211
	ori	$a0, $zero, 2
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	st.w	$a0, $a1, 0
.LBB54_468:                             # %.critedge
	ld.d	$a0, $sp, 568
	ld.d	$fp, $sp, 576
	beq	$a0, $fp, .LBB54_474
# %bb.469:                              # %.lr.ph.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB54_471
	.p2align	4, , 16
.LBB54_470:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB54_471 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB54_473
.LBB54_471:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB54_470
# %bb.472:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB54_471 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_470
.LBB54_473:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $sp, 568
.LBB54_474:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	addi.d	$fp, $sp, 608
	beqz	$a0, .LBB54_476
# %bb.475:
	ld.d	$a1, $sp, 584
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_476:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$a0, $sp, 592
	beq	$a0, $fp, .LBB54_478
# %bb.477:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i391
	ld.d	$a1, $sp, 608
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_478:
	ld.d	$a0, $sp, 624
	addi.d	$a1, $sp, 640
	beq	$a0, $a1, .LBB54_480
# %bb.479:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i394
	ld.d	$a1, $sp, 640
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_480:                             # %.thread
	ld.d	$s8, $sp, 664                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 672                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 680                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 688                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 696                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 704                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 712                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 720                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 728                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 736                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 744                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 752
	ret
.LBB54_481:                             # %.invoke
.Ltmp1018:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1019:
# %bb.482:                              # %.cont
.LBB54_483:                             # %.invoke726
.Ltmp946:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp947:
# %bb.484:                              # %.cont727
.LBB54_485:                             # %.invoke737
.Ltmp1075:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1076:
# %bb.486:                              # %.cont738
.LBB54_487:                             # %.invoke728
.Ltmp911:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp912:
# %bb.488:                              # %.cont729
.LBB54_489:
.Ltmp1021:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1022:
# %bb.490:                              # %.noexc438
.LBB54_491:                             # %.invoke730
.Ltmp859:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp860:
# %bb.492:                              # %.cont731
.LBB54_493:                             # %.invoke732
.Ltmp856:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp857:
# %bb.494:                              # %.cont733
.LBB54_495:
.Ltmp837:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_496:
.Ltmp1080:
	b	.LBB54_529
.LBB54_497:
.Ltmp892:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_498:
.Ltmp806:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_499:
.Ltmp1083:
	ld.d	$a2, $sp, 512
	move	$fp, $a0
	beq	$a2, $s2, .LBB54_530
# %bb.500:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i349
	ld.d	$a0, $sp, 528
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_530
.LBB54_501:
.Ltmp987:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_502:
.Ltmp1095:
	move	$fp, $a0
	b	.LBB54_512
.LBB54_503:
.Ltmp1089:
	move	$fp, $a0
	b	.LBB54_515
.LBB54_504:
.Ltmp1086:
	b	.LBB54_529
.LBB54_505:
.Ltmp803:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_506:
.Ltmp1026:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_507:
.Ltmp1101:
	move	$fp, $a0
	addi.d	$a0, $sp, 144
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB54_510
.LBB54_508:
.Ltmp1098:
	ld.d	$a2, $sp, 144
	move	$fp, $a0
	beq	$a2, $s1, .LBB54_510
# %bb.509:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a0, $sp, 160
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_510:                             # %.body
	ld.d	$a0, $sp, 112
	beq	$a0, $s0, .LBB54_512
# %bb.511:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i386
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_512:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit388
	addi.d	$a0, $sp, 376
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB54_530
.LBB54_513:
.Ltmp1092:
	ld.d	$a2, $sp, 312
	move	$fp, $a0
	beq	$a2, $s2, .LBB54_515
# %bb.514:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i380
	ld.d	$a0, $sp, 328
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_515:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit382
	ld.d	$a0, $sp, 344
	beq	$a0, $s1, .LBB54_530
# %bb.516:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i383
	ld.d	$a1, $sp, 360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB54_530
.LBB54_517:
.Ltmp800:
	move	$fp, $a0
	ld.d	$a0, $sp, 624
	addi.d	$a1, $sp, 640
	beq	$a0, $a1, .LBB54_537
	b	.LBB54_539
.LBB54_518:
.Ltmp858:
	b	.LBB54_523
.LBB54_519:
.Ltmp861:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_520:                             # %.loopexit.split-lp
.Ltmp1077:
	b	.LBB54_529
.LBB54_521:
.Ltmp1023:
	ld.d	$a2, $sp, 144
	move	$fp, $a0
	bne	$a2, $s1, .LBB54_533
	b	.LBB54_535
.LBB54_522:
.Ltmp913:
.LBB54_523:
	ld.d	$a2, $sp, 144
	move	$fp, $a0
	bne	$a2, $s2, .LBB54_533
	b	.LBB54_535
.LBB54_524:                             # %.loopexit.loopexit.split-lp
.Ltmp1074:
	b	.LBB54_529
.LBB54_525:
.Ltmp948:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_526:
.Ltmp1020:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_527:
.Ltmp1104:
	move	$fp, $a0
	b	.LBB54_535
.LBB54_528:                             # %.loopexit.loopexit
.Ltmp1029:
.LBB54_529:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit351
	move	$fp, $a0
.LBB54_530:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit351
	ld.d	$a0, $sp, 544
	beqz	$a0, .LBB54_535
# %bb.531:
	ld.d	$a1, $sp, 560
	sub.d	$a1, $a1, $a0
	b	.LBB54_534
.LBB54_532:
.Ltmp1109:
	ld.d	$a2, $sp, 144
	move	$fp, $a0
	beq	$a2, $s3, .LBB54_535
.LBB54_533:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i198
	ld.d	$a0, $sp, 160
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB54_534:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB54_535:
	addi.d	$a0, $sp, 568
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 592
	addi.d	$a1, $sp, 608
	bne	$a0, $a1, .LBB54_538
# %bb.536:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit401
	ld.d	$a0, $sp, 624
	addi.d	$a1, $sp, 640
	bne	$a0, $a1, .LBB54_539
.LBB54_537:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit404
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB54_538:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i399
	ld.d	$a1, $sp, 608
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 624
	addi.d	$a1, $sp, 640
	beq	$a0, $a1, .LBB54_537
.LBB54_539:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i402
	ld.d	$a1, $sp, 640
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end54:
	.size	_ZN2PP3Cmd13set_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end54-_ZN2PP3Cmd13set_variablesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table54:
.Lexception26:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Lfunc_begin26-.Lfunc_begin26  # >> Call Site 1 <<
	.uleb128 .Ltmp798-.Lfunc_begin26        #   Call between .Lfunc_begin26 and .Ltmp798
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp798-.Lfunc_begin26        # >> Call Site 2 <<
	.uleb128 .Ltmp799-.Ltmp798              #   Call between .Ltmp798 and .Ltmp799
	.uleb128 .Ltmp800-.Lfunc_begin26        #     jumps to .Ltmp800
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp799-.Lfunc_begin26        # >> Call Site 3 <<
	.uleb128 .Ltmp949-.Ltmp799              #   Call between .Ltmp799 and .Ltmp949
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp949-.Lfunc_begin26        # >> Call Site 4 <<
	.uleb128 .Ltmp952-.Ltmp949              #   Call between .Ltmp949 and .Ltmp952
	.uleb128 .Ltmp1020-.Lfunc_begin26       #     jumps to .Ltmp1020
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp914-.Lfunc_begin26        # >> Call Site 5 <<
	.uleb128 .Ltmp919-.Ltmp914              #   Call between .Ltmp914 and .Ltmp919
	.uleb128 .Ltmp948-.Lfunc_begin26        #     jumps to .Ltmp948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp953-.Lfunc_begin26        # >> Call Site 6 <<
	.uleb128 .Ltmp964-.Ltmp953              #   Call between .Ltmp953 and .Ltmp964
	.uleb128 .Ltmp1020-.Lfunc_begin26       #     jumps to .Ltmp1020
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp920-.Lfunc_begin26        # >> Call Site 7 <<
	.uleb128 .Ltmp929-.Ltmp920              #   Call between .Ltmp920 and .Ltmp929
	.uleb128 .Ltmp948-.Lfunc_begin26        #     jumps to .Ltmp948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp965-.Lfunc_begin26        # >> Call Site 8 <<
	.uleb128 .Ltmp972-.Ltmp965              #   Call between .Ltmp965 and .Ltmp972
	.uleb128 .Ltmp1020-.Lfunc_begin26       #     jumps to .Ltmp1020
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp930-.Lfunc_begin26        # >> Call Site 9 <<
	.uleb128 .Ltmp937-.Ltmp930              #   Call between .Ltmp930 and .Ltmp937
	.uleb128 .Ltmp948-.Lfunc_begin26        #     jumps to .Ltmp948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp973-.Lfunc_begin26        # >> Call Site 10 <<
	.uleb128 .Ltmp980-.Ltmp973              #   Call between .Ltmp973 and .Ltmp980
	.uleb128 .Ltmp1020-.Lfunc_begin26       #     jumps to .Ltmp1020
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp938-.Lfunc_begin26        # >> Call Site 11 <<
	.uleb128 .Ltmp945-.Ltmp938              #   Call between .Ltmp938 and .Ltmp945
	.uleb128 .Ltmp948-.Lfunc_begin26        #     jumps to .Ltmp948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp801-.Lfunc_begin26        # >> Call Site 12 <<
	.uleb128 .Ltmp802-.Ltmp801              #   Call between .Ltmp801 and .Ltmp802
	.uleb128 .Ltmp803-.Lfunc_begin26        #     jumps to .Ltmp803
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp802-.Lfunc_begin26        # >> Call Site 13 <<
	.uleb128 .Ltmp804-.Ltmp802              #   Call between .Ltmp802 and .Ltmp804
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp804-.Lfunc_begin26        # >> Call Site 14 <<
	.uleb128 .Ltmp805-.Ltmp804              #   Call between .Ltmp804 and .Ltmp805
	.uleb128 .Ltmp806-.Lfunc_begin26        #     jumps to .Ltmp806
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp805-.Lfunc_begin26        # >> Call Site 15 <<
	.uleb128 .Ltmp981-.Ltmp805              #   Call between .Ltmp805 and .Ltmp981
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp981-.Lfunc_begin26        # >> Call Site 16 <<
	.uleb128 .Ltmp984-.Ltmp981              #   Call between .Ltmp981 and .Ltmp984
	.uleb128 .Ltmp1020-.Lfunc_begin26       #     jumps to .Ltmp1020
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp985-.Lfunc_begin26        # >> Call Site 17 <<
	.uleb128 .Ltmp986-.Ltmp985              #   Call between .Ltmp985 and .Ltmp986
	.uleb128 .Ltmp987-.Lfunc_begin26        #     jumps to .Ltmp987
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp986-.Lfunc_begin26        # >> Call Site 18 <<
	.uleb128 .Ltmp988-.Ltmp986              #   Call between .Ltmp986 and .Ltmp988
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp988-.Lfunc_begin26        # >> Call Site 19 <<
	.uleb128 .Ltmp997-.Ltmp988              #   Call between .Ltmp988 and .Ltmp997
	.uleb128 .Ltmp1023-.Lfunc_begin26       #     jumps to .Ltmp1023
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp997-.Lfunc_begin26        # >> Call Site 20 <<
	.uleb128 .Ltmp998-.Ltmp997              #   Call between .Ltmp997 and .Ltmp998
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp998-.Lfunc_begin26        # >> Call Site 21 <<
	.uleb128 .Ltmp1017-.Ltmp998             #   Call between .Ltmp998 and .Ltmp1017
	.uleb128 .Ltmp1020-.Lfunc_begin26       #     jumps to .Ltmp1020
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1102-.Lfunc_begin26       # >> Call Site 22 <<
	.uleb128 .Ltmp1103-.Ltmp1102            #   Call between .Ltmp1102 and .Ltmp1103
	.uleb128 .Ltmp1104-.Lfunc_begin26       #     jumps to .Ltmp1104
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1103-.Lfunc_begin26       # >> Call Site 23 <<
	.uleb128 .Ltmp1105-.Ltmp1103            #   Call between .Ltmp1103 and .Ltmp1105
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1105-.Lfunc_begin26       # >> Call Site 24 <<
	.uleb128 .Ltmp1108-.Ltmp1105            #   Call between .Ltmp1105 and .Ltmp1108
	.uleb128 .Ltmp1109-.Lfunc_begin26       #     jumps to .Ltmp1109
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1024-.Lfunc_begin26       # >> Call Site 25 <<
	.uleb128 .Ltmp1025-.Ltmp1024            #   Call between .Ltmp1024 and .Ltmp1025
	.uleb128 .Ltmp1026-.Lfunc_begin26       #     jumps to .Ltmp1026
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1025-.Lfunc_begin26       # >> Call Site 26 <<
	.uleb128 .Ltmp1027-.Ltmp1025            #   Call between .Ltmp1025 and .Ltmp1027
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1027-.Lfunc_begin26       # >> Call Site 27 <<
	.uleb128 .Ltmp1028-.Ltmp1027            #   Call between .Ltmp1027 and .Ltmp1028
	.uleb128 .Ltmp1029-.Lfunc_begin26       #     jumps to .Ltmp1029
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1030-.Lfunc_begin26       # >> Call Site 28 <<
	.uleb128 .Ltmp1073-.Ltmp1030            #   Call between .Ltmp1030 and .Ltmp1073
	.uleb128 .Ltmp1074-.Lfunc_begin26       #     jumps to .Ltmp1074
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1073-.Lfunc_begin26       # >> Call Site 29 <<
	.uleb128 .Ltmp1078-.Ltmp1073            #   Call between .Ltmp1073 and .Ltmp1078
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1078-.Lfunc_begin26       # >> Call Site 30 <<
	.uleb128 .Ltmp1079-.Ltmp1078            #   Call between .Ltmp1078 and .Ltmp1079
	.uleb128 .Ltmp1080-.Lfunc_begin26       #     jumps to .Ltmp1080
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1084-.Lfunc_begin26       # >> Call Site 31 <<
	.uleb128 .Ltmp1085-.Ltmp1084            #   Call between .Ltmp1084 and .Ltmp1085
	.uleb128 .Ltmp1086-.Lfunc_begin26       #     jumps to .Ltmp1086
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1085-.Lfunc_begin26       # >> Call Site 32 <<
	.uleb128 .Ltmp1087-.Ltmp1085            #   Call between .Ltmp1085 and .Ltmp1087
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1087-.Lfunc_begin26       # >> Call Site 33 <<
	.uleb128 .Ltmp1088-.Ltmp1087            #   Call between .Ltmp1087 and .Ltmp1088
	.uleb128 .Ltmp1089-.Lfunc_begin26       #     jumps to .Ltmp1089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1088-.Lfunc_begin26       # >> Call Site 34 <<
	.uleb128 .Ltmp1090-.Ltmp1088            #   Call between .Ltmp1088 and .Ltmp1090
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1090-.Lfunc_begin26       # >> Call Site 35 <<
	.uleb128 .Ltmp1091-.Ltmp1090            #   Call between .Ltmp1090 and .Ltmp1091
	.uleb128 .Ltmp1092-.Lfunc_begin26       #     jumps to .Ltmp1092
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1091-.Lfunc_begin26       # >> Call Site 36 <<
	.uleb128 .Ltmp1093-.Ltmp1091            #   Call between .Ltmp1091 and .Ltmp1093
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1093-.Lfunc_begin26       # >> Call Site 37 <<
	.uleb128 .Ltmp1094-.Ltmp1093            #   Call between .Ltmp1093 and .Ltmp1094
	.uleb128 .Ltmp1095-.Lfunc_begin26       #     jumps to .Ltmp1095
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1094-.Lfunc_begin26       # >> Call Site 38 <<
	.uleb128 .Ltmp1096-.Ltmp1094            #   Call between .Ltmp1094 and .Ltmp1096
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1096-.Lfunc_begin26       # >> Call Site 39 <<
	.uleb128 .Ltmp1097-.Ltmp1096            #   Call between .Ltmp1096 and .Ltmp1097
	.uleb128 .Ltmp1098-.Lfunc_begin26       #     jumps to .Ltmp1098
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1099-.Lfunc_begin26       # >> Call Site 40 <<
	.uleb128 .Ltmp1100-.Ltmp1099            #   Call between .Ltmp1099 and .Ltmp1100
	.uleb128 .Ltmp1101-.Lfunc_begin26       #     jumps to .Ltmp1101
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1100-.Lfunc_begin26       # >> Call Site 41 <<
	.uleb128 .Ltmp862-.Ltmp1100             #   Call between .Ltmp1100 and .Ltmp862
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp862-.Lfunc_begin26        # >> Call Site 42 <<
	.uleb128 .Ltmp889-.Ltmp862              #   Call between .Ltmp862 and .Ltmp889
	.uleb128 .Ltmp948-.Lfunc_begin26        #     jumps to .Ltmp948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp890-.Lfunc_begin26        # >> Call Site 43 <<
	.uleb128 .Ltmp891-.Ltmp890              #   Call between .Ltmp890 and .Ltmp891
	.uleb128 .Ltmp892-.Lfunc_begin26        #     jumps to .Ltmp892
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp891-.Lfunc_begin26        # >> Call Site 44 <<
	.uleb128 .Ltmp893-.Ltmp891              #   Call between .Ltmp891 and .Ltmp893
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp893-.Lfunc_begin26        # >> Call Site 45 <<
	.uleb128 .Ltmp910-.Ltmp893              #   Call between .Ltmp893 and .Ltmp910
	.uleb128 .Ltmp913-.Lfunc_begin26        #     jumps to .Ltmp913
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp910-.Lfunc_begin26        # >> Call Site 46 <<
	.uleb128 .Ltmp1081-.Ltmp910             #   Call between .Ltmp910 and .Ltmp1081
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1081-.Lfunc_begin26       # >> Call Site 47 <<
	.uleb128 .Ltmp1082-.Ltmp1081            #   Call between .Ltmp1081 and .Ltmp1082
	.uleb128 .Ltmp1083-.Lfunc_begin26       #     jumps to .Ltmp1083
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1082-.Lfunc_begin26       # >> Call Site 48 <<
	.uleb128 .Ltmp807-.Ltmp1082             #   Call between .Ltmp1082 and .Ltmp807
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp807-.Lfunc_begin26        # >> Call Site 49 <<
	.uleb128 .Ltmp834-.Ltmp807              #   Call between .Ltmp807 and .Ltmp834
	.uleb128 .Ltmp861-.Lfunc_begin26        #     jumps to .Ltmp861
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp835-.Lfunc_begin26        # >> Call Site 50 <<
	.uleb128 .Ltmp836-.Ltmp835              #   Call between .Ltmp835 and .Ltmp836
	.uleb128 .Ltmp837-.Lfunc_begin26        #     jumps to .Ltmp837
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp836-.Lfunc_begin26        # >> Call Site 51 <<
	.uleb128 .Ltmp838-.Ltmp836              #   Call between .Ltmp836 and .Ltmp838
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp838-.Lfunc_begin26        # >> Call Site 52 <<
	.uleb128 .Ltmp855-.Ltmp838              #   Call between .Ltmp838 and .Ltmp855
	.uleb128 .Ltmp858-.Lfunc_begin26        #     jumps to .Ltmp858
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp855-.Lfunc_begin26        # >> Call Site 53 <<
	.uleb128 .Ltmp1018-.Ltmp855             #   Call between .Ltmp855 and .Ltmp1018
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1018-.Lfunc_begin26       # >> Call Site 54 <<
	.uleb128 .Ltmp1019-.Ltmp1018            #   Call between .Ltmp1018 and .Ltmp1019
	.uleb128 .Ltmp1020-.Lfunc_begin26       #     jumps to .Ltmp1020
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp946-.Lfunc_begin26        # >> Call Site 55 <<
	.uleb128 .Ltmp947-.Ltmp946              #   Call between .Ltmp946 and .Ltmp947
	.uleb128 .Ltmp948-.Lfunc_begin26        #     jumps to .Ltmp948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1075-.Lfunc_begin26       # >> Call Site 56 <<
	.uleb128 .Ltmp1076-.Ltmp1075            #   Call between .Ltmp1075 and .Ltmp1076
	.uleb128 .Ltmp1077-.Lfunc_begin26       #     jumps to .Ltmp1077
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp911-.Lfunc_begin26        # >> Call Site 57 <<
	.uleb128 .Ltmp912-.Ltmp911              #   Call between .Ltmp911 and .Ltmp912
	.uleb128 .Ltmp913-.Lfunc_begin26        #     jumps to .Ltmp913
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1021-.Lfunc_begin26       # >> Call Site 58 <<
	.uleb128 .Ltmp1022-.Ltmp1021            #   Call between .Ltmp1021 and .Ltmp1022
	.uleb128 .Ltmp1023-.Lfunc_begin26       #     jumps to .Ltmp1023
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp859-.Lfunc_begin26        # >> Call Site 59 <<
	.uleb128 .Ltmp860-.Ltmp859              #   Call between .Ltmp859 and .Ltmp860
	.uleb128 .Ltmp861-.Lfunc_begin26        #     jumps to .Ltmp861
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp856-.Lfunc_begin26        # >> Call Site 60 <<
	.uleb128 .Ltmp857-.Ltmp856              #   Call between .Ltmp856 and .Ltmp857
	.uleb128 .Ltmp858-.Lfunc_begin26        #     jumps to .Ltmp858
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp857-.Lfunc_begin26        # >> Call Site 61 <<
	.uleb128 .Lfunc_end54-.Ltmp857          #   Call between .Ltmp857 and .Lfunc_end54
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end26:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s0, $a0, 8
	ld.d	$a0, $a0, 16
	beq	$s0, $a0, .LBB55_6
# %bb.1:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a2, $a1, 8
	ld.d	$s1, $a1, 0
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 8
	bltu	$a2, $a1, .LBB55_3
# %bb.2:                                # %.noexc.i
	addi.d	$a1, $sp, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 8
	st.d	$a0, $s0, 0
	st.d	$a2, $s0, 16
.LBB55_3:                               # %._crit_edge.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB55_8
# %bb.4:                                # %._crit_edge.i.i
	bnez	$a2, .LBB55_7
# %bb.5:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB55_8
.LBB55_6:
	move	$a0, $fp
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	pcaddu18i	$t8, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jr	$t8
.LBB55_7:
	addi.d	$a2, $a2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB55_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 8
	ld.d	$a1, $fp, 8
	st.d	$a0, $s0, 8
	addi.d	$a0, $a1, 32
	st.d	$a0, $fp, 8
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end55:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_, .Lfunc_end55-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd17evaluate_variableEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_ # -- Begin function _ZN2PP3Cmd17evaluate_variableEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.p2align	5
	.type	_ZN2PP3Cmd17evaluate_variableEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_,@function
_ZN2PP3Cmd17evaluate_variableEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_: # @_ZN2PP3Cmd17evaluate_variableEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception27
# %bb.0:
	addi.d	$sp, $sp, -672
	.cfi_def_cfa_offset 672
	st.d	$ra, $sp, 664                   # 8-byte Folded Spill
	st.d	$fp, $sp, 656                   # 8-byte Folded Spill
	st.d	$s0, $sp, 648                   # 8-byte Folded Spill
	st.d	$s1, $sp, 640                   # 8-byte Folded Spill
	st.d	$s2, $sp, 632                   # 8-byte Folded Spill
	st.d	$s3, $sp, 624                   # 8-byte Folded Spill
	st.d	$s4, $sp, 616                   # 8-byte Folded Spill
	st.d	$s5, $sp, 608                   # 8-byte Folded Spill
	st.d	$s6, $sp, 600                   # 8-byte Folded Spill
	st.d	$s7, $sp, 592                   # 8-byte Folded Spill
	st.d	$s8, $sp, 584                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 80
	beqz	$a0, .LBB56_10
# %bb.1:
	move	$a7, $a3
	move	$s0, $a2
	ld.d	$a0, $fp, 176
	ld.d	$a2, $fp, 184
	ld.d	$a6, $fp, 200
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $a1
	bltz	$a2, .LBB56_4
# %bb.2:
	ori	$a3, $zero, 4
	bgeu	$a2, $a3, .LBB56_5
# %bb.3:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
	slli.d	$a2, $a1, 7
	add.d	$a2, $a0, $a2
	ld.w	$a3, $a2, 32
	ori	$a2, $zero, 13
	beq	$a3, $a2, .LBB56_9
	b	.LBB56_10
.LBB56_4:
	srai.d	$a3, $a2, 2
	b	.LBB56_6
.LBB56_5:
	srli.d	$a3, $a2, 2
.LBB56_6:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	slli.d	$t0, $a3, 3
	ldx.d	$t0, $a6, $t0
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $t0, $a3
	ld.w	$a3, $a3, 32
	ori	$t0, $zero, 13
	bne	$a3, $t0, .LBB56_10
# %bb.7:
	bltz	$a2, .LBB56_11
# %bb.8:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB56_12
.LBB56_9:
	slli.d	$a2, $a1, 7
	add.d	$a0, $a0, $a2
	b	.LBB56_14
.LBB56_10:
	move	$a0, $zero
	b	.LBB56_133
.LBB56_11:
	srai.d	$a0, $a2, 2
	b	.LBB56_13
.LBB56_12:
	srli.d	$a0, $a2, 2
.LBB56_13:
	slli.d	$a3, $a0, 3
	ldx.d	$a3, $a6, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a3, $a0
.LBB56_14:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit141
	st.d	$a4, $sp, 88                    # 8-byte Folded Spill
	st.d	$a7, $sp, 72                    # 8-byte Folded Spill
	st.d	$a1, $sp, 80                    # 8-byte Folded Spill
	st.d	$a5, $sp, 96                    # 8-byte Folded Spill
	addi.d	$s5, $sp, 504
	st.d	$s5, $sp, 488
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 176
	move	$a0, $s5
	bltu	$a1, $a2, .LBB56_16
# %bb.15:                               # %.noexc.i.i
	addi.d	$a0, $sp, 488
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 488
	st.d	$a1, $sp, 504
.LBB56_16:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	st.d	$a2, $sp, 104                   # 8-byte Folded Spill
	beq	$a1, $a2, .LBB56_20
# %bb.17:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB56_19
# %bb.18:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB56_20
.LBB56_19:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_20:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	st.d	$s0, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a0, $fp, 80
	ld.d	$s0, $sp, 176
	ld.d	$s7, $a0, 16
	st.d	$s0, $sp, 496
	beqz	$s7, .LBB56_77
# %bb.21:                               # %.lr.ph.i.i.i
	addi.d	$a1, $fp, 160
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	addi.d	$s3, $a0, 8
	ld.d	$s4, $sp, 488
	lu12i.w	$s6, -524288
	lu12i.w	$a0, 524287
	ori	$s2, $a0, 4095
	ori	$s8, $zero, 16
	ori	$s1, $zero, 24
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	b	.LBB56_24
	.p2align	4, , 16
.LBB56_22:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB56_24 Depth=1
	sub.d	$a0, $s5, $s0
	slt	$a1, $s6, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$a0, $a0, $a1
.LBB56_23:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB56_24 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s7, $a0
	masknez	$a2, $s8, $a0
	maskeqz	$a3, $s1, $a0
	or	$a2, $a3, $a2
	ldx.d	$s7, $s7, $a2
	maskeqz	$a0, $s3, $a0
	or	$s3, $a0, $a1
	beqz	$s7, .LBB56_26
.LBB56_24:                              # =>This Inner Loop Header: Depth=1
	ld.d	$s5, $s7, 40
	sltu	$a0, $s0, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s0, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB56_22
# %bb.25:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB56_24 Depth=1
	ld.d	$a0, $s7, 32
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB56_23
	b	.LBB56_22
.LBB56_26:                              # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i
	addi.d	$s5, $sp, 504
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	beq	$s3, $a0, .LBB56_77
# %bb.27:
	ld.d	$s1, $s3, 40
	sltu	$a0, $s1, $s0
	masknez	$a1, $s0, $a0
	maskeqz	$a0, $s1, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB56_29
# %bb.28:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s3, 32
	move	$a0, $s4
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB56_30
.LBB56_29:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $s0, $s1
	slt	$a1, $s6, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$a0, $a0, $a1
.LBB56_30:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB56_77
# %bb.31:                               # %.preheader420
	ld.d	$s1, $sp, 72                    # 8-byte Folded Reload
	ld.w	$a1, $s1, 0
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	blez	$a1, .LBB56_181
# %bb.32:                               # %.lr.ph
	move	$s0, $zero
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	addi.w	$a0, $a0, 1
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	ori	$a2, $zero, 1
	ori	$s8, $zero, 4
	ori	$s6, $zero, 2
.LBB56_33:                              # %.outer491
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB56_36 Depth 2
	ld.d	$a4, $fp, 176
	ld.d	$a0, $fp, 184
	ld.d	$a3, $fp, 200
	sub.d	$a0, $a4, $a0
	srai.d	$a0, $a0, 7
	addi.d	$s4, $s0, 1
	ld.d	$a5, $sp, 56                    # 8-byte Folded Reload
	add.d	$a6, $a5, $s0
	slli.d	$s2, $a6, 7
	add.d	$a5, $a5, $a0
	add.d	$a0, $a6, $a0
	slli.d	$a0, $a0, 7
	addi.d	$a6, $a0, 32
	move	$a0, $s4
	b	.LBB56_36
	.p2align	4, , 16
.LBB56_34:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit158.thread
                                        #   in Loop: Header=BB56_36 Depth=2
	add.d	$a0, $a4, $s2
	ld.wu	$a7, $a0, 32
	bstrpick.d	$a7, $a7, 31, 1
	slli.w	$a7, $a7, 1
	bne	$a7, $s6, .LBB56_42
.LBB56_35:                              #   in Loop: Header=BB56_36 Depth=2
	addi.d	$a0, $s0, 1
	addi.d	$s4, $s4, 1
	addi.d	$s2, $s2, 128
	addi.d	$a6, $a6, 128
	bge	$s0, $a1, .LBB56_134
.LBB56_36:                              #   Parent Loop BB56_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$s0, $a0
	add.d	$a0, $a5, $a0
	addi.d	$a0, $a0, -1
	bltz	$a0, .LBB56_39
# %bb.37:                               #   in Loop: Header=BB56_36 Depth=2
	bltu	$a0, $s8, .LBB56_34
# %bb.38:                               #   in Loop: Header=BB56_36 Depth=2
	srli.d	$a7, $a0, 2
	b	.LBB56_40
	.p2align	4, , 16
.LBB56_39:                              #   in Loop: Header=BB56_36 Depth=2
	srai.d	$a7, $a0, 2
.LBB56_40:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit158
                                        #   in Loop: Header=BB56_36 Depth=2
	slli.d	$t0, $a7, 3
	ldx.d	$t0, $a3, $t0
	slli.d	$a7, $a7, 9
	sub.d	$a7, $t0, $a7
	ldx.wu	$a7, $a7, $a6
	bstrpick.d	$a7, $a7, 31, 1
	slli.w	$a7, $a7, 1
	beq	$a7, $s6, .LBB56_35
# %bb.41:                               #   in Loop: Header=BB56_33 Depth=1
	slli.d	$a1, $a0, 1
	bstrins.d	$a1, $zero, 2, 0
	ldx.d	$a1, $a3, $a1
	andi	$a0, $a0, 3
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB56_42:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit160
                                        #   in Loop: Header=BB56_33 Depth=1
.Ltmp1110:
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1111:
# %bb.43:                               #   in Loop: Header=BB56_33 Depth=1
.Ltmp1112:
	pcalau12i	$a0, %pc_hi20(.L.str.85)
	addi.d	$a1, $a0, %pc_lo12(.L.str.85)
	ori	$a2, $zero, 37
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1113:
# %bb.44:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit162
                                        #   in Loop: Header=BB56_33 Depth=1
.Ltmp1114:
	addi.w	$a1, $s4, 0
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1115:
# %bb.45:                               #   in Loop: Header=BB56_33 Depth=1
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s7, $a0, 240
	beqz	$s7, .LBB56_298
# %bb.46:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i339
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.bu	$a0, $s7, 56
	beqz	$a0, .LBB56_48
# %bb.47:                               #   in Loop: Header=BB56_33 Depth=1
	ld.bu	$a0, $s7, 67
	b	.LBB56_50
.LBB56_48:                              #   in Loop: Header=BB56_33 Depth=1
.Ltmp1116:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1117:
# %bb.49:                               # %.noexc344
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.d	$a0, $s7, 0
	ld.d	$a2, $a0, 48
.Ltmp1118:
	ori	$a1, $zero, 10
	move	$a0, $s7
	jirl	$ra, $a2, 0
.Ltmp1119:
.LBB56_50:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i341
                                        #   in Loop: Header=BB56_33 Depth=1
.Ltmp1120:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1121:
# %bb.51:                               # %.noexc346
                                        #   in Loop: Header=BB56_33 Depth=1
.Ltmp1122:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1123:
# %bb.52:                               # %_ZNSolsEPFRSoS_E.exit164
                                        #   in Loop: Header=BB56_33 Depth=1
.Ltmp1124:
	pcalau12i	$a0, %pc_hi20(.L.str.86)
	addi.d	$a1, $a0, %pc_lo12(.L.str.86)
	ori	$a2, $zero, 17
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1125:
# %bb.53:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit166
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	add.d	$a3, $a3, $a1
	add.d	$a3, $a3, $s0
	addi.d	$a3, $a3, -1
	bltz	$a3, .LBB56_56
# %bb.54:                               #   in Loop: Header=BB56_33 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB56_57
# %bb.55:                               #   in Loop: Header=BB56_33 Depth=1
	add.d	$a0, $a2, $s2
	b	.LBB56_59
.LBB56_56:                              #   in Loop: Header=BB56_33 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB56_58
.LBB56_57:                              #   in Loop: Header=BB56_33 Depth=1
	srli.d	$a2, $a3, 2
.LBB56_58:                              #   in Loop: Header=BB56_33 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	add.d	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, -128
.LBB56_59:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit168
                                        #   in Loop: Header=BB56_33 Depth=1
	addi.d	$s2, $sp, 192
	st.d	$s2, $sp, 176
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	st.d	$a1, $sp, 552
	move	$a0, $s2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB56_62
# %bb.60:                               # %.noexc.i.i170
                                        #   in Loop: Header=BB56_33 Depth=1
.Ltmp1127:
	addi.d	$a0, $sp, 176
	addi.d	$a1, $sp, 552
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1128:
# %bb.61:                               # %.noexc171
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.d	$a1, $sp, 552
	st.d	$a0, $sp, 176
	st.d	$a1, $sp, 192
.LBB56_62:                              # %._crit_edge.i.i.i169
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.d	$a2, $sp, 104                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB56_66
# %bb.63:                               # %._crit_edge.i.i.i169
                                        #   in Loop: Header=BB56_33 Depth=1
	bnez	$a1, .LBB56_65
# %bb.64:                               #   in Loop: Header=BB56_33 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB56_66
.LBB56_65:                              #   in Loop: Header=BB56_33 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_66:                              #   in Loop: Header=BB56_33 Depth=1
	ld.d	$a2, $sp, 552
	ld.d	$a1, $sp, 176
	st.d	$a2, $sp, 184
.Ltmp1130:
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1131:
# %bb.67:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit174
                                        #   in Loop: Header=BB56_33 Depth=1
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s7, $a0, 240
	beqz	$s7, .LBB56_296
# %bb.68:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i350
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.bu	$a0, $s7, 56
	beqz	$a0, .LBB56_70
# %bb.69:                               #   in Loop: Header=BB56_33 Depth=1
	ld.bu	$a0, $s7, 67
	b	.LBB56_72
.LBB56_70:                              #   in Loop: Header=BB56_33 Depth=1
.Ltmp1132:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1133:
# %bb.71:                               # %.noexc355
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.d	$a0, $s7, 0
	ld.d	$a2, $a0, 48
.Ltmp1134:
	ori	$a1, $zero, 10
	move	$a0, $s7
	jirl	$ra, $a2, 0
.Ltmp1135:
.LBB56_72:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i352
                                        #   in Loop: Header=BB56_33 Depth=1
.Ltmp1136:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1137:
# %bb.73:                               # %.noexc357
                                        #   in Loop: Header=BB56_33 Depth=1
.Ltmp1138:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1139:
# %bb.74:                               # %_ZNSolsEPFRSoS_E.exit176
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.d	$a0, $sp, 176
	beq	$a0, $s2, .LBB56_76
# %bb.75:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i177
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_76:                              # %.thread
                                        #   in Loop: Header=BB56_33 Depth=1
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	st.w	$s6, $a0, 0
	ld.w	$a1, $s1, 0
	move	$a2, $zero
	blt	$s0, $a1, .LBB56_33
	b	.LBB56_130
.LBB56_77:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit.thread
	ld.d	$a4, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a4, $a1
	srai.d	$a1, $a1, 7
	ld.d	$a5, $sp, 80                    # 8-byte Folded Reload
	add.d	$a1, $a1, $a5
	bltz	$a1, .LBB56_80
# %bb.78:
	ori	$a3, $zero, 3
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	bltu	$a3, $a1, .LBB56_81
# %bb.79:
	slli.d	$a0, $a5, 7
	add.d	$a0, $a4, $a0
	b	.LBB56_83
.LBB56_80:
	srai.d	$a4, $a1, 2
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	b	.LBB56_82
.LBB56_81:
	srli.d	$a4, $a1, 2
.LBB56_82:
	slli.d	$a3, $a4, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a3, $a4, 2
	sub.d	$a1, $a1, $a3
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB56_83:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit143
.Ltmp1234:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1235:
# %bb.84:
	addi.d	$s1, $s0, 16
.Ltmp1236:
	pcalau12i	$a0, %pc_hi20(.L.str.83)
	addi.d	$a1, $a0, %pc_lo12(.L.str.83)
	ori	$a2, $zero, 46
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1237:
# %bb.85:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB56_292
# %bb.86:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB56_88
# %bb.87:
	ld.bu	$a0, $s2, 67
	b	.LBB56_90
.LBB56_88:
.Ltmp1238:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1239:
# %bb.89:                               # %.noexc301
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp1240:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp1241:
.LBB56_90:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp1242:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1243:
# %bb.91:                               # %.noexc303
.Ltmp1244:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1245:
# %bb.92:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp1246:
	pcalau12i	$a0, %pc_hi20(.L.str.78)
	addi.d	$a1, $a0, %pc_lo12(.L.str.78)
	ori	$a2, $zero, 21
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1247:
# %bb.93:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit144
	ld.d	$a1, $sp, 488
	ld.d	$a2, $sp, 496
.Ltmp1248:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1249:
# %bb.94:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB56_292
# %bb.95:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i306
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB56_97
# %bb.96:
	ld.bu	$a0, $s3, 67
	b	.LBB56_99
.LBB56_97:
.Ltmp1250:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1251:
# %bb.98:                               # %.noexc311
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1252:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1253:
.LBB56_99:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i308
.Ltmp1254:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1255:
# %bb.100:                              # %.noexc313
.Ltmp1256:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1257:
# %bb.101:                              # %_ZNSolsEPFRSoS_E.exit145
.Ltmp1258:
	pcalau12i	$a0, %pc_hi20(.L.str.84)
	addi.d	$a1, $a0, %pc_lo12(.L.str.84)
	ori	$a2, $zero, 49
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1259:
# %bb.102:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit146
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB56_292
# %bb.103:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i317
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB56_105
# %bb.104:
	ld.bu	$a0, $s2, 67
	b	.LBB56_107
.LBB56_105:
.Ltmp1260:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1261:
# %bb.106:                              # %.noexc322
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp1262:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp1263:
.LBB56_107:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i319
.Ltmp1264:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1265:
# %bb.108:                              # %.noexc324
.Ltmp1266:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1267:
# %bb.109:                              # %_ZNSolsEPFRSoS_E.exit147
	ld.d	$a0, $fp, 80
	ld.d	$s2, $a0, 24
	addi.d	$a0, $a0, 8
	beq	$s2, $a0, .LBB56_129
# %bb.110:                              # %.lr.ph471
	addi.d	$s0, $sp, 192
	ori	$s6, $zero, 16
	b	.LBB56_112
	.p2align	4, , 16
.LBB56_111:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB56_112 Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 80
	addi.d	$a1, $a1, 8
	move	$s2, $a0
	beq	$a0, $a1, .LBB56_129
.LBB56_112:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s2, 72
	ld.d	$s3, $s2, 64
	st.d	$s0, $sp, 176
	st.d	$a1, $sp, 552
	move	$a0, $s0
	bltu	$a1, $s6, .LBB56_115
# %bb.113:                              # %.noexc.i.i149
                                        #   in Loop: Header=BB56_112 Depth=1
.Ltmp1268:
	addi.d	$a0, $sp, 176
	addi.d	$a1, $sp, 552
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1269:
# %bb.114:                              # %.noexc
                                        #   in Loop: Header=BB56_112 Depth=1
	ld.d	$a1, $sp, 552
	st.d	$a0, $sp, 176
	st.d	$a1, $sp, 192
.LBB56_115:                             # %._crit_edge.i.i.i148
                                        #   in Loop: Header=BB56_112 Depth=1
	ld.d	$a2, $sp, 104                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB56_119
# %bb.116:                              # %._crit_edge.i.i.i148
                                        #   in Loop: Header=BB56_112 Depth=1
	bnez	$a1, .LBB56_118
# %bb.117:                              #   in Loop: Header=BB56_112 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB56_119
	.p2align	4, , 16
.LBB56_118:                             #   in Loop: Header=BB56_112 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_119:                             #   in Loop: Header=BB56_112 Depth=1
	ld.d	$a2, $sp, 552
	ld.d	$a1, $sp, 176
	st.d	$a2, $sp, 184
.Ltmp1271:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1272:
# %bb.120:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit151
                                        #   in Loop: Header=BB56_112 Depth=1
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB56_290
# %bb.121:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i328
                                        #   in Loop: Header=BB56_112 Depth=1
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB56_123
# %bb.122:                              #   in Loop: Header=BB56_112 Depth=1
	ld.bu	$a0, $s4, 67
	b	.LBB56_125
	.p2align	4, , 16
.LBB56_123:                             #   in Loop: Header=BB56_112 Depth=1
.Ltmp1273:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1274:
# %bb.124:                              # %.noexc333
                                        #   in Loop: Header=BB56_112 Depth=1
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp1275:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp1276:
.LBB56_125:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i330
                                        #   in Loop: Header=BB56_112 Depth=1
.Ltmp1277:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1278:
# %bb.126:                              # %.noexc335
                                        #   in Loop: Header=BB56_112 Depth=1
.Ltmp1279:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1280:
# %bb.127:                              # %_ZNSolsEPFRSoS_E.exit153
                                        #   in Loop: Header=BB56_112 Depth=1
	ld.d	$a0, $sp, 176
	beq	$a0, $s0, .LBB56_111
# %bb.128:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB56_112 Depth=1
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB56_111
.LBB56_129:                             # %._crit_edge472
	ori	$a0, $zero, 2
	ld.d	$a1, $sp, 96                    # 8-byte Folded Reload
	st.w	$a0, $a1, 0
.LBB56_130:                             # %._crit_edge.thread
	ld.d	$a0, $sp, 488
	beq	$a0, $s5, .LBB56_132
# %bb.131:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i293
	ld.d	$a1, $sp, 504
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_132:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit295
	ori	$a0, $zero, 1
.LBB56_133:
	ld.d	$s8, $sp, 584                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 592                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 600                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 608                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 616                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 624                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 632                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 640                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 648                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 656                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 664                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 672
	ret
.LBB56_134:                             # %._crit_edge
	andi	$a0, $a2, 1
	beqz	$a0, .LBB56_130
# %bb.135:                              # %.preheader
	blez	$a1, .LBB56_181
# %bb.136:                              # %.lr.ph461
	move	$s0, $zero
	ori	$a2, $zero, 1
	ori	$s6, $zero, 4
	ori	$s7, $zero, 2
	pcalau12i	$a0, %pc_hi20(.L.str.87)
	addi.d	$a0, $a0, %pc_lo12(.L.str.87)
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
.LBB56_137:                             # %.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB56_140 Depth 2
	ld.d	$a4, $fp, 176
	ld.d	$a0, $fp, 184
	ld.d	$a3, $fp, 200
	sub.d	$a0, $a4, $a0
	srai.d	$a0, $a0, 7
	addi.d	$s4, $s0, 1
	ld.d	$a5, $sp, 56                    # 8-byte Folded Reload
	add.d	$a6, $a5, $s0
	slli.d	$s2, $a6, 7
	add.d	$a5, $a5, $a0
	add.d	$a0, $a6, $a0
	slli.d	$a0, $a0, 7
	addi.d	$a6, $a0, 32
	move	$a0, $s4
	b	.LBB56_140
.LBB56_138:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit184.thread
                                        #   in Loop: Header=BB56_140 Depth=2
	add.d	$a0, $a4, $s2
	ld.w	$a7, $a0, 32
	bne	$a7, $s7, .LBB56_146
.LBB56_139:                             #   in Loop: Header=BB56_140 Depth=2
	addi.d	$a0, $s0, 1
	addi.d	$s4, $s4, 1
	addi.d	$s2, $s2, 128
	addi.d	$a6, $a6, 128
	bge	$s0, $a1, .LBB56_195
.LBB56_140:                             #   Parent Loop BB56_137 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$s0, $a0
	add.d	$a0, $a5, $a0
	addi.d	$a0, $a0, -1
	bltz	$a0, .LBB56_143
# %bb.141:                              #   in Loop: Header=BB56_140 Depth=2
	bltu	$a0, $s6, .LBB56_138
# %bb.142:                              #   in Loop: Header=BB56_140 Depth=2
	srli.d	$a7, $a0, 2
	b	.LBB56_144
.LBB56_143:                             #   in Loop: Header=BB56_140 Depth=2
	srai.d	$a7, $a0, 2
.LBB56_144:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit184
                                        #   in Loop: Header=BB56_140 Depth=2
	slli.d	$t0, $a7, 3
	ldx.d	$t0, $a3, $t0
	slli.d	$a7, $a7, 9
	sub.d	$a7, $t0, $a7
	ldx.w	$a7, $a7, $a6
	beq	$a7, $s7, .LBB56_139
# %bb.145:                              #   in Loop: Header=BB56_137 Depth=1
	slli.d	$a1, $a0, 1
	bstrins.d	$a1, $zero, 2, 0
	ldx.d	$a1, $a3, $a1
	andi	$a0, $a0, 3
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB56_146:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit186
                                        #   in Loop: Header=BB56_137 Depth=1
.Ltmp1147:
	ld.d	$a1, $sp, 88                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 96                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1148:
# %bb.147:                              #   in Loop: Header=BB56_137 Depth=1
.Ltmp1149:
	ori	$a2, $zero, 39
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1150:
# %bb.148:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit188
                                        #   in Loop: Header=BB56_137 Depth=1
.Ltmp1151:
	addi.w	$a1, $s4, 0
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1152:
# %bb.149:                              #   in Loop: Header=BB56_137 Depth=1
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s8, $a0, 240
	beqz	$s8, .LBB56_302
# %bb.150:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i361
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.bu	$a0, $s8, 56
	beqz	$a0, .LBB56_152
# %bb.151:                              #   in Loop: Header=BB56_137 Depth=1
	ld.bu	$a0, $s8, 67
	b	.LBB56_154
.LBB56_152:                             #   in Loop: Header=BB56_137 Depth=1
.Ltmp1153:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1154:
# %bb.153:                              # %.noexc366
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.d	$a0, $s8, 0
	ld.d	$a2, $a0, 48
.Ltmp1155:
	ori	$a1, $zero, 10
	move	$a0, $s8
	jirl	$ra, $a2, 0
.Ltmp1156:
.LBB56_154:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i363
                                        #   in Loop: Header=BB56_137 Depth=1
.Ltmp1157:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1158:
# %bb.155:                              # %.noexc368
                                        #   in Loop: Header=BB56_137 Depth=1
.Ltmp1159:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1160:
# %bb.156:                              # %_ZNSolsEPFRSoS_E.exit190
                                        #   in Loop: Header=BB56_137 Depth=1
.Ltmp1161:
	pcalau12i	$a0, %pc_hi20(.L.str.86)
	addi.d	$a1, $a0, %pc_lo12(.L.str.86)
	ori	$a2, $zero, 17
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1162:
# %bb.157:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit192
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	add.d	$a3, $a3, $a1
	add.d	$a3, $a3, $s0
	addi.d	$a3, $a3, -1
	bltz	$a3, .LBB56_160
# %bb.158:                              #   in Loop: Header=BB56_137 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB56_161
# %bb.159:                              #   in Loop: Header=BB56_137 Depth=1
	add.d	$a0, $a2, $s2
	b	.LBB56_163
.LBB56_160:                             #   in Loop: Header=BB56_137 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB56_162
.LBB56_161:                             #   in Loop: Header=BB56_137 Depth=1
	srli.d	$a2, $a3, 2
.LBB56_162:                             #   in Loop: Header=BB56_137 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	add.d	$a1, $a2, $a1
	add.d	$a1, $a1, $s0
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, -128
.LBB56_163:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit194
                                        #   in Loop: Header=BB56_137 Depth=1
	addi.d	$s2, $sp, 192
	st.d	$s2, $sp, 176
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	st.d	$a1, $sp, 552
	move	$a0, $s2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB56_166
# %bb.164:                              # %.noexc.i.i196
                                        #   in Loop: Header=BB56_137 Depth=1
.Ltmp1164:
	addi.d	$a0, $sp, 176
	addi.d	$a1, $sp, 552
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1165:
# %bb.165:                              # %.noexc197
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.d	$a1, $sp, 552
	st.d	$a0, $sp, 176
	st.d	$a1, $sp, 192
.LBB56_166:                             # %._crit_edge.i.i.i195
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.d	$a2, $sp, 104                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB56_170
# %bb.167:                              # %._crit_edge.i.i.i195
                                        #   in Loop: Header=BB56_137 Depth=1
	bnez	$a1, .LBB56_169
# %bb.168:                              #   in Loop: Header=BB56_137 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB56_170
.LBB56_169:                             #   in Loop: Header=BB56_137 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_170:                             #   in Loop: Header=BB56_137 Depth=1
	ld.d	$a2, $sp, 552
	ld.d	$a1, $sp, 176
	st.d	$a2, $sp, 184
.Ltmp1167:
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1168:
# %bb.171:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit200
                                        #   in Loop: Header=BB56_137 Depth=1
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s8, $a0, 240
	beqz	$s8, .LBB56_300
# %bb.172:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i372
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.bu	$a0, $s8, 56
	beqz	$a0, .LBB56_174
# %bb.173:                              #   in Loop: Header=BB56_137 Depth=1
	ld.bu	$a0, $s8, 67
	b	.LBB56_176
.LBB56_174:                             #   in Loop: Header=BB56_137 Depth=1
.Ltmp1169:
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1170:
# %bb.175:                              # %.noexc377
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.d	$a0, $s8, 0
	ld.d	$a2, $a0, 48
.Ltmp1171:
	ori	$a1, $zero, 10
	move	$a0, $s8
	jirl	$ra, $a2, 0
.Ltmp1172:
.LBB56_176:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i374
                                        #   in Loop: Header=BB56_137 Depth=1
.Ltmp1173:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1174:
# %bb.177:                              # %.noexc379
                                        #   in Loop: Header=BB56_137 Depth=1
.Ltmp1175:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1176:
# %bb.178:                              # %_ZNSolsEPFRSoS_E.exit202
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.d	$a0, $sp, 176
	beq	$a0, $s2, .LBB56_180
# %bb.179:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i203
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_180:                             # %.thread484
                                        #   in Loop: Header=BB56_137 Depth=1
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	st.w	$s7, $a0, 0
	ld.w	$a1, $s1, 0
	move	$a2, $zero
	blt	$s0, $a1, .LBB56_137
	b	.LBB56_130
.LBB56_181:                             # %.critedge.thread
	st.d	$zero, $sp, 480
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 464
.LBB56_182:                             # %._crit_edge467
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.w	$a2, $a0, 0
	ld.d	$s2, $sp, 80                    # 8-byte Folded Reload
	add.w	$a0, $a1, $s2
	bge	$a0, $a2, .LBB56_190
# %bb.183:
	addi.w	$s4, $a0, 1
	ld.d	$s0, $sp, 32                    # 8-byte Folded Reload
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5dequeIN2PP4WordESaIS1_EE4sizeEv)
	jirl	$ra, $ra, 0
	addi.w	$a0, $a0, 0
	bge	$s4, $a0, .LBB56_190
# %bb.184:
	move	$a0, $s0
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
.Ltmp1189:
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1190:
# %bb.185:
.Ltmp1192:
	pcalau12i	$a0, %pc_hi20(.L.str.75)
	addi.d	$a1, $a0, %pc_lo12(.L.str.75)
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1193:
# %bb.186:
.Ltmp1194:
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.76)
	addi.d	$a1, $a0, %pc_lo12(.L.str.76)
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
	move	$a1, $a0
.Ltmp1195:
# %bb.187:
	ld.d	$a0, $sp, 176
	masknez	$s0, $s4, $a1
	addi.d	$a2, $sp, 192
	ld.d	$a3, $sp, 104                   # 8-byte Folded Reload
	maskeqz	$s1, $a3, $a1
	beq	$a0, $a2, .LBB56_189
# %bb.188:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i217
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_189:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit219
	or	$s7, $s1, $s0
	ld.d	$s1, $sp, 72                    # 8-byte Folded Reload
	b	.LBB56_191
.LBB56_190:
	move	$s7, $zero
.LBB56_191:
	ld.d	$a2, $fp, 176
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 200
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s2
	bltz	$a0, .LBB56_194
# %bb.192:
	ori	$a3, $zero, 3
	bltu	$a3, $a0, .LBB56_215
# %bb.193:
	slli.d	$a0, $s2, 7
	add.d	$a0, $a2, $a0
	ld.w	$a1, $a0, 80
	st.d	$a1, $sp, 56                    # 8-byte Folded Spill
	ld.w	$s8, $a0, 84
	b	.LBB56_217
.LBB56_194:
	srai.d	$a2, $a0, 2
	b	.LBB56_216
.LBB56_195:                             # %._crit_edge462
	andi	$a0, $a2, 1
	beqz	$a0, .LBB56_130
# %bb.196:                              # %.critedge
	st.d	$zero, $sp, 480
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 464
	blez	$a1, .LBB56_182
# %bb.197:                              # %.lr.ph466
	move	$s0, $zero
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	slli.d	$s2, $a0, 7
	addi.w	$a0, $zero, -4
	lu52i.d	$a0, $a0, 2047
	st.d	$a0, $sp, 40                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 104                   # 8-byte Folded Reload
	lu52i.d	$a0, $a0, 511
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	b	.LBB56_200
.LBB56_198:                             #   in Loop: Header=BB56_200 Depth=1
	st.w	$a0, $a1, 0
	addi.d	$a0, $a1, 4
	st.d	$a0, $sp, 472
.LBB56_199:                             # %_ZNSt6vectorIiSaIiEE9push_backERKi.exit
                                        #   in Loop: Header=BB56_200 Depth=1
	ld.d	$s1, $sp, 72                    # 8-byte Folded Reload
	ld.w	$a1, $s1, 0
	addi.d	$s0, $s0, 1
	addi.d	$s2, $s2, 128
	bge	$s0, $a1, .LBB56_182
.LBB56_200:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	add.d	$a3, $a3, $s0
	add.d	$a1, $a3, $a1
	bltz	$a1, .LBB56_203
# %bb.201:                              #   in Loop: Header=BB56_200 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB56_204
# %bb.202:                              #   in Loop: Header=BB56_200 Depth=1
	add.d	$a0, $a2, $s2
	b	.LBB56_206
.LBB56_203:                             #   in Loop: Header=BB56_200 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB56_205
.LBB56_204:                             #   in Loop: Header=BB56_200 Depth=1
	srli.d	$a2, $a1, 2
.LBB56_205:                             #   in Loop: Header=BB56_200 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB56_206:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit210
                                        #   in Loop: Header=BB56_200 Depth=1
.Ltmp1184:
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intEv)
	jirl	$ra, $ra, 0
.Ltmp1185:
# %bb.207:                              #   in Loop: Header=BB56_200 Depth=1
	ld.d	$a1, $sp, 472
	ld.d	$a2, $sp, 480
	bne	$a1, $a2, .LBB56_198
# %bb.208:                              #   in Loop: Header=BB56_200 Depth=1
	move	$s8, $a0
	ld.d	$s6, $sp, 464
	sub.d	$s4, $a1, $s6
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	beq	$s4, $a0, .LBB56_294
# %bb.209:                              # %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit.i.i
                                        #   in Loop: Header=BB56_200 Depth=1
	srai.d	$a0, $s4, 2
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	sltu	$a1, $a0, $a2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $a2, $a1
	or	$s1, $a0, $a1
	slli.d	$a0, $s1, 2
.Ltmp1186:
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1187:
# %bb.210:                              # %.noexc213
                                        #   in Loop: Header=BB56_200 Depth=1
	move	$s7, $a0
	stx.w	$s8, $a0, $s4
	blez	$s4, .LBB56_212
# %bb.211:                              #   in Loop: Header=BB56_200 Depth=1
	move	$a0, $s7
	move	$a1, $s6
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_212:                             # %_ZNSt6vectorIiSaIiEE11_S_relocateEPiS2_S2_RS0_.exit.i.i
                                        #   in Loop: Header=BB56_200 Depth=1
	beqz	$s6, .LBB56_214
# %bb.213:                              # %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i.i.i
                                        #   in Loop: Header=BB56_200 Depth=1
	move	$a0, $s6
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_214:                             # %_ZNSt6vectorIiSaIiEE17_M_realloc_appendIJRKiEEEvDpOT_.exit.i
                                        #   in Loop: Header=BB56_200 Depth=1
	add.d	$a0, $s7, $s4
	addi.d	$a0, $a0, 4
	st.d	$s7, $sp, 464
	st.d	$a0, $sp, 472
	alsl.d	$a0, $s1, $s7, 2
	st.d	$a0, $sp, 480
	b	.LBB56_199
.LBB56_215:
	srli.d	$a2, $a0, 2
.LBB56_216:
	slli.d	$a3, $a2, 3
	ldx.d	$a1, $a1, $a3
	andi	$a3, $a0, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
	ld.w	$a4, $a3, 80
	st.d	$a4, $sp, 56                    # 8-byte Folded Spill
	ld.w	$s8, $a3, 84
	slli.d	$a2, $a2, 2
	sub.d	$a0, $a0, $a2
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB56_217:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit225
	addi.d	$a3, $sp, 448
	ld.d	$a1, $a0, 96
	ld.d	$s4, $a0, 88
	st.d	$a3, $sp, 432
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 176
	move	$a0, $a3
	bltu	$a1, $a2, .LBB56_220
# %bb.218:                              # %.noexc.i.i227
.Ltmp1197:
	addi.d	$a0, $sp, 432
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1198:
# %bb.219:                              # %.noexc228
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 432
	st.d	$a1, $sp, 448
.LBB56_220:                             # %._crit_edge.i.i.i226
	ld.d	$a2, $sp, 104                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB56_224
# %bb.221:                              # %._crit_edge.i.i.i226
	bnez	$a1, .LBB56_223
# %bb.222:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB56_224
.LBB56_223:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_224:
	ld.d	$a0, $sp, 176
	st.d	$a0, $sp, 440
	addi.d	$s0, $sp, 384
	ld.d	$a1, $sp, 496
	ld.d	$s4, $sp, 488
	st.d	$s0, $sp, 368
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 176
	move	$a0, $s0
	bltu	$a1, $a2, .LBB56_227
# %bb.225:                              # %.noexc.i
.Ltmp1200:
	addi.d	$a0, $sp, 368
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1201:
# %bb.226:                              # %.noexc229
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 368
	st.d	$a1, $sp, 384
.LBB56_227:                             # %._crit_edge.i.i
	ld.d	$a2, $sp, 104                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB56_231
# %bb.228:                              # %._crit_edge.i.i
	bnez	$a1, .LBB56_230
# %bb.229:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB56_231
.LBB56_230:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_231:
	ld.d	$a0, $sp, 176
	st.d	$a0, $sp, 376
	addi.d	$s2, $sp, 352
	ld.d	$a1, $sp, 440
	ld.d	$s6, $sp, 432
	st.d	$s2, $sp, 336
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 176
	move	$a0, $s2
	bltu	$a1, $a2, .LBB56_234
# %bb.232:                              # %.noexc.i231
.Ltmp1203:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1204:
# %bb.233:                              # %.noexc232
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 336
	st.d	$a1, $sp, 352
.LBB56_234:                             # %._crit_edge.i.i230
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	slti	$a2, $a2, 0
	masknez	$a3, $s3, $a2
	ld.d	$a4, $sp, 64                    # 8-byte Folded Reload
	maskeqz	$a2, $a4, $a2
	or	$a2, $a2, $a3
	addi.d	$s4, $a2, 64
	ld.d	$a2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 88                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB56_238
# %bb.235:                              # %._crit_edge.i.i230
	bnez	$a1, .LBB56_237
# %bb.236:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB56_238
.LBB56_237:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_238:
	ld.d	$a0, $sp, 176
	ld.d	$a7, $fp, 40
	st.d	$a0, $sp, 344
.Ltmp1206:
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	st.d	$a0, $sp, 8
	addi.d	$a0, $sp, 400
	addi.d	$a2, $sp, 464
	addi.d	$a3, $sp, 368
	addi.d	$a6, $sp, 336
	st.d	$s3, $sp, 0
	move	$a1, $s4
	ld.d	$a4, $sp, 56                    # 8-byte Folded Reload
	move	$a5, $s8
	pcaddu18i	$ra, %call36(_ZN2PP8Variable13get_var_valueERSt6vectorIiSaIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiSA_PSt5dequeISA_SaISA_EERNS5_18basic_stringstreamIcS8_S9_EERi)
	jirl	$ra, $ra, 0
.Ltmp1207:
# %bb.239:
	ld.d	$a0, $sp, 336
	move	$s6, $s7
	beq	$a0, $s2, .LBB56_241
# %bb.240:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i234
	ld.d	$a1, $sp, 352
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_241:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit236
	ld.d	$a0, $sp, 368
	beq	$a0, $s0, .LBB56_243
# %bb.242:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i237
	ld.d	$a1, $sp, 384
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_243:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit239
	beqz	$s6, .LBB56_254
# %bb.244:
	addi.d	$s0, $sp, 320
	ld.d	$a1, $sp, 440
	ld.d	$s6, $sp, 432
	st.d	$s0, $sp, 304
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 176
	move	$a0, $s0
	bltu	$a1, $a2, .LBB56_247
# %bb.245:                              # %.noexc.i241
.Ltmp1209:
	addi.d	$a0, $sp, 304
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1210:
# %bb.246:                              # %.noexc242
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 304
	st.d	$a1, $sp, 320
.LBB56_247:                             # %._crit_edge.i.i240
	ld.d	$a2, $sp, 104                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB56_251
# %bb.248:                              # %._crit_edge.i.i240
	bnez	$a1, .LBB56_250
# %bb.249:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB56_251
.LBB56_250:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_251:
	ld.d	$a0, $sp, 176
	ld.d	$a6, $fp, 40
	st.d	$a0, $sp, 312
.Ltmp1212:
	addi.d	$a1, $sp, 464
	addi.d	$a5, $sp, 304
	ld.d	$a0, $sp, 96                    # 8-byte Folded Reload
	st.d	$a0, $sp, 0
	move	$a0, $s4
	move	$s6, $s7
	move	$a2, $s7
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	move	$a4, $s8
	move	$a7, $s3
	pcaddu18i	$ra, %call36(_ZN2PP8Variable8bump_varERSt6vectorIiSaIiEEiiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeISA_SaISA_EERNS5_18basic_stringstreamIcS8_S9_EERi)
	jirl	$ra, $ra, 0
.Ltmp1213:
# %bb.252:
	ld.d	$a0, $sp, 304
	beq	$a0, $s0, .LBB56_254
# %bb.253:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i244
	ld.d	$a1, $sp, 320
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_254:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit246
	addi.d	$s2, $sp, 160
	ld.d	$a1, $sp, 408
	ld.d	$s0, $sp, 400
	st.d	$s2, $sp, 144
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 552
	move	$a0, $s2
	bltu	$a1, $a2, .LBB56_257
# %bb.255:                              # %.noexc.i257
.Ltmp1215:
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 552
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1216:
# %bb.256:                              # %.noexc258
	ld.d	$a1, $sp, 552
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB56_257:                             # %._crit_edge.i.i256
	ld.d	$a2, $sp, 104                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB56_261
# %bb.258:                              # %._crit_edge.i.i256
	bnez	$a1, .LBB56_260
# %bb.259:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB56_261
.LBB56_260:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_261:
	ld.d	$a0, $sp, 552
	st.d	$a0, $sp, 152
	addi.d	$s3, $sp, 128
	ld.d	$a1, $sp, 440
	ld.d	$s0, $sp, 432
	st.d	$s3, $sp, 112
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 552
	move	$a0, $s3
	bltu	$a1, $a2, .LBB56_264
# %bb.262:                              # %.noexc.i261
.Ltmp1218:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 552
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1219:
# %bb.263:                              # %.noexc262
	ld.d	$a1, $sp, 552
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB56_264:                             # %._crit_edge.i.i260
	ld.d	$a2, $sp, 104                   # 8-byte Folded Reload
	beq	$a1, $a2, .LBB56_268
# %bb.265:                              # %._crit_edge.i.i260
	bnez	$a1, .LBB56_267
# %bb.266:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB56_268
.LBB56_267:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB56_268:
	ld.d	$a0, $sp, 552
	ld.d	$a5, $fp, 40
	st.d	$a0, $sp, 120
.Ltmp1221:
	addi.d	$a0, $sp, 176
	addi.d	$a1, $sp, 144
	addi.d	$a4, $sp, 112
	ld.d	$a2, $sp, 56                    # 8-byte Folded Reload
	move	$a3, $s8
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp1222:
# %bb.269:
	ld.d	$a0, $sp, 112
	beq	$a0, $s3, .LBB56_271
# %bb.270:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i264
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_271:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit266
	ld.d	$a0, $sp, 144
	beq	$a0, $s2, .LBB56_273
# %bb.272:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i267
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_273:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit269
	ld.w	$a0, $s1, 0
	ld.d	$s0, $sp, 80                    # 8-byte Folded Reload
	add.w	$a2, $a0, $s0
.Ltmp1224:
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp1225:
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
# %bb.274:                              # %.noexc270
	ld.d	$a4, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a4, $a1
	srai.d	$a2, $a2, 7
	add.d	$a3, $a2, $s0
	bltz	$a3, .LBB56_277
# %bb.275:
	ori	$a2, $zero, 3
	bltu	$a2, $a3, .LBB56_278
# %bb.276:
	ld.d	$a2, $fp, 192
	slli.d	$a3, $s0, 7
	add.d	$a3, $a4, $a3
	b	.LBB56_280
.LBB56_277:
	srai.d	$a4, $a3, 2
	b	.LBB56_279
.LBB56_278:
	srli.d	$a4, $a3, 2
.LBB56_279:
	slli.d	$a1, $a4, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a4, $a0, 3
	addi.d	$a2, $a1, 512
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
.LBB56_280:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i
	st.d	$a3, $sp, 552
	st.d	$a1, $sp, 560
	st.d	$a2, $sp, 568
	st.d	$a0, $sp, 576
.Ltmp1226:
	addi.d	$a0, $sp, 520
	addi.d	$a2, $sp, 552
	addi.d	$a3, $sp, 176
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1227:
# %bb.281:
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	ld.w	$a0, $a0, 0
	ld.w	$a1, $s1, 0
	sub.d	$a0, $a1, $a0
	st.w	$a0, $s1, 0
	beqz	$s6, .LBB56_284
# %bb.282:
	addi.w	$a1, $s0, 1
.Ltmp1228:
	move	$a0, $fp
	move	$a2, $a1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp1229:
# %bb.283:
	ld.w	$a0, $s1, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $s1, 0
.LBB56_284:
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 400
	addi.d	$a1, $sp, 416
	beq	$a0, $a1, .LBB56_286
# %bb.285:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i278
	ld.d	$a1, $sp, 416
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_286:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit280
	ld.d	$a0, $sp, 432
	addi.d	$a1, $sp, 448
	beq	$a0, $a1, .LBB56_288
# %bb.287:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i281
	ld.d	$a1, $sp, 448
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_288:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit283
	ld.d	$a0, $sp, 464
	beqz	$a0, .LBB56_130
# %bb.289:
	ld.d	$a1, $sp, 480
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB56_130
.LBB56_290:
.Ltmp1282:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1283:
# %bb.291:                              # %.noexc332
.LBB56_292:                             # %.invoke
.Ltmp1285:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1286:
# %bb.293:                              # %.cont
.LBB56_294:
.Ltmp1231:
	pcalau12i	$a0, %pc_hi20(.L.str.225)
	addi.d	$a0, $a0, %pc_lo12(.L.str.225)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1232:
# %bb.295:                              # %.noexc212
.LBB56_296:
.Ltmp1141:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1142:
# %bb.297:                              # %.noexc354
.LBB56_298:
.Ltmp1144:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1145:
# %bb.299:                              # %.noexc343
.LBB56_300:
.Ltmp1178:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1179:
# %bb.301:                              # %.noexc376
.LBB56_302:
.Ltmp1181:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1182:
# %bb.303:                              # %.noexc365
.LBB56_304:
.Ltmp1166:
	b	.LBB56_349
.LBB56_305:
.Ltmp1191:
	b	.LBB56_343
.LBB56_306:
.Ltmp1211:
	b	.LBB56_311
.LBB56_307:                             # %.loopexit.split-lp411
.Ltmp1183:
	b	.LBB56_349
.LBB56_308:                             # %.loopexit.split-lp416
.Ltmp1180:
	b	.LBB56_341
.LBB56_309:
.Ltmp1220:
	move	$fp, $a0
	b	.LBB56_322
.LBB56_310:
.Ltmp1217:
.LBB56_311:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit255
	move	$fp, $a0
	b	.LBB56_334
.LBB56_312:
.Ltmp1205:
	move	$fp, $a0
	b	.LBB56_326
.LBB56_313:
.Ltmp1196:
	ld.d	$a2, $sp, 176
	addi.d	$a1, $sp, 192
	move	$fp, $a0
	beq	$a2, $a1, .LBB56_344
# %bb.314:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i214
	ld.d	$a0, $sp, 192
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB56_339
.LBB56_315:
.Ltmp1202:
	move	$fp, $a0
	b	.LBB56_337
.LBB56_316:
.Ltmp1199:
	b	.LBB56_343
.LBB56_317:
.Ltmp1129:
	b	.LBB56_349
.LBB56_318:
.Ltmp1214:
	ld.d	$a2, $sp, 304
	move	$fp, $a0
	beq	$a2, $s0, .LBB56_334
# %bb.319:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i253
	ld.d	$a0, $sp, 320
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB56_334
.LBB56_320:
.Ltmp1223:
	ld.d	$a2, $sp, 112
	move	$fp, $a0
	beq	$a2, $s3, .LBB56_322
# %bb.321:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i272
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_322:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit274
	ld.d	$a0, $sp, 144
	beq	$a0, $s2, .LBB56_334
# %bb.323:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i275
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB56_334
.LBB56_324:
.Ltmp1208:
	ld.d	$a2, $sp, 336
	move	$fp, $a0
	beq	$a2, $s2, .LBB56_326
# %bb.325:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i247
	ld.d	$a0, $sp, 352
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_326:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit249
	ld.d	$a0, $sp, 368
	beq	$a0, $s0, .LBB56_337
# %bb.327:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i250
	ld.d	$a1, $sp, 384
	b	.LBB56_336
.LBB56_328:                             # %.loopexit.split-lp422
.Ltmp1146:
	b	.LBB56_349
.LBB56_329:                             # %.loopexit.split-lp427
.Ltmp1143:
	b	.LBB56_341
.LBB56_330:                             # %.loopexit.split-lp406
.Ltmp1233:
	b	.LBB56_343
.LBB56_331:                             # %.loopexit415
.Ltmp1177:
	b	.LBB56_341
.LBB56_332:                             # %.loopexit410
.Ltmp1163:
	b	.LBB56_349
.LBB56_333:
.Ltmp1230:
	move	$fp, $a0
	addi.d	$a0, $sp, 176
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB56_334:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit255
	ld.d	$a0, $sp, 400
	addi.d	$a1, $sp, 416
	beq	$a0, $a1, .LBB56_337
# %bb.335:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i285
	ld.d	$a1, $sp, 416
.LBB56_336:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit252
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_337:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit252
	ld.d	$a0, $sp, 432
	addi.d	$a1, $sp, 448
	beq	$a0, $a1, .LBB56_344
# %bb.338:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i288
	ld.d	$a1, $sp, 448
	addi.d	$a1, $a1, 1
.LBB56_339:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB56_344
.LBB56_340:                             # %.loopexit426
.Ltmp1140:
.LBB56_341:
	move	$fp, $a0
	ld.d	$a0, $sp, 176
	addi.d	$a1, $sp, 192
	bne	$a0, $a1, .LBB56_353
	b	.LBB56_355
.LBB56_342:                             # %.loopexit405
.Ltmp1188:
.LBB56_343:
	move	$fp, $a0
.LBB56_344:
	ld.d	$a0, $sp, 464
	beqz	$a0, .LBB56_355
# %bb.345:
	ld.d	$a1, $sp, 480
	sub.d	$a1, $a1, $a0
	b	.LBB56_354
.LBB56_346:                             # %.loopexit421
.Ltmp1126:
	b	.LBB56_349
.LBB56_347:
.Ltmp1270:
	b	.LBB56_349
.LBB56_348:
.Ltmp1287:
.LBB56_349:
	move	$fp, $a0
	b	.LBB56_355
.LBB56_350:                             # %.loopexit.split-lp
.Ltmp1284:
	b	.LBB56_352
.LBB56_351:                             # %.loopexit
.Ltmp1281:
.LBB56_352:
	move	$fp, $a0
	ld.d	$a0, $sp, 176
	beq	$a0, $s0, .LBB56_355
.LBB56_353:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i154
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
.LBB56_354:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_355:
	ld.d	$a0, $sp, 488
	addi.d	$a1, $sp, 504
	beq	$a0, $a1, .LBB56_357
# %bb.356:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i296
	ld.d	$a1, $sp, 504
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB56_357:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit298
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end56:
	.size	_ZN2PP3Cmd17evaluate_variableEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_, .Lfunc_end56-_ZN2PP3Cmd17evaluate_variableEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table56:
.Lexception27:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Lfunc_begin27-.Lfunc_begin27  # >> Call Site 1 <<
	.uleb128 .Ltmp1110-.Lfunc_begin27       #   Call between .Lfunc_begin27 and .Ltmp1110
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1110-.Lfunc_begin27       # >> Call Site 2 <<
	.uleb128 .Ltmp1125-.Ltmp1110            #   Call between .Ltmp1110 and .Ltmp1125
	.uleb128 .Ltmp1126-.Lfunc_begin27       #     jumps to .Ltmp1126
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1127-.Lfunc_begin27       # >> Call Site 3 <<
	.uleb128 .Ltmp1128-.Ltmp1127            #   Call between .Ltmp1127 and .Ltmp1128
	.uleb128 .Ltmp1129-.Lfunc_begin27       #     jumps to .Ltmp1129
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1128-.Lfunc_begin27       # >> Call Site 4 <<
	.uleb128 .Ltmp1130-.Ltmp1128            #   Call between .Ltmp1128 and .Ltmp1130
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1130-.Lfunc_begin27       # >> Call Site 5 <<
	.uleb128 .Ltmp1139-.Ltmp1130            #   Call between .Ltmp1130 and .Ltmp1139
	.uleb128 .Ltmp1140-.Lfunc_begin27       #     jumps to .Ltmp1140
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1139-.Lfunc_begin27       # >> Call Site 6 <<
	.uleb128 .Ltmp1234-.Ltmp1139            #   Call between .Ltmp1139 and .Ltmp1234
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1234-.Lfunc_begin27       # >> Call Site 7 <<
	.uleb128 .Ltmp1267-.Ltmp1234            #   Call between .Ltmp1234 and .Ltmp1267
	.uleb128 .Ltmp1287-.Lfunc_begin27       #     jumps to .Ltmp1287
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1267-.Lfunc_begin27       # >> Call Site 8 <<
	.uleb128 .Ltmp1268-.Ltmp1267            #   Call between .Ltmp1267 and .Ltmp1268
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1268-.Lfunc_begin27       # >> Call Site 9 <<
	.uleb128 .Ltmp1269-.Ltmp1268            #   Call between .Ltmp1268 and .Ltmp1269
	.uleb128 .Ltmp1270-.Lfunc_begin27       #     jumps to .Ltmp1270
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1269-.Lfunc_begin27       # >> Call Site 10 <<
	.uleb128 .Ltmp1271-.Ltmp1269            #   Call between .Ltmp1269 and .Ltmp1271
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1271-.Lfunc_begin27       # >> Call Site 11 <<
	.uleb128 .Ltmp1280-.Ltmp1271            #   Call between .Ltmp1271 and .Ltmp1280
	.uleb128 .Ltmp1281-.Lfunc_begin27       #     jumps to .Ltmp1281
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1280-.Lfunc_begin27       # >> Call Site 12 <<
	.uleb128 .Ltmp1147-.Ltmp1280            #   Call between .Ltmp1280 and .Ltmp1147
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1147-.Lfunc_begin27       # >> Call Site 13 <<
	.uleb128 .Ltmp1162-.Ltmp1147            #   Call between .Ltmp1147 and .Ltmp1162
	.uleb128 .Ltmp1163-.Lfunc_begin27       #     jumps to .Ltmp1163
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1164-.Lfunc_begin27       # >> Call Site 14 <<
	.uleb128 .Ltmp1165-.Ltmp1164            #   Call between .Ltmp1164 and .Ltmp1165
	.uleb128 .Ltmp1166-.Lfunc_begin27       #     jumps to .Ltmp1166
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1165-.Lfunc_begin27       # >> Call Site 15 <<
	.uleb128 .Ltmp1167-.Ltmp1165            #   Call between .Ltmp1165 and .Ltmp1167
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1167-.Lfunc_begin27       # >> Call Site 16 <<
	.uleb128 .Ltmp1176-.Ltmp1167            #   Call between .Ltmp1167 and .Ltmp1176
	.uleb128 .Ltmp1177-.Lfunc_begin27       #     jumps to .Ltmp1177
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1176-.Lfunc_begin27       # >> Call Site 17 <<
	.uleb128 .Ltmp1189-.Ltmp1176            #   Call between .Ltmp1176 and .Ltmp1189
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1189-.Lfunc_begin27       # >> Call Site 18 <<
	.uleb128 .Ltmp1190-.Ltmp1189            #   Call between .Ltmp1189 and .Ltmp1190
	.uleb128 .Ltmp1191-.Lfunc_begin27       #     jumps to .Ltmp1191
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1192-.Lfunc_begin27       # >> Call Site 19 <<
	.uleb128 .Ltmp1195-.Ltmp1192            #   Call between .Ltmp1192 and .Ltmp1195
	.uleb128 .Ltmp1196-.Lfunc_begin27       #     jumps to .Ltmp1196
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1195-.Lfunc_begin27       # >> Call Site 20 <<
	.uleb128 .Ltmp1184-.Ltmp1195            #   Call between .Ltmp1195 and .Ltmp1184
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1184-.Lfunc_begin27       # >> Call Site 21 <<
	.uleb128 .Ltmp1187-.Ltmp1184            #   Call between .Ltmp1184 and .Ltmp1187
	.uleb128 .Ltmp1188-.Lfunc_begin27       #     jumps to .Ltmp1188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1187-.Lfunc_begin27       # >> Call Site 22 <<
	.uleb128 .Ltmp1197-.Ltmp1187            #   Call between .Ltmp1187 and .Ltmp1197
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1197-.Lfunc_begin27       # >> Call Site 23 <<
	.uleb128 .Ltmp1198-.Ltmp1197            #   Call between .Ltmp1197 and .Ltmp1198
	.uleb128 .Ltmp1199-.Lfunc_begin27       #     jumps to .Ltmp1199
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1198-.Lfunc_begin27       # >> Call Site 24 <<
	.uleb128 .Ltmp1200-.Ltmp1198            #   Call between .Ltmp1198 and .Ltmp1200
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1200-.Lfunc_begin27       # >> Call Site 25 <<
	.uleb128 .Ltmp1201-.Ltmp1200            #   Call between .Ltmp1200 and .Ltmp1201
	.uleb128 .Ltmp1202-.Lfunc_begin27       #     jumps to .Ltmp1202
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1201-.Lfunc_begin27       # >> Call Site 26 <<
	.uleb128 .Ltmp1203-.Ltmp1201            #   Call between .Ltmp1201 and .Ltmp1203
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1203-.Lfunc_begin27       # >> Call Site 27 <<
	.uleb128 .Ltmp1204-.Ltmp1203            #   Call between .Ltmp1203 and .Ltmp1204
	.uleb128 .Ltmp1205-.Lfunc_begin27       #     jumps to .Ltmp1205
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1204-.Lfunc_begin27       # >> Call Site 28 <<
	.uleb128 .Ltmp1206-.Ltmp1204            #   Call between .Ltmp1204 and .Ltmp1206
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1206-.Lfunc_begin27       # >> Call Site 29 <<
	.uleb128 .Ltmp1207-.Ltmp1206            #   Call between .Ltmp1206 and .Ltmp1207
	.uleb128 .Ltmp1208-.Lfunc_begin27       #     jumps to .Ltmp1208
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1207-.Lfunc_begin27       # >> Call Site 30 <<
	.uleb128 .Ltmp1209-.Ltmp1207            #   Call between .Ltmp1207 and .Ltmp1209
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1209-.Lfunc_begin27       # >> Call Site 31 <<
	.uleb128 .Ltmp1210-.Ltmp1209            #   Call between .Ltmp1209 and .Ltmp1210
	.uleb128 .Ltmp1211-.Lfunc_begin27       #     jumps to .Ltmp1211
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1210-.Lfunc_begin27       # >> Call Site 32 <<
	.uleb128 .Ltmp1212-.Ltmp1210            #   Call between .Ltmp1210 and .Ltmp1212
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1212-.Lfunc_begin27       # >> Call Site 33 <<
	.uleb128 .Ltmp1213-.Ltmp1212            #   Call between .Ltmp1212 and .Ltmp1213
	.uleb128 .Ltmp1214-.Lfunc_begin27       #     jumps to .Ltmp1214
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1213-.Lfunc_begin27       # >> Call Site 34 <<
	.uleb128 .Ltmp1215-.Ltmp1213            #   Call between .Ltmp1213 and .Ltmp1215
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1215-.Lfunc_begin27       # >> Call Site 35 <<
	.uleb128 .Ltmp1216-.Ltmp1215            #   Call between .Ltmp1215 and .Ltmp1216
	.uleb128 .Ltmp1217-.Lfunc_begin27       #     jumps to .Ltmp1217
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1216-.Lfunc_begin27       # >> Call Site 36 <<
	.uleb128 .Ltmp1218-.Ltmp1216            #   Call between .Ltmp1216 and .Ltmp1218
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1218-.Lfunc_begin27       # >> Call Site 37 <<
	.uleb128 .Ltmp1219-.Ltmp1218            #   Call between .Ltmp1218 and .Ltmp1219
	.uleb128 .Ltmp1220-.Lfunc_begin27       #     jumps to .Ltmp1220
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1219-.Lfunc_begin27       # >> Call Site 38 <<
	.uleb128 .Ltmp1221-.Ltmp1219            #   Call between .Ltmp1219 and .Ltmp1221
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1221-.Lfunc_begin27       # >> Call Site 39 <<
	.uleb128 .Ltmp1222-.Ltmp1221            #   Call between .Ltmp1221 and .Ltmp1222
	.uleb128 .Ltmp1223-.Lfunc_begin27       #     jumps to .Ltmp1223
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1222-.Lfunc_begin27       # >> Call Site 40 <<
	.uleb128 .Ltmp1224-.Ltmp1222            #   Call between .Ltmp1222 and .Ltmp1224
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1224-.Lfunc_begin27       # >> Call Site 41 <<
	.uleb128 .Ltmp1229-.Ltmp1224            #   Call between .Ltmp1224 and .Ltmp1229
	.uleb128 .Ltmp1230-.Lfunc_begin27       #     jumps to .Ltmp1230
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1229-.Lfunc_begin27       # >> Call Site 42 <<
	.uleb128 .Ltmp1282-.Ltmp1229            #   Call between .Ltmp1229 and .Ltmp1282
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1282-.Lfunc_begin27       # >> Call Site 43 <<
	.uleb128 .Ltmp1283-.Ltmp1282            #   Call between .Ltmp1282 and .Ltmp1283
	.uleb128 .Ltmp1284-.Lfunc_begin27       #     jumps to .Ltmp1284
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1285-.Lfunc_begin27       # >> Call Site 44 <<
	.uleb128 .Ltmp1286-.Ltmp1285            #   Call between .Ltmp1285 and .Ltmp1286
	.uleb128 .Ltmp1287-.Lfunc_begin27       #     jumps to .Ltmp1287
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1231-.Lfunc_begin27       # >> Call Site 45 <<
	.uleb128 .Ltmp1232-.Ltmp1231            #   Call between .Ltmp1231 and .Ltmp1232
	.uleb128 .Ltmp1233-.Lfunc_begin27       #     jumps to .Ltmp1233
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1141-.Lfunc_begin27       # >> Call Site 46 <<
	.uleb128 .Ltmp1142-.Ltmp1141            #   Call between .Ltmp1141 and .Ltmp1142
	.uleb128 .Ltmp1143-.Lfunc_begin27       #     jumps to .Ltmp1143
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1144-.Lfunc_begin27       # >> Call Site 47 <<
	.uleb128 .Ltmp1145-.Ltmp1144            #   Call between .Ltmp1144 and .Ltmp1145
	.uleb128 .Ltmp1146-.Lfunc_begin27       #     jumps to .Ltmp1146
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1178-.Lfunc_begin27       # >> Call Site 48 <<
	.uleb128 .Ltmp1179-.Ltmp1178            #   Call between .Ltmp1178 and .Ltmp1179
	.uleb128 .Ltmp1180-.Lfunc_begin27       #     jumps to .Ltmp1180
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1181-.Lfunc_begin27       # >> Call Site 49 <<
	.uleb128 .Ltmp1182-.Ltmp1181            #   Call between .Ltmp1181 and .Ltmp1182
	.uleb128 .Ltmp1183-.Lfunc_begin27       #     jumps to .Ltmp1183
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1182-.Lfunc_begin27       # >> Call Site 50 <<
	.uleb128 .Lfunc_end56-.Ltmp1182         #   Call between .Ltmp1182 and .Lfunc_end56
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end27:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception28
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -304
	.cfi_def_cfa_offset 304
	st.d	$ra, $sp, 296                   # 8-byte Folded Spill
	st.d	$fp, $sp, 288                   # 8-byte Folded Spill
	st.d	$s0, $sp, 280                   # 8-byte Folded Spill
	st.d	$s1, $sp, 272                   # 8-byte Folded Spill
	st.d	$s2, $sp, 264                   # 8-byte Folded Spill
	st.d	$s3, $sp, 256                   # 8-byte Folded Spill
	st.d	$s4, $sp, 248                   # 8-byte Folded Spill
	st.d	$s5, $sp, 240                   # 8-byte Folded Spill
	st.d	$s6, $sp, 232                   # 8-byte Folded Spill
	st.d	$s7, $sp, 224                   # 8-byte Folded Spill
	st.d	$s8, $sp, 216                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a2
	move	$s1, $a1
	move	$s0, $a0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd16handle_star_starEv)
	jirl	$ra, $ra, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd10handle_opsEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s0, 208
	ld.d	$a3, $s0, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s0, 192
	ld.d	$a4, $s0, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	addi.d	$s3, $sp, 192
	st.d	$s3, $sp, 176
	ori	$a1, $zero, 61
	st.h	$a1, $sp, 192
	ori	$a1, $zero, 1
	st.d	$a1, $sp, 184
	addi.w	$a2, $a0, -1
.Ltmp1288:
	addi.d	$a3, $sp, 176
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13find_any_charEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1289:
# %bb.1:
	move	$s2, $a0
	ld.d	$a0, $sp, 176
	beq	$a0, $s3, .LBB57_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB57_6
# %bb.4:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB57_8
# %bb.5:
	srli.d	$a2, $a1, 2
	b	.LBB57_7
.LBB57_6:
	srai.d	$a2, $a3, 9
.LBB57_7:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB57_8:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$s4, $sp, 160
	st.d	$s4, $sp, 144
	ld.d	$a1, $a2, 8
	ld.d	$s3, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $s4
	bltu	$a1, $a2, .LBB57_10
# %bb.9:                                # %.noexc.i.i
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB57_10:                              # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	st.d	$a2, $sp, 24                    # 8-byte Folded Spill
	beq	$a1, $a2, .LBB57_14
# %bb.11:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB57_13
# %bb.12:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB57_14
.LBB57_13:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB57_14:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a1, $sp, 112
	ld.d	$a0, $sp, 144
	ori	$a2, $zero, 2
	st.d	$a1, $sp, 152
	bne	$a1, $a2, .LBB57_16
# %bb.15:
	ld.hu	$a1, $a0, 0
	lu12i.w	$a2, 6
	ori	$a2, $a2, 1641
	xor	$a1, $a1, $a2
	sltui	$s8, $a1, 1
	bne	$a0, $s4, .LBB57_17
	b	.LBB57_18
.LBB57_16:
	move	$s8, $zero
	beq	$a0, $s4, .LBB57_18
.LBB57_17:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i88
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90
	move	$s7, $zero
	masknez	$a0, $s2, $s8
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	maskeqz	$a1, $a1, $s8
	or	$a0, $a1, $a0
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	addi.d	$s3, $sp, 160
	addi.d	$s6, $sp, 64
	ori	$s4, $zero, 16
	ori	$a0, $zero, 0
	lu32i.d	$a0, -2
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	ori	$s5, $zero, 10
	b	.LBB57_20
	.p2align	4, , 16
.LBB57_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit107._crit_edge
                                        #   in Loop: Header=BB57_20 Depth=1
	addi.d	$s7, $s7, 1
.LBB57_20:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB57_46 Depth 2
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s7, $a2, .LBB57_125
# %bb.21:                               #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s7
	bltz	$a2, .LBB57_24
# %bb.22:                               #   in Loop: Header=BB57_20 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB57_25
# %bb.23:                               #   in Loop: Header=BB57_20 Depth=1
	slli.d	$a0, $s7, 7
	add.d	$a0, $a1, $a0
	b	.LBB57_27
	.p2align	4, , 16
.LBB57_24:                              #   in Loop: Header=BB57_20 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB57_26
	.p2align	4, , 16
.LBB57_25:                              #   in Loop: Header=BB57_20 Depth=1
	srli.d	$a1, $a2, 2
.LBB57_26:                              #   in Loop: Header=BB57_20 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB57_27:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit99
                                        #   in Loop: Header=BB57_20 Depth=1
	st.d	$s3, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 112
	move	$a0, $s3
	bltu	$a1, $s4, .LBB57_29
# %bb.28:                               # %.noexc.i.i101
                                        #   in Loop: Header=BB57_20 Depth=1
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB57_29:                              # %._crit_edge.i.i.i100
                                        #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB57_33
# %bb.30:                               # %._crit_edge.i.i.i100
                                        #   in Loop: Header=BB57_20 Depth=1
	bnez	$a1, .LBB57_32
# %bb.31:                               #   in Loop: Header=BB57_20 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB57_33
	.p2align	4, , 16
.LBB57_32:                              #   in Loop: Header=BB57_20 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB57_33:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit102
                                        #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a1, $sp, 112
	ld.d	$a0, $sp, 144
	ori	$s2, $zero, 1
	st.d	$a1, $sp, 152
	bne	$a1, $s2, .LBB57_35
# %bb.34:                               #   in Loop: Header=BB57_20 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -40
	sltu	$s2, $zero, $a1
.LBB57_35:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit104
                                        #   in Loop: Header=BB57_20 Depth=1
	beq	$a0, $s3, .LBB57_37
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i105
                                        #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_37:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit107
                                        #   in Loop: Header=BB57_20 Depth=1
	ori	$a0, $zero, 1
	sltu	$a0, $a0, $s7
	and	$a0, $s8, $a0
	or	$a0, $s2, $a0
	bnez	$a0, .LBB57_19
# %bb.38:                               #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 32
	ld.d	$a3, $sp, 16                    # 8-byte Folded Reload
	add.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 32
	blt	$a2, $s7, .LBB57_61
# %bb.39:                               # %._crit_edge.i.i143
                                        #   in Loop: Header=BB57_20 Depth=1
	addi.d	$s4, $s7, 1
	st.w	$s4, $sp, 144
	addi.d	$a0, $sp, 96
	st.d	$a0, $sp, 80
	ori	$a0, $zero, 40
	st.h	$a0, $sp, 96
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 88
	st.d	$s6, $sp, 48
	ori	$a1, $zero, 41
	st.h	$a1, $sp, 64
	st.d	$a0, $sp, 56
.Ltmp1291:
	addi.w	$a3, $s4, 0
	addi.d	$a1, $sp, 80
	addi.d	$a2, $sp, 48
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd19find_closing_symbolENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_i)
	jirl	$ra, $ra, 0
.Ltmp1292:
# %bb.40:                               #   in Loop: Header=BB57_20 Depth=1
	move	$s2, $a0
	ld.d	$a0, $sp, 48
	beq	$a0, $s6, .LBB57_42
# %bb.41:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i151
                                        #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_42:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit153
                                        #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a0, $sp, 80
	addi.d	$a1, $sp, 96
	beq	$a0, $a1, .LBB57_44
# %bb.43:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i154
                                        #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_44:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit156
                                        #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	beq	$s2, $a0, .LBB57_64
# %bb.45:                               #   in Loop: Header=BB57_20 Depth=1
	addi.d	$a0, $s2, -1
	st.w	$a0, $sp, 112
	st.w	$zero, $sp, 44
	.p2align	4, , 16
.LBB57_46:                              #   Parent Loop BB57_20 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a1, $sp, 144
	addi.d	$a2, $sp, 112
	addi.d	$a3, $sp, 208
	addi.d	$a4, $sp, 44
	ori	$a5, $zero, 1
	move	$a0, $s0
	move	$a6, $s1
	move	$a7, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd23handle_innermost_parensERiS1_S1_S1_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB57_55
# %bb.47:                               # %.lr.ph
                                        #   in Loop: Header=BB57_46 Depth=2
	ld.d	$a1, $s0, 280
	ld.w	$s2, $sp, 208
	ori	$a0, $zero, 1
	bne	$a1, $s5, .LBB57_49
# %bb.48:                               #   in Loop: Header=BB57_46 Depth=2
	ld.d	$a0, $s0, 272
	pcalau12i	$a1, %pc_hi20(.L.str.7)
	addi.d	$a1, $a1, %pc_lo12(.L.str.7)
	ori	$a2, $zero, 10
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltu	$a0, $zero, $a0
.LBB57_49:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit166
                                        #   in Loop: Header=BB57_46 Depth=2
	addi.d	$a1, $s2, -1
	sltu	$a1, $zero, $a1
	or	$a1, $a0, $a1
	move	$a0, $zero
	beqz	$a1, .LBB57_52
# %bb.50:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit166
                                        #   in Loop: Header=BB57_46 Depth=2
	blez	$s2, .LBB57_52
# %bb.51:                               #   in Loop: Header=BB57_46 Depth=2
	addi.w	$a1, $s2, -1
	addi.d	$a2, $sp, 112
	addi.d	$a3, $sp, 44
	move	$a0, $s0
	move	$a4, $s1
	move	$a5, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd17evaluate_variableEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
.LBB57_52:                              #   in Loop: Header=BB57_46 Depth=2
	blez	$s2, .LBB57_46
# %bb.53:                               #   in Loop: Header=BB57_46 Depth=2
	bnez	$a0, .LBB57_46
# %bb.54:                               #   in Loop: Header=BB57_46 Depth=2
	addi.w	$a1, $s2, -1
	addi.d	$a2, $sp, 112
	addi.d	$a3, $sp, 44
	move	$a0, $s0
	move	$a4, $s1
	move	$a5, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd17evaluate_functionEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
	b	.LBB57_46
	.p2align	4, , 16
.LBB57_55:                              # %._crit_edge
                                        #   in Loop: Header=BB57_20 Depth=1
	ld.w	$a0, $sp, 112
	st.w	$s7, $sp, 40
	addi.w	$a0, $a0, 1
	st.w	$a0, $sp, 36
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	slt	$a0, $a0, $a1
	xori	$a0, $a0, 1
	addi.d	$a1, $s7, -1
	sltu	$a1, $zero, $a1
	or	$a5, $a1, $a0
	addi.d	$a1, $sp, 40
	addi.d	$a2, $sp, 36
	addi.d	$a3, $sp, 208
	addi.d	$a4, $sp, 44
	move	$a0, $s0
	move	$a6, $s1
	move	$a7, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd23handle_innermost_parensERiS1_S1_S1_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 280
	ld.w	$s2, $sp, 208
	ori	$a0, $zero, 1
	bne	$a1, $s5, .LBB57_57
# %bb.56:                               #   in Loop: Header=BB57_20 Depth=1
	ld.d	$a0, $s0, 272
	pcalau12i	$a1, %pc_hi20(.L.str.7)
	addi.d	$a1, $a1, %pc_lo12(.L.str.7)
	ori	$a2, $zero, 10
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltu	$a0, $zero, $a0
.LBB57_57:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit168
                                        #   in Loop: Header=BB57_20 Depth=1
	addi.d	$a1, $s2, -1
	sltu	$a1, $zero, $a1
	or	$a0, $a0, $a1
	beqz	$a0, .LBB57_60
# %bb.58:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit168
                                        #   in Loop: Header=BB57_20 Depth=1
	blez	$s2, .LBB57_60
# %bb.59:                               #   in Loop: Header=BB57_20 Depth=1
	ld.w	$a0, $sp, 36
	addi.d	$a0, $a0, 1
	st.w	$a0, $sp, 32
	addi.w	$a1, $s2, -1
	addi.d	$a2, $sp, 32
	addi.d	$a3, $sp, 44
	move	$a0, $s0
	move	$a4, $s1
	move	$a5, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd17evaluate_variableEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
.LBB57_60:                              #   in Loop: Header=BB57_20 Depth=1
	move	$s7, $s4
	addi.d	$s6, $sp, 64
	ori	$s4, $zero, 16
	b	.LBB57_20
.LBB57_61:
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s7
	bltz	$a2, .LBB57_67
# %bb.62:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB57_69
# %bb.63:
	slli.d	$a0, $s7, 7
	add.d	$a0, $a1, $a0
	b	.LBB57_71
.LBB57_64:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	bstrpick.d	$a3, $s4, 31, 0
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB57_68
# %bb.65:
	ori	$a4, $zero, 3
	bltu	$a4, $a1, .LBB57_113
# %bb.66:
	slli.d	$a0, $a3, 7
	add.d	$a0, $a2, $a0
	b	.LBB57_115
.LBB57_67:
	srai.d	$a1, $a2, 2
	b	.LBB57_70
.LBB57_68:
	srai.d	$a2, $a1, 2
	b	.LBB57_114
.LBB57_69:
	srli.d	$a1, $a2, 2
.LBB57_70:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB57_71:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit113
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.88)
	addi.d	$a1, $a0, %pc_lo12(.L.str.88)
	ori	$a2, $zero, 14
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB57_126
# %bb.72:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB57_74
# %bb.73:
	ld.bu	$a0, $s1, 67
	b	.LBB57_75
.LBB57_74:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB57_75:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.89)
	addi.d	$a1, $a0, %pc_lo12(.L.str.89)
	ori	$a2, $zero, 6
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 32
	ori	$a3, $zero, 0
	ld.d	$a4, $s0, 184
	lu32i.d	$a3, -2
	add.d	$a2, $a2, $a3
	srai.d	$a3, $a2, 32
	sub.d	$a2, $a1, $a4
	srai.d	$a2, $a2, 7
	add.d	$a2, $a3, $a2
	bltz	$a2, .LBB57_78
# %bb.76:
	ori	$a4, $zero, 3
	bltu	$a4, $a2, .LBB57_79
# %bb.77:
	slli.d	$a0, $a3, 7
	add.d	$a0, $a1, $a0
	b	.LBB57_81
.LBB57_78:
	srai.d	$a1, $a2, 2
	b	.LBB57_80
.LBB57_79:
	srli.d	$a1, $a2, 2
.LBB57_80:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB57_81:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit116
	addi.d	$s3, $sp, 160
	st.d	$s3, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 112
	move	$a0, $s3
	bltu	$a1, $a2, .LBB57_83
# %bb.82:                               # %.noexc.i.i118
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB57_83:                              # %._crit_edge.i.i.i117
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB57_87
# %bb.84:                               # %._crit_edge.i.i.i117
	bnez	$a1, .LBB57_86
# %bb.85:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB57_87
.LBB57_86:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB57_87:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit119
	ld.d	$a2, $sp, 112
	ld.d	$a1, $sp, 144
	st.d	$a2, $sp, 152
.Ltmp1294:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1295:
# %bb.88:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s1, $a0
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 32
	ori	$a3, $zero, 0
	ld.d	$a4, $s0, 184
	lu32i.d	$a3, -1
	add.d	$a2, $a2, $a3
	srai.d	$a3, $a2, 32
	sub.d	$a2, $a1, $a4
	srai.d	$a2, $a2, 7
	add.d	$a2, $a3, $a2
	bltz	$a2, .LBB57_91
# %bb.89:
	ori	$a4, $zero, 3
	bltu	$a4, $a2, .LBB57_92
# %bb.90:
	slli.d	$a0, $a3, 7
	add.d	$a0, $a1, $a0
	b	.LBB57_94
.LBB57_91:
	srai.d	$a1, $a2, 2
	b	.LBB57_93
.LBB57_92:
	srli.d	$a1, $a2, 2
.LBB57_93:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB57_94:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit123
	addi.d	$s2, $sp, 128
	st.d	$s2, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 208
	move	$a0, $s2
	bltu	$a1, $a2, .LBB57_97
# %bb.95:                               # %.noexc.i.i125
.Ltmp1297:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 208
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1298:
# %bb.96:                               # %.noexc126
	ld.d	$a1, $sp, 208
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB57_97:                              # %._crit_edge.i.i.i124
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB57_101
# %bb.98:                               # %._crit_edge.i.i.i124
	bnez	$a1, .LBB57_100
# %bb.99:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB57_101
.LBB57_100:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB57_101:
	ld.d	$a2, $sp, 208
	ld.d	$a1, $sp, 112
	st.d	$a2, $sp, 120
.Ltmp1300:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1301:
# %bb.102:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit129
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB57_127
# %bb.103:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i170
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB57_105
# %bb.104:
	ld.bu	$a0, $s1, 67
	b	.LBB57_107
.LBB57_105:
.Ltmp1302:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1303:
# %bb.106:                              # %.noexc174
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp1304:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp1305:
.LBB57_107:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp1306:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1307:
# %bb.108:                              # %.noexc176
.Ltmp1308:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1309:
# %bb.109:                              # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 112
	beq	$a0, $s2, .LBB57_111
# %bb.110:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i131
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_111:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit133
	ld.d	$a0, $sp, 144
	beq	$a0, $s3, .LBB57_124
# %bb.112:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i134
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB57_124
.LBB57_113:
	srli.d	$a2, $a1, 2
.LBB57_114:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB57_115:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit158
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.90)
	addi.d	$a1, $a0, %pc_lo12(.L.str.90)
	ori	$a2, $zero, 57
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB57_126
# %bb.116:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i180
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB57_118
# %bb.117:
	ld.bu	$a0, $s1, 67
	b	.LBB57_119
.LBB57_118:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB57_119:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit184
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.91)
	addi.d	$a1, $a0, %pc_lo12(.L.str.91)
	ori	$a2, $zero, 52
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB57_126
# %bb.120:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i186
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB57_122
# %bb.121:
	ld.bu	$a0, $s1, 67
	b	.LBB57_123
.LBB57_122:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB57_123:                             # %.thread
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.LBB57_124:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit136
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB57_125:                             # %.loopexit
	ld.d	$s8, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 280                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 288                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 296                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 304
	ret
.LBB57_126:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB57_127:
.Ltmp1310:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1311:
# %bb.128:                              # %.noexc173
.LBB57_129:
.Ltmp1299:
	move	$fp, $a0
	b	.LBB57_135
.LBB57_130:
.Ltmp1296:
	move	$fp, $a0
	b	.LBB57_135
.LBB57_131:
.Ltmp1290:
	ld.d	$a2, $sp, 176
	move	$fp, $a0
	beq	$a2, $s3, .LBB57_143
# %bb.132:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i91
	ld.d	$a0, $sp, 192
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB57_142
.LBB57_133:
.Ltmp1312:
	ld.d	$a2, $sp, 112
	move	$fp, $a0
	beq	$a2, $s2, .LBB57_135
# %bb.134:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i137
	ld.d	$a0, $sp, 128
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_135:
	ld.d	$a0, $sp, 144
	beq	$a0, $s3, .LBB57_143
# %bb.136:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i140
	ld.d	$a1, $sp, 160
	b	.LBB57_141
.LBB57_137:
.Ltmp1293:
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	beq	$a2, $s6, .LBB57_139
# %bb.138:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i159
	ld.d	$a0, $sp, 64
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_139:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit161
	ld.d	$a0, $sp, 80
	addi.d	$a1, $sp, 96
	beq	$a0, $a1, .LBB57_143
# %bb.140:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i162
	ld.d	$a1, $sp, 96
.LBB57_141:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit93
	addi.d	$a1, $a1, 1
.LBB57_142:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit93
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB57_143:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit93
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end57:
	.size	_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end57-_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table57:
.Lexception28:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Lfunc_begin28-.Lfunc_begin28  # >> Call Site 1 <<
	.uleb128 .Ltmp1288-.Lfunc_begin28       #   Call between .Lfunc_begin28 and .Ltmp1288
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1288-.Lfunc_begin28       # >> Call Site 2 <<
	.uleb128 .Ltmp1289-.Ltmp1288            #   Call between .Ltmp1288 and .Ltmp1289
	.uleb128 .Ltmp1290-.Lfunc_begin28       #     jumps to .Ltmp1290
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1289-.Lfunc_begin28       # >> Call Site 3 <<
	.uleb128 .Ltmp1291-.Ltmp1289            #   Call between .Ltmp1289 and .Ltmp1291
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1291-.Lfunc_begin28       # >> Call Site 4 <<
	.uleb128 .Ltmp1292-.Ltmp1291            #   Call between .Ltmp1291 and .Ltmp1292
	.uleb128 .Ltmp1293-.Lfunc_begin28       #     jumps to .Ltmp1293
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1292-.Lfunc_begin28       # >> Call Site 5 <<
	.uleb128 .Ltmp1294-.Ltmp1292            #   Call between .Ltmp1292 and .Ltmp1294
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1294-.Lfunc_begin28       # >> Call Site 6 <<
	.uleb128 .Ltmp1295-.Ltmp1294            #   Call between .Ltmp1294 and .Ltmp1295
	.uleb128 .Ltmp1296-.Lfunc_begin28       #     jumps to .Ltmp1296
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1297-.Lfunc_begin28       # >> Call Site 7 <<
	.uleb128 .Ltmp1298-.Ltmp1297            #   Call between .Ltmp1297 and .Ltmp1298
	.uleb128 .Ltmp1299-.Lfunc_begin28       #     jumps to .Ltmp1299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1298-.Lfunc_begin28       # >> Call Site 8 <<
	.uleb128 .Ltmp1300-.Ltmp1298            #   Call between .Ltmp1298 and .Ltmp1300
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1300-.Lfunc_begin28       # >> Call Site 9 <<
	.uleb128 .Ltmp1309-.Ltmp1300            #   Call between .Ltmp1300 and .Ltmp1309
	.uleb128 .Ltmp1312-.Lfunc_begin28       #     jumps to .Ltmp1312
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1309-.Lfunc_begin28       # >> Call Site 10 <<
	.uleb128 .Ltmp1310-.Ltmp1309            #   Call between .Ltmp1309 and .Ltmp1310
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1310-.Lfunc_begin28       # >> Call Site 11 <<
	.uleb128 .Ltmp1311-.Ltmp1310            #   Call between .Ltmp1310 and .Ltmp1311
	.uleb128 .Ltmp1312-.Lfunc_begin28       #     jumps to .Ltmp1312
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1311-.Lfunc_begin28       # >> Call Site 12 <<
	.uleb128 .Lfunc_end57-.Ltmp1311         #   Call between .Ltmp1311 and .Lfunc_end57
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end28:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd16handle_star_starEv  # -- Begin function _ZN2PP3Cmd16handle_star_starEv
	.p2align	5
	.type	_ZN2PP3Cmd16handle_star_starEv,@function
_ZN2PP3Cmd16handle_star_starEv:         # @_ZN2PP3Cmd16handle_star_starEv
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception29
# %bb.0:
	addi.d	$sp, $sp, -432
	.cfi_def_cfa_offset 432
	st.d	$ra, $sp, 424                   # 8-byte Folded Spill
	st.d	$fp, $sp, 416                   # 8-byte Folded Spill
	st.d	$s0, $sp, 408                   # 8-byte Folded Spill
	st.d	$s1, $sp, 400                   # 8-byte Folded Spill
	st.d	$s2, $sp, 392                   # 8-byte Folded Spill
	st.d	$s3, $sp, 384                   # 8-byte Folded Spill
	st.d	$s4, $sp, 376                   # 8-byte Folded Spill
	st.d	$s5, $sp, 368                   # 8-byte Folded Spill
	st.d	$s6, $sp, 360                   # 8-byte Folded Spill
	st.d	$s7, $sp, 352                   # 8-byte Folded Spill
	st.d	$s8, $sp, 344                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	move	$s1, $zero
	move	$s6, $zero
	move	$s7, $zero
	addi.d	$a0, $a0, 160
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	addi.d	$s0, $sp, 104
	ori	$s4, $zero, 0
	lu32i.d	$s4, -1
	ori	$s5, $zero, 3
	addi.w	$s8, $zero, -1
	lu12i.w	$a0, 2
	ori	$a0, $a0, 2602
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	b	.LBB58_2
	.p2align	4, , 16
.LBB58_1:                               #   in Loop: Header=BB58_2 Depth=1
	addi.d	$s7, $s7, 1
	addi.d	$s6, $s6, 128
	move	$s1, $s2
.LBB58_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 32
	add.d	$a2, $a2, $s4
	srai.d	$a2, $a2, 32
	bge	$s7, $a2, .LBB58_74
# %bb.3:                                #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s7, $a2
	bltz	$a3, .LBB58_6
# %bb.4:                                #   in Loop: Header=BB58_2 Depth=1
	bltu	$s5, $a3, .LBB58_7
# %bb.5:                                #   in Loop: Header=BB58_2 Depth=1
	add.d	$a0, $a1, $s6
	b	.LBB58_9
	.p2align	4, , 16
.LBB58_6:                               #   in Loop: Header=BB58_2 Depth=1
	srai.d	$a1, $a3, 2
	b	.LBB58_8
	.p2align	4, , 16
.LBB58_7:                               #   in Loop: Header=BB58_2 Depth=1
	srli.d	$a1, $a3, 2
.LBB58_8:                               #   in Loop: Header=BB58_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s7, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB58_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB58_2 Depth=1
	st.d	$s0, $sp, 88
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 312
	move	$a0, $s0
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB58_11
# %bb.10:                               # %.noexc.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 312
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 312
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB58_11:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	beq	$a1, $s8, .LBB58_15
# %bb.12:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	bnez	$a1, .LBB58_14
# %bb.13:                               #   in Loop: Header=BB58_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB58_15
	.p2align	4, , 16
.LBB58_14:                              #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB58_15:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 312
	ld.d	$a0, $sp, 88
	st.d	$a1, $sp, 96
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB58_20
# %bb.16:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 42
	bne	$a1, $a2, .LBB58_20
# %bb.17:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s7, $a1
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB58_59
# %bb.18:                               #   in Loop: Header=BB58_2 Depth=1
	bltu	$s5, $a3, .LBB58_60
# %bb.19:                               #   in Loop: Header=BB58_2 Depth=1
	add.d	$a0, $a2, $s6
	b	.LBB58_62
	.p2align	4, , 16
.LBB58_20:                              #   in Loop: Header=BB58_2 Depth=1
	move	$s3, $zero
	beq	$a0, $s0, .LBB58_22
.LBB58_21:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB58_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
                                        #   in Loop: Header=BB58_2 Depth=1
	addi.w	$s2, $s1, 1
	beqz	$s3, .LBB58_1
# %bb.23:                               #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a3, $fp, 176
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 200
	sub.d	$a0, $a3, $a0
	srai.d	$a0, $a0, 7
	add.d	$a2, $s7, $a0
	bltz	$a2, .LBB58_26
# %bb.24:                               #   in Loop: Header=BB58_2 Depth=1
	bltu	$s5, $a2, .LBB58_27
# %bb.25:                               #   in Loop: Header=BB58_2 Depth=1
	add.d	$a0, $a3, $s6
	ld.w	$s3, $a0, 80
	ld.w	$s4, $a0, 84
	b	.LBB58_29
.LBB58_26:                              #   in Loop: Header=BB58_2 Depth=1
	srai.d	$a3, $a2, 2
	b	.LBB58_28
.LBB58_27:                              #   in Loop: Header=BB58_2 Depth=1
	srli.d	$a3, $a2, 2
.LBB58_28:                              #   in Loop: Header=BB58_2 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a1, $a1, $a4
	andi	$a2, $a2, 3
	slli.d	$a2, $a2, 7
	add.d	$a2, $a1, $a2
	ld.w	$s3, $a2, 80
	ld.w	$s4, $a2, 84
	slli.d	$a2, $a3, 2
	sub.d	$a0, $a0, $a2
	add.d	$a0, $s7, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB58_29:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit49
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $a0, 96
	ld.d	$s5, $a0, 88
	addi.d	$a0, $sp, 264
	st.d	$a0, $sp, 248
	st.d	$a1, $sp, 88
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB58_31
# %bb.30:                               # %.noexc.i.i51
                                        #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a0, $sp, 248
	addi.d	$a1, $sp, 88
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 88
	st.d	$a0, $sp, 248
	st.d	$a1, $sp, 264
.LBB58_31:                              # %._crit_edge.i.i.i50
                                        #   in Loop: Header=BB58_2 Depth=1
	beq	$a1, $s8, .LBB58_35
# %bb.32:                               # %._crit_edge.i.i.i50
                                        #   in Loop: Header=BB58_2 Depth=1
	bnez	$a1, .LBB58_34
# %bb.33:                               #   in Loop: Header=BB58_2 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB58_35
.LBB58_34:                              #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB58_35:                              #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 88
	st.d	$a1, $sp, 256
	addi.d	$a2, $sp, 232
	st.d	$a2, $sp, 216
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	st.h	$a0, $sp, 232
	st.b	$zero, $sp, 234
	ld.h	$a0, $a2, 0
	ld.b	$a2, $a2, 2
	ori	$a4, $zero, 2
	st.d	$a4, $sp, 224
	addi.d	$a3, $sp, 72
	st.d	$a3, $sp, 56
	st.h	$a0, $a3, 0
	st.b	$a2, $a3, 2
	ld.d	$s5, $sp, 248
	st.d	$a4, $sp, 64
	addi.d	$a0, $sp, 40
	st.d	$a0, $sp, 24
	st.d	$a1, $sp, 312
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB58_38
# %bb.36:                               # %.noexc.i57
                                        #   in Loop: Header=BB58_2 Depth=1
.Ltmp1316:
	addi.d	$a0, $sp, 24
	addi.d	$a1, $sp, 312
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1317:
# %bb.37:                               # %.noexc58
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 312
	st.d	$a0, $sp, 24
	st.d	$a1, $sp, 40
.LBB58_38:                              # %._crit_edge.i.i56
                                        #   in Loop: Header=BB58_2 Depth=1
	beq	$a1, $s8, .LBB58_42
# %bb.39:                               # %._crit_edge.i.i56
                                        #   in Loop: Header=BB58_2 Depth=1
	bnez	$a1, .LBB58_41
# %bb.40:                               #   in Loop: Header=BB58_2 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB58_42
.LBB58_41:                              #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB58_42:                              #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a0, $sp, 312
	ld.d	$a5, $fp, 40
	st.d	$a0, $sp, 32
.Ltmp1319:
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	addi.d	$a4, $sp, 24
	move	$a2, $s3
	move	$a3, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp1320:
# %bb.43:                               #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a0, $sp, 24
	addi.d	$a1, $sp, 40
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ori	$s5, $zero, 3
	beq	$a0, $a1, .LBB58_45
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i60
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 40
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB58_45:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit62
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	beq	$a0, $a1, .LBB58_47
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i63
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB58_47:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65
                                        #   in Loop: Header=BB58_2 Depth=1
.Ltmp1322:
	move	$a0, $fp
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp1323:
# %bb.48:                               # %.noexc66
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a4, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a4, $a1
	srai.d	$a3, $a2, 7
	add.d	$a2, $s7, $a3
	bltz	$a2, .LBB58_51
# %bb.49:                               #   in Loop: Header=BB58_2 Depth=1
	bltu	$s5, $a2, .LBB58_52
# %bb.50:                               #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a2, $fp, 192
	add.d	$a3, $a4, $s6
	b	.LBB58_54
.LBB58_51:                              #   in Loop: Header=BB58_2 Depth=1
	srai.d	$a4, $a2, 2
	b	.LBB58_53
.LBB58_52:                              #   in Loop: Header=BB58_2 Depth=1
	srli.d	$a4, $a2, 2
.LBB58_53:                              #   in Loop: Header=BB58_2 Depth=1
	slli.d	$a1, $a4, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a4, $a0, 3
	addi.d	$a2, $a1, 512
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	add.d	$a3, $s7, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
.LBB58_54:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i
                                        #   in Loop: Header=BB58_2 Depth=1
	st.d	$a3, $sp, 312
	st.d	$a1, $sp, 320
	st.d	$a2, $sp, 328
	st.d	$a0, $sp, 336
.Ltmp1324:
	addi.d	$a0, $sp, 280
	addi.d	$a2, $sp, 312
	addi.d	$a3, $sp, 88
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1325:
# %bb.55:                               #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 216
	addi.d	$a1, $sp, 232
	beq	$a0, $a1, .LBB58_57
# %bb.56:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i68
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB58_57:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit70
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	beq	$a0, $a1, .LBB58_1
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i71
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB58_1
.LBB58_59:                              #   in Loop: Header=BB58_2 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB58_61
.LBB58_60:                              #   in Loop: Header=BB58_2 Depth=1
	srli.d	$a2, $a3, 2
.LBB58_61:                              #   in Loop: Header=BB58_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s7, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
.LBB58_62:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit35
                                        #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a0, $a0, 128
	addi.d	$a2, $sp, 328
	st.d	$a2, $sp, 312
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 280
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB58_65
# %bb.63:                               # %.noexc.i.i37
                                        #   in Loop: Header=BB58_2 Depth=1
.Ltmp1313:
	addi.d	$a0, $sp, 312
	addi.d	$a1, $sp, 280
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1314:
# %bb.64:                               # %.noexc
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 280
	st.d	$a0, $sp, 312
	st.d	$a1, $sp, 328
.LBB58_65:                              # %._crit_edge.i.i.i36
                                        #   in Loop: Header=BB58_2 Depth=1
	beq	$a1, $s8, .LBB58_69
# %bb.66:                               # %._crit_edge.i.i.i36
                                        #   in Loop: Header=BB58_2 Depth=1
	bnez	$a1, .LBB58_68
# %bb.67:                               #   in Loop: Header=BB58_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB58_69
.LBB58_68:                              #   in Loop: Header=BB58_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB58_69:                              #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 280
	ld.d	$a0, $sp, 312
	st.d	$a1, $sp, 320
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB58_71
# %bb.70:                               #   in Loop: Header=BB58_2 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -42
	sltui	$s3, $a1, 1
	addi.d	$a1, $sp, 328
	bne	$a0, $a1, .LBB58_72
	b	.LBB58_73
.LBB58_71:                              #   in Loop: Header=BB58_2 Depth=1
	move	$s3, $zero
	addi.d	$a1, $sp, 328
	beq	$a0, $a1, .LBB58_73
.LBB58_72:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB58_73:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB58_2 Depth=1
	ld.d	$a0, $sp, 88
	bne	$a0, $s0, .LBB58_21
	b	.LBB58_22
.LBB58_74:
	ld.d	$s8, $sp, 344                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 352                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 360                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 368                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 376                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 384                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 392                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 400                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 408                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 416                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 424                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 432
	ret
.LBB58_75:
.Ltmp1315:
	ld.d	$a2, $sp, 88
	move	$fp, $a0
	beq	$a2, $s0, .LBB58_88
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i77
	ld.d	$a0, $sp, 104
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB58_87
.LBB58_77:
.Ltmp1318:
	move	$fp, $a0
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	beq	$a0, $a1, .LBB58_80
	b	.LBB58_83
.LBB58_78:
.Ltmp1321:
	ld.d	$a2, $sp, 24
	move	$fp, $a0
	addi.d	$a0, $sp, 40
	bne	$a2, $a0, .LBB58_82
# %bb.79:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit82
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	bne	$a0, $a1, .LBB58_83
.LBB58_80:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit85
	ld.d	$a0, $sp, 216
	addi.d	$a1, $sp, 232
	bne	$a0, $a1, .LBB58_85
.LBB58_81:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit88
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	bne	$a0, $a1, .LBB58_86
	b	.LBB58_88
.LBB58_82:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i80
	ld.d	$a0, $sp, 40
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	beq	$a0, $a1, .LBB58_80
.LBB58_83:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i83
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 216
	addi.d	$a1, $sp, 232
	beq	$a0, $a1, .LBB58_81
	b	.LBB58_85
.LBB58_84:
.Ltmp1326:
	move	$fp, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 216
	addi.d	$a1, $sp, 232
	beq	$a0, $a1, .LBB58_81
.LBB58_85:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i86
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 248
	addi.d	$a1, $sp, 264
	beq	$a0, $a1, .LBB58_88
.LBB58_86:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i89
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
.LBB58_87:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB58_88:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end58:
	.size	_ZN2PP3Cmd16handle_star_starEv, .Lfunc_end58-_ZN2PP3Cmd16handle_star_starEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table58:
.Lexception29:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Lfunc_begin29-.Lfunc_begin29  # >> Call Site 1 <<
	.uleb128 .Ltmp1316-.Lfunc_begin29       #   Call between .Lfunc_begin29 and .Ltmp1316
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1316-.Lfunc_begin29       # >> Call Site 2 <<
	.uleb128 .Ltmp1317-.Ltmp1316            #   Call between .Ltmp1316 and .Ltmp1317
	.uleb128 .Ltmp1318-.Lfunc_begin29       #     jumps to .Ltmp1318
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1317-.Lfunc_begin29       # >> Call Site 3 <<
	.uleb128 .Ltmp1319-.Ltmp1317            #   Call between .Ltmp1317 and .Ltmp1319
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1319-.Lfunc_begin29       # >> Call Site 4 <<
	.uleb128 .Ltmp1320-.Ltmp1319            #   Call between .Ltmp1319 and .Ltmp1320
	.uleb128 .Ltmp1321-.Lfunc_begin29       #     jumps to .Ltmp1321
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1320-.Lfunc_begin29       # >> Call Site 5 <<
	.uleb128 .Ltmp1322-.Ltmp1320            #   Call between .Ltmp1320 and .Ltmp1322
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1322-.Lfunc_begin29       # >> Call Site 6 <<
	.uleb128 .Ltmp1325-.Ltmp1322            #   Call between .Ltmp1322 and .Ltmp1325
	.uleb128 .Ltmp1326-.Lfunc_begin29       #     jumps to .Ltmp1326
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1325-.Lfunc_begin29       # >> Call Site 7 <<
	.uleb128 .Ltmp1313-.Ltmp1325            #   Call between .Ltmp1325 and .Ltmp1313
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1313-.Lfunc_begin29       # >> Call Site 8 <<
	.uleb128 .Ltmp1314-.Ltmp1313            #   Call between .Ltmp1313 and .Ltmp1314
	.uleb128 .Ltmp1315-.Lfunc_begin29       #     jumps to .Ltmp1315
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1314-.Lfunc_begin29       # >> Call Site 9 <<
	.uleb128 .Lfunc_end58-.Ltmp1314         #   Call between .Ltmp1314 and .Lfunc_end58
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end29:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd10handle_opsEv        # -- Begin function _ZN2PP3Cmd10handle_opsEv
	.p2align	5
	.type	_ZN2PP3Cmd10handle_opsEv,@function
_ZN2PP3Cmd10handle_opsEv:               # @_ZN2PP3Cmd10handle_opsEv
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception30
# %bb.0:
	addi.d	$sp, $sp, -512
	.cfi_def_cfa_offset 512
	st.d	$ra, $sp, 504                   # 8-byte Folded Spill
	st.d	$fp, $sp, 496                   # 8-byte Folded Spill
	st.d	$s0, $sp, 488                   # 8-byte Folded Spill
	st.d	$s1, $sp, 480                   # 8-byte Folded Spill
	st.d	$s2, $sp, 472                   # 8-byte Folded Spill
	st.d	$s3, $sp, 464                   # 8-byte Folded Spill
	st.d	$s4, $sp, 456                   # 8-byte Folded Spill
	st.d	$s5, $sp, 448                   # 8-byte Folded Spill
	st.d	$s6, $sp, 440                   # 8-byte Folded Spill
	st.d	$s7, $sp, 432                   # 8-byte Folded Spill
	st.d	$s8, $sp, 424                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	st.d	$zero, $sp, 352
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 32                   # 16-byte Folded Spill
	vst	$vr0, $sp, 336
	addi.d	$s0, $sp, 168
	st.d	$s0, $sp, 152
	lu12i.w	$a0, 190230
	ori	$a0, $a0, 1326
	st.w	$a0, $sp, 168
	ori	$a0, $zero, 4
	st.d	$a0, $sp, 160
	st.b	$zero, $sp, 172
.Ltmp1327:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1328:
# %bb.1:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	st.d	$s0, $sp, 152
	lu12i.w	$s1, 190038
	ori	$a1, $s1, 3630
	ld.d	$a0, $sp, 344
	ld.d	$a2, $sp, 352
	st.w	$a1, $sp, 168
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 160
	st.b	$zero, $sp, 172
	beq	$a0, $a2, .LBB59_6
# %bb.4:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_9
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i94
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_10
.LBB59_6:
.Ltmp1330:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1331:
# %bb.7:                                # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit98
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_11
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i99
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_11
.LBB59_9:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i96
	ld.b	$a2, $s0, 4
	st.b	$a2, $a1, 4
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_10:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit98.thread
	ori	$a1, $zero, 4
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_11:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit101
	st.d	$s0, $sp, 152
	lu12i.w	$s2, 190278
	ori	$a1, $s2, 1838
	ld.d	$a0, $sp, 344
	ld.d	$a2, $sp, 352
	st.w	$a1, $sp, 168
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 160
	st.b	$zero, $sp, 172
	beq	$a0, $a2, .LBB59_14
# %bb.12:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_17
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i107
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_18
.LBB59_14:
.Ltmp1333:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1334:
# %bb.15:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit111
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_19
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i112
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_19
.LBB59_17:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i109
	ld.b	$a2, $s0, 4
	st.b	$a2, $a1, 4
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_18:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit111.thread
	ori	$a1, $zero, 4
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit114
	st.d	$s0, $sp, 152
	ori	$a1, $s1, 1838
	ld.d	$a0, $sp, 344
	ld.d	$a2, $sp, 352
	st.w	$a1, $sp, 168
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 160
	st.b	$zero, $sp, 172
	beq	$a0, $a2, .LBB59_22
# %bb.20:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_25
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i120
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_26
.LBB59_22:
.Ltmp1336:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1337:
# %bb.23:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit124
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_27
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i125
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_27
.LBB59_25:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i122
	ld.b	$a2, $s0, 4
	st.b	$a2, $a1, 4
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_26:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit124.thread
	ori	$a1, $zero, 4
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit127
	st.d	$s0, $sp, 152
	ori	$a1, $s2, 3118
	ld.d	$a0, $sp, 344
	ld.d	$a2, $sp, 352
	st.w	$a1, $sp, 168
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 160
	st.b	$zero, $sp, 172
	beq	$a0, $a2, .LBB59_30
# %bb.28:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_33
# %bb.29:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i133
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_34
.LBB59_30:
.Ltmp1339:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1340:
# %bb.31:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit137
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_35
# %bb.32:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i138
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_35
.LBB59_33:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i135
	ld.b	$a2, $s0, 4
	st.b	$a2, $a1, 4
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_34:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit137.thread
	ori	$a1, $zero, 4
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_35:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit140
	st.d	$s0, $sp, 152
	ori	$a1, $s1, 3118
	ld.d	$a0, $sp, 344
	ld.d	$a2, $sp, 352
	st.w	$a1, $sp, 168
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 160
	st.b	$zero, $sp, 172
	beq	$a0, $a2, .LBB59_38
# %bb.36:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_41
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i146
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_42
.LBB59_38:
.Ltmp1342:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1343:
# %bb.39:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit150
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_43
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i151
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_43
.LBB59_41:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i148
	ld.b	$a2, $s0, 4
	st.b	$a2, $a1, 4
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_42:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit150.thread
	ori	$a1, $zero, 4
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_43:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit153
	pcalau12i	$a0, %pc_hi20(.L.str.123)
	addi.d	$a0, $a0, %pc_lo12(.L.str.123)
	ld.w	$a1, $a0, 0
	st.d	$s0, $sp, 152
	ld.h	$a2, $a0, 4
	st.w	$a1, $sp, 168
	ld.d	$a0, $sp, 344
	ld.d	$a1, $sp, 352
	st.h	$a2, $sp, 172
	ori	$a2, $zero, 6
	st.d	$a2, $sp, 160
	st.b	$zero, $sp, 174
	beq	$a0, $a1, .LBB59_46
# %bb.44:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_49
# %bb.45:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i159
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_50
.LBB59_46:
.Ltmp1345:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1346:
# %bb.47:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit163
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_51
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i164
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_51
.LBB59_49:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i161
	ld.w	$a2, $s0, 3
	st.w	$a2, $a1, 3
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_50:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit163.thread
	ori	$a1, $zero, 6
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_51:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit166
	pcalau12i	$a0, %pc_hi20(.L.str.124)
	addi.d	$a0, $a0, %pc_lo12(.L.str.124)
	ld.w	$a1, $a0, 0
	st.d	$s0, $sp, 152
	ld.h	$a2, $a0, 4
	st.w	$a1, $sp, 168
	ld.d	$a0, $sp, 344
	ld.d	$a1, $sp, 352
	st.h	$a2, $sp, 172
	ori	$a2, $zero, 6
	st.d	$a2, $sp, 160
	st.b	$zero, $sp, 174
	beq	$a0, $a1, .LBB59_54
# %bb.52:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_57
# %bb.53:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i172
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_58
.LBB59_54:
.Ltmp1348:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1349:
# %bb.55:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit176
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_59
# %bb.56:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i177
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_59
.LBB59_57:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i174
	ld.w	$a2, $s0, 3
	st.w	$a2, $a1, 3
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_58:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit176.thread
	ori	$a1, $zero, 6
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_59:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit179
	pcalau12i	$a0, %pc_hi20(.L.str.125)
	addi.d	$a0, $a0, %pc_lo12(.L.str.125)
	ld.w	$a1, $a0, 0
	st.d	$s0, $sp, 152
	ld.h	$a2, $a0, 4
	st.w	$a1, $sp, 168
	ld.d	$a0, $sp, 344
	ld.d	$a1, $sp, 352
	st.h	$a2, $sp, 172
	ori	$a2, $zero, 6
	st.d	$a2, $sp, 160
	st.b	$zero, $sp, 174
	beq	$a0, $a1, .LBB59_62
# %bb.60:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_65
# %bb.61:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i185
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_66
.LBB59_62:
.Ltmp1351:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1352:
# %bb.63:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit189
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_67
# %bb.64:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i190
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_67
.LBB59_65:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i187
	ld.w	$a2, $s0, 3
	st.w	$a2, $a1, 3
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_66:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit189.thread
	ori	$a1, $zero, 6
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_67:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit192
	pcalau12i	$a0, %pc_hi20(.L.str.126)
	addi.d	$a0, $a0, %pc_lo12(.L.str.126)
	ld.w	$a1, $a0, 0
	st.d	$s0, $sp, 152
	ld.h	$a2, $a0, 4
	st.w	$a1, $sp, 168
	ld.d	$a0, $sp, 344
	ld.d	$a1, $sp, 352
	st.h	$a2, $sp, 172
	ori	$a2, $zero, 6
	st.d	$a2, $sp, 160
	st.b	$zero, $sp, 174
	beq	$a0, $a1, .LBB59_70
# %bb.68:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_73
# %bb.69:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i198
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_74
.LBB59_70:
.Ltmp1354:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1355:
# %bb.71:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit202
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_75
# %bb.72:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i203
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_75
.LBB59_73:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i200
	ld.w	$a2, $s0, 3
	st.w	$a2, $a1, 3
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_74:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit202.thread
	ori	$a1, $zero, 6
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_75:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit205
	pcalau12i	$a0, %pc_hi20(.L.str.127)
	addi.d	$a0, $a0, %pc_lo12(.L.str.127)
	ld.w	$a1, $a0, 0
	st.d	$s0, $sp, 152
	ld.h	$a2, $a0, 4
	st.w	$a1, $sp, 168
	ld.d	$a0, $sp, 344
	ld.d	$a1, $sp, 352
	st.h	$a2, $sp, 172
	ori	$a2, $zero, 6
	st.d	$a2, $sp, 160
	st.b	$zero, $sp, 174
	beq	$a0, $a1, .LBB59_78
# %bb.76:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_81
# %bb.77:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i211
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_82
.LBB59_78:
.Ltmp1357:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1358:
# %bb.79:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit215
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_83
# %bb.80:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i216
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_83
.LBB59_81:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i213
	ld.w	$a2, $s0, 3
	st.w	$a2, $a1, 3
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_82:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit215.thread
	ori	$a1, $zero, 6
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_83:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit218
	pcalau12i	$a0, %pc_hi20(.L.str.128)
	addi.d	$a0, $a0, %pc_lo12(.L.str.128)
	ld.w	$a1, $a0, 0
	st.d	$s0, $sp, 152
	ld.h	$a2, $a0, 4
	st.w	$a1, $sp, 168
	ld.d	$a0, $sp, 344
	ld.d	$a1, $sp, 352
	st.h	$a2, $sp, 172
	ori	$a2, $zero, 6
	st.d	$a2, $sp, 160
	st.b	$zero, $sp, 174
	beq	$a0, $a1, .LBB59_86
# %bb.84:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_89
# %bb.85:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i224
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_90
.LBB59_86:
.Ltmp1360:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1361:
# %bb.87:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit228
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_91
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i229
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_91
.LBB59_89:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i226
	ld.w	$a2, $s0, 3
	st.w	$a2, $a1, 3
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_90:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit228.thread
	ori	$a1, $zero, 6
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_91:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit231
	pcalau12i	$a0, %pc_hi20(.L.str.129)
	addi.d	$a0, $a0, %pc_lo12(.L.str.129)
	ld.w	$a1, $a0, 0
	st.d	$s0, $sp, 152
	ld.b	$a2, $a0, 4
	st.w	$a1, $sp, 168
	ld.d	$a0, $sp, 344
	ld.d	$a1, $sp, 352
	st.b	$a2, $sp, 172
	ori	$a2, $zero, 5
	st.d	$a2, $sp, 160
	st.b	$zero, $sp, 173
	beq	$a0, $a1, .LBB59_94
# %bb.92:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_97
# %bb.93:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i237
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_98
.LBB59_94:
.Ltmp1363:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1364:
# %bb.95:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit241
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_99
# %bb.96:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i242
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_99
.LBB59_97:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i239
	ld.h	$a2, $s0, 4
	st.h	$a2, $a1, 4
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_98:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit241.thread
	ori	$a1, $zero, 5
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_99:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit244
	pcalau12i	$a0, %pc_hi20(.L.str.130)
	addi.d	$a0, $a0, %pc_lo12(.L.str.130)
	ld.w	$a1, $a0, 0
	st.d	$s0, $sp, 152
	ld.b	$a2, $a0, 4
	st.w	$a1, $sp, 168
	ld.d	$a0, $sp, 344
	ld.d	$a1, $sp, 352
	st.b	$a2, $sp, 172
	ori	$a2, $zero, 5
	st.d	$a2, $sp, 160
	st.b	$zero, $sp, 173
	beq	$a0, $a1, .LBB59_102
# %bb.100:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_105
# %bb.101:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i250
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_106
.LBB59_102:
.Ltmp1366:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1367:
# %bb.103:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit254
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_107
# %bb.104:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i255
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_107
.LBB59_105:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i252
	ld.h	$a2, $s0, 4
	st.h	$a2, $a1, 4
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_106:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit254.thread
	ori	$a1, $zero, 5
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_107:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit257
	st.d	$s0, $sp, 152
	lu12i.w	$a0, 190246
	ori	$a1, $a0, 3886
	ld.d	$a0, $sp, 344
	ld.d	$a2, $sp, 352
	st.w	$a1, $sp, 168
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 160
	st.b	$zero, $sp, 172
	beq	$a0, $a2, .LBB59_110
# %bb.108:
	addi.d	$a1, $a0, 16
	st.d	$a1, $a0, 0
	ld.d	$a2, $sp, 152
	beq	$a2, $s0, .LBB59_113
# %bb.109:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i263
	st.d	$a2, $a0, 0
	ld.d	$a1, $sp, 168
	st.d	$a1, $a0, 16
	b	.LBB59_114
.LBB59_110:
.Ltmp1369:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1370:
# %bb.111:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit267
	ld.d	$a0, $sp, 152
	beq	$a0, $s0, .LBB59_115
# %bb.112:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i268
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_115
.LBB59_113:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i265
	ld.b	$a2, $s0, 4
	st.b	$a2, $a1, 4
	ld.w	$a2, $s0, 0
	st.w	$a2, $a1, 0
.LBB59_114:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit267.thread
	ori	$a1, $zero, 4
	st.d	$a1, $a0, 8
	st.d	$s0, $sp, 152
	st.d	$zero, $sp, 160
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 344
.LBB59_115:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit270
	move	$s1, $zero
	addi.d	$a0, $fp, 160
	st.d	$a0, $sp, 56                    # 8-byte Folded Spill
	addi.d	$s8, $sp, 136
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 80                    # 8-byte Folded Spill
	b	.LBB59_117
	.p2align	4, , 16
.LBB59_116:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit400
                                        #   in Loop: Header=BB59_117 Depth=1
	addi.w	$s1, $s1, 1
.LBB59_117:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB59_133 Depth 2
                                        #       Child Loop BB59_138 Depth 3
                                        #         Child Loop BB59_178 Depth 4
                                        #         Child Loop BB59_181 Depth 4
                                        #       Child Loop BB59_206 Depth 3
                                        #       Child Loop BB59_267 Depth 3
                                        #       Child Loop BB59_274 Depth 3
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB59_283
# %bb.118:                              #   in Loop: Header=BB59_117 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s1
	bltz	$a2, .LBB59_121
# %bb.119:                              #   in Loop: Header=BB59_117 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB59_122
# %bb.120:                              #   in Loop: Header=BB59_117 Depth=1
	slli.d	$a0, $s1, 7
	add.d	$a0, $a1, $a0
	b	.LBB59_124
	.p2align	4, , 16
.LBB59_121:                             #   in Loop: Header=BB59_117 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB59_123
	.p2align	4, , 16
.LBB59_122:                             #   in Loop: Header=BB59_117 Depth=1
	srli.d	$a1, $a2, 2
.LBB59_123:                             #   in Loop: Header=BB59_117 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB59_124:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB59_117 Depth=1
	addi.d	$a2, $sp, 320
	st.d	$a2, $sp, 304
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	st.d	$a1, $sp, 152
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB59_127
# %bb.125:                              # %.noexc.i.i
                                        #   in Loop: Header=BB59_117 Depth=1
.Ltmp1372:
	addi.d	$a0, $sp, 304
	addi.d	$a1, $sp, 152
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1373:
# %bb.126:                              # %.noexc317
                                        #   in Loop: Header=BB59_117 Depth=1
	ld.d	$a1, $sp, 152
	st.d	$a0, $sp, 304
	st.d	$a1, $sp, 320
.LBB59_127:                             # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB59_117 Depth=1
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB59_131
# %bb.128:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB59_117 Depth=1
	bnez	$a1, .LBB59_130
# %bb.129:                              #   in Loop: Header=BB59_117 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB59_131
	.p2align	4, , 16
.LBB59_130:                             #   in Loop: Header=BB59_117 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB59_131:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB59_117 Depth=1
	ld.d	$a1, $sp, 344
	ld.d	$a0, $sp, 336
	ld.d	$a2, $sp, 152
	sub.d	$a1, $a1, $a0
	srli.d	$a1, $a1, 5
	addi.w	$a1, $a1, 0
	st.d	$a2, $sp, 312
	blez	$a1, .LBB59_281
# %bb.132:                              # %.lr.ph747.preheader
                                        #   in Loop: Header=BB59_117 Depth=1
	move	$s3, $zero
	.p2align	4, , 16
.LBB59_133:                             # %.lr.ph747
                                        #   Parent Loop BB59_117 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB59_138 Depth 3
                                        #         Child Loop BB59_178 Depth 4
                                        #         Child Loop BB59_181 Depth 4
                                        #       Child Loop BB59_206 Depth 3
                                        #       Child Loop BB59_267 Depth 3
                                        #       Child Loop BB59_274 Depth 3
	st.d	$zero, $sp, 296
	vld	$vr0, $sp, 32                   # 16-byte Folded Reload
	vst	$vr0, $sp, 280
	slli.d	$a1, $s3, 5
	add.d	$a1, $a0, $a1
.Ltmp1375:
	addi.d	$a2, $sp, 304
	addi.d	$a3, $sp, 280
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12separate_strERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RSt6vectorIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp1376:
# %bb.134:                              #   in Loop: Header=BB59_133 Depth=2
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	beqz	$a0, .LBB59_271
# %bb.135:                              # %.preheader
                                        #   in Loop: Header=BB59_133 Depth=2
	st.d	$s3, $sp, 24                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 288
	ld.d	$a1, $sp, 280
	sub.d	$a0, $a0, $a1
	srli.d	$a0, $a0, 5
	addi.w	$a0, $a0, 0
	slli.d	$a1, $s1, 7
	st.d	$a1, $sp, 64                    # 8-byte Folded Spill
	blez	$a0, .LBB59_188
# %bb.136:                              # %.lr.ph.preheader
                                        #   in Loop: Header=BB59_133 Depth=2
	move	$s7, $zero
	move	$s3, $zero
	move	$s2, $zero
	move	$s0, $zero
	b	.LBB59_138
	.p2align	4, , 16
.LBB59_137:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit346
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a0, $sp, 288
	ld.d	$a1, $sp, 280
	addi.d	$s7, $s7, 1
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 27
	srai.d	$a0, $a0, 32
	bge	$s7, $a0, .LBB59_189
.LBB59_138:                             # %.lr.ph
                                        #   Parent Loop BB59_117 Depth=1
                                        #     Parent Loop BB59_133 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB59_178 Depth 4
                                        #         Child Loop BB59_181 Depth 4
	ld.d	$a2, $fp, 176
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 200
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s1
	bltz	$a0, .LBB59_141
# %bb.139:                              #   in Loop: Header=BB59_138 Depth=3
	ori	$a3, $zero, 3
	bltu	$a3, $a0, .LBB59_142
# %bb.140:                              #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	add.d	$a0, $a2, $a0
	ld.w	$s4, $a0, 80
	ld.w	$s5, $a0, 84
	b	.LBB59_144
	.p2align	4, , 16
.LBB59_141:                             #   in Loop: Header=BB59_138 Depth=3
	srai.d	$a2, $a0, 2
	b	.LBB59_143
	.p2align	4, , 16
.LBB59_142:                             #   in Loop: Header=BB59_138 Depth=3
	srli.d	$a2, $a0, 2
.LBB59_143:                             #   in Loop: Header=BB59_138 Depth=3
	slli.d	$a3, $a2, 3
	ldx.d	$a1, $a1, $a3
	andi	$a3, $a0, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
	ld.w	$s4, $a3, 80
	ld.w	$s5, $a3, 84
	slli.d	$a2, $a2, 2
	sub.d	$a0, $a0, $a2
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB59_144:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit325
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a1, $a0, 96
	ld.d	$s6, $a0, 88
	addi.d	$a0, $sp, 408
	st.d	$a0, $sp, 392
	st.d	$a1, $sp, 152
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB59_147
# %bb.145:                              # %.noexc.i.i327
                                        #   in Loop: Header=BB59_138 Depth=3
.Ltmp1378:
	addi.d	$a0, $sp, 392
	addi.d	$a1, $sp, 152
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1379:
# %bb.146:                              # %.noexc328
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a1, $sp, 152
	st.d	$a0, $sp, 392
	st.d	$a1, $sp, 408
.LBB59_147:                             # %._crit_edge.i.i.i326
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB59_151
# %bb.148:                              # %._crit_edge.i.i.i326
                                        #   in Loop: Header=BB59_138 Depth=3
	bnez	$a1, .LBB59_150
# %bb.149:                              #   in Loop: Header=BB59_138 Depth=3
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB59_151
	.p2align	4, , 16
.LBB59_150:                             #   in Loop: Header=BB59_138 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB59_151:                             #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a0, $sp, 152
	ld.d	$a2, $sp, 280
	st.d	$a0, $sp, 400
	slli.d	$a0, $s7, 5
	add.d	$a1, $a2, $a0
	st.d	$s8, $sp, 120
	ld.d	$a1, $a1, 8
	ldx.d	$s6, $a2, $a0
	st.d	$a1, $sp, 360
	move	$a0, $s8
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB59_154
# %bb.152:                              # %.noexc.i330
                                        #   in Loop: Header=BB59_138 Depth=3
.Ltmp1381:
	addi.d	$a0, $sp, 120
	addi.d	$a1, $sp, 360
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1382:
# %bb.153:                              # %.noexc331
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a1, $sp, 360
	st.d	$a0, $sp, 120
	st.d	$a1, $sp, 136
.LBB59_154:                             # %._crit_edge.i.i329
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB59_158
# %bb.155:                              # %._crit_edge.i.i329
                                        #   in Loop: Header=BB59_138 Depth=3
	bnez	$a1, .LBB59_157
# %bb.156:                              #   in Loop: Header=BB59_138 Depth=3
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB59_158
	.p2align	4, , 16
.LBB59_157:                             #   in Loop: Header=BB59_138 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB59_158:                             #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a0, $sp, 360
	ld.d	$a1, $sp, 400
	ld.d	$s6, $sp, 392
	st.d	$a0, $sp, 128
	addi.d	$a0, $sp, 104
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 360
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB59_161
# %bb.159:                              # %.noexc.i333
                                        #   in Loop: Header=BB59_138 Depth=3
.Ltmp1384:
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 360
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1385:
# %bb.160:                              # %.noexc334
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a1, $sp, 360
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB59_161:                             # %._crit_edge.i.i332
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB59_165
# %bb.162:                              # %._crit_edge.i.i332
                                        #   in Loop: Header=BB59_138 Depth=3
	bnez	$a1, .LBB59_164
# %bb.163:                              #   in Loop: Header=BB59_138 Depth=3
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB59_165
	.p2align	4, , 16
.LBB59_164:                             #   in Loop: Header=BB59_138 Depth=3
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB59_165:                             #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a0, $sp, 360
	ld.d	$a5, $fp, 40
	st.d	$a0, $sp, 96
.Ltmp1387:
	addi.d	$a0, $sp, 152
	addi.d	$a1, $sp, 120
	addi.d	$a4, $sp, 88
	move	$a2, $s4
	move	$a3, $s5
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp1388:
# %bb.166:                              #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB59_168
# %bb.167:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i336
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_168:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit338
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a0, $sp, 120
	beq	$a0, $s8, .LBB59_170
# %bb.169:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i339
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_170:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit341
                                        #   in Loop: Header=BB59_138 Depth=3
	beq	$s2, $s3, .LBB59_173
# %bb.171:                              #   in Loop: Header=BB59_138 Depth=3
.Ltmp1390:
	addi.d	$a1, $sp, 152
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1391:
# %bb.172:                              # %.noexc342
                                        #   in Loop: Header=BB59_138 Depth=3
	addi.d	$s2, $s2, 128
	b	.LBB59_185
	.p2align	4, , 16
.LBB59_173:                             #   in Loop: Header=BB59_138 Depth=3
	sub.d	$s6, $s3, $s0
	addi.w	$a0, $zero, -128
	lu52i.d	$a0, $a0, 2047
	beq	$s6, $a0, .LBB59_292
# %bb.174:                              # %_ZNKSt6vectorIN2PP4WordESaIS1_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB59_138 Depth=3
	srai.d	$a0, $s6, 7
	ori	$a2, $zero, 1
	sltu	$a1, $a2, $a0
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	lu52i.d	$a1, $a1, 15
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s4, $a0, 7
.Ltmp1392:
	move	$s2, $s3
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1393:
# %bb.175:                              # %.noexc427
                                        #   in Loop: Header=BB59_138 Depth=3
	move	$s5, $a0
	add.d	$s2, $a0, $s6
.Ltmp1395:
	addi.d	$a1, $sp, 152
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1396:
# %bb.176:                              # %_ZNSt16allocator_traitsISaIN2PP4WordEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_.exit.i
                                        #   in Loop: Header=BB59_138 Depth=3
	beq	$s0, $s3, .LBB59_187
# %bb.177:                              # %.lr.ph.i.i.i.i.i.preheader
                                        #   in Loop: Header=BB59_138 Depth=3
	move	$s8, $zero
	.p2align	4, , 16
.LBB59_178:                             # %.lr.ph.i.i.i.i.i
                                        #   Parent Loop BB59_117 Depth=1
                                        #     Parent Loop BB59_133 Depth=2
                                        #       Parent Loop BB59_138 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	add.d	$a1, $s0, $s8
	add.d	$a0, $s5, $s8
.Ltmp1398:
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1399:
# %bb.179:                              # %_ZSt10_ConstructIN2PP4WordEJRKS1_EEvPT_DpOT0_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB59_178 Depth=4
	addi.d	$s8, $s8, 128
	add.d	$a0, $s0, $s8
	bne	$a0, $s3, .LBB59_178
# %bb.180:                              #   in Loop: Header=BB59_138 Depth=3
	move	$s2, $s0
	.p2align	4, , 16
.LBB59_181:                             # %.lr.ph.i.i.i
                                        #   Parent Loop BB59_117 Depth=1
                                        #     Parent Loop BB59_133 Depth=2
                                        #       Parent Loop BB59_138 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 128
	bne	$s2, $s3, .LBB59_181
# %bb.182:                              # %_ZZNSt6vectorIN2PP4WordESaIS1_EE17_M_realloc_appendIJRKS1_EEEvDpOT_EN11_Guard_eltsD2Ev.exit.loopexit.i
                                        #   in Loop: Header=BB59_138 Depth=3
	add.d	$a0, $s5, $s8
	addi.d	$s2, $a0, 128
	addi.d	$s8, $sp, 136
	beqz	$s0, .LBB59_184
.LBB59_183:                             # %_ZNSt12_Vector_baseIN2PP4WordESaIS1_EE13_M_deallocateEPS1_m.exit.i.i
                                        #   in Loop: Header=BB59_138 Depth=3
	move	$a0, $s0
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_184:                             # %.noexc343
                                        #   in Loop: Header=BB59_138 Depth=3
	add.d	$s3, $s5, $s4
	move	$s0, $s5
.LBB59_185:                             # %_ZNSt6vectorIN2PP4WordESaIS1_EE9push_backERKS1_.exit
                                        #   in Loop: Header=BB59_138 Depth=3
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 392
	addi.d	$a1, $sp, 408
	beq	$a0, $a1, .LBB59_137
# %bb.186:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i344
                                        #   in Loop: Header=BB59_138 Depth=3
	ld.d	$a1, $sp, 408
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_137
.LBB59_187:                             # %_ZSt34__uninitialized_move_if_noexcept_aIPN2PP4WordES2_SaIS1_EET0_T_S5_S4_RT1_.exit.thread.i
                                        #   in Loop: Header=BB59_138 Depth=3
	addi.d	$s2, $s5, 128
	bnez	$s0, .LBB59_183
	b	.LBB59_184
.LBB59_188:                             #   in Loop: Header=BB59_133 Depth=2
	move	$s0, $zero
	move	$s2, $zero
	move	$s3, $zero
.LBB59_189:                             # %._crit_edge
                                        #   in Loop: Header=BB59_133 Depth=2
	ld.d	$a1, $fp, 176
	ld.d	$a2, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a3, $a1, $a2
	srai.d	$a3, $a3, 7
	add.d	$a3, $a3, $s1
	bltz	$a3, .LBB59_192
# %bb.190:                              #   in Loop: Header=BB59_133 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB59_193
# %bb.191:                              #   in Loop: Header=BB59_133 Depth=2
	ld.d	$a3, $sp, 64                    # 8-byte Folded Reload
	add.d	$a1, $a1, $a3
	move	$a3, $a1
	b	.LBB59_195
.LBB59_192:                             #   in Loop: Header=BB59_133 Depth=2
	srai.d	$a4, $a3, 2
	b	.LBB59_194
.LBB59_193:                             #   in Loop: Header=BB59_133 Depth=2
	srli.d	$a4, $a3, 2
.LBB59_194:                             #   in Loop: Header=BB59_133 Depth=2
	slli.d	$a1, $a4, 3
	ldx.d	$a2, $a0, $a1
	alsl.d	$a0, $a4, $a0, 3
	andi	$a1, $a3, 3
	slli.d	$a1, $a1, 7
	add.d	$a1, $a2, $a1
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a2, $a3
.LBB59_195:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit3.i
                                        #   in Loop: Header=BB59_133 Depth=2
	sub.d	$a2, $a3, $a2
	srai.d	$a2, $a2, 7
	addi.d	$a4, $a2, 1
	ld.d	$a5, $sp, 80                    # 8-byte Folded Reload
	blt	$a2, $a5, .LBB59_198
# %bb.196:                              #   in Loop: Header=BB59_133 Depth=2
	ori	$a2, $zero, 3
	bltu	$a2, $a4, .LBB59_199
# %bb.197:                              #   in Loop: Header=BB59_133 Depth=2
	addi.d	$a3, $a3, 128
	move	$a2, $a0
	b	.LBB59_201
	.p2align	4, , 16
.LBB59_198:                             #   in Loop: Header=BB59_133 Depth=2
	srai.d	$a3, $a4, 2
	b	.LBB59_200
.LBB59_199:                             #   in Loop: Header=BB59_133 Depth=2
	srli.d	$a3, $a4, 2
.LBB59_200:                             #   in Loop: Header=BB59_133 Depth=2
	alsl.d	$a2, $a3, $a0, 3
	slli.d	$a5, $a3, 3
	ldx.d	$a5, $a0, $a5
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a4, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a5, $a3
.LBB59_201:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit5.i
                                        #   in Loop: Header=BB59_133 Depth=2
	st.d	$a1, $sp, 152
	ld.d	$a1, $a0, 0
	st.d	$a1, $sp, 160
	addi.d	$a1, $a1, 512
	st.d	$a1, $sp, 168
	st.d	$a0, $sp, 176
	st.d	$a3, $sp, 392
	ld.d	$a0, $a2, 0
	st.d	$a0, $sp, 400
	addi.d	$a0, $a0, 512
	st.d	$a0, $sp, 408
	st.d	$a2, $sp, 416
.Ltmp1401:
	addi.d	$a0, $sp, 360
	addi.d	$a2, $sp, 152
	addi.d	$a3, $sp, 392
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp1402:
# %bb.202:                              # %.noexc318
                                        #   in Loop: Header=BB59_133 Depth=2
	sub.d	$a0, $s2, $s0
	srai.d	$a0, $a0, 7
	addi.w	$a1, $a0, 0
	blez	$a1, .LBB59_265
# %bb.203:                              # %.lr.ph.i
                                        #   in Loop: Header=BB59_133 Depth=2
	bstrpick.d	$a0, $a0, 30, 0
	addi.d	$s8, $a0, 1
	slli.d	$a0, $a0, 7
	add.d	$a0, $s0, $a0
	addi.d	$s4, $a0, -128
	st.d	$s1, $sp, 72                    # 8-byte Folded Spill
	b	.LBB59_206
	.p2align	4, , 16
.LBB59_204:                             #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $a3, 0
	addi.d	$a1, $a0, 512
	st.d	$a2, $sp, 152
	st.d	$a0, $sp, 160
	st.d	$a1, $sp, 168
	st.d	$a3, $sp, 176
.Ltmp1404:
	addi.d	$a0, $sp, 392
	addi.d	$a2, $sp, 152
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	move	$a3, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_)
	jirl	$ra, $ra, 0
.Ltmp1405:
.LBB59_205:                             # %.noexc319
                                        #   in Loop: Header=BB59_206 Depth=3
	addi.d	$s8, $s8, -1
	addi.d	$s4, $s4, -128
	ld.d	$s1, $sp, 72                    # 8-byte Folded Reload
	ori	$a0, $zero, 1
	bgeu	$a0, $s8, .LBB59_265
.LBB59_206:                             #   Parent Loop BB59_117 Depth=1
                                        #     Parent Loop BB59_133 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.d	$a1, $fp, 176
	ld.d	$a0, $fp, 184
	ld.d	$s5, $fp, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s1
	bltz	$a2, .LBB59_212
# %bb.207:                              #   in Loop: Header=BB59_206 Depth=3
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB59_213
# %bb.208:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	add.d	$a2, $a1, $a2
	move	$a3, $s5
	bne	$a2, $a1, .LBB59_215
.LBB59_209:                             #   in Loop: Header=BB59_206 Depth=3
	beq	$a1, $a0, .LBB59_219
# %bb.210:                              #   in Loop: Header=BB59_206 Depth=3
	addi.d	$a0, $a1, -128
.Ltmp1421:
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1422:
# %bb.211:                              # %.noexc414
                                        #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $fp, 176
	addi.d	$a0, $a0, -128
	st.d	$a0, $fp, 176
	b	.LBB59_205
	.p2align	4, , 16
.LBB59_212:                             #   in Loop: Header=BB59_206 Depth=3
	srai.d	$a4, $a2, 2
	b	.LBB59_214
	.p2align	4, , 16
.LBB59_213:                             #   in Loop: Header=BB59_206 Depth=3
	srli.d	$a4, $a2, 2
.LBB59_214:                             #   in Loop: Header=BB59_206 Depth=3
	alsl.d	$a3, $a4, $s5, 3
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $s5, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a2, $a2, $a4
	slli.d	$a2, $a2, 7
	add.d	$a2, $a5, $a2
	beq	$a2, $a1, .LBB59_209
.LBB59_215:                             #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $fp, 208
	bne	$a2, $a0, .LBB59_204
# %bb.216:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a3, $fp, 224
	addi.d	$a3, $a3, -128
	beq	$a2, $a3, .LBB59_225
# %bb.217:                              #   in Loop: Header=BB59_206 Depth=3
.Ltmp1406:
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1407:
# %bb.218:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EE9push_backERKS1_.exit.i
                                        #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $fp, 208
	addi.d	$a0, $a0, 128
	st.d	$a0, $fp, 208
	b	.LBB59_205
.LBB59_219:                             #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $fp, 232
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$s1, $a0, $s5
	srai.d	$a2, $s1, 3
	sltu	$a5, $zero, $a0
	sub.d	$a3, $a3, $a4
	ld.d	$a4, $fp, 192
	sub.d	$a5, $a2, $a5
	srai.d	$a3, $a3, 7
	alsl.d	$a3, $a5, $a3, 2
	sub.d	$a1, $a4, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a3, $a1
	ld.d	$a3, $sp, 80                    # 8-byte Folded Reload
	lu52i.d	$a3, $a3, 15
	beq	$a1, $a3, .LBB59_294
# %bb.220:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $a1, 0
	bne	$s5, $s7, .LBB59_243
# %bb.221:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a4, $fp, 168
	addi.d	$a5, $a2, 2
	slli.d	$a1, $a5, 1
	addi.d	$a3, $a2, 1
	bgeu	$a1, $a4, .LBB59_231
# %bb.222:                              #   in Loop: Header=BB59_206 Depth=3
	sub.d	$a1, $a4, $a5
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$a1, $s7, $a1
	addi.d	$s1, $a1, 8
	addi.d	$a0, $a0, 8
	sub.d	$a2, $a0, $s5
	bgeu	$s1, $s5, .LBB59_239
# %bb.223:                              #   in Loop: Header=BB59_206 Depth=3
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB59_257
# %bb.224:                              #   in Loop: Header=BB59_206 Depth=3
	move	$a0, $s1
	move	$a1, $s5
	move	$s5, $a3
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	move	$a3, $s5
	b	.LBB59_242
.LBB59_225:                             #   in Loop: Header=BB59_206 Depth=3
	ld.d	$s6, $fp, 232
	sub.d	$s7, $s6, $s5
	srai.d	$a0, $s7, 3
	ld.d	$a3, $fp, 216
	sltu	$a4, $zero, $s6
	sub.d	$a4, $a0, $a4
	ld.d	$a5, $fp, 192
	sub.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 7
	alsl.d	$a2, $a4, $a2, 2
	sub.d	$a1, $a5, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a2, $a1
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	lu52i.d	$a2, $a2, 15
	beq	$a1, $a2, .LBB59_294
# %bb.226:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a4, $fp, 160
	ld.d	$s1, $fp, 168
	sub.d	$a1, $s6, $a4
	srai.d	$a1, $a1, 3
	sub.d	$a1, $s1, $a1
	ori	$a2, $zero, 1
	bltu	$a2, $a1, .LBB59_250
# %bb.227:                              #   in Loop: Header=BB59_206 Depth=3
	addi.d	$a2, $a0, 2
	slli.d	$a1, $a2, 1
	addi.d	$a3, $a0, 1
	bgeu	$a1, $s1, .LBB59_235
# %bb.228:                              #   in Loop: Header=BB59_206 Depth=3
	sub.d	$a0, $s1, $a2
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$s7, $a4, $a0
	addi.d	$a0, $s6, 8
	sub.d	$a2, $a0, $s5
	bgeu	$s7, $s5, .LBB59_245
# %bb.229:                              #   in Loop: Header=BB59_206 Depth=3
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB59_259
# %bb.230:                              #   in Loop: Header=BB59_206 Depth=3
	move	$a0, $s7
	move	$a1, $s5
	move	$s1, $a3
	b	.LBB59_247
.LBB59_231:                             # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE15_M_allocate_mapEm.exit.i444
                                        #   in Loop: Header=BB59_206 Depth=3
	st.d	$a5, $sp, 0                     # 8-byte Folded Spill
	st.d	$a3, $sp, 16                    # 8-byte Folded Spill
	ori	$a1, $zero, 1
	sltu	$a0, $a1, $a4
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $a4, $a0
	or	$a0, $a0, $a1
	st.d	$a4, $sp, 8                     # 8-byte Folded Spill
	add.d	$a0, $a4, $a0
	addi.d	$s6, $a0, 2
	slli.d	$a0, $s6, 3
.Ltmp1423:
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1424:
# %bb.232:                              # %.noexc454
                                        #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	sub.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	add.d	$a0, $a0, $a1
	addi.d	$a2, $s1, 8
	addi.d	$s1, $a0, 8
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB59_253
# %bb.233:                              #   in Loop: Header=BB59_206 Depth=3
	move	$a0, $s1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB59_234:                             # %_ZSt4copyIPPN2PP4WordES3_ET0_T_S5_S4_.exit26.i446
                                        #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	slli.d	$a1, $a0, 3
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	st.d	$a0, $fp, 160
	st.d	$s6, $fp, 168
	ld.d	$a3, $sp, 16                    # 8-byte Folded Reload
	b	.LBB59_242
.LBB59_235:                             # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE15_M_allocate_mapEm.exit.i
                                        #   in Loop: Header=BB59_206 Depth=3
	st.d	$a2, $sp, 0                     # 8-byte Folded Spill
	st.d	$a4, $sp, 8                     # 8-byte Folded Spill
	st.d	$a3, $sp, 16                    # 8-byte Folded Spill
	ori	$a1, $zero, 1
	sltu	$a0, $a1, $s1
	masknez	$a1, $a1, $a0
	maskeqz	$a0, $s1, $a0
	or	$a0, $a0, $a1
	add.d	$a0, $s1, $a0
	addi.d	$s6, $a0, 2
	slli.d	$a0, $s6, 3
.Ltmp1408:
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1409:
# %bb.236:                              # %.noexc443
                                        #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	sub.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	addi.d	$a2, $s7, 8
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	add.d	$s7, $a0, $a1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB59_255
# %bb.237:                              #   in Loop: Header=BB59_206 Depth=3
	move	$a0, $s7
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB59_238:                             # %_ZSt4copyIPPN2PP4WordES3_ET0_T_S5_S4_.exit26.i
                                        #   in Loop: Header=BB59_206 Depth=3
	slli.d	$a1, $s1, 3
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	st.d	$a0, $fp, 160
	st.d	$s6, $fp, 168
	ld.d	$a3, $sp, 16                    # 8-byte Folded Reload
	b	.LBB59_249
.LBB59_239:                             # %_ZSt9__advanceIPPN2PP4WordElEvRT_T0_St26random_access_iterator_tag.exit.i.i450
                                        #   in Loop: Header=BB59_206 Depth=3
	move	$s6, $a3
	alsl.d	$a0, $a3, $s1, 3
	srai.d	$a1, $a2, 3
	sub.d	$a0, $a0, $a2
	ori	$a3, $zero, 2
	blt	$a1, $a3, .LBB59_261
# %bb.240:                              #   in Loop: Header=BB59_206 Depth=3
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB59_241:                             # %.noexc439
                                        #   in Loop: Header=BB59_206 Depth=3
	move	$a3, $s6
.LBB59_242:                             # %.noexc439
                                        #   in Loop: Header=BB59_206 Depth=3
	st.d	$s1, $fp, 200
	ld.d	$a0, $s1, 0
	st.d	$a0, $fp, 184
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 192
	alsl.d	$a0, $a3, $s1, 3
	addi.d	$a1, $a0, -8
	st.d	$a1, $fp, 232
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 216
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 224
	move	$s5, $s1
.LBB59_243:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE23_M_reserve_map_at_frontEm.exit.i
                                        #   in Loop: Header=BB59_206 Depth=3
.Ltmp1425:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1426:
# %bb.244:                              # %.noexc440
                                        #   in Loop: Header=BB59_206 Depth=3
	addi.d	$a1, $s5, -8
	st.d	$a0, $s5, -8
	st.d	$a1, $fp, 200
	st.d	$a0, $fp, 184
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 192
	addi.d	$a0, $a0, 384
	st.d	$a0, $fp, 176
.Ltmp1428:
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1429:
	b	.LBB59_205
.LBB59_245:                             # %_ZSt9__advanceIPPN2PP4WordElEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        #   in Loop: Header=BB59_206 Depth=3
	move	$s1, $a3
	alsl.d	$a0, $a3, $s7, 3
	srai.d	$a1, $a2, 3
	sub.d	$a0, $a0, $a2
	ori	$a3, $zero, 2
	blt	$a1, $a3, .LBB59_263
# %bb.246:                              #   in Loop: Header=BB59_206 Depth=3
	move	$a1, $s5
.LBB59_247:                             # %.noexc431
                                        #   in Loop: Header=BB59_206 Depth=3
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB59_248:                             # %.noexc431
                                        #   in Loop: Header=BB59_206 Depth=3
	move	$a3, $s1
.LBB59_249:                             # %.noexc431
                                        #   in Loop: Header=BB59_206 Depth=3
	st.d	$s7, $fp, 200
	ld.d	$a0, $s7, 0
	st.d	$a0, $fp, 184
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 192
	alsl.d	$a0, $a3, $s7, 3
	addi.d	$s6, $a0, -8
	st.d	$s6, $fp, 232
	ld.d	$a0, $a0, -8
	st.d	$a0, $fp, 216
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 224
.LBB59_250:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE22_M_reserve_map_at_backEm.exit.i
                                        #   in Loop: Header=BB59_206 Depth=3
.Ltmp1410:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1411:
# %bb.251:                              # %.noexc432
                                        #   in Loop: Header=BB59_206 Depth=3
	st.d	$a0, $s6, 8
	ld.d	$a0, $fp, 208
.Ltmp1412:
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1413:
# %bb.252:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EE9push_backERKS1_.exit.i.thread
                                        #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $fp, 232
	addi.d	$a1, $a0, 8
	st.d	$a1, $fp, 232
	ld.d	$a0, $a0, 8
	st.d	$a0, $fp, 216
	addi.d	$a2, $a0, 512
	st.d	$a2, $fp, 224
	st.d	$a0, $fp, 208
	st.d	$a0, $sp, 400
	st.d	$a2, $sp, 408
	st.d	$a1, $sp, 416
	b	.LBB59_205
.LBB59_253:                             #   in Loop: Header=BB59_206 Depth=3
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB59_234
# %bb.254:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $s5, 0
	st.d	$a0, $s1, 0
	b	.LBB59_234
.LBB59_255:                             #   in Loop: Header=BB59_206 Depth=3
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB59_238
# %bb.256:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $s5, 0
	st.d	$a0, $s7, 0
	b	.LBB59_238
.LBB59_257:                             #   in Loop: Header=BB59_206 Depth=3
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB59_242
# %bb.258:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $s5, 0
	st.d	$a0, $s1, 0
	b	.LBB59_242
.LBB59_259:                             #   in Loop: Header=BB59_206 Depth=3
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB59_249
# %bb.260:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a0, $s5, 0
	st.d	$a0, $s7, 0
	b	.LBB59_249
.LBB59_261:                             # %_ZSt9__advanceIPPN2PP4WordElEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i451
                                        #   in Loop: Header=BB59_206 Depth=3
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB59_241
# %bb.262:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a1, $s5, 0
	st.d	$a1, $a0, 0
	b	.LBB59_241
.LBB59_263:                             # %_ZSt9__advanceIPPN2PP4WordElEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i
                                        #   in Loop: Header=BB59_206 Depth=3
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB59_248
# %bb.264:                              #   in Loop: Header=BB59_206 Depth=3
	ld.d	$a1, $s5, 0
	st.d	$a1, $a0, 0
	b	.LBB59_248
	.p2align	4, , 16
.LBB59_265:                             # %_ZN2PP3Cmd13replace_wordsEiiRSt6vectorINS_4WordESaIS2_EE.exit
                                        #   in Loop: Header=BB59_133 Depth=2
	beq	$s0, $s2, .LBB59_268
# %bb.266:                              # %.lr.ph.i.i357.preheader
                                        #   in Loop: Header=BB59_133 Depth=2
	move	$s4, $s0
	.p2align	4, , 16
.LBB59_267:                             # %.lr.ph.i.i357
                                        #   Parent Loop BB59_117 Depth=1
                                        #     Parent Loop BB59_133 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s4, $s4, 128
	bne	$s4, $s2, .LBB59_267
.LBB59_268:                             # %_ZSt8_DestroyIPN2PP4WordES1_EvT_S3_RSaIT0_E.exit.i
                                        #   in Loop: Header=BB59_133 Depth=2
	addi.w	$s1, $s1, -1
	addi.d	$s8, $sp, 136
	beqz	$s0, .LBB59_270
# %bb.269:                              #   in Loop: Header=BB59_133 Depth=2
	sub.d	$a1, $s3, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_270:                             # %_ZNSt6vectorIN2PP4WordESaIS1_EED2Ev.exit
                                        #   in Loop: Header=BB59_133 Depth=2
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
.LBB59_271:                             # %_ZNSt6vectorIN2PP4WordESaIS1_EED2Ev.exit
                                        #   in Loop: Header=BB59_133 Depth=2
	ld.d	$a0, $sp, 280
	ld.d	$s0, $sp, 288
	beq	$a0, $s0, .LBB59_277
# %bb.272:                              # %.lr.ph.i.i372.preheader
                                        #   in Loop: Header=BB59_133 Depth=2
	move	$s2, $s1
	addi.d	$s1, $a0, 16
	b	.LBB59_274
	.p2align	4, , 16
.LBB59_273:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i375
                                        #   in Loop: Header=BB59_274 Depth=3
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB59_276
.LBB59_274:                             # %.lr.ph.i.i372
                                        #   Parent Loop BB59_117 Depth=1
                                        #     Parent Loop BB59_133 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB59_273
# %bb.275:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i374
                                        #   in Loop: Header=BB59_274 Depth=3
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_273
	.p2align	4, , 16
.LBB59_276:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i377
                                        #   in Loop: Header=BB59_133 Depth=2
	ld.d	$a0, $sp, 280
	move	$s1, $s2
.LBB59_277:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i379
                                        #   in Loop: Header=BB59_133 Depth=2
	ld.d	$s0, $sp, 48                    # 8-byte Folded Reload
	beqz	$a0, .LBB59_279
# %bb.278:                              #   in Loop: Header=BB59_133 Depth=2
	ld.d	$a1, $sp, 296
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_279:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit382
                                        #   in Loop: Header=BB59_133 Depth=2
	bnez	$s0, .LBB59_281
# %bb.280:                              #   in Loop: Header=BB59_133 Depth=2
	ld.d	$a1, $sp, 344
	ld.d	$a0, $sp, 336
	addi.d	$s3, $s3, 1
	sub.d	$a1, $a1, $a0
	slli.d	$a1, $a1, 27
	srai.d	$a1, $a1, 32
	blt	$s3, $a1, .LBB59_133
.LBB59_281:                             # %._crit_edge748
                                        #   in Loop: Header=BB59_117 Depth=1
	ld.d	$a0, $sp, 304
	addi.d	$a1, $sp, 320
	beq	$a0, $a1, .LBB59_116
# %bb.282:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i398
                                        #   in Loop: Header=BB59_117 Depth=1
	ld.d	$a1, $sp, 320
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_116
.LBB59_283:
	ld.d	$a0, $sp, 336
	ld.d	$fp, $sp, 344
	beq	$a0, $fp, .LBB59_289
# %bb.284:                              # %.lr.ph.i.i.preheader
	addi.d	$s0, $a0, 16
	b	.LBB59_286
	.p2align	4, , 16
.LBB59_285:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB59_286 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB59_288
.LBB59_286:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB59_285
# %bb.287:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB59_286 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_285
.LBB59_288:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $sp, 336
.LBB59_289:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB59_291
# %bb.290:
	ld.d	$a1, $sp, 352
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_291:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	ld.d	$s8, $sp, 424                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 432                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 440                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 448                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 456                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 464                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 472                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 480                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 488                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 496                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 504                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 512
	ret
.LBB59_292:
.Ltmp1440:
	pcalau12i	$a0, %pc_hi20(.L.str.225)
	addi.d	$a0, $a0, %pc_lo12(.L.str.225)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1441:
# %bb.293:                              # %.noexc426
.LBB59_294:                             # %.invoke
.Ltmp1437:
	pcalau12i	$a0, %pc_hi20(.L.str.220)
	addi.d	$a0, $a0, %pc_lo12(.L.str.220)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1438:
# %bb.295:                              # %.cont
.LBB59_296:
.Ltmp1371:
	b	.LBB59_311
.LBB59_297:
.Ltmp1368:
	b	.LBB59_311
.LBB59_298:
.Ltmp1365:
	b	.LBB59_311
.LBB59_299:
.Ltmp1362:
	b	.LBB59_311
.LBB59_300:
.Ltmp1359:
	b	.LBB59_311
.LBB59_301:
.Ltmp1356:
	b	.LBB59_311
.LBB59_302:
.Ltmp1353:
	b	.LBB59_311
.LBB59_303:
.Ltmp1350:
	b	.LBB59_311
.LBB59_304:
.Ltmp1347:
	b	.LBB59_311
.LBB59_305:
.Ltmp1344:
	b	.LBB59_311
.LBB59_306:
.Ltmp1341:
	b	.LBB59_311
.LBB59_307:
.Ltmp1338:
	b	.LBB59_311
.LBB59_308:
.Ltmp1335:
	b	.LBB59_311
.LBB59_309:
.Ltmp1332:
	b	.LBB59_311
.LBB59_310:
.Ltmp1329:
.LBB59_311:
	ld.d	$a2, $sp, 152
	move	$fp, $a0
	beq	$a2, $s0, .LBB59_364
# %bb.312:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i272
	ld.d	$a0, $sp, 168
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB59_363
.LBB59_313:
.Ltmp1374:
	move	$fp, $a0
	b	.LBB59_364
.LBB59_314:                             # %.loopexit.split-lp.loopexit
.Ltmp1403:
	b	.LBB59_339
.LBB59_315:
.Ltmp1414:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 232
	ld.d	$a0, $a0, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp1415:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1416:
# %bb.316:
.LBB59_317:
.Ltmp1417:
	move	$fp, $a0
.Ltmp1418:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1419:
	b	.LBB59_348
.LBB59_318:
.Ltmp1420:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB59_319:
.Ltmp1377:
	move	$fp, $a0
	ld.d	$a0, $sp, 280
	ld.d	$s0, $sp, 288
	beq	$a0, $s0, .LBB59_353
	b	.LBB59_356
.LBB59_320:
.Ltmp1430:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 176
	ld.d	$a2, $fp, 192
	ld.d	$a0, $fp, 200
	addi.d	$a1, $a1, 128
	st.d	$a1, $fp, 176
	bne	$a1, $a2, .LBB59_322
# %bb.321:
	addi.d	$a1, $a0, 8
	st.d	$a1, $fp, 200
	ld.d	$a0, $a0, 8
	st.d	$a0, $fp, 184
	addi.d	$a2, $a0, 512
	st.d	$a2, $fp, 192
	st.d	$a0, $fp, 176
	move	$a0, $a1
.LBB59_322:                             # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EppEv.exit.i
	ld.d	$a0, $a0, -8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp1431:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp1432:
# %bb.323:
.LBB59_324:
.Ltmp1433:
	move	$fp, $a0
.Ltmp1434:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp1435:
	b	.LBB59_348
.LBB59_325:
.Ltmp1436:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB59_326:                             # %.loopexit.split-lp.loopexit.split-lp
.Ltmp1439:
	b	.LBB59_339
.LBB59_327:
.Ltmp1397:
	move	$fp, $a0
	b	.LBB59_344
.LBB59_328:                             # %.loopexit.split-lp504
.Ltmp1442:
	move	$fp, $a0
	b	.LBB59_345
.LBB59_329:
.Ltmp1383:
	move	$fp, $a0
	ld.d	$a0, $sp, 392
	addi.d	$a1, $sp, 408
	bne	$a0, $a1, .LBB59_347
	b	.LBB59_348
.LBB59_330:
.Ltmp1386:
	move	$fp, $a0
	ld.d	$a0, $sp, 120
	beq	$a0, $s8, .LBB59_335
.LBB59_331:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i350
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 392
	addi.d	$a1, $sp, 408
	bne	$a0, $a1, .LBB59_347
	b	.LBB59_348
.LBB59_332:
.Ltmp1380:
	b	.LBB59_339
.LBB59_333:
.Ltmp1389:
	ld.d	$a2, $sp, 88
	move	$fp, $a0
	addi.d	$a0, $sp, 104
	bne	$a2, $a0, .LBB59_336
# %bb.334:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit349
	ld.d	$a0, $sp, 120
	bne	$a0, $s8, .LBB59_331
.LBB59_335:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit352
	ld.d	$a0, $sp, 392
	addi.d	$a1, $sp, 408
	bne	$a0, $a1, .LBB59_347
	b	.LBB59_348
.LBB59_336:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i347
	ld.d	$a0, $sp, 104
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 120
	beq	$a0, $s8, .LBB59_335
	b	.LBB59_331
.LBB59_337:                             # %.loopexit503
.Ltmp1394:
	move	$fp, $a0
	b	.LBB59_346
.LBB59_338:                             # %.loopexit
.Ltmp1427:
.LBB59_339:                             # %.body433
	move	$fp, $a0
	b	.LBB59_348
.LBB59_340:
.Ltmp1400:
	move	$fp, $a0
	beqz	$s8, .LBB59_343
# %bb.341:                              # %.lr.ph.i.i.i.i.i.i.i.preheader
	move	$s1, $s5
	.p2align	4, , 16
.LBB59_342:                             # %.lr.ph.i.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s8, $s8, -128
	addi.d	$s1, $s1, 128
	bnez	$s8, .LBB59_342
.LBB59_343:                             # %.body.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB59_344:                             # %_ZNSt6vectorIN2PP4WordESaIS1_EE12_Guard_allocD2Ev.exit33.i
	move	$a0, $s5
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_345:                             # %.body
	move	$s2, $s3
.LBB59_346:                             # %.body
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 392
	addi.d	$a1, $sp, 408
	beq	$a0, $a1, .LBB59_348
.LBB59_347:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i353
	ld.d	$a1, $sp, 408
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_348:                             # %.body433
	beq	$s0, $s2, .LBB59_351
# %bb.349:                              # %.lr.ph.i.i363.preheader
	move	$s1, $s0
	.p2align	4, , 16
.LBB59_350:                             # %.lr.ph.i.i363
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s2, .LBB59_350
.LBB59_351:                             # %_ZSt8_DestroyIPN2PP4WordES1_EvT_S3_RSaIT0_E.exit.i368
	bnez	$s0, .LBB59_355
# %bb.352:                              # %_ZNSt6vectorIN2PP4WordESaIS1_EED2Ev.exit370
	ld.d	$a0, $sp, 280
	ld.d	$s0, $sp, 288
	bne	$a0, $s0, .LBB59_356
.LBB59_353:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i391
	bnez	$a0, .LBB59_361
.LBB59_354:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit394
	ld.d	$a0, $sp, 304
	addi.d	$a1, $sp, 320
	beq	$a0, $a1, .LBB59_364
	b	.LBB59_362
.LBB59_355:
	sub.d	$a1, $s3, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 280
	ld.d	$s0, $sp, 288
	beq	$a0, $s0, .LBB59_353
.LBB59_356:                             # %.lr.ph.i.i384.preheader
	addi.d	$s1, $a0, 16
	b	.LBB59_358
	.p2align	4, , 16
.LBB59_357:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i387
                                        #   in Loop: Header=BB59_358 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB59_360
.LBB59_358:                             # %.lr.ph.i.i384
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB59_357
# %bb.359:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i386
                                        #   in Loop: Header=BB59_358 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_357
.LBB59_360:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i389
	ld.d	$a0, $sp, 280
	beqz	$a0, .LBB59_354
.LBB59_361:
	ld.d	$a1, $sp, 296
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 304
	addi.d	$a1, $sp, 320
	beq	$a0, $a1, .LBB59_364
.LBB59_362:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i395
	ld.d	$a1, $sp, 320
	addi.d	$a1, $a1, 1
.LBB59_363:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB59_364:
	ld.d	$a0, $sp, 336
	ld.d	$s0, $sp, 344
	bne	$a0, $s0, .LBB59_367
# %bb.365:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i409
	bnez	$a0, .LBB59_372
.LBB59_366:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit412
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB59_367:                             # %.lr.ph.i.i402.preheader
	addi.d	$s1, $a0, 16
	b	.LBB59_369
	.p2align	4, , 16
.LBB59_368:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i405
                                        #   in Loop: Header=BB59_369 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB59_371
.LBB59_369:                             # %.lr.ph.i.i402
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB59_368
# %bb.370:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i404
                                        #   in Loop: Header=BB59_369 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB59_368
.LBB59_371:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i407
	ld.d	$a0, $sp, 336
	beqz	$a0, .LBB59_366
.LBB59_372:
	ld.d	$a1, $sp, 352
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end59:
	.size	_ZN2PP3Cmd10handle_opsEv, .Lfunc_end59-_ZN2PP3Cmd10handle_opsEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table59:
.Lexception30:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Ltmp1327-.Lfunc_begin30       # >> Call Site 1 <<
	.uleb128 .Ltmp1328-.Ltmp1327            #   Call between .Ltmp1327 and .Ltmp1328
	.uleb128 .Ltmp1329-.Lfunc_begin30       #     jumps to .Ltmp1329
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1328-.Lfunc_begin30       # >> Call Site 2 <<
	.uleb128 .Ltmp1330-.Ltmp1328            #   Call between .Ltmp1328 and .Ltmp1330
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1330-.Lfunc_begin30       # >> Call Site 3 <<
	.uleb128 .Ltmp1331-.Ltmp1330            #   Call between .Ltmp1330 and .Ltmp1331
	.uleb128 .Ltmp1332-.Lfunc_begin30       #     jumps to .Ltmp1332
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1331-.Lfunc_begin30       # >> Call Site 4 <<
	.uleb128 .Ltmp1333-.Ltmp1331            #   Call between .Ltmp1331 and .Ltmp1333
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1333-.Lfunc_begin30       # >> Call Site 5 <<
	.uleb128 .Ltmp1334-.Ltmp1333            #   Call between .Ltmp1333 and .Ltmp1334
	.uleb128 .Ltmp1335-.Lfunc_begin30       #     jumps to .Ltmp1335
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1334-.Lfunc_begin30       # >> Call Site 6 <<
	.uleb128 .Ltmp1336-.Ltmp1334            #   Call between .Ltmp1334 and .Ltmp1336
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1336-.Lfunc_begin30       # >> Call Site 7 <<
	.uleb128 .Ltmp1337-.Ltmp1336            #   Call between .Ltmp1336 and .Ltmp1337
	.uleb128 .Ltmp1338-.Lfunc_begin30       #     jumps to .Ltmp1338
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1337-.Lfunc_begin30       # >> Call Site 8 <<
	.uleb128 .Ltmp1339-.Ltmp1337            #   Call between .Ltmp1337 and .Ltmp1339
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1339-.Lfunc_begin30       # >> Call Site 9 <<
	.uleb128 .Ltmp1340-.Ltmp1339            #   Call between .Ltmp1339 and .Ltmp1340
	.uleb128 .Ltmp1341-.Lfunc_begin30       #     jumps to .Ltmp1341
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1340-.Lfunc_begin30       # >> Call Site 10 <<
	.uleb128 .Ltmp1342-.Ltmp1340            #   Call between .Ltmp1340 and .Ltmp1342
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1342-.Lfunc_begin30       # >> Call Site 11 <<
	.uleb128 .Ltmp1343-.Ltmp1342            #   Call between .Ltmp1342 and .Ltmp1343
	.uleb128 .Ltmp1344-.Lfunc_begin30       #     jumps to .Ltmp1344
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1343-.Lfunc_begin30       # >> Call Site 12 <<
	.uleb128 .Ltmp1345-.Ltmp1343            #   Call between .Ltmp1343 and .Ltmp1345
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1345-.Lfunc_begin30       # >> Call Site 13 <<
	.uleb128 .Ltmp1346-.Ltmp1345            #   Call between .Ltmp1345 and .Ltmp1346
	.uleb128 .Ltmp1347-.Lfunc_begin30       #     jumps to .Ltmp1347
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1346-.Lfunc_begin30       # >> Call Site 14 <<
	.uleb128 .Ltmp1348-.Ltmp1346            #   Call between .Ltmp1346 and .Ltmp1348
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1348-.Lfunc_begin30       # >> Call Site 15 <<
	.uleb128 .Ltmp1349-.Ltmp1348            #   Call between .Ltmp1348 and .Ltmp1349
	.uleb128 .Ltmp1350-.Lfunc_begin30       #     jumps to .Ltmp1350
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1349-.Lfunc_begin30       # >> Call Site 16 <<
	.uleb128 .Ltmp1351-.Ltmp1349            #   Call between .Ltmp1349 and .Ltmp1351
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1351-.Lfunc_begin30       # >> Call Site 17 <<
	.uleb128 .Ltmp1352-.Ltmp1351            #   Call between .Ltmp1351 and .Ltmp1352
	.uleb128 .Ltmp1353-.Lfunc_begin30       #     jumps to .Ltmp1353
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1352-.Lfunc_begin30       # >> Call Site 18 <<
	.uleb128 .Ltmp1354-.Ltmp1352            #   Call between .Ltmp1352 and .Ltmp1354
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1354-.Lfunc_begin30       # >> Call Site 19 <<
	.uleb128 .Ltmp1355-.Ltmp1354            #   Call between .Ltmp1354 and .Ltmp1355
	.uleb128 .Ltmp1356-.Lfunc_begin30       #     jumps to .Ltmp1356
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1355-.Lfunc_begin30       # >> Call Site 20 <<
	.uleb128 .Ltmp1357-.Ltmp1355            #   Call between .Ltmp1355 and .Ltmp1357
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1357-.Lfunc_begin30       # >> Call Site 21 <<
	.uleb128 .Ltmp1358-.Ltmp1357            #   Call between .Ltmp1357 and .Ltmp1358
	.uleb128 .Ltmp1359-.Lfunc_begin30       #     jumps to .Ltmp1359
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1358-.Lfunc_begin30       # >> Call Site 22 <<
	.uleb128 .Ltmp1360-.Ltmp1358            #   Call between .Ltmp1358 and .Ltmp1360
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1360-.Lfunc_begin30       # >> Call Site 23 <<
	.uleb128 .Ltmp1361-.Ltmp1360            #   Call between .Ltmp1360 and .Ltmp1361
	.uleb128 .Ltmp1362-.Lfunc_begin30       #     jumps to .Ltmp1362
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1361-.Lfunc_begin30       # >> Call Site 24 <<
	.uleb128 .Ltmp1363-.Ltmp1361            #   Call between .Ltmp1361 and .Ltmp1363
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1363-.Lfunc_begin30       # >> Call Site 25 <<
	.uleb128 .Ltmp1364-.Ltmp1363            #   Call between .Ltmp1363 and .Ltmp1364
	.uleb128 .Ltmp1365-.Lfunc_begin30       #     jumps to .Ltmp1365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1364-.Lfunc_begin30       # >> Call Site 26 <<
	.uleb128 .Ltmp1366-.Ltmp1364            #   Call between .Ltmp1364 and .Ltmp1366
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1366-.Lfunc_begin30       # >> Call Site 27 <<
	.uleb128 .Ltmp1367-.Ltmp1366            #   Call between .Ltmp1366 and .Ltmp1367
	.uleb128 .Ltmp1368-.Lfunc_begin30       #     jumps to .Ltmp1368
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1367-.Lfunc_begin30       # >> Call Site 28 <<
	.uleb128 .Ltmp1369-.Ltmp1367            #   Call between .Ltmp1367 and .Ltmp1369
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1369-.Lfunc_begin30       # >> Call Site 29 <<
	.uleb128 .Ltmp1370-.Ltmp1369            #   Call between .Ltmp1369 and .Ltmp1370
	.uleb128 .Ltmp1371-.Lfunc_begin30       #     jumps to .Ltmp1371
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1370-.Lfunc_begin30       # >> Call Site 30 <<
	.uleb128 .Ltmp1372-.Ltmp1370            #   Call between .Ltmp1370 and .Ltmp1372
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1372-.Lfunc_begin30       # >> Call Site 31 <<
	.uleb128 .Ltmp1373-.Ltmp1372            #   Call between .Ltmp1372 and .Ltmp1373
	.uleb128 .Ltmp1374-.Lfunc_begin30       #     jumps to .Ltmp1374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1373-.Lfunc_begin30       # >> Call Site 32 <<
	.uleb128 .Ltmp1375-.Ltmp1373            #   Call between .Ltmp1373 and .Ltmp1375
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1375-.Lfunc_begin30       # >> Call Site 33 <<
	.uleb128 .Ltmp1376-.Ltmp1375            #   Call between .Ltmp1375 and .Ltmp1376
	.uleb128 .Ltmp1377-.Lfunc_begin30       #     jumps to .Ltmp1377
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1378-.Lfunc_begin30       # >> Call Site 34 <<
	.uleb128 .Ltmp1379-.Ltmp1378            #   Call between .Ltmp1378 and .Ltmp1379
	.uleb128 .Ltmp1380-.Lfunc_begin30       #     jumps to .Ltmp1380
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1379-.Lfunc_begin30       # >> Call Site 35 <<
	.uleb128 .Ltmp1381-.Ltmp1379            #   Call between .Ltmp1379 and .Ltmp1381
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1381-.Lfunc_begin30       # >> Call Site 36 <<
	.uleb128 .Ltmp1382-.Ltmp1381            #   Call between .Ltmp1381 and .Ltmp1382
	.uleb128 .Ltmp1383-.Lfunc_begin30       #     jumps to .Ltmp1383
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1382-.Lfunc_begin30       # >> Call Site 37 <<
	.uleb128 .Ltmp1384-.Ltmp1382            #   Call between .Ltmp1382 and .Ltmp1384
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1384-.Lfunc_begin30       # >> Call Site 38 <<
	.uleb128 .Ltmp1385-.Ltmp1384            #   Call between .Ltmp1384 and .Ltmp1385
	.uleb128 .Ltmp1386-.Lfunc_begin30       #     jumps to .Ltmp1386
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1385-.Lfunc_begin30       # >> Call Site 39 <<
	.uleb128 .Ltmp1387-.Ltmp1385            #   Call between .Ltmp1385 and .Ltmp1387
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1387-.Lfunc_begin30       # >> Call Site 40 <<
	.uleb128 .Ltmp1388-.Ltmp1387            #   Call between .Ltmp1387 and .Ltmp1388
	.uleb128 .Ltmp1389-.Lfunc_begin30       #     jumps to .Ltmp1389
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1388-.Lfunc_begin30       # >> Call Site 41 <<
	.uleb128 .Ltmp1390-.Ltmp1388            #   Call between .Ltmp1388 and .Ltmp1390
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1390-.Lfunc_begin30       # >> Call Site 42 <<
	.uleb128 .Ltmp1393-.Ltmp1390            #   Call between .Ltmp1390 and .Ltmp1393
	.uleb128 .Ltmp1394-.Lfunc_begin30       #     jumps to .Ltmp1394
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1395-.Lfunc_begin30       # >> Call Site 43 <<
	.uleb128 .Ltmp1396-.Ltmp1395            #   Call between .Ltmp1395 and .Ltmp1396
	.uleb128 .Ltmp1397-.Lfunc_begin30       #     jumps to .Ltmp1397
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1398-.Lfunc_begin30       # >> Call Site 44 <<
	.uleb128 .Ltmp1399-.Ltmp1398            #   Call between .Ltmp1398 and .Ltmp1399
	.uleb128 .Ltmp1400-.Lfunc_begin30       #     jumps to .Ltmp1400
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1399-.Lfunc_begin30       # >> Call Site 45 <<
	.uleb128 .Ltmp1401-.Ltmp1399            #   Call between .Ltmp1399 and .Ltmp1401
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1401-.Lfunc_begin30       # >> Call Site 46 <<
	.uleb128 .Ltmp1402-.Ltmp1401            #   Call between .Ltmp1401 and .Ltmp1402
	.uleb128 .Ltmp1403-.Lfunc_begin30       #     jumps to .Ltmp1403
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1404-.Lfunc_begin30       # >> Call Site 47 <<
	.uleb128 .Ltmp1407-.Ltmp1404            #   Call between .Ltmp1404 and .Ltmp1407
	.uleb128 .Ltmp1427-.Lfunc_begin30       #     jumps to .Ltmp1427
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1407-.Lfunc_begin30       # >> Call Site 48 <<
	.uleb128 .Ltmp1423-.Ltmp1407            #   Call between .Ltmp1407 and .Ltmp1423
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1423-.Lfunc_begin30       # >> Call Site 49 <<
	.uleb128 .Ltmp1424-.Ltmp1423            #   Call between .Ltmp1423 and .Ltmp1424
	.uleb128 .Ltmp1427-.Lfunc_begin30       #     jumps to .Ltmp1427
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1424-.Lfunc_begin30       # >> Call Site 50 <<
	.uleb128 .Ltmp1408-.Ltmp1424            #   Call between .Ltmp1424 and .Ltmp1408
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1408-.Lfunc_begin30       # >> Call Site 51 <<
	.uleb128 .Ltmp1409-.Ltmp1408            #   Call between .Ltmp1408 and .Ltmp1409
	.uleb128 .Ltmp1427-.Lfunc_begin30       #     jumps to .Ltmp1427
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1409-.Lfunc_begin30       # >> Call Site 52 <<
	.uleb128 .Ltmp1425-.Ltmp1409            #   Call between .Ltmp1409 and .Ltmp1425
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1425-.Lfunc_begin30       # >> Call Site 53 <<
	.uleb128 .Ltmp1426-.Ltmp1425            #   Call between .Ltmp1425 and .Ltmp1426
	.uleb128 .Ltmp1427-.Lfunc_begin30       #     jumps to .Ltmp1427
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1428-.Lfunc_begin30       # >> Call Site 54 <<
	.uleb128 .Ltmp1429-.Ltmp1428            #   Call between .Ltmp1428 and .Ltmp1429
	.uleb128 .Ltmp1430-.Lfunc_begin30       #     jumps to .Ltmp1430
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1429-.Lfunc_begin30       # >> Call Site 55 <<
	.uleb128 .Ltmp1410-.Ltmp1429            #   Call between .Ltmp1429 and .Ltmp1410
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1410-.Lfunc_begin30       # >> Call Site 56 <<
	.uleb128 .Ltmp1411-.Ltmp1410            #   Call between .Ltmp1410 and .Ltmp1411
	.uleb128 .Ltmp1427-.Lfunc_begin30       #     jumps to .Ltmp1427
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1412-.Lfunc_begin30       # >> Call Site 57 <<
	.uleb128 .Ltmp1413-.Ltmp1412            #   Call between .Ltmp1412 and .Ltmp1413
	.uleb128 .Ltmp1414-.Lfunc_begin30       #     jumps to .Ltmp1414
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1413-.Lfunc_begin30       # >> Call Site 58 <<
	.uleb128 .Ltmp1440-.Ltmp1413            #   Call between .Ltmp1413 and .Ltmp1440
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1440-.Lfunc_begin30       # >> Call Site 59 <<
	.uleb128 .Ltmp1441-.Ltmp1440            #   Call between .Ltmp1440 and .Ltmp1441
	.uleb128 .Ltmp1442-.Lfunc_begin30       #     jumps to .Ltmp1442
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1437-.Lfunc_begin30       # >> Call Site 60 <<
	.uleb128 .Ltmp1438-.Ltmp1437            #   Call between .Ltmp1437 and .Ltmp1438
	.uleb128 .Ltmp1439-.Lfunc_begin30       #     jumps to .Ltmp1439
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1438-.Lfunc_begin30       # >> Call Site 61 <<
	.uleb128 .Ltmp1415-.Ltmp1438            #   Call between .Ltmp1438 and .Ltmp1415
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1415-.Lfunc_begin30       # >> Call Site 62 <<
	.uleb128 .Ltmp1416-.Ltmp1415            #   Call between .Ltmp1415 and .Ltmp1416
	.uleb128 .Ltmp1417-.Lfunc_begin30       #     jumps to .Ltmp1417
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1418-.Lfunc_begin30       # >> Call Site 63 <<
	.uleb128 .Ltmp1419-.Ltmp1418            #   Call between .Ltmp1418 and .Ltmp1419
	.uleb128 .Ltmp1420-.Lfunc_begin30       #     jumps to .Ltmp1420
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1419-.Lfunc_begin30       # >> Call Site 64 <<
	.uleb128 .Ltmp1431-.Ltmp1419            #   Call between .Ltmp1419 and .Ltmp1431
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1431-.Lfunc_begin30       # >> Call Site 65 <<
	.uleb128 .Ltmp1432-.Ltmp1431            #   Call between .Ltmp1431 and .Ltmp1432
	.uleb128 .Ltmp1433-.Lfunc_begin30       #     jumps to .Ltmp1433
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1434-.Lfunc_begin30       # >> Call Site 66 <<
	.uleb128 .Ltmp1435-.Ltmp1434            #   Call between .Ltmp1434 and .Ltmp1435
	.uleb128 .Ltmp1436-.Lfunc_begin30       #     jumps to .Ltmp1436
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1435-.Lfunc_begin30       # >> Call Site 67 <<
	.uleb128 .Lfunc_end59-.Ltmp1435         #   Call between .Ltmp1435 and .Lfunc_end59
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end30:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd13find_any_charEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd13find_any_charEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd13find_any_charEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd13find_any_charEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd13find_any_charEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception31
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	st.d	$s2, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 128                   # 8-byte Folded Spill
	st.d	$s4, $sp, 120                   # 8-byte Folded Spill
	st.d	$s5, $sp, 112                   # 8-byte Folded Spill
	st.d	$s6, $sp, 104                   # 8-byte Folded Spill
	st.d	$s7, $sp, 96                    # 8-byte Folded Spill
	st.d	$s8, $sp, 88                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	bge	$a2, $a1, .LBB60_2
# %bb.1:
	addi.d	$s6, $zero, -1
	b	.LBB60_33
.LBB60_2:                               # %.preheader.lr.ph
	move	$s0, $a3
	move	$fp, $a1
	move	$s1, $a0
	addi.d	$s4, $sp, 64
	addi.d	$s5, $sp, 32
	addi.w	$a0, $a2, 1
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	ld.d	$a3, $a3, 8
	ori	$s8, $zero, 16
	addi.w	$s6, $zero, -1
	b	.LBB60_4
	.p2align	4, , 16
.LBB60_3:                               # %._crit_edge
                                        #   in Loop: Header=BB60_4 Depth=1
	addi.d	$fp, $fp, 1
	addi.w	$a0, $fp, 0
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	beq	$a1, $a0, .LBB60_33
.LBB60_4:                               # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB60_6 Depth 2
	addi.w	$a0, $a3, 0
	blez	$a0, .LBB60_3
# %bb.5:                                # %.lr.ph.preheader
                                        #   in Loop: Header=BB60_4 Depth=1
	move	$s2, $zero
	slli.d	$a0, $fp, 7
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	.p2align	4, , 16
.LBB60_6:                               # %.lr.ph
                                        #   Parent Loop BB60_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	bltu	$a3, $s2, .LBB60_34
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i.i
                                        #   in Loop: Header=BB60_6 Depth=2
	st.d	$s4, $sp, 48
	move	$a2, $s4
	beq	$s2, $a3, .LBB60_9
# %bb.8:                                #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a0, $s0, 0
	ldx.b	$a0, $a0, $s2
	st.b	$a0, $sp, 64
	addi.d	$a2, $sp, 65
.LBB60_9:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit
                                        #   in Loop: Header=BB60_6 Depth=2
	xor	$a0, $s2, $a3
	ld.d	$a3, $s1, 176
	ld.d	$a1, $s1, 184
	sltu	$a0, $zero, $a0
	st.d	$a0, $sp, 56
	ld.d	$a0, $s1, 200
	sub.d	$a1, $a3, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $fp
	st.b	$zero, $a2, 0
	bltz	$a1, .LBB60_12
# %bb.10:                               #   in Loop: Header=BB60_6 Depth=2
	ori	$a2, $zero, 3
	bltu	$a2, $a1, .LBB60_13
# %bb.11:                               #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	add.d	$a0, $a3, $a0
	b	.LBB60_15
	.p2align	4, , 16
.LBB60_12:                              #   in Loop: Header=BB60_6 Depth=2
	srai.d	$a2, $a1, 2
	b	.LBB60_14
	.p2align	4, , 16
.LBB60_13:                              #   in Loop: Header=BB60_6 Depth=2
	srli.d	$a2, $a1, 2
.LBB60_14:                              #   in Loop: Header=BB60_6 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB60_15:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	st.d	$s5, $sp, 16
	st.d	$a1, $sp, 80
	move	$a0, $s5
	bltu	$a1, $s8, .LBB60_18
# %bb.16:                               # %.noexc.i.i
                                        #   in Loop: Header=BB60_6 Depth=2
.Ltmp1443:
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1444:
# %bb.17:                               # %.noexc
                                        #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB60_18:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB60_6 Depth=2
	beq	$a1, $s6, .LBB60_21
# %bb.19:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB60_6 Depth=2
	bnez	$a1, .LBB60_24
# %bb.20:                               #   in Loop: Header=BB60_6 Depth=2
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB60_21:                              #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a2, $sp, 80
	ld.d	$a0, $sp, 56
	st.d	$a2, $sp, 24
	bne	$a2, $a0, .LBB60_25
.LBB60_22:                              #   in Loop: Header=BB60_6 Depth=2
	ld.d	$s3, $sp, 16
	beqz	$a2, .LBB60_31
# %bb.23:                               #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a1, $sp, 48
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s7, $a0, 1
	bne	$s3, $s5, .LBB60_26
	b	.LBB60_27
	.p2align	4, , 16
.LBB60_24:                              #   in Loop: Header=BB60_6 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 80
	ld.d	$a0, $sp, 56
	st.d	$a2, $sp, 24
	beq	$a2, $a0, .LBB60_22
.LBB60_25:                              # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB60_6 Depth=2
	ld.d	$s3, $sp, 16
	move	$s7, $zero
	beq	$s3, $s5, .LBB60_27
.LBB60_26:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a0, $sp, 48
	beq	$a0, $s4, .LBB60_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
                                        #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_29:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
                                        #   in Loop: Header=BB60_6 Depth=2
	bnez	$s7, .LBB60_32
# %bb.30:                               #   in Loop: Header=BB60_6 Depth=2
	ld.d	$a3, $s0, 8
	addi.d	$s2, $s2, 1
	addi.w	$a0, $a3, 0
	blt	$s2, $a0, .LBB60_6
	b	.LBB60_3
.LBB60_31:                              #   in Loop: Header=BB60_6 Depth=2
	ori	$s7, $zero, 1
	bne	$s3, $s5, .LBB60_26
	b	.LBB60_27
.LBB60_32:                              # %.thread.loopexit
	move	$s6, $fp
.LBB60_33:                              # %.thread
	addi.w	$a0, $s6, 0
	ld.d	$s8, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.LBB60_34:
	pcalau12i	$a0, %pc_hi20(.L.str.222)
	addi.d	$a0, $a0, %pc_lo12(.L.str.222)
	pcalau12i	$a1, %pc_hi20(.L.str.221)
	addi.d	$a1, $a1, %pc_lo12(.L.str.221)
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZSt24__throw_out_of_range_fmtPKcz)
	jirl	$ra, $ra, 0
.LBB60_35:
.Ltmp1445:
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	beq	$a2, $s4, .LBB60_37
# %bb.36:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i25
	ld.d	$a0, $sp, 64
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB60_37:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit27
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end60:
	.size	_ZN2PP3Cmd13find_any_charEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end60-_ZN2PP3Cmd13find_any_charEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table60:
.Lexception31:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Ltmp1443-.Lfunc_begin31       # >> Call Site 1 <<
	.uleb128 .Ltmp1444-.Ltmp1443            #   Call between .Ltmp1443 and .Ltmp1444
	.uleb128 .Ltmp1445-.Lfunc_begin31       #     jumps to .Ltmp1445
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1444-.Lfunc_begin31       # >> Call Site 2 <<
	.uleb128 .Lfunc_end60-.Ltmp1444         #   Call between .Ltmp1444 and .Lfunc_end60
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end31:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd19find_closing_symbolENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_i # -- Begin function _ZN2PP3Cmd19find_closing_symbolENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_i
	.p2align	5
	.type	_ZN2PP3Cmd19find_closing_symbolENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_i,@function
_ZN2PP3Cmd19find_closing_symbolENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_i: # @_ZN2PP3Cmd19find_closing_symbolENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_i
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s8, $a3
	move	$s0, $a2
	move	$s1, $a1
	move	$s2, $a0
	move	$s7, $zero
	addi.d	$s5, $sp, 32
	slli.d	$s6, $a3, 7
	addi.w	$s4, $zero, -1
	move	$fp, $a3
                                        # implicit-def: $r4
                                        # kill: killed $r4
	.p2align	4, , 16
.LBB61_1:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$fp, $a2, .LBB61_29
# %bb.2:                                #   in Loop: Header=BB61_1 Depth=1
	ld.d	$a2, $s2, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $fp, $a2
	bltz	$a2, .LBB61_5
# %bb.3:                                #   in Loop: Header=BB61_1 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB61_6
# %bb.4:                                #   in Loop: Header=BB61_1 Depth=1
	add.d	$a0, $a1, $s6
	b	.LBB61_8
	.p2align	4, , 16
.LBB61_5:                               #   in Loop: Header=BB61_1 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB61_7
	.p2align	4, , 16
.LBB61_6:                               #   in Loop: Header=BB61_1 Depth=1
	srli.d	$a1, $a2, 2
.LBB61_7:                               #   in Loop: Header=BB61_1 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB61_8:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB61_1 Depth=1
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	st.d	$s5, $sp, 16
	st.d	$a1, $sp, 48
	move	$a0, $s5
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB61_10
# %bb.9:                                # %.noexc.i.i
                                        #   in Loop: Header=BB61_1 Depth=1
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB61_10:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB61_1 Depth=1
	beq	$a1, $s4, .LBB61_13
# %bb.11:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB61_1 Depth=1
	bnez	$a1, .LBB61_14
# %bb.12:                               #   in Loop: Header=BB61_1 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB61_13:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB61_1 Depth=1
	ld.d	$s3, $sp, 48
	ld.d	$a0, $s1, 8
	st.d	$s3, $sp, 24
	beq	$s3, $a0, .LBB61_15
	b	.LBB61_17
	.p2align	4, , 16
.LBB61_14:                              #   in Loop: Header=BB61_1 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$s3, $sp, 48
	ld.d	$a0, $s1, 8
	st.d	$s3, $sp, 24
	bne	$s3, $a0, .LBB61_17
.LBB61_15:                              #   in Loop: Header=BB61_1 Depth=1
	beqz	$s3, .LBB61_24
# %bb.16:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit
                                        #   in Loop: Header=BB61_1 Depth=1
	ld.d	$a1, $s1, 0
	ld.d	$a0, $sp, 16
	move	$a2, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB61_24
.LBB61_17:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread18
                                        #   in Loop: Header=BB61_1 Depth=1
	ld.d	$a0, $s0, 8
	bne	$s3, $a0, .LBB61_20
# %bb.18:                               #   in Loop: Header=BB61_1 Depth=1
	beqz	$s3, .LBB61_25
# %bb.19:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit17
                                        #   in Loop: Header=BB61_1 Depth=1
	ld.d	$a1, $s0, 0
	ld.d	$a0, $sp, 16
	move	$a2, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB61_25
.LBB61_20:                              #   in Loop: Header=BB61_1 Depth=1
	move	$s3, $zero
	ld.d	$a0, $sp, 16
	beq	$a0, $s5, .LBB61_22
.LBB61_21:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB61_1 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB61_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB61_1 Depth=1
	andi	$a0, $s3, 3
	bnez	$a0, .LBB61_28
# %bb.23:                               #   in Loop: Header=BB61_1 Depth=1
	addi.d	$fp, $fp, 1
	addi.d	$s8, $s8, 1
	addi.d	$s6, $s6, 128
	b	.LBB61_1
	.p2align	4, , 16
.LBB61_24:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread
                                        #   in Loop: Header=BB61_1 Depth=1
	addi.w	$s7, $s7, 1
	ori	$s3, $zero, 4
	ld.d	$a0, $sp, 16
	bne	$a0, $s5, .LBB61_21
	b	.LBB61_22
	.p2align	4, , 16
.LBB61_25:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit17.thread
                                        #   in Loop: Header=BB61_1 Depth=1
	beqz	$s7, .LBB61_27
# %bb.26:                               #   in Loop: Header=BB61_1 Depth=1
	addi.w	$s7, $s7, -1
	ori	$s3, $zero, 4
	ld.d	$a0, $sp, 16
	bne	$a0, $s5, .LBB61_21
	b	.LBB61_22
.LBB61_27:                              #   in Loop: Header=BB61_1 Depth=1
	move	$s7, $zero
	ori	$s3, $zero, 1
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	ld.d	$a0, $sp, 16
	bne	$a0, $s5, .LBB61_21
	b	.LBB61_22
.LBB61_28:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
.LBB61_29:
	addi.w	$a0, $s4, 0
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.Lfunc_end61:
	.size	_ZN2PP3Cmd19find_closing_symbolENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_i, .Lfunc_end61-_ZN2PP3Cmd19find_closing_symbolENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_i
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd23handle_innermost_parensERiS1_S1_S1_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_ # -- Begin function _ZN2PP3Cmd23handle_innermost_parensERiS1_S1_S1_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.p2align	5
	.type	_ZN2PP3Cmd23handle_innermost_parensERiS1_S1_S1_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_,@function
_ZN2PP3Cmd23handle_innermost_parensERiS1_S1_S1_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_: # @_ZN2PP3Cmd23handle_innermost_parensERiS1_S1_S1_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception32
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	st.d	$s6, $sp, 168                   # 8-byte Folded Spill
	st.d	$s7, $sp, 160                   # 8-byte Folded Spill
	st.d	$s8, $sp, 152                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	addi.w	$s8, $zero, -1
	st.d	$a7, $sp, 32                    # 8-byte Folded Spill
	st.d	$a6, $sp, 24                    # 8-byte Folded Spill
	st.d	$a5, $sp, 16                    # 8-byte Folded Spill
	st.d	$a4, $sp, 8                     # 8-byte Folded Spill
	move	$s0, $a3
	move	$s2, $a2
	move	$s3, $a0
	move	$a0, $s8
	lu32i.d	$a0, 0
	st.w	$a0, $a3, 0
	ori	$a0, $zero, 40
	st.h	$a0, $sp, 128
	ori	$a0, $zero, 1
	ld.w	$a2, $a1, 0
	ld.w	$a3, $s2, 0
	st.d	$a0, $sp, 120
	addi.d	$s1, $sp, 128
	st.d	$s1, $sp, 112
.Ltmp1446:
	addi.d	$a1, $sp, 112
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9find_lastENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii)
	jirl	$ra, $ra, 0
.Ltmp1447:
# %bb.1:
	move	$s5, $a0
	ld.d	$a0, $sp, 112
	beq	$a0, $s1, .LBB62_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB62_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	beq	$s5, $s8, .LBB62_36
# %bb.4:
	st.w	$s5, $s0, 0
	addi.w	$s6, $s5, 1
	st.w	$s6, $sp, 108
	ori	$a1, $zero, 1
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	st.w	$a1, $a0, 0
	addi.d	$s7, $sp, 88
	addi.d	$s4, $sp, 56
	ld.w	$a2, $s2, 0
	slli.d	$fp, $s6, 7
	st.d	$s5, $sp, 0                     # 8-byte Folded Spill
	addi.d	$s5, $s5, 2
	lu12i.w	$a0, 2
	ori	$s1, $a0, 2348
	.p2align	4, , 16
.LBB62_5:                               # %._crit_edge.i.i64
                                        # =>This Inner Loop Header: Depth=1
	addi.w	$a1, $s5, -1
	st.d	$s7, $sp, 72
	st.h	$s1, $sp, 88
	ori	$a0, $zero, 2
	st.d	$a0, $sp, 80
	st.b	$zero, $sp, 90
.Ltmp1449:
	addi.d	$a3, $sp, 72
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13find_any_charEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1450:
# %bb.6:                                #   in Loop: Header=BB62_5 Depth=1
	move	$s0, $a0
	ld.d	$a0, $sp, 72
	beq	$a0, $s7, .LBB62_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i68
                                        #   in Loop: Header=BB62_5 Depth=1
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB62_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit70
                                        #   in Loop: Header=BB62_5 Depth=1
	beq	$s0, $s8, .LBB62_37
# %bb.9:                                #   in Loop: Header=BB62_5 Depth=1
	ld.d	$a2, $s3, 176
	ld.d	$a1, $s3, 184
	ld.d	$a0, $s3, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s0
	bltz	$a1, .LBB62_12
# %bb.10:                               #   in Loop: Header=BB62_5 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB62_13
# %bb.11:                               #   in Loop: Header=BB62_5 Depth=1
	slli.d	$a0, $s0, 7
	add.d	$a0, $a2, $a0
	b	.LBB62_15
	.p2align	4, , 16
.LBB62_12:                              #   in Loop: Header=BB62_5 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB62_14
	.p2align	4, , 16
.LBB62_13:                              #   in Loop: Header=BB62_5 Depth=1
	srli.d	$a2, $a1, 2
.LBB62_14:                              #   in Loop: Header=BB62_5 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB62_15:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit75
                                        #   in Loop: Header=BB62_5 Depth=1
	st.d	$s4, $sp, 40
	ld.d	$a1, $a0, 8
	ld.d	$s7, $a0, 0
	st.d	$a1, $sp, 144
	move	$a0, $s4
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB62_17
# %bb.16:                               # %.noexc.i.i
                                        #   in Loop: Header=BB62_5 Depth=1
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 144
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 144
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB62_17:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB62_5 Depth=1
	beq	$a1, $s8, .LBB62_21
# %bb.18:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB62_5 Depth=1
	bnez	$a1, .LBB62_20
# %bb.19:                               #   in Loop: Header=BB62_5 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB62_21
	.p2align	4, , 16
.LBB62_20:                              #   in Loop: Header=BB62_5 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB62_21:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB62_5 Depth=1
	ld.d	$a1, $sp, 144
	ld.d	$a0, $sp, 40
	st.d	$a1, $sp, 48
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB62_23
# %bb.22:                               #   in Loop: Header=BB62_5 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -41
	sltui	$s7, $a1, 1
	bne	$a0, $s4, .LBB62_24
	b	.LBB62_25
	.p2align	4, , 16
.LBB62_23:                              #   in Loop: Header=BB62_5 Depth=1
	move	$s7, $zero
	beq	$a0, $s4, .LBB62_25
.LBB62_24:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i76
                                        #   in Loop: Header=BB62_5 Depth=1
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB62_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit78
                                        #   in Loop: Header=BB62_5 Depth=1
	ld.d	$a2, $s3, 176
	ld.d	$a1, $s3, 184
	ld.d	$a0, $s3, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s0
	bltz	$a1, .LBB62_28
# %bb.26:                               #   in Loop: Header=BB62_5 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB62_29
# %bb.27:                               #   in Loop: Header=BB62_5 Depth=1
	slli.d	$a0, $s0, 7
	add.d	$a0, $a2, $a0
	ld.w	$a0, $a0, 32
	ori	$a1, $zero, 12
	beq	$a0, $a1, .LBB62_31
	b	.LBB62_32
	.p2align	4, , 16
.LBB62_28:                              #   in Loop: Header=BB62_5 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB62_30
	.p2align	4, , 16
.LBB62_29:                              #   in Loop: Header=BB62_5 Depth=1
	srli.d	$a2, $a1, 2
.LBB62_30:                              #   in Loop: Header=BB62_5 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	ld.w	$a0, $a0, 32
	ori	$a1, $zero, 12
	bne	$a0, $a1, .LBB62_32
.LBB62_31:                              #   in Loop: Header=BB62_5 Depth=1
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ld.w	$a0, $a1, 0
	addi.d	$a0, $a0, 1
	st.w	$a0, $a1, 0
.LBB62_32:                              #   in Loop: Header=BB62_5 Depth=1
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	beqz	$a0, .LBB62_34
# %bb.33:                               #   in Loop: Header=BB62_5 Depth=1
	move	$a0, $s3
	move	$a1, $s0
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s2, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $s2, 0
.LBB62_34:                              #   in Loop: Header=BB62_5 Depth=1
	addi.d	$a0, $s0, -1
	st.w	$a0, $sp, 40
	addi.d	$a1, $sp, 108
	addi.d	$a2, $sp, 40
	move	$a0, $s3
	ld.d	$a3, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd5sevalERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
	ld.w	$a0, $sp, 40
	ld.w	$a1, $s2, 0
	sub.d	$a0, $a0, $s0
	add.d	$a0, $a0, $a1
	addi.w	$a2, $a0, 1
	st.w	$a2, $s2, 0
	bnez	$s7, .LBB62_40
# %bb.35:                               #   in Loop: Header=BB62_5 Depth=1
	st.w	$s5, $sp, 108
	addi.d	$fp, $fp, 128
	addi.d	$s6, $s6, 1
	addi.d	$s5, $s5, 1
	addi.d	$s7, $sp, 88
	b	.LBB62_5
.LBB62_36:
	move	$a0, $zero
	b	.LBB62_55
.LBB62_37:
	ld.d	$a2, $s3, 176
	ld.d	$a1, $s3, 184
	ld.d	$a0, $s3, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $a1, $s6
	bltz	$a3, .LBB62_42
# %bb.38:
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB62_43
# %bb.39:
	add.d	$a0, $a2, $fp
	b	.LBB62_45
.LBB62_40:
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	beqz	$a0, .LBB62_54
# %bb.41:
	move	$a0, $s3
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	move	$a2, $a1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s2, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $s2, 0
	b	.LBB62_54
.LBB62_42:
	srai.d	$a2, $a3, 2
	b	.LBB62_44
.LBB62_43:
	srli.d	$a2, $a3, 2
.LBB62_44:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $a1, $s6
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB62_45:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	ld.d	$fp, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $fp
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s2, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.90)
	addi.d	$a1, $a0, %pc_lo12(.L.str.90)
	ori	$a2, $zero, 57
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB62_56
# %bb.46:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB62_48
# %bb.47:
	ld.bu	$a0, $s1, 67
	b	.LBB62_49
.LBB62_48:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB62_49:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.91)
	addi.d	$a1, $a0, %pc_lo12(.L.str.91)
	ori	$a2, $zero, 52
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB62_56
# %bb.50:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i85
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB62_52
# %bb.51:
	ld.bu	$a0, $s1, 67
	b	.LBB62_53
.LBB62_52:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB62_53:                              # %.thread
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	st.w	$a0, $a1, 0
.LBB62_54:
	addi.d	$a0, $s0, 1
	sltu	$a0, $zero, $a0
.LBB62_55:
	ld.d	$s8, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB62_56:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB62_57:
.Ltmp1448:
	ld.d	$a2, $sp, 112
	move	$fp, $a0
	beq	$a2, $s1, .LBB62_62
# %bb.58:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i61
	ld.d	$a0, $sp, 128
	b	.LBB62_61
.LBB62_59:
.Ltmp1451:
	ld.d	$a2, $sp, 72
	move	$fp, $a0
	beq	$a2, $s7, .LBB62_62
# %bb.60:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i71
	ld.d	$a0, $sp, 88
.LBB62_61:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit63
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB62_62:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit63
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end62:
	.size	_ZN2PP3Cmd23handle_innermost_parensERiS1_S1_S1_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_, .Lfunc_end62-_ZN2PP3Cmd23handle_innermost_parensERiS1_S1_S1_bRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table62:
.Lexception32:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Ltmp1446-.Lfunc_begin32       # >> Call Site 1 <<
	.uleb128 .Ltmp1447-.Ltmp1446            #   Call between .Ltmp1446 and .Ltmp1447
	.uleb128 .Ltmp1448-.Lfunc_begin32       #     jumps to .Ltmp1448
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1447-.Lfunc_begin32       # >> Call Site 2 <<
	.uleb128 .Ltmp1449-.Ltmp1447            #   Call between .Ltmp1447 and .Ltmp1449
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1449-.Lfunc_begin32       # >> Call Site 3 <<
	.uleb128 .Ltmp1450-.Ltmp1449            #   Call between .Ltmp1449 and .Ltmp1450
	.uleb128 .Ltmp1451-.Lfunc_begin32       #     jumps to .Ltmp1451
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1450-.Lfunc_begin32       # >> Call Site 4 <<
	.uleb128 .Lfunc_end62-.Ltmp1450         #   Call between .Ltmp1450 and .Lfunc_end62
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end32:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd17evaluate_functionEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_ # -- Begin function _ZN2PP3Cmd17evaluate_functionEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.p2align	5
	.type	_ZN2PP3Cmd17evaluate_functionEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_,@function
_ZN2PP3Cmd17evaluate_functionEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_: # @_ZN2PP3Cmd17evaluate_functionEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception33
# %bb.0:
	addi.d	$sp, $sp, -736
	.cfi_def_cfa_offset 736
	st.d	$ra, $sp, 728                   # 8-byte Folded Spill
	st.d	$fp, $sp, 720                   # 8-byte Folded Spill
	st.d	$s0, $sp, 712                   # 8-byte Folded Spill
	st.d	$s1, $sp, 704                   # 8-byte Folded Spill
	st.d	$s2, $sp, 696                   # 8-byte Folded Spill
	st.d	$s3, $sp, 688                   # 8-byte Folded Spill
	st.d	$s4, $sp, 680                   # 8-byte Folded Spill
	st.d	$s5, $sp, 672                   # 8-byte Folded Spill
	st.d	$s6, $sp, 664                   # 8-byte Folded Spill
	st.d	$s7, $sp, 656                   # 8-byte Folded Spill
	st.d	$s8, $sp, 648                   # 8-byte Folded Spill
	fst.d	$fs0, $sp, 640                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	.cfi_offset 56, -96
	move	$fp, $a0
	ld.d	$a0, $a0, 88
	beqz	$a0, .LBB63_103
# %bb.1:
	move	$a6, $a3
	move	$s6, $a1
	ld.d	$a0, $fp, 176
	ld.d	$a3, $fp, 184
	ld.d	$a1, $fp, 200
	sub.d	$a3, $a0, $a3
	srai.d	$a3, $a3, 7
	add.d	$a7, $a3, $s6
	bltz	$a7, .LBB63_4
# %bb.2:
	ori	$a3, $zero, 4
	bgeu	$a7, $a3, .LBB63_5
# %bb.3:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
	slli.d	$a1, $s6, 7
	add.d	$a1, $a0, $a1
	ld.w	$a1, $a1, 32
	ori	$a3, $zero, 1
	beq	$a1, $a3, .LBB63_9
	b	.LBB63_103
.LBB63_4:
	srai.d	$a3, $a7, 2
	b	.LBB63_6
.LBB63_5:
	srli.d	$a3, $a7, 2
.LBB63_6:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	slli.d	$t0, $a3, 3
	ldx.d	$t0, $a1, $t0
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a7, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $t0, $a3
	ld.w	$a3, $a3, 32
	ori	$t0, $zero, 1
	bne	$a3, $t0, .LBB63_103
# %bb.7:
	bltz	$a7, .LBB63_10
# %bb.8:
	ori	$a3, $zero, 3
	bltu	$a3, $a7, .LBB63_11
.LBB63_9:
	st.d	$a5, $sp, 80                    # 8-byte Folded Spill
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	slli.d	$a1, $s6, 7
	add.d	$a0, $a0, $a1
	b	.LBB63_13
.LBB63_10:
	srai.d	$a0, $a7, 2
	b	.LBB63_12
.LBB63_11:
	srli.d	$a0, $a7, 2
.LBB63_12:
	st.d	$a5, $sp, 80                    # 8-byte Folded Spill
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a7, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB63_13:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit143
	st.d	$a4, $sp, 64                    # 8-byte Folded Spill
	st.d	$a6, $sp, 72                    # 8-byte Folded Spill
	addi.d	$s5, $sp, 560
	st.d	$s5, $sp, 544
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 320
	move	$a0, $s5
	bltu	$a1, $a2, .LBB63_15
# %bb.14:                               # %.noexc.i.i
	addi.d	$a0, $sp, 544
	addi.d	$a1, $sp, 320
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 320
	st.d	$a0, $sp, 544
	st.d	$a1, $sp, 560
.LBB63_15:                              # %._crit_edge.i.i.i
	addi.w	$s0, $zero, -1
	beq	$a1, $s0, .LBB63_19
# %bb.16:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB63_18
# %bb.17:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB63_19
.LBB63_18:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_19:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	ld.d	$a0, $fp, 88
	ld.d	$s2, $sp, 320
	ld.d	$s8, $a0, 16
	st.d	$s2, $sp, 552
	beqz	$s8, .LBB63_33
# %bb.20:                               # %.lr.ph.i.i.i
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	addi.d	$a1, $fp, 160
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	addi.d	$s3, $a0, 8
	ld.d	$s4, $sp, 544
	lu12i.w	$s1, -524288
	lu12i.w	$a0, 524287
	ori	$s7, $a0, 4095
	ori	$s0, $zero, 16
	ori	$s6, $zero, 24
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	b	.LBB63_23
	.p2align	4, , 16
.LBB63_21:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB63_23 Depth=1
	sub.d	$a0, $s5, $s2
	slt	$a1, $s1, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s7
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
.LBB63_22:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i
                                        #   in Loop: Header=BB63_23 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s8, $a0
	masknez	$a2, $s0, $a0
	maskeqz	$a3, $s6, $a0
	or	$a2, $a3, $a2
	ldx.d	$s8, $s8, $a2
	maskeqz	$a0, $s3, $a0
	or	$s3, $a0, $a1
	beqz	$s8, .LBB63_25
.LBB63_23:                              # =>This Inner Loop Header: Depth=1
	ld.d	$s5, $s8, 40
	sltu	$a0, $s2, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s2, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB63_21
# %bb.24:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB63_23 Depth=1
	ld.d	$a0, $s8, 32
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB63_22
	b	.LBB63_21
.LBB63_25:                              # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8FunctionEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i
	addi.d	$s5, $sp, 560
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	beq	$s3, $a0, .LBB63_33
# %bb.26:
	ld.d	$s0, $s3, 40
	sltu	$a0, $s0, $s2
	masknez	$a1, $s2, $a0
	maskeqz	$a0, $s0, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB63_28
# %bb.27:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s3, 32
	move	$a0, $s4
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB63_29
.LBB63_28:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $s2, $s0
	slt	$a1, $s1, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s7
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
.LBB63_29:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit
	addi.w	$s2, $a0, 0
	bltz	$s2, .LBB63_33
# %bb.30:
	ld.d	$a2, $fp, 176
	ld.d	$a0, $fp, 184
	ld.d	$a1, $fp, 200
	sub.d	$a0, $a2, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s6
	bltz	$a0, .LBB63_104
# %bb.31:
	ori	$a3, $zero, 3
	bltu	$a3, $a0, .LBB63_105
# %bb.32:
	slli.d	$a0, $s6, 7
	add.d	$a0, $a2, $a0
	ld.w	$a1, $a0, 80
	st.d	$a1, $sp, 16                    # 8-byte Folded Spill
	ld.w	$a1, $a0, 84
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	b	.LBB63_107
.LBB63_33:                              # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8FunctionESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit.thread
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s6
	bltz	$a1, .LBB63_36
# %bb.34:
	ori	$a3, $zero, 3
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	bltu	$a3, $a1, .LBB63_37
# %bb.35:
	slli.d	$a0, $s6, 7
	add.d	$a0, $a2, $a0
	b	.LBB63_39
.LBB63_36:
	srai.d	$a2, $a1, 2
	ld.d	$s0, $sp, 64                    # 8-byte Folded Reload
	b	.LBB63_38
.LBB63_37:
	srli.d	$a2, $a1, 2
.LBB63_38:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB63_39:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit145
	ld.d	$s7, $sp, 88                    # 8-byte Folded Reload
.Ltmp1569:
	move	$a1, $s0
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1570:
# %bb.40:
	addi.d	$s1, $s0, 16
.Ltmp1571:
	pcalau12i	$a0, %pc_hi20(.L.str.108)
	addi.d	$a1, $a0, %pc_lo12(.L.str.108)
	ori	$a2, $zero, 19
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1572:
# %bb.41:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB63_357
# %bb.42:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB63_44
# %bb.43:
	ld.bu	$a0, $s2, 67
	b	.LBB63_46
.LBB63_44:
.Ltmp1573:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1574:
# %bb.45:                               # %.noexc401
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp1575:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp1576:
.LBB63_46:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp1577:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1578:
# %bb.47:                               # %.noexc403
.Ltmp1579:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1580:
# %bb.48:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp1581:
	pcalau12i	$a0, %pc_hi20(.L.str.86)
	addi.d	$a1, $a0, %pc_lo12(.L.str.86)
	ori	$a2, $zero, 17
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1582:
# %bb.49:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit146
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s6
	bltz	$a1, .LBB63_52
# %bb.50:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB63_53
# %bb.51:
	slli.d	$a0, $s6, 7
	add.d	$a0, $a2, $a0
	b	.LBB63_55
.LBB63_52:
	srai.d	$a2, $a1, 2
	b	.LBB63_54
.LBB63_53:
	srli.d	$a2, $a1, 2
.LBB63_54:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB63_55:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit148
	addi.d	$s3, $sp, 336
	st.d	$s3, $sp, 320
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 608
	move	$a0, $s3
	bltu	$a1, $a2, .LBB63_58
# %bb.56:                               # %.noexc.i.i150
.Ltmp1583:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1584:
# %bb.57:                               # %.noexc
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 320
	st.d	$a1, $sp, 336
.LBB63_58:                              # %._crit_edge.i.i.i149
	beq	$a1, $s7, .LBB63_62
# %bb.59:                               # %._crit_edge.i.i.i149
	bnez	$a1, .LBB63_61
# %bb.60:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB63_62
.LBB63_61:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_62:
	ld.d	$a2, $sp, 608
	ld.d	$a1, $sp, 320
	st.d	$a2, $sp, 328
.Ltmp1586:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1587:
# %bb.63:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB63_359
# %bb.64:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i406
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB63_66
# %bb.65:
	ld.bu	$a0, $s2, 67
	b	.LBB63_68
.LBB63_66:
.Ltmp1588:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1589:
# %bb.67:                               # %.noexc411
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp1590:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp1591:
.LBB63_68:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i408
.Ltmp1592:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1593:
# %bb.69:                               # %.noexc413
.Ltmp1594:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1595:
# %bb.70:                               # %_ZNSolsEPFRSoS_E.exit154
	ld.d	$a0, $sp, 320
	beq	$a0, $s3, .LBB63_72
# %bb.71:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_72:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
.Ltmp1596:
	pcalau12i	$a0, %pc_hi20(.L.str.109)
	addi.d	$a1, $a0, %pc_lo12(.L.str.109)
	ori	$a2, $zero, 31
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1597:
# %bb.73:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit156
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB63_357
# %bb.74:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i417
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB63_76
# %bb.75:
	ld.bu	$a0, $s0, 67
	b	.LBB63_78
.LBB63_76:
.Ltmp1598:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1599:
# %bb.77:                               # %.noexc422
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp1600:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp1601:
.LBB63_78:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i419
.Ltmp1602:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1603:
# %bb.79:                               # %.noexc424
.Ltmp1604:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1605:
# %bb.80:                               # %_ZNSolsEPFRSoS_E.exit158
	ld.d	$a0, $fp, 88
	ld.d	$s0, $a0, 24
	addi.d	$a0, $a0, 8
	beq	$s0, $a0, .LBB63_100
# %bb.81:                               # %.lr.ph526
	addi.d	$s3, $sp, 336
	ori	$s6, $zero, 16
	b	.LBB63_83
	.p2align	4, , 16
.LBB63_82:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168
                                        #   in Loop: Header=BB63_83 Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 88
	addi.d	$a1, $a1, 8
	move	$s0, $a0
	beq	$a0, $a1, .LBB63_100
.LBB63_83:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 72
	ld.d	$s2, $s0, 64
	st.d	$s3, $sp, 320
	st.d	$a1, $sp, 608
	move	$a0, $s3
	bltu	$a1, $s6, .LBB63_86
# %bb.84:                               # %.noexc.i.i160
                                        #   in Loop: Header=BB63_83 Depth=1
.Ltmp1606:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1607:
# %bb.85:                               # %.noexc161
                                        #   in Loop: Header=BB63_83 Depth=1
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 320
	st.d	$a1, $sp, 336
.LBB63_86:                              # %._crit_edge.i.i.i159
                                        #   in Loop: Header=BB63_83 Depth=1
	beq	$a1, $s7, .LBB63_90
# %bb.87:                               # %._crit_edge.i.i.i159
                                        #   in Loop: Header=BB63_83 Depth=1
	bnez	$a1, .LBB63_89
# %bb.88:                               #   in Loop: Header=BB63_83 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB63_90
	.p2align	4, , 16
.LBB63_89:                              #   in Loop: Header=BB63_83 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_90:                              #   in Loop: Header=BB63_83 Depth=1
	ld.d	$a2, $sp, 608
	ld.d	$a1, $sp, 320
	st.d	$a2, $sp, 328
.Ltmp1609:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1610:
# %bb.91:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit163
                                        #   in Loop: Header=BB63_83 Depth=1
	move	$s2, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB63_355
# %bb.92:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i428
                                        #   in Loop: Header=BB63_83 Depth=1
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB63_94
# %bb.93:                               #   in Loop: Header=BB63_83 Depth=1
	ld.bu	$a0, $s4, 67
	b	.LBB63_96
	.p2align	4, , 16
.LBB63_94:                              #   in Loop: Header=BB63_83 Depth=1
.Ltmp1611:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1612:
# %bb.95:                               # %.noexc433
                                        #   in Loop: Header=BB63_83 Depth=1
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp1613:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp1614:
.LBB63_96:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i430
                                        #   in Loop: Header=BB63_83 Depth=1
.Ltmp1615:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1616:
# %bb.97:                               # %.noexc435
                                        #   in Loop: Header=BB63_83 Depth=1
.Ltmp1617:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1618:
# %bb.98:                               # %_ZNSolsEPFRSoS_E.exit165
                                        #   in Loop: Header=BB63_83 Depth=1
	ld.d	$a0, $sp, 320
	beq	$a0, $s3, .LBB63_82
# %bb.99:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i166
                                        #   in Loop: Header=BB63_83 Depth=1
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB63_82
.LBB63_100:                             # %._crit_edge527
	ori	$a0, $zero, 2
	ld.d	$a1, $sp, 80                    # 8-byte Folded Reload
	st.w	$a0, $a1, 0
.LBB63_101:
	ld.d	$a0, $sp, 544
	beq	$a0, $s5, .LBB63_103
# %bb.102:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i390
	ld.d	$a1, $sp, 560
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_103:
	fld.d	$fs0, $sp, 640                  # 8-byte Folded Reload
	ld.d	$s8, $sp, 648                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 656                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 664                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 672                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 680                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 688                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 696                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 704                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 712                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 720                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 728                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 736
	ret
.LBB63_104:
	srai.d	$a2, $a0, 2
	b	.LBB63_106
.LBB63_105:
	srli.d	$a2, $a0, 2
.LBB63_106:
	slli.d	$a3, $a2, 3
	ldx.d	$a1, $a1, $a3
	andi	$a3, $a0, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
	ld.w	$a4, $a3, 80
	st.d	$a4, $sp, 16                    # 8-byte Folded Spill
	ld.w	$a3, $a3, 84
	st.d	$a3, $sp, 24                    # 8-byte Folded Spill
	slli.d	$a2, $a2, 2
	sub.d	$a0, $a0, $a2
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB63_107:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit180
	addi.d	$s6, $sp, 528
	ld.d	$a1, $a0, 96
	ld.d	$s8, $a0, 88
	st.d	$s6, $sp, 512
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 320
	move	$a0, $s6
	bltu	$a1, $a2, .LBB63_110
# %bb.108:                              # %.noexc.i.i182
.Ltmp1452:
	addi.d	$a0, $sp, 512
	addi.d	$a1, $sp, 320
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1453:
# %bb.109:                              # %.noexc183
	ld.d	$a1, $sp, 320
	st.d	$a0, $sp, 512
	st.d	$a1, $sp, 528
.LBB63_110:                             # %._crit_edge.i.i.i181
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB63_114
# %bb.111:                              # %._crit_edge.i.i.i181
	bnez	$a1, .LBB63_113
# %bb.112:
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB63_114
.LBB63_113:
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_114:
	ld.d	$a0, $sp, 320
	ld.d	$a1, $sp, 552
	ori	$a2, $zero, 7
	st.d	$a0, $sp, 520
	bne	$a1, $a2, .LBB63_116
# %bb.115:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	ld.d	$a0, $sp, 544
	pcalau12i	$a1, %pc_hi20(.L.str.110)
	addi.d	$a1, $a1, %pc_lo12(.L.str.110)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB63_163
.LBB63_116:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread480
	slti	$a0, $s2, 0
	masknez	$a1, $s3, $a0
	ld.d	$a2, $sp, 48                    # 8-byte Folded Reload
	maskeqz	$a0, $a2, $a0
	or	$s2, $a0, $a1
	addi.d	$s1, $sp, 336
	ld.d	$a1, $s2, 144
	ld.d	$s8, $s2, 136
	st.d	$s1, $sp, 320
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 608
	move	$a0, $s1
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	bltu	$a1, $a2, .LBB63_119
# %bb.117:                              # %.noexc.i.i255
.Ltmp1455:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1456:
# %bb.118:                              # %.noexc256
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 320
	st.d	$a1, $sp, 336
.LBB63_119:                             # %._crit_edge.i.i.i254
	beq	$a1, $s0, .LBB63_123
# %bb.120:                              # %._crit_edge.i.i.i254
	bnez	$a1, .LBB63_122
# %bb.121:
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB63_123
.LBB63_122:
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_123:
	ld.d	$a0, $sp, 608
	ld.d	$s4, $sp, 320
	ori	$a1, $zero, 6
	st.d	$a0, $sp, 328
	bne	$a0, $a1, .LBB63_125
# %bb.124:
	pcalau12i	$a0, %pc_hi20(.L.str.113)
	addi.d	$a1, $a0, %pc_lo12(.L.str.113)
	ori	$a2, $zero, 6
	move	$a0, $s4
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s0, $a0, 1
	b	.LBB63_126
.LBB63_125:
	move	$s0, $zero
.LBB63_126:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit258
	beq	$s4, $s1, .LBB63_128
# %bb.127:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i259
	ld.d	$a0, $sp, 336
	addi.d	$a1, $a0, 1
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_128:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit261
	addi.d	$a0, $s2, 64
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	beqz	$s0, .LBB63_207
# %bb.129:
	st.d	$s2, $sp, 48                    # 8-byte Folded Spill
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.w	$a0, $s0, 0
	st.d	$zero, $sp, 464
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 448
	blez	$a0, .LBB63_157
# %bb.130:                              # %.lr.ph
	move	$s3, $zero
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	addi.w	$s6, $a0, 1
	addi.d	$s1, $sp, 336
	slli.d	$s7, $s6, 7
	ori	$s2, $zero, 16
	b	.LBB63_132
	.p2align	4, , 16
.LBB63_131:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit281
                                        #   in Loop: Header=BB63_132 Depth=1
	ld.w	$a0, $s0, 0
	addi.d	$s3, $s3, 1
	addi.d	$s7, $s7, 128
	bge	$s3, $a0, .LBB63_157
.LBB63_132:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s6, $s3
	add.d	$a1, $a3, $a1
	bltz	$a1, .LBB63_135
# %bb.133:                              #   in Loop: Header=BB63_132 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB63_136
# %bb.134:                              #   in Loop: Header=BB63_132 Depth=1
	add.d	$a0, $a2, $s7
	b	.LBB63_138
	.p2align	4, , 16
.LBB63_135:                             #   in Loop: Header=BB63_132 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB63_137
.LBB63_136:                             #   in Loop: Header=BB63_132 Depth=1
	srli.d	$a2, $a1, 2
.LBB63_137:                             #   in Loop: Header=BB63_132 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB63_138:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit270
                                        #   in Loop: Header=BB63_132 Depth=1
	st.d	$s1, $sp, 320
	ld.d	$a1, $a0, 8
	ld.d	$s8, $a0, 0
	st.d	$a1, $sp, 608
	move	$a0, $s1
	bltu	$a1, $s2, .LBB63_141
# %bb.139:                              # %.noexc.i.i272
                                        #   in Loop: Header=BB63_132 Depth=1
.Ltmp1458:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1459:
# %bb.140:                              # %.noexc273
                                        #   in Loop: Header=BB63_132 Depth=1
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 320
	st.d	$a1, $sp, 336
.LBB63_141:                             # %._crit_edge.i.i.i271
                                        #   in Loop: Header=BB63_132 Depth=1
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB63_145
# %bb.142:                              # %._crit_edge.i.i.i271
                                        #   in Loop: Header=BB63_132 Depth=1
	bnez	$a1, .LBB63_144
# %bb.143:                              #   in Loop: Header=BB63_132 Depth=1
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB63_145
	.p2align	4, , 16
.LBB63_144:                             #   in Loop: Header=BB63_132 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_145:                             #   in Loop: Header=BB63_132 Depth=1
	ld.d	$a1, $sp, 608
	ld.d	$s8, $sp, 456
	ld.d	$a0, $sp, 464
	st.d	$a1, $sp, 328
	beq	$s8, $a0, .LBB63_152
# %bb.146:                              #   in Loop: Header=BB63_132 Depth=1
	addi.d	$a0, $s8, 16
	st.d	$a0, $s8, 0
	ld.d	$s4, $sp, 320
	st.d	$a1, $sp, 608
	bltu	$a1, $s2, .LBB63_149
# %bb.147:                              # %.noexc.i.i276
                                        #   in Loop: Header=BB63_132 Depth=1
.Ltmp1461:
	addi.d	$a1, $sp, 608
	move	$a0, $s8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1462:
# %bb.148:                              # %.noexc277
                                        #   in Loop: Header=BB63_132 Depth=1
	st.d	$a0, $s8, 0
	ld.d	$a1, $sp, 608
	st.d	$a1, $s8, 16
.LBB63_149:                             # %._crit_edge.i.i.i275
                                        #   in Loop: Header=BB63_132 Depth=1
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB63_155
# %bb.150:                              # %._crit_edge.i.i.i275
                                        #   in Loop: Header=BB63_132 Depth=1
	bnez	$a1, .LBB63_154
# %bb.151:                              #   in Loop: Header=BB63_132 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB63_155
	.p2align	4, , 16
.LBB63_152:                             #   in Loop: Header=BB63_132 Depth=1
.Ltmp1463:
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 320
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1464:
# %bb.153:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB63_132 Depth=1
	ld.d	$a0, $sp, 320
	bne	$a0, $s1, .LBB63_156
	b	.LBB63_131
.LBB63_154:                             #   in Loop: Header=BB63_132 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_155:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB63_132 Depth=1
	ld.d	$a0, $sp, 608
	st.d	$a0, $s8, 8
	ld.d	$a0, $sp, 456
	addi.d	$a0, $a0, 32
	st.d	$a0, $sp, 456
	ld.d	$a0, $sp, 320
	beq	$a0, $s1, .LBB63_131
.LBB63_156:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i279
                                        #   in Loop: Header=BB63_132 Depth=1
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB63_131
.LBB63_157:                             # %._crit_edge
	addi.d	$s1, $sp, 240
	ld.d	$a1, $sp, 520
	ld.d	$s8, $sp, 512
	st.d	$s1, $sp, 224
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 320
	move	$a0, $s1
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	bltu	$a1, $a2, .LBB63_160
# %bb.158:                              # %.noexc.i263
.Ltmp1466:
	addi.d	$a0, $sp, 224
	addi.d	$a1, $sp, 320
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1467:
# %bb.159:                              # %.noexc264
	ld.d	$a1, $sp, 320
	st.d	$a0, $sp, 224
	st.d	$a1, $sp, 240
.LBB63_160:                             # %._crit_edge.i.i262
	beq	$a1, $s0, .LBB63_167
# %bb.161:                              # %._crit_edge.i.i262
	bnez	$a1, .LBB63_166
# %bb.162:
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB63_167
.LBB63_163:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	addi.w	$a3, $a0, 1
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB63_298
# %bb.164:
	ori	$a4, $zero, 3
	bltu	$a4, $a1, .LBB63_299
# %bb.165:
	slli.d	$a0, $a3, 7
	add.d	$a0, $a2, $a0
	b	.LBB63_301
.LBB63_166:
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_167:
	ld.d	$a0, $sp, 320
	ld.d	$a1, $fp, 40
	st.d	$a0, $sp, 232
.Ltmp1469:
	addi.d	$a0, $sp, 480
	addi.d	$a2, $sp, 448
	addi.d	$a7, $sp, 224
	st.d	$a1, $sp, 0
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a6, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP8Function8evaluateERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERNS2_18basic_stringstreamIcS5_S6_EERiiiS7_PSt5dequeIS7_S8_E)
	jirl	$ra, $ra, 0
.Ltmp1470:
# %bb.168:
	ld.d	$a0, $sp, 224
	addi.d	$s6, $sp, 528
	beq	$a0, $s1, .LBB63_170
# %bb.169:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i285
	ld.d	$a1, $sp, 240
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_170:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit287
	ld.d	$a1, $sp, 488
	addi.d	$s2, $sp, 208
	st.d	$s2, $sp, 192
	ld.d	$s8, $sp, 480
	st.d	$a1, $sp, 608
	ori	$a2, $zero, 16
	addi.d	$s1, $sp, 496
	move	$a0, $s2
	bltu	$a1, $a2, .LBB63_173
# %bb.171:                              # %.noexc.i289
.Ltmp1472:
	addi.d	$a0, $sp, 192
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1473:
# %bb.172:                              # %.noexc290
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 192
	st.d	$a1, $sp, 208
.LBB63_173:                             # %._crit_edge.i.i288
	beq	$a1, $s0, .LBB63_177
# %bb.174:                              # %._crit_edge.i.i288
	bnez	$a1, .LBB63_176
# %bb.175:
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB63_177
.LBB63_176:
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_177:
	ld.d	$a0, $sp, 608
	st.d	$a0, $sp, 200
	addi.d	$s3, $sp, 176
	ld.d	$a1, $sp, 520
	ld.d	$s8, $sp, 512
	st.d	$s3, $sp, 160
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 608
	move	$a0, $s3
	bltu	$a1, $a2, .LBB63_180
# %bb.178:                              # %.noexc.i293
.Ltmp1475:
	addi.d	$a0, $sp, 160
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1476:
# %bb.179:                              # %.noexc294
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 160
	st.d	$a1, $sp, 176
.LBB63_180:                             # %._crit_edge.i.i292
	beq	$a1, $s0, .LBB63_184
# %bb.181:                              # %._crit_edge.i.i292
	bnez	$a1, .LBB63_183
# %bb.182:
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB63_184
.LBB63_183:
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_184:
	ld.d	$a0, $sp, 608
	ld.d	$a5, $fp, 40
	st.d	$a0, $sp, 168
.Ltmp1478:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 192
	addi.d	$a4, $sp, 160
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp1479:
# %bb.185:
	ld.d	$a0, $sp, 160
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	beq	$a0, $s3, .LBB63_187
# %bb.186:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i296
	ld.d	$a1, $sp, 176
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_187:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit298
	ld.d	$a0, $sp, 192
	beq	$a0, $s2, .LBB63_189
# %bb.188:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i299
	ld.d	$a1, $sp, 208
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_189:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit301
	ld.w	$a0, $s0, 0
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	add.w	$a2, $a0, $a1
.Ltmp1481:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp1482:
	ld.d	$s2, $sp, 48                    # 8-byte Folded Reload
# %bb.190:                              # %.noexc307
	ld.d	$a4, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a4, $a1
	srai.d	$a2, $a2, 7
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	add.d	$a3, $a2, $a3
	bltz	$a3, .LBB63_193
# %bb.191:
	ori	$a2, $zero, 3
	bltu	$a2, $a3, .LBB63_194
# %bb.192:
	ld.d	$a2, $fp, 192
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	b	.LBB63_196
.LBB63_193:
	srai.d	$a4, $a3, 2
	b	.LBB63_195
.LBB63_194:
	srli.d	$a4, $a3, 2
.LBB63_195:
	slli.d	$a1, $a4, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a4, $a0, 3
	addi.d	$a2, $a1, 512
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
.LBB63_196:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i302
	st.d	$a3, $sp, 608
	st.d	$a1, $sp, 616
	st.d	$a2, $sp, 624
	st.d	$a0, $sp, 632
.Ltmp1483:
	addi.d	$a0, $sp, 576
	addi.d	$a2, $sp, 608
	addi.d	$a3, $sp, 320
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1484:
# %bb.197:
	ld.w	$a0, $s0, 0
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	ld.w	$a1, $a2, 0
	sub.d	$a0, $a1, $a0
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	st.w	$a0, $a2, 0
	addi.d	$a0, $sp, 320
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 480
	beq	$a0, $s1, .LBB63_199
# %bb.198:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i310
	ld.d	$a1, $sp, 496
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_199:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit312
	ld.d	$a0, $sp, 448
	ld.d	$s0, $sp, 456
	beq	$a0, $s0, .LBB63_205
# %bb.200:                              # %.lr.ph.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB63_202
	.p2align	4, , 16
.LBB63_201:                             # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB63_202 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB63_204
.LBB63_202:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB63_201
# %bb.203:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB63_202 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB63_201
.LBB63_204:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	ld.d	$a0, $sp, 448
.LBB63_205:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	beqz	$a0, .LBB63_207
# %bb.206:
	ld.d	$a1, $sp, 464
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_207:
	addi.d	$s1, $sp, 336
	ld.d	$a1, $s2, 144
	ld.d	$s7, $s2, 136
	st.d	$s1, $sp, 320
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 608
	move	$a0, $s1
	bltu	$a1, $a2, .LBB63_210
# %bb.208:                              # %.noexc.i.i328
.Ltmp1486:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1487:
# %bb.209:                              # %.noexc329
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 320
	st.d	$a1, $sp, 336
.LBB63_210:                             # %._crit_edge.i.i.i326
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB63_214
# %bb.211:                              # %._crit_edge.i.i.i326
	bnez	$a1, .LBB63_213
# %bb.212:
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB63_214
.LBB63_213:
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_214:
	ld.d	$a1, $sp, 608
	ld.d	$a0, $sp, 320
	ori	$a2, $zero, 4
	st.d	$a1, $sp, 328
	bne	$a1, $a2, .LBB63_216
# %bb.215:
	ld.w	$a1, $a0, 0
	lu12i.w	$a2, 443926
	ori	$a2, $a2, 1394
	xor	$a1, $a1, $a2
	sltui	$s0, $a1, 1
	b	.LBB63_217
.LBB63_216:
	move	$s0, $zero
.LBB63_217:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit332
	beq	$a0, $s1, .LBB63_219
# %bb.218:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i333
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_219:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit335
	beqz	$s0, .LBB63_353
# %bb.220:                              # %.preheader
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.w	$a1, $s0, 0
	blez	$a1, .LBB63_286
# %bb.221:                              # %.lr.ph518
	move	$s1, $zero
	ld.d	$a0, $sp, 56                    # 8-byte Folded Reload
	addi.w	$a0, $a0, 1
	st.d	$a0, $sp, 48                    # 8-byte Folded Spill
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	ori	$a2, $zero, 1
	ori	$s7, $zero, 2
.LBB63_222:                             # %.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB63_225 Depth 2
	ld.d	$a4, $fp, 176
	ld.d	$a0, $fp, 184
	ld.d	$a3, $fp, 200
	sub.d	$a0, $a4, $a0
	srai.d	$a0, $a0, 7
	addi.d	$s2, $s1, 1
	ld.d	$a5, $sp, 48                    # 8-byte Folded Reload
	add.d	$a6, $a5, $s1
	slli.d	$s3, $a6, 7
	add.d	$a5, $a5, $a0
	add.d	$a0, $a6, $a0
	slli.d	$a0, $a0, 7
	addi.d	$a6, $a0, 32
	move	$a0, $s2
	b	.LBB63_225
.LBB63_223:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit340.thread
                                        #   in Loop: Header=BB63_225 Depth=2
	add.d	$a0, $a4, $s3
	ld.wu	$a7, $a0, 32
	bstrpick.d	$a7, $a7, 31, 1
	slli.w	$a7, $a7, 1
	bne	$a7, $s7, .LBB63_231
.LBB63_224:                             #   in Loop: Header=BB63_225 Depth=2
	addi.d	$a0, $s1, 1
	addi.d	$s2, $s2, 1
	addi.d	$s3, $s3, 128
	addi.d	$a6, $a6, 128
	bge	$s1, $a1, .LBB63_266
.LBB63_225:                             #   Parent Loop BB63_222 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	move	$s1, $a0
	add.d	$a0, $a5, $a0
	addi.d	$a0, $a0, -1
	bltz	$a0, .LBB63_228
# %bb.226:                              #   in Loop: Header=BB63_225 Depth=2
	ori	$a7, $zero, 4
	bltu	$a0, $a7, .LBB63_223
# %bb.227:                              #   in Loop: Header=BB63_225 Depth=2
	srli.d	$a7, $a0, 2
	b	.LBB63_229
	.p2align	4, , 16
.LBB63_228:                             #   in Loop: Header=BB63_225 Depth=2
	srai.d	$a7, $a0, 2
.LBB63_229:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit340
                                        #   in Loop: Header=BB63_225 Depth=2
	slli.d	$t0, $a7, 3
	ldx.d	$t0, $a3, $t0
	slli.d	$a7, $a7, 9
	sub.d	$a7, $t0, $a7
	ldx.wu	$a7, $a7, $a6
	bstrpick.d	$a7, $a7, 31, 1
	slli.w	$a7, $a7, 1
	beq	$a7, $s7, .LBB63_224
# %bb.230:                              #   in Loop: Header=BB63_222 Depth=1
	slli.d	$a1, $a0, 1
	bstrins.d	$a1, $zero, 2, 0
	ldx.d	$a1, $a3, $a1
	andi	$a0, $a0, 3
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB63_231:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit342
                                        #   in Loop: Header=BB63_222 Depth=1
.Ltmp1489:
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 80                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1490:
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
# %bb.232:                              #   in Loop: Header=BB63_222 Depth=1
.Ltmp1491:
	pcalau12i	$a0, %pc_hi20(.L.str.115)
	addi.d	$a1, $a0, %pc_lo12(.L.str.115)
	ori	$a2, $zero, 47
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1492:
# %bb.233:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit344
                                        #   in Loop: Header=BB63_222 Depth=1
.Ltmp1493:
	addi.w	$a1, $s2, 0
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1494:
# %bb.234:                              #   in Loop: Header=BB63_222 Depth=1
	move	$s8, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s8, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB63_365
# %bb.235:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i439
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB63_237
# %bb.236:                              #   in Loop: Header=BB63_222 Depth=1
	ld.bu	$a0, $s4, 67
	b	.LBB63_239
.LBB63_237:                             #   in Loop: Header=BB63_222 Depth=1
.Ltmp1495:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1496:
# %bb.238:                              # %.noexc444
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp1497:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp1498:
.LBB63_239:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i441
                                        #   in Loop: Header=BB63_222 Depth=1
.Ltmp1499:
	ext.w.b	$a1, $a0
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1500:
# %bb.240:                              # %.noexc446
                                        #   in Loop: Header=BB63_222 Depth=1
.Ltmp1501:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1502:
# %bb.241:                              # %_ZNSolsEPFRSoS_E.exit346
                                        #   in Loop: Header=BB63_222 Depth=1
.Ltmp1503:
	pcalau12i	$a0, %pc_hi20(.L.str.86)
	addi.d	$a1, $a0, %pc_lo12(.L.str.86)
	ori	$a2, $zero, 17
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1504:
# %bb.242:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit348
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	add.d	$a3, $a3, $a1
	add.d	$a3, $a3, $s1
	addi.d	$a3, $a3, -1
	bltz	$a3, .LBB63_245
# %bb.243:                              #   in Loop: Header=BB63_222 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB63_246
# %bb.244:                              #   in Loop: Header=BB63_222 Depth=1
	add.d	$a0, $a2, $s3
	b	.LBB63_248
.LBB63_245:                             #   in Loop: Header=BB63_222 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB63_247
.LBB63_246:                             #   in Loop: Header=BB63_222 Depth=1
	srli.d	$a2, $a3, 2
.LBB63_247:                             #   in Loop: Header=BB63_222 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	ld.d	$a2, $sp, 48                    # 8-byte Folded Reload
	add.d	$a1, $a2, $a1
	add.d	$a1, $a1, $s1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, -128
.LBB63_248:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit350
                                        #   in Loop: Header=BB63_222 Depth=1
	addi.d	$s2, $sp, 336
	st.d	$s2, $sp, 320
	ld.d	$a1, $a0, 8
	ld.d	$s8, $a0, 0
	st.d	$a1, $sp, 608
	move	$a0, $s2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB63_251
# %bb.249:                              # %.noexc.i.i353
                                        #   in Loop: Header=BB63_222 Depth=1
.Ltmp1506:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1507:
# %bb.250:                              # %.noexc354
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 320
	st.d	$a1, $sp, 336
.LBB63_251:                             # %._crit_edge.i.i.i351
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB63_255
# %bb.252:                              # %._crit_edge.i.i.i351
                                        #   in Loop: Header=BB63_222 Depth=1
	bnez	$a1, .LBB63_254
# %bb.253:                              #   in Loop: Header=BB63_222 Depth=1
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB63_255
.LBB63_254:                             #   in Loop: Header=BB63_222 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_255:                             #   in Loop: Header=BB63_222 Depth=1
	ld.d	$a2, $sp, 608
	ld.d	$a1, $sp, 320
	st.d	$a2, $sp, 328
.Ltmp1509:
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1510:
# %bb.256:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit357
                                        #   in Loop: Header=BB63_222 Depth=1
	move	$s8, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s8, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB63_363
# %bb.257:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i450
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB63_259
# %bb.258:                              #   in Loop: Header=BB63_222 Depth=1
	ld.bu	$a0, $s4, 67
	b	.LBB63_261
.LBB63_259:                             #   in Loop: Header=BB63_222 Depth=1
.Ltmp1511:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1512:
# %bb.260:                              # %.noexc455
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp1513:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp1514:
.LBB63_261:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i452
                                        #   in Loop: Header=BB63_222 Depth=1
.Ltmp1515:
	ext.w.b	$a1, $a0
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1516:
# %bb.262:                              # %.noexc457
                                        #   in Loop: Header=BB63_222 Depth=1
.Ltmp1517:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1518:
# %bb.263:                              # %_ZNSolsEPFRSoS_E.exit359
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.d	$a0, $sp, 320
	beq	$a0, $s2, .LBB63_265
# %bb.264:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i360
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_265:                             # %.thread
                                        #   in Loop: Header=BB63_222 Depth=1
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	st.w	$s7, $a0, 0
	ld.w	$a1, $s0, 0
	move	$a2, $zero
	blt	$s1, $a1, .LBB63_222
	b	.LBB63_353
.LBB63_266:                             # %._crit_edge519
	andi	$a0, $a2, 1
	beqz	$a0, .LBB63_353
# %bb.267:                              # %.critedge528
	st.d	$zero, $sp, 624
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 608
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	blez	$a1, .LBB63_287
# %bb.268:                              # %.lr.ph522
	move	$s1, $zero
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	slli.d	$s2, $a0, 7
	addi.w	$a0, $zero, -8
	lu52i.d	$s6, $a0, 2047
	ori	$s3, $zero, 1
	ld.d	$a0, $sp, 88                    # 8-byte Folded Reload
	lu52i.d	$s5, $a0, 255
	b	.LBB63_271
.LBB63_269:                             #   in Loop: Header=BB63_271 Depth=1
	fst.d	$fa0, $a0, 0
	addi.d	$a0, $a0, 8
	st.d	$a0, $sp, 616
.LBB63_270:                             # %_ZNSt6vectorIdSaIdEE9push_backERKd.exit
                                        #   in Loop: Header=BB63_271 Depth=1
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.w	$a0, $s0, 0
	addi.d	$s1, $s1, 1
	addi.d	$s2, $s2, 128
	bge	$s1, $a0, .LBB63_287
.LBB63_271:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	add.d	$a3, $a3, $s1
	add.d	$a1, $a3, $a1
	bltz	$a1, .LBB63_274
# %bb.272:                              #   in Loop: Header=BB63_271 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB63_275
# %bb.273:                              #   in Loop: Header=BB63_271 Depth=1
	add.d	$a0, $a2, $s2
	b	.LBB63_277
.LBB63_274:                             #   in Loop: Header=BB63_271 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB63_276
.LBB63_275:                             #   in Loop: Header=BB63_271 Depth=1
	srli.d	$a2, $a1, 2
.LBB63_276:                             #   in Loop: Header=BB63_271 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB63_277:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit367
                                        #   in Loop: Header=BB63_271 Depth=1
.Ltmp1526:
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_doubleEv)
	jirl	$ra, $ra, 0
.Ltmp1527:
# %bb.278:                              #   in Loop: Header=BB63_271 Depth=1
	ld.d	$a0, $sp, 616
	ld.d	$a1, $sp, 624
	bne	$a0, $a1, .LBB63_269
# %bb.279:                              #   in Loop: Header=BB63_271 Depth=1
	ld.d	$s8, $sp, 608
	sub.d	$s7, $a0, $s8
	beq	$s7, $s6, .LBB63_361
# %bb.280:                              # %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit.i.i
                                        #   in Loop: Header=BB63_271 Depth=1
	fmov.d	$fs0, $fa0
	srai.d	$a0, $s7, 3
	sltu	$a1, $s3, $a0
	masknez	$a2, $s3, $a1
	maskeqz	$a1, $a0, $a1
	or	$a1, $a1, $a2
	add.d	$a0, $a1, $a0
	sltu	$a1, $a0, $s5
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s5, $a1
	or	$s0, $a0, $a1
	slli.d	$a0, $s0, 3
.Ltmp1528:
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp1529:
# %bb.281:                              # %.noexc371
                                        #   in Loop: Header=BB63_271 Depth=1
	move	$s4, $a0
	fstx.d	$fs0, $a0, $s7
	blez	$s7, .LBB63_283
# %bb.282:                              #   in Loop: Header=BB63_271 Depth=1
	move	$a0, $s4
	move	$a1, $s8
	move	$a2, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_283:                             # %_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit.i.i
                                        #   in Loop: Header=BB63_271 Depth=1
	beqz	$s8, .LBB63_285
# %bb.284:                              # %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit.i.i.i
                                        #   in Loop: Header=BB63_271 Depth=1
	move	$a0, $s8
	move	$a1, $s7
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_285:                             # %_ZNSt6vectorIdSaIdEE17_M_realloc_appendIJRKdEEEvDpOT_.exit.i
                                        #   in Loop: Header=BB63_271 Depth=1
	add.d	$a0, $s4, $s7
	addi.d	$a0, $a0, 8
	st.d	$s4, $sp, 608
	st.d	$a0, $sp, 616
	alsl.d	$a0, $s0, $s4, 3
	st.d	$a0, $sp, 624
	b	.LBB63_270
.LBB63_286:                             # %.critedge528.thread
	st.d	$zero, $sp, 624
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 608
.LBB63_287:                             # %._crit_edge523
.Ltmp1531:
	addi.d	$a0, $sp, 128
	addi.d	$a1, $sp, 512
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1532:
# %bb.288:
	ld.d	$a7, $fp, 40
.Ltmp1534:
	addi.d	$a1, $sp, 608
	addi.d	$a6, $sp, 128
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a5, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP8Function8evaluateERSt6vectorIdSaIdEERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERiiiNS5_12basic_stringIcS8_S9_EEPSt5dequeISE_SaISE_EE)
	jirl	$ra, $ra, 0
.Ltmp1535:
# %bb.289:
	fmov.d	$fs0, $fa0
	ld.d	$a0, $sp, 128
	addi.d	$a1, $sp, 144
	beq	$a0, $a1, .LBB63_291
# %bb.290:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i372
	ld.d	$a1, $sp, 144
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_291:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit374
.Ltmp1537:
	addi.d	$a0, $sp, 96
	addi.d	$a1, $sp, 512
	addi.d	$s5, $sp, 560
	addi.d	$s6, $sp, 528
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1538:
# %bb.292:
	ld.d	$a4, $fp, 40
.Ltmp1540:
	addi.d	$a0, $sp, 320
	addi.d	$a3, $sp, 96
	fmov.d	$fa0, $fs0
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1EdiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp1541:
# %bb.293:
	ld.d	$a0, $sp, 96
	addi.d	$a1, $sp, 112
	beq	$a0, $a1, .LBB63_295
# %bb.294:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i375
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_295:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit377
	ld.w	$a0, $s0, 0
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	add.w	$a2, $a0, $a1
.Ltmp1543:
	addi.d	$a3, $sp, 320
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd13replace_wordsEiiRNS_4WordE)
	jirl	$ra, $ra, 0
.Ltmp1544:
# %bb.296:
	ld.w	$a0, $s0, 0
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	ld.w	$a1, $a2, 0
	sub.d	$a0, $a1, $a0
	st.w	$a0, $a2, 0
	addi.d	$a0, $sp, 320
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 608
	beqz	$a0, .LBB63_353
# %bb.297:
	ld.d	$a1, $sp, 624
	sub.d	$a1, $a1, $a0
	b	.LBB63_352
.LBB63_298:
	srai.d	$a2, $a1, 2
	b	.LBB63_300
.LBB63_299:
	srli.d	$a2, $a1, 2
.LBB63_300:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB63_301:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit185
	addi.d	$s4, $sp, 496
	st.d	$s4, $sp, 480
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 320
	move	$a0, $s4
	bltu	$a1, $a2, .LBB63_304
# %bb.302:                              # %.noexc.i.i187
.Ltmp1549:
	addi.d	$a0, $sp, 480
	addi.d	$a1, $sp, 320
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1550:
# %bb.303:                              # %.noexc188
	ld.d	$a1, $sp, 320
	st.d	$a0, $sp, 480
	st.d	$a1, $sp, 496
.LBB63_304:                             # %._crit_edge.i.i.i186
	ld.d	$a2, $sp, 88                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB63_308
# %bb.305:                              # %._crit_edge.i.i.i186
	bnez	$a1, .LBB63_307
# %bb.306:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB63_308
.LBB63_307:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_308:                             # %._crit_edge.i.i
	ld.d	$s2, $sp, 320
	st.d	$s2, $sp, 488
	lu12i.w	$a1, 415575
	ld.d	$a0, $fp, 80
	ori	$a1, $a1, 628
	st.w	$a1, $sp, 464
	st.b	$zero, $sp, 468
	ld.d	$s8, $a0, 16
	addi.d	$a1, $sp, 464
	st.d	$a1, $sp, 448
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 456
	beqz	$s8, .LBB63_320
# %bb.309:                              # %.lr.ph.i.i.i192
	ld.d	$s3, $sp, 480
	addi.d	$s6, $a0, 8
	ori	$s0, $zero, 16
	ori	$s4, $zero, 24
	st.d	$s6, $sp, 80                    # 8-byte Folded Spill
	b	.LBB63_312
.LBB63_310:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i216
                                        #   in Loop: Header=BB63_312 Depth=1
	sub.d	$a0, $s5, $s2
	slt	$a1, $s1, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s7
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
.LBB63_311:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i.i198
                                        #   in Loop: Header=BB63_312 Depth=1
	addi.w	$a0, $a0, 0
	slti	$a0, $a0, 0
	masknez	$a1, $s8, $a0
	masknez	$a2, $s0, $a0
	maskeqz	$a3, $s4, $a0
	or	$a2, $a3, $a2
	ldx.d	$s8, $s8, $a2
	maskeqz	$a0, $s6, $a0
	or	$s6, $a0, $a1
	beqz	$s8, .LBB63_314
.LBB63_312:                             # =>This Inner Loop Header: Depth=1
	ld.d	$s5, $s8, 40
	sltu	$a0, $s2, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s2, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB63_310
# %bb.313:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i196
                                        #   in Loop: Header=BB63_312 Depth=1
	ld.d	$a0, $s8, 32
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB63_311
	b	.LBB63_310
.LBB63_314:                             # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE14_M_lower_boundEPSt18_Rb_tree_node_baseSI_RS7_.exit.i.i
	addi.d	$s5, $sp, 560
	addi.d	$s4, $sp, 496
	ld.d	$a0, $sp, 80                    # 8-byte Folded Reload
	beq	$s6, $a0, .LBB63_320
# %bb.315:
	ld.d	$s0, $s6, 40
	sltu	$a0, $s0, $s2
	masknez	$a1, $s2, $a0
	maskeqz	$a0, $s0, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB63_317
# %bb.316:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i206
	ld.d	$a1, $s6, 32
	move	$a0, $s3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB63_318
.LBB63_317:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i212
	sub.d	$a0, $s2, $s0
	slt	$a1, $s1, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s7
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s7, $a1
	or	$a0, $a0, $a1
.LBB63_318:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB63_320
# %bb.319:                              # %._crit_edge.i.i221.thread
	addi.d	$a0, $sp, 304
	st.d	$a0, $sp, 288
	ori	$a1, $zero, 4
	st.d	$a1, $sp, 608
	addi.d	$s7, $sp, 464
	move	$s3, $s7
	move	$s1, $a0
	addi.d	$s6, $sp, 528
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	b	.LBB63_327
.LBB63_320:                             # %_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_.exit.thread
.Ltmp1552:
	pcalau12i	$a0, %pc_hi20(.L.str.112)
	addi.d	$a3, $a0, %pc_lo12(.L.str.112)
	addi.d	$a0, $sp, 448
	ori	$a2, $zero, 4
	ori	$a4, $zero, 5
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp1553:
# %bb.321:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
	ld.d	$s3, $sp, 448
	ld.d	$a1, $sp, 456
	addi.d	$s1, $sp, 304
	st.d	$s1, $sp, 288
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 608
	move	$a0, $s1
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	addi.d	$s7, $sp, 464
	bltu	$a1, $a2, .LBB63_324
# %bb.322:                              # %.noexc.i222
.Ltmp1555:
	addi.d	$a0, $sp, 288
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1556:
# %bb.323:                              # %.noexc223
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 288
	st.d	$a1, $sp, 304
.LBB63_324:                             # %._crit_edge.i.i221
	addi.d	$s6, $sp, 528
	beq	$a1, $s0, .LBB63_328
# %bb.325:                              # %._crit_edge.i.i221
	bnez	$a1, .LBB63_327
# %bb.326:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB63_328
.LBB63_327:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_328:
	ld.d	$a0, $sp, 608
	st.d	$a0, $sp, 296
	addi.d	$s2, $sp, 272
	ld.d	$a1, $sp, 520
	ld.d	$s3, $sp, 512
	st.d	$s2, $sp, 256
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 608
	move	$a0, $s2
	bltu	$a1, $a2, .LBB63_331
# %bb.329:                              # %.noexc.i225
.Ltmp1558:
	addi.d	$a0, $sp, 256
	addi.d	$a1, $sp, 608
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1559:
# %bb.330:                              # %.noexc226
	ld.d	$a1, $sp, 608
	st.d	$a0, $sp, 256
	st.d	$a1, $sp, 272
.LBB63_331:                             # %._crit_edge.i.i224
	beq	$a1, $s0, .LBB63_335
# %bb.332:                              # %._crit_edge.i.i224
	bnez	$a1, .LBB63_334
# %bb.333:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB63_335
.LBB63_334:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB63_335:
	ld.d	$a0, $sp, 608
	ld.d	$a5, $fp, 40
	st.d	$a0, $sp, 264
.Ltmp1561:
	addi.d	$a0, $sp, 320
	addi.d	$a1, $sp, 288
	addi.d	$a4, $sp, 256
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a3, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp1562:
# %bb.336:
	ld.d	$a0, $sp, 256
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	beq	$a0, $s2, .LBB63_338
# %bb.337:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i228
	ld.d	$a1, $sp, 272
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_338:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit230
	ld.d	$a0, $sp, 288
	beq	$a0, $s1, .LBB63_340
# %bb.339:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i231
	ld.d	$a1, $sp, 304
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_340:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit233
	ld.w	$a0, $s0, 0
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	add.w	$a2, $a0, $s0
.Ltmp1564:
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp1565:
# %bb.341:                              # %.noexc234
	ld.d	$a4, $fp, 176
	ld.d	$a5, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a4, $a5
	srai.d	$a2, $a2, 7
	add.d	$a3, $a2, $s0
	bltz	$a3, .LBB63_344
# %bb.342:
	ori	$a2, $zero, 3
	bltu	$a2, $a3, .LBB63_345
# %bb.343:
	ld.d	$a2, $fp, 192
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	b	.LBB63_347
.LBB63_344:
	srai.d	$a4, $a3, 2
	b	.LBB63_346
.LBB63_345:
	srli.d	$a4, $a3, 2
.LBB63_346:
	slli.d	$a1, $a4, 3
	ldx.d	$a5, $a0, $a1
	alsl.d	$a0, $a4, $a0, 3
	addi.d	$a2, $a5, 512
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a5, $a3
.LBB63_347:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	st.d	$a3, $sp, 608
	st.d	$a5, $sp, 616
	st.d	$a2, $sp, 624
	st.d	$a0, $sp, 632
.Ltmp1566:
	addi.d	$a0, $sp, 576
	addi.d	$a2, $sp, 608
	addi.d	$a3, $sp, 320
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1567:
# %bb.348:
	ld.d	$a0, $sp, 72                    # 8-byte Folded Reload
	ld.w	$a0, $a0, 0
	ld.d	$a2, $sp, 40                    # 8-byte Folded Reload
	ld.w	$a1, $a2, 0
	sub.d	$a0, $a1, $a0
	st.w	$a0, $a2, 0
	addi.d	$a0, $sp, 320
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 448
	beq	$a0, $s7, .LBB63_350
# %bb.349:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i236
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_350:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit238
	ld.d	$a0, $sp, 480
	beq	$a0, $s4, .LBB63_353
# %bb.351:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i239
	ld.d	$a1, $sp, 496
	addi.d	$a1, $a1, 1
.LBB63_352:                             # %.critedge
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_353:                             # %.critedge
	ld.d	$a0, $sp, 512
	beq	$a0, $s6, .LBB63_101
# %bb.354:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i387
	ld.d	$a1, $sp, 528
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB63_101
.LBB63_355:
.Ltmp1620:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1621:
# %bb.356:                              # %.noexc432
.LBB63_357:                             # %.invoke
.Ltmp1626:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1627:
# %bb.358:                              # %.cont
.LBB63_359:
.Ltmp1623:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1624:
# %bb.360:                              # %.noexc410
.LBB63_361:
.Ltmp1546:
	pcalau12i	$a0, %pc_hi20(.L.str.225)
	addi.d	$a0, $a0, %pc_lo12(.L.str.225)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp1547:
# %bb.362:                              # %.noexc370
.LBB63_363:
.Ltmp1520:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1521:
# %bb.364:                              # %.noexc454
.LBB63_365:
.Ltmp1523:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1524:
# %bb.366:                              # %.noexc443
.LBB63_367:
.Ltmp1557:
	move	$fp, $a0
	ld.d	$a0, $sp, 448
	addi.d	$a1, $sp, 464
	beq	$a0, $a1, .LBB63_376
	b	.LBB63_393
.LBB63_368:
.Ltmp1560:
	move	$fp, $a0
	ld.d	$a0, $sp, 288
	beq	$a0, $s1, .LBB63_375
.LBB63_369:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i245
	ld.d	$a1, $sp, 304
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 448
	addi.d	$a1, $sp, 464
	beq	$a0, $a1, .LBB63_376
	b	.LBB63_393
.LBB63_370:
.Ltmp1551:
	b	.LBB63_413
.LBB63_371:
.Ltmp1508:
	b	.LBB63_413
.LBB63_372:
.Ltmp1554:
	move	$fp, $a0
	ld.d	$a0, $sp, 448
	addi.d	$a1, $sp, 464
	beq	$a0, $a1, .LBB63_376
	b	.LBB63_393
.LBB63_373:
.Ltmp1563:
	ld.d	$a2, $sp, 256
	move	$fp, $a0
	bne	$a2, $s2, .LBB63_377
# %bb.374:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit244
	ld.d	$a0, $sp, 288
	bne	$a0, $s1, .LBB63_369
.LBB63_375:
	ld.d	$a0, $sp, 448
	addi.d	$a1, $sp, 464
	bne	$a0, $a1, .LBB63_393
.LBB63_376:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit250
	ld.d	$a0, $sp, 480
	bne	$a0, $s4, .LBB63_394
	b	.LBB63_424
.LBB63_377:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i242
	ld.d	$a0, $sp, 272
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 288
	beq	$a0, $s1, .LBB63_375
	b	.LBB63_369
.LBB63_378:
.Ltmp1477:
	move	$fp, $a0
	ld.d	$a0, $sp, 192
	beq	$a0, $s2, .LBB63_397
.LBB63_379:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i320
	ld.d	$a1, $sp, 208
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 480
	bne	$a0, $s1, .LBB63_405
	b	.LBB63_423
.LBB63_380:
.Ltmp1474:
	move	$fp, $a0
	ld.d	$a0, $sp, 480
	bne	$a0, $s1, .LBB63_405
	b	.LBB63_423
.LBB63_381:
.Ltmp1468:
	move	$fp, $a0
	b	.LBB63_423
.LBB63_382:                             # %.loopexit.split-lp491
.Ltmp1525:
	b	.LBB63_413
.LBB63_383:                             # %.loopexit.split-lp496
.Ltmp1522:
	b	.LBB63_408
.LBB63_384:
.Ltmp1545:
	move	$fp, $a0
	addi.d	$a0, $sp, 320
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	b	.LBB63_416
.LBB63_385:
.Ltmp1542:
	ld.d	$a2, $sp, 96
	addi.d	$a1, $sp, 112
	move	$fp, $a0
	beq	$a2, $a1, .LBB63_416
# %bb.386:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i382
	ld.d	$a0, $sp, 112
	b	.LBB63_390
.LBB63_387:
.Ltmp1539:
	b	.LBB63_415
.LBB63_388:
.Ltmp1536:
	ld.d	$a2, $sp, 128
	addi.d	$a1, $sp, 144
	move	$fp, $a0
	beq	$a2, $a1, .LBB63_416
# %bb.389:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i379
	ld.d	$a0, $sp, 144
.LBB63_390:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit381
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB63_416
.LBB63_391:
.Ltmp1533:
	b	.LBB63_415
.LBB63_392:
.Ltmp1568:
	move	$fp, $a0
	addi.d	$a0, $sp, 320
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 448
	addi.d	$a1, $sp, 464
	beq	$a0, $a1, .LBB63_376
.LBB63_393:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i248
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 480
	beq	$a0, $s4, .LBB63_424
.LBB63_394:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i251
	ld.d	$a1, $sp, 496
	b	.LBB63_410
.LBB63_395:
.Ltmp1480:
	ld.d	$a2, $sp, 160
	move	$fp, $a0
	bne	$a2, $s3, .LBB63_398
# %bb.396:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit319
	ld.d	$a0, $sp, 192
	bne	$a0, $s2, .LBB63_379
.LBB63_397:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit322
	ld.d	$a0, $sp, 480
	bne	$a0, $s1, .LBB63_405
	b	.LBB63_423
.LBB63_398:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i317
	ld.d	$a0, $sp, 176
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 192
	beq	$a0, $s2, .LBB63_397
	b	.LBB63_379
.LBB63_399:
.Ltmp1471:
	ld.d	$a2, $sp, 224
	move	$fp, $a0
	beq	$a2, $s1, .LBB63_423
# %bb.400:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i314
	ld.d	$a0, $sp, 240
	b	.LBB63_421
.LBB63_401:
.Ltmp1488:
	b	.LBB63_413
.LBB63_402:
.Ltmp1457:
	b	.LBB63_413
.LBB63_403:
.Ltmp1454:
	move	$fp, $a0
	b	.LBB63_436
.LBB63_404:
.Ltmp1485:
	move	$fp, $a0
	addi.d	$a0, $sp, 320
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 480
	beq	$a0, $s1, .LBB63_423
.LBB63_405:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i323
	ld.d	$a1, $sp, 496
	addi.d	$a1, $a1, 1
	b	.LBB63_422
.LBB63_406:                             # %.loopexit.split-lp486
.Ltmp1548:
	b	.LBB63_415
.LBB63_407:                             # %.loopexit495
.Ltmp1519:
.LBB63_408:
	move	$fp, $a0
	ld.d	$a0, $sp, 320
	addi.d	$a1, $sp, 336
	beq	$a0, $a1, .LBB63_424
# %bb.409:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i363
	ld.d	$a1, $sp, 336
.LBB63_410:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB63_424
.LBB63_411:
.Ltmp1585:
	move	$fp, $a0
	b	.LBB63_436
.LBB63_412:                             # %.loopexit490
.Ltmp1505:
.LBB63_413:
	move	$fp, $a0
	b	.LBB63_424
.LBB63_414:                             # %.loopexit485
.Ltmp1530:
.LBB63_415:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit381
	move	$fp, $a0
.LBB63_416:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit381
	ld.d	$a0, $sp, 608
	beqz	$a0, .LBB63_424
# %bb.417:
	ld.d	$a1, $sp, 624
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB63_424
.LBB63_418:
.Ltmp1460:
	move	$fp, $a0
	b	.LBB63_423
.LBB63_419:
.Ltmp1465:
	ld.d	$a2, $sp, 320
	move	$fp, $a0
	beq	$a2, $s1, .LBB63_423
# %bb.420:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i282
	ld.d	$a0, $sp, 336
.LBB63_421:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit316
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB63_422:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit316
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_423:
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
.LBB63_424:
	ld.d	$a0, $sp, 512
	addi.d	$a1, $sp, 528
	beq	$a0, $a1, .LBB63_436
# %bb.425:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i393
	ld.d	$a1, $sp, 528
	b	.LBB63_434
.LBB63_426:
.Ltmp1625:
	ld.d	$a2, $sp, 320
	move	$fp, $a0
	beq	$a2, $s3, .LBB63_436
# %bb.427:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i169
	ld.d	$a0, $sp, 336
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB63_435
.LBB63_428:
.Ltmp1608:
	move	$fp, $a0
	b	.LBB63_436
.LBB63_429:
.Ltmp1628:
	move	$fp, $a0
	b	.LBB63_436
.LBB63_430:                             # %.loopexit.split-lp
.Ltmp1622:
	b	.LBB63_432
.LBB63_431:                             # %.loopexit
.Ltmp1619:
.LBB63_432:
	move	$fp, $a0
	ld.d	$a0, $sp, 320
	beq	$a0, $s3, .LBB63_436
# %bb.433:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i172
	ld.d	$a1, $sp, 336
.LBB63_434:
	addi.d	$a1, $a1, 1
.LBB63_435:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_436:
	ld.d	$a0, $sp, 544
	addi.d	$a1, $sp, 560
	beq	$a0, $a1, .LBB63_438
# %bb.437:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i396
	ld.d	$a1, $sp, 560
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB63_438:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit398
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end63:
	.size	_ZN2PP3Cmd17evaluate_functionEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_, .Lfunc_end63-_ZN2PP3Cmd17evaluate_functionEiRiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table63:
.Lexception33:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Lfunc_begin33-.Lfunc_begin33  # >> Call Site 1 <<
	.uleb128 .Ltmp1569-.Lfunc_begin33       #   Call between .Lfunc_begin33 and .Ltmp1569
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1569-.Lfunc_begin33       # >> Call Site 2 <<
	.uleb128 .Ltmp1582-.Ltmp1569            #   Call between .Ltmp1569 and .Ltmp1582
	.uleb128 .Ltmp1628-.Lfunc_begin33       #     jumps to .Ltmp1628
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1583-.Lfunc_begin33       # >> Call Site 3 <<
	.uleb128 .Ltmp1584-.Ltmp1583            #   Call between .Ltmp1583 and .Ltmp1584
	.uleb128 .Ltmp1585-.Lfunc_begin33       #     jumps to .Ltmp1585
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1584-.Lfunc_begin33       # >> Call Site 4 <<
	.uleb128 .Ltmp1586-.Ltmp1584            #   Call between .Ltmp1584 and .Ltmp1586
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1586-.Lfunc_begin33       # >> Call Site 5 <<
	.uleb128 .Ltmp1595-.Ltmp1586            #   Call between .Ltmp1586 and .Ltmp1595
	.uleb128 .Ltmp1625-.Lfunc_begin33       #     jumps to .Ltmp1625
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1595-.Lfunc_begin33       # >> Call Site 6 <<
	.uleb128 .Ltmp1596-.Ltmp1595            #   Call between .Ltmp1595 and .Ltmp1596
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1596-.Lfunc_begin33       # >> Call Site 7 <<
	.uleb128 .Ltmp1605-.Ltmp1596            #   Call between .Ltmp1596 and .Ltmp1605
	.uleb128 .Ltmp1628-.Lfunc_begin33       #     jumps to .Ltmp1628
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1605-.Lfunc_begin33       # >> Call Site 8 <<
	.uleb128 .Ltmp1606-.Ltmp1605            #   Call between .Ltmp1605 and .Ltmp1606
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1606-.Lfunc_begin33       # >> Call Site 9 <<
	.uleb128 .Ltmp1607-.Ltmp1606            #   Call between .Ltmp1606 and .Ltmp1607
	.uleb128 .Ltmp1608-.Lfunc_begin33       #     jumps to .Ltmp1608
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1607-.Lfunc_begin33       # >> Call Site 10 <<
	.uleb128 .Ltmp1609-.Ltmp1607            #   Call between .Ltmp1607 and .Ltmp1609
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1609-.Lfunc_begin33       # >> Call Site 11 <<
	.uleb128 .Ltmp1618-.Ltmp1609            #   Call between .Ltmp1609 and .Ltmp1618
	.uleb128 .Ltmp1619-.Lfunc_begin33       #     jumps to .Ltmp1619
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1618-.Lfunc_begin33       # >> Call Site 12 <<
	.uleb128 .Ltmp1452-.Ltmp1618            #   Call between .Ltmp1618 and .Ltmp1452
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1452-.Lfunc_begin33       # >> Call Site 13 <<
	.uleb128 .Ltmp1453-.Ltmp1452            #   Call between .Ltmp1452 and .Ltmp1453
	.uleb128 .Ltmp1454-.Lfunc_begin33       #     jumps to .Ltmp1454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1453-.Lfunc_begin33       # >> Call Site 14 <<
	.uleb128 .Ltmp1455-.Ltmp1453            #   Call between .Ltmp1453 and .Ltmp1455
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1455-.Lfunc_begin33       # >> Call Site 15 <<
	.uleb128 .Ltmp1456-.Ltmp1455            #   Call between .Ltmp1455 and .Ltmp1456
	.uleb128 .Ltmp1457-.Lfunc_begin33       #     jumps to .Ltmp1457
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1456-.Lfunc_begin33       # >> Call Site 16 <<
	.uleb128 .Ltmp1458-.Ltmp1456            #   Call between .Ltmp1456 and .Ltmp1458
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1458-.Lfunc_begin33       # >> Call Site 17 <<
	.uleb128 .Ltmp1459-.Ltmp1458            #   Call between .Ltmp1458 and .Ltmp1459
	.uleb128 .Ltmp1460-.Lfunc_begin33       #     jumps to .Ltmp1460
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1459-.Lfunc_begin33       # >> Call Site 18 <<
	.uleb128 .Ltmp1461-.Ltmp1459            #   Call between .Ltmp1459 and .Ltmp1461
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1461-.Lfunc_begin33       # >> Call Site 19 <<
	.uleb128 .Ltmp1464-.Ltmp1461            #   Call between .Ltmp1461 and .Ltmp1464
	.uleb128 .Ltmp1465-.Lfunc_begin33       #     jumps to .Ltmp1465
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1464-.Lfunc_begin33       # >> Call Site 20 <<
	.uleb128 .Ltmp1466-.Ltmp1464            #   Call between .Ltmp1464 and .Ltmp1466
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1466-.Lfunc_begin33       # >> Call Site 21 <<
	.uleb128 .Ltmp1467-.Ltmp1466            #   Call between .Ltmp1466 and .Ltmp1467
	.uleb128 .Ltmp1468-.Lfunc_begin33       #     jumps to .Ltmp1468
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1467-.Lfunc_begin33       # >> Call Site 22 <<
	.uleb128 .Ltmp1469-.Ltmp1467            #   Call between .Ltmp1467 and .Ltmp1469
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1469-.Lfunc_begin33       # >> Call Site 23 <<
	.uleb128 .Ltmp1470-.Ltmp1469            #   Call between .Ltmp1469 and .Ltmp1470
	.uleb128 .Ltmp1471-.Lfunc_begin33       #     jumps to .Ltmp1471
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1470-.Lfunc_begin33       # >> Call Site 24 <<
	.uleb128 .Ltmp1472-.Ltmp1470            #   Call between .Ltmp1470 and .Ltmp1472
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1472-.Lfunc_begin33       # >> Call Site 25 <<
	.uleb128 .Ltmp1473-.Ltmp1472            #   Call between .Ltmp1472 and .Ltmp1473
	.uleb128 .Ltmp1474-.Lfunc_begin33       #     jumps to .Ltmp1474
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1473-.Lfunc_begin33       # >> Call Site 26 <<
	.uleb128 .Ltmp1475-.Ltmp1473            #   Call between .Ltmp1473 and .Ltmp1475
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1475-.Lfunc_begin33       # >> Call Site 27 <<
	.uleb128 .Ltmp1476-.Ltmp1475            #   Call between .Ltmp1475 and .Ltmp1476
	.uleb128 .Ltmp1477-.Lfunc_begin33       #     jumps to .Ltmp1477
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1476-.Lfunc_begin33       # >> Call Site 28 <<
	.uleb128 .Ltmp1478-.Ltmp1476            #   Call between .Ltmp1476 and .Ltmp1478
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1478-.Lfunc_begin33       # >> Call Site 29 <<
	.uleb128 .Ltmp1479-.Ltmp1478            #   Call between .Ltmp1478 and .Ltmp1479
	.uleb128 .Ltmp1480-.Lfunc_begin33       #     jumps to .Ltmp1480
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1479-.Lfunc_begin33       # >> Call Site 30 <<
	.uleb128 .Ltmp1481-.Ltmp1479            #   Call between .Ltmp1479 and .Ltmp1481
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1481-.Lfunc_begin33       # >> Call Site 31 <<
	.uleb128 .Ltmp1484-.Ltmp1481            #   Call between .Ltmp1481 and .Ltmp1484
	.uleb128 .Ltmp1485-.Lfunc_begin33       #     jumps to .Ltmp1485
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1484-.Lfunc_begin33       # >> Call Site 32 <<
	.uleb128 .Ltmp1486-.Ltmp1484            #   Call between .Ltmp1484 and .Ltmp1486
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1486-.Lfunc_begin33       # >> Call Site 33 <<
	.uleb128 .Ltmp1487-.Ltmp1486            #   Call between .Ltmp1486 and .Ltmp1487
	.uleb128 .Ltmp1488-.Lfunc_begin33       #     jumps to .Ltmp1488
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1487-.Lfunc_begin33       # >> Call Site 34 <<
	.uleb128 .Ltmp1489-.Ltmp1487            #   Call between .Ltmp1487 and .Ltmp1489
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1489-.Lfunc_begin33       # >> Call Site 35 <<
	.uleb128 .Ltmp1504-.Ltmp1489            #   Call between .Ltmp1489 and .Ltmp1504
	.uleb128 .Ltmp1505-.Lfunc_begin33       #     jumps to .Ltmp1505
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1506-.Lfunc_begin33       # >> Call Site 36 <<
	.uleb128 .Ltmp1507-.Ltmp1506            #   Call between .Ltmp1506 and .Ltmp1507
	.uleb128 .Ltmp1508-.Lfunc_begin33       #     jumps to .Ltmp1508
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1507-.Lfunc_begin33       # >> Call Site 37 <<
	.uleb128 .Ltmp1509-.Ltmp1507            #   Call between .Ltmp1507 and .Ltmp1509
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1509-.Lfunc_begin33       # >> Call Site 38 <<
	.uleb128 .Ltmp1518-.Ltmp1509            #   Call between .Ltmp1509 and .Ltmp1518
	.uleb128 .Ltmp1519-.Lfunc_begin33       #     jumps to .Ltmp1519
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1518-.Lfunc_begin33       # >> Call Site 39 <<
	.uleb128 .Ltmp1526-.Ltmp1518            #   Call between .Ltmp1518 and .Ltmp1526
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1526-.Lfunc_begin33       # >> Call Site 40 <<
	.uleb128 .Ltmp1529-.Ltmp1526            #   Call between .Ltmp1526 and .Ltmp1529
	.uleb128 .Ltmp1530-.Lfunc_begin33       #     jumps to .Ltmp1530
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1529-.Lfunc_begin33       # >> Call Site 41 <<
	.uleb128 .Ltmp1531-.Ltmp1529            #   Call between .Ltmp1529 and .Ltmp1531
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1531-.Lfunc_begin33       # >> Call Site 42 <<
	.uleb128 .Ltmp1532-.Ltmp1531            #   Call between .Ltmp1531 and .Ltmp1532
	.uleb128 .Ltmp1533-.Lfunc_begin33       #     jumps to .Ltmp1533
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1534-.Lfunc_begin33       # >> Call Site 43 <<
	.uleb128 .Ltmp1535-.Ltmp1534            #   Call between .Ltmp1534 and .Ltmp1535
	.uleb128 .Ltmp1536-.Lfunc_begin33       #     jumps to .Ltmp1536
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1535-.Lfunc_begin33       # >> Call Site 44 <<
	.uleb128 .Ltmp1537-.Ltmp1535            #   Call between .Ltmp1535 and .Ltmp1537
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1537-.Lfunc_begin33       # >> Call Site 45 <<
	.uleb128 .Ltmp1538-.Ltmp1537            #   Call between .Ltmp1537 and .Ltmp1538
	.uleb128 .Ltmp1539-.Lfunc_begin33       #     jumps to .Ltmp1539
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1540-.Lfunc_begin33       # >> Call Site 46 <<
	.uleb128 .Ltmp1541-.Ltmp1540            #   Call between .Ltmp1540 and .Ltmp1541
	.uleb128 .Ltmp1542-.Lfunc_begin33       #     jumps to .Ltmp1542
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1541-.Lfunc_begin33       # >> Call Site 47 <<
	.uleb128 .Ltmp1543-.Ltmp1541            #   Call between .Ltmp1541 and .Ltmp1543
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1543-.Lfunc_begin33       # >> Call Site 48 <<
	.uleb128 .Ltmp1544-.Ltmp1543            #   Call between .Ltmp1543 and .Ltmp1544
	.uleb128 .Ltmp1545-.Lfunc_begin33       #     jumps to .Ltmp1545
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1544-.Lfunc_begin33       # >> Call Site 49 <<
	.uleb128 .Ltmp1549-.Ltmp1544            #   Call between .Ltmp1544 and .Ltmp1549
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1549-.Lfunc_begin33       # >> Call Site 50 <<
	.uleb128 .Ltmp1550-.Ltmp1549            #   Call between .Ltmp1549 and .Ltmp1550
	.uleb128 .Ltmp1551-.Lfunc_begin33       #     jumps to .Ltmp1551
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1550-.Lfunc_begin33       # >> Call Site 51 <<
	.uleb128 .Ltmp1552-.Ltmp1550            #   Call between .Ltmp1550 and .Ltmp1552
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1552-.Lfunc_begin33       # >> Call Site 52 <<
	.uleb128 .Ltmp1553-.Ltmp1552            #   Call between .Ltmp1552 and .Ltmp1553
	.uleb128 .Ltmp1554-.Lfunc_begin33       #     jumps to .Ltmp1554
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1555-.Lfunc_begin33       # >> Call Site 53 <<
	.uleb128 .Ltmp1556-.Ltmp1555            #   Call between .Ltmp1555 and .Ltmp1556
	.uleb128 .Ltmp1557-.Lfunc_begin33       #     jumps to .Ltmp1557
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1556-.Lfunc_begin33       # >> Call Site 54 <<
	.uleb128 .Ltmp1558-.Ltmp1556            #   Call between .Ltmp1556 and .Ltmp1558
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1558-.Lfunc_begin33       # >> Call Site 55 <<
	.uleb128 .Ltmp1559-.Ltmp1558            #   Call between .Ltmp1558 and .Ltmp1559
	.uleb128 .Ltmp1560-.Lfunc_begin33       #     jumps to .Ltmp1560
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1559-.Lfunc_begin33       # >> Call Site 56 <<
	.uleb128 .Ltmp1561-.Ltmp1559            #   Call between .Ltmp1559 and .Ltmp1561
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1561-.Lfunc_begin33       # >> Call Site 57 <<
	.uleb128 .Ltmp1562-.Ltmp1561            #   Call between .Ltmp1561 and .Ltmp1562
	.uleb128 .Ltmp1563-.Lfunc_begin33       #     jumps to .Ltmp1563
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1562-.Lfunc_begin33       # >> Call Site 58 <<
	.uleb128 .Ltmp1564-.Ltmp1562            #   Call between .Ltmp1562 and .Ltmp1564
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1564-.Lfunc_begin33       # >> Call Site 59 <<
	.uleb128 .Ltmp1567-.Ltmp1564            #   Call between .Ltmp1564 and .Ltmp1567
	.uleb128 .Ltmp1568-.Lfunc_begin33       #     jumps to .Ltmp1568
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1567-.Lfunc_begin33       # >> Call Site 60 <<
	.uleb128 .Ltmp1620-.Ltmp1567            #   Call between .Ltmp1567 and .Ltmp1620
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1620-.Lfunc_begin33       # >> Call Site 61 <<
	.uleb128 .Ltmp1621-.Ltmp1620            #   Call between .Ltmp1620 and .Ltmp1621
	.uleb128 .Ltmp1622-.Lfunc_begin33       #     jumps to .Ltmp1622
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1626-.Lfunc_begin33       # >> Call Site 62 <<
	.uleb128 .Ltmp1627-.Ltmp1626            #   Call between .Ltmp1626 and .Ltmp1627
	.uleb128 .Ltmp1628-.Lfunc_begin33       #     jumps to .Ltmp1628
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1623-.Lfunc_begin33       # >> Call Site 63 <<
	.uleb128 .Ltmp1624-.Ltmp1623            #   Call between .Ltmp1623 and .Ltmp1624
	.uleb128 .Ltmp1625-.Lfunc_begin33       #     jumps to .Ltmp1625
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1546-.Lfunc_begin33       # >> Call Site 64 <<
	.uleb128 .Ltmp1547-.Ltmp1546            #   Call between .Ltmp1546 and .Ltmp1547
	.uleb128 .Ltmp1548-.Lfunc_begin33       #     jumps to .Ltmp1548
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1520-.Lfunc_begin33       # >> Call Site 65 <<
	.uleb128 .Ltmp1521-.Ltmp1520            #   Call between .Ltmp1520 and .Ltmp1521
	.uleb128 .Ltmp1522-.Lfunc_begin33       #     jumps to .Ltmp1522
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1523-.Lfunc_begin33       # >> Call Site 66 <<
	.uleb128 .Ltmp1524-.Ltmp1523            #   Call between .Ltmp1523 and .Ltmp1524
	.uleb128 .Ltmp1525-.Lfunc_begin33       #     jumps to .Ltmp1525
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1524-.Lfunc_begin33       # >> Call Site 67 <<
	.uleb128 .Lfunc_end63-.Ltmp1524         #   Call between .Ltmp1524 and .Lfunc_end63
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end33:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd9find_lastENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii # -- Begin function _ZN2PP3Cmd9find_lastENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
	.p2align	5
	.type	_ZN2PP3Cmd9find_lastENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii,@function
_ZN2PP3Cmd9find_lastENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii: # @_ZN2PP3Cmd9find_lastENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	bge	$a3, $a2, .LBB64_3
# %bb.1:
	addi.w	$s8, $zero, -1
.LBB64_2:                               # %._crit_edge
	move	$a0, $s8
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB64_3:                               # %.lr.ph
	move	$s2, $a2
	move	$s0, $a1
	move	$s1, $a0
	addi.d	$s4, $sp, 16
	addi.w	$s5, $a3, 1
	slli.d	$s6, $a2, 7
	addi.w	$s7, $zero, -1
	move	$fp, $a2
	move	$s8, $s7
	b	.LBB64_5
	.p2align	4, , 16
.LBB64_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB64_5 Depth=1
	addi.d	$fp, $fp, 1
	addi.w	$s2, $s2, 1
	addi.d	$s6, $s6, 128
	beq	$s5, $s2, .LBB64_2
.LBB64_5:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $fp, $a1
	bltz	$a1, .LBB64_8
# %bb.6:                                #   in Loop: Header=BB64_5 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB64_9
# %bb.7:                                #   in Loop: Header=BB64_5 Depth=1
	add.d	$a0, $a2, $s6
	b	.LBB64_11
	.p2align	4, , 16
.LBB64_8:                               #   in Loop: Header=BB64_5 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB64_10
	.p2align	4, , 16
.LBB64_9:                               #   in Loop: Header=BB64_5 Depth=1
	srli.d	$a2, $a1, 2
.LBB64_10:                              #   in Loop: Header=BB64_5 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB64_11:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB64_5 Depth=1
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	st.d	$s4, $sp, 0
	st.d	$a1, $sp, 32
	move	$a0, $s4
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB64_13
# %bb.12:                               # %.noexc.i.i
                                        #   in Loop: Header=BB64_5 Depth=1
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB64_13:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB64_5 Depth=1
	beq	$a1, $s7, .LBB64_16
# %bb.14:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB64_5 Depth=1
	bnez	$a1, .LBB64_19
# %bb.15:                               #   in Loop: Header=BB64_5 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB64_16:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB64_5 Depth=1
	ld.d	$a2, $sp, 32
	ld.d	$a0, $s0, 8
	st.d	$a2, $sp, 8
	bne	$a2, $a0, .LBB64_20
.LBB64_17:                              #   in Loop: Header=BB64_5 Depth=1
	ld.d	$s3, $sp, 0
	beqz	$a2, .LBB64_21
# %bb.18:                               #   in Loop: Header=BB64_5 Depth=1
	ld.d	$a1, $s0, 0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$a0, $a0, 1
	masknez	$a1, $s8, $a0
	maskeqz	$a0, $s2, $a0
	or	$s8, $a0, $a1
	bne	$s3, $s4, .LBB64_22
	b	.LBB64_4
	.p2align	4, , 16
.LBB64_19:                              #   in Loop: Header=BB64_5 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 32
	ld.d	$a0, $s0, 8
	st.d	$a2, $sp, 8
	beq	$a2, $a0, .LBB64_17
.LBB64_20:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit_crit_edge
                                        #   in Loop: Header=BB64_5 Depth=1
	ld.d	$s3, $sp, 0
	bne	$s3, $s4, .LBB64_22
	b	.LBB64_4
.LBB64_21:                              #   in Loop: Header=BB64_5 Depth=1
	move	$s8, $s2
	beq	$s3, $s4, .LBB64_4
	.p2align	4, , 16
.LBB64_22:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB64_5 Depth=1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB64_4
.Lfunc_end64:
	.size	_ZN2PP3Cmd9find_lastENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii, .Lfunc_end64-_ZN2PP3Cmd9find_lastENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd5sevalERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_ # -- Begin function _ZN2PP3Cmd5sevalERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.p2align	5
	.type	_ZN2PP3Cmd5sevalERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_,@function
_ZN2PP3Cmd5sevalERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_: # @_ZN2PP3Cmd5sevalERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception34
# %bb.0:                                # %._crit_edge.i.i
	addi.d	$sp, $sp, -544
	.cfi_def_cfa_offset 544
	st.d	$ra, $sp, 536                   # 8-byte Folded Spill
	st.d	$fp, $sp, 528                   # 8-byte Folded Spill
	st.d	$s0, $sp, 520                   # 8-byte Folded Spill
	st.d	$s1, $sp, 512                   # 8-byte Folded Spill
	st.d	$s2, $sp, 504                   # 8-byte Folded Spill
	st.d	$s3, $sp, 496                   # 8-byte Folded Spill
	st.d	$s4, $sp, 488                   # 8-byte Folded Spill
	st.d	$s5, $sp, 480                   # 8-byte Folded Spill
	st.d	$s6, $sp, 472                   # 8-byte Folded Spill
	st.d	$s7, $sp, 464                   # 8-byte Folded Spill
	st.d	$s8, $sp, 456                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a4
	move	$s2, $a3
	move	$s1, $a2
	move	$fp, $a1
	move	$s3, $a0
	addi.d	$a0, $sp, 359
	pcaddu18i	$ra, %call36(_ZN2PP11Parser_mathC1Ev)
	jirl	$ra, $ra, 0
	ld.w	$a1, $fp, 0
	move	$a0, $s3
	move	$a2, $s1
	move	$a3, $s2
	move	$a4, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	ld.w	$a1, $fp, 0
	addi.d	$fp, $sp, 336
	st.d	$fp, $sp, 320
	ori	$a0, $zero, 45
	st.h	$a0, $sp, 336
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 328
.Ltmp1629:
	addi.d	$a3, $sp, 320
	move	$a0, $s3
	move	$a2, $s1
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	move	$a4, $s2
	st.d	$s0, $sp, 16                    # 8-byte Folded Spill
	move	$a5, $s0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_)
	jirl	$ra, $ra, 0
.Ltmp1630:
# %bb.1:
	ld.d	$a0, $sp, 320
	beq	$a0, $fp, .LBB65_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 336
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB65_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	ld.w	$a1, $a0, 0
	addi.d	$fp, $sp, 304
	st.d	$fp, $sp, 288
	ori	$a0, $zero, 43
	st.h	$a0, $sp, 304
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 296
.Ltmp1632:
	addi.d	$a3, $sp, 288
	move	$a0, $s3
	move	$a2, $s1
	ld.d	$a4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a5, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_)
	jirl	$ra, $ra, 0
.Ltmp1633:
# %bb.4:
	ld.d	$a0, $sp, 288
	beq	$a0, $fp, .LBB65_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i85
	ld.d	$a1, $sp, 304
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB65_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit87
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	ld.w	$a1, $a0, 0
	ld.w	$a0, $s1, 0
	bge	$a0, $a1, .LBB65_8
.LBB65_7:                               # %.split.us
	ld.d	$s8, $sp, 456                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 464                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 472                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 480                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 488                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 496                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 504                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 512                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 520                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 528                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 536                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 544
	ret
.LBB65_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit87.split.preheader
	addi.d	$s4, $s3, 160
	ori	$a1, $zero, 6
	ori	$fp, $zero, 5
	ori	$s2, $zero, 3
	b	.LBB65_10
	.p2align	4, , 16
.LBB65_9:                               # %._crit_edge
                                        #   in Loop: Header=BB65_10 Depth=1
	addi.w	$a1, $s0, -1
	beqz	$s0, .LBB65_7
.LBB65_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit87.split
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB65_14 Depth 2
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	ld.w	$s5, $a2, 0
	move	$s0, $a1
	blt	$a0, $s5, .LBB65_9
# %bb.11:                               # %.lr.ph
                                        #   in Loop: Header=BB65_10 Depth=1
	addi.d	$a1, $s0, -2
	sltui	$a1, $a1, 1
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	b	.LBB65_14
	.p2align	4, , 16
.LBB65_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit148
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.w	$a0, $s1, 0
.LBB65_13:                              #   in Loop: Header=BB65_14 Depth=2
	move	$a1, $s5
	addi.w	$s5, $s5, 1
	bge	$a1, $a0, .LBB65_9
.LBB65_14:                              #   Parent Loop BB65_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a2, $s3, 176
	ld.d	$a1, $s3, 184
	ld.d	$a3, $s3, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s5
	bltz	$a1, .LBB65_18
# %bb.15:                               #   in Loop: Header=BB65_14 Depth=2
	ori	$a4, $zero, 4
	bgeu	$a1, $a4, .LBB65_19
# %bb.16:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
                                        #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a1, $s5, 7
	add.d	$a1, $a2, $a1
	ld.w	$a3, $a1, 32
	bne	$a3, $fp, .LBB65_13
# %bb.17:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.w	$a1, $a1, 44
	beq	$s0, $a1, .LBB65_24
	b	.LBB65_13
	.p2align	4, , 16
.LBB65_18:                              #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a4, $a1, 2
	b	.LBB65_20
	.p2align	4, , 16
.LBB65_19:                              #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a4, $a1, 2
.LBB65_20:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a3, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a1, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a5, $a4
	ld.w	$a5, $a4, 32
	bne	$a5, $fp, .LBB65_13
# %bb.21:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.w	$a4, $a4, 44
	bne	$s0, $a4, .LBB65_13
# %bb.22:                               #   in Loop: Header=BB65_14 Depth=2
	bltz	$a1, .LBB65_25
# %bb.23:                               #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a1, .LBB65_26
.LBB65_24:                              # %.thread198
                                        #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a0, $s5, 7
	add.d	$a0, $a2, $a0
	ld.w	$s6, $a0, 80
	ld.w	$s7, $a0, 84
	b	.LBB65_28
.LBB65_25:                              #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a0, $a1, 2
	b	.LBB65_27
.LBB65_26:                              #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a0, $a1, 2
.LBB65_27:                              #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a2, $a0, 3
	ldx.d	$a2, $a3, $a2
	andi	$a3, $a1, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a2, $a3
	ld.w	$s6, $a3, 80
	ld.w	$s7, $a3, 84
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a1, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB65_28:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit99
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $a0, 96
	ld.d	$s8, $a0, 88
	addi.d	$a0, $sp, 272
	st.d	$a0, $sp, 256
	st.d	$a1, $sp, 128
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB65_30
# %bb.29:                               # %.noexc.i.i
                                        #   in Loop: Header=BB65_14 Depth=2
	addi.d	$a0, $sp, 256
	addi.d	$a1, $sp, 128
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 128
	st.d	$a0, $sp, 256
	st.d	$a1, $sp, 272
.LBB65_30:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB65_14 Depth=2
	addi.w	$fp, $zero, -1
	beq	$a1, $fp, .LBB65_34
# %bb.31:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB65_14 Depth=2
	bnez	$a1, .LBB65_33
# %bb.32:                               #   in Loop: Header=BB65_14 Depth=2
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB65_34
.LBB65_33:                              #   in Loop: Header=BB65_14 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB65_34:                              # %_ZN2PP4Word12get_filenameB5cxx11Ev.exit
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $sp, 128
	st.d	$a1, $sp, 264
	addi.d	$a0, $sp, 112
	st.d	$a0, $sp, 96
	st.d	$zero, $sp, 104
	ld.d	$s8, $sp, 256
	st.b	$zero, $sp, 112
	addi.d	$a0, $sp, 80
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 424
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB65_37
# %bb.35:                               # %.noexc.i105
                                        #   in Loop: Header=BB65_14 Depth=2
.Ltmp1635:
	addi.d	$a0, $sp, 64
	addi.d	$a1, $sp, 424
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1636:
# %bb.36:                               # %.noexc106
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $sp, 424
	st.d	$a0, $sp, 64
	st.d	$a1, $sp, 80
.LBB65_37:                              # %._crit_edge.i.i104
                                        #   in Loop: Header=BB65_14 Depth=2
	beq	$a1, $fp, .LBB65_41
# %bb.38:                               # %._crit_edge.i.i104
                                        #   in Loop: Header=BB65_14 Depth=2
	bnez	$a1, .LBB65_40
# %bb.39:                               #   in Loop: Header=BB65_14 Depth=2
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB65_41
.LBB65_40:                              #   in Loop: Header=BB65_14 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB65_41:                              #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 424
	ld.d	$a5, $s3, 40
	st.d	$a0, $sp, 72
.Ltmp1638:
	addi.d	$a0, $sp, 128
	addi.d	$a1, $sp, 96
	addi.d	$a4, $sp, 64
	move	$a2, $s6
	move	$a3, $s7
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp1639:
# %bb.42:                               #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 64
	addi.d	$a1, $sp, 80
	addi.d	$s7, $sp, 48
	ori	$s8, $zero, 10
	beq	$a0, $a1, .LBB65_44
# %bb.43:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i107
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $sp, 80
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB65_44:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit109
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 96
	addi.d	$a1, $sp, 112
	beq	$a0, $a1, .LBB65_46
# %bb.45:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i110
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB65_46:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit112
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a2, $s3, 176
	ld.d	$a1, $s3, 184
	ld.d	$a0, $s3, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s5
	bltz	$a1, .LBB65_49
# %bb.47:                               #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a1, .LBB65_50
# %bb.48:                               #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a0, $s5, 7
	add.d	$a0, $a2, $a0
	b	.LBB65_52
.LBB65_49:                              #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a2, $a1, 2
	b	.LBB65_51
.LBB65_50:                              #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a2, $a1, 2
.LBB65_51:                              #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB65_52:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit114
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $a0, 56
	ld.d	$s6, $a0, 48
	st.d	$s7, $sp, 32
	st.d	$a1, $sp, 424
	move	$a0, $s7
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB65_55
# %bb.53:                               # %.noexc.i.i116
                                        #   in Loop: Header=BB65_14 Depth=2
.Ltmp1641:
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 424
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1642:
# %bb.54:                               # %.noexc117
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $sp, 424
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB65_55:                              # %._crit_edge.i.i.i115
                                        #   in Loop: Header=BB65_14 Depth=2
	beq	$a1, $fp, .LBB65_58
# %bb.56:                               # %._crit_edge.i.i.i115
                                        #   in Loop: Header=BB65_14 Depth=2
	bnez	$a1, .LBB65_62
# %bb.57:                               #   in Loop: Header=BB65_14 Depth=2
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
.LBB65_58:                              #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 424
	st.d	$a0, $sp, 40
	beq	$a0, $s8, .LBB65_63
.LBB65_59:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread205
                                        #   in Loop: Header=BB65_14 Depth=2
	beq	$a0, $s8, .LBB65_66
.LBB65_60:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit128.thread206
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ori	$a1, $zero, 7
	beq	$a0, $a1, .LBB65_74
.LBB65_61:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit130.thread
                                        #   in Loop: Header=BB65_14 Depth=2
	beq	$a0, $a1, .LBB65_78
	b	.LBB65_81
.LBB65_62:                              #   in Loop: Header=BB65_14 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 424
	st.d	$a0, $sp, 40
	bne	$a0, $s8, .LBB65_59
.LBB65_63:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 32
	pcalau12i	$a1, %pc_hi20(.L.str.93)
	addi.d	$a1, $a1, %pc_lo12(.L.str.93)
	ori	$a2, $zero, 10
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB65_66
# %bb.64:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB65_14 Depth=2
	addi.w	$a1, $s5, -1
	addi.w	$a3, $s5, 1
.Ltmp1644:
	addi.d	$a0, $sp, 359
	addi.d	$a5, $sp, 128
	move	$a2, $s5
	move	$a4, $s4
	ld.d	$a6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a7, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP11Parser_math5do_opEiiiRSt5dequeINS_4WordESaIS2_EERS2_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1645:
# %bb.65:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread205_crit_edge
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 40
	bne	$a0, $s8, .LBB65_60
	.p2align	4, , 16
.LBB65_66:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit128
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 32
	pcalau12i	$a1, %pc_hi20(.L.str.94)
	addi.d	$a1, $a1, %pc_lo12(.L.str.94)
	ori	$a2, $zero, 10
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB65_72
# %bb.67:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit130.thread.thread242
                                        #   in Loop: Header=BB65_14 Depth=2
	ori	$a0, $zero, 2
	beq	$s0, $a0, .LBB65_82
.LBB65_68:                              #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a4, $s3, 176
	ld.d	$a3, $s3, 184
	addi.w	$s6, $s5, -1
	ld.d	$a0, $s3, 200
	sub.d	$a1, $a4, $a3
	srai.d	$a5, $a1, 7
	add.d	$a2, $a5, $s6
	bltz	$a2, .LBB65_86
# %bb.69:                               #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a2, .LBB65_88
# %bb.70:                               #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a1, $s6, 7
	add.d	$a2, $a4, $a1
	move	$a1, $a0
	addi.w	$a6, $s5, 1
	add.d	$a5, $a5, $a6
	bgez	$a5, .LBB65_90
.LBB65_71:                              #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a4, $a5, 2
	b	.LBB65_99
.LBB65_72:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit128.thread
                                        #   in Loop: Header=BB65_14 Depth=2
	addi.w	$a1, $s5, -1
	addi.w	$a3, $s5, 1
.Ltmp1646:
	addi.d	$a0, $sp, 359
	addi.d	$a5, $sp, 128
	move	$a2, $s5
	move	$a4, $s4
	ld.d	$a6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a7, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP11Parser_math16do_op_relationalEiiiRSt5dequeINS_4WordESaIS2_EERS2_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1647:
# %bb.73:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit128.thread._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit128.thread206thread-pre-split_crit_edge
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 40
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB65_61
.LBB65_74:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit130
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 32
	pcalau12i	$a1, %pc_hi20(.L.str.95)
	addi.d	$a1, $a1, %pc_lo12(.L.str.95)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ori	$a1, $zero, 2
	bne	$s0, $a1, .LBB65_78
# %bb.75:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit130
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	bnez	$a0, .LBB65_78
# %bb.76:                               #   in Loop: Header=BB65_14 Depth=2
	addi.w	$a2, $s5, 1
.Ltmp1648:
	addi.d	$a0, $sp, 359
	addi.d	$a4, $sp, 128
	move	$a1, $s5
	move	$a3, $s4
	ld.d	$a5, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a6, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP11Parser_math9do_op_notEiiRSt5dequeINS_4WordESaIS2_EERS2_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1649:
# %bb.77:                               # %._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit130.thread_crit_edge
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 40
	ori	$s6, $zero, 1
	ori	$a1, $zero, 7
	bne	$a0, $a1, .LBB65_81
.LBB65_78:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit132
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $sp, 32
	pcalau12i	$a1, %pc_hi20(.L.str.95)
	addi.d	$a1, $a1, %pc_lo12(.L.str.95)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 2
	beq	$s0, $a1, .LBB65_81
# %bb.79:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit132
                                        #   in Loop: Header=BB65_14 Depth=2
	bnez	$a0, .LBB65_81
# %bb.80:                               #   in Loop: Header=BB65_14 Depth=2
	addi.w	$a1, $s5, -1
	addi.w	$a3, $s5, 1
.Ltmp1650:
	addi.d	$a0, $sp, 359
	addi.d	$a5, $sp, 128
	move	$a2, $s5
	move	$a4, $s4
	ld.d	$a6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a7, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP11Parser_math13do_op_logicalEiiiRSt5dequeINS_4WordESaIS2_EERS2_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1651:
.LBB65_81:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit132.thread
                                        #   in Loop: Header=BB65_14 Depth=2
	beqz	$s6, .LBB65_68
.LBB65_82:                              #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a4, $s3, 176
	ld.d	$a3, $s3, 184
	ld.d	$a0, $s3, 200
	sub.d	$a1, $a4, $a3
	srai.d	$a5, $a1, 7
	add.d	$a2, $a5, $s5
	bltz	$a2, .LBB65_87
# %bb.83:                               #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a2, .LBB65_93
# %bb.84:                               #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a1, $s5, 7
	add.d	$a2, $a4, $a1
	move	$a1, $a0
	addi.w	$a6, $s5, 1
	add.d	$a5, $a5, $a6
	bgez	$a5, .LBB65_95
.LBB65_85:                              #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a4, $a5, 2
	b	.LBB65_103
.LBB65_86:                              #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a6, $a2, 2
	b	.LBB65_89
.LBB65_87:                              #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a6, $a2, 2
	b	.LBB65_94
.LBB65_88:                              #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a6, $a2, 2
.LBB65_89:                              #   in Loop: Header=BB65_14 Depth=2
	alsl.d	$a1, $a6, $a0, 3
	slli.d	$a7, $a6, 3
	ldx.d	$a7, $a0, $a7
	slli.d	$a6, $a6, 2
	sub.d	$a2, $a2, $a6
	slli.d	$a2, $a2, 7
	add.d	$a2, $a7, $a2
	addi.w	$a6, $s5, 1
	add.d	$a5, $a5, $a6
	bltz	$a5, .LBB65_71
.LBB65_90:                              #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a5, .LBB65_98
# %bb.91:                               #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a5, $a6, 7
	add.d	$a4, $a4, $a5
	sub.d	$a3, $a4, $a3
	srai.d	$a5, $a3, 7
	addi.d	$a3, $a5, 1
	bge	$a5, $fp, .LBB65_100
.LBB65_92:                              #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a4, $a3, 2
	b	.LBB65_107
.LBB65_93:                              #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a6, $a2, 2
.LBB65_94:                              #   in Loop: Header=BB65_14 Depth=2
	alsl.d	$a1, $a6, $a0, 3
	slli.d	$a7, $a6, 3
	ldx.d	$a7, $a0, $a7
	slli.d	$a6, $a6, 2
	sub.d	$a2, $a2, $a6
	slli.d	$a2, $a2, 7
	add.d	$a2, $a7, $a2
	addi.w	$a6, $s5, 1
	add.d	$a5, $a5, $a6
	bltz	$a5, .LBB65_85
.LBB65_95:                              #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a5, .LBB65_102
# %bb.96:                               #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a5, $a6, 7
	add.d	$a4, $a4, $a5
	sub.d	$a3, $a4, $a3
	srai.d	$a5, $a3, 7
	addi.d	$a3, $a5, 1
	bge	$a5, $fp, .LBB65_104
.LBB65_97:                              #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a4, $a3, 2
	b	.LBB65_121
.LBB65_98:                              #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a4, $a5, 2
.LBB65_99:                              #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a3, $a4, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a4, $a0, 3
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a5, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a3, $a4
	sub.d	$a3, $a4, $a3
	srai.d	$a5, $a3, 7
	addi.d	$a3, $a5, 1
	blt	$a5, $fp, .LBB65_92
.LBB65_100:                             #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a3, .LBB65_106
# %bb.101:                              #   in Loop: Header=BB65_14 Depth=2
	addi.d	$a3, $a4, 128
	b	.LBB65_108
.LBB65_102:                             #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a4, $a5, 2
.LBB65_103:                             #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a3, $a4, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a4, $a0, 3
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a5, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a3, $a4
	sub.d	$a3, $a4, $a3
	srai.d	$a5, $a3, 7
	addi.d	$a3, $a5, 1
	blt	$a5, $fp, .LBB65_97
.LBB65_104:                             #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a3, .LBB65_120
# %bb.105:                              #   in Loop: Header=BB65_14 Depth=2
	addi.d	$a3, $a4, 128
	b	.LBB65_122
.LBB65_106:                             #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a4, $a3, 2
.LBB65_107:                             #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	alsl.d	$a0, $a4, $a0, 3
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a5, $a3
.LBB65_108:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit5.i183
                                        #   in Loop: Header=BB65_14 Depth=2
	st.d	$a2, $sp, 424
	ld.d	$a2, $a1, 0
	st.d	$a2, $sp, 432
	addi.d	$a2, $a2, 512
	st.d	$a2, $sp, 440
	st.d	$a1, $sp, 448
	st.d	$a3, $sp, 392
	ld.d	$a1, $a0, 0
	st.d	$a1, $sp, 400
	addi.d	$a1, $a1, 512
	st.d	$a1, $sp, 408
	st.d	$a0, $sp, 416
.Ltmp1652:
	addi.d	$a0, $sp, 360
	addi.d	$a2, $sp, 424
	addi.d	$a3, $sp, 392
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp1653:
# %bb.109:                              # %.noexc140
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $s3, 176
	ld.d	$a2, $s3, 184
	ld.d	$a1, $s3, 200
	sub.d	$a3, $a0, $a2
	srai.d	$a3, $a3, 7
	add.d	$a3, $a3, $s6
	bltz	$a3, .LBB65_115
# %bb.110:                              #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a3, .LBB65_116
# %bb.111:                              #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a3, $s6, 7
	add.d	$a3, $a0, $a3
	bne	$a3, $a0, .LBB65_118
.LBB65_112:                             #   in Loop: Header=BB65_14 Depth=2
	beq	$a0, $a2, .LBB65_140
# %bb.113:                              #   in Loop: Header=BB65_14 Depth=2
	addi.d	$a0, $a0, -128
.Ltmp1660:
	addi.d	$a1, $sp, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1661:
# %bb.114:                              # %.noexc169
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $s3, 176
	addi.d	$a0, $a0, -128
	st.d	$a0, $s3, 176
	b	.LBB65_143
.LBB65_115:                             #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a4, $a3, 2
	b	.LBB65_117
.LBB65_116:                             #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a4, $a3, 2
.LBB65_117:                             #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a1, $a5
	alsl.d	$a1, $a4, $a1, 3
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a5, $a3
	beq	$a3, $a0, .LBB65_112
.LBB65_118:                             #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $s3, 208
	beq	$a3, $a0, .LBB65_134
# %bb.119:                              #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $a1, 0
	addi.d	$a2, $a0, 512
	st.d	$a3, $sp, 424
	st.d	$a0, $sp, 432
	st.d	$a2, $sp, 440
	st.d	$a1, $sp, 448
.Ltmp1654:
	addi.d	$a0, $sp, 392
	addi.d	$a2, $sp, 424
	addi.d	$a3, $sp, 128
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_)
	jirl	$ra, $ra, 0
.Ltmp1655:
	b	.LBB65_143
.LBB65_120:                             #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a4, $a3, 2
.LBB65_121:                             #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	alsl.d	$a0, $a4, $a0, 3
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a5, $a3
.LBB65_122:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit5.i
                                        #   in Loop: Header=BB65_14 Depth=2
	st.d	$a2, $sp, 424
	ld.d	$a2, $a1, 0
	st.d	$a2, $sp, 432
	addi.d	$a2, $a2, 512
	st.d	$a2, $sp, 440
	st.d	$a1, $sp, 448
	st.d	$a3, $sp, 392
	ld.d	$a1, $a0, 0
	st.d	$a1, $sp, 400
	addi.d	$a1, $a1, 512
	st.d	$a1, $sp, 408
	st.d	$a0, $sp, 416
.Ltmp1664:
	addi.d	$a0, $sp, 360
	addi.d	$a2, $sp, 424
	addi.d	$a3, $sp, 392
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp1665:
# %bb.123:                              # %.noexc133
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $s3, 176
	ld.d	$a2, $s3, 184
	ld.d	$a1, $s3, 200
	sub.d	$a3, $a0, $a2
	srai.d	$a3, $a3, 7
	add.d	$a3, $a3, $s5
	bltz	$a3, .LBB65_129
# %bb.124:                              #   in Loop: Header=BB65_14 Depth=2
	bltu	$s2, $a3, .LBB65_130
# %bb.125:                              #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a3, $s5, 7
	add.d	$a3, $a0, $a3
	bne	$a3, $a0, .LBB65_132
.LBB65_126:                             #   in Loop: Header=BB65_14 Depth=2
	beq	$a0, $a2, .LBB65_141
# %bb.127:                              #   in Loop: Header=BB65_14 Depth=2
	addi.d	$a0, $a0, -128
.Ltmp1672:
	addi.d	$a1, $sp, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1673:
# %bb.128:                              # %.noexc152
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $s3, 176
	addi.d	$a0, $a0, -128
	st.d	$a0, $s3, 176
	b	.LBB65_144
.LBB65_129:                             #   in Loop: Header=BB65_14 Depth=2
	srai.d	$a4, $a3, 2
	b	.LBB65_131
.LBB65_130:                             #   in Loop: Header=BB65_14 Depth=2
	srli.d	$a4, $a3, 2
.LBB65_131:                             #   in Loop: Header=BB65_14 Depth=2
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a1, $a5
	alsl.d	$a1, $a4, $a1, 3
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a5, $a3
	beq	$a3, $a0, .LBB65_126
.LBB65_132:                             #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $s3, 208
	beq	$a3, $a0, .LBB65_137
# %bb.133:                              #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $a1, 0
	addi.d	$a2, $a0, 512
	st.d	$a3, $sp, 424
	st.d	$a0, $sp, 432
	st.d	$a2, $sp, 440
	st.d	$a1, $sp, 448
.Ltmp1666:
	addi.d	$a0, $sp, 392
	addi.d	$a2, $sp, 424
	addi.d	$a3, $sp, 128
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_)
	jirl	$ra, $ra, 0
.Ltmp1667:
	b	.LBB65_144
.LBB65_134:                             #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $s3, 224
	addi.d	$a1, $a1, -128
	beq	$a3, $a1, .LBB65_142
# %bb.135:                              #   in Loop: Header=BB65_14 Depth=2
.Ltmp1656:
	addi.d	$a1, $sp, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1657:
# %bb.136:                              # %.noexc171
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $s3, 208
	addi.d	$a0, $a0, 128
	st.d	$a0, $s3, 208
	b	.LBB65_143
.LBB65_137:                             #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $s3, 224
	addi.d	$a1, $a1, -128
	beq	$a3, $a1, .LBB65_148
# %bb.138:                              #   in Loop: Header=BB65_14 Depth=2
.Ltmp1668:
	addi.d	$a1, $sp, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp1669:
# %bb.139:                              # %.noexc154
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a0, $s3, 208
	addi.d	$a0, $a0, 128
	st.d	$a0, $s3, 208
	b	.LBB65_144
.LBB65_140:                             #   in Loop: Header=BB65_14 Depth=2
.Ltmp1662:
	addi.d	$a1, $sp, 128
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1663:
	b	.LBB65_143
.LBB65_141:                             #   in Loop: Header=BB65_14 Depth=2
.Ltmp1674:
	addi.d	$a1, $sp, 128
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1675:
	b	.LBB65_144
.LBB65_142:                             #   in Loop: Header=BB65_14 Depth=2
.Ltmp1658:
	addi.d	$a1, $sp, 128
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1659:
	.p2align	4, , 16
.LBB65_143:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE10push_frontERKS1_.exit.i167
                                        #   in Loop: Header=BB65_14 Depth=2
	addi.d	$fp, $zero, -2
	move	$s5, $s6
.LBB65_144:                             #   in Loop: Header=BB65_14 Depth=2
	ld.w	$a1, $s1, 0
	ld.d	$a0, $sp, 32
	add.d	$a1, $a1, $fp
	st.w	$a1, $s1, 0
	beq	$a0, $s7, .LBB65_146
# %bb.145:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i143
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB65_146:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit145
                                        #   in Loop: Header=BB65_14 Depth=2
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 256
	addi.d	$a1, $sp, 272
	ori	$fp, $zero, 5
	beq	$a0, $a1, .LBB65_12
# %bb.147:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i146
                                        #   in Loop: Header=BB65_14 Depth=2
	ld.d	$a1, $sp, 272
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB65_12
.LBB65_148:                             #   in Loop: Header=BB65_14 Depth=2
.Ltmp1670:
	addi.d	$a1, $sp, 128
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1671:
	b	.LBB65_144
.LBB65_149:
.Ltmp1634:
	ld.d	$a2, $sp, 288
	move	$s1, $a0
	beq	$a2, $fp, .LBB65_166
# %bb.150:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i91
	ld.d	$a0, $sp, 304
	b	.LBB65_153
.LBB65_151:
.Ltmp1631:
	ld.d	$a2, $sp, 320
	move	$s1, $a0
	beq	$a2, $fp, .LBB65_166
# %bb.152:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i88
	ld.d	$a0, $sp, 336
.LBB65_153:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB65_165
.LBB65_154:
.Ltmp1643:
	move	$s1, $a0
	b	.LBB65_163
.LBB65_155:
.Ltmp1637:
	move	$s1, $a0
	ld.d	$a0, $sp, 96
	addi.d	$a1, $sp, 112
	beq	$a0, $a1, .LBB65_158
	b	.LBB65_160
.LBB65_156:
.Ltmp1640:
	ld.d	$a2, $sp, 64
	move	$s1, $a0
	addi.d	$a0, $sp, 80
	bne	$a2, $a0, .LBB65_159
# %bb.157:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit120
	ld.d	$a0, $sp, 96
	addi.d	$a1, $sp, 112
	bne	$a0, $a1, .LBB65_160
.LBB65_158:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit123
	ld.d	$a0, $sp, 256
	addi.d	$a1, $sp, 272
	bne	$a0, $a1, .LBB65_164
	b	.LBB65_166
.LBB65_159:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i118
	ld.d	$a0, $sp, 80
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 96
	addi.d	$a1, $sp, 112
	beq	$a0, $a1, .LBB65_158
.LBB65_160:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i121
	ld.d	$a1, $sp, 112
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 256
	addi.d	$a1, $sp, 272
	bne	$a0, $a1, .LBB65_164
	b	.LBB65_166
.LBB65_161:
.Ltmp1676:
	ld.d	$a2, $sp, 32
	move	$s1, $a0
	beq	$a2, $s7, .LBB65_163
# %bb.162:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i124
	ld.d	$a0, $sp, 48
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB65_163:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit126
	addi.d	$a0, $sp, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 256
	addi.d	$a1, $sp, 272
	beq	$a0, $a1, .LBB65_166
.LBB65_164:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i149
	ld.d	$a1, $sp, 272
	addi.d	$a1, $a1, 1
.LBB65_165:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB65_166:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end65:
	.size	_ZN2PP3Cmd5sevalERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_, .Lfunc_end65-_ZN2PP3Cmd5sevalERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table65:
.Lexception34:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Lfunc_begin34-.Lfunc_begin34  # >> Call Site 1 <<
	.uleb128 .Ltmp1629-.Lfunc_begin34       #   Call between .Lfunc_begin34 and .Ltmp1629
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1629-.Lfunc_begin34       # >> Call Site 2 <<
	.uleb128 .Ltmp1630-.Ltmp1629            #   Call between .Ltmp1629 and .Ltmp1630
	.uleb128 .Ltmp1631-.Lfunc_begin34       #     jumps to .Ltmp1631
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1630-.Lfunc_begin34       # >> Call Site 3 <<
	.uleb128 .Ltmp1632-.Ltmp1630            #   Call between .Ltmp1630 and .Ltmp1632
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1632-.Lfunc_begin34       # >> Call Site 4 <<
	.uleb128 .Ltmp1633-.Ltmp1632            #   Call between .Ltmp1632 and .Ltmp1633
	.uleb128 .Ltmp1634-.Lfunc_begin34       #     jumps to .Ltmp1634
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1633-.Lfunc_begin34       # >> Call Site 5 <<
	.uleb128 .Ltmp1635-.Ltmp1633            #   Call between .Ltmp1633 and .Ltmp1635
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1635-.Lfunc_begin34       # >> Call Site 6 <<
	.uleb128 .Ltmp1636-.Ltmp1635            #   Call between .Ltmp1635 and .Ltmp1636
	.uleb128 .Ltmp1637-.Lfunc_begin34       #     jumps to .Ltmp1637
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1636-.Lfunc_begin34       # >> Call Site 7 <<
	.uleb128 .Ltmp1638-.Ltmp1636            #   Call between .Ltmp1636 and .Ltmp1638
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1638-.Lfunc_begin34       # >> Call Site 8 <<
	.uleb128 .Ltmp1639-.Ltmp1638            #   Call between .Ltmp1638 and .Ltmp1639
	.uleb128 .Ltmp1640-.Lfunc_begin34       #     jumps to .Ltmp1640
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1639-.Lfunc_begin34       # >> Call Site 9 <<
	.uleb128 .Ltmp1641-.Ltmp1639            #   Call between .Ltmp1639 and .Ltmp1641
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1641-.Lfunc_begin34       # >> Call Site 10 <<
	.uleb128 .Ltmp1642-.Ltmp1641            #   Call between .Ltmp1641 and .Ltmp1642
	.uleb128 .Ltmp1643-.Lfunc_begin34       #     jumps to .Ltmp1643
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1642-.Lfunc_begin34       # >> Call Site 11 <<
	.uleb128 .Ltmp1644-.Ltmp1642            #   Call between .Ltmp1642 and .Ltmp1644
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1644-.Lfunc_begin34       # >> Call Site 12 <<
	.uleb128 .Ltmp1645-.Ltmp1644            #   Call between .Ltmp1644 and .Ltmp1645
	.uleb128 .Ltmp1676-.Lfunc_begin34       #     jumps to .Ltmp1676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1645-.Lfunc_begin34       # >> Call Site 13 <<
	.uleb128 .Ltmp1646-.Ltmp1645            #   Call between .Ltmp1645 and .Ltmp1646
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1646-.Lfunc_begin34       # >> Call Site 14 <<
	.uleb128 .Ltmp1647-.Ltmp1646            #   Call between .Ltmp1646 and .Ltmp1647
	.uleb128 .Ltmp1676-.Lfunc_begin34       #     jumps to .Ltmp1676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1647-.Lfunc_begin34       # >> Call Site 15 <<
	.uleb128 .Ltmp1648-.Ltmp1647            #   Call between .Ltmp1647 and .Ltmp1648
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1648-.Lfunc_begin34       # >> Call Site 16 <<
	.uleb128 .Ltmp1649-.Ltmp1648            #   Call between .Ltmp1648 and .Ltmp1649
	.uleb128 .Ltmp1676-.Lfunc_begin34       #     jumps to .Ltmp1676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1649-.Lfunc_begin34       # >> Call Site 17 <<
	.uleb128 .Ltmp1650-.Ltmp1649            #   Call between .Ltmp1649 and .Ltmp1650
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1650-.Lfunc_begin34       # >> Call Site 18 <<
	.uleb128 .Ltmp1659-.Ltmp1650            #   Call between .Ltmp1650 and .Ltmp1659
	.uleb128 .Ltmp1676-.Lfunc_begin34       #     jumps to .Ltmp1676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1659-.Lfunc_begin34       # >> Call Site 19 <<
	.uleb128 .Ltmp1670-.Ltmp1659            #   Call between .Ltmp1659 and .Ltmp1670
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1670-.Lfunc_begin34       # >> Call Site 20 <<
	.uleb128 .Ltmp1671-.Ltmp1670            #   Call between .Ltmp1670 and .Ltmp1671
	.uleb128 .Ltmp1676-.Lfunc_begin34       #     jumps to .Ltmp1676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1671-.Lfunc_begin34       # >> Call Site 21 <<
	.uleb128 .Lfunc_end65-.Ltmp1671         #   Call between .Ltmp1671 and .Lfunc_end65
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end34:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_ # -- Begin function _ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_
	.p2align	5
	.type	_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_,@function
_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_: # @_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception35
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	st.d	$s6, $sp, 200                   # 8-byte Folded Spill
	st.d	$s7, $sp, 192                   # 8-byte Folded Spill
	st.d	$s8, $sp, 184                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a5, $sp, 8                     # 8-byte Folded Spill
	st.d	$a4, $sp, 0                     # 8-byte Folded Spill
	move	$s1, $a3
	move	$s5, $a2
	move	$s2, $a1
	move	$s0, $a0
	addi.d	$s8, $sp, 160
	addi.w	$s7, $zero, -1
	ori	$s3, $zero, 2
	b	.LBB66_4
	.p2align	4, , 16
.LBB66_1:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i102
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $sp, 96
.LBB66_2:                               # %.critedge83.thread.sink.split
                                        #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_3:                               # %.critedge83.thread.sink.split
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.w	$a0, $s5, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $s5, 0
.LBB66_4:                               # %.critedge83.thread
                                        # =>This Inner Loop Header: Depth=1
	ld.w	$s4, $s5, 0
	ld.d	$a1, $s1, 8
	ld.d	$s6, $s1, 0
	st.d	$s8, $sp, 144
	st.d	$a1, $sp, 112
	move	$a0, $s8
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB66_6
# %bb.5:                                # %.noexc.i
                                        #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB66_6:                               # %._crit_edge.i.i
                                        #   in Loop: Header=BB66_4 Depth=1
	beq	$a1, $s7, .LBB66_10
# %bb.7:                                # %._crit_edge.i.i
                                        #   in Loop: Header=BB66_4 Depth=1
	bnez	$a1, .LBB66_9
# %bb.8:                                #   in Loop: Header=BB66_4 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB66_10
	.p2align	4, , 16
.LBB66_9:                               #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB66_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a0, $sp, 112
	st.d	$a0, $sp, 152
.Ltmp1677:
	addi.d	$a3, $sp, 144
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd4findEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1678:
# %bb.11:                               #   in Loop: Header=BB66_4 Depth=1
	move	$s4, $a0
	ld.d	$a0, $sp, 144
	beq	$a0, $s8, .LBB66_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB66_4 Depth=1
	beq	$s4, $s7, .LBB66_242
# %bb.14:                               #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	addi.w	$a2, $a2, -1
	bge	$s4, $a2, .LBB66_100
# %bb.15:                               #   in Loop: Header=BB66_4 Depth=1
	beqz	$s4, .LBB66_19
# %bb.16:                               #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a2, $s0, 184
	addi.w	$fp, $s4, -1
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	add.d	$a2, $a3, $fp
	bltz	$a2, .LBB66_22
# %bb.17:                               #   in Loop: Header=BB66_4 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a2, .LBB66_23
# %bb.18:                               #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a4, $fp, 7
	add.d	$a4, $a1, $a4
	b	.LBB66_25
	.p2align	4, , 16
.LBB66_19:                              #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s7, .LBB66_29
# %bb.20:                               #   in Loop: Header=BB66_4 Depth=1
	ori	$a4, $zero, 4
	bgeu	$a2, $a4, .LBB66_36
# %bb.21:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit88.thread
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.wu	$a0, $a1, 160
	bstrpick.d	$a0, $a0, 31, 1
	slli.w	$a0, $a0, 1
	beq	$a0, $s3, .LBB66_38
	b	.LBB66_121
	.p2align	4, , 16
.LBB66_22:                              #   in Loop: Header=BB66_4 Depth=1
	srai.d	$a4, $a2, 2
	b	.LBB66_24
.LBB66_23:                              #   in Loop: Header=BB66_4 Depth=1
	srli.d	$a4, $a2, 2
.LBB66_24:                              #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a2, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a5, $a4
.LBB66_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit109
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.wu	$a4, $a4, 32
	bstrpick.d	$a4, $a4, 31, 1
	slli.w	$a4, $a4, 1
	addi.w	$s2, $s4, 1
	bne	$a4, $s3, .LBB66_79
# %bb.26:                               #   in Loop: Header=BB66_4 Depth=1
	add.d	$a2, $a3, $s2
	bltz	$a2, .LBB66_30
# %bb.27:                               #   in Loop: Header=BB66_4 Depth=1
	ori	$a3, $zero, 4
	bgeu	$a2, $a3, .LBB66_31
# %bb.28:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit112.thread
                                        #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a0, $s2, 7
	add.d	$a0, $a1, $a0
	ld.wu	$a0, $a0, 32
	bstrpick.d	$a0, $a0, 31, 1
	slli.w	$a0, $a0, 1
	beq	$a0, $s3, .LBB66_4
	b	.LBB66_35
.LBB66_29:                              #   in Loop: Header=BB66_4 Depth=1
	srai.d	$a4, $a2, 2
	b	.LBB66_37
.LBB66_30:                              #   in Loop: Header=BB66_4 Depth=1
	srai.d	$a3, $a2, 2
	b	.LBB66_32
.LBB66_31:                              #   in Loop: Header=BB66_4 Depth=1
	srli.d	$a3, $a2, 2
.LBB66_32:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit112
                                        #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a0, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	ld.wu	$a3, $a3, 32
	bstrpick.d	$a3, $a3, 31, 1
	slli.w	$a3, $a3, 1
	beq	$a3, $s3, .LBB66_4
# %bb.33:                               #   in Loop: Header=BB66_4 Depth=1
	bltz	$a2, .LBB66_46
# %bb.34:                               #   in Loop: Header=BB66_4 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB66_47
.LBB66_35:                              #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a0, $s2, 7
	add.d	$a0, $a1, $a0
	b	.LBB66_49
.LBB66_36:                              #   in Loop: Header=BB66_4 Depth=1
	srli.d	$a4, $a2, 2
.LBB66_37:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit88
                                        #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a2, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a5, $a4
	ld.wu	$a4, $a4, 32
	bstrpick.d	$a4, $a4, 31, 1
	slli.w	$a4, $a4, 1
	bne	$a4, $s3, .LBB66_119
.LBB66_38:                              #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $s1, 8
	ld.d	$s2, $s1, 0
	addi.d	$a0, $sp, 96
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 112
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB66_40
# %bb.39:                               # %.noexc.i100
                                        #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a0, $sp, 80
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
.LBB66_40:                              # %._crit_edge.i.i99
                                        #   in Loop: Header=BB66_4 Depth=1
	beq	$a1, $s7, .LBB66_44
# %bb.41:                               # %._crit_edge.i.i99
                                        #   in Loop: Header=BB66_4 Depth=1
	bnez	$a1, .LBB66_43
# %bb.42:                               #   in Loop: Header=BB66_4 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB66_44
.LBB66_43:                              #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB66_44:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit101
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a0, $sp, 112
	st.d	$a0, $sp, 88
.Ltmp1731:
	addi.d	$a2, $sp, 80
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1732:
# %bb.45:                               #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a0, $sp, 80
	ori	$s2, $zero, 1
	addi.d	$a1, $sp, 96
	bne	$a0, $a1, .LBB66_1
	b	.LBB66_3
.LBB66_46:                              #   in Loop: Header=BB66_4 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB66_48
.LBB66_47:                              #   in Loop: Header=BB66_4 Depth=1
	srli.d	$a1, $a2, 2
.LBB66_48:                              #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_49:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit115
                                        #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a2, $sp, 128
	st.d	$a2, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s6, $a0, 0
	st.d	$a1, $sp, 48
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB66_51
# %bb.50:                               # %.noexc.i.i117
                                        #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB66_51:                              # %._crit_edge.i.i.i116
                                        #   in Loop: Header=BB66_4 Depth=1
	beq	$a1, $s7, .LBB66_54
# %bb.52:                               # %._crit_edge.i.i.i116
                                        #   in Loop: Header=BB66_4 Depth=1
	bnez	$a1, .LBB66_55
# %bb.53:                               #   in Loop: Header=BB66_4 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
.LBB66_54:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit118
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a0, $sp, 48
	st.d	$a0, $sp, 120
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB66_56
	b	.LBB66_57
.LBB66_55:                              #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	st.d	$a0, $sp, 120
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB66_57
.LBB66_56:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a0, $sp, 112
	ld.bu	$a1, $a0, 0
	ori	$s6, $zero, 1
	ori	$a2, $zero, 45
	beq	$a1, $a2, .LBB66_75
.LBB66_57:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread274
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s2
	bltz	$a1, .LBB66_60
# %bb.58:                               #   in Loop: Header=BB66_4 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB66_61
# %bb.59:                               #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a0, $s2, 7
	add.d	$a0, $a2, $a0
	b	.LBB66_63
.LBB66_60:                              #   in Loop: Header=BB66_4 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB66_62
.LBB66_61:                              #   in Loop: Header=BB66_4 Depth=1
	srli.d	$a2, $a1, 2
.LBB66_62:                              #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_63:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit120
                                        #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a2, $sp, 64
	st.d	$a2, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s6, $a0, 0
	st.d	$a1, $sp, 176
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB66_66
# %bb.64:                               # %.noexc.i.i122
                                        #   in Loop: Header=BB66_4 Depth=1
.Ltmp1680:
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1681:
# %bb.65:                               # %.noexc
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB66_66:                              # %._crit_edge.i.i.i121
                                        #   in Loop: Header=BB66_4 Depth=1
	beq	$a1, $s7, .LBB66_70
# %bb.67:                               # %._crit_edge.i.i.i121
                                        #   in Loop: Header=BB66_4 Depth=1
	bnez	$a1, .LBB66_69
# %bb.68:                               #   in Loop: Header=BB66_4 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB66_70
.LBB66_69:                              #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB66_70:                              #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $sp, 176
	ld.d	$a0, $sp, 48
	st.d	$a1, $sp, 56
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB66_72
# %bb.71:                               #   in Loop: Header=BB66_4 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -43
	sltui	$s6, $a1, 1
	addi.d	$a1, $sp, 64
	bne	$a0, $a1, .LBB66_73
	b	.LBB66_74
.LBB66_72:                              #   in Loop: Header=BB66_4 Depth=1
	move	$s6, $zero
	addi.d	$a1, $sp, 64
	beq	$a0, $a1, .LBB66_74
.LBB66_73:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i126
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_74:                              # %.critedge.thread
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a0, $sp, 112
.LBB66_75:                              # %.critedge
                                        #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a1, $sp, 128
	beq	$a0, $a1, .LBB66_77
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i129
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_77:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit131
                                        #   in Loop: Header=BB66_4 Depth=1
	bnez	$s6, .LBB66_4
# %bb.78:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit131..critedge83_crit_edge
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $s0, 176
	ld.d	$a2, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	add.d	$a2, $a3, $fp
	.p2align	4, , 16
.LBB66_79:                              # %.critedge83
                                        #   in Loop: Header=BB66_4 Depth=1
	bltz	$a2, .LBB66_82
# %bb.80:                               #   in Loop: Header=BB66_4 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a2, .LBB66_83
# %bb.81:                               #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a4, $fp, 7
	add.d	$a4, $a1, $a4
	ld.wu	$a4, $a4, 32
	bstrpick.d	$a4, $a4, 31, 1
	slli.w	$a4, $a4, 1
	bne	$a4, $s3, .LBB66_85
	b	.LBB66_103
.LBB66_82:                              #   in Loop: Header=BB66_4 Depth=1
	srai.d	$a4, $a2, 2
	b	.LBB66_84
.LBB66_83:                              #   in Loop: Header=BB66_4 Depth=1
	srli.d	$a4, $a2, 2
.LBB66_84:                              #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a2, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a5, $a4
	ld.wu	$a4, $a4, 32
	bstrpick.d	$a4, $a4, 31, 1
	slli.w	$a4, $a4, 1
	beq	$a4, $s3, .LBB66_103
.LBB66_85:                              #   in Loop: Header=BB66_4 Depth=1
	add.d	$a4, $a3, $s2
	bltz	$a4, .LBB66_88
# %bb.86:                               #   in Loop: Header=BB66_4 Depth=1
	ori	$a5, $zero, 3
	bltu	$a5, $a4, .LBB66_89
# %bb.87:                               #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a4, $s2, 7
	add.d	$a4, $a1, $a4
	ld.wu	$a4, $a4, 32
	bstrpick.d	$a4, $a4, 31, 1
	slli.w	$a4, $a4, 1
	beq	$a4, $s3, .LBB66_91
	b	.LBB66_103
.LBB66_88:                              #   in Loop: Header=BB66_4 Depth=1
	srai.d	$a5, $a4, 2
	b	.LBB66_90
.LBB66_89:                              #   in Loop: Header=BB66_4 Depth=1
	srli.d	$a5, $a4, 2
.LBB66_90:                              #   in Loop: Header=BB66_4 Depth=1
	slli.d	$a6, $a5, 3
	ldx.d	$a6, $a0, $a6
	slli.d	$a5, $a5, 2
	sub.d	$a4, $a4, $a5
	slli.d	$a4, $a4, 7
	add.d	$a4, $a6, $a4
	ld.wu	$a4, $a4, 32
	bstrpick.d	$a4, $a4, 31, 1
	slli.w	$a4, $a4, 1
	bne	$a4, $s3, .LBB66_103
.LBB66_91:                              #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $s1, 8
	ld.d	$s6, $s1, 0
	addi.d	$fp, $sp, 32
	st.d	$fp, $sp, 16
	st.d	$a1, $sp, 112
	move	$a0, $fp
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB66_93
# %bb.92:                               # %.noexc.i145
                                        #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB66_93:                              # %._crit_edge.i.i144
                                        #   in Loop: Header=BB66_4 Depth=1
	beq	$a1, $s7, .LBB66_97
# %bb.94:                               # %._crit_edge.i.i144
                                        #   in Loop: Header=BB66_4 Depth=1
	bnez	$a1, .LBB66_96
# %bb.95:                               #   in Loop: Header=BB66_4 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB66_97
.LBB66_96:                              #   in Loop: Header=BB66_4 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB66_97:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit146
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a0, $sp, 112
	st.d	$a0, $sp, 24
.Ltmp1683:
	addi.d	$a2, $sp, 16
	move	$a0, $s0
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11do_unary_opEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp1684:
# %bb.98:                               #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a0, $sp, 16
	beq	$a0, $fp, .LBB66_3
# %bb.99:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i147
                                        #   in Loop: Header=BB66_4 Depth=1
	ld.d	$a1, $sp, 32
	b	.LBB66_2
.LBB66_100:
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s4
	bltz	$a2, .LBB66_106
# %bb.101:
	ori	$a3, $zero, 3
	ld.d	$s5, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	bltu	$a3, $a2, .LBB66_107
# %bb.102:
	slli.d	$a0, $s4, 7
	add.d	$a0, $a1, $a0
	b	.LBB66_109
.LBB66_103:
	bltz	$a2, .LBB66_118
# %bb.104:
	ori	$a4, $zero, 3
	ld.d	$s5, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	bltu	$a4, $a2, .LBB66_122
# %bb.105:
	slli.d	$a4, $fp, 7
	add.d	$a4, $a1, $a4
	b	.LBB66_124
.LBB66_106:
	srai.d	$a1, $a2, 2
	ld.d	$s5, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	b	.LBB66_108
.LBB66_107:
	srli.d	$a1, $a2, 2
.LBB66_108:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_109:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	move	$a1, $fp
	move	$a2, $s5
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s0, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.96)
	addi.d	$a1, $a0, %pc_lo12(.L.str.96)
	ori	$a2, $zero, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a2, $s1, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.97)
	addi.d	$a1, $a0, %pc_lo12(.L.str.97)
	ori	$a2, $zero, 27
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB66_243
# %bb.110:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB66_112
# %bb.111:
	ld.bu	$a0, $s3, 67
	b	.LBB66_113
.LBB66_112:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB66_113:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.98)
	addi.d	$a1, $a0, %pc_lo12(.L.str.98)
	ori	$a2, $zero, 40
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a2, $s1, 8
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.99)
	addi.d	$a1, $a0, %pc_lo12(.L.str.99)
	ori	$a2, $zero, 20
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB66_243
# %bb.114:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i208
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB66_116
# %bb.115:
	ld.bu	$a0, $s1, 67
	b	.LBB66_117
.LBB66_116:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB66_117:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit211
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	b	.LBB66_241
.LBB66_118:
	srai.d	$a4, $a2, 2
	ld.d	$s5, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	b	.LBB66_123
.LBB66_119:
	blt	$a3, $s7, .LBB66_129
# %bb.120:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB66_187
.LBB66_121:                             # %.thread269
	addi.d	$a0, $a1, 128
	b	.LBB66_189
.LBB66_122:
	srli.d	$a4, $a2, 2
.LBB66_123:
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a2, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a5, $a4
.LBB66_124:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit154
	ld.wu	$a4, $a4, 32
	bstrpick.d	$a4, $a4, 31, 1
	slli.w	$a4, $a4, 1
	ori	$a5, $zero, 2
	beq	$a4, $a5, .LBB66_133
# %bb.125:
	add.d	$a4, $a3, $s2
	bltz	$a4, .LBB66_128
# %bb.126:
	ori	$a5, $zero, 3
	bltu	$a5, $a4, .LBB66_130
# %bb.127:
	slli.d	$a4, $s2, 7
	add.d	$a4, $a1, $a4
	b	.LBB66_132
.LBB66_128:
	srai.d	$a5, $a4, 2
	b	.LBB66_131
.LBB66_129:
	srai.d	$a1, $a2, 2
	b	.LBB66_188
.LBB66_130:
	srli.d	$a5, $a4, 2
.LBB66_131:
	slli.d	$a6, $a5, 3
	ldx.d	$a6, $a0, $a6
	slli.d	$a5, $a5, 2
	sub.d	$a4, $a4, $a5
	slli.d	$a4, $a4, 7
	add.d	$a4, $a6, $a4
.LBB66_132:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit157
	ld.wu	$a4, $a4, 32
	bstrpick.d	$a4, $a4, 31, 1
	slli.w	$a4, $a4, 1
	ori	$a5, $zero, 2
	bne	$a4, $a5, .LBB66_137
.LBB66_133:
	add.d	$a2, $a3, $s4
	bltz	$a2, .LBB66_136
# %bb.134:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB66_140
# %bb.135:
	slli.d	$a0, $s4, 7
	add.d	$a0, $a1, $a0
	b	.LBB66_142
.LBB66_136:
	srai.d	$a1, $a2, 2
	b	.LBB66_141
.LBB66_137:
	bltz	$a2, .LBB66_186
# %bb.138:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB66_213
# %bb.139:
	slli.d	$a0, $fp, 7
	add.d	$a0, $a1, $a0
	b	.LBB66_215
.LBB66_140:
	srli.d	$a1, $a2, 2
.LBB66_141:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_142:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit177
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 16
	pcalau12i	$a0, %pc_hi20(.L.str.102)
	addi.d	$a1, $a0, %pc_lo12(.L.str.102)
	ori	$a2, $zero, 25
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a2, $s1, 8
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s1, $a1, 240
	beqz	$s1, .LBB66_243
# %bb.143:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i245
	ld.bu	$a1, $s1, 56
	beqz	$a1, .LBB66_145
# %bb.144:
	ld.bu	$a1, $s1, 67
	b	.LBB66_146
.LBB66_145:
	move	$fp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $fp
.LBB66_146:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit249
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.103)
	addi.d	$a1, $a0, %pc_lo12(.L.str.103)
	ori	$a2, $zero, 18
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB66_243
# %bb.147:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i251
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB66_149
# %bb.148:
	ld.bu	$a0, $s1, 67
	b	.LBB66_150
.LBB66_149:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB66_150:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit255
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s4
	bltz	$a1, .LBB66_153
# %bb.151:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB66_154
# %bb.152:
	slli.d	$a0, $s4, 7
	add.d	$a0, $a2, $a0
	b	.LBB66_156
.LBB66_153:
	srai.d	$a2, $a1, 2
	b	.LBB66_155
.LBB66_154:
	srli.d	$a2, $a1, 2
.LBB66_155:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_156:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit179
	addi.d	$fp, $sp, 128
	st.d	$fp, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 48
	move	$a0, $fp
	bltu	$a1, $a2, .LBB66_158
# %bb.157:                              # %.noexc.i.i181
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB66_158:                             # %._crit_edge.i.i.i180
	beq	$a1, $s7, .LBB66_162
# %bb.159:                              # %._crit_edge.i.i.i180
	bnez	$a1, .LBB66_161
# %bb.160:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB66_162
.LBB66_161:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB66_162:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit182
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 112
	st.d	$a2, $sp, 120
.Ltmp1699:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1700:
# %bb.163:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit184
	move	$s1, $a0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s2
	bltz	$a1, .LBB66_166
# %bb.164:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB66_167
# %bb.165:
	slli.d	$a0, $s2, 7
	add.d	$a0, $a2, $a0
	b	.LBB66_169
.LBB66_166:
	srai.d	$a2, $a1, 2
	b	.LBB66_168
.LBB66_167:
	srli.d	$a2, $a1, 2
.LBB66_168:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_169:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit186
	addi.d	$s2, $sp, 64
	st.d	$s2, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 176
	move	$a0, $s2
	bltu	$a1, $a2, .LBB66_172
# %bb.170:                              # %.noexc.i.i188
.Ltmp1702:
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1703:
# %bb.171:                              # %.noexc189
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB66_172:                             # %._crit_edge.i.i.i187
	beq	$a1, $s7, .LBB66_176
# %bb.173:                              # %._crit_edge.i.i.i187
	bnez	$a1, .LBB66_175
# %bb.174:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB66_176
.LBB66_175:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB66_176:
	ld.d	$a2, $sp, 176
	ld.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
.Ltmp1705:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1706:
# %bb.177:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit192
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB66_244
# %bb.178:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i257
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB66_180
# %bb.179:
	ld.bu	$a0, $s1, 67
	b	.LBB66_182
.LBB66_180:
.Ltmp1707:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1708:
# %bb.181:                              # %.noexc262
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp1709:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp1710:
.LBB66_182:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i259
.Ltmp1711:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1712:
# %bb.183:                              # %.noexc264
.Ltmp1713:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1714:
# %bb.184:                              # %_ZNSolsEPFRSoS_E.exit194
	ld.d	$a0, $sp, 48
	beq	$a0, $s2, .LBB66_239
# %bb.185:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i195
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB66_239
.LBB66_186:
	srai.d	$a1, $a2, 2
	b	.LBB66_214
.LBB66_187:
	srli.d	$a1, $a2, 2
.LBB66_188:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_189:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit90
	ld.d	$s5, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	move	$a1, $fp
	move	$a2, $s5
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s2, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.100)
	addi.d	$a1, $a0, %pc_lo12(.L.str.100)
	ori	$a2, $zero, 40
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a2, $s1, 8
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.101)
	addi.d	$a1, $a0, %pc_lo12(.L.str.101)
	ori	$a2, $zero, 16
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB66_243
# %bb.190:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i213
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB66_192
# %bb.191:
	ld.bu	$a0, $s3, 67
	b	.LBB66_193
.LBB66_192:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB66_193:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit216
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.25)
	addi.d	$a1, $a0, %pc_lo12(.L.str.25)
	ori	$a2, $zero, 16
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	blt	$a3, $s7, .LBB66_196
# %bb.194:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB66_197
# %bb.195:
	addi.d	$a0, $a2, 128
	b	.LBB66_199
.LBB66_196:
	srai.d	$a2, $a1, 2
	b	.LBB66_198
.LBB66_197:
	srli.d	$a2, $a1, 2
.LBB66_198:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_199:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit92
	addi.d	$fp, $sp, 128
	st.d	$fp, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 48
	move	$a0, $fp
	bltu	$a1, $a2, .LBB66_201
# %bb.200:                              # %.noexc.i.i
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB66_201:                             # %._crit_edge.i.i.i
	beq	$a1, $s7, .LBB66_205
# %bb.202:                              # %._crit_edge.i.i.i
	bnez	$a1, .LBB66_204
# %bb.203:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB66_205
.LBB66_204:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB66_205:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 112
	st.d	$a2, $sp, 120
.Ltmp1718:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1719:
# %bb.206:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB66_246
# %bb.207:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i218
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB66_209
# %bb.208:
	ld.bu	$a0, $s1, 67
	b	.LBB66_211
.LBB66_209:
.Ltmp1720:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1721:
# %bb.210:                              # %.noexc222
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp1722:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp1723:
.LBB66_211:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp1724:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1725:
# %bb.212:                              # %.noexc224
.Ltmp1726:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1727:
	b	.LBB66_239
.LBB66_213:
	srli.d	$a1, $a2, 2
.LBB66_214:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_215:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit160
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 16
	pcalau12i	$a0, %pc_hi20(.L.str.100)
	addi.d	$a1, $a0, %pc_lo12(.L.str.100)
	ori	$a2, $zero, 40
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s1, 0
	ld.d	$a2, $s1, 8
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.101)
	addi.d	$a1, $a0, %pc_lo12(.L.str.101)
	ori	$a2, $zero, 16
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB66_243
# %bb.216:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i228
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB66_218
# %bb.217:
	ld.bu	$a0, $s4, 67
	b	.LBB66_219
.LBB66_218:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.LBB66_219:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit232
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.25)
	addi.d	$a1, $a0, %pc_lo12(.L.str.25)
	ori	$a2, $zero, 16
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s2
	bltz	$a1, .LBB66_222
# %bb.220:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB66_223
# %bb.221:
	slli.d	$a0, $s2, 7
	add.d	$a0, $a2, $a0
	b	.LBB66_225
.LBB66_222:
	srai.d	$a2, $a1, 2
	b	.LBB66_224
.LBB66_223:
	srli.d	$a2, $a1, 2
.LBB66_224:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB66_225:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit162
	addi.d	$fp, $sp, 128
	st.d	$fp, $sp, 112
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 48
	move	$a0, $fp
	bltu	$a1, $a2, .LBB66_227
# %bb.226:                              # %.noexc.i.i164
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 112
	st.d	$a1, $sp, 128
.LBB66_227:                             # %._crit_edge.i.i.i163
	beq	$a1, $s7, .LBB66_231
# %bb.228:                              # %._crit_edge.i.i.i163
	bnez	$a1, .LBB66_230
# %bb.229:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB66_231
.LBB66_230:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB66_231:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit165
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 112
	st.d	$a2, $sp, 120
.Ltmp1686:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1687:
# %bb.232:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit167
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB66_248
# %bb.233:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i234
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB66_235
# %bb.234:
	ld.bu	$a0, $s1, 67
	b	.LBB66_237
.LBB66_235:
.Ltmp1688:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1689:
# %bb.236:                              # %.noexc239
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp1690:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp1691:
.LBB66_237:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i236
.Ltmp1692:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1693:
# %bb.238:                              # %.noexc241
.Ltmp1694:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1695:
.LBB66_239:                             # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 112
	beq	$a0, $fp, .LBB66_241
# %bb.240:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i93
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_241:                             # %.loopexit.sink.split
	ori	$a0, $zero, 2
	st.w	$a0, $s5, 0
.LBB66_242:                             # %.loopexit
	ld.d	$s8, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB66_243:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB66_244:
.Ltmp1715:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1716:
# %bb.245:                              # %.noexc261
.LBB66_246:
.Ltmp1728:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1729:
# %bb.247:                              # %.noexc221
.LBB66_248:
.Ltmp1696:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1697:
# %bb.249:                              # %.noexc238
.LBB66_250:
.Ltmp1704:
	move	$s0, $a0
	b	.LBB66_259
.LBB66_251:
.Ltmp1701:
	move	$s0, $a0
	b	.LBB66_259
.LBB66_252:
.Ltmp1698:
	b	.LBB66_254
.LBB66_253:
.Ltmp1730:
.LBB66_254:
	ld.d	$a2, $sp, 112
	move	$s0, $a0
	bne	$a2, $fp, .LBB66_256
	b	.LBB66_269
.LBB66_255:
.Ltmp1682:
	ld.d	$a2, $sp, 112
	move	$s0, $a0
	addi.d	$a0, $sp, 128
	beq	$a2, $a0, .LBB66_269
.LBB66_256:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i96
	ld.d	$a0, $sp, 128
	b	.LBB66_267
.LBB66_257:
.Ltmp1717:
	ld.d	$a2, $sp, 48
	move	$s0, $a0
	beq	$a2, $s2, .LBB66_259
# %bb.258:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i201
	ld.d	$a0, $sp, 64
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_259:
	ld.d	$a0, $sp, 112
	beq	$a0, $fp, .LBB66_269
# %bb.260:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i204
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	b	.LBB66_268
.LBB66_261:
.Ltmp1733:
	ld.d	$a2, $sp, 80
	move	$s0, $a0
	addi.d	$a0, $sp, 96
	beq	$a2, $a0, .LBB66_269
# %bb.262:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i105
	ld.d	$a0, $sp, 96
	b	.LBB66_267
.LBB66_263:
.Ltmp1685:
	ld.d	$a2, $sp, 16
	move	$s0, $a0
	beq	$a2, $fp, .LBB66_269
# %bb.264:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i150
	ld.d	$a0, $sp, 32
	b	.LBB66_267
.LBB66_265:
.Ltmp1679:
	ld.d	$a2, $sp, 144
	move	$s0, $a0
	beq	$a2, $s8, .LBB66_269
# %bb.266:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i84
	ld.d	$a0, $sp, 160
.LBB66_267:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB66_268:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB66_269:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end66:
	.size	_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_, .Lfunc_end66-_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table66:
.Lexception35:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Lfunc_begin35-.Lfunc_begin35  # >> Call Site 1 <<
	.uleb128 .Ltmp1677-.Lfunc_begin35       #   Call between .Lfunc_begin35 and .Ltmp1677
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1677-.Lfunc_begin35       # >> Call Site 2 <<
	.uleb128 .Ltmp1678-.Ltmp1677            #   Call between .Ltmp1677 and .Ltmp1678
	.uleb128 .Ltmp1679-.Lfunc_begin35       #     jumps to .Ltmp1679
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1678-.Lfunc_begin35       # >> Call Site 3 <<
	.uleb128 .Ltmp1731-.Ltmp1678            #   Call between .Ltmp1678 and .Ltmp1731
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1731-.Lfunc_begin35       # >> Call Site 4 <<
	.uleb128 .Ltmp1732-.Ltmp1731            #   Call between .Ltmp1731 and .Ltmp1732
	.uleb128 .Ltmp1733-.Lfunc_begin35       #     jumps to .Ltmp1733
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1732-.Lfunc_begin35       # >> Call Site 5 <<
	.uleb128 .Ltmp1680-.Ltmp1732            #   Call between .Ltmp1732 and .Ltmp1680
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1680-.Lfunc_begin35       # >> Call Site 6 <<
	.uleb128 .Ltmp1681-.Ltmp1680            #   Call between .Ltmp1680 and .Ltmp1681
	.uleb128 .Ltmp1682-.Lfunc_begin35       #     jumps to .Ltmp1682
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1681-.Lfunc_begin35       # >> Call Site 7 <<
	.uleb128 .Ltmp1683-.Ltmp1681            #   Call between .Ltmp1681 and .Ltmp1683
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1683-.Lfunc_begin35       # >> Call Site 8 <<
	.uleb128 .Ltmp1684-.Ltmp1683            #   Call between .Ltmp1683 and .Ltmp1684
	.uleb128 .Ltmp1685-.Lfunc_begin35       #     jumps to .Ltmp1685
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1684-.Lfunc_begin35       # >> Call Site 9 <<
	.uleb128 .Ltmp1699-.Ltmp1684            #   Call between .Ltmp1684 and .Ltmp1699
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1699-.Lfunc_begin35       # >> Call Site 10 <<
	.uleb128 .Ltmp1700-.Ltmp1699            #   Call between .Ltmp1699 and .Ltmp1700
	.uleb128 .Ltmp1701-.Lfunc_begin35       #     jumps to .Ltmp1701
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1702-.Lfunc_begin35       # >> Call Site 11 <<
	.uleb128 .Ltmp1703-.Ltmp1702            #   Call between .Ltmp1702 and .Ltmp1703
	.uleb128 .Ltmp1704-.Lfunc_begin35       #     jumps to .Ltmp1704
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1703-.Lfunc_begin35       # >> Call Site 12 <<
	.uleb128 .Ltmp1705-.Ltmp1703            #   Call between .Ltmp1703 and .Ltmp1705
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1705-.Lfunc_begin35       # >> Call Site 13 <<
	.uleb128 .Ltmp1714-.Ltmp1705            #   Call between .Ltmp1705 and .Ltmp1714
	.uleb128 .Ltmp1717-.Lfunc_begin35       #     jumps to .Ltmp1717
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1714-.Lfunc_begin35       # >> Call Site 14 <<
	.uleb128 .Ltmp1718-.Ltmp1714            #   Call between .Ltmp1714 and .Ltmp1718
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1718-.Lfunc_begin35       # >> Call Site 15 <<
	.uleb128 .Ltmp1727-.Ltmp1718            #   Call between .Ltmp1718 and .Ltmp1727
	.uleb128 .Ltmp1730-.Lfunc_begin35       #     jumps to .Ltmp1730
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1727-.Lfunc_begin35       # >> Call Site 16 <<
	.uleb128 .Ltmp1686-.Ltmp1727            #   Call between .Ltmp1727 and .Ltmp1686
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1686-.Lfunc_begin35       # >> Call Site 17 <<
	.uleb128 .Ltmp1695-.Ltmp1686            #   Call between .Ltmp1686 and .Ltmp1695
	.uleb128 .Ltmp1698-.Lfunc_begin35       #     jumps to .Ltmp1698
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1695-.Lfunc_begin35       # >> Call Site 18 <<
	.uleb128 .Ltmp1715-.Ltmp1695            #   Call between .Ltmp1695 and .Ltmp1715
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1715-.Lfunc_begin35       # >> Call Site 19 <<
	.uleb128 .Ltmp1716-.Ltmp1715            #   Call between .Ltmp1715 and .Ltmp1716
	.uleb128 .Ltmp1717-.Lfunc_begin35       #     jumps to .Ltmp1717
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1728-.Lfunc_begin35       # >> Call Site 20 <<
	.uleb128 .Ltmp1729-.Ltmp1728            #   Call between .Ltmp1728 and .Ltmp1729
	.uleb128 .Ltmp1730-.Lfunc_begin35       #     jumps to .Ltmp1730
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1696-.Lfunc_begin35       # >> Call Site 21 <<
	.uleb128 .Ltmp1697-.Ltmp1696            #   Call between .Ltmp1696 and .Ltmp1697
	.uleb128 .Ltmp1698-.Lfunc_begin35       #     jumps to .Ltmp1698
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1697-.Lfunc_begin35       # >> Call Site 22 <<
	.uleb128 .Lfunc_end66-.Ltmp1697         #   Call between .Ltmp1697 and .Lfunc_end66
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end35:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd10check_ppmmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd10check_ppmmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd10check_ppmmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd10check_ppmmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd10check_ppmmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception36
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	st.d	$s8, $sp, 72                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a2, $sp, 24                    # 8-byte Folded Spill
	move	$s1, $a0
	move	$s6, $zero
	move	$s7, $zero
	addi.d	$s5, $sp, 48
	addi.d	$s2, $a1, 16
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	addi.d	$s8, $a1, 256
	addi.w	$s0, $zero, -1
	ori	$fp, $zero, 2
	lu12i.w	$a0, 2
	ori	$a0, $a0, 2859
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	b	.LBB67_2
	.p2align	4, , 16
.LBB67_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit23
                                        #   in Loop: Header=BB67_2 Depth=1
	addi.d	$s7, $s7, 1
	addi.d	$s6, $s6, 128
.LBB67_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s1, 232
	ld.d	$a0, $s1, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s1, 208
	ld.d	$a4, $s1, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s1, 192
	ld.d	$a1, $s1, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s7, $a2, .LBB67_54
# %bb.3:                                #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a2, $s1, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s7, $a2
	bltz	$a2, .LBB67_6
# %bb.4:                                #   in Loop: Header=BB67_2 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB67_7
# %bb.5:                                #   in Loop: Header=BB67_2 Depth=1
	add.d	$a0, $a1, $s6
	b	.LBB67_9
	.p2align	4, , 16
.LBB67_6:                               #   in Loop: Header=BB67_2 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB67_8
	.p2align	4, , 16
.LBB67_7:                               #   in Loop: Header=BB67_2 Depth=1
	srli.d	$a1, $a2, 2
.LBB67_8:                               #   in Loop: Header=BB67_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB67_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	st.d	$s5, $sp, 32
	st.d	$a1, $sp, 64
	move	$a0, $s5
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB67_11
# %bb.10:                               # %.noexc.i.i
                                        #   in Loop: Header=BB67_2 Depth=1
	addi.d	$a0, $sp, 32
	addi.d	$a1, $sp, 64
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 64
	st.d	$a0, $sp, 32
	st.d	$a1, $sp, 48
.LBB67_11:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB67_2 Depth=1
	beq	$a1, $s0, .LBB67_14
# %bb.12:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB67_2 Depth=1
	bnez	$a1, .LBB67_15
# %bb.13:                               #   in Loop: Header=BB67_2 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
.LBB67_14:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a1, $sp, 64
	ld.d	$a0, $sp, 32
	st.d	$a1, $sp, 40
	beq	$a1, $fp, .LBB67_16
	b	.LBB67_52
	.p2align	4, , 16
.LBB67_15:                              #   in Loop: Header=BB67_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 64
	ld.d	$a0, $sp, 32
	st.d	$a1, $sp, 40
	bne	$a1, $fp, .LBB67_52
.LBB67_16:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.hu	$a1, $a0, 0
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB67_18
# %bb.17:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread50
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.hu	$a1, $a0, 0
	lu12i.w	$a2, 2
	ori	$a2, $a2, 3373
	bne	$a1, $a2, .LBB67_52
.LBB67_18:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a2, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s7, $a1
	bltz	$a1, .LBB67_21
# %bb.19:                               #   in Loop: Header=BB67_2 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB67_22
# %bb.20:                               #   in Loop: Header=BB67_2 Depth=1
	add.d	$a0, $a2, $s6
	b	.LBB67_24
.LBB67_21:                              #   in Loop: Header=BB67_2 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB67_23
.LBB67_22:                              #   in Loop: Header=BB67_2 Depth=1
	srli.d	$a2, $a1, 2
.LBB67_23:                              #   in Loop: Header=BB67_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB67_24:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit15
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1734:
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1735:
# %bb.25:                               #   in Loop: Header=BB67_2 Depth=1
.Ltmp1736:
	pcalau12i	$a0, %pc_hi20(.L.str.104)
	addi.d	$a1, $a0, %pc_lo12(.L.str.104)
	ori	$a2, $zero, 10
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1737:
# %bb.26:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a1, $sp, 32
	ld.d	$a2, $sp, 40
.Ltmp1738:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1739:
# %bb.27:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1740:
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.105)
	addi.d	$a1, $a0, %pc_lo12(.L.str.105)
	ori	$a2, $zero, 10
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1741:
# %bb.28:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit16
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB67_55
# %bb.29:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB67_31
# %bb.30:                               #   in Loop: Header=BB67_2 Depth=1
	ld.bu	$a0, $s4, 67
	b	.LBB67_33
.LBB67_31:                              #   in Loop: Header=BB67_2 Depth=1
.Ltmp1742:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1743:
# %bb.32:                               # %.noexc24
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp1744:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp1745:
.LBB67_33:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1746:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1747:
# %bb.34:                               # %.noexc26
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1748:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1749:
# %bb.35:                               # %_ZNSolsEPFRSoS_E.exit
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1750:
	pcalau12i	$a0, %pc_hi20(.L.str.106)
	addi.d	$a1, $a0, %pc_lo12(.L.str.106)
	ori	$a2, $zero, 46
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1751:
# %bb.36:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit17
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	ldx.d	$s3, $s8, $a0
	beqz	$s3, .LBB67_55
# %bb.37:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i29
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB67_39
# %bb.38:                               #   in Loop: Header=BB67_2 Depth=1
	ld.bu	$a0, $s3, 67
	b	.LBB67_41
.LBB67_39:                              #   in Loop: Header=BB67_2 Depth=1
.Ltmp1752:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1753:
# %bb.40:                               # %.noexc34
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1754:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1755:
.LBB67_41:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i31
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1756:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1757:
# %bb.42:                               # %.noexc36
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1758:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1759:
# %bb.43:                               # %_ZNSolsEPFRSoS_E.exit18
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1760:
	pcalau12i	$a0, %pc_hi20(.L.str.107)
	addi.d	$a1, $a0, %pc_lo12(.L.str.107)
	ori	$a2, $zero, 33
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1761:
# %bb.44:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit19
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	ldx.d	$s3, $s8, $a0
	beqz	$s3, .LBB67_55
# %bb.45:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i40
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB67_47
# %bb.46:                               #   in Loop: Header=BB67_2 Depth=1
	ld.bu	$a0, $s3, 67
	b	.LBB67_49
.LBB67_47:                              #   in Loop: Header=BB67_2 Depth=1
.Ltmp1762:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1763:
# %bb.48:                               # %.noexc45
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp1764:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp1765:
.LBB67_49:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i42
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1766:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1767:
# %bb.50:                               # %.noexc47
                                        #   in Loop: Header=BB67_2 Depth=1
.Ltmp1768:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1769:
# %bb.51:                               # %_ZNSolsEPFRSoS_E.exit20
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	st.w	$fp, $a1, 0
.LBB67_52:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit13.thread51
                                        #   in Loop: Header=BB67_2 Depth=1
	beq	$a0, $s5, .LBB67_1
# %bb.53:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
                                        #   in Loop: Header=BB67_2 Depth=1
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB67_1
.LBB67_54:
	ld.d	$s8, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB67_55:                              # %.invoke
.Ltmp1771:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp1772:
# %bb.56:                               # %.cont
.LBB67_57:                              # %.loopexit.split-lp
.Ltmp1773:
	b	.LBB67_59
.LBB67_58:                              # %.loopexit
.Ltmp1770:
.LBB67_59:
	ld.d	$a2, $sp, 32
	beq	$a2, $s5, .LBB67_61
# %bb.60:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 48
	addi.d	$a1, $a1, 1
	move	$fp, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
.LBB67_61:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end67:
	.size	_ZN2PP3Cmd10check_ppmmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end67-_ZN2PP3Cmd10check_ppmmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table67:
.Lexception36:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Lfunc_begin36-.Lfunc_begin36  # >> Call Site 1 <<
	.uleb128 .Ltmp1734-.Lfunc_begin36       #   Call between .Lfunc_begin36 and .Ltmp1734
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1734-.Lfunc_begin36       # >> Call Site 2 <<
	.uleb128 .Ltmp1769-.Ltmp1734            #   Call between .Ltmp1734 and .Ltmp1769
	.uleb128 .Ltmp1770-.Lfunc_begin36       #     jumps to .Ltmp1770
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1769-.Lfunc_begin36       # >> Call Site 3 <<
	.uleb128 .Ltmp1771-.Ltmp1769            #   Call between .Ltmp1769 and .Ltmp1771
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1771-.Lfunc_begin36       # >> Call Site 4 <<
	.uleb128 .Ltmp1772-.Ltmp1771            #   Call between .Ltmp1771 and .Ltmp1772
	.uleb128 .Ltmp1773-.Lfunc_begin36       #     jumps to .Ltmp1773
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1772-.Lfunc_begin36       # >> Call Site 5 <<
	.uleb128 .Lfunc_end67-.Ltmp1772         #   Call between .Ltmp1772 and .Lfunc_end67
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end36:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd12separate_strERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RSt6vectorIS6_SaIS6_EE # -- Begin function _ZN2PP3Cmd12separate_strERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RSt6vectorIS6_SaIS6_EE
	.p2align	5
	.type	_ZN2PP3Cmd12separate_strERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RSt6vectorIS6_SaIS6_EE,@function
_ZN2PP3Cmd12separate_strERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RSt6vectorIS6_SaIS6_EE: # @_ZN2PP3Cmd12separate_strERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RSt6vectorIS6_SaIS6_EE
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception37
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$fp, $a3
	ld.d	$s2, $a3, 0
	ld.d	$s3, $a3, 8
	move	$s0, $a2
	move	$s1, $a1
	beq	$s3, $s2, .LBB68_6
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s4, $s2, 16
	b	.LBB68_3
	.p2align	4, , 16
.LBB68_2:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB68_3 Depth=1
	addi.d	$a0, $s4, 16
	addi.d	$s4, $s4, 32
	beq	$a0, $s3, .LBB68_5
.LBB68_3:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s4, -16
	beq	$s4, $a0, .LBB68_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB68_3 Depth=1
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB68_2
.LBB68_5:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	st.d	$s2, $fp, 8
.LBB68_6:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv.exit
	ld.d	$a1, $s1, 0
	ld.d	$a3, $s1, 8
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm)
	jirl	$ra, $ra, 0
	addi.w	$s3, $a0, 0
	addi.w	$s5, $zero, -1
	beq	$s3, $s5, .LBB68_16
# %bb.7:
	move	$s2, $a0
	ld.d	$a2, $s1, 8
	ld.d	$s4, $s0, 8
	bne	$a2, $s4, .LBB68_10
# %bb.8:
	beqz	$a2, .LBB68_16
# %bb.9:                                # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s1, 0
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB68_16
.LBB68_10:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread58
	blez	$s3, .LBB68_28
# %bb.11:
	bstrpick.d	$a0, $s2, 30, 0
	addi.d	$s6, $sp, 16
	st.d	$s6, $sp, 0
	ld.d	$s3, $s0, 0
	sltu	$a1, $a0, $s4
	masknez	$a2, $s4, $a1
	maskeqz	$a0, $a0, $a1
	or	$s4, $a0, $a2
	ori	$a1, $zero, 16
	st.d	$s4, $sp, 32
	move	$a0, $s6
	bltu	$s4, $a1, .LBB68_13
# %bb.12:                               # %.noexc10.i.i
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB68_13:                              # %._crit_edge.i.i.i
	beqz	$s4, .LBB68_18
# %bb.14:                               # %._crit_edge.i.i.i
	ori	$a1, $zero, 1
	bne	$s4, $a1, .LBB68_17
# %bb.15:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB68_18
.LBB68_16:
	move	$s1, $zero
	b	.LBB68_55
.LBB68_17:
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB68_18:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 0
	st.d	$a0, $sp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$s3, $fp, 8
	ld.d	$a0, $fp, 16
	beq	$s3, $a0, .LBB68_25
# %bb.19:
	addi.d	$a0, $s3, 16
	st.d	$a0, $s3, 0
	ld.d	$a1, $sp, 8
	ld.d	$s4, $sp, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 32
	bltu	$a1, $a2, .LBB68_22
# %bb.20:                               # %.noexc.i.i
.Ltmp1774:
	addi.d	$a1, $sp, 32
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1775:
# %bb.21:                               # %.noexc
	st.d	$a0, $s3, 0
	ld.d	$a1, $sp, 32
	st.d	$a1, $s3, 16
.LBB68_22:                              # %._crit_edge.i.i.i31
	beq	$a1, $s5, .LBB68_57
# %bb.23:                               # %._crit_edge.i.i.i31
	bnez	$a1, .LBB68_56
# %bb.24:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB68_57
.LBB68_25:
.Ltmp1776:
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1777:
# %bb.26:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
	ld.d	$a0, $sp, 0
	beq	$a0, $s6, .LBB68_28
.LBB68_27:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB68_28:
	ld.d	$s3, $fp, 8
	ld.d	$a0, $fp, 16
	beq	$s3, $a0, .LBB68_34
# %bb.29:
	addi.d	$a0, $s3, 16
	st.d	$a0, $s3, 0
	ld.d	$a1, $s1, 8
	ld.d	$s4, $s1, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a2, .LBB68_31
# %bb.30:                               # %.noexc.i.i39
	addi.d	$a1, $sp, 0
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s3, 0
	ld.d	$a1, $sp, 0
	st.d	$a1, $s3, 16
.LBB68_31:                              # %._crit_edge.i.i.i37
	beq	$a1, $s5, .LBB68_36
# %bb.32:                               # %._crit_edge.i.i.i37
	bnez	$a1, .LBB68_35
# %bb.33:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB68_36
.LBB68_34:
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB68_37
.LBB68_35:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB68_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i38
	ld.d	$a0, $sp, 0
	st.d	$a0, $s3, 8
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
.LBB68_37:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit40
	ld.w	$a0, $s1, 8
	ld.d	$a3, $s0, 8
	add.w	$s2, $a0, $s2
	sub.w	$a0, $a3, $s2
	ori	$s1, $zero, 1
	blez	$a0, .LBB68_55
# %bb.38:
	bltu	$a3, $s2, .LBB68_60
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i.i
	addi.d	$s3, $sp, 16
	st.d	$s3, $sp, 0
	ld.d	$s4, $s0, 0
	sub.d	$a1, $a3, $s2
	sltu	$a2, $a0, $a1
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$s0, $a0, $a1
	ori	$a1, $zero, 16
	st.d	$s0, $sp, 32
	move	$a0, $s3
	bltu	$s0, $a1, .LBB68_41
# %bb.40:                               # %.noexc10.i.i43
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB68_41:                              # %._crit_edge.i.i.i42
	beqz	$s0, .LBB68_45
# %bb.42:                               # %._crit_edge.i.i.i42
	ori	$a2, $zero, 1
	add.d	$a1, $s4, $s2
	bne	$s0, $a2, .LBB68_44
# %bb.43:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB68_45
.LBB68_44:
	move	$a2, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB68_45:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit44
	ld.d	$a0, $sp, 32
	ld.d	$a1, $sp, 0
	st.d	$a0, $sp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$s0, $fp, 8
	ld.d	$a0, $fp, 16
	beq	$s0, $a0, .LBB68_52
# %bb.46:
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 8
	ld.d	$s2, $sp, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 32
	bltu	$a1, $a2, .LBB68_49
# %bb.47:                               # %.noexc.i.i48
.Ltmp1779:
	addi.d	$a1, $sp, 32
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1780:
# %bb.48:                               # %.noexc49
	st.d	$a0, $s0, 0
	ld.d	$a1, $sp, 32
	st.d	$a1, $s0, 16
.LBB68_49:                              # %._crit_edge.i.i.i46
	beq	$a1, $s5, .LBB68_59
# %bb.50:                               # %._crit_edge.i.i.i46
	bnez	$a1, .LBB68_58
# %bb.51:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB68_59
.LBB68_52:
.Ltmp1781:
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1782:
# %bb.53:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit51
	ld.d	$a0, $sp, 0
	beq	$a0, $s3, .LBB68_55
.LBB68_54:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i52
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB68_55:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.thread
	move	$a0, $s1
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.LBB68_56:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB68_57:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	ld.d	$a0, $sp, 32
	st.d	$a0, $s3, 8
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
	ld.d	$a0, $sp, 0
	bne	$a0, $s6, .LBB68_27
	b	.LBB68_28
.LBB68_58:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB68_59:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i47
	ld.d	$a0, $sp, 32
	st.d	$a0, $s0, 8
	ld.d	$a0, $fp, 8
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 8
	ld.d	$a0, $sp, 0
	bne	$a0, $s3, .LBB68_54
	b	.LBB68_55
.LBB68_60:
	pcalau12i	$a0, %pc_hi20(.L.str.222)
	addi.d	$a0, $a0, %pc_lo12(.L.str.222)
	pcalau12i	$a1, %pc_hi20(.L.str.221)
	addi.d	$a1, $a1, %pc_lo12(.L.str.221)
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZSt24__throw_out_of_range_fmtPKcz)
	jirl	$ra, $ra, 0
.LBB68_61:
.Ltmp1783:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	bne	$a2, $s3, .LBB68_63
	b	.LBB68_64
.LBB68_62:
.Ltmp1778:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s6, .LBB68_64
.LBB68_63:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i55
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB68_64:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end68:
	.size	_ZN2PP3Cmd12separate_strERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RSt6vectorIS6_SaIS6_EE, .Lfunc_end68-_ZN2PP3Cmd12separate_strERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RSt6vectorIS6_SaIS6_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table68:
.Lexception37:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Lfunc_begin37-.Lfunc_begin37  # >> Call Site 1 <<
	.uleb128 .Ltmp1774-.Lfunc_begin37       #   Call between .Lfunc_begin37 and .Ltmp1774
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1774-.Lfunc_begin37       # >> Call Site 2 <<
	.uleb128 .Ltmp1777-.Ltmp1774            #   Call between .Ltmp1774 and .Ltmp1777
	.uleb128 .Ltmp1778-.Lfunc_begin37       #     jumps to .Ltmp1778
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1777-.Lfunc_begin37       # >> Call Site 3 <<
	.uleb128 .Ltmp1779-.Ltmp1777            #   Call between .Ltmp1777 and .Ltmp1779
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1779-.Lfunc_begin37       # >> Call Site 4 <<
	.uleb128 .Ltmp1782-.Ltmp1779            #   Call between .Ltmp1779 and .Ltmp1782
	.uleb128 .Ltmp1783-.Lfunc_begin37       #     jumps to .Ltmp1783
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1782-.Lfunc_begin37       # >> Call Site 5 <<
	.uleb128 .Lfunc_end68-.Ltmp1782         #   Call between .Ltmp1782 and .Lfunc_end68
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end37:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd13replace_wordsEiiRSt6vectorINS_4WordESaIS2_EE # -- Begin function _ZN2PP3Cmd13replace_wordsEiiRSt6vectorINS_4WordESaIS2_EE
	.p2align	5
	.type	_ZN2PP3Cmd13replace_wordsEiiRSt6vectorINS_4WordESaIS2_EE,@function
_ZN2PP3Cmd13replace_wordsEiiRSt6vectorINS_4WordESaIS2_EE: # @_ZN2PP3Cmd13replace_wordsEiiRSt6vectorINS_4WordESaIS2_EE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a3
	move	$s0, $a1
	move	$s1, $a0
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 8
	ld.d	$a1, $fp, 0
	sub.d	$a0, $a0, $a1
	srai.d	$a0, $a0, 7
	addi.w	$a1, $a0, 0
	blez	$a1, .LBB69_9
# %bb.1:                                # %.lr.ph
	addi.d	$s2, $s1, 160
	bstrpick.d	$a0, $a0, 30, 0
	addi.d	$s3, $a0, 1
	slli.d	$a0, $a0, 7
	addi.d	$s4, $a0, -128
	ori	$s5, $zero, 3
	slli.d	$s6, $s0, 7
	ori	$s7, $zero, 1
	b	.LBB69_5
	.p2align	4, , 16
.LBB69_2:                               #   in Loop: Header=BB69_5 Depth=1
	srai.d	$a4, $a3, 2
.LBB69_3:                               #   in Loop: Header=BB69_5 Depth=1
	slli.d	$a1, $a4, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a4, $a0, 3
	addi.d	$a2, $a1, 512
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
.LBB69_4:                               # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
                                        #   in Loop: Header=BB69_5 Depth=1
	st.d	$a3, $sp, 32
	ld.d	$a3, $fp, 0
	st.d	$a1, $sp, 40
	st.d	$a2, $sp, 48
	st.d	$a0, $sp, 56
	add.d	$a3, $a3, $s4
	addi.d	$a0, $sp, 0
	addi.d	$a2, $sp, 32
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, -1
	addi.d	$s4, $s4, -128
	bgeu	$s7, $s3, .LBB69_9
.LBB69_5:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a4, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a2, $a4, $a1
	srai.d	$a2, $a2, 7
	add.d	$a3, $a2, $s0
	bltz	$a3, .LBB69_2
# %bb.6:                                #   in Loop: Header=BB69_5 Depth=1
	bltu	$s5, $a3, .LBB69_8
# %bb.7:                                #   in Loop: Header=BB69_5 Depth=1
	ld.d	$a2, $s1, 192
	add.d	$a3, $a4, $s6
	b	.LBB69_4
	.p2align	4, , 16
.LBB69_8:                               #   in Loop: Header=BB69_5 Depth=1
	srli.d	$a4, $a3, 2
	b	.LBB69_3
.LBB69_9:                               # %._crit_edge
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.Lfunc_end69:
	.size	_ZN2PP3Cmd13replace_wordsEiiRSt6vectorINS_4WordESaIS2_EE, .Lfunc_end69-_ZN2PP3Cmd13replace_wordsEiiRSt6vectorINS_4WordESaIS2_EE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd20check_misplaced_mathERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd20check_misplaced_mathERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd20check_misplaced_mathERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd20check_misplaced_mathERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd20check_misplaced_mathERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	move	$s6, $zero
	move	$s7, $zero
	addi.d	$s2, $a1, 16
	addi.d	$s8, $a1, 256
	ori	$a6, $zero, 5
	pcalau12i	$a0, %pc_hi20(.L.str.132)
	addi.d	$s3, $a0, %pc_lo12(.L.str.132)
	pcalau12i	$a0, %pc_hi20(.L.str.133)
	addi.d	$s4, $a0, %pc_lo12(.L.str.133)
	b	.LBB70_4
.LBB70_1:                               #   in Loop: Header=BB70_4 Depth=1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.LBB70_2:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit15
                                        #   in Loop: Header=BB70_4 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
	ori	$a6, $zero, 5
.LBB70_3:                               #   in Loop: Header=BB70_4 Depth=1
	addi.d	$s7, $s7, 1
	addi.d	$s6, $s6, 128
.LBB70_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s1, 232
	ld.d	$a0, $s1, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s1, 208
	ld.d	$a4, $s1, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s1, 192
	ld.d	$a1, $s1, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s7, $a2, .LBB70_24
# %bb.5:                                #   in Loop: Header=BB70_4 Depth=1
	ld.d	$a2, $s1, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s7, $a2
	bltz	$a2, .LBB70_8
# %bb.6:                                #   in Loop: Header=BB70_4 Depth=1
	ori	$a3, $zero, 4
	bgeu	$a2, $a3, .LBB70_9
# %bb.7:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit.thread
                                        #   in Loop: Header=BB70_4 Depth=1
	add.d	$a0, $a1, $s6
	ld.w	$a0, $a0, 32
	bne	$a0, $a6, .LBB70_3
	b	.LBB70_13
	.p2align	4, , 16
.LBB70_8:                               #   in Loop: Header=BB70_4 Depth=1
	srai.d	$a3, $a2, 2
	b	.LBB70_10
	.p2align	4, , 16
.LBB70_9:                               #   in Loop: Header=BB70_4 Depth=1
	srli.d	$a3, $a2, 2
.LBB70_10:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB70_4 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a0, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	ld.w	$a3, $a3, 32
	bne	$a3, $a6, .LBB70_3
# %bb.11:                               #   in Loop: Header=BB70_4 Depth=1
	bltz	$a2, .LBB70_14
# %bb.12:                               #   in Loop: Header=BB70_4 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB70_15
.LBB70_13:                              # %.thread17
                                        #   in Loop: Header=BB70_4 Depth=1
	add.d	$a0, $a1, $s6
	b	.LBB70_17
.LBB70_14:                              #   in Loop: Header=BB70_4 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB70_16
.LBB70_15:                              #   in Loop: Header=BB70_4 Depth=1
	srli.d	$a1, $a2, 2
.LBB70_16:                              #   in Loop: Header=BB70_4 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB70_17:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit10
                                        #   in Loop: Header=BB70_4 Depth=1
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 25
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	ld.d	$a0, $a0, -24
	ldx.d	$s5, $s8, $a0
	beqz	$s5, .LBB70_25
# %bb.18:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB70_4 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB70_20
# %bb.19:                               #   in Loop: Header=BB70_4 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB70_21
.LBB70_20:                              #   in Loop: Header=BB70_4 Depth=1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.LBB70_21:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
                                        #   in Loop: Header=BB70_4 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a2, $zero, 47
	move	$a0, $s2
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	ldx.d	$s5, $s8, $a0
	beqz	$s5, .LBB70_25
# %bb.22:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i12
                                        #   in Loop: Header=BB70_4 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB70_1
# %bb.23:                               #   in Loop: Header=BB70_4 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB70_2
.LBB70_24:
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB70_25:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Lfunc_end70:
	.size	_ZN2PP3Cmd20check_misplaced_mathERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end70-_ZN2PP3Cmd20check_misplaced_mathERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd9handle_ifERbRSt5dequeIbSaIbEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd9handle_ifERbRSt5dequeIbSaIbEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd9handle_ifERbRSt5dequeIbSaIbEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd9handle_ifERbRSt5dequeIbSaIbEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd9handle_ifERbRSt5dequeIbSaIbEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception38
# %bb.0:
	addi.d	$sp, $sp, -208
	.cfi_def_cfa_offset 208
	st.d	$ra, $sp, 200                   # 8-byte Folded Spill
	st.d	$fp, $sp, 192                   # 8-byte Folded Spill
	st.d	$s0, $sp, 184                   # 8-byte Folded Spill
	st.d	$s1, $sp, 176                   # 8-byte Folded Spill
	st.d	$s2, $sp, 168                   # 8-byte Folded Spill
	st.d	$s3, $sp, 160                   # 8-byte Folded Spill
	st.d	$s4, $sp, 152                   # 8-byte Folded Spill
	st.d	$s5, $sp, 144                   # 8-byte Folded Spill
	st.d	$s6, $sp, 136                   # 8-byte Folded Spill
	st.d	$s7, $sp, 128                   # 8-byte Folded Spill
	st.d	$s8, $sp, 120                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s4, $a0
	ld.d	$t2, $a2, 72
	ld.d	$a6, $a2, 40
	ld.d	$t1, $a0, 176
	ld.d	$a7, $a0, 184
	st.d	$a4, $sp, 24                    # 8-byte Folded Spill
	move	$s1, $a3
	ld.d	$t0, $a0, 200
	sub.d	$a6, $t2, $a6
	sub.d	$a7, $t1, $a7
	srai.d	$a4, $a7, 7
	bltz	$a7, .LBB71_3
# %bb.1:
	ori	$a7, $zero, 4
	bltu	$a4, $a7, .LBB71_5
# %bb.2:
	srli.d	$a7, $a4, 2
	b	.LBB71_4
.LBB71_3:
	srai.d	$a7, $a7, 9
.LBB71_4:
	slli.d	$t1, $a7, 3
	ldx.d	$t0, $t0, $t1
	slli.d	$a7, $a7, 2
	sub.d	$a4, $a4, $a7
	slli.d	$a4, $a4, 7
	add.d	$t1, $t0, $a4
.LBB71_5:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	st.d	$a5, $sp, 32                    # 8-byte Folded Spill
	st.d	$a1, $sp, 40                    # 8-byte Folded Spill
	srli.d	$s8, $a6, 3
	ld.d	$s3, $a2, 48
	ld.d	$s0, $a2, 56
	ld.d	$s2, $a2, 32
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	ld.d	$s6, $a2, 16
	addi.d	$s7, $sp, 104
	st.d	$s7, $sp, 88
	ld.d	$a1, $t1, 8
	ld.d	$s5, $t1, 0
	sltu	$fp, $zero, $t2
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 56
	move	$a0, $s7
	bltu	$a1, $a2, .LBB71_7
# %bb.6:                                # %.noexc.i.i
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB71_7:                               # %._crit_edge.i.i.i
	sub.d	$s8, $s8, $fp
	addi.w	$a2, $zero, -1
	sub.d	$fp, $s3, $s0
	move	$s3, $a2
	beq	$a1, $a2, .LBB71_11
# %bb.8:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB71_10
# %bb.9:
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB71_11
.LBB71_10:
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB71_11:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	slli.d	$s0, $s8, 9
	ld.d	$a0, $sp, 56
	ld.d	$s5, $sp, 88
	add.d	$fp, $fp, $s2
	ori	$a1, $zero, 5
	st.d	$a0, $sp, 96
	bne	$a0, $a1, .LBB71_13
# %bb.12:
	pcalau12i	$a0, %pc_hi20(.L.str.15)
	addi.d	$a1, $a0, %pc_lo12(.L.str.15)
	ori	$a2, $zero, 5
	move	$a0, $s5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s2, $a0, 1
	move	$s8, $s1
	add.d	$fp, $fp, $s0
	bne	$s5, $s7, .LBB71_14
	b	.LBB71_15
.LBB71_13:
	move	$s2, $zero
	move	$s8, $s1
	add.d	$fp, $fp, $s0
	beq	$s5, $s7, .LBB71_15
.LBB71_14:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 104
	addi.d	$a1, $a0, 1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	sub.d	$s6, $fp, $s6
	beqz	$s2, .LBB71_20
# %bb.16:
	ld.d	$a1, $s4, 232
	ld.d	$a0, $s4, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s4, 208
	ld.d	$a4, $s4, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s4, 192
	ld.d	$a1, $s4, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	ori	$a3, $zero, 2
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	blt	$a2, $a3, .LBB71_88
# %bb.17:
	ld.d	$a2, $s4, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s3, .LBB71_53
# %bb.18:
	ori	$a3, $zero, 3
	ld.d	$s0, $sp, 32                    # 8-byte Folded Reload
	bltu	$a3, $a2, .LBB71_77
# %bb.19:
	addi.d	$a0, $a1, 128
	b	.LBB71_79
.LBB71_20:
	move	$s2, $s4
	ld.d	$a2, $s4, 176
	ld.d	$a1, $s4, 184
	ld.d	$a0, $s4, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB71_23
# %bb.21:
	ori	$a3, $zero, 4
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	bltu	$a1, $a3, .LBB71_25
# %bb.22:
	srli.d	$a2, $a1, 2
	b	.LBB71_24
.LBB71_23:
	srai.d	$a2, $a3, 9
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
.LBB71_24:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB71_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit131
	addi.d	$s7, $sp, 104
	st.d	$s7, $sp, 88
	ld.d	$a1, $a2, 8
	ld.d	$s5, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 56
	move	$a0, $s7
	bltu	$a1, $a2, .LBB71_27
# %bb.26:                               # %.noexc.i.i133
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB71_27:                              # %._crit_edge.i.i.i132
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	beq	$a1, $s3, .LBB71_31
# %bb.28:                               # %._crit_edge.i.i.i132
	bnez	$a1, .LBB71_30
# %bb.29:
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB71_31
.LBB71_30:
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB71_31:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit134
	ld.d	$a1, $sp, 56
	ld.d	$a0, $sp, 88
	ori	$a2, $zero, 4
	st.d	$a1, $sp, 96
	bne	$a1, $a2, .LBB71_33
# %bb.32:
	ld.w	$a1, $a0, 0
	lu12i.w	$a2, 415542
	ori	$a2, $a2, 3173
	xor	$a1, $a1, $a2
	sltui	$fp, $a1, 1
	bne	$a0, $s7, .LBB71_34
	b	.LBB71_35
.LBB71_33:
	move	$fp, $zero
	beq	$a0, $s7, .LBB71_35
.LBB71_34:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i137
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_35:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit139
	beqz	$fp, .LBB71_40
# %bb.36:
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	ori	$a3, $zero, 2
	blt	$a2, $a3, .LBB71_144
# %bb.37:
	ld.d	$a2, $s2, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s3, .LBB71_111
# %bb.38:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB71_133
# %bb.39:
	addi.d	$a0, $a1, 128
	b	.LBB71_135
.LBB71_40:
	addi.w	$a0, $s6, 0
	st.b	$zero, $s0, 0
	ld.d	$a2, $sp, 48                    # 8-byte Folded Reload
	blez	$a0, .LBB71_50
# %bb.41:                               # %.lr.ph
	ld.d	$a0, $a2, 16
	ld.d	$a3, $a2, 24
	move	$a1, $zero
	ld.d	$a2, $a2, 40
	sub.d	$a3, $a0, $a3
	bstrpick.d	$a4, $s6, 30, 0
	ori	$a5, $zero, 511
	ori	$a6, $zero, 1
	b	.LBB71_44
	.p2align	4, , 16
.LBB71_42:                              #   in Loop: Header=BB71_44 Depth=1
	st.b	$a6, $s0, 0
.LBB71_43:                              #   in Loop: Header=BB71_44 Depth=1
	addi.d	$a1, $a1, 1
	addi.d	$a4, $a4, -1
	addi.d	$a3, $a3, 1
	beqz	$a4, .LBB71_50
.LBB71_44:                              # =>This Inner Loop Header: Depth=1
	bltz	$a3, .LBB71_47
# %bb.45:                               #   in Loop: Header=BB71_44 Depth=1
	bltu	$a5, $a3, .LBB71_48
# %bb.46:                               #   in Loop: Header=BB71_44 Depth=1
	add.d	$a7, $a0, $a1
	ld.bu	$a7, $a7, 0
	beqz	$a7, .LBB71_43
	b	.LBB71_42
	.p2align	4, , 16
.LBB71_47:                              #   in Loop: Header=BB71_44 Depth=1
	srai.d	$a7, $a3, 9
	b	.LBB71_49
	.p2align	4, , 16
.LBB71_48:                              #   in Loop: Header=BB71_44 Depth=1
	srli.d	$a7, $a3, 9
.LBB71_49:                              #   in Loop: Header=BB71_44 Depth=1
	slli.d	$t0, $a7, 3
	ldx.d	$t0, $a2, $t0
	slli.d	$a7, $a7, 9
	sub.d	$a7, $t0, $a7
	add.d	$a7, $a7, $a3
	ld.bu	$a7, $a7, 0
	beqz	$a7, .LBB71_43
	b	.LBB71_42
.LBB71_50:                              # %._crit_edge
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB71_54
# %bb.51:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB71_56
# %bb.52:
	srli.d	$a2, $a1, 2
	b	.LBB71_55
.LBB71_53:
	srai.d	$a1, $a2, 2
	ld.d	$s0, $sp, 32                    # 8-byte Folded Reload
	b	.LBB71_78
.LBB71_54:
	srai.d	$a2, $a3, 9
.LBB71_55:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB71_56:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit154
	addi.d	$s7, $sp, 104
	st.d	$s7, $sp, 88
	ld.d	$a1, $a2, 8
	ld.d	$s5, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 56
	move	$a0, $s7
	bltu	$a1, $a2, .LBB71_58
# %bb.57:                               # %.noexc.i.i156
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB71_58:                              # %._crit_edge.i.i.i155
	beq	$a1, $s3, .LBB71_62
# %bb.59:                               # %._crit_edge.i.i.i155
	bnez	$a1, .LBB71_61
# %bb.60:
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB71_62
.LBB71_61:
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB71_62:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit157
	ld.d	$a0, $sp, 56
	ld.d	$s5, $sp, 88
	ori	$a1, $zero, 6
	st.d	$a0, $sp, 96
	bne	$a0, $a1, .LBB71_64
# %bb.63:
	pcalau12i	$a0, %pc_hi20(.L.str.14)
	addi.d	$a1, $a0, %pc_lo12(.L.str.14)
	ori	$a2, $zero, 6
	move	$a0, $s5
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$fp, $a0, 1
	bne	$s5, $s7, .LBB71_65
	b	.LBB71_66
.LBB71_64:
	move	$fp, $zero
	beq	$s5, $s7, .LBB71_66
.LBB71_65:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i162
	ld.d	$a0, $sp, 104
	addi.d	$a1, $a0, 1
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_66:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit164
	addi.d	$s7, $s2, 160
	beqz	$fp, .LBB71_74
# %bb.67:
	slli.d	$a0, $s6, 32
	ori	$a1, $zero, 0
	lu32i.d	$a1, -1
	ld.d	$a2, $s8, 16
	ld.d	$a3, $s8, 24
	add.d	$a0, $a0, $a1
	srai.d	$s4, $a0, 32
	ld.d	$a0, $s8, 40
	sub.d	$a1, $a2, $a3
	add.d	$a1, $a1, $s4
	bltz	$a1, .LBB71_112
# %bb.68:
	ori	$a3, $zero, 511
	ld.d	$a4, $sp, 48                    # 8-byte Folded Reload
	bltu	$a3, $a1, .LBB71_128
# %bb.69:
	add.d	$a0, $a2, $s4
	ld.bu	$a0, $a0, 0
	bnez	$a0, .LBB71_130
.LBB71_70:
	ld.bu	$a0, $s0, 0
	beqz	$a0, .LBB71_176
# %bb.71:
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a2, $a0, 16
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a1
	add.d	$a1, $a1, $s4
	bltz	$a1, .LBB71_172
# %bb.72:
	ori	$a3, $zero, 511
	bltu	$a3, $a1, .LBB71_173
# %bb.73:
	add.d	$a0, $a2, $s4
	b	.LBB71_175
.LBB71_74:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB71_113
# %bb.75:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB71_115
# %bb.76:
	srli.d	$a2, $a1, 2
	b	.LBB71_114
.LBB71_77:
	srli.d	$a1, $a2, 2
.LBB71_78:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB71_79:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit122
	ld.d	$s1, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $s1
	move	$a2, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s4, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.134)
	addi.d	$a1, $a0, %pc_lo12(.L.str.134)
	ori	$a2, $zero, 74
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB71_320
# %bb.80:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB71_82
# %bb.81:
	ld.bu	$a0, $s3, 67
	b	.LBB71_83
.LBB71_82:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB71_83:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.135)
	addi.d	$a1, $a0, %pc_lo12(.L.str.135)
	ori	$a2, $zero, 30
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB71_320
# %bb.84:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i310
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB71_86
# %bb.85:
	ld.bu	$a0, $s3, 67
	b	.LBB71_87
.LBB71_86:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB71_87:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit313
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $s0, 0
.LBB71_88:
	ld.d	$a3, $fp, 16
	ld.d	$a1, $fp, 24
	ld.d	$a0, $fp, 40
	addi.w	$s2, $s6, 0
	sub.d	$a2, $a3, $a1
	add.d	$a2, $a2, $s2
	bltz	$a2, .LBB71_92
# %bb.89:
	ori	$a4, $zero, 511
	bltu	$a4, $a2, .LBB71_93
# %bb.90:
	add.d	$a2, $a3, $s2
	nor	$a1, $a1, $zero
	add.d	$a1, $a2, $a1
	bgez	$a1, .LBB71_95
.LBB71_91:
	srai.d	$a2, $a1, 9
	b	.LBB71_98
.LBB71_92:
	srai.d	$a3, $a2, 9
	b	.LBB71_94
.LBB71_93:
	srli.d	$a3, $a2, 9
.LBB71_94:
	slli.d	$a1, $a3, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a3, $a0, 3
	slli.d	$a3, $a3, 9
	sub.d	$a2, $a2, $a3
	add.d	$a2, $a1, $a2
	nor	$a1, $a1, $zero
	add.d	$a1, $a2, $a1
	bltz	$a1, .LBB71_91
.LBB71_95:
	ori	$a3, $zero, 511
	bltu	$a3, $a1, .LBB71_97
# %bb.96:
	ld.d	$a3, $a0, 0
	addi.d	$a1, $a2, -1
	b	.LBB71_99
.LBB71_97:
	srli.d	$a2, $a1, 9
.LBB71_98:
	slli.d	$a3, $a2, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a2, $a0, 3
	slli.d	$a2, $a2, 9
	sub.d	$a1, $a1, $a2
	add.d	$a1, $a3, $a1
.LBB71_99:                              # %_ZStmiRKSt15_Deque_iteratorIbRbPbEl.exit
	st.d	$a1, $sp, 88
	st.d	$a3, $sp, 96
	addi.d	$a1, $a3, 512
	st.d	$a1, $sp, 104
	st.d	$a0, $sp, 112
	addi.d	$a0, $sp, 56
	addi.d	$a2, $sp, 88
	move	$a1, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE)
	jirl	$ra, $ra, 0
	ld.d	$a3, $s8, 16
	ld.d	$a1, $s8, 24
	ld.d	$a0, $s8, 40
	sub.d	$a2, $a3, $a1
	add.d	$a2, $a2, $s2
	bltz	$a2, .LBB71_103
# %bb.100:
	ori	$a4, $zero, 511
	bltu	$a4, $a2, .LBB71_104
# %bb.101:
	add.d	$a2, $a3, $s2
	ld.d	$s1, $sp, 40                    # 8-byte Folded Reload
	nor	$a1, $a1, $zero
	add.d	$a1, $a2, $a1
	bgez	$a1, .LBB71_106
.LBB71_102:
	srai.d	$a2, $a1, 9
	b	.LBB71_109
.LBB71_103:
	srai.d	$a3, $a2, 9
	b	.LBB71_105
.LBB71_104:
	srli.d	$a3, $a2, 9
.LBB71_105:
	slli.d	$a1, $a3, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a3, $a0, 3
	slli.d	$a3, $a3, 9
	sub.d	$a2, $a2, $a3
	add.d	$a2, $a1, $a2
	ld.d	$s1, $sp, 40                    # 8-byte Folded Reload
	nor	$a1, $a1, $zero
	add.d	$a1, $a2, $a1
	bltz	$a1, .LBB71_102
.LBB71_106:
	ori	$a3, $zero, 511
	bltu	$a3, $a1, .LBB71_108
# %bb.107:
	ld.d	$a3, $a0, 0
	addi.d	$a1, $a2, -1
	b	.LBB71_110
.LBB71_108:
	srli.d	$a2, $a1, 9
.LBB71_109:
	slli.d	$a3, $a2, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a2, $a0, 3
	slli.d	$a2, $a2, 9
	sub.d	$a1, $a1, $a2
	add.d	$a1, $a3, $a1
.LBB71_110:                             # %_ZStmiRKSt15_Deque_iteratorIbRbPbEl.exit129
	st.d	$a1, $sp, 88
	st.d	$a3, $sp, 96
	addi.d	$a1, $a3, 512
	st.d	$a1, $sp, 104
	st.d	$a0, $sp, 112
	addi.d	$a0, $sp, 56
	addi.d	$a2, $sp, 88
	move	$a1, $s8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 1
	st.b	$a0, $s1, 0
	b	.LBB71_271
.LBB71_111:
	srai.d	$a1, $a2, 2
	b	.LBB71_134
.LBB71_112:
	srai.d	$a2, $a1, 9
	ld.d	$a4, $sp, 48                    # 8-byte Folded Reload
	b	.LBB71_129
.LBB71_113:
	srai.d	$a2, $a3, 9
.LBB71_114:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB71_115:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit253
	addi.d	$s5, $sp, 104
	st.d	$s5, $sp, 88
	ld.d	$a1, $a2, 8
	ld.d	$s6, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 56
	move	$a0, $s5
	bltu	$a1, $a2, .LBB71_117
# %bb.116:                              # %.noexc.i.i255
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB71_117:                             # %._crit_edge.i.i.i254
	beq	$a1, $s3, .LBB71_121
# %bb.118:                              # %._crit_edge.i.i.i254
	bnez	$a1, .LBB71_120
# %bb.119:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB71_121
.LBB71_120:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB71_121:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit256
	ld.d	$a1, $sp, 56
	ld.d	$a0, $sp, 88
	ori	$a2, $zero, 2
	st.d	$a1, $sp, 96
	bne	$a1, $a2, .LBB71_123
# %bb.122:
	ld.hu	$a1, $a0, 0
	lu12i.w	$a2, 6
	ori	$a2, $a2, 1641
	xor	$a1, $a1, $a2
	sltui	$fp, $a1, 1
	bne	$a0, $s5, .LBB71_124
	b	.LBB71_125
.LBB71_123:
	move	$fp, $zero
	beq	$a0, $s5, .LBB71_125
.LBB71_124:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i259
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_125:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit261
	beqz	$fp, .LBB71_271
# %bb.126:
	ld.bu	$a0, $s0, 0
	beqz	$a0, .LBB71_164
# %bb.127:
	ori	$fp, $zero, 1
	st.b	$fp, $sp, 88
	addi.d	$a1, $sp, 88
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_)
	jirl	$ra, $ra, 0
	st.b	$fp, $sp, 88
	addi.d	$a1, $sp, 88
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB71_271
.LBB71_128:
	srli.d	$a2, $a1, 9
.LBB71_129:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 9
	sub.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB71_70
.LBB71_130:
	ld.d	$a2, $a4, 16
	ld.d	$a1, $a4, 24
	ld.d	$a0, $a4, 40
	sub.d	$a1, $a2, $a1
	add.d	$a1, $a1, $s4
	bltz	$a1, .LBB71_266
# %bb.131:
	ori	$a3, $zero, 511
	bltu	$a3, $a1, .LBB71_267
# %bb.132:
	add.d	$a0, $a2, $s4
	b	.LBB71_269
.LBB71_133:
	srli.d	$a1, $a2, 2
.LBB71_134:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB71_135:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit142
	ld.d	$fp, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s4, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.137)
	addi.d	$a1, $a0, %pc_lo12(.L.str.137)
	ori	$a2, $zero, 61
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB71_320
# %bb.136:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i315
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB71_138
# %bb.137:
	ld.bu	$a0, $s3, 67
	b	.LBB71_139
.LBB71_138:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB71_139:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit318
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.135)
	addi.d	$a1, $a0, %pc_lo12(.L.str.135)
	ori	$a2, $zero, 30
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB71_320
# %bb.140:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i320
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB71_142
# %bb.141:
	ld.bu	$a0, $s3, 67
	b	.LBB71_143
.LBB71_142:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB71_143:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit323
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $s1, 0
.LBB71_144:
	slli.d	$a0, $s6, 32
	ori	$a1, $zero, 0
	lu32i.d	$a1, -1
	ld.d	$a2, $s8, 16
	ld.d	$a4, $s8, 24
	add.d	$a0, $a0, $a1
	srai.d	$a0, $a0, 32
	ld.d	$a3, $s8, 40
	sub.d	$a1, $a2, $a4
	add.d	$a1, $a1, $a0
	ld.d	$a5, $sp, 48                    # 8-byte Folded Reload
	bltz	$a1, .LBB71_148
# %bb.145:
	ori	$a4, $zero, 512
	bgeu	$a1, $a4, .LBB71_149
# %bb.146:                              # %_ZNSt5dequeIbSaIbEEixEm.exit.thread
	ldx.bu	$a1, $a2, $a0
	bnez	$a1, .LBB71_151
# %bb.147:
	add.d	$a1, $a2, $a0
	b	.LBB71_155
.LBB71_148:                             # %_ZNSt5dequeIbSaIbEEixEm.exit.thread353
	srai.d	$a2, $a1, 9
	b	.LBB71_150
.LBB71_149:                             # %_ZNSt5dequeIbSaIbEEixEm.exit
	srli.d	$a2, $a1, 9
.LBB71_150:                             # %_ZNSt5dequeIbSaIbEEixEm.exit
	slli.d	$a4, $a2, 3
	ldx.d	$a3, $a3, $a4
	andi	$a4, $a1, 511
	ldx.bu	$a4, $a3, $a4
	beqz	$a4, .LBB71_154
.LBB71_151:
	ld.d	$a3, $a5, 16
	ld.d	$a2, $a5, 24
	ld.d	$a1, $a5, 40
	sub.d	$a2, $a3, $a2
	add.d	$a2, $a2, $a0
	bltz	$a2, .LBB71_158
# %bb.152:
	ori	$a4, $zero, 511
	bltu	$a4, $a2, .LBB71_160
# %bb.153:
	add.d	$a0, $a3, $a0
	b	.LBB71_269
.LBB71_154:                             # %.thread354
	slli.d	$a2, $a2, 9
	sub.d	$a1, $a1, $a2
	add.d	$a1, $a3, $a1
.LBB71_155:                             # %_ZNSt5dequeIbSaIbEEixEm.exit150
	ori	$a2, $zero, 1
	st.b	$a2, $a1, 0
	ld.d	$a3, $a5, 16
	ld.d	$a2, $a5, 24
	ld.d	$a1, $a5, 40
	sub.d	$a2, $a3, $a2
	add.d	$a2, $a2, $a0
	bltz	$a2, .LBB71_159
# %bb.156:
	ori	$a4, $zero, 511
	bltu	$a4, $a2, .LBB71_162
# %bb.157:
	add.d	$a0, $a3, $a0
	st.b	$zero, $a0, 0
	b	.LBB71_270
.LBB71_158:
	srai.d	$a0, $a2, 9
	b	.LBB71_161
.LBB71_159:
	srai.d	$a0, $a2, 9
	b	.LBB71_163
.LBB71_160:
	srli.d	$a0, $a2, 9
.LBB71_161:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 9
	sub.d	$a0, $a2, $a0
	add.d	$a0, $a1, $a0
	b	.LBB71_269
.LBB71_162:
	srli.d	$a0, $a2, 9
.LBB71_163:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 9
	sub.d	$a0, $a2, $a0
	add.d	$a0, $a1, $a0
	st.b	$zero, $a0, 0
	b	.LBB71_270
.LBB71_164:
	ld.d	$a0, $s2, 232
	ld.d	$a1, $s2, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s2, 208
	ld.d	$a3, $s2, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s2, 192
	ld.d	$a4, $s2, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.w	$a0, $a0, $a1
	ori	$a1, $zero, 2
	blt	$a0, $a1, .LBB71_292
# %bb.165:
	ori	$a1, $zero, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1784:
	pcalau12i	$a0, %pc_hi20(.L.str.42)
	addi.d	$a1, $a0, %pc_lo12(.L.str.42)
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1785:
# %bb.166:
	move	$s6, $a0
	ld.d	$a0, $sp, 88
	addi.d	$s5, $sp, 104
	beq	$a0, $s5, .LBB71_168
# %bb.167:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i266
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_168:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit268
	beqz	$s6, .LBB71_292
# %bb.169:
	ori	$a1, $zero, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	ld.d	$fp, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s6, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.138)
	addi.d	$a1, $a0, %pc_lo12(.L.str.138)
	ori	$a2, $zero, 43
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 176
	ld.d	$a2, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB71_281
# %bb.170:
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB71_283
# %bb.171:
	srli.d	$a1, $a2, 2
	b	.LBB71_282
.LBB71_172:
	srai.d	$a2, $a1, 9
	b	.LBB71_174
.LBB71_173:
	srli.d	$a2, $a1, 9
.LBB71_174:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 9
	sub.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB71_175:                             # %_ZNSt5dequeIbSaIbEEixEm.exit173
	ld.bu	$a0, $a0, 0
	beqz	$a0, .LBB71_271
.LBB71_176:
	ld.d	$a1, $s2, 232
	ld.d	$a0, $s2, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s2, 208
	ld.d	$a4, $s2, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s2, 192
	ld.d	$a1, $s2, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	st.d	$a2, $sp, 16                    # 8-byte Folded Spill
	addi.w	$a2, $a2, 0
	ori	$a3, $zero, 2
	st.d	$s7, $sp, 40                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	blt	$a2, $a3, .LBB71_180
# %bb.177:
	ld.d	$a2, $s2, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s3, .LBB71_181
# %bb.178:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB71_182
# %bb.179:
	addi.d	$a0, $a1, 128
	b	.LBB71_184
.LBB71_180:
	ori	$a0, $zero, 1
	beq	$a2, $a0, .LBB71_231
	b	.LBB71_253
.LBB71_181:
	srai.d	$a1, $a2, 2
	b	.LBB71_183
.LBB71_182:
	srli.d	$a1, $a2, 2
.LBB71_183:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB71_184:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit176
	addi.d	$s5, $sp, 104
	st.d	$s5, $sp, 88
	ld.d	$a1, $a0, 8
	ld.d	$s6, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 56
	move	$a0, $s5
	bltu	$a1, $a2, .LBB71_186
# %bb.185:                              # %.noexc.i.i178
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB71_186:                             # %._crit_edge.i.i.i177
	beq	$a1, $s3, .LBB71_190
# %bb.187:                              # %._crit_edge.i.i.i177
	bnez	$a1, .LBB71_189
# %bb.188:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB71_190
.LBB71_189:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB71_190:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit179
	ld.d	$a1, $sp, 56
	ld.d	$a0, $sp, 88
	ori	$fp, $zero, 1
	st.d	$a1, $sp, 96
	bne	$a1, $fp, .LBB71_192
# %bb.191:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -40
	sltu	$fp, $zero, $a1
.LBB71_192:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	beq	$a0, $s5, .LBB71_194
# %bb.193:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i180
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_194:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit182
	beqz	$fp, .LBB71_209
# %bb.195:
	ori	$a1, $zero, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	ld.d	$fp, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s6, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.138)
	addi.d	$a1, $a0, %pc_lo12(.L.str.138)
	ori	$a2, $zero, 43
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s2, 176
	ld.d	$a2, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB71_198
# %bb.196:
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB71_200
# %bb.197:
	srli.d	$a1, $a2, 2
	b	.LBB71_199
.LBB71_198:
	srai.d	$a1, $a3, 9
.LBB71_199:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB71_200:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit184
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 88
	ld.d	$a2, $sp, 96
.Ltmp1800:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1801:
# %bb.201:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
.Ltmp1802:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1803:
# %bb.202:                              # %_ZNSolsEPFRSoS_E.exit
	ld.d	$a0, $sp, 88
	addi.d	$s5, $sp, 104
	beq	$a0, $s5, .LBB71_204
# %bb.203:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i185
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_204:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit187
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 88
	ld.d	$a2, $sp, 96
.Ltmp1805:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1806:
# %bb.205:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit188
.Ltmp1807:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1808:
# %bb.206:                              # %_ZNSolsEPFRSoS_E.exit189
	ld.d	$a0, $sp, 88
	beq	$a0, $s5, .LBB71_208
# %bb.207:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i190
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_208:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit192
	ori	$a0, $zero, 2
	st.w	$a0, $s1, 0
.LBB71_209:
	addi.w	$a0, $zero, -2
	lu32i.d	$a0, 0
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a3, $sp, 16                    # 8-byte Folded Reload
	add.d	$a0, $a3, $a0
	bstrpick.d	$s6, $a0, 31, 0
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s6
	bltz	$a1, .LBB71_212
# %bb.210:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB71_213
# %bb.211:
	slli.d	$a0, $s6, 7
	add.d	$a0, $a2, $a0
	b	.LBB71_215
.LBB71_212:
	srai.d	$a2, $a1, 2
	b	.LBB71_214
.LBB71_213:
	srli.d	$a2, $a1, 2
.LBB71_214:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB71_215:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit203
	addi.d	$s5, $sp, 104
	st.d	$s5, $sp, 88
	ld.d	$a1, $a0, 8
	ld.d	$s7, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 56
	move	$a0, $s5
	bltu	$a1, $a2, .LBB71_217
# %bb.216:                              # %.noexc.i.i205
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB71_217:                             # %._crit_edge.i.i.i204
	beq	$a1, $s3, .LBB71_221
# %bb.218:                              # %._crit_edge.i.i.i204
	bnez	$a1, .LBB71_220
# %bb.219:
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB71_221
.LBB71_220:
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB71_221:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit206
	ld.d	$a1, $sp, 56
	ld.d	$a0, $sp, 88
	ori	$fp, $zero, 1
	st.d	$a1, $sp, 96
	bne	$a1, $fp, .LBB71_223
# %bb.222:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -41
	sltu	$fp, $zero, $a1
.LBB71_223:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit208
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	beq	$a0, $s5, .LBB71_225
# %bb.224:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i209
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_225:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit211
	beqz	$fp, .LBB71_231
# %bb.226:
	move	$a0, $s4
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	ld.d	$fp, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s7, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.139)
	addi.d	$a1, $a0, %pc_lo12(.L.str.139)
	ori	$a2, $zero, 72
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s4
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 88
	ld.d	$a2, $sp, 96
.Ltmp1810:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1811:
# %bb.227:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit212
.Ltmp1812:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1813:
# %bb.228:                              # %_ZNSolsEPFRSoS_E.exit213
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB71_230
# %bb.229:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i214
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_230:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit216
	ori	$a0, $zero, 2
	st.w	$a0, $s1, 0
.LBB71_231:                             # %.thread352
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	addi.d	$a0, $a0, -1
	bstrpick.d	$s6, $a0, 31, 0
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s6
	bltz	$a1, .LBB71_234
# %bb.232:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB71_235
# %bb.233:
	slli.d	$a0, $s6, 7
	add.d	$a0, $a2, $a0
	b	.LBB71_237
.LBB71_234:
	srai.d	$a2, $a1, 2
	b	.LBB71_236
.LBB71_235:
	srli.d	$a2, $a1, 2
.LBB71_236:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB71_237:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit224
	addi.d	$s5, $sp, 104
	st.d	$s5, $sp, 88
	ld.d	$a1, $a0, 8
	ld.d	$s7, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 56
	move	$a0, $s5
	bltu	$a1, $a2, .LBB71_239
# %bb.238:                              # %.noexc.i.i226
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB71_239:                             # %._crit_edge.i.i.i225
	beq	$a1, $s3, .LBB71_243
# %bb.240:                              # %._crit_edge.i.i.i225
	bnez	$a1, .LBB71_242
# %bb.241:
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB71_243
.LBB71_242:
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB71_243:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit227
	ld.d	$a1, $sp, 56
	ld.d	$a0, $sp, 88
	st.d	$a1, $sp, 96
	ori	$a2, $zero, 4
	ori	$fp, $zero, 1
	bne	$a1, $a2, .LBB71_245
# %bb.244:
	ld.w	$a1, $a0, 0
	lu12i.w	$a2, 452182
	ori	$a2, $a2, 2164
	xor	$a1, $a1, $a2
	sltu	$fp, $zero, $a1
.LBB71_245:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit229
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	beq	$a0, $s5, .LBB71_247
# %bb.246:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i230
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_247:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit232
	beqz	$fp, .LBB71_253
# %bb.248:
	move	$a0, $s4
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	ld.d	$fp, $sp, 24                    # 8-byte Folded Reload
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s7, $fp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.141)
	addi.d	$a1, $a0, %pc_lo12(.L.str.141)
	ori	$a2, $zero, 43
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$a0, $s4
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 88
	ld.d	$a2, $sp, 96
.Ltmp1815:
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1816:
# %bb.249:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit233
.Ltmp1817:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1818:
# %bb.250:                              # %_ZNSolsEPFRSoS_E.exit234
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB71_252
# %bb.251:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i235
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_252:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit237
	ori	$a0, $zero, 2
	st.w	$a0, $s1, 0
.LBB71_253:
	move	$a0, $s2
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	blt	$a3, $s3, .LBB71_256
# %bb.254:
	ori	$a3, $zero, 3
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	bltu	$a3, $a1, .LBB71_257
# %bb.255:
	addi.d	$a0, $a2, 128
	b	.LBB71_259
.LBB71_256:
	srai.d	$a2, $a1, 2
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	b	.LBB71_258
.LBB71_257:
	srli.d	$a2, $a1, 2
.LBB71_258:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB71_259:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit245
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4Word8get_boolERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB71_263
# %bb.260:
	ld.d	$a2, $s8, 16
	ld.d	$a1, $s8, 24
	ld.d	$a0, $s8, 40
	sub.d	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	bltz	$a1, .LBB71_272
# %bb.261:
	ori	$a3, $zero, 511
	bltu	$a3, $a1, .LBB71_273
# %bb.262:
	add.d	$a0, $a2, $s2
	b	.LBB71_275
.LBB71_263:
	ld.d	$a2, $fp, 16
	ld.d	$a1, $fp, 24
	ld.d	$a0, $fp, 40
	sub.d	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	bltz	$a1, .LBB71_266
# %bb.264:
	ori	$a3, $zero, 511
	bltu	$a3, $a1, .LBB71_267
# %bb.265:
	add.d	$a0, $a2, $s2
	b	.LBB71_269
.LBB71_266:
	srai.d	$a2, $a1, 9
	b	.LBB71_268
.LBB71_267:
	srli.d	$a2, $a1, 9
.LBB71_268:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 9
	sub.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB71_269:                             # %_ZNSt5dequeIbSaIbEEixEm.exit148
	ori	$a1, $zero, 1
	st.b	$a1, $a0, 0
.LBB71_270:
	ori	$a0, $zero, 1
	st.b	$a0, $s0, 0
.LBB71_271:                             # %.critedge
	ld.d	$s8, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 184                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 192                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 200                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 208
	ret
.LBB71_272:
	srai.d	$a2, $a1, 9
	b	.LBB71_274
.LBB71_273:
	srli.d	$a2, $a1, 9
.LBB71_274:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 9
	sub.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
.LBB71_275:                             # %_ZNSt5dequeIbSaIbEEixEm.exit247
	ori	$a1, $zero, 1
	st.b	$a1, $a0, 0
	ld.d	$a2, $fp, 16
	ld.d	$a1, $fp, 24
	ld.d	$a0, $fp, 40
	sub.d	$a1, $a2, $a1
	add.d	$a1, $a1, $s2
	bltz	$a1, .LBB71_278
# %bb.276:
	ori	$a3, $zero, 511
	bltu	$a3, $a1, .LBB71_279
# %bb.277:
	add.d	$a0, $a2, $s2
	st.b	$zero, $a0, 0
	b	.LBB71_270
.LBB71_278:
	srai.d	$a2, $a1, 9
	b	.LBB71_280
.LBB71_279:
	srli.d	$a2, $a1, 9
.LBB71_280:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 9
	sub.d	$a1, $a1, $a2
	add.d	$a0, $a0, $a1
	st.b	$zero, $a0, 0
	b	.LBB71_270
.LBB71_281:
	srai.d	$a1, $a3, 9
.LBB71_282:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB71_283:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit270
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 88
	ld.d	$a2, $sp, 96
.Ltmp1787:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1788:
# %bb.284:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit271
.Ltmp1789:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1790:
# %bb.285:                              # %_ZNSolsEPFRSoS_E.exit272
	ld.d	$a0, $sp, 88
	beq	$a0, $s5, .LBB71_287
# %bb.286:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i273
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_287:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit275
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 88
	ld.d	$a2, $sp, 96
.Ltmp1792:
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1793:
# %bb.288:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit276
.Ltmp1794:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1795:
# %bb.289:                              # %_ZNSolsEPFRSoS_E.exit277
	ld.d	$a0, $sp, 88
	beq	$a0, $s5, .LBB71_291
# %bb.290:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i278
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_291:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit280
	ori	$a0, $zero, 2
	st.w	$a0, $s1, 0
.LBB71_292:
	move	$a0, $s2
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.w	$a4, $zero, -2
	addi.d	$a1, $a3, 2
	blt	$a3, $a4, .LBB71_295
# %bb.293:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB71_296
# %bb.294:
	addi.d	$a0, $a2, 256
	b	.LBB71_298
.LBB71_295:
	srai.d	$a2, $a1, 2
	b	.LBB71_297
.LBB71_296:
	srli.d	$a2, $a1, 2
.LBB71_297:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB71_298:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit291
	addi.d	$s5, $sp, 104
	st.d	$s5, $sp, 88
	ld.d	$a1, $a0, 8
	ld.d	$s6, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 56
	move	$a0, $s5
	bltu	$a1, $a2, .LBB71_300
# %bb.299:                              # %.noexc.i.i293
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 56
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 56
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB71_300:                             # %._crit_edge.i.i.i292
	beq	$a1, $s3, .LBB71_304
# %bb.301:                              # %._crit_edge.i.i.i292
	bnez	$a1, .LBB71_303
# %bb.302:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB71_304
.LBB71_303:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB71_304:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit294
	ld.d	$a1, $sp, 56
	ld.d	$a0, $sp, 88
	st.d	$a1, $sp, 96
	ori	$a2, $zero, 4
	ori	$fp, $zero, 1
	bne	$a1, $a2, .LBB71_306
# %bb.305:
	ld.w	$a1, $a0, 0
	lu12i.w	$a2, 452182
	ori	$a2, $a2, 2164
	xor	$a1, $a1, $a2
	sltu	$fp, $zero, $a1
.LBB71_306:                             # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit296
	beq	$a0, $s5, .LBB71_308
# %bb.307:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i297
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_308:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit299
	beqz	$fp, .LBB71_312
# %bb.309:
	ori	$a1, $zero, 1
	ori	$fp, $zero, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4Word8get_boolERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB71_311
# %bb.310:
	ori	$a2, $zero, 1
	move	$a0, $s2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15reset_name_typeEv)
	jirl	$ra, $ra, 0
	move	$fp, $zero
.LBB71_311:
	st.b	$fp, $s0, 0
	b	.LBB71_271
.LBB71_312:
	ori	$a1, $zero, 2
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1797:
	pcalau12i	$a0, %pc_hi20(.L.str.140)
	addi.d	$a1, $a0, %pc_lo12(.L.str.140)
	addi.d	$a0, $sp, 88
	pcaddu18i	$ra, %call36(_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1798:
# %bb.313:
	move	$s4, $a0
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB71_315
# %bb.314:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i303
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_315:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit305
	beqz	$s4, .LBB71_271
# %bb.316:
	ori	$a1, $zero, 1
	ori	$fp, $zero, 1
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 24                    # 8-byte Folded Reload
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4Word8get_boolERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB71_318
# %bb.317:
	st.b	$zero, $sp, 88
	addi.d	$a1, $sp, 88
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_)
	jirl	$ra, $ra, 0
	st.b	$fp, $sp, 88
	b	.LBB71_319
.LBB71_318:
	st.b	$fp, $sp, 88
	addi.d	$a1, $sp, 88
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_)
	jirl	$ra, $ra, 0
	st.b	$zero, $sp, 88
.LBB71_319:
	addi.d	$a1, $sp, 88
	move	$a0, $s8
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB71_270
.LBB71_320:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB71_321:
.Ltmp1796:
	b	.LBB71_327
.LBB71_322:
.Ltmp1799:
	b	.LBB71_330
.LBB71_323:
.Ltmp1791:
	b	.LBB71_327
.LBB71_324:
.Ltmp1786:
	b	.LBB71_330
.LBB71_325:
.Ltmp1814:
	b	.LBB71_330
.LBB71_326:
.Ltmp1809:
.LBB71_327:
	ld.d	$a2, $sp, 88
	move	$fp, $a0
	bne	$a2, $s5, .LBB71_331
	b	.LBB71_332
.LBB71_328:
.Ltmp1804:
	b	.LBB71_330
.LBB71_329:
.Ltmp1819:
.LBB71_330:
	ld.d	$a2, $sp, 88
	addi.d	$a1, $sp, 104
	move	$fp, $a0
	beq	$a2, $a1, .LBB71_332
.LBB71_331:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i196
	ld.d	$a0, $sp, 104
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB71_332:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end71:
	.size	_ZN2PP3Cmd9handle_ifERbRSt5dequeIbSaIbEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end71-_ZN2PP3Cmd9handle_ifERbRSt5dequeIbSaIbEES5_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table71:
.Lexception38:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Lfunc_begin38-.Lfunc_begin38  # >> Call Site 1 <<
	.uleb128 .Ltmp1784-.Lfunc_begin38       #   Call between .Lfunc_begin38 and .Ltmp1784
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1784-.Lfunc_begin38       # >> Call Site 2 <<
	.uleb128 .Ltmp1785-.Ltmp1784            #   Call between .Ltmp1784 and .Ltmp1785
	.uleb128 .Ltmp1786-.Lfunc_begin38       #     jumps to .Ltmp1786
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1785-.Lfunc_begin38       # >> Call Site 3 <<
	.uleb128 .Ltmp1800-.Ltmp1785            #   Call between .Ltmp1785 and .Ltmp1800
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1800-.Lfunc_begin38       # >> Call Site 4 <<
	.uleb128 .Ltmp1803-.Ltmp1800            #   Call between .Ltmp1800 and .Ltmp1803
	.uleb128 .Ltmp1804-.Lfunc_begin38       #     jumps to .Ltmp1804
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1803-.Lfunc_begin38       # >> Call Site 5 <<
	.uleb128 .Ltmp1805-.Ltmp1803            #   Call between .Ltmp1803 and .Ltmp1805
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1805-.Lfunc_begin38       # >> Call Site 6 <<
	.uleb128 .Ltmp1808-.Ltmp1805            #   Call between .Ltmp1805 and .Ltmp1808
	.uleb128 .Ltmp1809-.Lfunc_begin38       #     jumps to .Ltmp1809
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1808-.Lfunc_begin38       # >> Call Site 7 <<
	.uleb128 .Ltmp1810-.Ltmp1808            #   Call between .Ltmp1808 and .Ltmp1810
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1810-.Lfunc_begin38       # >> Call Site 8 <<
	.uleb128 .Ltmp1813-.Ltmp1810            #   Call between .Ltmp1810 and .Ltmp1813
	.uleb128 .Ltmp1814-.Lfunc_begin38       #     jumps to .Ltmp1814
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1813-.Lfunc_begin38       # >> Call Site 9 <<
	.uleb128 .Ltmp1815-.Ltmp1813            #   Call between .Ltmp1813 and .Ltmp1815
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1815-.Lfunc_begin38       # >> Call Site 10 <<
	.uleb128 .Ltmp1818-.Ltmp1815            #   Call between .Ltmp1815 and .Ltmp1818
	.uleb128 .Ltmp1819-.Lfunc_begin38       #     jumps to .Ltmp1819
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1818-.Lfunc_begin38       # >> Call Site 11 <<
	.uleb128 .Ltmp1787-.Ltmp1818            #   Call between .Ltmp1818 and .Ltmp1787
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1787-.Lfunc_begin38       # >> Call Site 12 <<
	.uleb128 .Ltmp1790-.Ltmp1787            #   Call between .Ltmp1787 and .Ltmp1790
	.uleb128 .Ltmp1791-.Lfunc_begin38       #     jumps to .Ltmp1791
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1790-.Lfunc_begin38       # >> Call Site 13 <<
	.uleb128 .Ltmp1792-.Ltmp1790            #   Call between .Ltmp1790 and .Ltmp1792
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1792-.Lfunc_begin38       # >> Call Site 14 <<
	.uleb128 .Ltmp1795-.Ltmp1792            #   Call between .Ltmp1792 and .Ltmp1795
	.uleb128 .Ltmp1796-.Lfunc_begin38       #     jumps to .Ltmp1796
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1795-.Lfunc_begin38       # >> Call Site 15 <<
	.uleb128 .Ltmp1797-.Ltmp1795            #   Call between .Ltmp1795 and .Ltmp1797
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1797-.Lfunc_begin38       # >> Call Site 16 <<
	.uleb128 .Ltmp1798-.Ltmp1797            #   Call between .Ltmp1797 and .Ltmp1798
	.uleb128 .Ltmp1799-.Lfunc_begin38       #     jumps to .Ltmp1799
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1798-.Lfunc_begin38       # >> Call Site 17 <<
	.uleb128 .Lfunc_end71-.Ltmp1798         #   Call between .Ltmp1798 and .Lfunc_end71
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end38:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd9handle_doERbRSt5dequeIiSaIiEERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES6_ # -- Begin function _ZN2PP3Cmd9handle_doERbRSt5dequeIiSaIiEERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES6_
	.p2align	5
	.type	_ZN2PP3Cmd9handle_doERbRSt5dequeIiSaIiEERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES6_,@function
_ZN2PP3Cmd9handle_doERbRSt5dequeIiSaIiEERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES6_: # @_ZN2PP3Cmd9handle_doERbRSt5dequeIiSaIiEERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES6_
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception39
# %bb.0:
	addi.d	$sp, $sp, -1152
	.cfi_def_cfa_offset 1152
	st.d	$ra, $sp, 1144                  # 8-byte Folded Spill
	st.d	$fp, $sp, 1136                  # 8-byte Folded Spill
	st.d	$s0, $sp, 1128                  # 8-byte Folded Spill
	st.d	$s1, $sp, 1120                  # 8-byte Folded Spill
	st.d	$s2, $sp, 1112                  # 8-byte Folded Spill
	st.d	$s3, $sp, 1104                  # 8-byte Folded Spill
	st.d	$s4, $sp, 1096                  # 8-byte Folded Spill
	st.d	$s5, $sp, 1088                  # 8-byte Folded Spill
	st.d	$s6, $sp, 1080                  # 8-byte Folded Spill
	st.d	$s7, $sp, 1072                  # 8-byte Folded Spill
	st.d	$s8, $sp, 1064                  # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s5, $a2
	move	$s0, $a0
	ld.d	$a0, $a2, 72
	ld.d	$a7, $a2, 40
	ld.d	$a2, $s0, 176
	ld.d	$t0, $s0, 184
	st.d	$a4, $sp, 48                    # 8-byte Folded Spill
	st.d	$a1, $sp, 72                    # 8-byte Folded Spill
	ld.d	$t1, $s0, 200
	sub.d	$a1, $a0, $a7
	sub.d	$a7, $a2, $t0
	srai.d	$a4, $a7, 7
	bltz	$a7, .LBB72_3
# %bb.1:
	ori	$a7, $zero, 4
	bltu	$a4, $a7, .LBB72_5
# %bb.2:
	srli.d	$a2, $a4, 2
	b	.LBB72_4
.LBB72_3:
	srai.d	$a2, $a7, 9
.LBB72_4:
	slli.d	$a7, $a2, 3
	ldx.d	$a7, $t1, $a7
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a4, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a7, $a2
.LBB72_5:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	st.d	$a3, $sp, 80                    # 8-byte Folded Spill
	st.d	$a5, $sp, 56                    # 8-byte Folded Spill
	st.d	$a6, $sp, 64                    # 8-byte Folded Spill
	srli.d	$s4, $a1, 3
	ld.d	$s3, $s5, 48
	ld.d	$s8, $s5, 56
	ld.d	$s1, $s5, 32
	ld.d	$s2, $s5, 16
	addi.d	$fp, $sp, 464
	st.d	$fp, $sp, 448
	ld.d	$a1, $a2, 8
	ld.d	$s6, $a2, 0
	sltu	$s7, $zero, $a0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 168
	move	$a0, $fp
	bltu	$a1, $a2, .LBB72_7
# %bb.6:                                # %.noexc.i.i
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 168
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 168
	st.d	$a0, $sp, 448
	st.d	$a1, $sp, 464
.LBB72_7:                               # %._crit_edge.i.i.i
	sub.d	$s4, $s4, $s7
	addi.w	$s7, $zero, -1
	sub.d	$s8, $s3, $s8
	beq	$a1, $s7, .LBB72_11
# %bb.8:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB72_10
# %bb.9:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB72_11
.LBB72_10:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB72_11:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	slli.d	$s3, $s4, 7
	srai.d	$s4, $s8, 2
	ld.d	$a0, $sp, 168
	ld.d	$s6, $sp, 448
	sub.d	$s1, $s1, $s2
	ori	$a1, $zero, 5
	st.d	$a0, $sp, 456
	bne	$a0, $a1, .LBB72_13
# %bb.12:
	pcalau12i	$a0, %pc_hi20(.L.str.18)
	addi.d	$a1, $a0, %pc_lo12(.L.str.18)
	ori	$a2, $zero, 5
	move	$a0, $s6
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s2, $a0, 1
	add.d	$s3, $s3, $s4
	srai.d	$s1, $s1, 2
	bne	$s6, $fp, .LBB72_14
	b	.LBB72_15
.LBB72_13:
	move	$s2, $zero
	add.d	$s3, $s3, $s4
	srai.d	$s1, $s1, 2
	beq	$s6, $fp, .LBB72_15
.LBB72_14:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 464
	addi.d	$a1, $a0, 1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	add.d	$s3, $s3, $s1
	beqz	$s2, .LBB72_20
# %bb.16:
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	ori	$a3, $zero, 2
	blt	$a2, $a3, .LBB72_75
# %bb.17:
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s7, .LBB72_43
# %bb.18:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB72_64
# %bb.19:
	addi.d	$a0, $a1, 128
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	b	.LBB72_66
.LBB72_20:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB72_23
# %bb.21:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB72_25
# %bb.22:
	srli.d	$a2, $a1, 2
	b	.LBB72_24
.LBB72_23:
	srai.d	$a2, $a3, 9
.LBB72_24:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB72_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit238
	addi.d	$fp, $sp, 464
	st.d	$fp, $sp, 448
	ld.d	$a1, $a2, 8
	ld.d	$s6, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 168
	move	$a0, $fp
	bltu	$a1, $a2, .LBB72_27
# %bb.26:                               # %.noexc.i.i240
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 168
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 168
	st.d	$a0, $sp, 448
	st.d	$a1, $sp, 464
.LBB72_27:                              # %._crit_edge.i.i.i239
	beq	$a1, $s7, .LBB72_31
# %bb.28:                               # %._crit_edge.i.i.i239
	bnez	$a1, .LBB72_30
# %bb.29:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB72_31
.LBB72_30:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB72_31:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit241
	ld.d	$a0, $sp, 168
	ld.d	$s6, $sp, 448
	ori	$a1, $zero, 5
	st.d	$a0, $sp, 456
	bne	$a0, $a1, .LBB72_33
# %bb.32:
	pcalau12i	$a0, %pc_hi20(.L.str.143)
	addi.d	$a1, $a0, %pc_lo12(.L.str.143)
	ori	$a2, $zero, 5
	move	$a0, $s6
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s1, $a0, 1
	bne	$s6, $fp, .LBB72_34
	b	.LBB72_35
.LBB72_33:
	move	$s1, $zero
	beq	$s6, $fp, .LBB72_35
.LBB72_34:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i244
	ld.d	$a0, $sp, 464
	addi.d	$a1, $a0, 1
	move	$a0, $s6
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_35:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit246
	beqz	$s1, .LBB72_40
# %bb.36:
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	ori	$a3, $zero, 2
	blt	$a2, $a3, .LBB72_123
# %bb.37:
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s7, .LBB72_78
# %bb.38:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB72_112
# %bb.39:
	addi.d	$a0, $a1, 128
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	b	.LBB72_114
.LBB72_40:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB72_44
# %bb.41:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB72_46
# %bb.42:
	srli.d	$a2, $a1, 2
	b	.LBB72_45
.LBB72_43:
	srai.d	$a1, $a2, 2
	b	.LBB72_65
.LBB72_44:
	srai.d	$a2, $a3, 9
.LBB72_45:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB72_46:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit256
	addi.d	$fp, $sp, 464
	st.d	$fp, $sp, 448
	ld.d	$a1, $a2, 8
	ld.d	$s6, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 168
	move	$a0, $fp
	bltu	$a1, $a2, .LBB72_48
# %bb.47:                               # %.noexc.i.i258
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 168
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 168
	st.d	$a0, $sp, 448
	st.d	$a1, $sp, 464
.LBB72_48:                              # %._crit_edge.i.i.i257
	beq	$a1, $s7, .LBB72_52
# %bb.49:                               # %._crit_edge.i.i.i257
	bnez	$a1, .LBB72_51
# %bb.50:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB72_52
.LBB72_51:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB72_52:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit259
	ld.d	$a1, $sp, 168
	ld.d	$a0, $sp, 448
	ori	$a2, $zero, 4
	st.d	$a1, $sp, 456
	bne	$a1, $a2, .LBB72_54
# %bb.53:
	ld.w	$a1, $a0, 0
	lu12i.w	$a2, 476823
	ori	$a2, $a2, 2149
	xor	$a1, $a1, $a2
	sltui	$s1, $a1, 1
	bne	$a0, $fp, .LBB72_55
	b	.LBB72_56
.LBB72_54:
	move	$s1, $zero
	beq	$a0, $fp, .LBB72_56
.LBB72_55:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i262
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_56:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit264
	beqz	$s1, .LBB72_61
# %bb.57:
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	ori	$a3, $zero, 2
	blt	$a2, $a3, .LBB72_149
# %bb.58:
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s7, .LBB72_131
# %bb.59:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB72_138
# %bb.60:
	addi.d	$a0, $a1, 128
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	b	.LBB72_140
.LBB72_61:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB72_79
# %bb.62:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB72_81
# %bb.63:
	srli.d	$a2, $a1, 2
	b	.LBB72_80
.LBB72_64:
	srli.d	$a1, $a2, 2
.LBB72_65:
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB72_66:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit232
	ld.d	$s1, $sp, 56                    # 8-byte Folded Reload
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.142)
	addi.d	$a1, $a0, %pc_lo12(.L.str.142)
	ori	$a2, $zero, 74
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB72_405
# %bb.67:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB72_69
# %bb.68:
	ld.bu	$a0, $s2, 67
	b	.LBB72_70
.LBB72_69:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.LBB72_70:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.135)
	addi.d	$a1, $a0, %pc_lo12(.L.str.135)
	ori	$a2, $zero, 30
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB72_405
# %bb.71:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i538
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB72_73
# %bb.72:
	ld.bu	$a0, $s2, 67
	b	.LBB72_74
.LBB72_73:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.LBB72_74:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit541
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB72_75:
	slli.d	$a0, $s3, 32
	ori	$a1, $zero, 0
	lu32i.d	$a1, -1
	ld.d	$a2, $s5, 16
	ld.d	$a4, $s5, 24
	add.d	$a0, $a0, $a1
	srai.d	$a3, $a0, 32
	ld.d	$a0, $s5, 40
	sub.d	$a1, $a2, $a4
	srai.d	$a1, $a1, 2
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB72_126
# %bb.76:
	ori	$a4, $zero, 127
	ld.d	$a5, $sp, 80                    # 8-byte Folded Reload
	bltu	$a4, $a1, .LBB72_125
.LBB72_77:
	alsl.d	$a0, $a3, $a2, 2
	b	.LBB72_128
.LBB72_78:
	srai.d	$a1, $a2, 2
	b	.LBB72_113
.LBB72_79:
	srai.d	$a2, $a3, 9
.LBB72_80:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB72_81:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit272
	addi.d	$fp, $sp, 464
	st.d	$fp, $sp, 448
	ld.d	$a1, $a2, 8
	ld.d	$s6, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 168
	move	$a0, $fp
	bltu	$a1, $a2, .LBB72_83
# %bb.82:                               # %.noexc.i.i274
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 168
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 168
	st.d	$a0, $sp, 448
	st.d	$a1, $sp, 464
.LBB72_83:                              # %._crit_edge.i.i.i273
	beq	$a1, $s7, .LBB72_87
# %bb.84:                               # %._crit_edge.i.i.i273
	bnez	$a1, .LBB72_86
# %bb.85:
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB72_87
.LBB72_86:
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB72_87:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit275
	ld.d	$a1, $sp, 168
	ld.d	$a0, $sp, 448
	st.d	$a1, $sp, 456
	ori	$a2, $zero, 2
	lu12i.w	$a3, 6
	bne	$a1, $a2, .LBB72_89
# %bb.88:
	ld.hu	$a1, $a0, 0
	ori	$a2, $a3, 3940
	xor	$a1, $a1, $a2
	sltui	$s1, $a1, 1
	bne	$a0, $fp, .LBB72_90
	b	.LBB72_91
.LBB72_89:
	move	$s1, $zero
	beq	$a0, $fp, .LBB72_91
.LBB72_90:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i278
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_91:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit280
	beqz	$s1, .LBB72_130
# %bb.92:
	st.d	$s3, $sp, 40                    # 8-byte Folded Spill
	addi.d	$a0, $s0, 160
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	move	$a0, $s0
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	move	$s4, $zero
	move	$s1, $zero
	ori	$s3, $zero, 1
	addi.d	$fp, $sp, 464
	ori	$s2, $zero, 16
	ori	$s6, $zero, 1
	.p2align	4, , 16
.LBB72_93:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB72_133
# %bb.94:                               #   in Loop: Header=BB72_93 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s1, $a2
	bltz	$a2, .LBB72_97
# %bb.95:                               #   in Loop: Header=BB72_93 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB72_98
# %bb.96:                               #   in Loop: Header=BB72_93 Depth=1
	add.d	$a0, $a1, $s4
	b	.LBB72_100
	.p2align	4, , 16
.LBB72_97:                              #   in Loop: Header=BB72_93 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB72_99
	.p2align	4, , 16
.LBB72_98:                              #   in Loop: Header=BB72_93 Depth=1
	srli.d	$a1, $a2, 2
.LBB72_99:                              #   in Loop: Header=BB72_93 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB72_100:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit286
                                        #   in Loop: Header=BB72_93 Depth=1
	st.d	$fp, $sp, 448
	ld.d	$a1, $a0, 8
	ld.d	$s8, $a0, 0
	st.d	$a1, $sp, 168
	move	$a0, $fp
	bltu	$a1, $s2, .LBB72_102
# %bb.101:                              # %.noexc.i.i288
                                        #   in Loop: Header=BB72_93 Depth=1
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 168
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 168
	st.d	$a0, $sp, 448
	st.d	$a1, $sp, 464
.LBB72_102:                             # %._crit_edge.i.i.i287
                                        #   in Loop: Header=BB72_93 Depth=1
	beq	$a1, $s7, .LBB72_105
# %bb.103:                              # %._crit_edge.i.i.i287
                                        #   in Loop: Header=BB72_93 Depth=1
	bnez	$a1, .LBB72_107
# %bb.104:                              #   in Loop: Header=BB72_93 Depth=1
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
.LBB72_105:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit289
                                        #   in Loop: Header=BB72_93 Depth=1
	ld.d	$a1, $sp, 168
	ld.d	$a0, $sp, 448
	st.d	$a1, $sp, 456
	bne	$a1, $s3, .LBB72_108
.LBB72_106:                             #   in Loop: Header=BB72_93 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -61
	sltui	$s8, $a1, 1
	bne	$a0, $fp, .LBB72_109
	b	.LBB72_110
	.p2align	4, , 16
.LBB72_107:                             #   in Loop: Header=BB72_93 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 168
	ld.d	$a0, $sp, 448
	st.d	$a1, $sp, 456
	beq	$a1, $s3, .LBB72_106
.LBB72_108:                             #   in Loop: Header=BB72_93 Depth=1
	move	$s8, $zero
	beq	$a0, $fp, .LBB72_110
.LBB72_109:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i292
                                        #   in Loop: Header=BB72_93 Depth=1
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_110:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit294
                                        #   in Loop: Header=BB72_93 Depth=1
	bnez	$s8, .LBB72_132
# %bb.111:                              #   in Loop: Header=BB72_93 Depth=1
	addi.d	$s1, $s1, 1
	addi.w	$s6, $s6, 1
	addi.d	$s4, $s4, 128
	b	.LBB72_93
.LBB72_112:
	srli.d	$a1, $a2, 2
.LBB72_113:
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB72_114:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit249
	ld.d	$s1, $sp, 56                    # 8-byte Folded Reload
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.144)
	addi.d	$a1, $a0, %pc_lo12(.L.str.144)
	ori	$a2, $zero, 62
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB72_405
# %bb.115:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i543
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB72_117
# %bb.116:
	ld.bu	$a0, $s2, 67
	b	.LBB72_118
.LBB72_117:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.LBB72_118:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit546
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.135)
	addi.d	$a1, $a0, %pc_lo12(.L.str.135)
	ori	$a2, $zero, 30
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB72_405
# %bb.119:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i548
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB72_121
# %bb.120:
	ld.bu	$a0, $s2, 67
	b	.LBB72_122
.LBB72_121:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.LBB72_122:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit551
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB72_123:
	slli.d	$a0, $s3, 32
	ori	$a1, $zero, 0
	lu32i.d	$a1, -1
	ld.d	$a2, $s5, 16
	ld.d	$a4, $s5, 24
	add.d	$a0, $a0, $a1
	srai.d	$a3, $a0, 32
	ld.d	$a0, $s5, 40
	sub.d	$a1, $a2, $a4
	srai.d	$a1, $a1, 2
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB72_126
# %bb.124:
	ori	$a4, $zero, 127
	ld.d	$a5, $sp, 80                    # 8-byte Folded Reload
	bgeu	$a4, $a1, .LBB72_77
.LBB72_125:
	srli.d	$a2, $a1, 7
	b	.LBB72_127
.LBB72_126:
	srai.d	$a2, $a1, 7
	ld.d	$a5, $sp, 80                    # 8-byte Folded Reload
.LBB72_127:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 7
	sub.d	$a1, $a1, $a2
	alsl.d	$a0, $a1, $a0, 2
.LBB72_128:                             # %_ZNSt5dequeIiSaIiEEixEm.exit
	ld.w	$a0, $a0, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $a5, 0
	ori	$a0, $zero, 1
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
.LBB72_129:
	st.b	$a0, $a1, 0
.LBB72_130:
	ld.d	$s8, $sp, 1064                  # 8-byte Folded Reload
	ld.d	$s7, $sp, 1072                  # 8-byte Folded Reload
	ld.d	$s6, $sp, 1080                  # 8-byte Folded Reload
	ld.d	$s5, $sp, 1088                  # 8-byte Folded Reload
	ld.d	$s4, $sp, 1096                  # 8-byte Folded Reload
	ld.d	$s3, $sp, 1104                  # 8-byte Folded Reload
	ld.d	$s2, $sp, 1112                  # 8-byte Folded Reload
	ld.d	$s1, $sp, 1120                  # 8-byte Folded Reload
	ld.d	$s0, $sp, 1128                  # 8-byte Folded Reload
	ld.d	$fp, $sp, 1136                  # 8-byte Folded Reload
	ld.d	$ra, $sp, 1144                  # 8-byte Folded Reload
	addi.d	$sp, $sp, 1152
	ret
.LBB72_131:
	srai.d	$a1, $a2, 2
	b	.LBB72_139
.LBB72_132:
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s0, 208
	ld.d	$a3, $s0, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s0, 192
	ld.d	$a4, $s0, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	addi.d	$a0, $a0, -1
	st.w	$a0, $sp, 448
	addi.d	$a2, $sp, 448
	move	$a0, $s0
	move	$a1, $s6
	ld.d	$a3, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a4, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9subvar_w0EiRiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES1_)
	jirl	$ra, $ra, 0
.LBB72_133:                             # %.thread
	move	$a0, $s0
	ld.d	$s1, $sp, 56                    # 8-byte Folded Reload
	move	$a1, $s1
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd22handle_cmd_unary_minusERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a2, $a0, $a1
	srai.d	$a2, $a2, 3
	sltu	$a0, $zero, $a0
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a0
	ld.d	$a5, $s0, 192
	ld.d	$a0, $s0, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a0
	srai.d	$a3, $a3, 7
	add.d	$s8, $a2, $a3
	addi.w	$s6, $s8, 0
	addi.d	$s2, $sp, 1048
	st.d	$s2, $sp, 1032
	lu12i.w	$a2, 6
	ori	$a2, $a2, 2340
	st.h	$a2, $sp, 1048
	ori	$a3, $zero, 2
	ld.d	$a2, $s0, 184
	st.d	$a3, $sp, 1040
	ori	$a3, $zero, 1
	st.b	$zero, $sp, 1050
	bge	$a3, $s6, .LBB72_137
# %bb.134:
	sub.d	$a2, $a0, $a2
	srai.d	$a3, $a2, 7
	addi.d	$a2, $a3, 1
	blt	$a3, $s7, .LBB72_150
# %bb.135:
	ori	$a3, $zero, 3
	ld.d	$s3, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	bltu	$a3, $a2, .LBB72_151
# %bb.136:
	move	$s1, $s8
	addi.d	$a0, $a0, 128
	b	.LBB72_153
.LBB72_137:                             # %.thread..thread640_crit_edge
	sub.d	$a3, $a0, $a2
	srai.d	$a7, $a3, 7
	b	.LBB72_181
.LBB72_138:
	srli.d	$a1, $a2, 2
.LBB72_139:
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB72_140:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit267
	ld.d	$s1, $sp, 56                    # 8-byte Folded Reload
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.146)
	addi.d	$a1, $a0, %pc_lo12(.L.str.146)
	ori	$a2, $zero, 61
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB72_405
# %bb.141:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i553
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB72_143
# %bb.142:
	ld.bu	$a0, $s1, 67
	b	.LBB72_144
.LBB72_143:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB72_144:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit556
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.135)
	addi.d	$a1, $a0, %pc_lo12(.L.str.135)
	ori	$a2, $zero, 30
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB72_405
# %bb.145:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i558
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB72_147
# %bb.146:
	ld.bu	$a0, $s1, 67
	b	.LBB72_148
.LBB72_147:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB72_148:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit561
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB72_149:
	ori	$a0, $zero, 1
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	b	.LBB72_129
.LBB72_150:
	srai.d	$a0, $a2, 2
	ld.d	$s3, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 32                    # 8-byte Folded Reload
	b	.LBB72_152
.LBB72_151:
	srli.d	$a0, $a2, 2
.LBB72_152:
	move	$s1, $s8
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB72_153:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit301
	addi.d	$fp, $sp, 464
	st.d	$fp, $sp, 448
	ld.d	$a1, $a0, 8
	ld.d	$s8, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 168
	move	$a0, $fp
	bltu	$a1, $a2, .LBB72_156
# %bb.154:                              # %.noexc.i.i303
.Ltmp1820:
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 168
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp1821:
# %bb.155:                              # %.noexc304
	ld.d	$a1, $sp, 168
	st.d	$a0, $sp, 448
	st.d	$a1, $sp, 464
.LBB72_156:                             # %._crit_edge.i.i.i302
	beq	$a1, $s7, .LBB72_160
# %bb.157:                              # %._crit_edge.i.i.i302
	bnez	$a1, .LBB72_159
# %bb.158:
	ld.b	$a1, $s8, 0
	st.b	$a1, $a0, 0
	b	.LBB72_160
.LBB72_159:
	addi.d	$a2, $a1, 1
	move	$a1, $s8
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB72_160:
	ld.d	$a2, $sp, 168
	ld.d	$a0, $sp, 1032
	st.d	$a2, $sp, 456
	beq	$a0, $s2, .LBB72_164
# %bb.161:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 448
	move	$s8, $s1
	beq	$a1, $fp, .LBB72_167
# %bb.162:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i
	ld.d	$a4, $sp, 464
	ld.d	$a3, $sp, 1048
	st.d	$a1, $sp, 1032
	st.d	$a2, $sp, 1040
	st.d	$a4, $sp, 1048
	beqz	$a0, .LBB72_166
# %bb.163:
	st.d	$a0, $sp, 448
	st.d	$a3, $sp, 464
	b	.LBB72_172
.LBB72_164:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 448
	move	$s8, $s1
	beq	$a1, $fp, .LBB72_167
# %bb.165:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i.thread
	ld.d	$a0, $sp, 464
	st.d	$a1, $sp, 1032
	st.d	$a2, $sp, 1040
	st.d	$a0, $sp, 1048
.LBB72_166:
	st.d	$fp, $sp, 448
	move	$a0, $fp
	b	.LBB72_172
.LBB72_167:
	beqz	$a2, .LBB72_171
# %bb.168:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB72_170
# %bb.169:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB72_171
.LBB72_170:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB72_171:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 456
	ld.d	$a1, $sp, 1032
	st.d	$a0, $sp, 1040
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 448
.LBB72_172:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	st.d	$zero, $sp, 456
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 448
	beq	$a0, $fp, .LBB72_174
# %bb.173:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i306
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_174:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit308
	ld.d	$a0, $s0, 176
	ld.d	$a2, $s0, 184
	ld.d	$a1, $s0, 200
	sub.d	$a3, $a0, $a2
	srai.d	$a7, $a3, 7
	addi.d	$a4, $a7, 1
	blt	$a7, $s7, .LBB72_177
# %bb.175:
	ori	$a5, $zero, 3
	ld.d	$s1, $sp, 56                    # 8-byte Folded Reload
	bltu	$a5, $a4, .LBB72_178
# %bb.176:
	addi.d	$a4, $a0, 128
	b	.LBB72_180
.LBB72_177:
	srai.d	$a5, $a4, 2
	ld.d	$s1, $sp, 56                    # 8-byte Folded Reload
	b	.LBB72_179
.LBB72_178:
	srli.d	$a5, $a4, 2
.LBB72_179:
	slli.d	$a6, $a5, 3
	ldx.d	$a6, $a1, $a6
	slli.d	$a5, $a5, 2
	sub.d	$a4, $a4, $a5
	slli.d	$a4, $a4, 7
	add.d	$a4, $a6, $a4
.LBB72_180:
	ori	$a5, $zero, 5
	bltu	$a5, $s6, .LBB72_262
.LBB72_181:                             # %.thread640
	bltz	$a7, .LBB72_184
# %bb.182:
	ori	$a3, $zero, 4
	bltu	$a7, $a3, .LBB72_186
# %bb.183:
	srli.d	$a0, $a7, 2
	b	.LBB72_185
.LBB72_184:
	srai.d	$a0, $a3, 9
.LBB72_185:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a7, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB72_186:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit312
.Ltmp1986:
	move	$a1, $s1
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1987:
# %bb.187:
	addi.d	$s1, $s1, 16
.Ltmp1988:
	pcalau12i	$a0, %pc_hi20(.L.str.148)
	addi.d	$a1, $a0, %pc_lo12(.L.str.148)
	ori	$a2, $zero, 66
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1989:
# %bb.188:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB72_406
# %bb.189:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i563
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB72_191
# %bb.190:
	ld.bu	$a0, $s2, 67
	b	.LBB72_193
.LBB72_191:
.Ltmp1990:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp1991:
# %bb.192:                              # %.noexc567
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp1992:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp1993:
.LBB72_193:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp1994:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp1995:
# %bb.194:                              # %.noexc569
.Ltmp1996:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp1997:
# %bb.195:                              # %_ZNSolsEPFRSoS_E.exit
.Ltmp1998:
	pcalau12i	$a0, %pc_hi20(.L.str.149)
	addi.d	$a1, $a0, %pc_lo12(.L.str.149)
	ori	$a2, $zero, 13
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1999:
# %bb.196:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit316
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB72_406
# %bb.197:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i573
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB72_199
# %bb.198:
	ld.bu	$a0, $s2, 67
	b	.LBB72_201
.LBB72_199:
.Ltmp2000:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2001:
# %bb.200:                              # %.noexc578
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp2002:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp2003:
.LBB72_201:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i575
.Ltmp2004:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2005:
# %bb.202:                              # %.noexc580
.Ltmp2006:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2007:
# %bb.203:                              # %_ZNSolsEPFRSoS_E.exit318
.Ltmp2008:
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.150)
	addi.d	$a1, $a0, %pc_lo12(.L.str.150)
	ori	$a2, $zero, 7
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2009:
# %bb.204:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit320
	ld.d	$a1, $sp, 1032
	ld.d	$a2, $sp, 1040
.Ltmp2010:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2011:
# %bb.205:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
.Ltmp2012:
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.151)
	addi.d	$a1, $a0, %pc_lo12(.L.str.151)
	ori	$a2, $zero, 9
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2013:
# %bb.206:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit323
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB72_406
# %bb.207:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i584
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB72_209
# %bb.208:
	ld.bu	$a0, $s3, 67
	b	.LBB72_211
.LBB72_209:
.Ltmp2014:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2015:
# %bb.210:                              # %.noexc589
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp2016:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp2017:
.LBB72_211:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i586
.Ltmp2018:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2019:
# %bb.212:                              # %.noexc591
.Ltmp2020:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2021:
# %bb.213:                              # %_ZNSolsEPFRSoS_E.exit325
.Ltmp2022:
	pcalau12i	$a0, %pc_hi20(.L.str.152)
	addi.d	$a1, $a0, %pc_lo12(.L.str.152)
	ori	$a2, $zero, 14
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2023:
# %bb.214:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit327
.Ltmp2024:
	move	$a0, $s1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2025:
# %bb.215:
.Ltmp2026:
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.153)
	addi.d	$a1, $a0, %pc_lo12(.L.str.153)
	ori	$a2, $zero, 19
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2027:
# %bb.216:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit329
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB72_406
# %bb.217:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i595
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB72_219
# %bb.218:
	ld.bu	$a0, $s3, 67
	b	.LBB72_221
.LBB72_219:
.Ltmp2028:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2029:
# %bb.220:                              # %.noexc600
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp2030:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp2031:
.LBB72_221:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i597
.Ltmp2032:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2033:
# %bb.222:                              # %.noexc602
.Ltmp2034:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2035:
# %bb.223:                              # %_ZNSolsEPFRSoS_E.exit331
.Ltmp2036:
	pcalau12i	$a0, %pc_hi20(.L.str.154)
	addi.d	$a1, $a0, %pc_lo12(.L.str.154)
	ori	$a2, $zero, 56
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2037:
# %bb.224:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit333
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB72_406
# %bb.225:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i606
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB72_227
# %bb.226:
	ld.bu	$a0, $s2, 67
	b	.LBB72_229
.LBB72_227:
.Ltmp2038:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2039:
# %bb.228:                              # %.noexc611
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp2040:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp2041:
.LBB72_229:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i608
.Ltmp2042:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2043:
# %bb.230:                              # %.noexc613
.Ltmp2044:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2045:
# %bb.231:                              # %_ZNSolsEPFRSoS_E.exit335
.Ltmp2046:
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a1, $a0, %pc_lo12(.L.str.22)
	ori	$a2, $zero, 4
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2047:
# %bb.232:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit337.preheader
	blez	$s6, .LBB72_252
# %bb.233:                              # %.lr.ph
	move	$fp, $zero
	move	$s5, $zero
	addi.d	$s4, $sp, 464
	bstrpick.d	$s6, $s8, 30, 0
	ori	$s8, $zero, 16
	pcalau12i	$a0, %pc_hi20(.L.str.5)
	addi.d	$s2, $a0, %pc_lo12(.L.str.5)
	b	.LBB72_235
	.p2align	4, , 16
.LBB72_234:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit352
                                        #   in Loop: Header=BB72_235 Depth=1
	addi.d	$s5, $s5, 1
	addi.d	$fp, $fp, 128
	beq	$s6, $s5, .LBB72_252
.LBB72_235:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s5, $a1
	bltz	$a1, .LBB72_238
# %bb.236:                              #   in Loop: Header=BB72_235 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB72_239
# %bb.237:                              #   in Loop: Header=BB72_235 Depth=1
	add.d	$a0, $a2, $fp
	b	.LBB72_241
	.p2align	4, , 16
.LBB72_238:                             #   in Loop: Header=BB72_235 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB72_240
	.p2align	4, , 16
.LBB72_239:                             #   in Loop: Header=BB72_235 Depth=1
	srli.d	$a2, $a1, 2
.LBB72_240:                             #   in Loop: Header=BB72_235 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB72_241:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit341
                                        #   in Loop: Header=BB72_235 Depth=1
	st.d	$s4, $sp, 448
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	st.d	$a1, $sp, 168
	move	$a0, $s4
	bltu	$a1, $s8, .LBB72_244
# %bb.242:                              # %.noexc.i.i343
                                        #   in Loop: Header=BB72_235 Depth=1
.Ltmp2048:
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 168
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2049:
# %bb.243:                              # %.noexc344
                                        #   in Loop: Header=BB72_235 Depth=1
	ld.d	$a1, $sp, 168
	st.d	$a0, $sp, 448
	st.d	$a1, $sp, 464
.LBB72_244:                             # %._crit_edge.i.i.i342
                                        #   in Loop: Header=BB72_235 Depth=1
	beq	$a1, $s7, .LBB72_248
# %bb.245:                              # %._crit_edge.i.i.i342
                                        #   in Loop: Header=BB72_235 Depth=1
	bnez	$a1, .LBB72_247
# %bb.246:                              #   in Loop: Header=BB72_235 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB72_248
	.p2align	4, , 16
.LBB72_247:                             #   in Loop: Header=BB72_235 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB72_248:                             #   in Loop: Header=BB72_235 Depth=1
	ld.d	$a2, $sp, 168
	ld.d	$a1, $sp, 448
	st.d	$a2, $sp, 456
.Ltmp2051:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2052:
# %bb.249:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit347
                                        #   in Loop: Header=BB72_235 Depth=1
.Ltmp2053:
	ori	$a2, $zero, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2054:
# %bb.250:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit349
                                        #   in Loop: Header=BB72_235 Depth=1
	ld.d	$a0, $sp, 448
	beq	$a0, $s4, .LBB72_234
# %bb.251:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i350
                                        #   in Loop: Header=BB72_235 Depth=1
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_234
.LBB72_252:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit337._crit_edge
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s0, $a0, 240
	addi.d	$s2, $sp, 1048
	beqz	$s0, .LBB72_406
# %bb.253:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i617
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB72_255
# %bb.254:
	ld.bu	$a0, $s0, 67
	b	.LBB72_257
.LBB72_255:
.Ltmp2056:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2057:
# %bb.256:                              # %.noexc622
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2058:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2059:
.LBB72_257:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i619
.Ltmp2060:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2061:
# %bb.258:                              # %.noexc624
.Ltmp2062:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2063:
.LBB72_259:                             # %_ZNSolsEPFRSoS_E.exit339
	ori	$a0, $zero, 2
	ld.d	$a1, $sp, 64                    # 8-byte Folded Reload
	st.w	$a0, $a1, 0
.LBB72_260:
	ld.d	$a0, $sp, 1032
	beq	$a0, $s2, .LBB72_130
# %bb.261:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i530
	ld.d	$a1, $sp, 1048
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_130
.LBB72_262:
	ld.w	$a4, $a4, 32
	ori	$a5, $zero, 13
	bne	$a4, $a5, .LBB72_275
# %bb.263:
	ori	$a1, $zero, 2
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
.Ltmp1843:
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1844:
# %bb.264:
.Ltmp1846:
	pcalau12i	$a0, %pc_hi20(.L.str.36)
	addi.d	$a1, $a0, %pc_lo12(.L.str.36)
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_)
	jirl	$ra, $ra, 0
.Ltmp1847:
# %bb.265:
	move	$s8, $a0
	ld.d	$a0, $sp, 448
	addi.d	$s7, $sp, 464
	beq	$a0, $s7, .LBB72_267
# %bb.266:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i376
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_267:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit378
	beqz	$s8, .LBB72_278
# %bb.268:
	ori	$a1, $zero, 2
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
.Ltmp1970:
	move	$a1, $s1
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1971:
# %bb.269:
	addi.d	$s0, $s1, 16
.Ltmp1972:
	pcalau12i	$a0, %pc_hi20(.L.str.156)
	addi.d	$a1, $a0, %pc_lo12(.L.str.156)
	ori	$a2, $zero, 33
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1973:
# %bb.270:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit380
.Ltmp1974:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1975:
# %bb.271:                              # %_ZNSolsEPFRSoS_E.exit382
.Ltmp1976:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1977:
# %bb.272:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit384
	ori	$a1, $zero, 2
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
.Ltmp1978:
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1979:
# %bb.273:
	ld.d	$a1, $sp, 448
	ld.d	$a2, $sp, 456
.Ltmp1981:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1982:
# %bb.274:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit386
.Ltmp1983:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1984:
	b	.LBB72_313
.LBB72_275:
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	bltz	$a7, .LBB72_294
# %bb.276:
	ori	$a3, $zero, 4
	bltu	$a7, $a3, .LBB72_296
# %bb.277:
	srli.d	$a0, $a7, 2
	b	.LBB72_295
.LBB72_278:
	ori	$a1, $zero, 4
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	ld.w	$a0, $a0, 32
	ori	$a1, $zero, 12
	bne	$a0, $a1, .LBB72_306
# %bb.279:
	ori	$a1, $zero, 3
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
.Ltmp1865:
	move	$a1, $s1
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1866:
# %bb.280:
	move	$s8, $a0
	ori	$a1, $zero, 5
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
.Ltmp1868:
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1869:
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
# %bb.281:
	move	$s7, $a0
	ori	$a0, $zero, 8
	ori	$fp, $zero, 1
	bltu	$s6, $a0, .LBB72_284
# %bb.282:
	ori	$a1, $zero, 7
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
.Ltmp1871:
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1872:
# %bb.283:
	move	$fp, $a0
.LBB72_284:
	ori	$a1, $zero, 3
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
.Ltmp1874:
	addi.d	$a0, $sp, 1000
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1875:
# %bb.285:
	ori	$a1, $zero, 5
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
.Ltmp1877:
	addi.d	$a0, $sp, 968
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1878:
# %bb.286:
	addi.w	$a0, $s3, 0
	blez	$a0, .LBB72_315
# %bb.287:
	addi.d	$a0, $s3, -1
	bstrpick.d	$a1, $a0, 31, 0
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEEixEm)
	jirl	$ra, $ra, 0
	ld.w	$a0, $a0, 0
	ld.w	$a1, $s1, 0
	bne	$a0, $a1, .LBB72_315
# %bb.288:
	ld.d	$a0, $s0, 80
.Ltmp1916:
	addi.d	$a1, $sp, 1032
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_)
	jirl	$ra, $ra, 0
.Ltmp1917:
# %bb.289:
	ld.d	$a1, $s0, 80
	addi.d	$a1, $a1, 8
	beq	$a1, $a0, .LBB72_326
# %bb.290:
	addi.d	$s3, $a0, 64
.Ltmp1919:
	addi.d	$a0, $sp, 936
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZN2PP8Variable13get_var_valueB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1920:
# %bb.291:
	ld.d	$a1, $s0, 176
	ld.d	$a2, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB72_334
# %bb.292:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB72_336
# %bb.293:
	ld.w	$s5, $a1, 80
	ld.w	$s6, $a1, 84
	b	.LBB72_338
.LBB72_294:
	srai.d	$a0, $a3, 9
.LBB72_295:
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a7, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB72_296:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit357
.Ltmp1823:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1824:
# %bb.297:
	addi.d	$s0, $s1, 16
.Ltmp1825:
	pcalau12i	$a0, %pc_hi20(.L.str.155)
	addi.d	$a1, $a0, %pc_lo12(.L.str.155)
	ori	$a2, $zero, 45
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1826:
# %bb.298:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit359
.Ltmp1827:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1828:
# %bb.299:                              # %_ZNSolsEPFRSoS_E.exit361
.Ltmp1829:
	pcalau12i	$a0, %pc_hi20(.L.str.70)
	addi.d	$a1, $a0, %pc_lo12(.L.str.70)
	ori	$a2, $zero, 56
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1830:
# %bb.300:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit363
.Ltmp1831:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1832:
# %bb.301:                              # %_ZNSolsEPFRSoS_E.exit365
.Ltmp1833:
	pcalau12i	$a0, %pc_hi20(.L.str.71)
	addi.d	$a1, $a0, %pc_lo12(.L.str.71)
	ori	$a2, $zero, 25
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1834:
# %bb.302:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit367
.Ltmp1835:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1836:
# %bb.303:                              # %_ZNSolsEPFRSoS_E.exit369
.Ltmp1837:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1838:
# %bb.304:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit371
	ld.d	$a1, $sp, 1032
	ld.d	$a2, $sp, 1040
.Ltmp1839:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1840:
# %bb.305:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit373
.Ltmp1841:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1842:
	b	.LBB72_259
.LBB72_306:
	ori	$a1, $zero, 4
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
.Ltmp1849:
	move	$a1, $s1
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1850:
# %bb.307:
	addi.d	$s0, $s1, 16
.Ltmp1851:
	pcalau12i	$a0, %pc_hi20(.L.str.157)
	addi.d	$a1, $a0, %pc_lo12(.L.str.157)
	ori	$a2, $zero, 31
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1852:
# %bb.308:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit399
.Ltmp1853:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1854:
# %bb.309:                              # %_ZNSolsEPFRSoS_E.exit401
.Ltmp1855:
	pcalau12i	$a0, %pc_hi20(.L.str.46)
	addi.d	$a1, $a0, %pc_lo12(.L.str.46)
	ori	$a2, $zero, 15
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1856:
# %bb.310:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit403
	ori	$a1, $zero, 4
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
	move	$a1, $a0
.Ltmp1857:
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZN2PP4Word10get_stringB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1858:
# %bb.311:
	ld.d	$a1, $sp, 448
	ld.d	$a2, $sp, 456
.Ltmp1860:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1861:
# %bb.312:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit405
.Ltmp1862:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1863:
.LBB72_313:                             # %_ZNSolsEPFRSoS_E.exit388
	ld.d	$a0, $sp, 448
	beq	$a0, $s7, .LBB72_259
# %bb.314:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i389
	ld.d	$a1, $sp, 464
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_259
.LBB72_315:                             # %.critedge
	ld.d	$a1, $s5, 64
	ld.d	$a0, $s5, 48
	addi.d	$a1, $a1, -4
	beq	$a0, $a1, .LBB72_317
# %bb.316:
	ld.w	$a1, $s1, 0
	st.w	$a1, $a0, 0
	addi.d	$a0, $a0, 4
	st.d	$a0, $s5, 48
	b	.LBB72_318
.LBB72_317:
.Ltmp1880:
	move	$a0, $s5
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp1881:
.LBB72_318:                             # %_ZNSt5dequeIiSaIiEE9push_backERKi.exit
	bge	$s7, $s8, .LBB72_320
# %bb.319:                              # %_ZNSt5dequeIiSaIiEE9push_backERKi.exit
	bgez	$fp, .LBB72_322
.LBB72_320:
	bge	$s8, $s7, .LBB72_323
# %bb.321:
	bgez	$fp, .LBB72_323
.LBB72_322:
	ori	$a0, $zero, 1
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	b	.LBB72_400
.LBB72_323:
	st.d	$zero, $sp, 432
	ld.d	$a1, $s0, 176
	ld.d	$a2, $s0, 184
	vrepli.b	$vr0, 0
	ld.d	$a0, $s0, 200
	vst	$vr0, $sp, 80                   # 16-byte Folded Spill
	vst	$vr0, $sp, 416
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB72_335
# %bb.324:
	ori	$a3, $zero, 3
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	bltu	$a3, $a2, .LBB72_355
# %bb.325:
	ld.w	$s3, $a1, 80
	ld.w	$s4, $a1, 84
	b	.LBB72_357
.LBB72_326:
	ori	$a1, $zero, 1
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
.Ltmp1955:
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	move	$a1, $s0
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1956:
# %bb.327:
	addi.d	$s0, $s0, 16
.Ltmp1957:
	pcalau12i	$a0, %pc_hi20(.L.str.158)
	addi.d	$a1, $a0, %pc_lo12(.L.str.158)
	ori	$a2, $zero, 19
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1958:
# %bb.328:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit459
	ld.d	$a1, $sp, 1032
	ld.d	$a2, $sp, 1040
.Ltmp1959:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1960:
# %bb.329:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit461
.Ltmp1961:
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.159)
	addi.d	$a1, $a0, %pc_lo12(.L.str.159)
	ori	$a2, $zero, 36
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1962:
# %bb.330:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit463
.Ltmp1963:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1964:
# %bb.331:                              # %_ZNSolsEPFRSoS_E.exit465
.Ltmp1965:
	pcalau12i	$a0, %pc_hi20(.L.str.160)
	addi.d	$a1, $a0, %pc_lo12(.L.str.160)
	ori	$a2, $zero, 42
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp1966:
# %bb.332:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit467
.Ltmp1967:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp1968:
# %bb.333:                              # %.critedge225
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
	b	.LBB72_401
.LBB72_334:
	srai.d	$a1, $a3, 9
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	b	.LBB72_337
.LBB72_335:
	srai.d	$a1, $a3, 9
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a2, $a1, 7
	add.d	$a2, $a0, $a2
	ld.w	$s3, $a2, 80
	ld.w	$s4, $a2, 84
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	b	.LBB72_356
.LBB72_336:
	slli.d	$a1, $a2, 1
	bstrins.d	$a1, $zero, 2, 0
	ldx.d	$a0, $a0, $a1
	andi	$a1, $a2, 3
.LBB72_337:
	slli.d	$a2, $a1, 7
	add.d	$a2, $a0, $a2
	ld.w	$s5, $a2, 80
	ld.w	$s6, $a2, 84
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB72_338:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit419
.Ltmp1922:
	addi.d	$a0, $sp, 904
	pcaddu18i	$ra, %call36(_ZN2PP4Word12get_filenameB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1923:
# %bb.339:
.Ltmp1925:
	addi.d	$a0, $sp, 872
	addi.d	$a1, $sp, 936
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1926:
# %bb.340:
	addi.d	$a1, $s0, 8
.Ltmp1928:
	addi.d	$a0, $sp, 840
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1929:
# %bb.341:
	ld.d	$a5, $s0, 40
.Ltmp1931:
	addi.d	$a0, $sp, 168
	addi.d	$a1, $sp, 872
	addi.d	$a4, $sp, 840
	move	$a2, $s5
	move	$a3, $s6
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp1932:
# %bb.342:
	ld.d	$a0, $sp, 840
	addi.d	$a1, $sp, 856
	beq	$a0, $a1, .LBB72_344
# %bb.343:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i420
	ld.d	$a1, $sp, 856
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_344:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit422
	ld.d	$a0, $sp, 872
	addi.d	$a1, $sp, 888
	beq	$a0, $a1, .LBB72_346
# %bb.345:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i423
	ld.d	$a1, $sp, 888
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_346:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit425
.Ltmp1934:
	move	$s1, $s7
	addi.d	$a0, $sp, 168
	ld.d	$a1, $sp, 56                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 64                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word7get_intERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp1935:
# %bb.347:
	add.w	$s7, $a0, $fp
	bltz	$fp, .LBB72_349
# %bb.348:
	blt	$s1, $s7, .LBB72_351
.LBB72_349:
	bgez	$fp, .LBB72_382
# %bb.350:
	bge	$s7, $s1, .LBB72_382
.LBB72_351:                             # %.critedge229
	ori	$a0, $zero, 1
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	st.b	$a0, $a1, 0
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 904
	addi.d	$a1, $sp, 920
	beq	$a0, $a1, .LBB72_353
# %bb.352:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i512
	ld.d	$a1, $sp, 920
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_353:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit514
	ld.d	$a0, $sp, 936
	addi.d	$a1, $sp, 952
	beq	$a0, $a1, .LBB72_401
# %bb.354:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i515
	ld.d	$a1, $sp, 952
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_401
.LBB72_355:
	slli.d	$a1, $a2, 1
	bstrins.d	$a1, $zero, 2, 0
	ldx.d	$a0, $a0, $a1
	andi	$a1, $a2, 3
	slli.d	$a2, $a1, 7
	add.d	$a2, $a0, $a2
	ld.w	$s3, $a2, 80
	ld.w	$s4, $a2, 84
.LBB72_356:
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB72_357:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit477
.Ltmp1883:
	addi.d	$a0, $sp, 936
	pcaddu18i	$ra, %call36(_ZN2PP4Word12get_filenameB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1884:
# %bb.358:
	st.d	$zero, $sp, 408
	vld	$vr0, $sp, 80                   # 16-byte Folded Reload
	vst	$vr0, $sp, 392
.Ltmp1886:
	addi.d	$a0, $sp, 392
	addi.d	$a1, $sp, 1000
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_)
	jirl	$ra, $ra, 0
.Ltmp1887:
# %bb.359:
	ld.d	$a0, $s0, 80
.Ltmp1889:
	addi.d	$a1, $sp, 1032
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_)
	jirl	$ra, $ra, 0
.Ltmp1890:
# %bb.360:
	move	$s5, $a0
	ld.d	$a0, $s0, 80
	addi.d	$a0, $a0, 8
	beq	$a0, $s5, .LBB72_365
# %bb.361:
.Ltmp1892:
	addi.d	$a0, $sp, 304
	addi.d	$a1, $sp, 936
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1893:
# %bb.362:
	ld.d	$a6, $s0, 40
	addi.d	$a0, $s5, 64
.Ltmp1895:
	addi.d	$a1, $sp, 416
	addi.d	$a2, $sp, 392
	addi.d	$a5, $sp, 304
	st.d	$fp, $sp, 0
	move	$a3, $s3
	move	$a4, $s4
	ld.d	$a7, $sp, 56                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP8Variable13set_var_valueERSt6vectorIiSaIiEERS1_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISA_EEiiSA_PSt5dequeISA_SB_ERNS5_18basic_stringstreamIcS8_S9_EERi)
	jirl	$ra, $ra, 0
.Ltmp1896:
# %bb.363:
	ld.d	$a0, $sp, 304
	addi.d	$a1, $sp, 320
	addi.d	$s2, $sp, 1048
	beq	$a0, $a1, .LBB72_378
# %bb.364:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i478
	ld.d	$a1, $sp, 320
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_378
.LBB72_365:
.Ltmp1898:
	addi.d	$a0, $sp, 136
	addi.d	$a1, $sp, 1032
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1899:
# %bb.366:
.Ltmp1901:
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 936
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1902:
# %bb.367:
	ld.d	$a7, $s0, 40
.Ltmp1904:
	st.d	$fp, $sp, 8
	addi.d	$a0, $sp, 168
	addi.d	$a1, $sp, 136
	addi.d	$a2, $sp, 416
	addi.d	$a3, $sp, 392
	addi.d	$a6, $sp, 104
	ld.d	$a4, $sp, 56                    # 8-byte Folded Reload
	st.d	$a4, $sp, 0
	move	$a4, $s3
	move	$a5, $s4
	pcaddu18i	$ra, %call36(_ZN2PP8VariableC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIiSaIiEERS7_IS6_SaIS6_EEiiS6_PSt5dequeIS6_SB_ERNS1_18basic_stringstreamIcS4_S5_EERi)
	jirl	$ra, $ra, 0
.Ltmp1905:
# %bb.368:
	ld.d	$a0, $sp, 104
	addi.d	$a1, $sp, 120
	addi.d	$s2, $sp, 1048
	beq	$a0, $a1, .LBB72_370
# %bb.369:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i484
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_370:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit486
	ld.d	$a0, $sp, 136
	addi.d	$a1, $sp, 152
	beq	$a0, $a1, .LBB72_372
# %bb.371:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i487
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_372:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit489
	ld.d	$fp, $s0, 80
.Ltmp1907:
	addi.d	$a0, $sp, 904
	addi.d	$a1, $sp, 168
	pcaddu18i	$ra, %call36(_ZN2PP8Variable11get_varnameB5cxx11Ev)
	jirl	$ra, $ra, 0
.Ltmp1908:
# %bb.373:
.Ltmp1910:
	addi.d	$a0, $sp, 448
	addi.d	$a1, $sp, 904
	addi.d	$a2, $sp, 168
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_RS7_TnNSt9enable_ifIXaaclsr5_PCCPE22_MoveConstructiblePairIT_T0_EEclsr5_PCCPE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOSC_OSD_)
	jirl	$ra, $ra, 0
.Ltmp1911:
# %bb.374:
.Ltmp1913:
	addi.d	$a1, $sp, 448
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableESt4lessIS5_ESaISt4pairIKS5_S7_EEE6insertISA_IS5_S7_EEENSt9enable_ifIXsr16is_constructibleISC_T_EE5valueESA_ISt17_Rb_tree_iteratorISC_EbEE4typeEOSI_)
	jirl	$ra, $ra, 0
.Ltmp1914:
# %bb.375:
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 904
	addi.d	$a1, $sp, 920
	beq	$a0, $a1, .LBB72_377
# %bb.376:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i490
	ld.d	$a1, $sp, 920
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_377:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit492
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
.LBB72_378:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit480
	addi.d	$a0, $sp, 392
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 936
	addi.d	$a1, $sp, 952
	beq	$a0, $a1, .LBB72_380
# %bb.379:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i502
	ld.d	$a1, $sp, 952
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_380:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit504
	ld.d	$a0, $sp, 416
	beqz	$a0, .LBB72_399
# %bb.381:
	ld.d	$a1, $sp, 432
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_399
.LBB72_382:
.Ltmp1937:
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp1938:
# %bb.383:
	addi.d	$a0, $sp, 464
.Ltmp1940:
	move	$a1, $s7
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp1941:
# %bb.384:
.Ltmp1943:
	addi.d	$a0, $sp, 416
	addi.d	$a1, $sp, 448
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv)
	jirl	$ra, $ra, 0
.Ltmp1944:
# %bb.385:
	st.d	$zero, $sp, 408
	vrepli.b	$vr0, 0
	vst	$vr0, $sp, 80                   # 16-byte Folded Spill
	vst	$vr0, $sp, 392
.Ltmp1946:
	addi.d	$a0, $sp, 392
	addi.d	$a1, $sp, 416
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_)
	jirl	$ra, $ra, 0
.Ltmp1947:
# %bb.386:
	st.d	$zero, $sp, 384
	vld	$vr0, $sp, 80                   # 16-byte Folded Reload
	vst	$vr0, $sp, 368
.Ltmp1949:
	addi.d	$a0, $sp, 336
	addi.d	$a1, $sp, 904
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_)
	jirl	$ra, $ra, 0
.Ltmp1950:
# %bb.387:
	ld.d	$a6, $s0, 40
.Ltmp1952:
	addi.d	$a1, $sp, 368
	addi.d	$a2, $sp, 392
	addi.d	$a5, $sp, 336
	ld.d	$a0, $sp, 64                    # 8-byte Folded Reload
	st.d	$a0, $sp, 0
	move	$a0, $s3
	move	$a3, $s5
	move	$a4, $s6
	ld.d	$a7, $sp, 56                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP8Variable13set_var_valueERSt6vectorIiSaIiEERS1_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISA_EEiiSA_PSt5dequeISA_SB_ERNS5_18basic_stringstreamIcS8_S9_EERi)
	jirl	$ra, $ra, 0
.Ltmp1953:
# %bb.388:
	ld.d	$a0, $sp, 336
	addi.d	$a1, $sp, 352
	beq	$a0, $a1, .LBB72_390
# %bb.389:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i432
	ld.d	$a1, $sp, 352
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_390:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit434
	ld.d	$a0, $sp, 368
	beqz	$a0, .LBB72_392
# %bb.391:
	ld.d	$a1, $sp, 384
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_392:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit
	addi.d	$a0, $sp, 392
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 416
	addi.d	$a1, $sp, 432
	beq	$a0, $a1, .LBB72_394
# %bb.393:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i435
	ld.d	$a1, $sp, 432
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_394:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit437
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 904
	addi.d	$a1, $sp, 920
	beq	$a0, $a1, .LBB72_396
# %bb.395:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i438
	ld.d	$a1, $sp, 920
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_396:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit440
	ld.d	$a0, $sp, 936
	addi.d	$a1, $sp, 952
	beq	$a0, $a1, .LBB72_398
# %bb.397:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i441
	ld.d	$a1, $sp, 952
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_398:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit443
	addi.d	$s2, $sp, 1048
.LBB72_399:
	ori	$a0, $zero, 1
	ld.d	$a1, $sp, 72                    # 8-byte Folded Reload
.LBB72_400:
	st.b	$a0, $a1, 0
.LBB72_401:
	ld.d	$a0, $sp, 968
	addi.d	$a1, $sp, 984
	beq	$a0, $a1, .LBB72_403
# %bb.402:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i518
	ld.d	$a1, $sp, 984
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_403:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit520
	ld.d	$a0, $sp, 1000
	addi.d	$a1, $sp, 1016
	beq	$a0, $a1, .LBB72_260
# %bb.404:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i521
	ld.d	$a1, $sp, 1016
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_260
.LBB72_405:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB72_406:                             # %.invoke
.Ltmp2064:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2065:
# %bb.407:                              # %.cont
.LBB72_408:
.Ltmp1954:
	ld.d	$a2, $sp, 336
	addi.d	$a1, $sp, 352
	move	$fp, $a0
	beq	$a2, $a1, .LBB72_411
# %bb.409:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i444
	ld.d	$a0, $sp, 352
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_411
.LBB72_410:
.Ltmp1951:
	move	$fp, $a0
.LBB72_411:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit446
	ld.d	$a0, $sp, 368
	beqz	$a0, .LBB72_414
# %bb.412:
	ld.d	$a1, $sp, 384
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_414
.LBB72_413:
.Ltmp1948:
	move	$fp, $a0
.LBB72_414:
	addi.d	$a0, $sp, 392
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 416
	addi.d	$a1, $sp, 432
	beq	$a0, $a1, .LBB72_419
# %bb.415:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i449
	ld.d	$a1, $sp, 432
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_419
.LBB72_416:
.Ltmp1945:
	b	.LBB72_418
.LBB72_417:
.Ltmp1942:
.LBB72_418:
	move	$fp, $a0
.LBB72_419:
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	b	.LBB72_446
.LBB72_420:
.Ltmp1939:
	b	.LBB72_445
.LBB72_421:
.Ltmp1915:
	move	$fp, $a0
	addi.d	$a0, $sp, 448
	pcaddu18i	$ra, %call36(_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB72_423
.LBB72_422:
.Ltmp1912:
	move	$fp, $a0
.LBB72_423:
	ld.d	$a0, $sp, 904
	addi.d	$a1, $sp, 920
	beq	$a0, $a1, .LBB72_426
# %bb.424:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i499
	ld.d	$a1, $sp, 920
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_426
.LBB72_425:
.Ltmp1909:
	move	$fp, $a0
.LBB72_426:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit501
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZN2PP8VariableD2Ev)
	jirl	$ra, $ra, 0
	b	.LBB72_439
.LBB72_427:
.Ltmp1906:
	ld.d	$a2, $sp, 104
	addi.d	$a1, $sp, 120
	move	$fp, $a0
	beq	$a2, $a1, .LBB72_430
# %bb.428:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i493
	ld.d	$a0, $sp, 120
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_430
.LBB72_429:
.Ltmp1903:
	move	$fp, $a0
.LBB72_430:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit495
	ld.d	$a0, $sp, 136
	addi.d	$a1, $sp, 152
	beq	$a0, $a1, .LBB72_439
# %bb.431:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i496
	ld.d	$a1, $sp, 152
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_439
.LBB72_432:
.Ltmp1900:
	b	.LBB72_438
.LBB72_433:
.Ltmp1897:
	ld.d	$a2, $sp, 304
	addi.d	$a1, $sp, 320
	move	$fp, $a0
	beq	$a2, $a1, .LBB72_439
# %bb.434:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i481
	ld.d	$a0, $sp, 320
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_439
.LBB72_435:
.Ltmp1894:
	b	.LBB72_438
.LBB72_436:
.Ltmp1891:
	b	.LBB72_438
.LBB72_437:
.Ltmp1888:
.LBB72_438:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit483
	move	$fp, $a0
.LBB72_439:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit483
	addi.d	$a0, $sp, 392
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 936
	addi.d	$a1, $sp, 952
	beq	$a0, $a1, .LBB72_442
# %bb.440:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i507
	ld.d	$a1, $sp, 952
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_442
.LBB72_441:
.Ltmp1885:
	move	$fp, $a0
.LBB72_442:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit509
	ld.d	$a0, $sp, 416
	beqz	$a0, .LBB72_464
# %bb.443:
	ld.d	$a1, $sp, 432
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_464
.LBB72_444:
.Ltmp1936:
.LBB72_445:
	move	$fp, $a0
.LBB72_446:
	addi.d	$a0, $sp, 168
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 904
	addi.d	$a1, $sp, 920
	beq	$a0, $a1, .LBB72_451
.LBB72_447:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i452
	ld.d	$a1, $sp, 920
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 936
	addi.d	$a1, $sp, 952
	bne	$a0, $a1, .LBB72_452
	b	.LBB72_464
.LBB72_448:
.Ltmp1933:
	ld.d	$a2, $sp, 840
	addi.d	$a1, $sp, 856
	move	$fp, $a0
	bne	$a2, $a1, .LBB72_453
# %bb.449:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit428
	ld.d	$a0, $sp, 872
	addi.d	$a1, $sp, 888
	bne	$a0, $a1, .LBB72_455
.LBB72_450:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit431
	ld.d	$a0, $sp, 904
	addi.d	$a1, $sp, 920
	bne	$a0, $a1, .LBB72_447
.LBB72_451:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit454
	ld.d	$a0, $sp, 936
	addi.d	$a1, $sp, 952
	beq	$a0, $a1, .LBB72_464
.LBB72_452:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i455
	ld.d	$a1, $sp, 952
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_464
.LBB72_453:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i426
	ld.d	$a0, $sp, 856
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 872
	addi.d	$a1, $sp, 888
	beq	$a0, $a1, .LBB72_450
	b	.LBB72_455
.LBB72_454:
.Ltmp1930:
	move	$fp, $a0
	ld.d	$a0, $sp, 872
	addi.d	$a1, $sp, 888
	beq	$a0, $a1, .LBB72_450
.LBB72_455:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i429
	ld.d	$a1, $sp, 888
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 904
	addi.d	$a1, $sp, 920
	beq	$a0, $a1, .LBB72_451
	b	.LBB72_447
.LBB72_456:
.Ltmp1927:
	move	$fp, $a0
	ld.d	$a0, $sp, 904
	addi.d	$a1, $sp, 920
	beq	$a0, $a1, .LBB72_451
	b	.LBB72_447
.LBB72_457:
.Ltmp1924:
	move	$fp, $a0
	ld.d	$a0, $sp, 936
	addi.d	$a1, $sp, 952
	beq	$a0, $a1, .LBB72_464
	b	.LBB72_452
.LBB72_458:
.Ltmp1921:
	b	.LBB72_463
.LBB72_459:
.Ltmp1882:
	b	.LBB72_463
.LBB72_460:
.Ltmp1918:
	b	.LBB72_463
.LBB72_461:
.Ltmp1873:
	b	.LBB72_482
.LBB72_462:
.Ltmp1969:
.LBB72_463:
	move	$fp, $a0
.LBB72_464:
	ld.d	$a0, $sp, 968
	addi.d	$a1, $sp, 984
	beq	$a0, $a1, .LBB72_468
# %bb.465:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i524
	ld.d	$a1, $sp, 984
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB72_468
.LBB72_466:
.Ltmp1859:
	b	.LBB72_482
.LBB72_467:
.Ltmp1879:
	move	$fp, $a0
.LBB72_468:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit526
	ld.d	$a0, $sp, 1000
	addi.d	$a1, $sp, 1016
	beq	$a0, $a1, .LBB72_486
# %bb.469:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i527
	ld.d	$a1, $sp, 1016
	addi.d	$a1, $a1, 1
	b	.LBB72_485
.LBB72_470:
.Ltmp1876:
	b	.LBB72_482
.LBB72_471:
.Ltmp1870:
	b	.LBB72_482
.LBB72_472:
.Ltmp1867:
	b	.LBB72_482
.LBB72_473:
.Ltmp1864:
	b	.LBB72_476
.LBB72_474:
.Ltmp1980:
	b	.LBB72_482
.LBB72_475:
.Ltmp1985:
.LBB72_476:
	ld.d	$a2, $sp, 448
	move	$fp, $a0
	bne	$a2, $s7, .LBB72_484
	b	.LBB72_486
.LBB72_477:
.Ltmp1848:
	ld.d	$a2, $sp, 448
	addi.d	$a1, $sp, 464
	move	$fp, $a0
	bne	$a2, $a1, .LBB72_484
	b	.LBB72_486
.LBB72_478:
.Ltmp1845:
	b	.LBB72_482
.LBB72_479:
.Ltmp1822:
	b	.LBB72_482
.LBB72_480:
.Ltmp2050:
	b	.LBB72_482
.LBB72_481:
.Ltmp2066:
.LBB72_482:
	move	$fp, $a0
	b	.LBB72_486
.LBB72_483:
.Ltmp2055:
	ld.d	$a2, $sp, 448
	move	$fp, $a0
	beq	$a2, $s4, .LBB72_486
.LBB72_484:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i353
	ld.d	$a0, $sp, 464
	addi.d	$a1, $a0, 1
	move	$a0, $a2
.LBB72_485:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_486:
	ld.d	$a0, $sp, 1032
	addi.d	$a1, $sp, 1048
	beq	$a0, $a1, .LBB72_488
# %bb.487:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i533
	ld.d	$a1, $sp, 1048
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB72_488:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit535
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end72:
	.size	_ZN2PP3Cmd9handle_doERbRSt5dequeIiSaIiEERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES6_, .Lfunc_end72-_ZN2PP3Cmd9handle_doERbRSt5dequeIiSaIiEERiS1_RNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEES6_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table72:
.Lexception39:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Lfunc_begin39-.Lfunc_begin39  # >> Call Site 1 <<
	.uleb128 .Ltmp1820-.Lfunc_begin39       #   Call between .Lfunc_begin39 and .Ltmp1820
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1820-.Lfunc_begin39       # >> Call Site 2 <<
	.uleb128 .Ltmp1821-.Ltmp1820            #   Call between .Ltmp1820 and .Ltmp1821
	.uleb128 .Ltmp1822-.Lfunc_begin39       #     jumps to .Ltmp1822
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1821-.Lfunc_begin39       # >> Call Site 3 <<
	.uleb128 .Ltmp1986-.Ltmp1821            #   Call between .Ltmp1821 and .Ltmp1986
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1986-.Lfunc_begin39       # >> Call Site 4 <<
	.uleb128 .Ltmp2047-.Ltmp1986            #   Call between .Ltmp1986 and .Ltmp2047
	.uleb128 .Ltmp2066-.Lfunc_begin39       #     jumps to .Ltmp2066
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2048-.Lfunc_begin39       # >> Call Site 5 <<
	.uleb128 .Ltmp2049-.Ltmp2048            #   Call between .Ltmp2048 and .Ltmp2049
	.uleb128 .Ltmp2050-.Lfunc_begin39       #     jumps to .Ltmp2050
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2049-.Lfunc_begin39       # >> Call Site 6 <<
	.uleb128 .Ltmp2051-.Ltmp2049            #   Call between .Ltmp2049 and .Ltmp2051
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2051-.Lfunc_begin39       # >> Call Site 7 <<
	.uleb128 .Ltmp2054-.Ltmp2051            #   Call between .Ltmp2051 and .Ltmp2054
	.uleb128 .Ltmp2055-.Lfunc_begin39       #     jumps to .Ltmp2055
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2054-.Lfunc_begin39       # >> Call Site 8 <<
	.uleb128 .Ltmp2056-.Ltmp2054            #   Call between .Ltmp2054 and .Ltmp2056
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2056-.Lfunc_begin39       # >> Call Site 9 <<
	.uleb128 .Ltmp2063-.Ltmp2056            #   Call between .Ltmp2056 and .Ltmp2063
	.uleb128 .Ltmp2066-.Lfunc_begin39       #     jumps to .Ltmp2066
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2063-.Lfunc_begin39       # >> Call Site 10 <<
	.uleb128 .Ltmp1843-.Ltmp2063            #   Call between .Ltmp2063 and .Ltmp1843
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1843-.Lfunc_begin39       # >> Call Site 11 <<
	.uleb128 .Ltmp1844-.Ltmp1843            #   Call between .Ltmp1843 and .Ltmp1844
	.uleb128 .Ltmp1845-.Lfunc_begin39       #     jumps to .Ltmp1845
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1846-.Lfunc_begin39       # >> Call Site 12 <<
	.uleb128 .Ltmp1847-.Ltmp1846            #   Call between .Ltmp1846 and .Ltmp1847
	.uleb128 .Ltmp1848-.Lfunc_begin39       #     jumps to .Ltmp1848
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1847-.Lfunc_begin39       # >> Call Site 13 <<
	.uleb128 .Ltmp1970-.Ltmp1847            #   Call between .Ltmp1847 and .Ltmp1970
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1970-.Lfunc_begin39       # >> Call Site 14 <<
	.uleb128 .Ltmp1977-.Ltmp1970            #   Call between .Ltmp1970 and .Ltmp1977
	.uleb128 .Ltmp2066-.Lfunc_begin39       #     jumps to .Ltmp2066
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1977-.Lfunc_begin39       # >> Call Site 15 <<
	.uleb128 .Ltmp1978-.Ltmp1977            #   Call between .Ltmp1977 and .Ltmp1978
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1978-.Lfunc_begin39       # >> Call Site 16 <<
	.uleb128 .Ltmp1979-.Ltmp1978            #   Call between .Ltmp1978 and .Ltmp1979
	.uleb128 .Ltmp1980-.Lfunc_begin39       #     jumps to .Ltmp1980
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1981-.Lfunc_begin39       # >> Call Site 17 <<
	.uleb128 .Ltmp1984-.Ltmp1981            #   Call between .Ltmp1981 and .Ltmp1984
	.uleb128 .Ltmp1985-.Lfunc_begin39       #     jumps to .Ltmp1985
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1984-.Lfunc_begin39       # >> Call Site 18 <<
	.uleb128 .Ltmp1865-.Ltmp1984            #   Call between .Ltmp1984 and .Ltmp1865
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1865-.Lfunc_begin39       # >> Call Site 19 <<
	.uleb128 .Ltmp1866-.Ltmp1865            #   Call between .Ltmp1865 and .Ltmp1866
	.uleb128 .Ltmp1867-.Lfunc_begin39       #     jumps to .Ltmp1867
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1866-.Lfunc_begin39       # >> Call Site 20 <<
	.uleb128 .Ltmp1868-.Ltmp1866            #   Call between .Ltmp1866 and .Ltmp1868
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1868-.Lfunc_begin39       # >> Call Site 21 <<
	.uleb128 .Ltmp1869-.Ltmp1868            #   Call between .Ltmp1868 and .Ltmp1869
	.uleb128 .Ltmp1870-.Lfunc_begin39       #     jumps to .Ltmp1870
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1869-.Lfunc_begin39       # >> Call Site 22 <<
	.uleb128 .Ltmp1871-.Ltmp1869            #   Call between .Ltmp1869 and .Ltmp1871
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1871-.Lfunc_begin39       # >> Call Site 23 <<
	.uleb128 .Ltmp1872-.Ltmp1871            #   Call between .Ltmp1871 and .Ltmp1872
	.uleb128 .Ltmp1873-.Lfunc_begin39       #     jumps to .Ltmp1873
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1872-.Lfunc_begin39       # >> Call Site 24 <<
	.uleb128 .Ltmp1874-.Ltmp1872            #   Call between .Ltmp1872 and .Ltmp1874
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1874-.Lfunc_begin39       # >> Call Site 25 <<
	.uleb128 .Ltmp1875-.Ltmp1874            #   Call between .Ltmp1874 and .Ltmp1875
	.uleb128 .Ltmp1876-.Lfunc_begin39       #     jumps to .Ltmp1876
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1875-.Lfunc_begin39       # >> Call Site 26 <<
	.uleb128 .Ltmp1877-.Ltmp1875            #   Call between .Ltmp1875 and .Ltmp1877
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1877-.Lfunc_begin39       # >> Call Site 27 <<
	.uleb128 .Ltmp1878-.Ltmp1877            #   Call between .Ltmp1877 and .Ltmp1878
	.uleb128 .Ltmp1879-.Lfunc_begin39       #     jumps to .Ltmp1879
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1878-.Lfunc_begin39       # >> Call Site 28 <<
	.uleb128 .Ltmp1916-.Ltmp1878            #   Call between .Ltmp1878 and .Ltmp1916
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1916-.Lfunc_begin39       # >> Call Site 29 <<
	.uleb128 .Ltmp1917-.Ltmp1916            #   Call between .Ltmp1916 and .Ltmp1917
	.uleb128 .Ltmp1918-.Lfunc_begin39       #     jumps to .Ltmp1918
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1919-.Lfunc_begin39       # >> Call Site 30 <<
	.uleb128 .Ltmp1920-.Ltmp1919            #   Call between .Ltmp1919 and .Ltmp1920
	.uleb128 .Ltmp1921-.Lfunc_begin39       #     jumps to .Ltmp1921
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1823-.Lfunc_begin39       # >> Call Site 31 <<
	.uleb128 .Ltmp1842-.Ltmp1823            #   Call between .Ltmp1823 and .Ltmp1842
	.uleb128 .Ltmp2066-.Lfunc_begin39       #     jumps to .Ltmp2066
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1842-.Lfunc_begin39       # >> Call Site 32 <<
	.uleb128 .Ltmp1849-.Ltmp1842            #   Call between .Ltmp1842 and .Ltmp1849
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1849-.Lfunc_begin39       # >> Call Site 33 <<
	.uleb128 .Ltmp1856-.Ltmp1849            #   Call between .Ltmp1849 and .Ltmp1856
	.uleb128 .Ltmp2066-.Lfunc_begin39       #     jumps to .Ltmp2066
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1856-.Lfunc_begin39       # >> Call Site 34 <<
	.uleb128 .Ltmp1857-.Ltmp1856            #   Call between .Ltmp1856 and .Ltmp1857
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1857-.Lfunc_begin39       # >> Call Site 35 <<
	.uleb128 .Ltmp1858-.Ltmp1857            #   Call between .Ltmp1857 and .Ltmp1858
	.uleb128 .Ltmp1859-.Lfunc_begin39       #     jumps to .Ltmp1859
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1860-.Lfunc_begin39       # >> Call Site 36 <<
	.uleb128 .Ltmp1863-.Ltmp1860            #   Call between .Ltmp1860 and .Ltmp1863
	.uleb128 .Ltmp1864-.Lfunc_begin39       #     jumps to .Ltmp1864
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1863-.Lfunc_begin39       # >> Call Site 37 <<
	.uleb128 .Ltmp1880-.Ltmp1863            #   Call between .Ltmp1863 and .Ltmp1880
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1880-.Lfunc_begin39       # >> Call Site 38 <<
	.uleb128 .Ltmp1881-.Ltmp1880            #   Call between .Ltmp1880 and .Ltmp1881
	.uleb128 .Ltmp1882-.Lfunc_begin39       #     jumps to .Ltmp1882
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1881-.Lfunc_begin39       # >> Call Site 39 <<
	.uleb128 .Ltmp1955-.Ltmp1881            #   Call between .Ltmp1881 and .Ltmp1955
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1955-.Lfunc_begin39       # >> Call Site 40 <<
	.uleb128 .Ltmp1968-.Ltmp1955            #   Call between .Ltmp1955 and .Ltmp1968
	.uleb128 .Ltmp1969-.Lfunc_begin39       #     jumps to .Ltmp1969
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1922-.Lfunc_begin39       # >> Call Site 41 <<
	.uleb128 .Ltmp1923-.Ltmp1922            #   Call between .Ltmp1922 and .Ltmp1923
	.uleb128 .Ltmp1924-.Lfunc_begin39       #     jumps to .Ltmp1924
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1925-.Lfunc_begin39       # >> Call Site 42 <<
	.uleb128 .Ltmp1926-.Ltmp1925            #   Call between .Ltmp1925 and .Ltmp1926
	.uleb128 .Ltmp1927-.Lfunc_begin39       #     jumps to .Ltmp1927
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1928-.Lfunc_begin39       # >> Call Site 43 <<
	.uleb128 .Ltmp1929-.Ltmp1928            #   Call between .Ltmp1928 and .Ltmp1929
	.uleb128 .Ltmp1930-.Lfunc_begin39       #     jumps to .Ltmp1930
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1931-.Lfunc_begin39       # >> Call Site 44 <<
	.uleb128 .Ltmp1932-.Ltmp1931            #   Call between .Ltmp1931 and .Ltmp1932
	.uleb128 .Ltmp1933-.Lfunc_begin39       #     jumps to .Ltmp1933
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1932-.Lfunc_begin39       # >> Call Site 45 <<
	.uleb128 .Ltmp1934-.Ltmp1932            #   Call between .Ltmp1932 and .Ltmp1934
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1934-.Lfunc_begin39       # >> Call Site 46 <<
	.uleb128 .Ltmp1935-.Ltmp1934            #   Call between .Ltmp1934 and .Ltmp1935
	.uleb128 .Ltmp1936-.Lfunc_begin39       #     jumps to .Ltmp1936
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1935-.Lfunc_begin39       # >> Call Site 47 <<
	.uleb128 .Ltmp1883-.Ltmp1935            #   Call between .Ltmp1935 and .Ltmp1883
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1883-.Lfunc_begin39       # >> Call Site 48 <<
	.uleb128 .Ltmp1884-.Ltmp1883            #   Call between .Ltmp1883 and .Ltmp1884
	.uleb128 .Ltmp1885-.Lfunc_begin39       #     jumps to .Ltmp1885
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1886-.Lfunc_begin39       # >> Call Site 49 <<
	.uleb128 .Ltmp1887-.Ltmp1886            #   Call between .Ltmp1886 and .Ltmp1887
	.uleb128 .Ltmp1888-.Lfunc_begin39       #     jumps to .Ltmp1888
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1889-.Lfunc_begin39       # >> Call Site 50 <<
	.uleb128 .Ltmp1890-.Ltmp1889            #   Call between .Ltmp1889 and .Ltmp1890
	.uleb128 .Ltmp1891-.Lfunc_begin39       #     jumps to .Ltmp1891
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1892-.Lfunc_begin39       # >> Call Site 51 <<
	.uleb128 .Ltmp1893-.Ltmp1892            #   Call between .Ltmp1892 and .Ltmp1893
	.uleb128 .Ltmp1894-.Lfunc_begin39       #     jumps to .Ltmp1894
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1895-.Lfunc_begin39       # >> Call Site 52 <<
	.uleb128 .Ltmp1896-.Ltmp1895            #   Call between .Ltmp1895 and .Ltmp1896
	.uleb128 .Ltmp1897-.Lfunc_begin39       #     jumps to .Ltmp1897
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1896-.Lfunc_begin39       # >> Call Site 53 <<
	.uleb128 .Ltmp1898-.Ltmp1896            #   Call between .Ltmp1896 and .Ltmp1898
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1898-.Lfunc_begin39       # >> Call Site 54 <<
	.uleb128 .Ltmp1899-.Ltmp1898            #   Call between .Ltmp1898 and .Ltmp1899
	.uleb128 .Ltmp1900-.Lfunc_begin39       #     jumps to .Ltmp1900
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1901-.Lfunc_begin39       # >> Call Site 55 <<
	.uleb128 .Ltmp1902-.Ltmp1901            #   Call between .Ltmp1901 and .Ltmp1902
	.uleb128 .Ltmp1903-.Lfunc_begin39       #     jumps to .Ltmp1903
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1904-.Lfunc_begin39       # >> Call Site 56 <<
	.uleb128 .Ltmp1905-.Ltmp1904            #   Call between .Ltmp1904 and .Ltmp1905
	.uleb128 .Ltmp1906-.Lfunc_begin39       #     jumps to .Ltmp1906
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1905-.Lfunc_begin39       # >> Call Site 57 <<
	.uleb128 .Ltmp1907-.Ltmp1905            #   Call between .Ltmp1905 and .Ltmp1907
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1907-.Lfunc_begin39       # >> Call Site 58 <<
	.uleb128 .Ltmp1908-.Ltmp1907            #   Call between .Ltmp1907 and .Ltmp1908
	.uleb128 .Ltmp1909-.Lfunc_begin39       #     jumps to .Ltmp1909
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1910-.Lfunc_begin39       # >> Call Site 59 <<
	.uleb128 .Ltmp1911-.Ltmp1910            #   Call between .Ltmp1910 and .Ltmp1911
	.uleb128 .Ltmp1912-.Lfunc_begin39       #     jumps to .Ltmp1912
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1913-.Lfunc_begin39       # >> Call Site 60 <<
	.uleb128 .Ltmp1914-.Ltmp1913            #   Call between .Ltmp1913 and .Ltmp1914
	.uleb128 .Ltmp1915-.Lfunc_begin39       #     jumps to .Ltmp1915
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1914-.Lfunc_begin39       # >> Call Site 61 <<
	.uleb128 .Ltmp1937-.Ltmp1914            #   Call between .Ltmp1914 and .Ltmp1937
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1937-.Lfunc_begin39       # >> Call Site 62 <<
	.uleb128 .Ltmp1938-.Ltmp1937            #   Call between .Ltmp1937 and .Ltmp1938
	.uleb128 .Ltmp1939-.Lfunc_begin39       #     jumps to .Ltmp1939
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1940-.Lfunc_begin39       # >> Call Site 63 <<
	.uleb128 .Ltmp1941-.Ltmp1940            #   Call between .Ltmp1940 and .Ltmp1941
	.uleb128 .Ltmp1942-.Lfunc_begin39       #     jumps to .Ltmp1942
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1943-.Lfunc_begin39       # >> Call Site 64 <<
	.uleb128 .Ltmp1944-.Ltmp1943            #   Call between .Ltmp1943 and .Ltmp1944
	.uleb128 .Ltmp1945-.Lfunc_begin39       #     jumps to .Ltmp1945
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1946-.Lfunc_begin39       # >> Call Site 65 <<
	.uleb128 .Ltmp1947-.Ltmp1946            #   Call between .Ltmp1946 and .Ltmp1947
	.uleb128 .Ltmp1948-.Lfunc_begin39       #     jumps to .Ltmp1948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1949-.Lfunc_begin39       # >> Call Site 66 <<
	.uleb128 .Ltmp1950-.Ltmp1949            #   Call between .Ltmp1949 and .Ltmp1950
	.uleb128 .Ltmp1951-.Lfunc_begin39       #     jumps to .Ltmp1951
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1952-.Lfunc_begin39       # >> Call Site 67 <<
	.uleb128 .Ltmp1953-.Ltmp1952            #   Call between .Ltmp1952 and .Ltmp1953
	.uleb128 .Ltmp1954-.Lfunc_begin39       #     jumps to .Ltmp1954
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1953-.Lfunc_begin39       # >> Call Site 68 <<
	.uleb128 .Ltmp2064-.Ltmp1953            #   Call between .Ltmp1953 and .Ltmp2064
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2064-.Lfunc_begin39       # >> Call Site 69 <<
	.uleb128 .Ltmp2065-.Ltmp2064            #   Call between .Ltmp2064 and .Ltmp2065
	.uleb128 .Ltmp2066-.Lfunc_begin39       #     jumps to .Ltmp2066
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2065-.Lfunc_begin39       # >> Call Site 70 <<
	.uleb128 .Lfunc_end72-.Ltmp2065         #   Call between .Ltmp2065 and .Lfunc_end72
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end39:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIiSaIiEEixEm,"axG",@progbits,_ZNSt5dequeIiSaIiEEixEm,comdat
	.weak	_ZNSt5dequeIiSaIiEEixEm         # -- Begin function _ZNSt5dequeIiSaIiEEixEm
	.p2align	5
	.type	_ZNSt5dequeIiSaIiEEixEm,@function
_ZNSt5dequeIiSaIiEEixEm:                # @_ZNSt5dequeIiSaIiEEixEm
# %bb.0:
	ld.d	$a3, $a0, 16
	ld.d	$a2, $a0, 24
	ld.d	$a0, $a0, 40
	sub.d	$a2, $a3, $a2
	srai.d	$a2, $a2, 2
	add.d	$a2, $a2, $a1
	bltz	$a2, .LBB73_3
# %bb.1:
	ori	$a4, $zero, 127
	bltu	$a4, $a2, .LBB73_4
# %bb.2:
	alsl.d	$a0, $a1, $a3, 2
	ret
.LBB73_3:
	srai.d	$a1, $a2, 7
	b	.LBB73_5
.LBB73_4:
	srli.d	$a1, $a2, 7
.LBB73_5:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 7
	sub.d	$a1, $a2, $a1
	alsl.d	$a0, $a1, $a0, 2
	ret
.Lfunc_end73:
	.size	_ZNSt5dequeIiSaIiEEixEm, .Lfunc_end73-_ZNSt5dequeIiSaIiEEixEm
                                        # -- End function
	.section	.text._ZN2PP8Variable13get_var_valueB5cxx11Ev,"axG",@progbits,_ZN2PP8Variable13get_var_valueB5cxx11Ev,comdat
	.weak	_ZN2PP8Variable13get_var_valueB5cxx11Ev # -- Begin function _ZN2PP8Variable13get_var_valueB5cxx11Ev
	.p2align	5
	.type	_ZN2PP8Variable13get_var_valueB5cxx11Ev,@function
_ZN2PP8Variable13get_var_valueB5cxx11Ev: # @_ZN2PP8Variable13get_var_valueB5cxx11Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	ld.d	$a2, $a1, 32
	move	$fp, $a0
	addi.d	$a0, $a0, 16
	st.d	$a0, $fp, 0
	ld.d	$a1, $a2, 8
	ld.d	$s0, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a2, .LBB74_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB74_2:                               # %._crit_edge.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB74_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a1, .LBB74_5
# %bb.4:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB74_6
.LBB74_5:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB74_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 8
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end74:
	.size	_ZN2PP8Variable13get_var_valueB5cxx11Ev, .Lfunc_end74-_ZN2PP8Variable13get_var_valueB5cxx11Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd19find_matching_enddoERiRb # -- Begin function _ZN2PP3Cmd19find_matching_enddoERiRb
	.p2align	5
	.type	_ZN2PP3Cmd19find_matching_enddoERiRb,@function
_ZN2PP3Cmd19find_matching_enddoERiRb:   # @_ZN2PP3Cmd19find_matching_enddoERiRb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -112
	.cfi_def_cfa_offset 112
	st.d	$ra, $sp, 104                   # 8-byte Folded Spill
	st.d	$fp, $sp, 96                    # 8-byte Folded Spill
	st.d	$s0, $sp, 88                    # 8-byte Folded Spill
	st.d	$s1, $sp, 80                    # 8-byte Folded Spill
	st.d	$s2, $sp, 72                    # 8-byte Folded Spill
	st.d	$s3, $sp, 64                    # 8-byte Folded Spill
	st.d	$s4, $sp, 56                    # 8-byte Folded Spill
	st.d	$s5, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s0, $a0
	ld.d	$a3, $a0, 176
	ld.d	$a4, $a0, 184
	ld.d	$a0, $a0, 200
	move	$fp, $a2
	move	$s1, $a1
	sub.d	$a2, $a3, $a4
	srai.d	$a1, $a2, 7
	bltz	$a2, .LBB75_3
# %bb.1:
	ori	$a2, $zero, 4
	bltu	$a1, $a2, .LBB75_5
# %bb.2:
	srli.d	$a2, $a1, 2
	b	.LBB75_4
.LBB75_3:
	srai.d	$a2, $a2, 9
.LBB75_4:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a3, $a0, $a1
.LBB75_5:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$s4, $sp, 24
	st.d	$s4, $sp, 8
	ld.d	$a1, $a3, 8
	ld.d	$s2, $a3, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 40
	move	$a0, $s4
	bltu	$a1, $a2, .LBB75_7
# %bb.6:                                # %.noexc.i.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB75_7:                               # %._crit_edge.i.i.i
	addi.w	$s3, $zero, -1
	beq	$a1, $s3, .LBB75_11
# %bb.8:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB75_10
# %bb.9:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB75_11
.LBB75_10:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB75_11:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a0, $sp, 40
	ld.d	$s2, $sp, 8
	ori	$a1, $zero, 5
	st.d	$a0, $sp, 16
	bne	$a0, $a1, .LBB75_13
# %bb.12:
	pcalau12i	$a0, %pc_hi20(.L.str.18)
	addi.d	$a1, $a0, %pc_lo12(.L.str.18)
	ori	$a2, $zero, 5
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s5, $a0, 1
	bne	$s2, $s4, .LBB75_14
	b	.LBB75_15
.LBB75_13:
	move	$s5, $zero
	beq	$s2, $s4, .LBB75_15
.LBB75_14:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB75_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	beqz	$s5, .LBB75_18
# %bb.16:
	ld.w	$a1, $s1, 0
	ori	$a0, $zero, 1
	beq	$a1, $a0, .LBB75_69
# %bb.17:
	move	$a0, $zero
	addi.d	$a1, $a1, -1
	st.w	$a1, $s1, 0
	b	.LBB75_69
.LBB75_18:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB75_21
# %bb.19:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB75_23
# %bb.20:
	srli.d	$a2, $a1, 2
	b	.LBB75_22
.LBB75_21:
	srai.d	$a2, $a3, 9
.LBB75_22:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB75_23:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit16
	addi.d	$s4, $sp, 24
	st.d	$s4, $sp, 8
	ld.d	$a1, $a2, 8
	ld.d	$s2, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 40
	move	$a0, $s4
	bltu	$a1, $a2, .LBB75_25
# %bb.24:                               # %.noexc.i.i18
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB75_25:                              # %._crit_edge.i.i.i17
	beq	$a1, $s3, .LBB75_29
# %bb.26:                               # %._crit_edge.i.i.i17
	bnez	$a1, .LBB75_28
# %bb.27:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB75_29
.LBB75_28:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB75_29:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit19
	ld.d	$a1, $sp, 40
	ld.d	$a0, $sp, 8
	ori	$a2, $zero, 2
	st.d	$a1, $sp, 16
	bne	$a1, $a2, .LBB75_31
# %bb.30:
	ld.hu	$a1, $a0, 0
	lu12i.w	$a2, 6
	ori	$a2, $a2, 3940
	xor	$a1, $a1, $a2
	sltui	$s2, $a1, 1
	bne	$a0, $s4, .LBB75_32
	b	.LBB75_33
.LBB75_31:
	move	$s2, $zero
	beq	$a0, $s4, .LBB75_33
.LBB75_32:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB75_33:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
	beqz	$s2, .LBB75_35
# %bb.34:
	ld.w	$a1, $s1, 0
	move	$a0, $zero
	addi.d	$a1, $a1, 1
	st.w	$a1, $s1, 0
	b	.LBB75_69
.LBB75_35:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB75_38
# %bb.36:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB75_40
# %bb.37:
	srli.d	$a2, $a1, 2
	b	.LBB75_39
.LBB75_38:
	srai.d	$a2, $a3, 9
.LBB75_39:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB75_40:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit29
	addi.d	$s2, $sp, 24
	st.d	$s2, $sp, 8
	ld.d	$a1, $a2, 8
	ld.d	$s1, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 40
	move	$a0, $s2
	bltu	$a1, $a2, .LBB75_42
# %bb.41:                               # %.noexc.i.i31
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB75_42:                              # %._crit_edge.i.i.i30
	beq	$a1, $s3, .LBB75_46
# %bb.43:                               # %._crit_edge.i.i.i30
	bnez	$a1, .LBB75_45
# %bb.44:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB75_46
.LBB75_45:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB75_46:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit32
	ld.d	$a0, $sp, 40
	ld.d	$s1, $sp, 8
	ori	$a1, $zero, 10
	st.d	$a0, $sp, 16
	bne	$a0, $a1, .LBB75_48
# %bb.47:
	pcalau12i	$a0, %pc_hi20(.L.str.161)
	addi.d	$a1, $a0, %pc_lo12(.L.str.161)
	ori	$a2, $zero, 10
	move	$a0, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s4, $a0, 1
	bne	$s1, $s2, .LBB75_49
	b	.LBB75_50
.LBB75_48:
	move	$s4, $zero
	beq	$s1, $s2, .LBB75_50
.LBB75_49:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB75_50:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	bnez	$s4, .LBB75_67
# %bb.51:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB75_54
# %bb.52:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB75_56
# %bb.53:
	srli.d	$a2, $a1, 2
	b	.LBB75_55
.LBB75_54:
	srai.d	$a2, $a3, 9
.LBB75_55:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB75_56:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit42
	addi.d	$s1, $sp, 24
	st.d	$s1, $sp, 8
	ld.d	$a1, $a2, 8
	ld.d	$s0, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 40
	move	$a0, $s1
	bltu	$a1, $a2, .LBB75_58
# %bb.57:                               # %.noexc.i.i44
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB75_58:                              # %._crit_edge.i.i.i43
	beq	$a1, $s3, .LBB75_62
# %bb.59:                               # %._crit_edge.i.i.i43
	bnez	$a1, .LBB75_61
# %bb.60:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB75_62
.LBB75_61:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB75_62:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit45
	ld.d	$a0, $sp, 40
	ld.d	$s0, $sp, 8
	ori	$a1, $zero, 13
	st.d	$a0, $sp, 16
	bne	$a0, $a1, .LBB75_64
# %bb.63:
	pcalau12i	$a0, %pc_hi20(.L.str.162)
	addi.d	$a1, $a0, %pc_lo12(.L.str.162)
	ori	$a2, $zero, 13
	move	$a0, $s0
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s2, $a0, 1
	bne	$s0, $s1, .LBB75_65
	b	.LBB75_66
.LBB75_64:
	move	$s2, $zero
	beq	$s0, $s1, .LBB75_66
.LBB75_65:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i48
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB75_66:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50
	beqz	$s2, .LBB75_68
.LBB75_67:
	move	$a0, $zero
	ori	$a1, $zero, 1
	st.b	$a1, $fp, 0
	b	.LBB75_69
.LBB75_68:
	move	$a0, $zero
.LBB75_69:
	ld.d	$s5, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 88                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 96                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 104                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 112
	ret
.Lfunc_end75:
	.size	_ZN2PP3Cmd19find_matching_enddoERiRb, .Lfunc_end75-_ZN2PP3Cmd19find_matching_enddoERiRb
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd18handle_subroutinesERbS1_RNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_RNS2_18basic_stringstreamIcS5_S6_EERi # -- Begin function _ZN2PP3Cmd18handle_subroutinesERbS1_RNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_RNS2_18basic_stringstreamIcS5_S6_EERi
	.p2align	5
	.type	_ZN2PP3Cmd18handle_subroutinesERbS1_RNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_RNS2_18basic_stringstreamIcS5_S6_EERi,@function
_ZN2PP3Cmd18handle_subroutinesERbS1_RNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_RNS2_18basic_stringstreamIcS5_S6_EERi: # @_ZN2PP3Cmd18handle_subroutinesERbS1_RNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_RNS2_18basic_stringstreamIcS5_S6_EERi
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception40
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s2, $a0
	ld.d	$a5, $a0, 176
	ld.d	$a1, $a0, 184
	ld.d	$a0, $a0, 200
	move	$fp, $a4
	move	$s1, $a3
	move	$s0, $a2
	sub.d	$a2, $a5, $a1
	srai.d	$a1, $a2, 7
	bltz	$a2, .LBB76_3
# %bb.1:
	ori	$a2, $zero, 4
	bltu	$a1, $a2, .LBB76_5
# %bb.2:
	srli.d	$a2, $a1, 2
	b	.LBB76_4
.LBB76_3:
	srai.d	$a2, $a2, 9
.LBB76_4:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a5, $a0, $a1
.LBB76_5:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$s5, $sp, 56
	st.d	$s5, $sp, 40
	ld.d	$a1, $a5, 8
	ld.d	$s3, $a5, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s5
	bltu	$a1, $a2, .LBB76_7
# %bb.6:                                # %.noexc.i.i
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB76_7:                               # %._crit_edge.i.i.i
	addi.w	$s4, $zero, -1
	beq	$a1, $s4, .LBB76_11
# %bb.8:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB76_10
# %bb.9:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB76_11
.LBB76_10:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB76_11:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a1, $sp, 8
	ld.d	$a0, $sp, 40
	ori	$a2, $zero, 4
	st.d	$a1, $sp, 48
	bne	$a1, $a2, .LBB76_13
# %bb.12:
	ld.w	$a1, $a0, 0
	lu12i.w	$a2, 444102
	ori	$a2, $a2, 355
	xor	$a1, $a1, $a2
	sltui	$s3, $a1, 1
	bne	$a0, $s5, .LBB76_14
	b	.LBB76_15
.LBB76_13:
	move	$s3, $zero
	beq	$a0, $s5, .LBB76_15
.LBB76_14:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB76_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	beqz	$s3, .LBB76_19
# %bb.16:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	blt	$a3, $s4, .LBB76_22
# %bb.17:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB76_52
# %bb.18:
	addi.d	$a0, $a2, 128
	b	.LBB76_54
.LBB76_19:
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB76_23
# %bb.20:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB76_25
# %bb.21:
	srli.d	$a2, $a1, 2
	b	.LBB76_24
.LBB76_22:
	srai.d	$a2, $a1, 2
	b	.LBB76_53
.LBB76_23:
	srai.d	$a2, $a3, 9
.LBB76_24:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB76_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit29
	addi.d	$s1, $sp, 56
	st.d	$s1, $sp, 40
	ld.d	$a1, $a2, 8
	ld.d	$s0, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s1
	bltu	$a1, $a2, .LBB76_27
# %bb.26:                               # %.noexc.i.i31
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB76_27:                              # %._crit_edge.i.i.i30
	beq	$a1, $s4, .LBB76_30
# %bb.28:                               # %._crit_edge.i.i.i30
	bnez	$a1, .LBB76_31
# %bb.29:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
.LBB76_30:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit32
	ld.d	$a0, $sp, 8
	ori	$a1, $zero, 13
	st.d	$a0, $sp, 48
	beq	$a0, $a1, .LBB76_32
	b	.LBB76_33
.LBB76_31:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 8
	ori	$a1, $zero, 13
	st.d	$a0, $sp, 48
	bne	$a0, $a1, .LBB76_33
.LBB76_32:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit34
	ld.d	$s0, $sp, 40
	pcalau12i	$a0, %pc_hi20(.L.str.162)
	addi.d	$a1, $a0, %pc_lo12(.L.str.162)
	ori	$a2, $zero, 13
	move	$a0, $s0
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB76_71
.LBB76_33:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit34.thread57
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB76_36
# %bb.34:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB76_38
# %bb.35:
	srli.d	$a2, $a1, 2
	b	.LBB76_37
.LBB76_36:
	srai.d	$a2, $a3, 9
.LBB76_37:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB76_38:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit36
	addi.d	$s2, $sp, 24
	st.d	$s2, $sp, 8
	ld.d	$a1, $a2, 8
	ld.d	$s0, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 72
	move	$a0, $s2
	bltu	$a1, $a2, .LBB76_41
# %bb.39:                               # %.noexc.i.i38
.Ltmp2067:
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 72
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2068:
# %bb.40:                               # %.noexc
	ld.d	$a1, $sp, 72
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB76_41:                              # %._crit_edge.i.i.i37
	beq	$a1, $s4, .LBB76_45
# %bb.42:                               # %._crit_edge.i.i.i37
	bnez	$a1, .LBB76_44
# %bb.43:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB76_45
.LBB76_44:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB76_45:
	ld.d	$a0, $sp, 72
	ld.d	$s0, $sp, 8
	ori	$a1, $zero, 6
	st.d	$a0, $sp, 16
	bne	$a0, $a1, .LBB76_47
# %bb.46:
	pcalau12i	$a0, %pc_hi20(.L.str.17)
	addi.d	$a1, $a0, %pc_lo12(.L.str.17)
	ori	$a2, $zero, 6
	move	$a0, $s0
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s3, $a0, 1
	bne	$s0, $s2, .LBB76_48
	b	.LBB76_49
.LBB76_47:
	move	$s3, $zero
	beq	$s0, $s2, .LBB76_49
.LBB76_48:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB76_49:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	ld.d	$s0, $sp, 40
	beq	$s0, $s1, .LBB76_51
.LBB76_50:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB76_51:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	bnez	$s3, .LBB76_76
	b	.LBB76_77
.LBB76_52:
	srli.d	$a2, $a1, 2
.LBB76_53:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB76_54:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit18
	addi.d	$s2, $sp, 56
	st.d	$s2, $sp, 40
	ld.d	$a1, $a0, 8
	ld.d	$fp, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s2
	bltu	$a1, $a2, .LBB76_56
# %bb.55:                               # %.noexc.i.i20
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB76_56:                              # %._crit_edge.i.i.i19
	beq	$a1, $s4, .LBB76_60
# %bb.57:                               # %._crit_edge.i.i.i19
	bnez	$a1, .LBB76_59
# %bb.58:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB76_60
.LBB76_59:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB76_60:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit21
	ld.d	$a2, $sp, 8
	ld.d	$a0, $s1, 0
	addi.d	$a1, $s1, 16
	st.d	$a2, $sp, 48
	beq	$a0, $a1, .LBB76_64
# %bb.61:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 40
	beq	$a1, $s2, .LBB76_67
# %bb.62:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i
	ld.d	$a4, $sp, 56
	ld.d	$a3, $s1, 16
	st.d	$a1, $s1, 0
	st.d	$a2, $s1, 8
	st.d	$a4, $s1, 16
	beqz	$a0, .LBB76_66
# %bb.63:
	st.d	$a0, $sp, 40
	st.d	$a3, $sp, 56
	st.d	$zero, $sp, 48
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB76_74
	b	.LBB76_75
.LBB76_64:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 40
	beq	$a1, $s2, .LBB76_67
# %bb.65:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit24.i.thread
	ld.d	$a0, $sp, 56
	st.d	$a1, $s1, 0
	st.d	$a2, $s1, 8
	st.d	$a0, $s1, 16
.LBB76_66:
	st.d	$s2, $sp, 40
	move	$a0, $s2
	st.d	$zero, $sp, 48
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB76_74
	b	.LBB76_75
.LBB76_67:
	addi.d	$a3, $sp, 40
	beq	$a3, $s1, .LBB76_78
# %bb.68:
	beqz	$a2, .LBB76_73
# %bb.69:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB76_72
# %bb.70:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB76_73
.LBB76_71:
	ori	$s3, $zero, 1
	bne	$s0, $s1, .LBB76_50
	b	.LBB76_51
.LBB76_72:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB76_73:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 48
	ld.d	$a1, $s1, 0
	st.d	$a0, $s1, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 40
	st.d	$zero, $sp, 48
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 40
	beq	$a0, $s2, .LBB76_75
.LBB76_74:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i22
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB76_75:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit24
	move	$fp, $s0
.LBB76_76:                              # %.sink.split
	ori	$a0, $zero, 1
	st.b	$a0, $fp, 0
.LBB76_77:
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB76_78:
	move	$a0, $a1
	st.d	$zero, $sp, 48
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 40
	bne	$a0, $s2, .LBB76_74
	b	.LBB76_75
.LBB76_79:
.Ltmp2069:
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s1, .LBB76_81
# %bb.80:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i51
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB76_81:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit53
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end76:
	.size	_ZN2PP3Cmd18handle_subroutinesERbS1_RNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_RNS2_18basic_stringstreamIcS5_S6_EERi, .Lfunc_end76-_ZN2PP3Cmd18handle_subroutinesERbS1_RNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_RNS2_18basic_stringstreamIcS5_S6_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table76:
.Lexception40:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Lfunc_begin40-.Lfunc_begin40  # >> Call Site 1 <<
	.uleb128 .Ltmp2067-.Lfunc_begin40       #   Call between .Lfunc_begin40 and .Ltmp2067
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2067-.Lfunc_begin40       # >> Call Site 2 <<
	.uleb128 .Ltmp2068-.Ltmp2067            #   Call between .Ltmp2067 and .Ltmp2068
	.uleb128 .Ltmp2069-.Lfunc_begin40       #     jumps to .Ltmp2069
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2068-.Lfunc_begin40       # >> Call Site 3 <<
	.uleb128 .Lfunc_end76-.Ltmp2068         #   Call between .Ltmp2068 and .Lfunc_end76
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end40:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd15find_subroutineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd15find_subroutineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd15find_subroutineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd15find_subroutineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd15find_subroutineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception41
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a0
	ld.d	$a2, $a0, 232
	ld.d	$a0, $a0, 200
	sub.d	$a3, $a2, $a0
	srli.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	ld.d	$a4, $s0, 208
	ld.d	$a5, $s0, 216
	sub.d	$a3, $a3, $a2
	ld.d	$a6, $s0, 192
	ld.d	$a2, $s0, 176
	sub.d	$a4, $a4, $a5
	srli.d	$a4, $a4, 7
	alsl.d	$a3, $a3, $a4, 2
	sub.d	$a4, $a6, $a2
	srli.d	$a4, $a4, 7
	add.w	$a3, $a3, $a4
	ori	$a4, $zero, 2
	bge	$a3, $a4, .LBB77_2
# %bb.1:
	move	$a0, $zero
	b	.LBB77_17
.LBB77_2:
	move	$fp, $a1
	ld.d	$a1, $s0, 184
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB77_5
# %bb.3:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB77_7
# %bb.4:
	srli.d	$a2, $a1, 2
	b	.LBB77_6
.LBB77_5:
	srai.d	$a2, $a3, 9
.LBB77_6:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB77_7:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$s2, $sp, 56
	st.d	$s2, $sp, 40
	ld.d	$a1, $a2, 8
	ld.d	$s1, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s2
	bltu	$a1, $a2, .LBB77_9
# %bb.8:                                # %.noexc.i.i
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB77_9:                               # %._crit_edge.i.i.i
	addi.w	$s3, $zero, -1
	beq	$a1, $s3, .LBB77_13
# %bb.10:                               # %._crit_edge.i.i.i
	bnez	$a1, .LBB77_12
# %bb.11:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB77_13
.LBB77_12:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB77_13:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a0, $sp, 8
	ld.d	$s1, $sp, 40
	ori	$a1, $zero, 10
	st.d	$a0, $sp, 48
	bne	$a0, $a1, .LBB77_15
# %bb.14:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
	pcalau12i	$a0, %pc_hi20(.L.str.161)
	addi.d	$a1, $a0, %pc_lo12(.L.str.161)
	ori	$a2, $zero, 10
	move	$a0, $s1
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB77_18
.LBB77_15:
	move	$a0, $zero
	beq	$s1, $s2, .LBB77_17
.LBB77_16:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i18
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	move	$fp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
.LBB77_17:
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB77_18:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	blt	$a3, $s3, .LBB77_21
# %bb.19:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB77_22
# %bb.20:
	addi.d	$a0, $a2, 128
	b	.LBB77_24
.LBB77_21:
	srai.d	$a2, $a1, 2
	b	.LBB77_23
.LBB77_22:
	srli.d	$a2, $a1, 2
.LBB77_23:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB77_24:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit13
	addi.d	$s1, $sp, 24
	st.d	$s1, $sp, 8
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 72
	move	$a0, $s1
	bltu	$a1, $a2, .LBB77_27
# %bb.25:                               # %.noexc.i.i15
.Ltmp2070:
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 72
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2071:
# %bb.26:                               # %.noexc
	ld.d	$a1, $sp, 72
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB77_27:                              # %._crit_edge.i.i.i14
	beq	$a1, $s3, .LBB77_30
# %bb.28:                               # %._crit_edge.i.i.i14
	bnez	$a1, .LBB77_33
# %bb.29:
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
.LBB77_30:
	ld.d	$a2, $sp, 72
	ld.d	$a0, $fp, 8
	st.d	$a2, $sp, 16
	bne	$a2, $a0, .LBB77_34
.LBB77_31:
	ld.d	$s0, $sp, 8
	beqz	$a2, .LBB77_37
# %bb.32:
	ld.d	$a1, $fp, 0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$a0, $a0, 1
	bne	$s0, $s1, .LBB77_35
	b	.LBB77_36
.LBB77_33:
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 72
	ld.d	$a0, $fp, 8
	st.d	$a2, $sp, 16
	beq	$a2, $a0, .LBB77_31
.LBB77_34:                              # %._crit_edge
	ld.d	$s0, $sp, 8
	move	$a0, $zero
	beq	$s0, $s1, .LBB77_36
.LBB77_35:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	move	$fp, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
.LBB77_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s1, $sp, 40
	bne	$s1, $s2, .LBB77_16
	b	.LBB77_17
.LBB77_37:
	ori	$a0, $zero, 1
	bne	$s0, $s1, .LBB77_35
	b	.LBB77_36
.LBB77_38:
.Ltmp2072:
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s2, .LBB77_40
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB77_40:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit23
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end77:
	.size	_ZN2PP3Cmd15find_subroutineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end77-_ZN2PP3Cmd15find_subroutineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table77:
.Lexception41:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Lfunc_begin41-.Lfunc_begin41  # >> Call Site 1 <<
	.uleb128 .Ltmp2070-.Lfunc_begin41       #   Call between .Lfunc_begin41 and .Ltmp2070
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2070-.Lfunc_begin41       # >> Call Site 2 <<
	.uleb128 .Ltmp2071-.Ltmp2070            #   Call between .Ltmp2070 and .Ltmp2071
	.uleb128 .Ltmp2072-.Lfunc_begin41       #     jumps to .Ltmp2072
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2071-.Lfunc_begin41       # >> Call Site 3 <<
	.uleb128 .Lfunc_end77-.Ltmp2071         #   Call between .Ltmp2071 and .Lfunc_end77
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end41:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd13get_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEERNS2_18basic_stringstreamIcS5_S6_EERi # -- Begin function _ZN2PP3Cmd13get_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEERNS2_18basic_stringstreamIcS5_S6_EERi
	.p2align	5
	.type	_ZN2PP3Cmd13get_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEERNS2_18basic_stringstreamIcS5_S6_EERi,@function
_ZN2PP3Cmd13get_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEERNS2_18basic_stringstreamIcS5_S6_EERi: # @_ZN2PP3Cmd13get_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEERNS2_18basic_stringstreamIcS5_S6_EERi
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception42
# %bb.0:
	addi.d	$sp, $sp, -336
	.cfi_def_cfa_offset 336
	st.d	$ra, $sp, 328                   # 8-byte Folded Spill
	st.d	$fp, $sp, 320                   # 8-byte Folded Spill
	st.d	$s0, $sp, 312                   # 8-byte Folded Spill
	st.d	$s1, $sp, 304                   # 8-byte Folded Spill
	st.d	$s2, $sp, 296                   # 8-byte Folded Spill
	st.d	$s3, $sp, 288                   # 8-byte Folded Spill
	st.d	$s4, $sp, 280                   # 8-byte Folded Spill
	st.d	$s5, $sp, 272                   # 8-byte Folded Spill
	st.d	$s6, $sp, 264                   # 8-byte Folded Spill
	st.d	$s7, $sp, 256                   # 8-byte Folded Spill
	st.d	$s8, $sp, 248                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s3, $a4
	move	$s4, $a3
	move	$s2, $a2
	move	$s7, $a1
	move	$fp, $a0
	addi.d	$a0, $sp, 104
	ori	$a2, $zero, 80
	move	$a1, $zero
	pcaddu18i	$ra, %call36(memset)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 104
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm)
	jirl	$ra, $ra, 0
	move	$s0, $zero
	move	$s5, $zero
	ori	$s6, $zero, 3
	b	.LBB78_3
	.p2align	4, , 16
.LBB78_1:                               #   in Loop: Header=BB78_3 Depth=1
.Ltmp2123:
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2124:
.LBB78_2:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EE9push_backERKS1_.exit
                                        #   in Loop: Header=BB78_3 Depth=1
	addi.d	$s5, $s5, 1
	addi.d	$s0, $s0, 128
.LBB78_3:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s5, $a2, .LBB78_12
# %bb.4:                                #   in Loop: Header=BB78_3 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s5, $a2
	bltz	$a2, .LBB78_7
# %bb.5:                                #   in Loop: Header=BB78_3 Depth=1
	bltu	$s6, $a2, .LBB78_8
# %bb.6:                                #   in Loop: Header=BB78_3 Depth=1
	add.d	$a1, $a1, $s0
	ld.d	$a2, $sp, 168
	ld.d	$a0, $sp, 152
	addi.d	$a2, $a2, -128
	bne	$a0, $a2, .LBB78_10
	b	.LBB78_1
	.p2align	4, , 16
.LBB78_7:                               #   in Loop: Header=BB78_3 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB78_9
	.p2align	4, , 16
.LBB78_8:                               #   in Loop: Header=BB78_3 Depth=1
	srli.d	$a1, $a2, 2
.LBB78_9:                               #   in Loop: Header=BB78_3 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
	ld.d	$a2, $sp, 168
	ld.d	$a0, $sp, 152
	addi.d	$a2, $a2, -128
	beq	$a0, $a2, .LBB78_1
.LBB78_10:                              #   in Loop: Header=BB78_3 Depth=1
.Ltmp2121:
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2122:
# %bb.11:                               # %.noexc
                                        #   in Loop: Header=BB78_3 Depth=1
	ld.d	$a0, $sp, 152
	addi.d	$a0, $a0, 128
	st.d	$a0, $sp, 152
	b	.LBB78_2
.LBB78_12:
	ld.d	$a2, $fp, 184
	addi.d	$s6, $fp, 160
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB78_15
# %bb.13:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB78_16
# %bb.14:
	ld.d	$a3, $a0, 0
	b	.LBB78_18
.LBB78_15:
	srai.d	$a1, $a3, 9
	b	.LBB78_17
.LBB78_16:
	srli.d	$a1, $a2, 2
.LBB78_17:
	slli.d	$a3, $a1, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a1, $a0, 3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a3, $a1
.LBB78_18:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i
	st.d	$a1, $sp, 216
	st.d	$a3, $sp, 224
	addi.d	$a1, $a3, 512
	st.d	$a1, $sp, 232
	st.d	$a0, $sp, 240
.Ltmp2073:
	addi.d	$a0, $sp, 184
	addi.d	$a2, $sp, 216
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp2074:
# %bb.19:
	ld.d	$a1, $fp, 176
	ld.d	$a2, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB78_22
# %bb.20:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB78_23
# %bb.21:
	ld.d	$a3, $a0, 0
	b	.LBB78_25
.LBB78_22:
	srai.d	$a1, $a3, 9
	b	.LBB78_24
.LBB78_23:
	srli.d	$a1, $a2, 2
.LBB78_24:
	slli.d	$a3, $a1, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a1, $a0, 3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a3, $a1
.LBB78_25:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i52
	st.d	$a1, $sp, 216
	st.d	$a3, $sp, 224
	addi.d	$a1, $a3, 512
	st.d	$a1, $sp, 232
	st.d	$a0, $sp, 240
.Ltmp2075:
	addi.d	$a0, $sp, 184
	addi.d	$a2, $sp, 216
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp2076:
# %bb.26:
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	blez	$a2, .LBB78_52
# %bb.27:
	ld.d	$a2, $fp, 184
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB78_30
# %bb.28:
	ori	$a3, $zero, 4
	bltu	$a2, $a3, .LBB78_32
# %bb.29:
	srli.d	$a1, $a2, 2
	b	.LBB78_31
.LBB78_30:
	srai.d	$a1, $a3, 9
.LBB78_31:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB78_32:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit60
	addi.d	$s0, $sp, 232
	st.d	$s0, $sp, 216
	ld.d	$a2, $a1, 8
	ld.d	$s5, $a1, 0
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 184
	move	$a0, $s0
	bltu	$a2, $a1, .LBB78_35
# %bb.33:                               # %.noexc.i.i
.Ltmp2077:
	addi.d	$a0, $sp, 216
	addi.d	$a1, $sp, 184
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2078:
# %bb.34:                               # %.noexc61
	ld.d	$a2, $sp, 184
	st.d	$a0, $sp, 216
	st.d	$a2, $sp, 232
.LBB78_35:                              # %._crit_edge.i.i.i
	addi.w	$a1, $zero, -1
	beq	$a2, $a1, .LBB78_39
# %bb.36:                               # %._crit_edge.i.i.i
	bnez	$a2, .LBB78_38
# %bb.37:
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB78_39
.LBB78_38:
	addi.d	$a2, $a2, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB78_39:
	ld.d	$a1, $sp, 184
	ld.d	$a0, $sp, 216
	ori	$a2, $zero, 1
	st.d	$a1, $sp, 224
	bne	$a1, $a2, .LBB78_41
# %bb.40:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -40
	sltui	$s1, $a1, 1
	bne	$a0, $s0, .LBB78_42
	b	.LBB78_43
.LBB78_41:
	move	$s1, $zero
	beq	$a0, $s0, .LBB78_43
.LBB78_42:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB78_43:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$a0, $fp, 200
	ld.d	$a1, $fp, 176
	beqz	$s1, .LBB78_52
# %bb.44:
	ld.d	$a2, $fp, 184
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB78_47
# %bb.45:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB78_48
# %bb.46:
	ld.d	$a3, $a0, 0
	b	.LBB78_50
.LBB78_47:
	srai.d	$a1, $a3, 9
	b	.LBB78_49
.LBB78_48:
	srli.d	$a1, $a2, 2
.LBB78_49:
	slli.d	$a3, $a1, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a1, $a0, 3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a3, $a1
.LBB78_50:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i62
	st.d	$a1, $sp, 216
	st.d	$a3, $sp, 224
	addi.d	$a1, $a3, 512
	st.d	$a1, $sp, 232
	st.d	$a0, $sp, 240
.Ltmp2080:
	addi.d	$a0, $sp, 184
	addi.d	$a2, $sp, 216
	move	$a1, $s6
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.Ltmp2081:
# %bb.51:                               # %_ZN2PP3Cmd10erase_wordEi.exit67
	ld.d	$a0, $fp, 200
	ld.d	$a1, $fp, 176
.LBB78_52:
	ld.d	$a2, $fp, 232
	sub.d	$a3, $a2, $a0
	srai.d	$a3, $a3, 3
	ld.d	$a4, $fp, 208
	ld.d	$a5, $fp, 216
	sltu	$a2, $zero, $a2
	sub.d	$a2, $a3, $a2
	ld.d	$a3, $fp, 192
	sub.d	$a4, $a4, $a5
	srai.d	$a4, $a4, 7
	alsl.d	$a2, $a2, $a4, 2
	sub.d	$a3, $a3, $a1
	srai.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	blez	$a2, .LBB78_72
# %bb.53:
	slli.d	$a2, $a2, 32
	ori	$a3, $zero, 0
	ld.d	$a4, $fp, 184
	lu32i.d	$a3, -1
	add.d	$a2, $a2, $a3
	srai.d	$a3, $a2, 32
	sub.d	$a2, $a1, $a4
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $a3
	bltz	$a2, .LBB78_56
# %bb.54:
	ori	$a4, $zero, 3
	bltu	$a4, $a2, .LBB78_57
# %bb.55:
	slli.d	$a0, $a3, 7
	add.d	$a0, $a1, $a0
	b	.LBB78_59
.LBB78_56:
	srai.d	$a1, $a2, 2
	b	.LBB78_58
.LBB78_57:
	srli.d	$a1, $a2, 2
.LBB78_58:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB78_59:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit74
	addi.d	$s0, $sp, 232
	st.d	$s0, $sp, 216
	ld.d	$a1, $a0, 8
	ld.d	$s5, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 184
	move	$a0, $s0
	bltu	$a1, $a2, .LBB78_62
# %bb.60:                               # %.noexc.i.i76
.Ltmp2082:
	addi.d	$a0, $sp, 216
	addi.d	$a1, $sp, 184
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2083:
# %bb.61:                               # %.noexc77
	ld.d	$a1, $sp, 184
	st.d	$a0, $sp, 216
	st.d	$a1, $sp, 232
.LBB78_62:                              # %._crit_edge.i.i.i75
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB78_66
# %bb.63:                               # %._crit_edge.i.i.i75
	bnez	$a1, .LBB78_65
# %bb.64:
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB78_66
.LBB78_65:
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB78_66:
	ld.d	$a1, $sp, 184
	ld.d	$a0, $sp, 216
	ori	$a2, $zero, 1
	st.d	$a1, $sp, 224
	bne	$a1, $a2, .LBB78_68
# %bb.67:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -41
	sltui	$s1, $a1, 1
	bne	$a0, $s0, .LBB78_69
	b	.LBB78_70
.LBB78_68:
	move	$s1, $zero
	beq	$a0, $s0, .LBB78_70
.LBB78_69:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i81
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB78_70:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit83
	beqz	$s1, .LBB78_72
# %bb.71:
.Ltmp2085:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15erase_last_wordEv)
	jirl	$ra, $ra, 0
.Ltmp2086:
.LBB78_72:
	ld.d	$a0, $fp, 232
	ld.d	$a1, $fp, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $fp, 208
	ld.d	$a3, $fp, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $fp, 192
	ld.d	$a4, $fp, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.w	$a0, $a0, $a1
	blez	$a0, .LBB78_80
# %bb.73:
.Ltmp2087:
	move	$a0, $fp
	move	$a1, $s4
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd9math_evalERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2088:
# %bb.74:                               # %._crit_edge.i.i
	ld.d	$a0, $fp, 232
	ld.d	$a1, $fp, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $fp, 208
	ld.d	$a3, $fp, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $fp, 192
	ld.d	$a4, $fp, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	addi.d	$a0, $a0, -1
	st.w	$a0, $sp, 216
	addi.d	$s0, $sp, 88
	st.d	$s0, $sp, 72
	ori	$a0, $zero, 45
	st.h	$a0, $sp, 88
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 80
.Ltmp2090:
	addi.d	$a2, $sp, 216
	addi.d	$a3, $sp, 72
	move	$a0, $fp
	move	$a1, $zero
	move	$a4, $s4
	move	$a5, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_)
	jirl	$ra, $ra, 0
.Ltmp2091:
# %bb.75:
	ld.d	$a0, $sp, 72
	beq	$a0, $s0, .LBB78_77
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i90
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB78_77:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92
	ld.d	$a0, $fp, 232
	ld.d	$a1, $fp, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $fp, 208
	ld.d	$a3, $fp, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $fp, 192
	ld.d	$a4, $fp, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	addi.d	$a0, $a0, -1
	st.w	$a0, $sp, 216
	addi.d	$s0, $sp, 56
	st.d	$s0, $sp, 40
	ori	$a0, $zero, 43
	st.h	$a0, $sp, 56
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 48
.Ltmp2093:
	addi.d	$a2, $sp, 216
	addi.d	$a3, $sp, 40
	move	$a0, $fp
	move	$a1, $zero
	move	$a4, $s4
	move	$a5, $s3
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15handle_unary_opEiRiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS2_18basic_stringstreamIcS5_S6_EES1_)
	jirl	$ra, $ra, 0
.Ltmp2094:
# %bb.78:
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB78_80
# %bb.79:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i98
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB78_80:
	st.d	$s7, $sp, 24                    # 8-byte Folded Spill
	st.d	$s2, $sp, 32                    # 8-byte Folded Spill
	ld.d	$s0, $fp, 304
	ld.d	$s1, $fp, 312
	beq	$s1, $s0, .LBB78_86
# %bb.81:                               # %.lr.ph.i.i.i.preheader
	addi.d	$s2, $s0, 16
	b	.LBB78_83
	.p2align	4, , 16
.LBB78_82:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB78_83 Depth=1
	addi.d	$a0, $s2, 16
	addi.d	$s2, $s2, 32
	beq	$a0, $s1, .LBB78_85
.LBB78_83:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, -16
	beq	$s2, $a0, .LBB78_82
# %bb.84:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB78_83 Depth=1
	ld.d	$a1, $s2, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB78_82
.LBB78_85:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	st.d	$s0, $fp, 312
.LBB78_86:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv.exit
	st.d	$s6, $sp, 0                     # 8-byte Folded Spill
	move	$s8, $zero
	move	$s0, $zero
	ld.d	$a0, $fp, 352
	addi.d	$s1, $sp, 232
	addi.d	$a1, $fp, 304
	st.d	$a1, $sp, 16                    # 8-byte Folded Spill
	addi.d	$a1, $fp, 352
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	st.d	$a0, $fp, 368
	st.w	$zero, $fp, 376
	addi.d	$s4, $sp, 232
	addi.w	$s6, $zero, -1
	b	.LBB78_89
.LBB78_87:                              #   in Loop: Header=BB78_89 Depth=1
	ld.wu	$a2, $fp, 376
	addi.d	$a0, $a0, -13
	sltui	$a3, $a0, 1
.Ltmp2118:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb)
	jirl	$ra, $ra, 0
.Ltmp2119:
	.p2align	4, , 16
.LBB78_88:                              # %_ZNSt6vectorIbSaIbEE9push_backEb.exit155
                                        #   in Loop: Header=BB78_89 Depth=1
	addi.d	$s0, $s0, 1
	addi.d	$s8, $s8, 128
.LBB78_89:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $fp, 232
	ld.d	$s7, $fp, 200
	sub.d	$a1, $a0, $s7
	srli.d	$a3, $a1, 3
	sltu	$a4, $zero, $a0
	ld.d	$a1, $fp, 208
	ld.d	$a2, $fp, 216
	sub.d	$a3, $a3, $a4
	ld.d	$s2, $fp, 192
	ld.d	$s5, $fp, 176
	sub.d	$a4, $a1, $a2
	srli.d	$a4, $a4, 7
	alsl.d	$a3, $a3, $a4, 2
	sub.d	$a4, $s2, $s5
	ld.d	$s3, $fp, 184
	srli.d	$a4, $a4, 7
	add.w	$a3, $a3, $a4
	bge	$s0, $a3, .LBB78_163
# %bb.90:                               #   in Loop: Header=BB78_89 Depth=1
	sub.d	$a0, $s5, $s3
	srai.d	$a0, $a0, 7
	add.d	$a0, $s0, $a0
	bltz	$a0, .LBB78_93
# %bb.91:                               #   in Loop: Header=BB78_89 Depth=1
	ori	$a1, $zero, 4
	bgeu	$a0, $a1, .LBB78_94
# %bb.92:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit111.thread
                                        #   in Loop: Header=BB78_89 Depth=1
	add.d	$a0, $s5, $s8
	ld.w	$a0, $a0, 32
	ori	$a1, $zero, 12
	beq	$a0, $a1, .LBB78_88
	b	.LBB78_98
	.p2align	4, , 16
.LBB78_93:                              #   in Loop: Header=BB78_89 Depth=1
	srai.d	$a1, $a0, 2
	b	.LBB78_95
	.p2align	4, , 16
.LBB78_94:                              #   in Loop: Header=BB78_89 Depth=1
	srli.d	$a1, $a0, 2
.LBB78_95:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit111
                                        #   in Loop: Header=BB78_89 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $s7, $a2
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a0, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a2, $a1
	ld.w	$a1, $a1, 32
	ori	$a2, $zero, 12
	beq	$a1, $a2, .LBB78_88
# %bb.96:                               #   in Loop: Header=BB78_89 Depth=1
	bltz	$a0, .LBB78_99
# %bb.97:                               #   in Loop: Header=BB78_89 Depth=1
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB78_100
.LBB78_98:                              #   in Loop: Header=BB78_89 Depth=1
	add.d	$a0, $s5, $s8
	b	.LBB78_102
.LBB78_99:                              #   in Loop: Header=BB78_89 Depth=1
	srai.d	$a1, $a0, 2
	b	.LBB78_101
.LBB78_100:                             #   in Loop: Header=BB78_89 Depth=1
	srli.d	$a1, $a0, 2
.LBB78_101:                             #   in Loop: Header=BB78_89 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $s7, $a2
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB78_102:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit113
                                        #   in Loop: Header=BB78_89 Depth=1
	st.d	$s1, $sp, 216
	ld.d	$a1, $a0, 8
	ld.d	$s7, $a0, 0
	st.d	$a1, $sp, 184
	move	$a0, $s1
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB78_105
# %bb.103:                              # %.noexc.i.i115
                                        #   in Loop: Header=BB78_89 Depth=1
.Ltmp2104:
	addi.d	$a0, $sp, 216
	addi.d	$a1, $sp, 184
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2105:
# %bb.104:                              # %.noexc116
                                        #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a1, $sp, 184
	st.d	$a0, $sp, 216
	st.d	$a1, $sp, 232
.LBB78_105:                             # %._crit_edge.i.i.i114
                                        #   in Loop: Header=BB78_89 Depth=1
	beq	$a1, $s6, .LBB78_109
# %bb.106:                              # %._crit_edge.i.i.i114
                                        #   in Loop: Header=BB78_89 Depth=1
	bnez	$a1, .LBB78_108
# %bb.107:                              #   in Loop: Header=BB78_89 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB78_109
.LBB78_108:                             #   in Loop: Header=BB78_89 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB78_109:                             #   in Loop: Header=BB78_89 Depth=1
	ld.d	$s2, $sp, 184
	ld.d	$s7, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $s7, 8
	ld.d	$a0, $s7, 16
	st.d	$s2, $sp, 224
	beq	$s3, $a0, .LBB78_112
# %bb.110:                              #   in Loop: Header=BB78_89 Depth=1
	addi.d	$a0, $s3, 16
	st.d	$a0, $s3, 0
	ld.d	$a1, $sp, 216
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	beq	$a1, $s1, .LBB78_115
# %bb.111:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB78_89 Depth=1
	st.d	$a1, $s3, 0
	ld.d	$a0, $sp, 232
	st.d	$a0, $s3, 16
	b	.LBB78_116
.LBB78_112:                             #   in Loop: Header=BB78_89 Depth=1
.Ltmp2107:
	addi.d	$a1, $sp, 216
	move	$a0, $s7
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2108:
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
# %bb.113:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
                                        #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a0, $sp, 216
	beq	$a0, $s1, .LBB78_117
# %bb.114:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i120
                                        #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB78_117
.LBB78_115:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
                                        #   in Loop: Header=BB78_89 Depth=1
	addi.d	$a2, $s2, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB78_116:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit.thread
                                        #   in Loop: Header=BB78_89 Depth=1
	st.d	$s2, $s3, 8
	ld.d	$a0, $s7, 8
	st.d	$s1, $sp, 216
	st.d	$zero, $sp, 224
	addi.d	$a0, $a0, 32
	st.d	$a0, $s7, 8
.LBB78_117:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit122
                                        #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s0, $a1
	bltz	$a1, .LBB78_121
# %bb.118:                              #   in Loop: Header=BB78_89 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB78_122
# %bb.119:                              #   in Loop: Header=BB78_89 Depth=1
	add.d	$a0, $a2, $s8
	ld.d	$a1, $s5, 16
	ld.d	$a2, $s5, 32
	ld.w	$a0, $a0, 32
	bne	$a1, $a2, .LBB78_124
.LBB78_120:                             #   in Loop: Header=BB78_89 Depth=1
	ld.wu	$a2, $s5, 24
	addi.d	$a0, $a0, -13
	sltui	$a3, $a0, 1
.Ltmp2110:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb)
	jirl	$ra, $ra, 0
.Ltmp2111:
	b	.LBB78_130
.LBB78_121:                             #   in Loop: Header=BB78_89 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB78_123
.LBB78_122:                             #   in Loop: Header=BB78_89 Depth=1
	srli.d	$a2, $a1, 2
.LBB78_123:                             #   in Loop: Header=BB78_89 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	ld.d	$a1, $s5, 16
	ld.d	$a2, $s5, 32
	ld.w	$a0, $a0, 32
	beq	$a1, $a2, .LBB78_120
.LBB78_124:                             #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a2, $s5, 24
	addi.w	$a3, $a2, 0
	addi.d	$a4, $a2, 1
	st.w	$a4, $s5, 24
	ori	$a4, $zero, 63
	bne	$a3, $a4, .LBB78_126
# %bb.125:                              #   in Loop: Header=BB78_89 Depth=1
	st.w	$zero, $s5, 24
	addi.d	$a3, $a1, 8
	st.d	$a3, $s5, 16
.LBB78_126:                             # %_ZNSt13_Bit_iteratorppEi.exit.i
                                        #   in Loop: Header=BB78_89 Depth=1
	bstrpick.d	$a2, $a2, 31, 0
	ori	$a3, $zero, 1
	sll.d	$a2, $a3, $a2
	ori	$a3, $zero, 13
	bne	$a0, $a3, .LBB78_128
# %bb.127:                              #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	b	.LBB78_129
.LBB78_128:                             #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
.LBB78_129:                             # %_ZNSt6vectorIbSaIbEE9push_backEb.exit.sink.split
                                        #   in Loop: Header=BB78_89 Depth=1
	st.d	$a0, $a1, 0
.LBB78_130:                             # %_ZNSt6vectorIbSaIbEE9push_backEb.exit
                                        #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s0, $a1
	bltz	$a1, .LBB78_133
# %bb.131:                              #   in Loop: Header=BB78_89 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB78_134
# %bb.132:                              #   in Loop: Header=BB78_89 Depth=1
	add.d	$a0, $a2, $s8
	b	.LBB78_136
.LBB78_133:                             #   in Loop: Header=BB78_89 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB78_135
.LBB78_134:                             #   in Loop: Header=BB78_89 Depth=1
	srli.d	$a2, $a1, 2
.LBB78_135:                             #   in Loop: Header=BB78_89 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB78_136:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit129
                                        #   in Loop: Header=BB78_89 Depth=1
	st.d	$s4, $sp, 216
	ld.d	$a1, $a0, 8
	ld.d	$s7, $a0, 0
	st.d	$a1, $sp, 184
	move	$a0, $s4
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB78_139
# %bb.137:                              # %.noexc.i.i131
                                        #   in Loop: Header=BB78_89 Depth=1
.Ltmp2112:
	addi.d	$a0, $sp, 216
	addi.d	$a1, $sp, 184
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2113:
# %bb.138:                              # %.noexc132
                                        #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a1, $sp, 184
	st.d	$a0, $sp, 216
	st.d	$a1, $sp, 232
.LBB78_139:                             # %._crit_edge.i.i.i130
                                        #   in Loop: Header=BB78_89 Depth=1
	beq	$a1, $s6, .LBB78_143
# %bb.140:                              # %._crit_edge.i.i.i130
                                        #   in Loop: Header=BB78_89 Depth=1
	bnez	$a1, .LBB78_142
# %bb.141:                              #   in Loop: Header=BB78_89 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB78_143
.LBB78_142:                             #   in Loop: Header=BB78_89 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB78_143:                             #   in Loop: Header=BB78_89 Depth=1
	ld.d	$s2, $sp, 184
	ld.d	$s3, $fp, 312
	ld.d	$a0, $fp, 320
	st.d	$s2, $sp, 224
	beq	$s3, $a0, .LBB78_146
# %bb.144:                              #   in Loop: Header=BB78_89 Depth=1
	addi.d	$a0, $s3, 16
	st.d	$a0, $s3, 0
	ld.d	$a1, $sp, 216
	beq	$a1, $s4, .LBB78_149
# %bb.145:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i135
                                        #   in Loop: Header=BB78_89 Depth=1
	st.d	$a1, $s3, 0
	ld.d	$a0, $sp, 232
	st.d	$a0, $s3, 16
	b	.LBB78_150
.LBB78_146:                             #   in Loop: Header=BB78_89 Depth=1
.Ltmp2115:
	addi.d	$a1, $sp, 216
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2116:
# %bb.147:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit139
                                        #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a0, $sp, 216
	beq	$a0, $s4, .LBB78_151
# %bb.148:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i140
                                        #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB78_151
.LBB78_149:                             # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i137
                                        #   in Loop: Header=BB78_89 Depth=1
	addi.d	$a2, $s2, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB78_150:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit139.thread
                                        #   in Loop: Header=BB78_89 Depth=1
	st.d	$s2, $s3, 8
	ld.d	$a0, $fp, 312
	st.d	$s4, $sp, 216
	st.d	$zero, $sp, 224
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 312
.LBB78_151:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit142
                                        #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s0, $a1
	bltz	$a1, .LBB78_154
# %bb.152:                              #   in Loop: Header=BB78_89 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB78_155
# %bb.153:                              #   in Loop: Header=BB78_89 Depth=1
	add.d	$a0, $a2, $s8
	ld.d	$a1, $fp, 368
	ld.d	$a2, $fp, 384
	ld.w	$a0, $a0, 32
	bne	$a1, $a2, .LBB78_157
	b	.LBB78_87
.LBB78_154:                             #   in Loop: Header=BB78_89 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB78_156
.LBB78_155:                             #   in Loop: Header=BB78_89 Depth=1
	srli.d	$a2, $a1, 2
.LBB78_156:                             #   in Loop: Header=BB78_89 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	ld.d	$a1, $fp, 368
	ld.d	$a2, $fp, 384
	ld.w	$a0, $a0, 32
	beq	$a1, $a2, .LBB78_87
.LBB78_157:                             #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a2, $fp, 376
	addi.w	$a3, $a2, 0
	addi.d	$a4, $a2, 1
	st.w	$a4, $fp, 376
	ori	$a4, $zero, 63
	bne	$a3, $a4, .LBB78_159
# %bb.158:                              #   in Loop: Header=BB78_89 Depth=1
	st.w	$zero, $fp, 376
	addi.d	$a3, $a1, 8
	st.d	$a3, $fp, 368
.LBB78_159:                             # %_ZNSt13_Bit_iteratorppEi.exit.i148
                                        #   in Loop: Header=BB78_89 Depth=1
	bstrpick.d	$a2, $a2, 31, 0
	ori	$a3, $zero, 1
	sll.d	$a2, $a3, $a2
	ori	$a3, $zero, 13
	bne	$a0, $a3, .LBB78_161
# %bb.160:                              #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	b	.LBB78_162
.LBB78_161:                             #   in Loop: Header=BB78_89 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
.LBB78_162:                             # %_ZNSt6vectorIbSaIbEE9push_backEb.exit155.sink.split
                                        #   in Loop: Header=BB78_89 Depth=1
	st.d	$a0, $a1, 0
	b	.LBB78_88
.LBB78_163:
	ld.d	$a3, $fp, 224
	st.d	$s5, $sp, 216
	st.d	$s3, $sp, 224
	st.d	$s2, $sp, 232
	st.d	$s7, $sp, 240
	st.d	$a1, $sp, 184
	st.d	$a2, $sp, 192
	st.d	$a3, $sp, 200
	st.d	$a0, $sp, 208
.Ltmp2096:
	addi.d	$a1, $sp, 216
	addi.d	$a2, $sp, 184
	ld.d	$s4, $sp, 0                     # 8-byte Folded Reload
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp2097:
# %bb.164:                              # %.noexc.i108
	ld.d	$s0, $fp, 232
	bgeu	$s7, $s0, .LBB78_167
# %bb.165:                              # %.lr.ph.i.i.i109.preheader
	move	$a1, $s7
	.p2align	4, , 16
.LBB78_166:                             # %.lr.ph.i.i.i109
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s1, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s1
	bltu	$s1, $s0, .LBB78_166
.LBB78_167:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE5clearEv.exit
	move	$s0, $zero
	move	$s1, $zero
	st.d	$s5, $fp, 208
	st.d	$s3, $fp, 216
	st.d	$s2, $fp, 224
	st.d	$s7, $fp, 232
	ori	$s2, $zero, 3
	b	.LBB78_170
	.p2align	4, , 16
.LBB78_168:                             #   in Loop: Header=BB78_170 Depth=1
.Ltmp2101:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2102:
.LBB78_169:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE9push_backERKS1_.exit168
                                        #   in Loop: Header=BB78_170 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$s0, $s0, 128
.LBB78_170:                             # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $sp, 176
	ld.d	$a0, $sp, 144
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $sp, 152
	ld.d	$a4, $sp, 160
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $sp, 136
	ld.d	$a1, $sp, 120
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s1, $a2, .LBB78_179
# %bb.171:                              #   in Loop: Header=BB78_170 Depth=1
	ld.d	$a2, $sp, 128
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s1, $a2
	bltz	$a2, .LBB78_174
# %bb.172:                              #   in Loop: Header=BB78_170 Depth=1
	bltu	$s2, $a2, .LBB78_175
# %bb.173:                              #   in Loop: Header=BB78_170 Depth=1
	add.d	$a1, $a1, $s0
	ld.d	$a2, $fp, 224
	ld.d	$a0, $fp, 208
	addi.d	$a2, $a2, -128
	bne	$a0, $a2, .LBB78_177
	b	.LBB78_168
	.p2align	4, , 16
.LBB78_174:                             #   in Loop: Header=BB78_170 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB78_176
	.p2align	4, , 16
.LBB78_175:                             #   in Loop: Header=BB78_170 Depth=1
	srli.d	$a1, $a2, 2
.LBB78_176:                             #   in Loop: Header=BB78_170 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
	ld.d	$a2, $fp, 224
	ld.d	$a0, $fp, 208
	addi.d	$a2, $a2, -128
	beq	$a0, $a2, .LBB78_168
.LBB78_177:                             #   in Loop: Header=BB78_170 Depth=1
.Ltmp2099:
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2100:
# %bb.178:                              # %.noexc166
                                        #   in Loop: Header=BB78_170 Depth=1
	ld.d	$a0, $fp, 208
	addi.d	$a0, $a0, 128
	st.d	$a0, $fp, 208
	b	.LBB78_169
.LBB78_179:
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 248                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 256                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 264                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 272                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 280                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 288                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 296                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 304                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 312                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 320                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 328                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 336
	ret
.LBB78_180:
.Ltmp2084:
	b	.LBB78_197
.LBB78_181:
.Ltmp2079:
	b	.LBB78_197
.LBB78_182:
.Ltmp2095:
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s0, .LBB78_198
# %bb.183:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i104
	ld.d	$a0, $sp, 56
	b	.LBB78_191
.LBB78_184:
.Ltmp2092:
	ld.d	$a2, $sp, 72
	move	$fp, $a0
	beq	$a2, $s0, .LBB78_198
# %bb.185:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i101
	ld.d	$a0, $sp, 88
	b	.LBB78_191
.LBB78_186:
.Ltmp2098:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB78_187:
.Ltmp2089:
	b	.LBB78_197
.LBB78_188:
.Ltmp2109:
	ld.d	$a2, $sp, 216
	move	$fp, $a0
	bne	$a2, $s1, .LBB78_190
	b	.LBB78_198
.LBB78_189:
.Ltmp2117:
	ld.d	$a2, $sp, 216
	move	$fp, $a0
	beq	$a2, $s4, .LBB78_198
.LBB78_190:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i156
	ld.d	$a0, $sp, 232
.LBB78_191:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit103
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB78_192:
.Ltmp2114:
	b	.LBB78_197
.LBB78_193:
.Ltmp2106:
	b	.LBB78_197
.LBB78_194:
.Ltmp2120:
	b	.LBB78_197
.LBB78_195:
.Ltmp2103:
	b	.LBB78_197
.LBB78_196:
.Ltmp2125:
.LBB78_197:
	move	$fp, $a0
.LBB78_198:
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EED2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end78:
	.size	_ZN2PP3Cmd13get_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEERNS2_18basic_stringstreamIcS5_S6_EERi, .Lfunc_end78-_ZN2PP3Cmd13get_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEERNS2_18basic_stringstreamIcS5_S6_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table78:
.Lexception42:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Lfunc_begin42-.Lfunc_begin42  # >> Call Site 1 <<
	.uleb128 .Ltmp2123-.Lfunc_begin42       #   Call between .Lfunc_begin42 and .Ltmp2123
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2123-.Lfunc_begin42       # >> Call Site 2 <<
	.uleb128 .Ltmp2122-.Ltmp2123            #   Call between .Ltmp2123 and .Ltmp2122
	.uleb128 .Ltmp2125-.Lfunc_begin42       #     jumps to .Ltmp2125
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2073-.Lfunc_begin42       # >> Call Site 3 <<
	.uleb128 .Ltmp2076-.Ltmp2073            #   Call between .Ltmp2073 and .Ltmp2076
	.uleb128 .Ltmp2089-.Lfunc_begin42       #     jumps to .Ltmp2089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2077-.Lfunc_begin42       # >> Call Site 4 <<
	.uleb128 .Ltmp2078-.Ltmp2077            #   Call between .Ltmp2077 and .Ltmp2078
	.uleb128 .Ltmp2079-.Lfunc_begin42       #     jumps to .Ltmp2079
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2078-.Lfunc_begin42       # >> Call Site 5 <<
	.uleb128 .Ltmp2080-.Ltmp2078            #   Call between .Ltmp2078 and .Ltmp2080
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2080-.Lfunc_begin42       # >> Call Site 6 <<
	.uleb128 .Ltmp2081-.Ltmp2080            #   Call between .Ltmp2080 and .Ltmp2081
	.uleb128 .Ltmp2089-.Lfunc_begin42       #     jumps to .Ltmp2089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2082-.Lfunc_begin42       # >> Call Site 7 <<
	.uleb128 .Ltmp2083-.Ltmp2082            #   Call between .Ltmp2082 and .Ltmp2083
	.uleb128 .Ltmp2084-.Lfunc_begin42       #     jumps to .Ltmp2084
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2083-.Lfunc_begin42       # >> Call Site 8 <<
	.uleb128 .Ltmp2085-.Ltmp2083            #   Call between .Ltmp2083 and .Ltmp2085
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2085-.Lfunc_begin42       # >> Call Site 9 <<
	.uleb128 .Ltmp2088-.Ltmp2085            #   Call between .Ltmp2085 and .Ltmp2088
	.uleb128 .Ltmp2089-.Lfunc_begin42       #     jumps to .Ltmp2089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2090-.Lfunc_begin42       # >> Call Site 10 <<
	.uleb128 .Ltmp2091-.Ltmp2090            #   Call between .Ltmp2090 and .Ltmp2091
	.uleb128 .Ltmp2092-.Lfunc_begin42       #     jumps to .Ltmp2092
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2091-.Lfunc_begin42       # >> Call Site 11 <<
	.uleb128 .Ltmp2093-.Ltmp2091            #   Call between .Ltmp2091 and .Ltmp2093
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2093-.Lfunc_begin42       # >> Call Site 12 <<
	.uleb128 .Ltmp2094-.Ltmp2093            #   Call between .Ltmp2093 and .Ltmp2094
	.uleb128 .Ltmp2095-.Lfunc_begin42       #     jumps to .Ltmp2095
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2094-.Lfunc_begin42       # >> Call Site 13 <<
	.uleb128 .Ltmp2118-.Ltmp2094            #   Call between .Ltmp2094 and .Ltmp2118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2118-.Lfunc_begin42       # >> Call Site 14 <<
	.uleb128 .Ltmp2119-.Ltmp2118            #   Call between .Ltmp2118 and .Ltmp2119
	.uleb128 .Ltmp2120-.Lfunc_begin42       #     jumps to .Ltmp2120
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2104-.Lfunc_begin42       # >> Call Site 15 <<
	.uleb128 .Ltmp2105-.Ltmp2104            #   Call between .Ltmp2104 and .Ltmp2105
	.uleb128 .Ltmp2106-.Lfunc_begin42       #     jumps to .Ltmp2106
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2105-.Lfunc_begin42       # >> Call Site 16 <<
	.uleb128 .Ltmp2107-.Ltmp2105            #   Call between .Ltmp2105 and .Ltmp2107
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2107-.Lfunc_begin42       # >> Call Site 17 <<
	.uleb128 .Ltmp2108-.Ltmp2107            #   Call between .Ltmp2107 and .Ltmp2108
	.uleb128 .Ltmp2109-.Lfunc_begin42       #     jumps to .Ltmp2109
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2108-.Lfunc_begin42       # >> Call Site 18 <<
	.uleb128 .Ltmp2110-.Ltmp2108            #   Call between .Ltmp2108 and .Ltmp2110
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2110-.Lfunc_begin42       # >> Call Site 19 <<
	.uleb128 .Ltmp2111-.Ltmp2110            #   Call between .Ltmp2110 and .Ltmp2111
	.uleb128 .Ltmp2120-.Lfunc_begin42       #     jumps to .Ltmp2120
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2112-.Lfunc_begin42       # >> Call Site 20 <<
	.uleb128 .Ltmp2113-.Ltmp2112            #   Call between .Ltmp2112 and .Ltmp2113
	.uleb128 .Ltmp2114-.Lfunc_begin42       #     jumps to .Ltmp2114
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2113-.Lfunc_begin42       # >> Call Site 21 <<
	.uleb128 .Ltmp2115-.Ltmp2113            #   Call between .Ltmp2113 and .Ltmp2115
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2115-.Lfunc_begin42       # >> Call Site 22 <<
	.uleb128 .Ltmp2116-.Ltmp2115            #   Call between .Ltmp2115 and .Ltmp2116
	.uleb128 .Ltmp2117-.Lfunc_begin42       #     jumps to .Ltmp2117
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2116-.Lfunc_begin42       # >> Call Site 23 <<
	.uleb128 .Ltmp2096-.Ltmp2116            #   Call between .Ltmp2116 and .Ltmp2096
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2096-.Lfunc_begin42       # >> Call Site 24 <<
	.uleb128 .Ltmp2097-.Ltmp2096            #   Call between .Ltmp2096 and .Ltmp2097
	.uleb128 .Ltmp2098-.Lfunc_begin42       #     jumps to .Ltmp2098
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2097-.Lfunc_begin42       # >> Call Site 25 <<
	.uleb128 .Ltmp2101-.Ltmp2097            #   Call between .Ltmp2097 and .Ltmp2101
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2101-.Lfunc_begin42       # >> Call Site 26 <<
	.uleb128 .Ltmp2100-.Ltmp2101            #   Call between .Ltmp2101 and .Ltmp2100
	.uleb128 .Ltmp2103-.Lfunc_begin42       #     jumps to .Ltmp2103
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2100-.Lfunc_begin42       # >> Call Site 27 <<
	.uleb128 .Lfunc_end78-.Ltmp2100         #   Call between .Ltmp2100 and .Lfunc_end78
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end42:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd12get_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE # -- Begin function _ZN2PP3Cmd12get_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE
	.p2align	5
	.type	_ZN2PP3Cmd12get_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE,@function
_ZN2PP3Cmd12get_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE: # @_ZN2PP3Cmd12get_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception43
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s2, $a0, 328
	ld.d	$s3, $a0, 336
	move	$s0, $a2
	move	$s1, $a1
	beq	$s3, $s2, .LBB79_6
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s4, $s2, 16
	b	.LBB79_3
	.p2align	4, , 16
.LBB79_2:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB79_3 Depth=1
	addi.d	$a0, $s4, 16
	addi.d	$s4, $s4, 32
	beq	$a0, $s3, .LBB79_5
.LBB79_3:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s4, -16
	beq	$s4, $a0, .LBB79_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB79_3 Depth=1
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB79_2
.LBB79_5:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	st.d	$s2, $fp, 336
.LBB79_6:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5clearEv.exit
	ld.d	$a0, $fp, 392
	addi.d	$a1, $fp, 328
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	addi.d	$a1, $fp, 392
	st.d	$a1, $sp, 0                     # 8-byte Folded Spill
	st.d	$a0, $fp, 408
	st.w	$zero, $fp, 416
	addi.d	$s2, $sp, 32
	ori	$s8, $zero, 384
	addi.d	$s5, $sp, 32
	addi.w	$s4, $zero, -1
	ori	$s3, $zero, 3
	b	.LBB79_9
	.p2align	4, , 16
.LBB79_7:                               #   in Loop: Header=BB79_9 Depth=1
	ld.wu	$a2, $fp, 416
	addi.d	$a0, $a0, -13
	sltui	$a3, $a0, 1
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb)
	jirl	$ra, $ra, 0
.LBB79_8:                               # %_ZNSt6vectorIbSaIbEE9push_backEb.exit42
                                        #   in Loop: Header=BB79_9 Depth=1
	addi.d	$s3, $s3, 2
	addi.d	$s8, $s8, 256
.LBB79_9:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s3, $a2, .LBB79_74
# %bb.10:                               #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s3, $a2
	bltz	$a3, .LBB79_13
# %bb.11:                               #   in Loop: Header=BB79_9 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB79_14
# %bb.12:                               #   in Loop: Header=BB79_9 Depth=1
	add.d	$a0, $a1, $s8
	b	.LBB79_16
	.p2align	4, , 16
.LBB79_13:                              #   in Loop: Header=BB79_9 Depth=1
	srai.d	$a1, $a3, 2
	b	.LBB79_15
	.p2align	4, , 16
.LBB79_14:                              #   in Loop: Header=BB79_9 Depth=1
	srli.d	$a1, $a3, 2
.LBB79_15:                              #   in Loop: Header=BB79_9 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s3, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB79_16:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB79_9 Depth=1
	st.d	$s2, $sp, 16
	ld.d	$a1, $a0, 8
	ld.d	$s6, $a0, 0
	st.d	$a1, $sp, 48
	move	$a0, $s2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB79_18
# %bb.17:                               # %.noexc.i.i
                                        #   in Loop: Header=BB79_9 Depth=1
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB79_18:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB79_9 Depth=1
	beq	$a1, $s4, .LBB79_22
# %bb.19:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB79_9 Depth=1
	bnez	$a1, .LBB79_21
# %bb.20:                               #   in Loop: Header=BB79_9 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB79_22
	.p2align	4, , 16
.LBB79_21:                              #   in Loop: Header=BB79_9 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB79_22:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB79_9 Depth=1
	ld.d	$s6, $sp, 48
	ld.d	$s7, $s1, 8
	ld.d	$a0, $s1, 16
	st.d	$s6, $sp, 24
	beq	$s7, $a0, .LBB79_25
# %bb.23:                               #   in Loop: Header=BB79_9 Depth=1
	addi.d	$a0, $s7, 16
	st.d	$a0, $s7, 0
	ld.d	$a1, $sp, 16
	beq	$a1, $s2, .LBB79_28
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB79_9 Depth=1
	st.d	$a1, $s7, 0
	ld.d	$a0, $sp, 32
	st.d	$a0, $s7, 16
	b	.LBB79_29
	.p2align	4, , 16
.LBB79_25:                              #   in Loop: Header=BB79_9 Depth=1
.Ltmp2126:
	addi.d	$a1, $sp, 16
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2127:
# %bb.26:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
                                        #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a0, $sp, 16
	beq	$a0, $s2, .LBB79_30
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB79_30
	.p2align	4, , 16
.LBB79_28:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i
                                        #   in Loop: Header=BB79_9 Depth=1
	addi.d	$a2, $s6, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB79_29:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit.thread
                                        #   in Loop: Header=BB79_9 Depth=1
	st.d	$s6, $s7, 8
	ld.d	$a0, $s1, 8
	st.d	$s2, $sp, 16
	st.d	$zero, $sp, 24
	addi.d	$a0, $a0, 32
	st.d	$a0, $s1, 8
.LBB79_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s3, $a1
	bltz	$a3, .LBB79_34
# %bb.31:                               #   in Loop: Header=BB79_9 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB79_35
# %bb.32:                               #   in Loop: Header=BB79_9 Depth=1
	add.d	$a0, $a2, $s8
	ld.d	$a1, $s0, 16
	ld.d	$a2, $s0, 32
	ld.w	$a0, $a0, 32
	bne	$a1, $a2, .LBB79_37
.LBB79_33:                              #   in Loop: Header=BB79_9 Depth=1
	ld.wu	$a2, $s0, 24
	addi.d	$a0, $a0, -13
	sltui	$a3, $a0, 1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb)
	jirl	$ra, $ra, 0
	b	.LBB79_43
	.p2align	4, , 16
.LBB79_34:                              #   in Loop: Header=BB79_9 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB79_36
	.p2align	4, , 16
.LBB79_35:                              #   in Loop: Header=BB79_9 Depth=1
	srli.d	$a2, $a3, 2
.LBB79_36:                              #   in Loop: Header=BB79_9 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s3, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	ld.d	$a1, $s0, 16
	ld.d	$a2, $s0, 32
	ld.w	$a0, $a0, 32
	beq	$a1, $a2, .LBB79_33
.LBB79_37:                              #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a2, $s0, 24
	addi.w	$a3, $a2, 0
	addi.d	$a4, $a2, 1
	st.w	$a4, $s0, 24
	ori	$a4, $zero, 63
	bne	$a3, $a4, .LBB79_39
# %bb.38:                               #   in Loop: Header=BB79_9 Depth=1
	st.w	$zero, $s0, 24
	addi.d	$a3, $a1, 8
	st.d	$a3, $s0, 16
.LBB79_39:                              # %_ZNSt13_Bit_iteratorppEi.exit.i
                                        #   in Loop: Header=BB79_9 Depth=1
	bstrpick.d	$a2, $a2, 31, 0
	ori	$a3, $zero, 1
	sll.d	$a2, $a3, $a2
	ori	$a3, $zero, 13
	bne	$a0, $a3, .LBB79_41
# %bb.40:                               #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	b	.LBB79_42
	.p2align	4, , 16
.LBB79_41:                              #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
.LBB79_42:                              # %_ZNSt6vectorIbSaIbEE9push_backEb.exit
                                        #   in Loop: Header=BB79_9 Depth=1
	st.d	$a0, $a1, 0
.LBB79_43:                              # %_ZNSt6vectorIbSaIbEE9push_backEb.exit
                                        #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s3, $a1
	bltz	$a3, .LBB79_46
# %bb.44:                               #   in Loop: Header=BB79_9 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB79_47
# %bb.45:                               #   in Loop: Header=BB79_9 Depth=1
	add.d	$a0, $a2, $s8
	b	.LBB79_49
	.p2align	4, , 16
.LBB79_46:                              #   in Loop: Header=BB79_9 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB79_48
	.p2align	4, , 16
.LBB79_47:                              #   in Loop: Header=BB79_9 Depth=1
	srli.d	$a2, $a3, 2
.LBB79_48:                              #   in Loop: Header=BB79_9 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s3, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB79_49:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit18
                                        #   in Loop: Header=BB79_9 Depth=1
	st.d	$s5, $sp, 16
	ld.d	$a1, $a0, 8
	ld.d	$s6, $a0, 0
	st.d	$a1, $sp, 48
	move	$a0, $s5
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB79_51
# %bb.50:                               # %.noexc.i.i20
                                        #   in Loop: Header=BB79_9 Depth=1
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB79_51:                              # %._crit_edge.i.i.i19
                                        #   in Loop: Header=BB79_9 Depth=1
	beq	$a1, $s4, .LBB79_55
# %bb.52:                               # %._crit_edge.i.i.i19
                                        #   in Loop: Header=BB79_9 Depth=1
	bnez	$a1, .LBB79_54
# %bb.53:                               #   in Loop: Header=BB79_9 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB79_55
	.p2align	4, , 16
.LBB79_54:                              #   in Loop: Header=BB79_9 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB79_55:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit21
                                        #   in Loop: Header=BB79_9 Depth=1
	ld.d	$s6, $sp, 48
	ld.d	$s7, $fp, 336
	ld.d	$a0, $fp, 344
	st.d	$s6, $sp, 24
	beq	$s7, $a0, .LBB79_58
# %bb.56:                               #   in Loop: Header=BB79_9 Depth=1
	addi.d	$a0, $s7, 16
	st.d	$a0, $s7, 0
	ld.d	$a1, $sp, 16
	beq	$a1, $s5, .LBB79_61
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i23
                                        #   in Loop: Header=BB79_9 Depth=1
	st.d	$a1, $s7, 0
	ld.d	$a0, $sp, 32
	st.d	$a0, $s7, 16
	b	.LBB79_62
	.p2align	4, , 16
.LBB79_58:                              #   in Loop: Header=BB79_9 Depth=1
.Ltmp2129:
	addi.d	$a1, $sp, 16
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2130:
# %bb.59:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit27
                                        #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a0, $sp, 16
	beq	$a0, $s5, .LBB79_63
# %bb.60:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i28
                                        #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB79_63
	.p2align	4, , 16
.LBB79_61:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i25
                                        #   in Loop: Header=BB79_9 Depth=1
	addi.d	$a2, $s6, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB79_62:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit27.thread
                                        #   in Loop: Header=BB79_9 Depth=1
	st.d	$s6, $s7, 8
	ld.d	$a0, $fp, 336
	st.d	$s5, $sp, 16
	st.d	$zero, $sp, 24
	addi.d	$a0, $a0, 32
	st.d	$a0, $fp, 336
.LBB79_63:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit30
                                        #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s3, $a1
	bltz	$a3, .LBB79_66
# %bb.64:                               #   in Loop: Header=BB79_9 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB79_67
# %bb.65:                               #   in Loop: Header=BB79_9 Depth=1
	add.d	$a0, $a2, $s8
	ld.d	$a1, $fp, 408
	ld.d	$a2, $fp, 424
	ld.w	$a0, $a0, 32
	bne	$a1, $a2, .LBB79_69
	b	.LBB79_7
	.p2align	4, , 16
.LBB79_66:                              #   in Loop: Header=BB79_9 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB79_68
	.p2align	4, , 16
.LBB79_67:                              #   in Loop: Header=BB79_9 Depth=1
	srli.d	$a2, $a3, 2
.LBB79_68:                              #   in Loop: Header=BB79_9 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s3, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	ld.d	$a1, $fp, 408
	ld.d	$a2, $fp, 424
	ld.w	$a0, $a0, 32
	beq	$a1, $a2, .LBB79_7
.LBB79_69:                              #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a2, $fp, 416
	addi.w	$a3, $a2, 0
	addi.d	$a4, $a2, 1
	st.w	$a4, $fp, 416
	ori	$a4, $zero, 63
	bne	$a3, $a4, .LBB79_71
# %bb.70:                               #   in Loop: Header=BB79_9 Depth=1
	st.w	$zero, $fp, 416
	addi.d	$a3, $a1, 8
	st.d	$a3, $fp, 408
.LBB79_71:                              # %_ZNSt13_Bit_iteratorppEi.exit.i36
                                        #   in Loop: Header=BB79_9 Depth=1
	bstrpick.d	$a2, $a2, 31, 0
	ori	$a3, $zero, 1
	sll.d	$a2, $a3, $a2
	ori	$a3, $zero, 13
	bne	$a0, $a3, .LBB79_73
# %bb.72:                               #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	st.d	$a0, $a1, 0
	b	.LBB79_8
	.p2align	4, , 16
.LBB79_73:                              #   in Loop: Header=BB79_9 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	st.d	$a0, $a1, 0
	b	.LBB79_8
.LBB79_74:
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB79_75:
.Ltmp2131:
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	beq	$a2, $s5, .LBB79_77
.LBB79_76:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i46
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB79_77:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB79_78:
.Ltmp2128:
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	bne	$a2, $s2, .LBB79_76
	b	.LBB79_77
.Lfunc_end79:
	.size	_ZN2PP3Cmd12get_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE, .Lfunc_end79-_ZN2PP3Cmd12get_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table79:
.Lexception43:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Lfunc_begin43-.Lfunc_begin43  # >> Call Site 1 <<
	.uleb128 .Ltmp2126-.Lfunc_begin43       #   Call between .Lfunc_begin43 and .Ltmp2126
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2126-.Lfunc_begin43       # >> Call Site 2 <<
	.uleb128 .Ltmp2127-.Ltmp2126            #   Call between .Ltmp2126 and .Ltmp2127
	.uleb128 .Ltmp2128-.Lfunc_begin43       #     jumps to .Ltmp2128
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2127-.Lfunc_begin43       # >> Call Site 3 <<
	.uleb128 .Ltmp2129-.Ltmp2127            #   Call between .Ltmp2127 and .Ltmp2129
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2129-.Lfunc_begin43       # >> Call Site 4 <<
	.uleb128 .Ltmp2130-.Ltmp2129            #   Call between .Ltmp2129 and .Ltmp2130
	.uleb128 .Ltmp2131-.Lfunc_begin43       #     jumps to .Ltmp2131
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2130-.Lfunc_begin43       # >> Call Site 5 <<
	.uleb128 .Lfunc_end79-.Ltmp2130         #   Call between .Ltmp2130 and .Lfunc_end79
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end43:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd14copy_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE # -- Begin function _ZN2PP3Cmd14copy_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE
	.p2align	5
	.type	_ZN2PP3Cmd14copy_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE,@function
_ZN2PP3Cmd14copy_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE: # @_ZN2PP3Cmd14copy_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 312
	ld.d	$a3, $fp, 304
	sub.d	$a0, $a0, $a3
	srli.d	$a0, $a0, 5
	addi.w	$a0, $a0, 0
	blez	$a0, .LBB80_19
# %bb.1:                                # %.lr.ph
	move	$s0, $a2
	move	$s1, $a1
	move	$s4, $zero
	move	$s5, $zero
	addi.w	$a0, $zero, -8
	lu52i.d	$s6, $a0, 511
	ori	$s7, $zero, 1
	addi.w	$s8, $zero, -1
	b	.LBB80_4
	.p2align	4, , 16
.LBB80_2:                               #   in Loop: Header=BB80_4 Depth=1
	ld.wu	$a2, $s0, 24
	sltu	$a3, $zero, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb)
	jirl	$ra, $ra, 0
.LBB80_3:                               # %_ZNSt6vectorIbSaIbEE9push_backEb.exit
                                        #   in Loop: Header=BB80_4 Depth=1
	ld.d	$a0, $fp, 312
	ld.d	$a3, $fp, 304
	addi.d	$s5, $s5, 1
	sub.d	$a0, $a0, $a3
	slli.d	$a0, $a0, 27
	srai.d	$a0, $a0, 32
	addi.d	$s4, $s4, 32
	bge	$s5, $a0, .LBB80_19
.LBB80_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s1, 8
	ld.d	$a0, $s1, 16
	add.d	$a1, $a3, $s4
	beq	$s2, $a0, .LBB80_10
# %bb.5:                                #   in Loop: Header=BB80_4 Depth=1
	addi.d	$a0, $s2, 16
	st.d	$a0, $s2, 0
	ld.d	$a1, $a1, 8
	ldx.d	$s3, $a3, $s4
	st.d	$a1, $sp, 0
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB80_7
# %bb.6:                                # %.noexc.i.i
                                        #   in Loop: Header=BB80_4 Depth=1
	addi.d	$a1, $sp, 0
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	st.d	$a0, $s2, 0
	st.d	$a1, $s2, 16
.LBB80_7:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB80_4 Depth=1
	beq	$a1, $s8, .LBB80_12
# %bb.8:                                # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB80_4 Depth=1
	bnez	$a1, .LBB80_11
# %bb.9:                                #   in Loop: Header=BB80_4 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB80_12
	.p2align	4, , 16
.LBB80_10:                              #   in Loop: Header=BB80_4 Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB80_13
	.p2align	4, , 16
.LBB80_11:                              #   in Loop: Header=BB80_4 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB80_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB80_4 Depth=1
	ld.d	$a0, $sp, 0
	ld.d	$a1, $s1, 8
	st.d	$a0, $s2, 8
	addi.d	$a0, $a1, 32
	st.d	$a0, $s1, 8
.LBB80_13:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB80_4 Depth=1
	ld.d	$a0, $fp, 352
	srli.d	$a1, $s5, 3
	and	$a1, $a1, $s6
	ldx.d	$a0, $a0, $a1
	ld.d	$a1, $s0, 16
	ld.d	$a2, $s0, 32
	sll.d	$a3, $s7, $s5
	and	$a0, $a0, $a3
	beq	$a1, $a2, .LBB80_2
# %bb.14:                               #   in Loop: Header=BB80_4 Depth=1
	ld.d	$a2, $s0, 24
	addi.w	$a3, $a2, 0
	addi.d	$a4, $a2, 1
	st.w	$a4, $s0, 24
	ori	$a4, $zero, 63
	bne	$a3, $a4, .LBB80_16
# %bb.15:                               #   in Loop: Header=BB80_4 Depth=1
	st.w	$zero, $s0, 24
	addi.d	$a3, $a1, 8
	st.d	$a3, $s0, 16
.LBB80_16:                              # %_ZNSt13_Bit_iteratorppEi.exit.i
                                        #   in Loop: Header=BB80_4 Depth=1
	bstrpick.d	$a2, $a2, 31, 0
	sll.d	$a2, $s7, $a2
	beqz	$a0, .LBB80_18
# %bb.17:                               #   in Loop: Header=BB80_4 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	st.d	$a0, $a1, 0
	b	.LBB80_3
	.p2align	4, , 16
.LBB80_18:                              #   in Loop: Header=BB80_4 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	st.d	$a0, $a1, 0
	b	.LBB80_3
.LBB80_19:                              # %._crit_edge
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end80:
	.size	_ZN2PP3Cmd14copy_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE, .Lfunc_end80-_ZN2PP3Cmd14copy_call_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd13copy_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE # -- Begin function _ZN2PP3Cmd13copy_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE
	.p2align	5
	.type	_ZN2PP3Cmd13copy_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE,@function
_ZN2PP3Cmd13copy_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE: # @_ZN2PP3Cmd13copy_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 336
	ld.d	$a3, $fp, 328
	sub.d	$a0, $a0, $a3
	srli.d	$a0, $a0, 5
	addi.w	$a0, $a0, 0
	blez	$a0, .LBB81_19
# %bb.1:                                # %.lr.ph
	move	$s0, $a2
	move	$s1, $a1
	move	$s4, $zero
	move	$s5, $zero
	addi.w	$a0, $zero, -8
	lu52i.d	$s6, $a0, 511
	ori	$s7, $zero, 1
	addi.w	$s8, $zero, -1
	b	.LBB81_4
	.p2align	4, , 16
.LBB81_2:                               #   in Loop: Header=BB81_4 Depth=1
	ld.wu	$a2, $s0, 24
	sltu	$a3, $zero, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb)
	jirl	$ra, $ra, 0
.LBB81_3:                               # %_ZNSt6vectorIbSaIbEE9push_backEb.exit
                                        #   in Loop: Header=BB81_4 Depth=1
	ld.d	$a0, $fp, 336
	ld.d	$a3, $fp, 328
	addi.d	$s5, $s5, 1
	sub.d	$a0, $a0, $a3
	slli.d	$a0, $a0, 27
	srai.d	$a0, $a0, 32
	addi.d	$s4, $s4, 32
	bge	$s5, $a0, .LBB81_19
.LBB81_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$s2, $s1, 8
	ld.d	$a0, $s1, 16
	add.d	$a1, $a3, $s4
	beq	$s2, $a0, .LBB81_10
# %bb.5:                                #   in Loop: Header=BB81_4 Depth=1
	addi.d	$a0, $s2, 16
	st.d	$a0, $s2, 0
	ld.d	$a1, $a1, 8
	ldx.d	$s3, $a3, $s4
	st.d	$a1, $sp, 0
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB81_7
# %bb.6:                                # %.noexc.i.i
                                        #   in Loop: Header=BB81_4 Depth=1
	addi.d	$a1, $sp, 0
	move	$a0, $s2
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	st.d	$a0, $s2, 0
	st.d	$a1, $s2, 16
.LBB81_7:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB81_4 Depth=1
	beq	$a1, $s8, .LBB81_12
# %bb.8:                                # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB81_4 Depth=1
	bnez	$a1, .LBB81_11
# %bb.9:                                #   in Loop: Header=BB81_4 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB81_12
	.p2align	4, , 16
.LBB81_10:                              #   in Loop: Header=BB81_4 Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_)
	jirl	$ra, $ra, 0
	b	.LBB81_13
	.p2align	4, , 16
.LBB81_11:                              #   in Loop: Header=BB81_4 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB81_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB81_4 Depth=1
	ld.d	$a0, $sp, 0
	ld.d	$a1, $s1, 8
	st.d	$a0, $s2, 8
	addi.d	$a0, $a1, 32
	st.d	$a0, $s1, 8
.LBB81_13:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB81_4 Depth=1
	ld.d	$a0, $fp, 392
	srli.d	$a1, $s5, 3
	and	$a1, $a1, $s6
	ldx.d	$a0, $a0, $a1
	ld.d	$a1, $s0, 16
	ld.d	$a2, $s0, 32
	sll.d	$a3, $s7, $s5
	and	$a0, $a0, $a3
	beq	$a1, $a2, .LBB81_2
# %bb.14:                               #   in Loop: Header=BB81_4 Depth=1
	ld.d	$a2, $s0, 24
	addi.w	$a3, $a2, 0
	addi.d	$a4, $a2, 1
	st.w	$a4, $s0, 24
	ori	$a4, $zero, 63
	bne	$a3, $a4, .LBB81_16
# %bb.15:                               #   in Loop: Header=BB81_4 Depth=1
	st.w	$zero, $s0, 24
	addi.d	$a3, $a1, 8
	st.d	$a3, $s0, 16
.LBB81_16:                              # %_ZNSt13_Bit_iteratorppEi.exit.i
                                        #   in Loop: Header=BB81_4 Depth=1
	bstrpick.d	$a2, $a2, 31, 0
	sll.d	$a2, $s7, $a2
	beqz	$a0, .LBB81_18
# %bb.17:                               #   in Loop: Header=BB81_4 Depth=1
	ld.d	$a0, $a1, 0
	or	$a0, $a0, $a2
	st.d	$a0, $a1, 0
	b	.LBB81_3
	.p2align	4, , 16
.LBB81_18:                              #   in Loop: Header=BB81_4 Depth=1
	ld.d	$a0, $a1, 0
	andn	$a0, $a0, $a2
	st.d	$a0, $a1, 0
	b	.LBB81_3
.LBB81_19:                              # %._crit_edge
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end81:
	.size	_ZN2PP3Cmd13copy_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE, .Lfunc_end81-_ZN2PP3Cmd13copy_sub_argsERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS1_IbSaIbEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd20single_line_commentsEv # -- Begin function _ZN2PP3Cmd20single_line_commentsEv
	.p2align	5
	.type	_ZN2PP3Cmd20single_line_commentsEv,@function
_ZN2PP3Cmd20single_line_commentsEv:     # @_ZN2PP3Cmd20single_line_commentsEv
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception44
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	st.d	$s6, $sp, 168                   # 8-byte Folded Spill
	st.d	$s7, $sp, 160                   # 8-byte Folded Spill
	st.d	$s8, $sp, 152                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	move	$s3, $zero
	addi.d	$s1, $sp, 136
	addi.d	$s8, $sp, 104
	addi.w	$s4, $zero, -1
	ori	$a0, $zero, 0
	lu32i.d	$a0, -1
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ori	$s7, $zero, 16
	ori	$s5, $zero, 1
	st.d	$s4, $sp, 0                     # 8-byte Folded Spill
	addi.w	$s6, $zero, -1
	b	.LBB82_2
	.p2align	4, , 16
.LBB82_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit95
                                        #   in Loop: Header=BB82_2 Depth=1
	addi.d	$s3, $s3, 128
	move	$s4, $s2
	bnez	$s0, .LBB82_74
.LBB82_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $fp, 232
	ld.d	$a0, $fp, 200
	addi.d	$s2, $s4, 1
	ld.d	$a1, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a3, $a2, $a0
	srai.d	$a3, $a3, 3
	sltu	$a5, $zero, $a2
	sub.d	$a4, $a1, $a4
	ld.d	$a6, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a5, $a3, $a5
	srai.d	$a4, $a4, 7
	alsl.d	$a7, $a5, $a4, 2
	sub.d	$a5, $a6, $a1
	srai.d	$a5, $a5, 7
	add.d	$a6, $a7, $a5
	slli.d	$a6, $a6, 32
	ld.d	$a7, $sp, 8                     # 8-byte Folded Reload
	add.d	$a6, $a6, $a7
	srai.d	$a6, $a6, 32
	bge	$s2, $a6, .LBB82_73
# %bb.3:                                #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s4, $a2
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB82_6
# %bb.4:                                #   in Loop: Header=BB82_2 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB82_7
# %bb.5:                                #   in Loop: Header=BB82_2 Depth=1
	add.d	$a0, $a1, $s3
	b	.LBB82_9
	.p2align	4, , 16
.LBB82_6:                               #   in Loop: Header=BB82_2 Depth=1
	srai.d	$a1, $a3, 2
	b	.LBB82_8
	.p2align	4, , 16
.LBB82_7:                               #   in Loop: Header=BB82_2 Depth=1
	srli.d	$a1, $a3, 2
.LBB82_8:                               #   in Loop: Header=BB82_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s4, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 128
.LBB82_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB82_2 Depth=1
	st.d	$s1, $sp, 120
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	st.d	$a1, $sp, 88
	move	$a0, $s1
	bltu	$a1, $s7, .LBB82_11
# %bb.10:                               # %.noexc.i.i
                                        #   in Loop: Header=BB82_2 Depth=1
	addi.d	$a0, $sp, 120
	addi.d	$a1, $sp, 88
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 88
	st.d	$a0, $sp, 120
	st.d	$a1, $sp, 136
.LBB82_11:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	beq	$a1, $a2, .LBB82_14
# %bb.12:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB82_2 Depth=1
	bnez	$a1, .LBB82_15
# %bb.13:                               #   in Loop: Header=BB82_2 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
.LBB82_14:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a0, $sp, 88
	st.d	$a0, $sp, 128
	beq	$a0, $s5, .LBB82_16
	b	.LBB82_17
	.p2align	4, , 16
.LBB82_15:                              #   in Loop: Header=BB82_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 88
	st.d	$a0, $sp, 128
	bne	$a0, $s5, .LBB82_17
.LBB82_16:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a0, $sp, 120
	ld.bu	$a1, $a0, 0
	ori	$s0, $zero, 1
	ori	$a2, $zero, 33
	beq	$a1, $a2, .LBB82_56
.LBB82_17:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread169
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s4, $a1
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB82_20
# %bb.18:                               #   in Loop: Header=BB82_2 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB82_21
# %bb.19:                               #   in Loop: Header=BB82_2 Depth=1
	add.d	$a0, $a2, $s3
	b	.LBB82_23
	.p2align	4, , 16
.LBB82_20:                              #   in Loop: Header=BB82_2 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB82_22
	.p2align	4, , 16
.LBB82_21:                              #   in Loop: Header=BB82_2 Depth=1
	srli.d	$a2, $a3, 2
.LBB82_22:                              #   in Loop: Header=BB82_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s4, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 128
.LBB82_23:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit65
                                        #   in Loop: Header=BB82_2 Depth=1
	st.d	$s8, $sp, 88
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	st.d	$a1, $sp, 48
	move	$a0, $s8
	bltu	$a1, $s7, .LBB82_26
# %bb.24:                               # %.noexc.i.i67
                                        #   in Loop: Header=BB82_2 Depth=1
.Ltmp2132:
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2133:
# %bb.25:                               # %.noexc
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB82_26:                              # %._crit_edge.i.i.i66
                                        #   in Loop: Header=BB82_2 Depth=1
	beq	$a1, $s6, .LBB82_29
# %bb.27:                               # %._crit_edge.i.i.i66
                                        #   in Loop: Header=BB82_2 Depth=1
	bnez	$a1, .LBB82_30
# %bb.28:                               #   in Loop: Header=BB82_2 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
.LBB82_29:                              #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a0, $sp, 48
	st.d	$a0, $sp, 96
	beq	$a0, $s5, .LBB82_31
	b	.LBB82_32
	.p2align	4, , 16
.LBB82_30:                              #   in Loop: Header=BB82_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 48
	st.d	$a0, $sp, 96
	bne	$a0, $s5, .LBB82_32
.LBB82_31:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit70
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a0, $sp, 88
	ld.bu	$a1, $a0, 0
	ori	$s0, $zero, 1
	ori	$a2, $zero, 35
	beq	$a1, $a2, .LBB82_53
.LBB82_32:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit70.thread170
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s4, $a1
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB82_35
# %bb.33:                               #   in Loop: Header=BB82_2 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB82_36
# %bb.34:                               #   in Loop: Header=BB82_2 Depth=1
	add.d	$a0, $a2, $s3
	b	.LBB82_38
	.p2align	4, , 16
.LBB82_35:                              #   in Loop: Header=BB82_2 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB82_37
.LBB82_36:                              #   in Loop: Header=BB82_2 Depth=1
	srli.d	$a2, $a3, 2
.LBB82_37:                              #   in Loop: Header=BB82_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s4, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 128
.LBB82_38:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit72
                                        #   in Loop: Header=BB82_2 Depth=1
	addi.d	$a2, $sp, 64
	st.d	$a2, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	st.d	$a1, $sp, 16
	move	$a0, $a2
	bltu	$a1, $s7, .LBB82_41
# %bb.39:                               # %.noexc.i.i74
                                        #   in Loop: Header=BB82_2 Depth=1
.Ltmp2135:
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 16
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2136:
# %bb.40:                               # %.noexc75
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB82_41:                              # %._crit_edge.i.i.i73
                                        #   in Loop: Header=BB82_2 Depth=1
	beq	$a1, $s6, .LBB82_44
# %bb.42:                               # %._crit_edge.i.i.i73
                                        #   in Loop: Header=BB82_2 Depth=1
	bnez	$a1, .LBB82_45
# %bb.43:                               #   in Loop: Header=BB82_2 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
.LBB82_44:                              #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a1, $sp, 16
	ld.d	$a0, $sp, 48
	st.d	$a1, $sp, 56
	bne	$a1, $s5, .LBB82_50
	b	.LBB82_46
.LBB82_45:                              #   in Loop: Header=BB82_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 16
	ld.d	$a0, $sp, 48
	st.d	$a1, $sp, 56
	bne	$a1, $s5, .LBB82_50
.LBB82_46:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit78
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 47
	bne	$a1, $a2, .LBB82_50
# %bb.47:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit78.thread
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s4, $a1
	addi.d	$a3, $a3, 2
	bltz	$a3, .LBB82_58
# %bb.48:                               #   in Loop: Header=BB82_2 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB82_59
# %bb.49:                               #   in Loop: Header=BB82_2 Depth=1
	add.d	$a0, $a2, $s3
	addi.d	$a0, $a0, 128
	b	.LBB82_61
	.p2align	4, , 16
.LBB82_50:                              #   in Loop: Header=BB82_2 Depth=1
	move	$s0, $zero
	addi.d	$a1, $sp, 64
	beq	$a0, $a1, .LBB82_52
.LBB82_51:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i87
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB82_52:                              # %.critedge59.thread
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a0, $sp, 88
.LBB82_53:                              # %.critedge59
                                        #   in Loop: Header=BB82_2 Depth=1
	beq	$a0, $s8, .LBB82_55
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i90
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB82_55:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a0, $sp, 120
.LBB82_56:                              # %.critedge61
                                        #   in Loop: Header=BB82_2 Depth=1
	beq	$a0, $s1, .LBB82_1
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i93
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB82_1
.LBB82_58:                              #   in Loop: Header=BB82_2 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB82_60
.LBB82_59:                              #   in Loop: Header=BB82_2 Depth=1
	srli.d	$a2, $a3, 2
.LBB82_60:                              #   in Loop: Header=BB82_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s4, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 256
.LBB82_61:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit80
                                        #   in Loop: Header=BB82_2 Depth=1
	addi.d	$a2, $sp, 32
	st.d	$a2, $sp, 16
	ld.d	$a1, $a0, 8
	ld.d	$s0, $a0, 0
	st.d	$a1, $sp, 80
	move	$a0, $a2
	bltu	$a1, $s7, .LBB82_64
# %bb.62:                               # %.noexc.i.i82
                                        #   in Loop: Header=BB82_2 Depth=1
.Ltmp2138:
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 80
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2139:
# %bb.63:                               # %.noexc83
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a1, $sp, 80
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB82_64:                              # %._crit_edge.i.i.i81
                                        #   in Loop: Header=BB82_2 Depth=1
	beq	$a1, $s6, .LBB82_67
# %bb.65:                               # %._crit_edge.i.i.i81
                                        #   in Loop: Header=BB82_2 Depth=1
	bnez	$a1, .LBB82_69
# %bb.66:                               #   in Loop: Header=BB82_2 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
.LBB82_67:                              #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 16
	st.d	$a1, $sp, 24
	bne	$a1, $s5, .LBB82_70
.LBB82_68:                              #   in Loop: Header=BB82_2 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -47
	sltui	$s0, $a1, 1
	addi.d	$a1, $sp, 32
	bne	$a0, $a1, .LBB82_71
	b	.LBB82_72
.LBB82_69:                              #   in Loop: Header=BB82_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 80
	ld.d	$a0, $sp, 16
	st.d	$a1, $sp, 24
	beq	$a1, $s5, .LBB82_68
.LBB82_70:                              #   in Loop: Header=BB82_2 Depth=1
	move	$s0, $zero
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB82_72
.LBB82_71:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB82_72:                              # %.critedge.thread
                                        #   in Loop: Header=BB82_2 Depth=1
	ld.d	$a0, $sp, 48
	addi.d	$a1, $sp, 64
	bne	$a0, $a1, .LBB82_51
	b	.LBB82_52
.LBB82_73:                              # %.loopexit
	addi.d	$s0, $fp, 160
	b	.LBB82_87
.LBB82_74:
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a5, $fp, 192
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a4, $a1, 7
	add.d	$a1, $a4, $s2
	bltz	$a1, .LBB82_77
# %bb.75:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB82_78
# %bb.76:
	add.d	$a1, $a2, $s3
	addi.d	$a3, $a1, -128
	move	$a1, $a0
	b	.LBB82_80
.LBB82_77:
	srai.d	$a3, $a1, 2
	b	.LBB82_79
.LBB82_78:
	srli.d	$a3, $a1, 2
.LBB82_79:
	alsl.d	$a1, $a3, $a0, 3
	slli.d	$a6, $a3, 3
	ldx.d	$a6, $a0, $a6
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a4, $a3
	add.d	$a3, $a3, $s2
	slli.d	$a3, $a3, 7
	add.d	$a3, $a6, $a3
.LBB82_80:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
	ld.d	$a6, $fp, 232
	sub.d	$a7, $a6, $a0
	ld.d	$t0, $fp, 208
	ld.d	$t1, $fp, 216
	srli.d	$a7, $a7, 3
	sltu	$a6, $zero, $a6
	sub.d	$a6, $a7, $a6
	sub.d	$a7, $t0, $t1
	srli.d	$a7, $a7, 7
	sub.d	$a5, $a5, $a2
	srli.d	$a5, $a5, 7
	add.d	$a5, $a7, $a5
	alsl.w	$a5, $a6, $a5, 2
	add.d	$a4, $a5, $a4
	addi.d	$s0, $fp, 160
	bltz	$a4, .LBB82_83
# %bb.81:
	ori	$a6, $zero, 3
	bltu	$a6, $a4, .LBB82_84
# %bb.82:
	slli.d	$a4, $a5, 7
	add.d	$a2, $a2, $a4
	b	.LBB82_86
.LBB82_83:
	srai.d	$a2, $a4, 2
	b	.LBB82_85
.LBB82_84:
	srli.d	$a2, $a4, 2
.LBB82_85:
	slli.d	$a5, $a2, 3
	ldx.d	$a5, $a0, $a5
	alsl.d	$a0, $a2, $a0, 3
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a4, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a5, $a2
.LBB82_86:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit98
	st.d	$a3, $sp, 120
	ld.d	$a3, $a1, 0
	st.d	$a3, $sp, 128
	addi.d	$a3, $a3, 512
	st.d	$a3, $sp, 136
	st.d	$a1, $sp, 144
	st.d	$a2, $sp, 88
	ld.d	$a1, $a0, 0
	st.d	$a1, $sp, 96
	addi.d	$a1, $a1, 512
	st.d	$a1, $sp, 104
	st.d	$a0, $sp, 112
	addi.d	$a0, $sp, 48
	addi.d	$a2, $sp, 120
	addi.d	$a3, $sp, 88
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
	ld.d	$a2, $fp, 232
	ld.d	$a0, $fp, 200
	ld.d	$a4, $fp, 208
	ld.d	$a5, $fp, 216
	ld.d	$a6, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a2, $a0
	srai.d	$a3, $a3, 3
	sub.d	$a4, $a4, $a5
	srai.d	$a4, $a4, 7
	sub.d	$a5, $a6, $a1
	srai.d	$a5, $a5, 7
.LBB82_87:
	sltu	$a2, $zero, $a2
	sub.d	$a2, $a3, $a2
	alsl.d	$a2, $a2, $a4, 2
	add.d	$a2, $a2, $a5
	addi.w	$a3, $a2, 0
	blez	$a3, .LBB82_130
# %bb.88:
	ld.d	$a3, $fp, 184
	addi.d	$a2, $a2, -1
	bstrpick.d	$s2, $a2, 31, 0
	sub.d	$a2, $a1, $a3
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s2
	bltz	$a2, .LBB82_91
# %bb.89:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB82_92
# %bb.90:
	slli.d	$a0, $s2, 7
	add.d	$a0, $a1, $a0
	b	.LBB82_94
.LBB82_91:
	srai.d	$a1, $a2, 2
	b	.LBB82_93
.LBB82_92:
	srli.d	$a1, $a2, 2
.LBB82_93:
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB82_94:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit113
	addi.d	$s3, $sp, 136
	st.d	$s3, $sp, 120
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 88
	move	$a0, $s3
	bltu	$a1, $a2, .LBB82_96
# %bb.95:                               # %.noexc.i.i115
	addi.d	$a0, $sp, 120
	addi.d	$a1, $sp, 88
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 88
	st.d	$a0, $sp, 120
	st.d	$a1, $sp, 136
.LBB82_96:                              # %._crit_edge.i.i.i114
	addi.w	$s4, $zero, -1
	beq	$a1, $s4, .LBB82_99
# %bb.97:                               # %._crit_edge.i.i.i114
	bnez	$a1, .LBB82_100
# %bb.98:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
.LBB82_99:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit116
	ld.d	$a0, $sp, 88
	ori	$s1, $zero, 1
	st.d	$a0, $sp, 128
	beq	$a0, $s1, .LBB82_101
	b	.LBB82_102
.LBB82_100:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 88
	ori	$s1, $zero, 1
	st.d	$a0, $sp, 128
	bne	$a0, $s1, .LBB82_102
.LBB82_101:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit118
	ld.d	$a0, $sp, 120
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 33
	beq	$a1, $a2, .LBB82_120
.LBB82_102:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit118.thread183
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s2
	bltz	$a1, .LBB82_105
# %bb.103:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB82_106
# %bb.104:
	slli.d	$a0, $s2, 7
	add.d	$a0, $a2, $a0
	b	.LBB82_108
.LBB82_105:
	srai.d	$a2, $a1, 2
	b	.LBB82_107
.LBB82_106:
	srli.d	$a2, $a1, 2
.LBB82_107:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB82_108:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit120
	addi.d	$s5, $sp, 104
	st.d	$s5, $sp, 88
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 48
	move	$a0, $s5
	bltu	$a1, $a2, .LBB82_111
# %bb.109:                              # %.noexc.i.i122
.Ltmp2141:
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2142:
# %bb.110:                              # %.noexc123
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB82_111:                             # %._crit_edge.i.i.i121
	beq	$a1, $s4, .LBB82_115
# %bb.112:                              # %._crit_edge.i.i.i121
	bnez	$a1, .LBB82_114
# %bb.113:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB82_115
.LBB82_114:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB82_115:
	ld.d	$a1, $sp, 48
	ld.d	$a0, $sp, 88
	ori	$a2, $zero, 1
	st.d	$a1, $sp, 96
	bne	$a1, $a2, .LBB82_117
# %bb.116:
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -35
	sltui	$s1, $a1, 1
	bne	$a0, $s5, .LBB82_118
	b	.LBB82_119
.LBB82_117:
	move	$s1, $zero
	beq	$a0, $s5, .LBB82_119
.LBB82_118:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i127
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB82_119:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit129
	ld.d	$a0, $sp, 120
.LBB82_120:                             # %.critedge63
	beq	$a0, $s3, .LBB82_122
# %bb.121:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i130
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB82_122:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit132
	beqz	$s1, .LBB82_130
# %bb.123:
	ld.d	$a3, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a3, $a1
	srai.d	$a1, $a1, 7
	add.d	$a2, $a1, $s2
	bltz	$a2, .LBB82_126
# %bb.124:
	ori	$a1, $zero, 3
	bltu	$a1, $a2, .LBB82_127
# %bb.125:
	ld.d	$a1, $a0, 0
	slli.d	$a2, $s2, 7
	add.d	$a2, $a3, $a2
	b	.LBB82_129
.LBB82_126:
	srai.d	$a3, $a2, 2
	b	.LBB82_128
.LBB82_127:
	srli.d	$a3, $a2, 2
.LBB82_128:
	slli.d	$a1, $a3, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a3, $a0, 3
	slli.d	$a3, $a3, 2
	sub.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 7
	add.d	$a2, $a1, $a2
.LBB82_129:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit134
	st.d	$a2, $sp, 120
	st.d	$a1, $sp, 128
	addi.d	$a1, $a1, 512
	st.d	$a1, $sp, 136
	st.d	$a0, $sp, 144
	addi.d	$a0, $sp, 88
	addi.d	$a2, $sp, 120
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E)
	jirl	$ra, $ra, 0
.LBB82_130:
	ld.d	$s8, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB82_131:
.Ltmp2143:
	ld.d	$a2, $sp, 120
	move	$fp, $a0
	beq	$a2, $s3, .LBB82_142
# %bb.132:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i138
	ld.d	$a0, $sp, 136
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB82_141
.LBB82_133:
.Ltmp2140:
	ld.d	$a2, $sp, 48
	move	$fp, $a0
	addi.d	$a0, $sp, 64
	bne	$a2, $a0, .LBB82_136
# %bb.134:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit104
	ld.d	$a0, $sp, 88
	bne	$a0, $s8, .LBB82_138
.LBB82_135:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit107
	ld.d	$a0, $sp, 120
	bne	$a0, $s1, .LBB82_140
	b	.LBB82_142
.LBB82_136:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i102
	ld.d	$a0, $sp, 64
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 88
	beq	$a0, $s8, .LBB82_135
	b	.LBB82_138
.LBB82_137:
.Ltmp2137:
	move	$fp, $a0
	ld.d	$a0, $sp, 88
	beq	$a0, $s8, .LBB82_135
.LBB82_138:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i105
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 120
	bne	$a0, $s1, .LBB82_140
	b	.LBB82_142
.LBB82_139:
.Ltmp2134:
	move	$fp, $a0
	ld.d	$a0, $sp, 120
	beq	$a0, $s1, .LBB82_142
.LBB82_140:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i108
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
.LBB82_141:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB82_142:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end82:
	.size	_ZN2PP3Cmd20single_line_commentsEv, .Lfunc_end82-_ZN2PP3Cmd20single_line_commentsEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table82:
.Lexception44:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Lfunc_begin44-.Lfunc_begin44  # >> Call Site 1 <<
	.uleb128 .Ltmp2132-.Lfunc_begin44       #   Call between .Lfunc_begin44 and .Ltmp2132
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2132-.Lfunc_begin44       # >> Call Site 2 <<
	.uleb128 .Ltmp2133-.Ltmp2132            #   Call between .Ltmp2132 and .Ltmp2133
	.uleb128 .Ltmp2134-.Lfunc_begin44       #     jumps to .Ltmp2134
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2133-.Lfunc_begin44       # >> Call Site 3 <<
	.uleb128 .Ltmp2135-.Ltmp2133            #   Call between .Ltmp2133 and .Ltmp2135
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2135-.Lfunc_begin44       # >> Call Site 4 <<
	.uleb128 .Ltmp2136-.Ltmp2135            #   Call between .Ltmp2135 and .Ltmp2136
	.uleb128 .Ltmp2137-.Lfunc_begin44       #     jumps to .Ltmp2137
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2136-.Lfunc_begin44       # >> Call Site 5 <<
	.uleb128 .Ltmp2138-.Ltmp2136            #   Call between .Ltmp2136 and .Ltmp2138
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2138-.Lfunc_begin44       # >> Call Site 6 <<
	.uleb128 .Ltmp2139-.Ltmp2138            #   Call between .Ltmp2138 and .Ltmp2139
	.uleb128 .Ltmp2140-.Lfunc_begin44       #     jumps to .Ltmp2140
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2139-.Lfunc_begin44       # >> Call Site 7 <<
	.uleb128 .Ltmp2141-.Ltmp2139            #   Call between .Ltmp2139 and .Ltmp2141
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2141-.Lfunc_begin44       # >> Call Site 8 <<
	.uleb128 .Ltmp2142-.Ltmp2141            #   Call between .Ltmp2141 and .Ltmp2142
	.uleb128 .Ltmp2143-.Lfunc_begin44       #     jumps to .Ltmp2143
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2142-.Lfunc_begin44       # >> Call Site 9 <<
	.uleb128 .Lfunc_end82-.Ltmp2142         #   Call between .Ltmp2142 and .Lfunc_end82
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end44:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd19multi_line_commentsERi # -- Begin function _ZN2PP3Cmd19multi_line_commentsERi
	.p2align	5
	.type	_ZN2PP3Cmd19multi_line_commentsERi,@function
_ZN2PP3Cmd19multi_line_commentsERi:     # @_ZN2PP3Cmd19multi_line_commentsERi
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception45
# %bb.0:
	addi.d	$sp, $sp, -192
	.cfi_def_cfa_offset 192
	st.d	$ra, $sp, 184                   # 8-byte Folded Spill
	st.d	$fp, $sp, 176                   # 8-byte Folded Spill
	st.d	$s0, $sp, 168                   # 8-byte Folded Spill
	st.d	$s1, $sp, 160                   # 8-byte Folded Spill
	st.d	$s2, $sp, 152                   # 8-byte Folded Spill
	st.d	$s3, $sp, 144                   # 8-byte Folded Spill
	st.d	$s4, $sp, 136                   # 8-byte Folded Spill
	st.d	$s5, $sp, 128                   # 8-byte Folded Spill
	st.d	$s6, $sp, 120                   # 8-byte Folded Spill
	st.d	$s7, $sp, 112                   # 8-byte Folded Spill
	st.d	$s8, $sp, 104                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a1
	ld.w	$a1, $a1, 0
	move	$s0, $a0
	move	$s4, $zero
	slti	$a0, $a1, 1
	sub.w	$s8, $zero, $a0
	addi.d	$s3, $s0, 160
	addi.d	$s5, $sp, 88
	addi.d	$s6, $sp, 56
	addi.d	$fp, $sp, 88
	addi.d	$s7, $sp, 56
	addi.w	$a0, $zero, -1
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	b	.LBB83_2
	.p2align	4, , 16
.LBB83_1:                               #   in Loop: Header=BB83_2 Depth=1
	ld.w	$a0, $s1, 0
	sltui	$a1, $a0, 1
	masknez	$a2, $s8, $a1
	maskeqz	$a1, $s4, $a1
	or	$s8, $a1, $a2
	addi.d	$a0, $a0, 1
	st.w	$a0, $s1, 0
	addi.d	$s4, $s4, 1
	addi.w	$s4, $s4, 1
.LBB83_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.w	$a3, $a2, $a3
	addi.w	$a2, $a3, -1
	bge	$s4, $a2, .LBB83_98
# %bb.3:                                #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s4
	bltz	$a2, .LBB83_6
# %bb.4:                                #   in Loop: Header=BB83_2 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB83_7
# %bb.5:                                #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a0, $s4, 7
	add.d	$a0, $a1, $a0
	b	.LBB83_9
	.p2align	4, , 16
.LBB83_6:                               #   in Loop: Header=BB83_2 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB83_8
	.p2align	4, , 16
.LBB83_7:                               #   in Loop: Header=BB83_2 Depth=1
	srli.d	$a1, $a2, 2
.LBB83_8:                               #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB83_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB83_2 Depth=1
	st.d	$s5, $sp, 72
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 40
	move	$a0, $s5
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB83_11
# %bb.10:                               # %.noexc.i.i
                                        #   in Loop: Header=BB83_2 Depth=1
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
.LBB83_11:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	beq	$a1, $a2, .LBB83_15
# %bb.12:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB83_2 Depth=1
	bnez	$a1, .LBB83_14
# %bb.13:                               #   in Loop: Header=BB83_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB83_15
	.p2align	4, , 16
.LBB83_14:                              #   in Loop: Header=BB83_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB83_15:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 40
	ld.d	$a0, $sp, 72
	st.d	$a1, $sp, 80
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB83_20
# %bb.16:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 47
	bne	$a1, $a2, .LBB83_20
# %bb.17:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	addi.w	$a3, $s4, 1
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB83_47
# %bb.18:                               #   in Loop: Header=BB83_2 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a1, .LBB83_48
# %bb.19:                               #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a0, $a3, 7
	add.d	$a0, $a2, $a0
	b	.LBB83_50
	.p2align	4, , 16
.LBB83_20:                              #   in Loop: Header=BB83_2 Depth=1
	move	$s2, $zero
	beq	$a0, $s5, .LBB83_22
.LBB83_21:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i63
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65
                                        #   in Loop: Header=BB83_2 Depth=1
	bnez	$s2, .LBB83_1
# %bb.23:                               #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s4
	bltz	$a1, .LBB83_26
# %bb.24:                               #   in Loop: Header=BB83_2 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB83_27
# %bb.25:                               #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a0, $s4, 7
	add.d	$a0, $a2, $a0
	b	.LBB83_29
.LBB83_26:                              #   in Loop: Header=BB83_2 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB83_28
.LBB83_27:                              #   in Loop: Header=BB83_2 Depth=1
	srli.d	$a2, $a1, 2
.LBB83_28:                              #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB83_29:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit73
                                        #   in Loop: Header=BB83_2 Depth=1
	st.d	$fp, $sp, 72
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 40
	move	$a0, $fp
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB83_31
# %bb.30:                               # %.noexc.i.i75
                                        #   in Loop: Header=BB83_2 Depth=1
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
.LBB83_31:                              # %._crit_edge.i.i.i74
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	beq	$a1, $a2, .LBB83_35
# %bb.32:                               # %._crit_edge.i.i.i74
                                        #   in Loop: Header=BB83_2 Depth=1
	bnez	$a1, .LBB83_34
# %bb.33:                               #   in Loop: Header=BB83_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB83_35
.LBB83_34:                              #   in Loop: Header=BB83_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB83_35:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit76
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 40
	ld.d	$a0, $sp, 72
	st.d	$a1, $sp, 80
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB83_40
# %bb.36:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit78
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 42
	bne	$a1, $a2, .LBB83_40
# %bb.37:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit78.thread
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	addi.w	$a3, $s4, 1
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB83_62
# %bb.38:                               #   in Loop: Header=BB83_2 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a1, .LBB83_63
# %bb.39:                               #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a0, $a3, 7
	add.d	$a0, $a2, $a0
	b	.LBB83_65
	.p2align	4, , 16
.LBB83_40:                              #   in Loop: Header=BB83_2 Depth=1
	move	$s2, $zero
	beq	$a0, $fp, .LBB83_42
.LBB83_41:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i90
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_42:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92
                                        #   in Loop: Header=BB83_2 Depth=1
	beqz	$s2, .LBB83_97
# %bb.43:                               #   in Loop: Header=BB83_2 Depth=1
	ld.w	$a0, $s1, 0
	bnez	$a0, .LBB83_79
# %bb.44:                               #   in Loop: Header=BB83_2 Depth=1
	move	$s7, $s1
	move	$s1, $s8
	move	$s8, $s5
	move	$s5, $s6
	move	$s6, $fp
	move	$fp, $s3
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s2, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.167)
	addi.d	$a1, $a0, %pc_lo12(.L.str.167)
	ori	$a2, $zero, 14
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.w	$a1, $s0, 0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.168)
	addi.d	$a1, $a0, %pc_lo12(.L.str.168)
	ori	$a2, $zero, 12
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB83_112
# %bb.45:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB83_77
# %bb.46:                               #   in Loop: Header=BB83_2 Depth=1
	ld.bu	$a0, $s3, 67
	b	.LBB83_78
.LBB83_47:                              #   in Loop: Header=BB83_2 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB83_49
.LBB83_48:                              #   in Loop: Header=BB83_2 Depth=1
	srli.d	$a2, $a1, 2
.LBB83_49:                              #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB83_50:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit57
                                        #   in Loop: Header=BB83_2 Depth=1
	st.d	$s6, $sp, 40
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 8
	move	$a0, $s6
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB83_53
# %bb.51:                               # %.noexc.i.i59
                                        #   in Loop: Header=BB83_2 Depth=1
.Ltmp2144:
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2145:
# %bb.52:                               # %.noexc
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB83_53:                              # %._crit_edge.i.i.i58
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	beq	$a1, $a2, .LBB83_57
# %bb.54:                               # %._crit_edge.i.i.i58
                                        #   in Loop: Header=BB83_2 Depth=1
	bnez	$a1, .LBB83_56
# %bb.55:                               #   in Loop: Header=BB83_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB83_57
.LBB83_56:                              #   in Loop: Header=BB83_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB83_57:                              #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 8
	ld.d	$a0, $sp, 40
	st.d	$a1, $sp, 48
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB83_59
# %bb.58:                               #   in Loop: Header=BB83_2 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -42
	sltui	$s2, $a1, 1
	bne	$a0, $s6, .LBB83_60
	b	.LBB83_61
.LBB83_59:                              #   in Loop: Header=BB83_2 Depth=1
	move	$s2, $zero
	beq	$a0, $s6, .LBB83_61
.LBB83_60:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_61:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a0, $sp, 72
	bne	$a0, $s5, .LBB83_21
	b	.LBB83_22
.LBB83_62:                              #   in Loop: Header=BB83_2 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB83_64
.LBB83_63:                              #   in Loop: Header=BB83_2 Depth=1
	srli.d	$a2, $a1, 2
.LBB83_64:                              #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB83_65:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit80
                                        #   in Loop: Header=BB83_2 Depth=1
	st.d	$s7, $sp, 40
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 8
	move	$a0, $s7
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB83_68
# %bb.66:                               # %.noexc.i.i82
                                        #   in Loop: Header=BB83_2 Depth=1
.Ltmp2147:
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2148:
# %bb.67:                               # %.noexc83
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB83_68:                              # %._crit_edge.i.i.i81
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a2, $sp, 0                     # 8-byte Folded Reload
	beq	$a1, $a2, .LBB83_72
# %bb.69:                               # %._crit_edge.i.i.i81
                                        #   in Loop: Header=BB83_2 Depth=1
	bnez	$a1, .LBB83_71
# %bb.70:                               #   in Loop: Header=BB83_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB83_72
.LBB83_71:                              #   in Loop: Header=BB83_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB83_72:                              #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 8
	ld.d	$a0, $sp, 40
	st.d	$a1, $sp, 48
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB83_74
# %bb.73:                               #   in Loop: Header=BB83_2 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -47
	sltui	$s2, $a1, 1
	bne	$a0, $s7, .LBB83_75
	b	.LBB83_76
.LBB83_74:                              #   in Loop: Header=BB83_2 Depth=1
	move	$s2, $zero
	beq	$a0, $s7, .LBB83_76
.LBB83_75:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i87
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_76:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit89
                                        #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a0, $sp, 72
	bne	$a0, $fp, .LBB83_41
	b	.LBB83_42
.LBB83_77:                              #   in Loop: Header=BB83_2 Depth=1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.LBB83_78:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
                                        #   in Loop: Header=BB83_2 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	move	$s3, $fp
	move	$fp, $s6
	move	$s6, $s5
	move	$s5, $s8
	move	$s8, $s1
	move	$s1, $s7
	addi.d	$s7, $sp, 56
.LBB83_79:                              #   in Loop: Header=BB83_2 Depth=1
	ld.d	$a4, $s0, 176
	ld.d	$a3, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a4, $a3
	srai.d	$a5, $a1, 7
	add.d	$a2, $a5, $s8
	bltz	$a2, .LBB83_83
# %bb.80:                               #   in Loop: Header=BB83_2 Depth=1
	ori	$a1, $zero, 3
	bltu	$a1, $a2, .LBB83_84
# %bb.81:                               #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a1, $s8, 7
	add.d	$a2, $a4, $a1
	move	$a1, $a0
	add.d	$a5, $a5, $s4
	bgez	$a5, .LBB83_86
.LBB83_82:                              #   in Loop: Header=BB83_2 Depth=1
	srai.d	$a4, $a5, 2
	b	.LBB83_89
.LBB83_83:                              #   in Loop: Header=BB83_2 Depth=1
	srai.d	$a6, $a2, 2
	b	.LBB83_85
.LBB83_84:                              #   in Loop: Header=BB83_2 Depth=1
	srli.d	$a6, $a2, 2
.LBB83_85:                              #   in Loop: Header=BB83_2 Depth=1
	alsl.d	$a1, $a6, $a0, 3
	slli.d	$a7, $a6, 3
	ldx.d	$a7, $a0, $a7
	slli.d	$a6, $a6, 2
	sub.d	$a2, $a2, $a6
	slli.d	$a2, $a2, 7
	add.d	$a2, $a7, $a2
	add.d	$a5, $a5, $s4
	bltz	$a5, .LBB83_82
.LBB83_86:                              #   in Loop: Header=BB83_2 Depth=1
	ori	$a6, $zero, 3
	bltu	$a6, $a5, .LBB83_88
# %bb.87:                               #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a5, $s4, 7
	add.d	$a4, $a4, $a5
	b	.LBB83_90
.LBB83_88:                              #   in Loop: Header=BB83_2 Depth=1
	srli.d	$a4, $a5, 2
.LBB83_89:                              #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a3, $a4, 3
	ldx.d	$a3, $a0, $a3
	alsl.d	$a0, $a4, $a0, 3
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a5, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a3, $a4
.LBB83_90:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit100
                                        #   in Loop: Header=BB83_2 Depth=1
	sub.d	$a3, $a4, $a3
	srai.d	$a5, $a3, 7
	addi.w	$a6, $zero, -2
	addi.d	$a3, $a5, 2
	blt	$a5, $a6, .LBB83_93
# %bb.91:                               #   in Loop: Header=BB83_2 Depth=1
	ori	$a5, $zero, 3
	bltu	$a5, $a3, .LBB83_94
# %bb.92:                               #   in Loop: Header=BB83_2 Depth=1
	addi.d	$a3, $a4, 256
	b	.LBB83_96
.LBB83_93:                              #   in Loop: Header=BB83_2 Depth=1
	srai.d	$a4, $a3, 2
	b	.LBB83_95
.LBB83_94:                              #   in Loop: Header=BB83_2 Depth=1
	srli.d	$a4, $a3, 2
.LBB83_95:                              #   in Loop: Header=BB83_2 Depth=1
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	alsl.d	$a0, $a4, $a0, 3
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a5, $a3
.LBB83_96:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit102
                                        #   in Loop: Header=BB83_2 Depth=1
	st.d	$a2, $sp, 72
	ld.d	$a2, $a1, 0
	st.d	$a2, $sp, 80
	addi.d	$a2, $a2, 512
	st.d	$a2, $sp, 88
	st.d	$a1, $sp, 96
	st.d	$a3, $sp, 40
	ld.d	$a1, $a0, 0
	st.d	$a1, $sp, 48
	addi.d	$a1, $a1, 512
	st.d	$a1, $sp, 56
	st.d	$a0, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a2, $sp, 72
	addi.d	$a3, $sp, 40
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
	ld.w	$a0, $s1, 0
	addi.d	$a0, $a0, -1
	st.w	$a0, $s1, 0
	move	$s4, $s8
.LBB83_97:                              #   in Loop: Header=BB83_2 Depth=1
	addi.w	$s4, $s4, 1
	b	.LBB83_2
.LBB83_98:
	ld.w	$a2, $s1, 0
	blez	$a2, .LBB83_111
# %bb.99:
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a5, $a2, 7
	add.d	$a4, $a5, $s8
	bltz	$a4, .LBB83_103
# %bb.100:
	ori	$a2, $zero, 3
	bltu	$a2, $a4, .LBB83_104
# %bb.101:
	slli.d	$a2, $s8, 7
	add.d	$a4, $a1, $a2
	move	$a2, $a0
	add.d	$a6, $a5, $a3
	bgez	$a6, .LBB83_106
.LBB83_102:
	srai.d	$a1, $a6, 2
	b	.LBB83_109
.LBB83_103:
	srai.d	$a6, $a4, 2
	b	.LBB83_105
.LBB83_104:
	srli.d	$a6, $a4, 2
.LBB83_105:
	alsl.d	$a2, $a6, $a0, 3
	slli.d	$a7, $a6, 3
	ldx.d	$a7, $a0, $a7
	slli.d	$a6, $a6, 2
	sub.d	$a4, $a4, $a6
	slli.d	$a4, $a4, 7
	add.d	$a4, $a7, $a4
	add.d	$a6, $a5, $a3
	bltz	$a6, .LBB83_102
.LBB83_106:
	ori	$a5, $zero, 3
	bltu	$a5, $a6, .LBB83_108
# %bb.107:
	ld.d	$a5, $a0, 0
	slli.d	$a3, $a3, 7
	add.d	$a1, $a1, $a3
	b	.LBB83_110
.LBB83_108:
	srli.d	$a1, $a6, 2
.LBB83_109:
	slli.d	$a3, $a1, 3
	ldx.d	$a5, $a0, $a3
	alsl.d	$a0, $a1, $a0, 3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a5, $a1
.LBB83_110:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit107
	st.d	$a4, $sp, 72
	ld.d	$a3, $a2, 0
	st.d	$a3, $sp, 80
	addi.d	$a3, $a3, 512
	st.d	$a3, $sp, 88
	st.d	$a2, $sp, 96
	st.d	$a1, $sp, 40
	st.d	$a5, $sp, 48
	addi.d	$a1, $a5, 512
	st.d	$a1, $sp, 56
	st.d	$a0, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a2, $sp, 72
	addi.d	$a3, $sp, 40
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.LBB83_111:
	ld.d	$s8, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 168                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 176                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 184                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 192
	ret
.LBB83_112:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB83_113:
.Ltmp2149:
	ld.d	$a2, $sp, 72
	move	$a1, $fp
	move	$fp, $a0
	bne	$a2, $a1, .LBB83_115
	b	.LBB83_116
.LBB83_114:
.Ltmp2146:
	ld.d	$a2, $sp, 72
	move	$fp, $a0
	beq	$a2, $s5, .LBB83_116
.LBB83_115:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i69
	ld.d	$a0, $sp, 88
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB83_116:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end83:
	.size	_ZN2PP3Cmd19multi_line_commentsERi, .Lfunc_end83-_ZN2PP3Cmd19multi_line_commentsERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table83:
.Lexception45:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Lfunc_begin45-.Lfunc_begin45  # >> Call Site 1 <<
	.uleb128 .Ltmp2144-.Lfunc_begin45       #   Call between .Lfunc_begin45 and .Ltmp2144
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2144-.Lfunc_begin45       # >> Call Site 2 <<
	.uleb128 .Ltmp2145-.Ltmp2144            #   Call between .Ltmp2144 and .Ltmp2145
	.uleb128 .Ltmp2146-.Lfunc_begin45       #     jumps to .Ltmp2146
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2145-.Lfunc_begin45       # >> Call Site 3 <<
	.uleb128 .Ltmp2147-.Ltmp2145            #   Call between .Ltmp2145 and .Ltmp2147
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2147-.Lfunc_begin45       # >> Call Site 4 <<
	.uleb128 .Ltmp2148-.Ltmp2147            #   Call between .Ltmp2147 and .Ltmp2148
	.uleb128 .Ltmp2149-.Lfunc_begin45       #     jumps to .Ltmp2149
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2148-.Lfunc_begin45       # >> Call Site 5 <<
	.uleb128 .Lfunc_end83-.Ltmp2148         #   Call between .Ltmp2148 and .Lfunc_end83
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end45:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd13handle_quotesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd13handle_quotesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd13handle_quotesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd13handle_quotesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd13handle_quotesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	st.d	$s1, $sp, 32                    # 8-byte Folded Spill
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	st.d	$s3, $sp, 16                    # 8-byte Folded Spill
	st.d	$s4, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$fp, $a2
	move	$s0, $a1
	move	$s1, $a0
	move	$s2, $zero
	move	$s3, $zero
	ori	$s4, $zero, 3
	b	.LBB84_4
	.p2align	4, , 16
.LBB84_1:                               #   in Loop: Header=BB84_4 Depth=1
	srai.d	$a1, $a2, 2
.LBB84_2:                               #   in Loop: Header=BB84_4 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB84_3:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB84_4 Depth=1
	move	$a1, $s0
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word13handle_quotesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 1
	addi.d	$s2, $s2, 128
.LBB84_4:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $s1, 232
	ld.d	$a0, $s1, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s1, 208
	ld.d	$a4, $s1, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s1, 192
	ld.d	$a1, $s1, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s3, $a2, .LBB84_9
# %bb.5:                                #   in Loop: Header=BB84_4 Depth=1
	ld.d	$a2, $s1, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s3, $a2
	bltz	$a2, .LBB84_1
# %bb.6:                                #   in Loop: Header=BB84_4 Depth=1
	bltu	$s4, $a2, .LBB84_8
# %bb.7:                                #   in Loop: Header=BB84_4 Depth=1
	add.d	$a0, $a1, $s2
	b	.LBB84_3
	.p2align	4, , 16
.LBB84_8:                               #   in Loop: Header=BB84_4 Depth=1
	srli.d	$a1, $a2, 2
	b	.LBB84_2
.LBB84_9:
	ld.d	$s4, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s3, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end84:
	.size	_ZN2PP3Cmd13handle_quotesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end84-_ZN2PP3Cmd13handle_quotesERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd15handle_exe_argsERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd15handle_exe_argsERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd15handle_exe_argsERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd15handle_exe_argsERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd15handle_exe_argsERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception46
# %bb.0:
	addi.d	$sp, $sp, -624
	.cfi_def_cfa_offset 624
	st.d	$ra, $sp, 616                   # 8-byte Folded Spill
	st.d	$fp, $sp, 608                   # 8-byte Folded Spill
	st.d	$s0, $sp, 600                   # 8-byte Folded Spill
	st.d	$s1, $sp, 592                   # 8-byte Folded Spill
	st.d	$s2, $sp, 584                   # 8-byte Folded Spill
	st.d	$s3, $sp, 576                   # 8-byte Folded Spill
	st.d	$s4, $sp, 568                   # 8-byte Folded Spill
	st.d	$s5, $sp, 560                   # 8-byte Folded Spill
	st.d	$s6, $sp, 552                   # 8-byte Folded Spill
	st.d	$s7, $sp, 544                   # 8-byte Folded Spill
	st.d	$s8, $sp, 536                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	move	$s0, $a0
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	move	$s8, $zero
	addi.d	$s3, $sp, 120
	addi.d	$s4, $sp, 120
	addi.d	$s5, $sp, 120
	ori	$s7, $zero, 256
	ori	$s6, $zero, 2
	ori	$a0, $zero, 0
	lu32i.d	$a0, -1
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	addi.w	$fp, $zero, -1
	b	.LBB85_2
	.p2align	4, , 16
.LBB85_1:                               # %_ZNSolsEPFRSoS_E.exit
                                        #   in Loop: Header=BB85_2 Depth=1
	addi.d	$s8, $s8, 1
	addi.d	$s7, $s7, 128
	addi.w	$s6, $s6, 1
.LBB85_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB85_43 Depth 2
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 32
	ld.d	$a3, $sp, 32                    # 8-byte Folded Reload
	add.d	$a2, $a2, $a3
	srai.d	$a2, $a2, 32
	bge	$s8, $a2, .LBB85_160
# %bb.3:                                #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s8
	bltz	$a2, .LBB85_6
# %bb.4:                                #   in Loop: Header=BB85_2 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB85_7
# %bb.5:                                #   in Loop: Header=BB85_2 Depth=1
	slli.d	$a0, $s8, 7
	add.d	$a0, $a1, $a0
	b	.LBB85_9
	.p2align	4, , 16
.LBB85_6:                               #   in Loop: Header=BB85_2 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB85_8
	.p2align	4, , 16
.LBB85_7:                               #   in Loop: Header=BB85_2 Depth=1
	srli.d	$a1, $a2, 2
.LBB85_8:                               #   in Loop: Header=BB85_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB85_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB85_2 Depth=1
	st.d	$s3, $sp, 104
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 72
	move	$a0, $s3
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB85_12
# %bb.10:                               # %.noexc.i.i
                                        #   in Loop: Header=BB85_2 Depth=1
.Ltmp2155:
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 72
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2156:
# %bb.11:                               # %.noexc
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 72
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
.LBB85_12:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB85_2 Depth=1
	beq	$a1, $fp, .LBB85_16
# %bb.13:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB85_2 Depth=1
	bnez	$a1, .LBB85_15
# %bb.14:                               #   in Loop: Header=BB85_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB85_16
	.p2align	4, , 16
.LBB85_15:                              #   in Loop: Header=BB85_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB85_16:                              #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 72
	ld.d	$a0, $sp, 104
	st.d	$a1, $sp, 112
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB85_21
# %bb.17:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 45
	bne	$a1, $a2, .LBB85_21
# %bb.18:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	addi.d	$s1, $s8, 1
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s1
	bltz	$a1, .LBB85_127
# %bb.19:                               #   in Loop: Header=BB85_2 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB85_128
# %bb.20:                               #   in Loop: Header=BB85_2 Depth=1
	slli.d	$a0, $s1, 7
	add.d	$a0, $a2, $a0
	b	.LBB85_130
	.p2align	4, , 16
.LBB85_21:                              #   in Loop: Header=BB85_2 Depth=1
	move	$s2, $zero
	beq	$a0, $s3, .LBB85_23
.LBB85_22:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i112
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_23:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit114
                                        #   in Loop: Header=BB85_2 Depth=1
	beqz	$s2, .LBB85_1
# %bb.24:                               #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	addi.d	$a3, $s8, 1
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB85_27
# %bb.25:                               #   in Loop: Header=BB85_2 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a1, .LBB85_28
# %bb.26:                               #   in Loop: Header=BB85_2 Depth=1
	slli.d	$a0, $a3, 7
	add.d	$a0, $a2, $a0
	b	.LBB85_30
.LBB85_27:                              #   in Loop: Header=BB85_2 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB85_29
.LBB85_28:                              #   in Loop: Header=BB85_2 Depth=1
	srli.d	$a2, $a1, 2
.LBB85_29:                              #   in Loop: Header=BB85_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB85_30:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit116
                                        #   in Loop: Header=BB85_2 Depth=1
	st.d	$s4, $sp, 104
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 72
	move	$a0, $s4
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB85_33
# %bb.31:                               # %.noexc.i.i118
                                        #   in Loop: Header=BB85_2 Depth=1
.Ltmp2164:
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 72
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2165:
# %bb.32:                               # %.noexc119
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 72
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
.LBB85_33:                              # %._crit_edge.i.i.i117
                                        #   in Loop: Header=BB85_2 Depth=1
	beq	$a1, $fp, .LBB85_37
# %bb.34:                               # %._crit_edge.i.i.i117
                                        #   in Loop: Header=BB85_2 Depth=1
	bnez	$a1, .LBB85_36
# %bb.35:                               #   in Loop: Header=BB85_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB85_37
.LBB85_36:                              #   in Loop: Header=BB85_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB85_37:                              #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 72
	ld.d	$a0, $sp, 104
	st.d	$a1, $sp, 112
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB85_39
# %bb.38:                               #   in Loop: Header=BB85_2 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -118
	sltui	$s1, $a1, 1
	bne	$a0, $s4, .LBB85_40
	b	.LBB85_41
	.p2align	4, , 16
.LBB85_39:                              #   in Loop: Header=BB85_2 Depth=1
	move	$s1, $zero
	beq	$a0, $s4, .LBB85_41
.LBB85_40:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i123
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_41:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit125
                                        #   in Loop: Header=BB85_2 Depth=1
	move	$s3, $zero
	xori	$s1, $s1, 1
	st.d	$s6, $sp, 16                    # 8-byte Folded Spill
	st.d	$s7, $sp, 24                    # 8-byte Folded Spill
	move	$s4, $s7
	b	.LBB85_43
	.p2align	4, , 16
.LBB85_42:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit193
                                        #   in Loop: Header=BB85_43 Depth=2
	addi.d	$s3, $s3, 1
	addi.d	$s4, $s4, 128
	addi.w	$s6, $s6, 1
.LBB85_43:                              #   Parent Loop BB85_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srai.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.w	$a3, $a2, $a3
	bge	$s6, $a3, .LBB85_120
# %bb.44:                               #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a2, $s0, 184
	addi.w	$a3, $a3, -1
	add.d	$s7, $s8, $s3
	bge	$s6, $a3, .LBB85_67
# %bb.45:                               #   in Loop: Header=BB85_43 Depth=2
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s7, $a2
	addi.d	$a3, $a3, 2
	bltz	$a3, .LBB85_48
# %bb.46:                               #   in Loop: Header=BB85_43 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB85_49
# %bb.47:                               #   in Loop: Header=BB85_43 Depth=2
	add.d	$a0, $a1, $s4
	b	.LBB85_51
.LBB85_48:                              #   in Loop: Header=BB85_43 Depth=2
	srai.d	$a1, $a3, 2
	b	.LBB85_50
.LBB85_49:                              #   in Loop: Header=BB85_43 Depth=2
	srli.d	$a1, $a3, 2
.LBB85_50:                              #   in Loop: Header=BB85_43 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s7, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 256
.LBB85_51:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit141
                                        #   in Loop: Header=BB85_43 Depth=2
	addi.d	$a2, $sp, 120
	st.d	$a2, $sp, 104
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 72
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB85_54
# %bb.52:                               # %.noexc.i.i143
                                        #   in Loop: Header=BB85_43 Depth=2
.Ltmp2167:
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 72
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2168:
# %bb.53:                               # %.noexc144
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 72
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
.LBB85_54:                              # %._crit_edge.i.i.i142
                                        #   in Loop: Header=BB85_43 Depth=2
	beq	$a1, $fp, .LBB85_58
# %bb.55:                               # %._crit_edge.i.i.i142
                                        #   in Loop: Header=BB85_43 Depth=2
	bnez	$a1, .LBB85_57
# %bb.56:                               #   in Loop: Header=BB85_43 Depth=2
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB85_58
.LBB85_57:                              #   in Loop: Header=BB85_43 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB85_58:                              #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 72
	ld.d	$a0, $sp, 104
	st.d	$a1, $sp, 112
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB85_63
# %bb.59:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit147
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 45
	bne	$a1, $a2, .LBB85_63
# %bb.60:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit147.thread
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s7, $a1
	addi.d	$a3, $a3, 3
	bltz	$a3, .LBB85_87
# %bb.61:                               #   in Loop: Header=BB85_43 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB85_88
# %bb.62:                               #   in Loop: Header=BB85_43 Depth=2
	add.d	$a0, $a2, $s4
	addi.d	$a0, $a0, 128
	b	.LBB85_90
	.p2align	4, , 16
.LBB85_63:                              #   in Loop: Header=BB85_43 Depth=2
	move	$s2, $zero
	addi.d	$a1, $sp, 120
	beq	$a0, $a1, .LBB85_65
.LBB85_64:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i170
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_65:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit172
                                        #   in Loop: Header=BB85_43 Depth=2
	bnez	$s2, .LBB85_120
# %bb.66:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit172._crit_edge
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $s0, 176
	ld.d	$a2, $s0, 184
	ld.d	$a0, $s0, 200
.LBB85_67:                              #   in Loop: Header=BB85_43 Depth=2
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s7, $a2
	addi.d	$a3, $a3, 2
	bltz	$a3, .LBB85_70
# %bb.68:                               #   in Loop: Header=BB85_43 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB85_71
# %bb.69:                               #   in Loop: Header=BB85_43 Depth=2
	add.d	$a0, $a1, $s4
	b	.LBB85_73
	.p2align	4, , 16
.LBB85_70:                              #   in Loop: Header=BB85_43 Depth=2
	srai.d	$a1, $a3, 2
	b	.LBB85_72
	.p2align	4, , 16
.LBB85_71:                              #   in Loop: Header=BB85_43 Depth=2
	srli.d	$a1, $a3, 2
.LBB85_72:                              #   in Loop: Header=BB85_43 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s7, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 256
.LBB85_73:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit183
                                        #   in Loop: Header=BB85_43 Depth=2
	st.d	$s5, $sp, 104
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 72
	move	$a0, $s5
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB85_76
# %bb.74:                               # %.noexc.i.i185
                                        #   in Loop: Header=BB85_43 Depth=2
.Ltmp2176:
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 72
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2177:
# %bb.75:                               # %.noexc186
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 72
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
.LBB85_76:                              # %._crit_edge.i.i.i184
                                        #   in Loop: Header=BB85_43 Depth=2
	beq	$a1, $fp, .LBB85_80
# %bb.77:                               # %._crit_edge.i.i.i184
                                        #   in Loop: Header=BB85_43 Depth=2
	bnez	$a1, .LBB85_79
# %bb.78:                               #   in Loop: Header=BB85_43 Depth=2
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB85_80
	.p2align	4, , 16
.LBB85_79:                              #   in Loop: Header=BB85_43 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB85_80:                              #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a2, $sp, 72
	sltu	$a0, $zero, $s3
	or	$a0, $s1, $a0
	st.d	$a2, $sp, 112
	bnez	$a0, .LBB85_83
# %bb.81:                               #   in Loop: Header=BB85_43 Depth=2
.Ltmp2179:
	addi.d	$a0, $sp, 104
	ori	$a3, $zero, 1
	ori	$a4, $zero, 36
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc)
	jirl	$ra, $ra, 0
.Ltmp2180:
# %bb.82:                               # %._crit_edge
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a2, $sp, 112
.LBB85_83:                              #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 104
.Ltmp2182:
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2183:
# %bb.84:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB85_43 Depth=2
.Ltmp2184:
	pcalau12i	$a1, %pc_hi20(.L.str.5)
	addi.d	$a1, $a1, %pc_lo12(.L.str.5)
	ori	$a2, $zero, 1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2185:
# %bb.85:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a0, $sp, 104
	beq	$a0, $s5, .LBB85_42
# %bb.86:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i191
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB85_42
.LBB85_87:                              #   in Loop: Header=BB85_43 Depth=2
	srai.d	$a2, $a3, 2
	b	.LBB85_89
.LBB85_88:                              #   in Loop: Header=BB85_43 Depth=2
	srli.d	$a2, $a3, 2
.LBB85_89:                              #   in Loop: Header=BB85_43 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s7, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 384
.LBB85_90:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit149
                                        #   in Loop: Header=BB85_43 Depth=2
	addi.d	$a2, $sp, 88
	st.d	$a2, $sp, 72
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 40
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB85_93
# %bb.91:                               # %.noexc.i.i151
                                        #   in Loop: Header=BB85_43 Depth=2
.Ltmp2170:
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2171:
# %bb.92:                               # %.noexc152
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
.LBB85_93:                              # %._crit_edge.i.i.i150
                                        #   in Loop: Header=BB85_43 Depth=2
	beq	$a1, $fp, .LBB85_96
# %bb.94:                               # %._crit_edge.i.i.i150
                                        #   in Loop: Header=BB85_43 Depth=2
	bnez	$a1, .LBB85_97
# %bb.95:                               #   in Loop: Header=BB85_43 Depth=2
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB85_96:                              #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a0, $sp, 40
	st.d	$a0, $sp, 80
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB85_98
	b	.LBB85_99
.LBB85_97:                              #   in Loop: Header=BB85_43 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 40
	st.d	$a0, $sp, 80
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB85_99
.LBB85_98:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit155
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a0, $sp, 72
	ld.bu	$a1, $a0, 0
	ori	$s2, $zero, 1
	ori	$a2, $zero, 118
	beq	$a1, $a2, .LBB85_117
.LBB85_99:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit155.thread215
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s7, $a1
	addi.d	$a3, $a3, 3
	bltz	$a3, .LBB85_102
# %bb.100:                              #   in Loop: Header=BB85_43 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB85_103
# %bb.101:                              #   in Loop: Header=BB85_43 Depth=2
	add.d	$a0, $a2, $s4
	addi.d	$a0, $a0, 128
	b	.LBB85_105
.LBB85_102:                             #   in Loop: Header=BB85_43 Depth=2
	srai.d	$a2, $a3, 2
	b	.LBB85_104
.LBB85_103:                             #   in Loop: Header=BB85_43 Depth=2
	srli.d	$a2, $a3, 2
.LBB85_104:                             #   in Loop: Header=BB85_43 Depth=2
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s7, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
	addi.d	$a0, $a0, 384
.LBB85_105:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit157
                                        #   in Loop: Header=BB85_43 Depth=2
	addi.d	$a2, $sp, 56
	st.d	$a2, $sp, 40
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 528
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB85_108
# %bb.106:                              # %.noexc.i.i159
                                        #   in Loop: Header=BB85_43 Depth=2
.Ltmp2173:
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 528
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2174:
# %bb.107:                              # %.noexc160
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 528
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB85_108:                             # %._crit_edge.i.i.i158
                                        #   in Loop: Header=BB85_43 Depth=2
	beq	$a1, $fp, .LBB85_112
# %bb.109:                              # %._crit_edge.i.i.i158
                                        #   in Loop: Header=BB85_43 Depth=2
	bnez	$a1, .LBB85_111
# %bb.110:                              #   in Loop: Header=BB85_43 Depth=2
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB85_112
.LBB85_111:                             #   in Loop: Header=BB85_43 Depth=2
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB85_112:                             #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 528
	ld.d	$a0, $sp, 40
	st.d	$a1, $sp, 48
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB85_114
# %bb.113:                              #   in Loop: Header=BB85_43 Depth=2
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -108
	sltui	$s2, $a1, 1
	addi.d	$a1, $sp, 56
	bne	$a0, $a1, .LBB85_115
	b	.LBB85_116
.LBB85_114:                             #   in Loop: Header=BB85_43 Depth=2
	move	$s2, $zero
	addi.d	$a1, $sp, 56
	beq	$a0, $a1, .LBB85_116
.LBB85_115:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i164
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_116:                             # %.critedge90.thread
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a0, $sp, 72
.LBB85_117:                             # %.critedge90.thread218
                                        #   in Loop: Header=BB85_43 Depth=2
	addi.d	$a1, $sp, 88
	beq	$a0, $a1, .LBB85_119
# %bb.118:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i167
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_119:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit169
                                        #   in Loop: Header=BB85_43 Depth=2
	ld.d	$a0, $sp, 104
	addi.d	$a1, $sp, 120
	bne	$a0, $a1, .LBB85_64
	b	.LBB85_65
	.p2align	4, , 16
.LBB85_120:                             #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a0, $sp, 152
	ld.d	$a0, $a0, -24
	addi.d	$a1, $sp, 392
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB85_182
# %bb.121:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.bu	$a0, $s2, 56
	addi.d	$s3, $sp, 120
	addi.d	$s4, $sp, 120
	ld.d	$s7, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 16                    # 8-byte Folded Reload
	beqz	$a0, .LBB85_123
# %bb.122:                              #   in Loop: Header=BB85_2 Depth=1
	ld.bu	$a0, $s2, 67
	b	.LBB85_125
.LBB85_123:                             #   in Loop: Header=BB85_2 Depth=1
.Ltmp2187:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2188:
# %bb.124:                              # %.noexc202
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp2189:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp2190:
.LBB85_125:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB85_2 Depth=1
.Ltmp2191:
	ext.w.b	$a1, $a0
	addi.d	$a0, $sp, 152
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2192:
# %bb.126:                              # %.noexc204
                                        #   in Loop: Header=BB85_2 Depth=1
.Ltmp2193:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2194:
	b	.LBB85_1
.LBB85_127:                             #   in Loop: Header=BB85_2 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB85_129
.LBB85_128:                             #   in Loop: Header=BB85_2 Depth=1
	srli.d	$a2, $a1, 2
.LBB85_129:                             #   in Loop: Header=BB85_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB85_130:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit94
                                        #   in Loop: Header=BB85_2 Depth=1
	addi.d	$a2, $sp, 88
	st.d	$a2, $sp, 72
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 40
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB85_133
# %bb.131:                              # %.noexc.i.i96
                                        #   in Loop: Header=BB85_2 Depth=1
.Ltmp2158:
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2159:
# %bb.132:                              # %.noexc97
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
.LBB85_133:                             # %._crit_edge.i.i.i95
                                        #   in Loop: Header=BB85_2 Depth=1
	beq	$a1, $fp, .LBB85_136
# %bb.134:                              # %._crit_edge.i.i.i95
                                        #   in Loop: Header=BB85_2 Depth=1
	bnez	$a1, .LBB85_137
# %bb.135:                              #   in Loop: Header=BB85_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
.LBB85_136:                             #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a0, $sp, 40
	st.d	$a0, $sp, 80
	ori	$a1, $zero, 1
	beq	$a0, $a1, .LBB85_138
	b	.LBB85_139
.LBB85_137:                             #   in Loop: Header=BB85_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 40
	st.d	$a0, $sp, 80
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB85_139
.LBB85_138:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit100
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a0, $sp, 72
	ld.bu	$a1, $a0, 0
	ori	$s2, $zero, 1
	ori	$a2, $zero, 118
	beq	$a1, $a2, .LBB85_157
.LBB85_139:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit100.thread208
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s1
	bltz	$a1, .LBB85_142
# %bb.140:                              #   in Loop: Header=BB85_2 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB85_143
# %bb.141:                              #   in Loop: Header=BB85_2 Depth=1
	slli.d	$a0, $s1, 7
	add.d	$a0, $a2, $a0
	b	.LBB85_145
.LBB85_142:                             #   in Loop: Header=BB85_2 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB85_144
.LBB85_143:                             #   in Loop: Header=BB85_2 Depth=1
	srli.d	$a2, $a1, 2
.LBB85_144:                             #   in Loop: Header=BB85_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB85_145:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit102
                                        #   in Loop: Header=BB85_2 Depth=1
	addi.d	$a2, $sp, 56
	st.d	$a2, $sp, 40
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 528
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB85_148
# %bb.146:                              # %.noexc.i.i104
                                        #   in Loop: Header=BB85_2 Depth=1
.Ltmp2161:
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 528
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2162:
# %bb.147:                              # %.noexc105
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 528
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB85_148:                             # %._crit_edge.i.i.i103
                                        #   in Loop: Header=BB85_2 Depth=1
	beq	$a1, $fp, .LBB85_152
# %bb.149:                              # %._crit_edge.i.i.i103
                                        #   in Loop: Header=BB85_2 Depth=1
	bnez	$a1, .LBB85_151
# %bb.150:                              #   in Loop: Header=BB85_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB85_152
.LBB85_151:                             #   in Loop: Header=BB85_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB85_152:                             #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 528
	ld.d	$a0, $sp, 40
	st.d	$a1, $sp, 48
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB85_154
# %bb.153:                              #   in Loop: Header=BB85_2 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -108
	sltui	$s2, $a1, 1
	addi.d	$a1, $sp, 56
	bne	$a0, $a1, .LBB85_155
	b	.LBB85_156
.LBB85_154:                             #   in Loop: Header=BB85_2 Depth=1
	move	$s2, $zero
	addi.d	$a1, $sp, 56
	beq	$a0, $a1, .LBB85_156
.LBB85_155:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_156:                             # %.critedge.thread
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a0, $sp, 72
.LBB85_157:                             # %.critedge.thread211
                                        #   in Loop: Header=BB85_2 Depth=1
	addi.d	$a1, $sp, 88
	beq	$a0, $a1, .LBB85_159
# %bb.158:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i109
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_159:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit111
                                        #   in Loop: Header=BB85_2 Depth=1
	ld.d	$a0, $sp, 104
	bne	$a0, $s3, .LBB85_22
	b	.LBB85_23
.LBB85_160:
	ld.d	$a0, $sp, 200
	addi.d	$s0, $sp, 120
	st.d	$s0, $sp, 104
	st.d	$zero, $sp, 112
	st.b	$zero, $sp, 120
	beqz	$a0, .LBB85_163
# %bb.161:
	ld.d	$a1, $sp, 184
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB85_163
# %bb.162:
	ld.d	$a3, $sp, 192
	sub.d	$a4, $a0, $a3
.Ltmp2150:
	addi.d	$a0, $sp, 104
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2151:
	ld.d	$fp, $sp, 8                     # 8-byte Folded Reload
	b	.LBB85_164
.LBB85_163:
	addi.d	$a1, $sp, 232
.Ltmp2152:
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2153:
	ld.d	$fp, $sp, 8                     # 8-byte Folded Reload
.LBB85_164:                             # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a0, $fp, 0
	addi.d	$a2, $fp, 16
	beq	$a0, $a2, .LBB85_172
# %bb.165:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	ld.d	$a1, $sp, 104
	beq	$a1, $s0, .LBB85_175
# %bb.166:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	ld.d	$a2, $a2, 0
	vld	$vr0, $sp, 112
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	beqz	$a0, .LBB85_174
.LBB85_167:
	st.d	$a0, $sp, 104
	st.d	$a2, $sp, 120
	st.d	$zero, $sp, 112
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 104
	beq	$a0, $s0, .LBB85_169
.LBB85_168:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i198
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_169:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit200
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 136
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 136
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 232
	st.d	$a2, $sp, 152
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 248
	st.d	$a1, $sp, 160
	beq	$a0, $a2, .LBB85_171
# %bb.170:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_171:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 160
	addi.d	$a0, $sp, 216
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 136
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 144
	addi.d	$a0, $sp, 264
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 536                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 544                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 552                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 560                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 568                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 576                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 584                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 592                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 600                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 608                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 616                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 624
	ret
.LBB85_172:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a1, $sp, 104
	beq	$a1, $s0, .LBB85_175
# %bb.173:
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 112
	st.d	$a1, $fp, 0
	vst	$vr0, $fp, 8
	bnez	$a0, .LBB85_167
.LBB85_174:
	st.d	$s0, $sp, 104
	move	$a0, $s0
	st.d	$zero, $sp, 112
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 104
	bne	$a0, $s0, .LBB85_168
	b	.LBB85_169
.LBB85_175:
	addi.d	$a2, $sp, 104
	beq	$a2, $fp, .LBB85_181
# %bb.176:
	ld.d	$a2, $sp, 112
	beqz	$a2, .LBB85_180
# %bb.177:
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB85_179
# %bb.178:
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB85_180
.LBB85_179:
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB85_180:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	ld.d	$a0, $sp, 112
	ld.d	$a1, $fp, 0
	st.d	$a0, $fp, 8
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 104
	st.d	$zero, $sp, 112
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 104
	bne	$a0, $s0, .LBB85_168
	b	.LBB85_169
.LBB85_181:
	move	$a0, $a1
	st.d	$zero, $sp, 112
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 104
	bne	$a0, $s0, .LBB85_168
	b	.LBB85_169
.LBB85_182:
.Ltmp2196:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2197:
# %bb.183:                              # %.noexc201
.LBB85_184:
.Ltmp2154:
	ld.d	$a2, $sp, 104
	move	$fp, $a0
	beq	$a2, $s0, .LBB85_205
# %bb.185:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a0, $sp, 120
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB85_186:
.Ltmp2163:
	b	.LBB85_190
.LBB85_187:
.Ltmp2160:
	b	.LBB85_195
.LBB85_188:
.Ltmp2166:
	b	.LBB85_201
.LBB85_189:
.Ltmp2175:
.LBB85_190:
	ld.d	$a2, $sp, 72
	move	$fp, $a0
	addi.d	$a0, $sp, 88
	beq	$a2, $a0, .LBB85_196
# %bb.191:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i129
	ld.d	$a0, $sp, 88
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB85_196
.LBB85_192:                             # %.loopexit.split-lp
.Ltmp2198:
	b	.LBB85_201
.LBB85_193:
.Ltmp2157:
	b	.LBB85_201
.LBB85_194:
.Ltmp2172:
.LBB85_195:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit131
	move	$fp, $a0
.LBB85_196:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit131
	ld.d	$a0, $sp, 104
	addi.d	$a1, $sp, 120
	bne	$a0, $a1, .LBB85_204
	b	.LBB85_205
.LBB85_197:                             # %.loopexit
.Ltmp2195:
	b	.LBB85_201
.LBB85_198:
.Ltmp2169:
	b	.LBB85_201
.LBB85_199:
.Ltmp2181:
	b	.LBB85_203
.LBB85_200:
.Ltmp2178:
.LBB85_201:
	move	$fp, $a0
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB85_202:
.Ltmp2186:
.LBB85_203:
	move	$fp, $a0
	ld.d	$a0, $sp, 104
	beq	$a0, $s5, .LBB85_205
.LBB85_204:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i132
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB85_205:
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end85:
	.size	_ZN2PP3Cmd15handle_exe_argsERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end85-_ZN2PP3Cmd15handle_exe_argsERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table85:
.Lexception46:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Lfunc_begin46-.Lfunc_begin46  # >> Call Site 1 <<
	.uleb128 .Ltmp2155-.Lfunc_begin46       #   Call between .Lfunc_begin46 and .Ltmp2155
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2155-.Lfunc_begin46       # >> Call Site 2 <<
	.uleb128 .Ltmp2156-.Ltmp2155            #   Call between .Ltmp2155 and .Ltmp2156
	.uleb128 .Ltmp2157-.Lfunc_begin46       #     jumps to .Ltmp2157
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2156-.Lfunc_begin46       # >> Call Site 3 <<
	.uleb128 .Ltmp2164-.Ltmp2156            #   Call between .Ltmp2156 and .Ltmp2164
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2164-.Lfunc_begin46       # >> Call Site 4 <<
	.uleb128 .Ltmp2165-.Ltmp2164            #   Call between .Ltmp2164 and .Ltmp2165
	.uleb128 .Ltmp2166-.Lfunc_begin46       #     jumps to .Ltmp2166
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2165-.Lfunc_begin46       # >> Call Site 5 <<
	.uleb128 .Ltmp2167-.Ltmp2165            #   Call between .Ltmp2165 and .Ltmp2167
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2167-.Lfunc_begin46       # >> Call Site 6 <<
	.uleb128 .Ltmp2168-.Ltmp2167            #   Call between .Ltmp2167 and .Ltmp2168
	.uleb128 .Ltmp2169-.Lfunc_begin46       #     jumps to .Ltmp2169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2168-.Lfunc_begin46       # >> Call Site 7 <<
	.uleb128 .Ltmp2176-.Ltmp2168            #   Call between .Ltmp2168 and .Ltmp2176
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2176-.Lfunc_begin46       # >> Call Site 8 <<
	.uleb128 .Ltmp2177-.Ltmp2176            #   Call between .Ltmp2176 and .Ltmp2177
	.uleb128 .Ltmp2178-.Lfunc_begin46       #     jumps to .Ltmp2178
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2177-.Lfunc_begin46       # >> Call Site 9 <<
	.uleb128 .Ltmp2179-.Ltmp2177            #   Call between .Ltmp2177 and .Ltmp2179
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2179-.Lfunc_begin46       # >> Call Site 10 <<
	.uleb128 .Ltmp2180-.Ltmp2179            #   Call between .Ltmp2179 and .Ltmp2180
	.uleb128 .Ltmp2181-.Lfunc_begin46       #     jumps to .Ltmp2181
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2182-.Lfunc_begin46       # >> Call Site 11 <<
	.uleb128 .Ltmp2185-.Ltmp2182            #   Call between .Ltmp2182 and .Ltmp2185
	.uleb128 .Ltmp2186-.Lfunc_begin46       #     jumps to .Ltmp2186
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2185-.Lfunc_begin46       # >> Call Site 12 <<
	.uleb128 .Ltmp2170-.Ltmp2185            #   Call between .Ltmp2185 and .Ltmp2170
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2170-.Lfunc_begin46       # >> Call Site 13 <<
	.uleb128 .Ltmp2171-.Ltmp2170            #   Call between .Ltmp2170 and .Ltmp2171
	.uleb128 .Ltmp2172-.Lfunc_begin46       #     jumps to .Ltmp2172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2171-.Lfunc_begin46       # >> Call Site 14 <<
	.uleb128 .Ltmp2173-.Ltmp2171            #   Call between .Ltmp2171 and .Ltmp2173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2173-.Lfunc_begin46       # >> Call Site 15 <<
	.uleb128 .Ltmp2174-.Ltmp2173            #   Call between .Ltmp2173 and .Ltmp2174
	.uleb128 .Ltmp2175-.Lfunc_begin46       #     jumps to .Ltmp2175
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2174-.Lfunc_begin46       # >> Call Site 16 <<
	.uleb128 .Ltmp2187-.Ltmp2174            #   Call between .Ltmp2174 and .Ltmp2187
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2187-.Lfunc_begin46       # >> Call Site 17 <<
	.uleb128 .Ltmp2194-.Ltmp2187            #   Call between .Ltmp2187 and .Ltmp2194
	.uleb128 .Ltmp2195-.Lfunc_begin46       #     jumps to .Ltmp2195
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2158-.Lfunc_begin46       # >> Call Site 18 <<
	.uleb128 .Ltmp2159-.Ltmp2158            #   Call between .Ltmp2158 and .Ltmp2159
	.uleb128 .Ltmp2160-.Lfunc_begin46       #     jumps to .Ltmp2160
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2159-.Lfunc_begin46       # >> Call Site 19 <<
	.uleb128 .Ltmp2161-.Ltmp2159            #   Call between .Ltmp2159 and .Ltmp2161
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2161-.Lfunc_begin46       # >> Call Site 20 <<
	.uleb128 .Ltmp2162-.Ltmp2161            #   Call between .Ltmp2161 and .Ltmp2162
	.uleb128 .Ltmp2163-.Lfunc_begin46       #     jumps to .Ltmp2163
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2162-.Lfunc_begin46       # >> Call Site 21 <<
	.uleb128 .Ltmp2150-.Ltmp2162            #   Call between .Ltmp2162 and .Ltmp2150
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2150-.Lfunc_begin46       # >> Call Site 22 <<
	.uleb128 .Ltmp2153-.Ltmp2150            #   Call between .Ltmp2150 and .Ltmp2153
	.uleb128 .Ltmp2154-.Lfunc_begin46       #     jumps to .Ltmp2154
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2153-.Lfunc_begin46       # >> Call Site 23 <<
	.uleb128 .Ltmp2196-.Ltmp2153            #   Call between .Ltmp2153 and .Ltmp2196
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2196-.Lfunc_begin46       # >> Call Site 24 <<
	.uleb128 .Ltmp2197-.Ltmp2196            #   Call between .Ltmp2196 and .Ltmp2197
	.uleb128 .Ltmp2198-.Lfunc_begin46       #     jumps to .Ltmp2198
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2197-.Lfunc_begin46       # >> Call Site 25 <<
	.uleb128 .Lfunc_end85-.Ltmp2197         #   Call between .Ltmp2197 and .Lfunc_end85
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end46:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd18deprecated_input01ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi # -- Begin function _ZN2PP3Cmd18deprecated_input01ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi
	.p2align	5
	.type	_ZN2PP3Cmd18deprecated_input01ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3Cmd18deprecated_input01ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi: # @_ZN2PP3Cmd18deprecated_input01ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception47
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	st.d	$s6, $sp, 200                   # 8-byte Folded Spill
	st.d	$s7, $sp, 192                   # 8-byte Folded Spill
	st.d	$s8, $sp, 184                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 280
	ori	$a4, $zero, 7
	st.d	$a3, $sp, 16                    # 8-byte Folded Spill
	st.d	$a2, $sp, 32                    # 8-byte Folded Spill
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	bne	$a0, $a4, .LBB86_2
# %bb.1:
	ld.d	$a0, $fp, 272
	pcalau12i	$a1, %pc_hi20(.L.str.6)
	addi.d	$a1, $a1, %pc_lo12(.L.str.6)
	ori	$a2, $zero, 7
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB86_3
.LBB86_2:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
	ld.d	$s8, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
.LBB86_3:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.preheader
	move	$s0, $zero
	move	$s2, $zero
	move	$s1, $zero
	addi.d	$a0, $fp, 160
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	addi.d	$s7, $sp, 160
	addi.d	$s6, $sp, 128
	addi.d	$s8, $sp, 96
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	ori	$s3, $zero, 0
	lu32i.d	$s3, -2
	ori	$s5, $zero, 12
	ori	$s4, $zero, 1
	st.d	$s3, $sp, 40                    # 8-byte Folded Spill
	b	.LBB86_6
	.p2align	4, , 16
.LBB86_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit210
                                        #   in Loop: Header=BB86_6 Depth=1
	andi	$a0, $s8, 3
	addi.d	$s8, $sp, 96
	bnez	$a0, .LBB86_2
.LBB86_5:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit._crit_edge
                                        #   in Loop: Header=BB86_6 Depth=1
	addi.d	$s1, $s1, 1
	addi.d	$s0, $s0, 128
	addi.w	$s4, $s4, 1
	addi.d	$s2, $s2, 1
.LBB86_6:                               # %_ZStneIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 32
	add.d	$a2, $a2, $s3
	srai.d	$a2, $a2, 32
	bge	$s2, $a2, .LBB86_2
# %bb.7:                                #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s2, $a2
	bltz	$a2, .LBB86_10
# %bb.8:                                #   in Loop: Header=BB86_6 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB86_11
# %bb.9:                                #   in Loop: Header=BB86_6 Depth=1
	add.d	$a3, $a1, $s0
	ld.w	$a3, $a3, 32
	bne	$a3, $s5, .LBB86_5
	b	.LBB86_13
	.p2align	4, , 16
.LBB86_10:                              #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a3, $a2, 2
	b	.LBB86_12
	.p2align	4, , 16
.LBB86_11:                              #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a3, $a2, 2
.LBB86_12:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a0, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	ld.w	$a3, $a3, 32
	bne	$a3, $s5, .LBB86_5
.LBB86_13:                              #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a3, $a2, 1
	bltz	$a3, .LBB86_16
# %bb.14:                               #   in Loop: Header=BB86_6 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB86_17
# %bb.15:                               #   in Loop: Header=BB86_6 Depth=1
	add.d	$a0, $a1, $s0
	b	.LBB86_19
.LBB86_16:                              #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a1, $a3, 2
	b	.LBB86_18
.LBB86_17:                              #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a1, $a3, 2
.LBB86_18:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
.LBB86_19:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit74
                                        #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a0, $a0, 128
	st.d	$s7, $sp, 144
	ld.d	$a1, $a0, 8
	ld.d	$s5, $a0, 0
	st.d	$a1, $sp, 112
	move	$a0, $s7
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB86_21
# %bb.20:                               # %.noexc.i.i
                                        #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a0, $sp, 144
	addi.d	$a1, $sp, 112
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 112
	st.d	$a0, $sp, 144
	st.d	$a1, $sp, 160
.LBB86_21:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB86_6 Depth=1
	addi.w	$s3, $zero, -1
	beq	$a1, $s3, .LBB86_25
# %bb.22:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB86_6 Depth=1
	bnez	$a1, .LBB86_24
# %bb.23:                               #   in Loop: Header=BB86_6 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB86_25
.LBB86_24:                              #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB86_25:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 112
	st.d	$a0, $sp, 152
	st.d	$s6, $sp, 112
	st.d	$zero, $sp, 120
	st.b	$zero, $sp, 128
	move	$s5, $s4
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB86_30
# %bb.26:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 144
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 43
	beq	$a1, $a2, .LBB86_28
# %bb.27:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread221
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.bu	$a0, $a0, 0
	move	$s5, $s4
	ori	$a1, $zero, 45
	bne	$a0, $a1, .LBB86_30
.LBB86_28:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2199:
	addi.d	$a0, $sp, 112
	addi.d	$a1, $sp, 144
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2200:
# %bb.29:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_.exit
                                        #   in Loop: Header=BB86_6 Depth=1
	addi.w	$s5, $s1, 2
.LBB86_30:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit76.thread222
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s5
	bltz	$a1, .LBB86_33
# %bb.31:                               #   in Loop: Header=BB86_6 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB86_34
# %bb.32:                               #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a0, $s5, 7
	add.d	$a0, $a2, $a0
	b	.LBB86_36
.LBB86_33:                              #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB86_35
.LBB86_34:                              #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a2, $a1, 2
.LBB86_35:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB86_36:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit78
                                        #   in Loop: Header=BB86_6 Depth=1
	st.d	$s8, $sp, 80
	ld.d	$a1, $a0, 8
	ld.d	$s6, $a0, 0
	st.d	$a1, $sp, 48
	move	$a0, $s8
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB86_39
# %bb.37:                               # %.noexc.i.i80
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2202:
	addi.d	$a0, $sp, 80
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2203:
# %bb.38:                               # %.noexc
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
.LBB86_39:                              # %._crit_edge.i.i.i79
                                        #   in Loop: Header=BB86_6 Depth=1
	beq	$a1, $s3, .LBB86_43
# %bb.40:                               # %._crit_edge.i.i.i79
                                        #   in Loop: Header=BB86_6 Depth=1
	bnez	$a1, .LBB86_42
# %bb.41:                               #   in Loop: Header=BB86_6 Depth=1
	ld.b	$a1, $s6, 0
	st.b	$a1, $a0, 0
	b	.LBB86_43
.LBB86_42:                              #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s6
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB86_43:                              #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 120
	ld.d	$a2, $sp, 48
	addi.w	$a1, $zero, -2
	lu52i.d	$a1, $a1, 2047
	sub.d	$a0, $a1, $a0
	st.d	$a2, $sp, 88
	bltu	$a0, $a2, .LBB86_178
# %bb.44:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit.i
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2205:
	ld.d	$a1, $sp, 80
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
.Ltmp2206:
# %bb.45:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_.exit
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 80
	beq	$a0, $s8, .LBB86_47
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB86_47:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $fp, 176
	ld.d	$a2, $fp, 184
	ld.d	$a1, $fp, 200
	sub.d	$a2, $a0, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $a2, $s5
	bltz	$a3, .LBB86_50
# %bb.48:                               #   in Loop: Header=BB86_6 Depth=1
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB86_51
# %bb.49:                               #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a3, $s5, 7
	add.d	$a3, $a0, $a3
	b	.LBB86_53
.LBB86_50:                              #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a4, $a3, 2
	b	.LBB86_52
.LBB86_51:                              #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a4, $a3, 2
.LBB86_52:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a1, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$a3, $a5, $a3
.LBB86_53:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit85
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.wu	$a3, $a3, 32
	bstrpick.d	$a3, $a3, 31, 1
	slli.w	$a3, $a3, 1
	ori	$s8, $zero, 4
	ori	$a4, $zero, 2
	bne	$a3, $a4, .LBB86_126
# %bb.54:                               #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a3, $fp, 232
	sub.d	$a4, $a3, $a1
	srli.d	$a4, $a4, 3
	ld.d	$a5, $fp, 208
	ld.d	$a6, $fp, 216
	sltu	$a3, $zero, $a3
	sub.d	$a3, $a4, $a3
	ld.d	$a4, $fp, 192
	sub.d	$a5, $a5, $a6
	srli.d	$a5, $a5, 7
	alsl.d	$a3, $a3, $a5, 2
	sub.d	$a4, $a4, $a0
	srli.d	$a4, $a4, 7
	add.d	$a3, $a3, $a4
	addi.w	$a3, $a3, -1
	ori	$s8, $zero, 2
	bge	$s5, $a3, .LBB86_126
# %bb.55:                               #   in Loop: Header=BB86_6 Depth=1
	addi.w	$s6, $s5, 1
	add.d	$a2, $a2, $s6
	bltz	$a2, .LBB86_58
# %bb.56:                               #   in Loop: Header=BB86_6 Depth=1
	ori	$a3, $zero, 4
	bgeu	$a2, $a3, .LBB86_59
# %bb.57:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit91.thread
                                        #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a1, $s6, 7
	add.d	$a1, $a0, $a1
	ld.wu	$a1, $a1, 32
	bstrpick.d	$a1, $a1, 31, 1
	slli.w	$a1, $a1, 1
	ori	$s8, $zero, 4
	ori	$a2, $zero, 2
	beq	$a1, $a2, .LBB86_63
	b	.LBB86_126
.LBB86_58:                              #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a3, $a2, 2
	b	.LBB86_60
.LBB86_59:                              #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a3, $a2, 2
.LBB86_60:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit91
                                        #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a4, $a3, 3
	ldx.d	$a4, $a1, $a4
	slli.d	$a3, $a3, 2
	sub.d	$a3, $a2, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a4, $a3
	ld.wu	$a3, $a3, 32
	bstrpick.d	$a3, $a3, 31, 1
	slli.w	$a3, $a3, 1
	ori	$s8, $zero, 4
	ori	$a4, $zero, 2
	bne	$a3, $a4, .LBB86_126
# %bb.61:                               #   in Loop: Header=BB86_6 Depth=1
	bltz	$a2, .LBB86_64
# %bb.62:                               #   in Loop: Header=BB86_6 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB86_65
.LBB86_63:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a1, $s6, 7
	add.d	$a0, $a0, $a1
	b	.LBB86_67
.LBB86_64:                              #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a0, $a2, 2
	b	.LBB86_66
.LBB86_65:                              #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a0, $a2, 2
.LBB86_66:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a3, $a0, 3
	ldx.d	$a1, $a1, $a3
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a2, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB86_67:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit94
                                        #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a2, $sp, 96
	st.d	$a2, $sp, 80
	ld.d	$a1, $a0, 8
	ld.d	$s7, $a0, 0
	st.d	$a1, $sp, 48
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB86_70
# %bb.68:                               # %.noexc.i.i96
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2208:
	addi.d	$a0, $sp, 80
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2209:
# %bb.69:                               # %.noexc97
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 80
	st.d	$a1, $sp, 96
.LBB86_70:                              # %._crit_edge.i.i.i95
                                        #   in Loop: Header=BB86_6 Depth=1
	beq	$a1, $s3, .LBB86_74
# %bb.71:                               # %._crit_edge.i.i.i95
                                        #   in Loop: Header=BB86_6 Depth=1
	bnez	$a1, .LBB86_73
# %bb.72:                               #   in Loop: Header=BB86_6 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB86_74
.LBB86_73:                              #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB86_74:                              #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 48
	st.d	$a0, $sp, 88
.Ltmp2211:
	addi.d	$a0, $sp, 80
	ori	$a2, $zero, 1
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm)
	jirl	$ra, $ra, 0
.Ltmp2212:
# %bb.75:                               #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s6
	bltz	$a1, .LBB86_78
# %bb.76:                               #   in Loop: Header=BB86_6 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB86_79
# %bb.77:                               #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a0, $s6, 7
	add.d	$a0, $a2, $a0
	b	.LBB86_81
.LBB86_78:                              #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB86_80
.LBB86_79:                              #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a2, $a1, 2
.LBB86_80:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB86_81:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit101
                                        #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a2, $sp, 64
	st.d	$a2, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s7, $a0, 0
	st.d	$a1, $sp, 176
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB86_84
# %bb.82:                               # %.noexc.i.i103
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2214:
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2215:
# %bb.83:                               # %.noexc104
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB86_84:                              # %._crit_edge.i.i.i102
                                        #   in Loop: Header=BB86_6 Depth=1
	beq	$a1, $s3, .LBB86_88
# %bb.85:                               # %._crit_edge.i.i.i102
                                        #   in Loop: Header=BB86_6 Depth=1
	bnez	$a1, .LBB86_87
# %bb.86:                               #   in Loop: Header=BB86_6 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB86_88
.LBB86_87:                              #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB86_88:                              #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 176
	ld.d	$a0, $sp, 48
	st.d	$a1, $sp, 56
	ld.bu	$s7, $a0, 0
	addi.d	$a1, $sp, 64
	beq	$a0, $a1, .LBB86_90
# %bb.89:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i106
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB86_90:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit108
                                        #   in Loop: Header=BB86_6 Depth=1
	ori	$s8, $zero, 4
	ori	$a0, $zero, 49
	bne	$s7, $a0, .LBB86_123
# %bb.91:                               #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s6
	bltz	$a1, .LBB86_94
# %bb.92:                               #   in Loop: Header=BB86_6 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB86_95
# %bb.93:                               #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a0, $s6, 7
	add.d	$a0, $a2, $a0
	b	.LBB86_97
.LBB86_94:                              #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB86_96
.LBB86_95:                              #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a2, $a1, 2
.LBB86_96:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB86_97:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit110
                                        #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a2, $sp, 64
	st.d	$a2, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s7, $a0, 0
	st.d	$a1, $sp, 176
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB86_100
# %bb.98:                               # %.noexc.i.i112
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2217:
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 176
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2218:
# %bb.99:                               # %.noexc113
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 176
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB86_100:                             # %._crit_edge.i.i.i111
                                        #   in Loop: Header=BB86_6 Depth=1
	beq	$a1, $s3, .LBB86_104
# %bb.101:                              # %._crit_edge.i.i.i111
                                        #   in Loop: Header=BB86_6 Depth=1
	bnez	$a1, .LBB86_103
# %bb.102:                              #   in Loop: Header=BB86_6 Depth=1
	ld.b	$a1, $s7, 0
	st.b	$a1, $a0, 0
	b	.LBB86_104
.LBB86_103:                             #   in Loop: Header=BB86_6 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s7
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB86_104:                             #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 176
	ld.d	$a0, $sp, 48
	st.d	$a1, $sp, 56
	ld.bu	$s3, $a0, 1
	addi.d	$a1, $sp, 64
	beq	$a0, $a1, .LBB86_106
# %bb.105:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i115
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB86_106:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit117
                                        #   in Loop: Header=BB86_6 Depth=1
	andi	$a0, $s3, 223
	ori	$a1, $zero, 69
	bne	$a0, $a1, .LBB86_123
# %bb.107:                              #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $fp, 232
	ld.d	$s3, $fp, 200
	sub.d	$a1, $a0, $s3
	ld.d	$a2, $fp, 208
	ld.d	$a3, $fp, 216
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	sub.d	$a1, $a2, $a3
	ld.d	$a2, $fp, 192
	ld.d	$s7, $fp, 176
	srli.d	$a1, $a1, 7
	alsl.d	$a0, $a0, $a1, 2
	addi.w	$a1, $s5, 2
	sub.d	$a2, $a2, $s7
	srli.d	$a2, $a2, 7
	add.w	$a0, $a0, $a2
	bge	$a1, $a0, .LBB86_115
# %bb.108:                              #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $fp, 184
	sub.d	$a0, $s7, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $a1
	bltz	$a0, .LBB86_111
# %bb.109:                              #   in Loop: Header=BB86_6 Depth=1
	ori	$a2, $zero, 3
	bltu	$a2, $a0, .LBB86_112
# %bb.110:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a0, $a1, 7
	add.d	$a0, $s7, $a0
	b	.LBB86_114
.LBB86_111:                             #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a1, $a0, 2
	b	.LBB86_113
.LBB86_112:                             #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a1, $a0, 2
.LBB86_113:                             #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $s3, $a2
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB86_114:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit120
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.w	$a0, $a0, 32
	ori	$a1, $zero, 12
	bne	$a0, $a1, .LBB86_123
.LBB86_115:                             #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a2, $a0, 8
	ori	$a0, $zero, 3
	beq	$a2, $a0, .LBB86_121
# %bb.116:                              #   in Loop: Header=BB86_6 Depth=1
	ori	$a0, $zero, 5
	beq	$a2, $a0, .LBB86_119
# %bb.117:                              #   in Loop: Header=BB86_6 Depth=1
	addi.d	$s7, $sp, 160
	ori	$a0, $zero, 6
	bne	$a2, $a0, .LBB86_120
# %bb.118:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit122
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.171)
	addi.d	$a1, $a1, %pc_lo12(.L.str.171)
	ori	$a2, $zero, 6
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$a0, $a0, 1
	slli.d	$s8, $a0, 2
	b	.LBB86_124
.LBB86_119:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit128
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.173)
	addi.d	$a1, $a1, %pc_lo12(.L.str.173)
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	addi.d	$s7, $sp, 160
	beqz	$a0, .LBB86_130
.LBB86_120:                             #   in Loop: Header=BB86_6 Depth=1
	move	$s8, $zero
	b	.LBB86_124
.LBB86_121:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit124
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	pcalau12i	$a1, %pc_hi20(.L.str.172)
	addi.d	$a1, $a1, %pc_lo12(.L.str.172)
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB86_170
# %bb.122:                              #   in Loop: Header=BB86_6 Depth=1
	move	$s8, $zero
.LBB86_123:                             #   in Loop: Header=BB86_6 Depth=1
	addi.d	$s7, $sp, 160
.LBB86_124:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit122.thread
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 80
	addi.d	$a1, $sp, 96
	beq	$a0, $a1, .LBB86_126
# %bb.125:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i202
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	.p2align	4, , 16
.LBB86_126:                             #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 112
	addi.d	$s6, $sp, 128
	beq	$a0, $s6, .LBB86_128
# %bb.127:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i205
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB86_128:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit207
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 144
	ld.d	$s3, $sp, 40                    # 8-byte Folded Reload
	ori	$s5, $zero, 12
	beq	$a0, $s7, .LBB86_4
# %bb.129:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i208
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB86_4
.LBB86_130:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit128.thread
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	move	$a1, $s5
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EEixEm)
	jirl	$ra, $ra, 0
.Ltmp2220:
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
.Ltmp2221:
# %bb.131:                              #   in Loop: Header=BB86_6 Depth=1
.Ltmp2222:
	pcalau12i	$a0, %pc_hi20(.L.str.174)
	addi.d	$a1, $a0, %pc_lo12(.L.str.174)
	ori	$a2, $zero, 38
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2223:
# %bb.132:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2224:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2225:
# %bb.133:                              # %_ZNSolsEPFRSoS_E.exit
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2226:
	pcalau12i	$a0, %pc_hi20(.L.str.175)
	addi.d	$a1, $a0, %pc_lo12(.L.str.175)
	ori	$a2, $zero, 36
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2227:
# %bb.134:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit132
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2228:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2229:
# %bb.135:                              # %_ZNSolsEPFRSoS_E.exit134
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2230:
	pcalau12i	$a0, %pc_hi20(.L.str.176)
	addi.d	$a1, $a0, %pc_lo12(.L.str.176)
	ori	$a2, $zero, 60
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2231:
# %bb.136:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit136
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2232:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2233:
# %bb.137:                              # %_ZNSolsEPFRSoS_E.exit138
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2234:
	pcalau12i	$a0, %pc_hi20(.L.str.177)
	addi.d	$a1, $a0, %pc_lo12(.L.str.177)
	ori	$a2, $zero, 40
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2235:
# %bb.138:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit140
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2236:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2237:
# %bb.139:                              # %_ZNSolsEPFRSoS_E.exit142
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2238:
	pcalau12i	$a0, %pc_hi20(.L.str.178)
	addi.d	$a1, $a0, %pc_lo12(.L.str.178)
	ori	$a2, $zero, 16
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2239:
# %bb.140:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit144
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 112
	ld.d	$a2, $sp, 120
.Ltmp2240:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2241:
# %bb.141:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2242:
	move	$s5, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.179)
	addi.d	$a1, $a0, %pc_lo12(.L.str.179)
	ori	$a2, $zero, 23
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2243:
# %bb.142:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit147
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a1, $sp, 80
	ld.d	$a2, $sp, 88
.Ltmp2244:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2245:
# %bb.143:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit149
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2246:
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2247:
# %bb.144:                              # %_ZNSolsEPFRSoS_E.exit151
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2248:
	pcalau12i	$a0, %pc_hi20(.L.str.180)
	addi.d	$a1, $a0, %pc_lo12(.L.str.180)
	ori	$a2, $zero, 45
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2249:
# %bb.145:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit153
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2250:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2251:
# %bb.146:                              # %_ZNSolsEPFRSoS_E.exit155
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2252:
	pcalau12i	$a0, %pc_hi20(.L.str.181)
	addi.d	$a1, $a0, %pc_lo12(.L.str.181)
	ori	$a2, $zero, 52
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2253:
# %bb.147:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit157
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2254:
	pcalau12i	$a0, %pc_hi20(.L.str.182)
	addi.d	$a1, $a0, %pc_lo12(.L.str.182)
	ori	$a2, $zero, 21
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2255:
# %bb.148:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit159
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2256:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2257:
# %bb.149:                              # %_ZNSolsEPFRSoS_E.exit161
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2258:
	pcalau12i	$a0, %pc_hi20(.L.str.183)
	addi.d	$a1, $a0, %pc_lo12(.L.str.183)
	ori	$a2, $zero, 55
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2259:
# %bb.150:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit163
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2260:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2261:
# %bb.151:                              # %_ZNSolsEPFRSoS_E.exit165
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2262:
	pcalau12i	$a0, %pc_hi20(.L.str.184)
	addi.d	$a1, $a0, %pc_lo12(.L.str.184)
	ori	$a2, $zero, 51
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2263:
# %bb.152:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit167
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2264:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2265:
# %bb.153:                              # %_ZNSolsEPFRSoS_E.exit169
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2266:
	pcalau12i	$a0, %pc_hi20(.L.str.185)
	addi.d	$a1, $a0, %pc_lo12(.L.str.185)
	ori	$a2, $zero, 48
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2267:
# %bb.154:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit171
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2268:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2269:
# %bb.155:                              # %_ZNSolsEPFRSoS_E.exit173
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2270:
	pcalau12i	$a0, %pc_hi20(.L.str.186)
	addi.d	$a1, $a0, %pc_lo12(.L.str.186)
	ori	$a2, $zero, 25
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2271:
# %bb.156:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit175
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2272:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2273:
# %bb.157:                              # %_ZNSolsEPFRSoS_E.exit177
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2274:
	pcalau12i	$a0, %pc_hi20(.L.str.187)
	addi.d	$a1, $a0, %pc_lo12(.L.str.187)
	ori	$a2, $zero, 47
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2275:
# %bb.158:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit179
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2276:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2277:
# %bb.159:                              # %_ZNSolsEPFRSoS_E.exit181
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2278:
	pcalau12i	$a0, %pc_hi20(.L.str.188)
	addi.d	$a1, $a0, %pc_lo12(.L.str.188)
	ori	$a2, $zero, 62
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2279:
# %bb.160:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit183
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2280:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2281:
# %bb.161:                              # %_ZNSolsEPFRSoS_E.exit185
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2282:
	pcalau12i	$a0, %pc_hi20(.L.str.189)
	addi.d	$a1, $a0, %pc_lo12(.L.str.189)
	ori	$a2, $zero, 43
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2283:
# %bb.162:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit187
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2284:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2285:
# %bb.163:                              # %_ZNSolsEPFRSoS_E.exit189
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2286:
	pcalau12i	$a0, %pc_hi20(.L.str.190)
	addi.d	$a1, $a0, %pc_lo12(.L.str.190)
	ori	$a2, $zero, 44
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2287:
# %bb.164:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit191
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2288:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2289:
# %bb.165:                              # %_ZNSolsEPFRSoS_E.exit193
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2290:
	pcalau12i	$a0, %pc_hi20(.L.str.191)
	addi.d	$a1, $a0, %pc_lo12(.L.str.191)
	ori	$a2, $zero, 49
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2291:
# %bb.166:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit195
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2292:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2293:
# %bb.167:                              # %_ZNSolsEPFRSoS_E.exit197
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2294:
	pcalau12i	$a0, %pc_hi20(.L.str.192)
	addi.d	$a1, $a0, %pc_lo12(.L.str.192)
	ori	$a2, $zero, 48
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2295:
# %bb.168:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit199
                                        #   in Loop: Header=BB86_6 Depth=1
.Ltmp2296:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2297:
# %bb.169:                              # %_ZNSolsEPFRSoS_E.exit201
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	ori	$a1, $zero, 2
	st.w	$a1, $a0, 0
	b	.LBB86_124
.LBB86_170:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit124.thread
                                        #   in Loop: Header=BB86_6 Depth=1
	ld.d	$a0, $fp, 184
	sub.d	$a0, $s7, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s6
	bltz	$a0, .LBB86_173
# %bb.171:                              #   in Loop: Header=BB86_6 Depth=1
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB86_174
# %bb.172:                              #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a0, $s6, 7
	add.d	$a0, $s7, $a0
	b	.LBB86_176
.LBB86_173:                             #   in Loop: Header=BB86_6 Depth=1
	srai.d	$a1, $a0, 2
	b	.LBB86_175
.LBB86_174:                             #   in Loop: Header=BB86_6 Depth=1
	srli.d	$a1, $a0, 2
.LBB86_175:                             #   in Loop: Header=BB86_6 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $s3, $a2
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB86_176:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit126
                                        #   in Loop: Header=BB86_6 Depth=1
	addi.d	$s7, $sp, 160
.Ltmp2298:
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP4Word10erase_charEi)
	jirl	$ra, $ra, 0
.Ltmp2299:
# %bb.177:                              #   in Loop: Header=BB86_6 Depth=1
.Ltmp2300:
	move	$a0, $fp
	move	$a1, $s5
	move	$a2, $s6
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd11merge_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp2301:
	b	.LBB86_124
.LBB86_178:
.Ltmp2303:
	pcalau12i	$a0, %pc_hi20(.L.str.227)
	addi.d	$a0, $a0, %pc_lo12(.L.str.227)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp2304:
# %bb.179:                              # %.noexc82
.LBB86_180:
.Ltmp2219:
	b	.LBB86_189
.LBB86_181:
.Ltmp2216:
	b	.LBB86_189
.LBB86_182:
.Ltmp2210:
	move	$fp, $a0
	ld.d	$a0, $sp, 112
	addi.d	$a1, $sp, 128
	beq	$a0, $a1, .LBB86_191
	b	.LBB86_194
.LBB86_183:
.Ltmp2302:
	b	.LBB86_189
.LBB86_184:
.Ltmp2213:
	b	.LBB86_189
.LBB86_185:
.Ltmp2201:
	move	$fp, $a0
	ld.d	$a0, $sp, 112
	addi.d	$a1, $sp, 128
	beq	$a0, $a1, .LBB86_191
	b	.LBB86_194
.LBB86_186:
.Ltmp2204:
	move	$fp, $a0
	ld.d	$a0, $sp, 112
	addi.d	$a1, $sp, 128
	beq	$a0, $a1, .LBB86_191
	b	.LBB86_194
.LBB86_187:                             # %.loopexit
.Ltmp2207:
	b	.LBB86_189
.LBB86_188:                             # %.loopexit.split-lp
.Ltmp2305:
.LBB86_189:
	move	$fp, $a0
	ld.d	$a0, $sp, 80
	addi.d	$a1, $sp, 96
	bne	$a0, $a1, .LBB86_193
# %bb.190:
	ld.d	$a0, $sp, 112
	addi.d	$a1, $sp, 128
	bne	$a0, $a1, .LBB86_194
.LBB86_191:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit216
	ld.d	$a0, $sp, 144
	addi.d	$a1, $sp, 160
	bne	$a0, $a1, .LBB86_195
.LBB86_192:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit219
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB86_193:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i211
	ld.d	$a1, $sp, 96
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 112
	addi.d	$a1, $sp, 128
	beq	$a0, $a1, .LBB86_191
.LBB86_194:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i214
	ld.d	$a1, $sp, 128
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 144
	addi.d	$a1, $sp, 160
	beq	$a0, $a1, .LBB86_192
.LBB86_195:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i217
	ld.d	$a1, $sp, 160
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end86:
	.size	_ZN2PP3Cmd18deprecated_input01ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi, .Lfunc_end86-_ZN2PP3Cmd18deprecated_input01ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS1_18basic_stringstreamIcS4_S5_EERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table86:
.Lexception47:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Lfunc_begin47-.Lfunc_begin47  # >> Call Site 1 <<
	.uleb128 .Ltmp2199-.Lfunc_begin47       #   Call between .Lfunc_begin47 and .Ltmp2199
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2199-.Lfunc_begin47       # >> Call Site 2 <<
	.uleb128 .Ltmp2200-.Ltmp2199            #   Call between .Ltmp2199 and .Ltmp2200
	.uleb128 .Ltmp2201-.Lfunc_begin47       #     jumps to .Ltmp2201
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2202-.Lfunc_begin47       # >> Call Site 3 <<
	.uleb128 .Ltmp2203-.Ltmp2202            #   Call between .Ltmp2202 and .Ltmp2203
	.uleb128 .Ltmp2204-.Lfunc_begin47       #     jumps to .Ltmp2204
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2203-.Lfunc_begin47       # >> Call Site 4 <<
	.uleb128 .Ltmp2205-.Ltmp2203            #   Call between .Ltmp2203 and .Ltmp2205
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2205-.Lfunc_begin47       # >> Call Site 5 <<
	.uleb128 .Ltmp2206-.Ltmp2205            #   Call between .Ltmp2205 and .Ltmp2206
	.uleb128 .Ltmp2207-.Lfunc_begin47       #     jumps to .Ltmp2207
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2206-.Lfunc_begin47       # >> Call Site 6 <<
	.uleb128 .Ltmp2208-.Ltmp2206            #   Call between .Ltmp2206 and .Ltmp2208
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2208-.Lfunc_begin47       # >> Call Site 7 <<
	.uleb128 .Ltmp2209-.Ltmp2208            #   Call between .Ltmp2208 and .Ltmp2209
	.uleb128 .Ltmp2210-.Lfunc_begin47       #     jumps to .Ltmp2210
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2209-.Lfunc_begin47       # >> Call Site 8 <<
	.uleb128 .Ltmp2211-.Ltmp2209            #   Call between .Ltmp2209 and .Ltmp2211
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2211-.Lfunc_begin47       # >> Call Site 9 <<
	.uleb128 .Ltmp2212-.Ltmp2211            #   Call between .Ltmp2211 and .Ltmp2212
	.uleb128 .Ltmp2213-.Lfunc_begin47       #     jumps to .Ltmp2213
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2214-.Lfunc_begin47       # >> Call Site 10 <<
	.uleb128 .Ltmp2215-.Ltmp2214            #   Call between .Ltmp2214 and .Ltmp2215
	.uleb128 .Ltmp2216-.Lfunc_begin47       #     jumps to .Ltmp2216
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2215-.Lfunc_begin47       # >> Call Site 11 <<
	.uleb128 .Ltmp2217-.Ltmp2215            #   Call between .Ltmp2215 and .Ltmp2217
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2217-.Lfunc_begin47       # >> Call Site 12 <<
	.uleb128 .Ltmp2218-.Ltmp2217            #   Call between .Ltmp2217 and .Ltmp2218
	.uleb128 .Ltmp2219-.Lfunc_begin47       #     jumps to .Ltmp2219
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2218-.Lfunc_begin47       # >> Call Site 13 <<
	.uleb128 .Ltmp2220-.Ltmp2218            #   Call between .Ltmp2218 and .Ltmp2220
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2220-.Lfunc_begin47       # >> Call Site 14 <<
	.uleb128 .Ltmp2301-.Ltmp2220            #   Call between .Ltmp2220 and .Ltmp2301
	.uleb128 .Ltmp2302-.Lfunc_begin47       #     jumps to .Ltmp2302
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2303-.Lfunc_begin47       # >> Call Site 15 <<
	.uleb128 .Ltmp2304-.Ltmp2303            #   Call between .Ltmp2303 and .Ltmp2304
	.uleb128 .Ltmp2305-.Lfunc_begin47       #     jumps to .Ltmp2305
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2304-.Lfunc_begin47       # >> Call Site 16 <<
	.uleb128 .Lfunc_end86-.Ltmp2304         #   Call between .Ltmp2304 and .Lfunc_end86
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end47:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd11merge_wordsEii      # -- Begin function _ZN2PP3Cmd11merge_wordsEii
	.p2align	5
	.type	_ZN2PP3Cmd11merge_wordsEii,@function
_ZN2PP3Cmd11merge_wordsEii:             # @_ZN2PP3Cmd11merge_wordsEii
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception48
# %bb.0:
	addi.d	$sp, $sp, -448
	.cfi_def_cfa_offset 448
	st.d	$ra, $sp, 440                   # 8-byte Folded Spill
	st.d	$fp, $sp, 432                   # 8-byte Folded Spill
	st.d	$s0, $sp, 424                   # 8-byte Folded Spill
	st.d	$s1, $sp, 416                   # 8-byte Folded Spill
	st.d	$s2, $sp, 408                   # 8-byte Folded Spill
	st.d	$s3, $sp, 400                   # 8-byte Folded Spill
	st.d	$s4, $sp, 392                   # 8-byte Folded Spill
	st.d	$s5, $sp, 384                   # 8-byte Folded Spill
	st.d	$s6, $sp, 376                   # 8-byte Folded Spill
	st.d	$s7, $sp, 368                   # 8-byte Folded Spill
	st.d	$s8, $sp, 360                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a3, $a0, 176
	ld.d	$a0, $a0, 184
	move	$s3, $a1
	ld.d	$a1, $fp, 200
	sub.d	$a0, $a3, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s3
	move	$s5, $a2
	bltz	$a0, .LBB87_3
# %bb.1:
	ori	$a2, $zero, 3
	bltu	$a2, $a0, .LBB87_4
# %bb.2:
	slli.d	$a0, $s3, 7
	add.d	$a0, $a3, $a0
	ld.w	$s6, $a0, 80
	ld.w	$s0, $a0, 84
	b	.LBB87_6
.LBB87_3:
	srai.d	$a2, $a0, 2
	b	.LBB87_5
.LBB87_4:
	srli.d	$a2, $a0, 2
.LBB87_5:
	slli.d	$a3, $a2, 3
	ldx.d	$a1, $a1, $a3
	andi	$a3, $a0, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
	ld.w	$s6, $a3, 80
	ld.w	$s0, $a3, 84
	slli.d	$a2, $a2, 2
	sub.d	$a0, $a0, $a2
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB87_6:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit32
	addi.d	$s1, $sp, 280
	ld.d	$a1, $a0, 96
	ld.d	$s4, $a0, 88
	st.d	$s1, $sp, 264
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 104
	move	$a0, $s1
	bltu	$a1, $a2, .LBB87_8
# %bb.7:                                # %.noexc.i.i
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 104
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 104
	st.d	$a0, $sp, 264
	st.d	$a1, $sp, 280
.LBB87_8:                               # %._crit_edge.i.i.i
	addi.w	$s7, $zero, -1
	beq	$a1, $s7, .LBB87_12
# %bb.9:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB87_11
# %bb.10:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB87_12
.LBB87_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB87_12:                              # %_ZN2PP4Word12get_filenameB5cxx11Ev.exit
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a3, $sp, 104
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s3
	st.d	$a3, $sp, 272
	bltz	$a1, .LBB87_15
# %bb.13:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB87_16
# %bb.14:
	slli.d	$a0, $s3, 7
	add.d	$a0, $a2, $a0
	b	.LBB87_18
.LBB87_15:
	srai.d	$a2, $a1, 2
	b	.LBB87_17
.LBB87_16:
	srli.d	$a2, $a1, 2
.LBB87_17:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB87_18:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit34
	addi.d	$s2, $sp, 248
	st.d	$s2, $sp, 232
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 104
	move	$a0, $s2
	bltu	$a1, $a2, .LBB87_21
# %bb.19:                               # %.noexc.i.i36
.Ltmp2306:
	addi.d	$a0, $sp, 232
	addi.d	$a1, $sp, 104
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2307:
# %bb.20:                               # %.noexc
	ld.d	$a1, $sp, 104
	st.d	$a0, $sp, 232
	st.d	$a1, $sp, 248
.LBB87_21:                              # %._crit_edge.i.i.i35
	beq	$a1, $s7, .LBB87_24
# %bb.22:                               # %._crit_edge.i.i.i35
	bnez	$a1, .LBB87_25
# %bb.23:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
.LBB87_24:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	st.d	$s0, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a1, $sp, 104
	st.d	$a1, $sp, 240
	blt	$s3, $s5, .LBB87_26
	b	.LBB87_46
.LBB87_25:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	st.d	$s0, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a1, $sp, 104
	st.d	$a1, $sp, 240
	bge	$s3, $s5, .LBB87_46
.LBB87_26:                              # %.lr.ph
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	addi.d	$s8, $sp, 120
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	sub.d	$s5, $zero, $s5
	addi.d	$s6, $s3, 1
	st.d	$s3, $sp, 24                    # 8-byte Folded Spill
	slli.d	$a0, $s3, 7
	addi.d	$s2, $a0, 128
	ori	$s1, $zero, 16
	addi.w	$a0, $zero, -2
	lu52i.d	$s0, $a0, 2047
	ori	$s3, $zero, 1
	b	.LBB87_28
	.p2align	4, , 16
.LBB87_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB87_28 Depth=1
	addi.d	$s6, $s6, 1
	add.d	$a0, $s5, $s6
	addi.d	$s2, $s2, 128
	beq	$a0, $s3, .LBB87_45
.LBB87_28:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $fp, 176
	ld.d	$a1, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s6, $a1
	bltz	$a1, .LBB87_31
# %bb.29:                               #   in Loop: Header=BB87_28 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB87_32
# %bb.30:                               #   in Loop: Header=BB87_28 Depth=1
	add.d	$a0, $a2, $s2
	b	.LBB87_34
	.p2align	4, , 16
.LBB87_31:                              #   in Loop: Header=BB87_28 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB87_33
	.p2align	4, , 16
.LBB87_32:                              #   in Loop: Header=BB87_28 Depth=1
	srli.d	$a2, $a1, 2
.LBB87_33:                              #   in Loop: Header=BB87_28 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB87_34:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit39
                                        #   in Loop: Header=BB87_28 Depth=1
	st.d	$s8, $sp, 104
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	st.d	$a1, $sp, 328
	move	$a0, $s8
	bltu	$a1, $s1, .LBB87_37
# %bb.35:                               # %.noexc.i.i41
                                        #   in Loop: Header=BB87_28 Depth=1
.Ltmp2309:
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 328
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2310:
# %bb.36:                               # %.noexc42
                                        #   in Loop: Header=BB87_28 Depth=1
	ld.d	$a1, $sp, 328
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 120
.LBB87_37:                              # %._crit_edge.i.i.i40
                                        #   in Loop: Header=BB87_28 Depth=1
	beq	$a1, $s7, .LBB87_41
# %bb.38:                               # %._crit_edge.i.i.i40
                                        #   in Loop: Header=BB87_28 Depth=1
	bnez	$a1, .LBB87_40
# %bb.39:                               #   in Loop: Header=BB87_28 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB87_41
	.p2align	4, , 16
.LBB87_40:                              #   in Loop: Header=BB87_28 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB87_41:                              #   in Loop: Header=BB87_28 Depth=1
	ld.d	$a0, $sp, 240
	ld.d	$a2, $sp, 328
	sub.d	$a0, $s0, $a0
	st.d	$a2, $sp, 112
	bltu	$a0, $a2, .LBB87_78
# %bb.42:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit.i
                                        #   in Loop: Header=BB87_28 Depth=1
.Ltmp2312:
	ld.d	$a1, $sp, 104
	addi.d	$a0, $sp, 232
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm)
	jirl	$ra, $ra, 0
.Ltmp2313:
# %bb.43:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_.exit
                                        #   in Loop: Header=BB87_28 Depth=1
	ld.d	$a0, $sp, 104
	beq	$a0, $s8, .LBB87_27
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB87_28 Depth=1
	ld.d	$a1, $sp, 120
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB87_27
.LBB87_45:                              # %._crit_edge.loopexit
	ld.d	$a1, $sp, 240
	addi.d	$s1, $sp, 280
	addi.d	$s2, $sp, 248
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
.LBB87_46:                              # %._crit_edge
	addi.d	$s8, $sp, 88
	ld.d	$s4, $sp, 232
	st.d	$s8, $sp, 72
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 328
	move	$a0, $s8
	bltu	$a1, $a2, .LBB87_49
# %bb.47:                               # %.noexc.i
.Ltmp2315:
	addi.d	$a0, $sp, 72
	addi.d	$a1, $sp, 328
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2316:
# %bb.48:                               # %.noexc37
	ld.d	$a1, $sp, 328
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 88
.LBB87_49:                              # %._crit_edge.i.i
	beq	$a1, $s7, .LBB87_53
# %bb.50:                               # %._crit_edge.i.i
	bnez	$a1, .LBB87_52
# %bb.51:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB87_53
.LBB87_52:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB87_53:
	ld.d	$a0, $sp, 328
	st.d	$a0, $sp, 80
	addi.d	$s0, $sp, 56
	ld.d	$a1, $sp, 272
	ld.d	$s4, $sp, 264
	st.d	$s0, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 328
	move	$a0, $s0
	bltu	$a1, $a2, .LBB87_56
# %bb.54:                               # %.noexc.i50
.Ltmp2318:
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 328
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2319:
# %bb.55:                               # %.noexc51
	ld.d	$a1, $sp, 328
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB87_56:                              # %._crit_edge.i.i49
	beq	$a1, $s7, .LBB87_60
# %bb.57:                               # %._crit_edge.i.i49
	bnez	$a1, .LBB87_59
# %bb.58:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB87_60
.LBB87_59:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB87_60:
	ld.d	$a0, $sp, 328
	ld.d	$a5, $fp, 40
	st.d	$a0, $sp, 48
.Ltmp2321:
	addi.d	$a0, $sp, 104
	addi.d	$a1, $sp, 72
	addi.d	$a4, $sp, 40
	move	$a2, $s6
	ld.d	$a3, $sp, 32                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp2322:
# %bb.61:
	ld.d	$a0, $sp, 40
	beq	$a0, $s0, .LBB87_63
# %bb.62:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i53
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_63:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit55
	ld.d	$a0, $sp, 72
	beq	$a0, $s8, .LBB87_65
# %bb.64:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i56
	ld.d	$a1, $sp, 88
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_65:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit58
.Ltmp2324:
	move	$a0, $fp
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp2325:
# %bb.66:                               # %.noexc59
	ld.d	$a5, $fp, 176
	ld.d	$a2, $fp, 184
	ld.d	$a0, $fp, 200
	sub.d	$a1, $a5, $a2
	srai.d	$a1, $a1, 7
	add.d	$a4, $a1, $s3
	addi.d	$a1, $fp, 160
	bltz	$a4, .LBB87_69
# %bb.67:
	ori	$a3, $zero, 3
	bltu	$a3, $a4, .LBB87_70
# %bb.68:
	ld.d	$a3, $fp, 192
	slli.d	$a4, $s3, 7
	add.d	$a4, $a5, $a4
	b	.LBB87_72
.LBB87_69:
	srai.d	$a5, $a4, 2
	b	.LBB87_71
.LBB87_70:
	srli.d	$a5, $a4, 2
.LBB87_71:
	slli.d	$a2, $a5, 3
	ldx.d	$a2, $a0, $a2
	alsl.d	$a0, $a5, $a0, 3
	addi.d	$a3, $a2, 512
	slli.d	$a5, $a5, 2
	sub.d	$a4, $a4, $a5
	slli.d	$a4, $a4, 7
	add.d	$a4, $a2, $a4
.LBB87_72:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i
	st.d	$a4, $sp, 328
	st.d	$a2, $sp, 336
	st.d	$a3, $sp, 344
	st.d	$a0, $sp, 352
.Ltmp2326:
	addi.d	$a0, $sp, 296
	addi.d	$a2, $sp, 328
	addi.d	$a3, $sp, 104
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2327:
# %bb.73:
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 232
	beq	$a0, $s2, .LBB87_75
# %bb.74:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i61
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_75:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit63
	ld.d	$a0, $sp, 264
	beq	$a0, $s1, .LBB87_77
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i64
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_77:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
	ld.d	$s8, $sp, 360                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 368                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 376                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 384                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 392                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 400                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 408                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 416                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 424                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 432                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 440                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 448
	ret
.LBB87_78:
.Ltmp2329:
	pcalau12i	$a0, %pc_hi20(.L.str.227)
	addi.d	$a0, $a0, %pc_lo12(.L.str.227)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Ltmp2330:
# %bb.79:                               # %.noexc44
.LBB87_80:
.Ltmp2320:
	move	$fp, $a0
	b	.LBB87_85
.LBB87_81:
.Ltmp2317:
	move	$fp, $a0
	b	.LBB87_94
.LBB87_82:
.Ltmp2308:
	move	$fp, $a0
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB87_96
	b	.LBB87_98
.LBB87_83:
.Ltmp2323:
	ld.d	$a2, $sp, 40
	move	$fp, $a0
	beq	$a2, $s0, .LBB87_85
# %bb.84:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i67
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_85:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit69
	ld.d	$a0, $sp, 72
	beq	$a0, $s8, .LBB87_94
# %bb.86:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i70
	ld.d	$a1, $sp, 88
	b	.LBB87_93
.LBB87_87:
.Ltmp2328:
	move	$fp, $a0
	addi.d	$a0, $sp, 104
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	b	.LBB87_94
.LBB87_88:
.Ltmp2311:
	move	$fp, $a0
	b	.LBB87_94
.LBB87_89:                              # %.loopexit
.Ltmp2314:
	b	.LBB87_91
.LBB87_90:                              # %.loopexit.split-lp
.Ltmp2331:
.LBB87_91:
	move	$fp, $a0
	ld.d	$a0, $sp, 104
	beq	$a0, $s8, .LBB87_94
# %bb.92:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i46
	ld.d	$a1, $sp, 120
.LBB87_93:
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB87_94:
	ld.d	$a0, $sp, 232
	addi.d	$a1, $sp, 248
	bne	$a0, $a1, .LBB87_97
# %bb.95:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit75
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	bne	$a0, $a1, .LBB87_98
.LBB87_96:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit78
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB87_97:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i73
	ld.d	$a1, $sp, 248
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 264
	addi.d	$a1, $sp, 280
	beq	$a0, $a1, .LBB87_96
.LBB87_98:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i76
	ld.d	$a1, $sp, 280
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end87:
	.size	_ZN2PP3Cmd11merge_wordsEii, .Lfunc_end87-_ZN2PP3Cmd11merge_wordsEii
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table87:
.Lexception48:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Lfunc_begin48-.Lfunc_begin48  # >> Call Site 1 <<
	.uleb128 .Ltmp2306-.Lfunc_begin48       #   Call between .Lfunc_begin48 and .Ltmp2306
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2306-.Lfunc_begin48       # >> Call Site 2 <<
	.uleb128 .Ltmp2307-.Ltmp2306            #   Call between .Ltmp2306 and .Ltmp2307
	.uleb128 .Ltmp2308-.Lfunc_begin48       #     jumps to .Ltmp2308
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2307-.Lfunc_begin48       # >> Call Site 3 <<
	.uleb128 .Ltmp2309-.Ltmp2307            #   Call between .Ltmp2307 and .Ltmp2309
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2309-.Lfunc_begin48       # >> Call Site 4 <<
	.uleb128 .Ltmp2310-.Ltmp2309            #   Call between .Ltmp2309 and .Ltmp2310
	.uleb128 .Ltmp2311-.Lfunc_begin48       #     jumps to .Ltmp2311
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2310-.Lfunc_begin48       # >> Call Site 5 <<
	.uleb128 .Ltmp2312-.Ltmp2310            #   Call between .Ltmp2310 and .Ltmp2312
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2312-.Lfunc_begin48       # >> Call Site 6 <<
	.uleb128 .Ltmp2313-.Ltmp2312            #   Call between .Ltmp2312 and .Ltmp2313
	.uleb128 .Ltmp2314-.Lfunc_begin48       #     jumps to .Ltmp2314
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2313-.Lfunc_begin48       # >> Call Site 7 <<
	.uleb128 .Ltmp2315-.Ltmp2313            #   Call between .Ltmp2313 and .Ltmp2315
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2315-.Lfunc_begin48       # >> Call Site 8 <<
	.uleb128 .Ltmp2316-.Ltmp2315            #   Call between .Ltmp2315 and .Ltmp2316
	.uleb128 .Ltmp2317-.Lfunc_begin48       #     jumps to .Ltmp2317
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2316-.Lfunc_begin48       # >> Call Site 9 <<
	.uleb128 .Ltmp2318-.Ltmp2316            #   Call between .Ltmp2316 and .Ltmp2318
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2318-.Lfunc_begin48       # >> Call Site 10 <<
	.uleb128 .Ltmp2319-.Ltmp2318            #   Call between .Ltmp2318 and .Ltmp2319
	.uleb128 .Ltmp2320-.Lfunc_begin48       #     jumps to .Ltmp2320
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2319-.Lfunc_begin48       # >> Call Site 11 <<
	.uleb128 .Ltmp2321-.Ltmp2319            #   Call between .Ltmp2319 and .Ltmp2321
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2321-.Lfunc_begin48       # >> Call Site 12 <<
	.uleb128 .Ltmp2322-.Ltmp2321            #   Call between .Ltmp2321 and .Ltmp2322
	.uleb128 .Ltmp2323-.Lfunc_begin48       #     jumps to .Ltmp2323
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2322-.Lfunc_begin48       # >> Call Site 13 <<
	.uleb128 .Ltmp2324-.Ltmp2322            #   Call between .Ltmp2322 and .Ltmp2324
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2324-.Lfunc_begin48       # >> Call Site 14 <<
	.uleb128 .Ltmp2327-.Ltmp2324            #   Call between .Ltmp2324 and .Ltmp2327
	.uleb128 .Ltmp2328-.Lfunc_begin48       #     jumps to .Ltmp2328
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2327-.Lfunc_begin48       # >> Call Site 15 <<
	.uleb128 .Ltmp2329-.Ltmp2327            #   Call between .Ltmp2327 and .Ltmp2329
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2329-.Lfunc_begin48       # >> Call Site 16 <<
	.uleb128 .Ltmp2330-.Ltmp2329            #   Call between .Ltmp2329 and .Ltmp2330
	.uleb128 .Ltmp2331-.Lfunc_begin48       #     jumps to .Ltmp2331
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2330-.Lfunc_begin48       # >> Call Site 17 <<
	.uleb128 .Lfunc_end87-.Ltmp2330         #   Call between .Ltmp2330 and .Lfunc_end87
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end48:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception49
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a0
	ld.d	$a4, $a0, 176
	ld.d	$a0, $a0, 184
	ld.d	$a3, $s0, 200
	sub.d	$a0, $a4, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $a1
	move	$fp, $a2
	bltz	$a0, .LBB88_3
# %bb.1:
	ori	$a2, $zero, 3
	bltu	$a2, $a0, .LBB88_4
# %bb.2:
	slli.d	$a0, $a1, 7
	add.d	$a0, $a4, $a0
	ld.w	$s4, $a0, 80
	ld.w	$s1, $a0, 84
	b	.LBB88_6
.LBB88_3:
	srai.d	$a1, $a0, 2
	b	.LBB88_5
.LBB88_4:
	srli.d	$a1, $a0, 2
.LBB88_5:
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $a3, $a2
	andi	$a3, $a0, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a2, $a3
	ld.w	$s4, $a3, 80
	ld.w	$s1, $a3, 84
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB88_6:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit14
	addi.d	$s3, $sp, 16
	ld.d	$a1, $a0, 96
	ld.d	$s2, $a0, 88
	st.d	$s3, $sp, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 32
	move	$a0, $s3
	bltu	$a1, $a2, .LBB88_8
# %bb.7:                                # %.noexc.i.i
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB88_8:                               # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB88_12
# %bb.9:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB88_11
# %bb.10:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB88_12
.LBB88_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB88_12:                              # %_ZN2PP4Word12get_filenameB5cxx11Ev.exit
	ld.d	$a0, $sp, 32
	ld.d	$a1, $fp, 16
	st.d	$a0, $sp, 8
	ld.d	$a0, $a1, -24
	addi.d	$fp, $fp, 16
	add.d	$a0, $fp, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB88_56
# %bb.13:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB88_15
# %bb.14:
	ld.bu	$a0, $s2, 67
	b	.LBB88_17
.LBB88_15:
.Ltmp2332:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2333:
# %bb.16:                               # %.noexc26
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp2334:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp2335:
.LBB88_17:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp2336:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2337:
# %bb.18:                               # %.noexc28
.Ltmp2338:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2339:
# %bb.19:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp2340:
	pcalau12i	$a0, %pc_hi20(.L.str.193)
	addi.d	$a1, $a0, %pc_lo12(.L.str.193)
	ori	$a2, $zero, 24
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2341:
# %bb.20:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
.Ltmp2342:
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2343:
# %bb.21:
.Ltmp2344:
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.59)
	addi.d	$a1, $a0, %pc_lo12(.L.str.59)
	ori	$a2, $zero, 1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2345:
# %bb.22:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit15
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB88_56
# %bb.23:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i31
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB88_25
# %bb.24:
	ld.bu	$a0, $s2, 67
	b	.LBB88_27
.LBB88_25:
.Ltmp2346:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2347:
# %bb.26:                               # %.noexc36
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp2348:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp2349:
.LBB88_27:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i33
.Ltmp2350:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2351:
# %bb.28:                               # %.noexc38
.Ltmp2352:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2353:
# %bb.29:                               # %_ZNSolsEPFRSoS_E.exit16
.Ltmp2354:
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a1, $a0, %pc_lo12(.L.str.22)
	ori	$a2, $zero, 4
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2355:
# %bb.30:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit17
	ld.d	$a0, $s0, 40
	ld.d	$a2, $a0, 16
	ld.d	$a1, $a0, 24
	addi.w	$a3, $s4, -1
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 5
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB88_33
# %bb.31:
	ori	$a4, $zero, 15
	bltu	$a4, $a1, .LBB88_34
# %bb.32:
	slli.d	$a0, $a3, 5
	add.d	$a0, $a2, $a0
	b	.LBB88_36
.LBB88_33:
	srai.d	$a2, $a1, 4
	b	.LBB88_35
.LBB88_34:
	srli.d	$a2, $a1, 4
.LBB88_35:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB88_36:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp2356:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2357:
# %bb.37:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB88_56
# %bb.38:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i42
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB88_40
# %bb.39:
	ld.bu	$a0, $s1, 67
	b	.LBB88_42
.LBB88_40:
.Ltmp2358:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2359:
# %bb.41:                               # %.noexc47
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp2360:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp2361:
.LBB88_42:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i44
.Ltmp2362:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2363:
# %bb.43:                               # %.noexc49
.Ltmp2364:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2365:
# %bb.44:                               # %_ZNSolsEPFRSoS_E.exit19
.Ltmp2366:
	pcalau12i	$a0, %pc_hi20(.L.str.194)
	addi.d	$a1, $a0, %pc_lo12(.L.str.194)
	ori	$a2, $zero, 9
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2367:
# %bb.45:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit20
	ld.d	$a1, $sp, 0
	ld.d	$a2, $sp, 8
.Ltmp2368:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2369:
# %bb.46:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit21
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB88_56
# %bb.47:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i53
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB88_49
# %bb.48:
	ld.bu	$a0, $s0, 67
	b	.LBB88_51
.LBB88_49:
.Ltmp2370:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2371:
# %bb.50:                               # %.noexc58
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2372:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2373:
.LBB88_51:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i55
.Ltmp2374:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2375:
# %bb.52:                               # %.noexc60
.Ltmp2376:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2377:
# %bb.53:                               # %_ZNSolsEPFRSoS_E.exit22
	ld.d	$a0, $sp, 0
	beq	$a0, $s3, .LBB88_55
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB88_55:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB88_56:                              # %.invoke
.Ltmp2378:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2379:
# %bb.57:                               # %.cont
.LBB88_58:
.Ltmp2380:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s3, .LBB88_60
# %bb.59:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB88_60:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit25
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end88:
	.size	_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end88-_ZN2PP3Cmd11fatal_errorEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table88:
.Lexception49:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Lfunc_begin49-.Lfunc_begin49  # >> Call Site 1 <<
	.uleb128 .Ltmp2332-.Lfunc_begin49       #   Call between .Lfunc_begin49 and .Ltmp2332
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2332-.Lfunc_begin49       # >> Call Site 2 <<
	.uleb128 .Ltmp2377-.Ltmp2332            #   Call between .Ltmp2332 and .Ltmp2377
	.uleb128 .Ltmp2380-.Lfunc_begin49       #     jumps to .Ltmp2380
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2377-.Lfunc_begin49       # >> Call Site 3 <<
	.uleb128 .Ltmp2378-.Ltmp2377            #   Call between .Ltmp2377 and .Ltmp2378
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2378-.Lfunc_begin49       # >> Call Site 4 <<
	.uleb128 .Ltmp2379-.Ltmp2378            #   Call between .Ltmp2378 and .Ltmp2379
	.uleb128 .Ltmp2380-.Lfunc_begin49       #     jumps to .Ltmp2380
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2379-.Lfunc_begin49       # >> Call Site 5 <<
	.uleb128 .Lfunc_end88-.Ltmp2379         #   Call between .Ltmp2379 and .Lfunc_end88
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end49:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd7warningEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd7warningEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd7warningEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd7warningEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd7warningEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception50
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s0, $a0
	ld.d	$a4, $a0, 176
	ld.d	$a0, $a0, 184
	ld.d	$a3, $s0, 200
	sub.d	$a0, $a4, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $a1
	move	$fp, $a2
	bltz	$a0, .LBB89_3
# %bb.1:
	ori	$a2, $zero, 3
	bltu	$a2, $a0, .LBB89_4
# %bb.2:
	slli.d	$a0, $a1, 7
	add.d	$a0, $a4, $a0
	ld.w	$s4, $a0, 80
	ld.w	$s1, $a0, 84
	b	.LBB89_6
.LBB89_3:
	srai.d	$a1, $a0, 2
	b	.LBB89_5
.LBB89_4:
	srli.d	$a1, $a0, 2
.LBB89_5:
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $a3, $a2
	andi	$a3, $a0, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a2, $a3
	ld.w	$s4, $a3, 80
	ld.w	$s1, $a3, 84
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB89_6:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit14
	addi.d	$s3, $sp, 16
	ld.d	$a1, $a0, 96
	ld.d	$s2, $a0, 88
	st.d	$s3, $sp, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 32
	move	$a0, $s3
	bltu	$a1, $a2, .LBB89_8
# %bb.7:                                # %.noexc.i.i
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 32
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 32
	st.d	$a0, $sp, 0
	st.d	$a1, $sp, 16
.LBB89_8:                               # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB89_12
# %bb.9:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB89_11
# %bb.10:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB89_12
.LBB89_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB89_12:                              # %_ZN2PP4Word12get_filenameB5cxx11Ev.exit
	ld.d	$a0, $sp, 32
	ld.d	$a1, $fp, 16
	st.d	$a0, $sp, 8
	ld.d	$a0, $a1, -24
	addi.d	$fp, $fp, 16
	add.d	$a0, $fp, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB89_56
# %bb.13:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB89_15
# %bb.14:
	ld.bu	$a0, $s2, 67
	b	.LBB89_17
.LBB89_15:
.Ltmp2381:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2382:
# %bb.16:                               # %.noexc26
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp2383:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp2384:
.LBB89_17:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp2385:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2386:
# %bb.18:                               # %.noexc28
.Ltmp2387:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2388:
# %bb.19:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp2389:
	pcalau12i	$a0, %pc_hi20(.L.str.195)
	addi.d	$a1, $a0, %pc_lo12(.L.str.195)
	ori	$a2, $zero, 20
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2390:
# %bb.20:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
.Ltmp2391:
	move	$a0, $fp
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2392:
# %bb.21:
.Ltmp2393:
	move	$s1, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.59)
	addi.d	$a1, $a0, %pc_lo12(.L.str.59)
	ori	$a2, $zero, 1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2394:
# %bb.22:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit15
	ld.d	$a0, $s1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s1, $a0
	ld.d	$s2, $a0, 240
	beqz	$s2, .LBB89_56
# %bb.23:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i31
	ld.bu	$a0, $s2, 56
	beqz	$a0, .LBB89_25
# %bb.24:
	ld.bu	$a0, $s2, 67
	b	.LBB89_27
.LBB89_25:
.Ltmp2395:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2396:
# %bb.26:                               # %.noexc36
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
.Ltmp2397:
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
.Ltmp2398:
.LBB89_27:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i33
.Ltmp2399:
	ext.w.b	$a1, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2400:
# %bb.28:                               # %.noexc38
.Ltmp2401:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2402:
# %bb.29:                               # %_ZNSolsEPFRSoS_E.exit16
.Ltmp2403:
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a1, $a0, %pc_lo12(.L.str.22)
	ori	$a2, $zero, 4
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2404:
# %bb.30:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit17
	ld.d	$a0, $s0, 40
	ld.d	$a2, $a0, 16
	ld.d	$a1, $a0, 24
	addi.w	$a3, $s4, -1
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 5
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB89_33
# %bb.31:
	ori	$a4, $zero, 15
	bltu	$a4, $a1, .LBB89_34
# %bb.32:
	slli.d	$a0, $a3, 5
	add.d	$a0, $a2, $a0
	b	.LBB89_36
.LBB89_33:
	srai.d	$a2, $a1, 4
	b	.LBB89_35
.LBB89_34:
	srli.d	$a2, $a1, 4
.LBB89_35:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB89_36:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp2405:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2406:
# %bb.37:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s0, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB89_56
# %bb.38:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i42
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB89_40
# %bb.39:
	ld.bu	$a0, $s1, 67
	b	.LBB89_42
.LBB89_40:
.Ltmp2407:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2408:
# %bb.41:                               # %.noexc47
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
.Ltmp2409:
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.Ltmp2410:
.LBB89_42:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i44
.Ltmp2411:
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2412:
# %bb.43:                               # %.noexc49
.Ltmp2413:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2414:
# %bb.44:                               # %_ZNSolsEPFRSoS_E.exit19
.Ltmp2415:
	pcalau12i	$a0, %pc_hi20(.L.str.194)
	addi.d	$a1, $a0, %pc_lo12(.L.str.194)
	ori	$a2, $zero, 9
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2416:
# %bb.45:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit20
	ld.d	$a1, $sp, 0
	ld.d	$a2, $sp, 8
.Ltmp2417:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2418:
# %bb.46:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit21
	move	$fp, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $fp, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB89_56
# %bb.47:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i53
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB89_49
# %bb.48:
	ld.bu	$a0, $s0, 67
	b	.LBB89_51
.LBB89_49:
.Ltmp2419:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2420:
# %bb.50:                               # %.noexc58
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2421:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2422:
.LBB89_51:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i55
.Ltmp2423:
	ext.w.b	$a1, $a0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2424:
# %bb.52:                               # %.noexc60
.Ltmp2425:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2426:
# %bb.53:                               # %_ZNSolsEPFRSoS_E.exit22
	ld.d	$a0, $sp, 0
	beq	$a0, $s3, .LBB89_55
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB89_55:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB89_56:                              # %.invoke
.Ltmp2427:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2428:
# %bb.57:                               # %.cont
.LBB89_58:
.Ltmp2429:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s3, .LBB89_60
# %bb.59:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i23
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB89_60:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit25
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end89:
	.size	_ZN2PP3Cmd7warningEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end89-_ZN2PP3Cmd7warningEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table89:
.Lexception50:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Lfunc_begin50-.Lfunc_begin50  # >> Call Site 1 <<
	.uleb128 .Ltmp2381-.Lfunc_begin50       #   Call between .Lfunc_begin50 and .Ltmp2381
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2381-.Lfunc_begin50       # >> Call Site 2 <<
	.uleb128 .Ltmp2426-.Ltmp2381            #   Call between .Ltmp2381 and .Ltmp2426
	.uleb128 .Ltmp2429-.Lfunc_begin50       #     jumps to .Ltmp2429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2426-.Lfunc_begin50       # >> Call Site 3 <<
	.uleb128 .Ltmp2427-.Ltmp2426            #   Call between .Ltmp2426 and .Ltmp2427
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2427-.Lfunc_begin50       # >> Call Site 4 <<
	.uleb128 .Ltmp2428-.Ltmp2427            #   Call between .Ltmp2427 and .Ltmp2428
	.uleb128 .Ltmp2429-.Lfunc_begin50       #     jumps to .Ltmp2429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2428-.Lfunc_begin50       # >> Call Site 5 <<
	.uleb128 .Lfunc_end89-.Ltmp2428         #   Call between .Ltmp2428 and .Lfunc_end89
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end50:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd20print_duplicate_lineEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEiiNS1_12basic_stringIcS4_S5_EE # -- Begin function _ZN2PP3Cmd20print_duplicate_lineEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEiiNS1_12basic_stringIcS4_S5_EE
	.p2align	5
	.type	_ZN2PP3Cmd20print_duplicate_lineEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEiiNS1_12basic_stringIcS4_S5_EE,@function
_ZN2PP3Cmd20print_duplicate_lineEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEiiNS1_12basic_stringIcS4_S5_EE: # @_ZN2PP3Cmd20print_duplicate_lineEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEiiNS1_12basic_stringIcS4_S5_EE
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception51
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$fp, $a0
	ld.d	$a7, $a0, 176
	ld.d	$a0, $a0, 184
	ld.d	$a6, $fp, 200
	sub.d	$a0, $a7, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $a1
	move	$s0, $a5
	move	$s1, $a4
	move	$s2, $a3
	move	$s3, $a2
	bltz	$a0, .LBB90_3
# %bb.1:
	ori	$a2, $zero, 3
	bltu	$a2, $a0, .LBB90_4
# %bb.2:
	slli.d	$a0, $a1, 7
	add.d	$a0, $a7, $a0
	ld.w	$s7, $a0, 80
	ld.w	$s4, $a0, 84
	b	.LBB90_6
.LBB90_3:
	srai.d	$a1, $a0, 2
	b	.LBB90_5
.LBB90_4:
	srli.d	$a1, $a0, 2
.LBB90_5:
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $a6, $a2
	andi	$a3, $a0, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a2, $a3
	ld.w	$s7, $a3, 80
	ld.w	$s4, $a3, 84
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB90_6:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit16
	addi.d	$s6, $sp, 24
	ld.d	$a1, $a0, 96
	ld.d	$s5, $a0, 88
	st.d	$s6, $sp, 8
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 40
	move	$a0, $s6
	bltu	$a1, $a2, .LBB90_8
# %bb.7:                                # %.noexc.i.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB90_8:                               # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB90_12
# %bb.9:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB90_11
# %bb.10:
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB90_12
.LBB90_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB90_12:
	ld.d	$a2, $sp, 40
	ld.d	$a0, $s3, 16
	st.d	$a2, $sp, 16
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 8
	addi.d	$s3, $s3, 16
	add.d	$a0, $s3, $a0
	st.d	$s2, $a0, 16
.Ltmp2430:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2431:
# %bb.13:
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	st.d	$s1, $a0, 16
.Ltmp2432:
	move	$a0, $s3
	move	$a1, $s4
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2433:
# %bb.14:
	ld.d	$a1, $s0, 0
	ld.d	$a2, $s0, 8
.Ltmp2434:
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2435:
# %bb.15:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit18
	ld.d	$a0, $fp, 40
	ld.d	$a2, $a0, 16
	ld.d	$a1, $a0, 24
	addi.w	$a3, $s7, -1
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 5
	add.d	$a1, $a1, $a3
	bltz	$a1, .LBB90_18
# %bb.16:
	ori	$a4, $zero, 15
	bltu	$a4, $a1, .LBB90_19
# %bb.17:
	slli.d	$a0, $a3, 5
	add.d	$a0, $a2, $a0
	b	.LBB90_21
.LBB90_18:
	srai.d	$a2, $a1, 4
	b	.LBB90_20
.LBB90_19:
	srli.d	$a2, $a1, 4
.LBB90_20:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB90_21:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp2436:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2437:
# %bb.22:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit20
	ld.d	$a0, $sp, 8
	beq	$a0, $s6, .LBB90_24
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB90_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.LBB90_25:
.Ltmp2438:
	ld.d	$a2, $sp, 8
	move	$fp, $a0
	beq	$a2, $s6, .LBB90_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
	ld.d	$a0, $sp, 24
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB90_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit23
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end90:
	.size	_ZN2PP3Cmd20print_duplicate_lineEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEiiNS1_12basic_stringIcS4_S5_EE, .Lfunc_end90-_ZN2PP3Cmd20print_duplicate_lineEiRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEiiNS1_12basic_stringIcS4_S5_EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table90:
.Lexception51:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Lfunc_begin51-.Lfunc_begin51  # >> Call Site 1 <<
	.uleb128 .Ltmp2430-.Lfunc_begin51       #   Call between .Lfunc_begin51 and .Ltmp2430
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2430-.Lfunc_begin51       # >> Call Site 2 <<
	.uleb128 .Ltmp2437-.Ltmp2430            #   Call between .Ltmp2430 and .Ltmp2437
	.uleb128 .Ltmp2438-.Lfunc_begin51       #     jumps to .Ltmp2438
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2437-.Lfunc_begin51       # >> Call Site 3 <<
	.uleb128 .Lfunc_end90-.Ltmp2437         #   Call between .Ltmp2437 and .Lfunc_end90
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end51:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd19get_duplicate_sizesEiRiS1_ # -- Begin function _ZN2PP3Cmd19get_duplicate_sizesEiRiS1_
	.p2align	5
	.type	_ZN2PP3Cmd19get_duplicate_sizesEiRiS1_,@function
_ZN2PP3Cmd19get_duplicate_sizesEiRiS1_: # @_ZN2PP3Cmd19get_duplicate_sizesEiRiS1_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.d	$a5, $a0, 176
	ld.d	$a6, $a0, 184
	ld.d	$a4, $a0, 200
	sub.d	$a0, $a5, $a6
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $a1
	move	$fp, $a3
	move	$s0, $a2
	bltz	$a0, .LBB91_3
# %bb.1:
	ori	$a2, $zero, 3
	bltu	$a2, $a0, .LBB91_4
# %bb.2:
	slli.d	$a0, $a1, 7
	add.d	$a0, $a5, $a0
	ld.w	$s2, $a0, 84
	b	.LBB91_6
.LBB91_3:
	srai.d	$a1, $a0, 2
	b	.LBB91_5
.LBB91_4:
	srli.d	$a1, $a0, 2
.LBB91_5:
	slli.d	$a2, $a1, 3
	ldx.d	$a2, $a4, $a2
	andi	$a3, $a0, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a2, $a3
	ld.w	$s2, $a3, 84
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB91_6:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit22
	addi.d	$s3, $sp, 24
	ld.d	$a1, $a0, 96
	ld.d	$s1, $a0, 88
	st.d	$s3, $sp, 8
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 40
	move	$a0, $s3
	bltu	$a1, $a2, .LBB91_8
# %bb.7:                                # %.noexc.i.i
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 40
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 40
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB91_8:                               # %._crit_edge.i.i.i
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB91_12
# %bb.9:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB91_11
# %bb.10:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB91_12
.LBB91_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB91_12:                              # %_ZN2PP4Word12get_filenameB5cxx11Ev.exit
	ld.d	$a0, $sp, 40
	st.d	$a0, $sp, 16
	st.w	$a0, $s0, 0
	ori	$a0, $zero, 9
	slt	$a0, $a0, $s2
	addi.d	$a0, $a0, 1
	ori	$a1, $zero, 99
	slt	$a1, $a1, $s2
	masknez	$a0, $a0, $a1
	ori	$a2, $zero, 3
	maskeqz	$a1, $a2, $a1
	or	$a0, $a1, $a0
	ori	$a1, $zero, 999
	slt	$a1, $a1, $s2
	masknez	$a0, $a0, $a1
	ori	$a2, $zero, 4
	maskeqz	$a1, $a2, $a1
	or	$a0, $a1, $a0
	lu12i.w	$a1, 2
	ori	$a1, $a1, 1807
	slt	$a1, $a1, $s2
	masknez	$a0, $a0, $a1
	ori	$a2, $zero, 5
	maskeqz	$a1, $a2, $a1
	or	$a0, $a1, $a0
	lu12i.w	$a1, 24
	ori	$a1, $a1, 1695
	slt	$a1, $a1, $s2
	masknez	$a0, $a0, $a1
	ori	$a2, $zero, 6
	maskeqz	$a1, $a2, $a1
	or	$a0, $a1, $a0
	lu12i.w	$a1, 244
	ori	$a1, $a1, 575
	slt	$a1, $a1, $s2
	masknez	$a2, $a0, $a1
	ld.d	$a0, $sp, 8
	ori	$a3, $zero, 7
	maskeqz	$a1, $a3, $a1
	or	$a1, $a1, $a2
	st.w	$a1, $fp, 0
	beq	$a0, $s3, .LBB91_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB91_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end91:
	.size	_ZN2PP3Cmd19get_duplicate_sizesEiRiS1_, .Lfunc_end91-_ZN2PP3Cmd19get_duplicate_sizesEiRiS1_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd16handle_two_wordsEv  # -- Begin function _ZN2PP3Cmd16handle_two_wordsEv
	.p2align	5
	.type	_ZN2PP3Cmd16handle_two_wordsEv,@function
_ZN2PP3Cmd16handle_two_wordsEv:         # @_ZN2PP3Cmd16handle_two_wordsEv
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception52
# %bb.0:
	addi.d	$sp, $sp, -816
	.cfi_def_cfa_offset 816
	st.d	$ra, $sp, 808                   # 8-byte Folded Spill
	st.d	$fp, $sp, 800                   # 8-byte Folded Spill
	st.d	$s0, $sp, 792                   # 8-byte Folded Spill
	st.d	$s1, $sp, 784                   # 8-byte Folded Spill
	st.d	$s2, $sp, 776                   # 8-byte Folded Spill
	st.d	$s3, $sp, 768                   # 8-byte Folded Spill
	st.d	$s4, $sp, 760                   # 8-byte Folded Spill
	st.d	$s5, $sp, 752                   # 8-byte Folded Spill
	st.d	$s6, $sp, 744                   # 8-byte Folded Spill
	st.d	$s7, $sp, 736                   # 8-byte Folded Spill
	st.d	$s8, $sp, 728                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	move	$fp, $zero
	move	$s8, $zero
	move	$s2, $zero
	addi.d	$a0, $a0, 160
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	addi.d	$s7, $sp, 488
	ori	$s6, $zero, 0
	lu32i.d	$s6, -1
	ori	$s4, $zero, 3
	addi.w	$s5, $zero, -1
	lu12i.w	$a0, 2
	ori	$a0, $a0, 12
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	b	.LBB92_2
	.p2align	4, , 16
.LBB92_1:                               #   in Loop: Header=BB92_2 Depth=1
	addi.d	$s8, $s8, 1
	addi.d	$fp, $fp, 128
.LBB92_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a2, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a0
	srli.d	$a1, $a1, 3
	sltu	$a5, $zero, $a2
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a6, $a1, $a5
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a7, $a3, $a4
	srli.d	$a7, $a7, 7
	alsl.d	$a6, $a6, $a7, 2
	sub.d	$a7, $a5, $a1
	srli.d	$a7, $a7, 7
	add.d	$a6, $a6, $a7
	slli.d	$a6, $a6, 32
	add.d	$a6, $a6, $s6
	srai.d	$a6, $a6, 32
	bge	$s8, $a6, .LBB92_85
# %bb.3:                                #   in Loop: Header=BB92_2 Depth=1
	move	$s1, $s2
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s8, $a2
	bltz	$a3, .LBB92_6
# %bb.4:                                #   in Loop: Header=BB92_2 Depth=1
	bltu	$s4, $a3, .LBB92_7
# %bb.5:                                #   in Loop: Header=BB92_2 Depth=1
	add.d	$a0, $a1, $fp
	b	.LBB92_9
	.p2align	4, , 16
.LBB92_6:                               #   in Loop: Header=BB92_2 Depth=1
	srai.d	$a1, $a3, 2
	b	.LBB92_8
	.p2align	4, , 16
.LBB92_7:                               #   in Loop: Header=BB92_2 Depth=1
	srli.d	$a1, $a3, 2
.LBB92_8:                               #   in Loop: Header=BB92_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s8, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB92_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB92_2 Depth=1
	st.d	$s7, $sp, 472
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 696
	move	$a0, $s7
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB92_11
# %bb.10:                               # %.noexc.i.i
                                        #   in Loop: Header=BB92_2 Depth=1
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 472
	st.d	$a1, $sp, 488
.LBB92_11:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB92_2 Depth=1
	beq	$a1, $s5, .LBB92_15
# %bb.12:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB92_2 Depth=1
	bnez	$a1, .LBB92_14
# %bb.13:                               #   in Loop: Header=BB92_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB92_15
	.p2align	4, , 16
.LBB92_14:                              #   in Loop: Header=BB92_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_15:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 696
	ld.d	$a0, $sp, 472
	st.d	$a1, $sp, 480
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB92_20
# %bb.16:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 43
	bne	$a1, $a2, .LBB92_20
# %bb.17:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit.thread
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s8, $a1
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB92_29
# %bb.18:                               #   in Loop: Header=BB92_2 Depth=1
	bltu	$s4, $a3, .LBB92_31
# %bb.19:                               #   in Loop: Header=BB92_2 Depth=1
	add.d	$a0, $a2, $fp
	b	.LBB92_33
	.p2align	4, , 16
.LBB92_20:                              #   in Loop: Header=BB92_2 Depth=1
	move	$s3, $zero
	beq	$a0, $s7, .LBB92_22
.LBB92_21:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i222
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 488
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit224
                                        #   in Loop: Header=BB92_2 Depth=1
	addi.w	$s2, $s1, 1
	beqz	$s3, .LBB92_1
# %bb.23:                               #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $s0, 232
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	addi.w	$a2, $a2, -2
	bstrpick.d	$a3, $a2, 31, 0
	bge	$s8, $a2, .LBB92_27
# %bb.24:                               #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a4, $s8, $a2
	addi.d	$a4, $a4, 2
	bltz	$a4, .LBB92_30
# %bb.25:                               #   in Loop: Header=BB92_2 Depth=1
	bltu	$s4, $a4, .LBB92_45
# %bb.26:                               #   in Loop: Header=BB92_2 Depth=1
	add.d	$a4, $a1, $fp
	addi.d	$a4, $a4, 256
	ld.w	$a4, $a4, 32
	ori	$a5, $zero, 13
	bgeu	$a5, $a4, .LBB92_47
	b	.LBB92_49
	.p2align	4, , 16
.LBB92_27:                              # %_ZN2PP4Word9is_numvarEv.exit
                                        #   in Loop: Header=BB92_2 Depth=1
	bne	$s8, $a3, .LBB92_1
# %bb.28:                               # %_ZN2PP4Word9is_numvarEv.exit._ZN2PP4Word9is_numvarEv.exit.thread718_crit_edge
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	b	.LBB92_49
.LBB92_29:                              #   in Loop: Header=BB92_2 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB92_32
.LBB92_30:                              #   in Loop: Header=BB92_2 Depth=1
	srai.d	$a4, $a4, 2
	b	.LBB92_46
.LBB92_31:                              #   in Loop: Header=BB92_2 Depth=1
	srli.d	$a2, $a3, 2
.LBB92_32:                              #   in Loop: Header=BB92_2 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s8, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
.LBB92_33:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit216
                                        #   in Loop: Header=BB92_2 Depth=1
	addi.d	$a0, $a0, 128
	addi.d	$a2, $sp, 712
	st.d	$a2, $sp, 696
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 664
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB92_36
# %bb.34:                               # %.noexc.i.i218
                                        #   in Loop: Header=BB92_2 Depth=1
.Ltmp2538:
	addi.d	$a0, $sp, 696
	addi.d	$a1, $sp, 664
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2539:
# %bb.35:                               # %.noexc
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 664
	st.d	$a0, $sp, 696
	st.d	$a1, $sp, 712
.LBB92_36:                              # %._crit_edge.i.i.i217
                                        #   in Loop: Header=BB92_2 Depth=1
	beq	$a1, $s5, .LBB92_40
# %bb.37:                               # %._crit_edge.i.i.i217
                                        #   in Loop: Header=BB92_2 Depth=1
	bnez	$a1, .LBB92_39
# %bb.38:                               #   in Loop: Header=BB92_2 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB92_40
.LBB92_39:                              #   in Loop: Header=BB92_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_40:                              #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 664
	ld.d	$a0, $sp, 696
	st.d	$a1, $sp, 704
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB92_42
# %bb.41:                               #   in Loop: Header=BB92_2 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -43
	sltui	$s3, $a1, 1
	addi.d	$a1, $sp, 712
	bne	$a0, $a1, .LBB92_43
	b	.LBB92_44
.LBB92_42:                              #   in Loop: Header=BB92_2 Depth=1
	move	$s3, $zero
	addi.d	$a1, $sp, 712
	beq	$a0, $a1, .LBB92_44
.LBB92_43:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 712
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_44:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a0, $sp, 472
	bne	$a0, $s7, .LBB92_21
	b	.LBB92_22
.LBB92_45:                              #   in Loop: Header=BB92_2 Depth=1
	srli.d	$a4, $a4, 2
.LBB92_46:                              #   in Loop: Header=BB92_2 Depth=1
	slli.d	$a5, $a4, 3
	ldx.d	$a5, $a0, $a5
	slli.d	$a4, $a4, 2
	sub.d	$a4, $a2, $a4
	add.d	$a4, $s8, $a4
	slli.d	$a4, $a4, 7
	add.d	$a4, $a4, $a5
	addi.d	$a4, $a4, 256
	ld.w	$a4, $a4, 32
	ori	$a5, $zero, 13
	bltu	$a5, $a4, .LBB92_49
.LBB92_47:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit234
                                        #   in Loop: Header=BB92_2 Depth=1
	ori	$a5, $zero, 1
	sll.d	$a4, $a5, $a4
	ld.d	$a5, $sp, 0                     # 8-byte Folded Reload
	and	$a4, $a4, $a5
	beqz	$a4, .LBB92_49
# %bb.48:                               #   in Loop: Header=BB92_2 Depth=1
	bne	$s8, $a3, .LBB92_1
.LBB92_49:                              # %_ZN2PP4Word9is_numvarEv.exit.thread718
                                        #   in Loop: Header=BB92_2 Depth=1
	add.d	$a3, $a2, $s8
	bltz	$a3, .LBB92_52
# %bb.50:                               #   in Loop: Header=BB92_2 Depth=1
	bltu	$s4, $a3, .LBB92_53
# %bb.51:                               #   in Loop: Header=BB92_2 Depth=1
	add.d	$a0, $a1, $fp
	ld.w	$s3, $a0, 80
	ld.w	$s4, $a0, 84
	b	.LBB92_55
.LBB92_52:                              #   in Loop: Header=BB92_2 Depth=1
	srai.d	$a1, $a3, 2
	b	.LBB92_54
.LBB92_53:                              #   in Loop: Header=BB92_2 Depth=1
	srli.d	$a1, $a3, 2
.LBB92_54:                              #   in Loop: Header=BB92_2 Depth=1
	slli.d	$a4, $a1, 3
	ldx.d	$a0, $a0, $a4
	andi	$a3, $a3, 3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a0, $a3
	ld.w	$s3, $a3, 80
	ld.w	$s4, $a3, 84
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s8, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB92_55:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit240
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $a0, 96
	ld.d	$s5, $a0, 88
	addi.d	$a0, $sp, 648
	st.d	$a0, $sp, 632
	st.d	$a1, $sp, 472
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB92_57
# %bb.56:                               # %.noexc.i.i242
                                        #   in Loop: Header=BB92_2 Depth=1
	addi.d	$a0, $sp, 632
	addi.d	$a1, $sp, 472
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 472
	st.d	$a0, $sp, 632
	st.d	$a1, $sp, 648
.LBB92_57:                              # %._crit_edge.i.i.i241
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_61
# %bb.58:                               # %._crit_edge.i.i.i241
                                        #   in Loop: Header=BB92_2 Depth=1
	bnez	$a1, .LBB92_60
# %bb.59:                               #   in Loop: Header=BB92_2 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB92_61
.LBB92_60:                              #   in Loop: Header=BB92_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_61:                              #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 472
	st.d	$a1, $sp, 640
	addi.d	$a2, $sp, 616
	st.d	$a2, $sp, 600
	lu12i.w	$a0, 2
	ori	$a0, $a0, 2859
	st.h	$a0, $sp, 616
	st.b	$zero, $sp, 618
	ld.h	$a0, $a2, 0
	ld.b	$a2, $a2, 2
	ori	$a4, $zero, 2
	st.d	$a4, $sp, 608
	addi.d	$a3, $sp, 456
	st.d	$a3, $sp, 440
	st.h	$a0, $a3, 0
	st.b	$a2, $a3, 2
	ld.d	$s5, $sp, 632
	st.d	$a4, $sp, 448
	addi.d	$a0, $sp, 424
	st.d	$a0, $sp, 408
	st.d	$a1, $sp, 696
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB92_64
# %bb.62:                               # %.noexc.i248
                                        #   in Loop: Header=BB92_2 Depth=1
.Ltmp2541:
	addi.d	$a0, $sp, 408
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2542:
# %bb.63:                               # %.noexc249
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 408
	st.d	$a1, $sp, 424
.LBB92_64:                              # %._crit_edge.i.i247
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_68
# %bb.65:                               # %._crit_edge.i.i247
                                        #   in Loop: Header=BB92_2 Depth=1
	bnez	$a1, .LBB92_67
# %bb.66:                               #   in Loop: Header=BB92_2 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB92_68
.LBB92_67:                              #   in Loop: Header=BB92_2 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_68:                              #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a0, $sp, 696
	ld.d	$a5, $s0, 40
	st.d	$a0, $sp, 416
.Ltmp2544:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 440
	addi.d	$a4, $sp, 408
	move	$a2, $s3
	move	$a3, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp2545:
# %bb.69:                               #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a0, $sp, 408
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	addi.d	$a1, $sp, 424
	ori	$s4, $zero, 3
	beq	$a0, $a1, .LBB92_71
# %bb.70:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i251
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 424
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_71:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit253
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a0, $sp, 440
	addi.d	$a1, $sp, 456
	beq	$a0, $a1, .LBB92_73
# %bb.72:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i254
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 456
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_73:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit256
                                        #   in Loop: Header=BB92_2 Depth=1
.Ltmp2547:
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp2548:
# %bb.74:                               # %.noexc257
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a4, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a4, $a1
	srai.d	$a3, $a2, 7
	add.d	$a2, $s8, $a3
	bltz	$a2, .LBB92_77
# %bb.75:                               #   in Loop: Header=BB92_2 Depth=1
	bltu	$s4, $a2, .LBB92_78
# %bb.76:                               #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a2, $s0, 192
	add.d	$a3, $a4, $fp
	b	.LBB92_80
.LBB92_77:                              #   in Loop: Header=BB92_2 Depth=1
	srai.d	$a4, $a2, 2
	b	.LBB92_79
.LBB92_78:                              #   in Loop: Header=BB92_2 Depth=1
	srli.d	$a4, $a2, 2
.LBB92_79:                              #   in Loop: Header=BB92_2 Depth=1
	slli.d	$a1, $a4, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a4, $a0, 3
	addi.d	$a2, $a1, 512
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	add.d	$a3, $s8, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
.LBB92_80:                              # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i
                                        #   in Loop: Header=BB92_2 Depth=1
	st.d	$a3, $sp, 696
	st.d	$a1, $sp, 704
	st.d	$a2, $sp, 712
	st.d	$a0, $sp, 720
.Ltmp2549:
	addi.d	$a0, $sp, 664
	addi.d	$a2, $sp, 696
	addi.d	$a3, $sp, 472
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2550:
# %bb.81:                               #   in Loop: Header=BB92_2 Depth=1
	addi.d	$a0, $sp, 472
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB92_83
# %bb.82:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i259
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_83:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit261
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	beq	$a0, $a1, .LBB92_1
# %bb.84:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i262
                                        #   in Loop: Header=BB92_2 Depth=1
	ld.d	$a1, $sp, 648
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB92_1
.LBB92_85:                              # %.preheader
	move	$fp, $zero
	move	$s6, $zero
	move	$s2, $zero
	addi.d	$s8, $sp, 488
	ori	$s7, $zero, 0
	lu32i.d	$s7, -1
	ori	$s4, $zero, 3
	b	.LBB92_88
	.p2align	4, , 16
.LBB92_86:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit352
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a2, $s0, 232
	ld.d	$a0, $s0, 200
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
.LBB92_87:                              #   in Loop: Header=BB92_88 Depth=1
	addi.d	$s6, $s6, 1
	addi.d	$fp, $fp, 128
.LBB92_88:                              # =>This Inner Loop Header: Depth=1
	sub.d	$a6, $a2, $a0
	srai.d	$a6, $a6, 3
	sltu	$a2, $zero, $a2
	sub.d	$a2, $a6, $a2
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srai.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	slli.d	$a3, $a2, 32
	add.d	$a3, $a3, $s7
	srai.d	$a3, $a3, 32
	bge	$s6, $a3, .LBB92_171
# %bb.89:                               #   in Loop: Header=BB92_88 Depth=1
	move	$s1, $s2
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s6, $a2
	bltz	$a3, .LBB92_92
# %bb.90:                               #   in Loop: Header=BB92_88 Depth=1
	bltu	$s4, $a3, .LBB92_93
# %bb.91:                               #   in Loop: Header=BB92_88 Depth=1
	add.d	$a0, $a1, $fp
	b	.LBB92_95
	.p2align	4, , 16
.LBB92_92:                              #   in Loop: Header=BB92_88 Depth=1
	srai.d	$a1, $a3, 2
	b	.LBB92_94
	.p2align	4, , 16
.LBB92_93:                              #   in Loop: Header=BB92_88 Depth=1
	srli.d	$a1, $a3, 2
.LBB92_94:                              #   in Loop: Header=BB92_88 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB92_95:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit280
                                        #   in Loop: Header=BB92_88 Depth=1
	st.d	$s8, $sp, 472
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 696
	move	$a0, $s8
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB92_97
# %bb.96:                               # %.noexc.i.i282
                                        #   in Loop: Header=BB92_88 Depth=1
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 472
	st.d	$a1, $sp, 488
.LBB92_97:                              # %._crit_edge.i.i.i281
                                        #   in Loop: Header=BB92_88 Depth=1
	beq	$a1, $s5, .LBB92_101
# %bb.98:                               # %._crit_edge.i.i.i281
                                        #   in Loop: Header=BB92_88 Depth=1
	bnez	$a1, .LBB92_100
# %bb.99:                               #   in Loop: Header=BB92_88 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB92_101
	.p2align	4, , 16
.LBB92_100:                             #   in Loop: Header=BB92_88 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_101:                             # %_ZN2PP4Word10get_stringB5cxx11Ev.exit283
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 696
	ld.d	$a0, $sp, 472
	st.d	$a1, $sp, 480
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB92_106
# %bb.102:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit285
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.bu	$a1, $a0, 0
	ori	$a2, $zero, 45
	bne	$a1, $a2, .LBB92_106
# %bb.103:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit285.thread
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a3, $s6, $a1
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB92_115
# %bb.104:                              #   in Loop: Header=BB92_88 Depth=1
	bltu	$s4, $a3, .LBB92_117
# %bb.105:                              #   in Loop: Header=BB92_88 Depth=1
	add.d	$a0, $a2, $fp
	b	.LBB92_119
	.p2align	4, , 16
.LBB92_106:                             #   in Loop: Header=BB92_88 Depth=1
	move	$s3, $zero
	beq	$a0, $s8, .LBB92_108
.LBB92_107:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i297
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 488
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_108:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit299
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a2, $s0, 232
	ld.d	$a0, $s0, 200
	ld.d	$a3, $s0, 208
	ld.d	$a4, $s0, 216
	ld.d	$a5, $s0, 192
	ld.d	$a1, $s0, 176
	addi.w	$s2, $s1, 1
	beqz	$s3, .LBB92_87
# %bb.109:                              #   in Loop: Header=BB92_88 Depth=1
	sub.d	$a6, $a2, $a0
	srli.d	$a6, $a6, 3
	sltu	$a7, $zero, $a2
	sub.d	$a6, $a6, $a7
	sub.d	$a7, $a3, $a4
	srli.d	$a7, $a7, 7
	alsl.d	$a6, $a6, $a7, 2
	sub.d	$a7, $a5, $a1
	srli.d	$a7, $a7, 7
	add.d	$a6, $a6, $a7
	addi.w	$a6, $a6, -2
	bstrpick.d	$a7, $a6, 31, 0
	bge	$s6, $a6, .LBB92_113
# %bb.110:                              #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a6, $s0, 184
	sub.d	$a6, $a1, $a6
	srai.d	$a6, $a6, 7
	add.d	$t0, $s6, $a6
	addi.d	$t0, $t0, 2
	bltz	$t0, .LBB92_116
# %bb.111:                              #   in Loop: Header=BB92_88 Depth=1
	bltu	$s4, $t0, .LBB92_131
# %bb.112:                              #   in Loop: Header=BB92_88 Depth=1
	add.d	$t0, $a1, $fp
	addi.d	$t0, $t0, 256
	ld.w	$t0, $t0, 32
	ori	$t1, $zero, 13
	bgeu	$t1, $t0, .LBB92_133
	b	.LBB92_135
	.p2align	4, , 16
.LBB92_113:                             # %_ZN2PP4Word9is_numvarEv.exit311
                                        #   in Loop: Header=BB92_88 Depth=1
	bne	$s6, $a7, .LBB92_87
# %bb.114:                              # %_ZN2PP4Word9is_numvarEv.exit311._ZN2PP4Word9is_numvarEv.exit311.thread728_crit_edge
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a2, $s0, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a6, $a2, 7
	b	.LBB92_135
.LBB92_115:                             #   in Loop: Header=BB92_88 Depth=1
	srai.d	$a2, $a3, 2
	b	.LBB92_118
.LBB92_116:                             #   in Loop: Header=BB92_88 Depth=1
	srai.d	$t0, $t0, 2
	b	.LBB92_132
.LBB92_117:                             #   in Loop: Header=BB92_88 Depth=1
	srli.d	$a2, $a3, 2
.LBB92_118:                             #   in Loop: Header=BB92_88 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
.LBB92_119:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit287
                                        #   in Loop: Header=BB92_88 Depth=1
	addi.d	$a0, $a0, 128
	addi.d	$a2, $sp, 712
	st.d	$a2, $sp, 696
	ld.d	$a1, $a0, 8
	ld.d	$s2, $a0, 0
	st.d	$a1, $sp, 664
	move	$a0, $a2
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB92_122
# %bb.120:                              # %.noexc.i.i289
                                        #   in Loop: Header=BB92_88 Depth=1
.Ltmp2524:
	addi.d	$a0, $sp, 696
	addi.d	$a1, $sp, 664
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2525:
# %bb.121:                              # %.noexc290
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 664
	st.d	$a0, $sp, 696
	st.d	$a1, $sp, 712
.LBB92_122:                             # %._crit_edge.i.i.i288
                                        #   in Loop: Header=BB92_88 Depth=1
	beq	$a1, $s5, .LBB92_126
# %bb.123:                              # %._crit_edge.i.i.i288
                                        #   in Loop: Header=BB92_88 Depth=1
	bnez	$a1, .LBB92_125
# %bb.124:                              #   in Loop: Header=BB92_88 Depth=1
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB92_126
.LBB92_125:                             #   in Loop: Header=BB92_88 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_126:                             #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 664
	ld.d	$a0, $sp, 696
	st.d	$a1, $sp, 704
	ori	$a2, $zero, 1
	bne	$a1, $a2, .LBB92_128
# %bb.127:                              #   in Loop: Header=BB92_88 Depth=1
	ld.bu	$a1, $a0, 0
	addi.d	$a1, $a1, -45
	sltui	$s3, $a1, 1
	addi.d	$a1, $sp, 712
	bne	$a0, $a1, .LBB92_129
	b	.LBB92_130
.LBB92_128:                             #   in Loop: Header=BB92_88 Depth=1
	move	$s3, $zero
	addi.d	$a1, $sp, 712
	beq	$a0, $a1, .LBB92_130
.LBB92_129:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i294
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 712
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_130:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit296
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a0, $sp, 472
	bne	$a0, $s8, .LBB92_107
	b	.LBB92_108
.LBB92_131:                             #   in Loop: Header=BB92_88 Depth=1
	srli.d	$t0, $t0, 2
.LBB92_132:                             #   in Loop: Header=BB92_88 Depth=1
	slli.d	$t1, $t0, 3
	ldx.d	$t1, $a0, $t1
	slli.d	$t0, $t0, 2
	sub.d	$t0, $a6, $t0
	add.d	$t0, $s6, $t0
	slli.d	$t0, $t0, 7
	add.d	$t0, $t0, $t1
	addi.d	$t0, $t0, 256
	ld.w	$t0, $t0, 32
	ori	$t1, $zero, 13
	bltu	$t1, $t0, .LBB92_135
.LBB92_133:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit309
                                        #   in Loop: Header=BB92_88 Depth=1
	ori	$t1, $zero, 1
	sll.d	$t0, $t1, $t0
	ld.d	$t1, $sp, 0                     # 8-byte Folded Reload
	and	$t0, $t0, $t1
	beqz	$t0, .LBB92_135
# %bb.134:                              #   in Loop: Header=BB92_88 Depth=1
	bne	$s6, $a7, .LBB92_87
.LBB92_135:                             # %_ZN2PP4Word9is_numvarEv.exit311.thread728
                                        #   in Loop: Header=BB92_88 Depth=1
	add.d	$a2, $a6, $s6
	bltz	$a2, .LBB92_138
# %bb.136:                              #   in Loop: Header=BB92_88 Depth=1
	bltu	$s4, $a2, .LBB92_139
# %bb.137:                              #   in Loop: Header=BB92_88 Depth=1
	add.d	$a0, $a1, $fp
	ld.w	$s3, $a0, 80
	ld.w	$s4, $a0, 84
	b	.LBB92_141
.LBB92_138:                             #   in Loop: Header=BB92_88 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB92_140
.LBB92_139:                             #   in Loop: Header=BB92_88 Depth=1
	srli.d	$a1, $a2, 2
.LBB92_140:                             #   in Loop: Header=BB92_88 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	andi	$a2, $a2, 3
	slli.d	$a2, $a2, 7
	add.d	$a2, $a0, $a2
	ld.w	$s3, $a2, 80
	ld.w	$s4, $a2, 84
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a6, $a1
	add.d	$a1, $s6, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB92_141:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit317
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $a0, 96
	ld.d	$s5, $a0, 88
	addi.d	$a0, $sp, 648
	st.d	$a0, $sp, 632
	st.d	$a1, $sp, 472
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB92_143
# %bb.142:                              # %.noexc.i.i319
                                        #   in Loop: Header=BB92_88 Depth=1
	addi.d	$a0, $sp, 632
	addi.d	$a1, $sp, 472
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 472
	st.d	$a0, $sp, 632
	st.d	$a1, $sp, 648
.LBB92_143:                             # %._crit_edge.i.i.i318
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_147
# %bb.144:                              # %._crit_edge.i.i.i318
                                        #   in Loop: Header=BB92_88 Depth=1
	bnez	$a1, .LBB92_146
# %bb.145:                              #   in Loop: Header=BB92_88 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB92_147
.LBB92_146:                             #   in Loop: Header=BB92_88 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_147:                             #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 472
	st.d	$a1, $sp, 640
	addi.d	$a2, $sp, 616
	st.d	$a2, $sp, 600
	lu12i.w	$a0, 2
	ori	$a0, $a0, 3373
	st.h	$a0, $sp, 616
	st.b	$zero, $sp, 618
	ld.h	$a0, $a2, 0
	ld.b	$a2, $a2, 2
	ori	$a4, $zero, 2
	st.d	$a4, $sp, 608
	addi.d	$a3, $sp, 392
	st.d	$a3, $sp, 376
	st.h	$a0, $a3, 0
	st.b	$a2, $a3, 2
	ld.d	$s5, $sp, 632
	st.d	$a4, $sp, 384
	addi.d	$a0, $sp, 360
	st.d	$a0, $sp, 344
	st.d	$a1, $sp, 696
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB92_150
# %bb.148:                              # %.noexc.i330
                                        #   in Loop: Header=BB92_88 Depth=1
.Ltmp2527:
	addi.d	$a0, $sp, 344
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2528:
# %bb.149:                              # %.noexc331
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 344
	st.d	$a1, $sp, 360
.LBB92_150:                             # %._crit_edge.i.i329
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_154
# %bb.151:                              # %._crit_edge.i.i329
                                        #   in Loop: Header=BB92_88 Depth=1
	bnez	$a1, .LBB92_153
# %bb.152:                              #   in Loop: Header=BB92_88 Depth=1
	ld.b	$a1, $s5, 0
	st.b	$a1, $a0, 0
	b	.LBB92_154
.LBB92_153:                             #   in Loop: Header=BB92_88 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s5
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_154:                             #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a0, $sp, 696
	ld.d	$a5, $s0, 40
	st.d	$a0, $sp, 352
.Ltmp2530:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 376
	addi.d	$a4, $sp, 344
	move	$a2, $s3
	move	$a3, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp2531:
# %bb.155:                              #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a0, $sp, 344
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	addi.d	$a1, $sp, 360
	ori	$s4, $zero, 3
	beq	$a0, $a1, .LBB92_157
# %bb.156:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i333
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 360
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_157:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit335
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB92_159
# %bb.158:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i336
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 392
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_159:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit338
                                        #   in Loop: Header=BB92_88 Depth=1
.Ltmp2533:
	move	$a0, $s0
	move	$a1, $s1
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp2534:
# %bb.160:                              # %.noexc344
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a4, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a2, $a4, $a1
	srai.d	$a3, $a2, 7
	add.d	$a2, $s6, $a3
	bltz	$a2, .LBB92_163
# %bb.161:                              #   in Loop: Header=BB92_88 Depth=1
	bltu	$s4, $a2, .LBB92_164
# %bb.162:                              #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a2, $s0, 192
	add.d	$a3, $a4, $fp
	b	.LBB92_166
.LBB92_163:                             #   in Loop: Header=BB92_88 Depth=1
	srai.d	$a4, $a2, 2
	b	.LBB92_165
.LBB92_164:                             #   in Loop: Header=BB92_88 Depth=1
	srli.d	$a4, $a2, 2
.LBB92_165:                             #   in Loop: Header=BB92_88 Depth=1
	slli.d	$a1, $a4, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a4, $a0, 3
	addi.d	$a2, $a1, 512
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	add.d	$a3, $s6, $a3
	slli.d	$a3, $a3, 7
	add.d	$a3, $a1, $a3
.LBB92_166:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i339
                                        #   in Loop: Header=BB92_88 Depth=1
	st.d	$a3, $sp, 696
	st.d	$a1, $sp, 704
	st.d	$a2, $sp, 712
	st.d	$a0, $sp, 720
.Ltmp2535:
	addi.d	$a0, $sp, 664
	addi.d	$a2, $sp, 696
	addi.d	$a3, $sp, 472
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2536:
# %bb.167:                              #   in Loop: Header=BB92_88 Depth=1
	addi.d	$a0, $sp, 472
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB92_169
# %bb.168:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i347
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_169:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit349
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	beq	$a0, $a1, .LBB92_86
# %bb.170:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i350
                                        #   in Loop: Header=BB92_88 Depth=1
	ld.d	$a1, $sp, 648
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB92_86
.LBB92_171:
	ori	$a3, $zero, 2
	blt	$a2, $a3, .LBB92_396
# %bb.172:
	ld.d	$a2, $s0, 184
	sub.d	$a3, $a1, $a2
	srai.d	$a2, $a3, 7
	bltz	$a3, .LBB92_175
# %bb.173:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB92_176
# %bb.174:
	ld.w	$s1, $a1, 80
	ld.w	$s2, $a1, 84
	b	.LBB92_178
.LBB92_175:
	srai.d	$a1, $a3, 9
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	b	.LBB92_177
.LBB92_176:
	slli.d	$a1, $a2, 1
	bstrins.d	$a1, $zero, 2, 0
	ldx.d	$a0, $a0, $a1
	andi	$a1, $a2, 3
.LBB92_177:
	slli.d	$a2, $a1, 7
	add.d	$a2, $a0, $a2
	ld.w	$s1, $a2, 80
	ld.w	$s2, $a2, 84
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB92_178:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit370
	addi.d	$s4, $sp, 648
	ld.d	$a2, $a1, 96
	ld.d	$s3, $a1, 88
	st.d	$s4, $sp, 632
	ori	$a1, $zero, 16
	st.d	$a2, $sp, 472
	move	$a0, $s4
	bltu	$a2, $a1, .LBB92_180
# %bb.179:                              # %.noexc.i.i372
	addi.d	$a0, $sp, 632
	addi.d	$a1, $sp, 472
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a2, $sp, 472
	st.d	$a0, $sp, 632
	st.d	$a2, $sp, 648
.LBB92_180:                             # %._crit_edge.i.i.i371
	beq	$a2, $s5, .LBB92_184
# %bb.181:                              # %._crit_edge.i.i.i371
	bnez	$a2, .LBB92_183
# %bb.182:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_184
.LBB92_183:
	addi.d	$a2, $a2, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_184:                             # %_ZN2PP4Word12get_filenameB5cxx11Ev.exit373
	ld.d	$a1, $sp, 472
	ld.d	$a2, $s0, 176
	ld.d	$a3, $s0, 184
	ld.d	$a0, $s0, 200
	st.d	$a1, $sp, 640
	sub.d	$a3, $a2, $a3
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB92_187
# %bb.185:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB92_189
# %bb.186:
	srli.d	$a2, $a1, 2
	b	.LBB92_188
.LBB92_187:
	srai.d	$a2, $a3, 9
.LBB92_188:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB92_189:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit375
	addi.d	$s5, $sp, 488
	st.d	$s5, $sp, 472
	ld.d	$a1, $a2, 8
	ld.d	$s3, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s5
	bltu	$a1, $a2, .LBB92_192
# %bb.190:                              # %.noexc.i.i377
.Ltmp2439:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2440:
# %bb.191:                              # %.noexc378
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 472
	st.d	$a1, $sp, 488
.LBB92_192:                             # %._crit_edge.i.i.i376
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_196
# %bb.193:                              # %._crit_edge.i.i.i376
	bnez	$a1, .LBB92_195
# %bb.194:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_196
.LBB92_195:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_196:
	ld.d	$a0, $sp, 696
	ld.d	$s3, $sp, 472
	ori	$a1, $zero, 3
	st.d	$a0, $sp, 480
	bne	$a0, $a1, .LBB92_198
# %bb.197:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit381
	pcalau12i	$a0, %pc_hi20(.L.str.208)
	addi.d	$a1, $a0, %pc_lo12(.L.str.208)
	ori	$a2, $zero, 3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB92_207
.LBB92_198:
	move	$s6, $zero
	beq	$s3, $s5, .LBB92_200
.LBB92_199:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i393
	ld.d	$a0, $sp, 488
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_200:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit395
	beqz	$s6, .LBB92_226
# %bb.201:
	pcalau12i	$a0, %pc_hi20(.L.str.18)
	addi.d	$a0, $a0, %pc_lo12(.L.str.18)
	ld.wu	$a1, $a0, 0
	ld.b	$a0, $a0, 4
	addi.d	$a2, $sp, 616
	st.d	$a2, $sp, 600
	st.w	$a1, $sp, 616
	st.b	$a0, $sp, 620
	ori	$a0, $zero, 5
	st.d	$a0, $sp, 608
	st.b	$zero, $sp, 621
	ld.h	$a2, $sp, 620
	addi.d	$s5, $sp, 328
	st.d	$s5, $sp, 312
	st.w	$a1, $sp, 328
	st.h	$a2, $sp, 332
	st.d	$a0, $sp, 320
	addi.d	$s6, $sp, 296
	ld.d	$a1, $sp, 640
	ld.d	$s3, $sp, 632
	st.d	$s6, $sp, 280
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s6
	bltu	$a1, $a2, .LBB92_204
# %bb.202:                              # %.noexc.i405
.Ltmp2445:
	addi.d	$a0, $sp, 280
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2446:
# %bb.203:                              # %.noexc406
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 280
	st.d	$a1, $sp, 296
.LBB92_204:                             # %._crit_edge.i.i404
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_211
# %bb.205:                              # %._crit_edge.i.i404
	bnez	$a1, .LBB92_210
# %bb.206:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_211
.LBB92_207:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit381.thread
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	ld.d	$a4, $sp, 16                    # 8-byte Folded Reload
	blt	$a3, $a4, .LBB92_397
# %bb.208:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB92_402
# %bb.209:
	addi.d	$a0, $a2, 128
	b	.LBB92_404
.LBB92_210:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_211:
	ld.d	$a0, $sp, 696
	ld.d	$a5, $s0, 40
	st.d	$a0, $sp, 288
.Ltmp2448:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 312
	addi.d	$a4, $sp, 280
	move	$a2, $s1
	move	$a3, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp2449:
# %bb.212:
	ld.d	$a0, $sp, 280
	beq	$a0, $s6, .LBB92_214
# %bb.213:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i408
	ld.d	$a1, $sp, 296
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_214:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit410
	ld.d	$a0, $sp, 312
	beq	$a0, $s5, .LBB92_216
# %bb.215:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i411
	ld.d	$a1, $sp, 328
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_216:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit413
.Ltmp2451:
	ori	$a2, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp2452:
# %bb.217:                              # %.noexc419
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a4, $a3, 7
	bltz	$a3, .LBB92_220
# %bb.218:
	ori	$a3, $zero, 4
	bgeu	$a4, $a3, .LBB92_221
# %bb.219:
	ld.d	$a3, $s0, 192
	b	.LBB92_223
.LBB92_220:
	srai.d	$a2, $a3, 9
	b	.LBB92_222
.LBB92_221:
	srli.d	$a2, $a4, 2
.LBB92_222:
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a2, $a0, 3
	addi.d	$a3, $a1, 512
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a4, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a1, $a2
.LBB92_223:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i414
	st.d	$a2, $sp, 696
	st.d	$a1, $sp, 704
	st.d	$a3, $sp, 712
	st.d	$a0, $sp, 720
.Ltmp2453:
	addi.d	$a0, $sp, 664
	addi.d	$a2, $sp, 696
	addi.d	$a3, $sp, 472
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2454:
# %bb.224:
	addi.d	$a0, $sp, 472
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB92_226
# %bb.225:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i422
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_226:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB92_229
# %bb.227:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB92_231
# %bb.228:
	srli.d	$a2, $a1, 2
	b	.LBB92_230
.LBB92_229:
	srai.d	$a2, $a3, 9
.LBB92_230:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB92_231:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit441
	addi.d	$s5, $sp, 488
	st.d	$s5, $sp, 472
	ld.d	$a1, $a2, 8
	ld.d	$s3, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s5
	bltu	$a1, $a2, .LBB92_234
# %bb.232:                              # %.noexc.i.i443
.Ltmp2456:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2457:
# %bb.233:                              # %.noexc444
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 472
	st.d	$a1, $sp, 488
.LBB92_234:                             # %._crit_edge.i.i.i442
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_238
# %bb.235:                              # %._crit_edge.i.i.i442
	bnez	$a1, .LBB92_237
# %bb.236:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_238
.LBB92_237:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_238:
	ld.d	$a0, $sp, 696
	ld.d	$s3, $sp, 472
	ori	$a1, $zero, 3
	st.d	$a0, $sp, 480
	bne	$a0, $a1, .LBB92_240
# %bb.239:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit447
	pcalau12i	$a0, %pc_hi20(.L.str.208)
	addi.d	$a1, $a0, %pc_lo12(.L.str.208)
	ori	$a2, $zero, 3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB92_249
.LBB92_240:
	move	$s6, $zero
	beq	$s3, $s5, .LBB92_242
.LBB92_241:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i459
	ld.d	$a0, $sp, 488
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_242:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit461
	beqz	$s6, .LBB92_268
# %bb.243:
	pcalau12i	$a0, %pc_hi20(.L.str.162)
	addi.d	$a0, $a0, %pc_lo12(.L.str.162)
	ld.d	$a1, $a0, 5
	ld.d	$a0, $a0, 0
	addi.d	$a2, $sp, 616
	st.d	$a2, $sp, 600
	st.d	$a1, $sp, 621
	st.d	$a0, $sp, 616
	ori	$a0, $zero, 13
	st.d	$a0, $sp, 608
	st.b	$zero, $sp, 629
	ld.d	$a1, $sp, 616
	ld.d	$a2, $sp, 622
	addi.d	$s5, $sp, 264
	st.d	$s5, $sp, 248
	st.d	$a1, $sp, 264
	st.d	$a2, $sp, 270
	st.d	$a0, $sp, 256
	addi.d	$s6, $sp, 232
	ld.d	$a1, $sp, 640
	ld.d	$s3, $sp, 632
	st.d	$s6, $sp, 216
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s6
	bltu	$a1, $a2, .LBB92_246
# %bb.244:                              # %.noexc.i471
.Ltmp2462:
	addi.d	$a0, $sp, 216
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2463:
# %bb.245:                              # %.noexc472
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 216
	st.d	$a1, $sp, 232
.LBB92_246:                             # %._crit_edge.i.i470
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_253
# %bb.247:                              # %._crit_edge.i.i470
	bnez	$a1, .LBB92_252
# %bb.248:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_253
.LBB92_249:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit447.thread
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	ld.d	$a4, $sp, 16                    # 8-byte Folded Reload
	blt	$a3, $a4, .LBB92_398
# %bb.250:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB92_417
# %bb.251:
	addi.d	$a0, $a2, 128
	b	.LBB92_419
.LBB92_252:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_253:
	ld.d	$a0, $sp, 696
	ld.d	$a5, $s0, 40
	st.d	$a0, $sp, 224
.Ltmp2465:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 248
	addi.d	$a4, $sp, 216
	move	$a2, $s1
	move	$a3, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp2466:
# %bb.254:
	ld.d	$a0, $sp, 216
	beq	$a0, $s6, .LBB92_256
# %bb.255:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i474
	ld.d	$a1, $sp, 232
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_256:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit476
	ld.d	$a0, $sp, 248
	beq	$a0, $s5, .LBB92_258
# %bb.257:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i477
	ld.d	$a1, $sp, 264
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_258:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit479
.Ltmp2468:
	ori	$a2, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp2469:
# %bb.259:                              # %.noexc485
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a4, $a3, 7
	bltz	$a3, .LBB92_262
# %bb.260:
	ori	$a3, $zero, 4
	bgeu	$a4, $a3, .LBB92_263
# %bb.261:
	ld.d	$a3, $s0, 192
	b	.LBB92_265
.LBB92_262:
	srai.d	$a2, $a3, 9
	b	.LBB92_264
.LBB92_263:
	srli.d	$a2, $a4, 2
.LBB92_264:
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a2, $a0, 3
	addi.d	$a3, $a1, 512
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a4, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a1, $a2
.LBB92_265:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i480
	st.d	$a2, $sp, 696
	st.d	$a1, $sp, 704
	st.d	$a3, $sp, 712
	st.d	$a0, $sp, 720
.Ltmp2470:
	addi.d	$a0, $sp, 664
	addi.d	$a2, $sp, 696
	addi.d	$a3, $sp, 472
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2471:
# %bb.266:
	addi.d	$a0, $sp, 472
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB92_268
# %bb.267:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i488
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_268:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB92_271
# %bb.269:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB92_273
# %bb.270:
	srli.d	$a2, $a1, 2
	b	.LBB92_272
.LBB92_271:
	srai.d	$a2, $a3, 9
.LBB92_272:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB92_273:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit507
	addi.d	$s5, $sp, 488
	st.d	$s5, $sp, 472
	ld.d	$a1, $a2, 8
	ld.d	$s3, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s5
	bltu	$a1, $a2, .LBB92_276
# %bb.274:                              # %.noexc.i.i509
.Ltmp2473:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2474:
# %bb.275:                              # %.noexc510
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 472
	st.d	$a1, $sp, 488
.LBB92_276:                             # %._crit_edge.i.i.i508
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_280
# %bb.277:                              # %._crit_edge.i.i.i508
	bnez	$a1, .LBB92_279
# %bb.278:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_280
.LBB92_279:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_280:
	ld.d	$a0, $sp, 696
	ld.d	$s3, $sp, 472
	ori	$a1, $zero, 3
	st.d	$a0, $sp, 480
	bne	$a0, $a1, .LBB92_282
# %bb.281:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit513
	pcalau12i	$a0, %pc_hi20(.L.str.208)
	addi.d	$a1, $a0, %pc_lo12(.L.str.208)
	ori	$a2, $zero, 3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB92_291
.LBB92_282:
	move	$s6, $zero
	beq	$s3, $s5, .LBB92_284
.LBB92_283:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i525
	ld.d	$a0, $sp, 488
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_284:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit527
	beqz	$s6, .LBB92_310
# %bb.285:
	pcalau12i	$a0, %pc_hi20(.L.str.21)
	addi.d	$a0, $a0, %pc_lo12(.L.str.21)
	ld.w	$a1, $a0, 3
	ld.w	$a0, $a0, 0
	addi.d	$a2, $sp, 616
	st.d	$a2, $sp, 600
	st.w	$a1, $sp, 619
	st.w	$a0, $sp, 616
	ori	$a0, $zero, 7
	st.b	$zero, $sp, 623
	ld.d	$a1, $sp, 616
	st.d	$a0, $sp, 608
	addi.d	$s5, $sp, 200
	st.d	$s5, $sp, 184
	st.d	$a1, $sp, 200
	st.d	$a0, $sp, 192
	addi.d	$s6, $sp, 168
	ld.d	$a1, $sp, 640
	ld.d	$s3, $sp, 632
	st.d	$s6, $sp, 152
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s6
	bltu	$a1, $a2, .LBB92_288
# %bb.286:                              # %.noexc.i537
.Ltmp2479:
	addi.d	$a0, $sp, 152
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2480:
# %bb.287:                              # %.noexc538
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 152
	st.d	$a1, $sp, 168
.LBB92_288:                             # %._crit_edge.i.i536
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_295
# %bb.289:                              # %._crit_edge.i.i536
	bnez	$a1, .LBB92_294
# %bb.290:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_295
.LBB92_291:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit513.thread
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	ld.d	$a4, $sp, 16                    # 8-byte Folded Reload
	blt	$a3, $a4, .LBB92_399
# %bb.292:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB92_432
# %bb.293:
	addi.d	$a0, $a2, 128
	b	.LBB92_434
.LBB92_294:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_295:
	ld.d	$a0, $sp, 696
	ld.d	$a5, $s0, 40
	st.d	$a0, $sp, 160
.Ltmp2482:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 184
	addi.d	$a4, $sp, 152
	move	$a2, $s1
	move	$a3, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp2483:
# %bb.296:
	ld.d	$a0, $sp, 152
	beq	$a0, $s6, .LBB92_298
# %bb.297:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i540
	ld.d	$a1, $sp, 168
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_298:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit542
	ld.d	$a0, $sp, 184
	beq	$a0, $s5, .LBB92_300
# %bb.299:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i543
	ld.d	$a1, $sp, 200
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_300:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit545
.Ltmp2485:
	ori	$a2, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp2486:
# %bb.301:                              # %.noexc551
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a4, $a3, 7
	bltz	$a3, .LBB92_304
# %bb.302:
	ori	$a3, $zero, 4
	bgeu	$a4, $a3, .LBB92_305
# %bb.303:
	ld.d	$a3, $s0, 192
	b	.LBB92_307
.LBB92_304:
	srai.d	$a2, $a3, 9
	b	.LBB92_306
.LBB92_305:
	srli.d	$a2, $a4, 2
.LBB92_306:
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a2, $a0, 3
	addi.d	$a3, $a1, 512
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a4, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a1, $a2
.LBB92_307:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i546
	st.d	$a2, $sp, 696
	st.d	$a1, $sp, 704
	st.d	$a3, $sp, 712
	st.d	$a0, $sp, 720
.Ltmp2487:
	addi.d	$a0, $sp, 664
	addi.d	$a2, $sp, 696
	addi.d	$a3, $sp, 472
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2488:
# %bb.308:
	addi.d	$a0, $sp, 472
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB92_310
# %bb.309:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i554
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_310:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB92_313
# %bb.311:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB92_315
# %bb.312:
	srli.d	$a2, $a1, 2
	b	.LBB92_314
.LBB92_313:
	srai.d	$a2, $a3, 9
.LBB92_314:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB92_315:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit573
	addi.d	$s5, $sp, 488
	st.d	$s5, $sp, 472
	ld.d	$a1, $a2, 8
	ld.d	$s3, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s5
	bltu	$a1, $a2, .LBB92_318
# %bb.316:                              # %.noexc.i.i575
.Ltmp2490:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2491:
# %bb.317:                              # %.noexc576
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 472
	st.d	$a1, $sp, 488
.LBB92_318:                             # %._crit_edge.i.i.i574
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_322
# %bb.319:                              # %._crit_edge.i.i.i574
	bnez	$a1, .LBB92_321
# %bb.320:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_322
.LBB92_321:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_322:
	ld.d	$a0, $sp, 696
	ld.d	$s3, $sp, 472
	ori	$a1, $zero, 3
	st.d	$a0, $sp, 480
	bne	$a0, $a1, .LBB92_324
# %bb.323:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit579
	pcalau12i	$a0, %pc_hi20(.L.str.208)
	addi.d	$a1, $a0, %pc_lo12(.L.str.208)
	ori	$a2, $zero, 3
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB92_333
.LBB92_324:
	move	$s6, $zero
	beq	$s3, $s5, .LBB92_326
.LBB92_325:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i591
	ld.d	$a0, $sp, 488
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_326:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit593
	beqz	$s6, .LBB92_352
# %bb.327:
	pcalau12i	$a0, %pc_hi20(.L.str.15)
	addi.d	$a0, $a0, %pc_lo12(.L.str.15)
	ld.wu	$a1, $a0, 0
	ld.b	$a0, $a0, 4
	addi.d	$a2, $sp, 616
	st.d	$a2, $sp, 600
	st.w	$a1, $sp, 616
	st.b	$a0, $sp, 620
	ori	$a0, $zero, 5
	st.d	$a0, $sp, 608
	st.b	$zero, $sp, 621
	ld.h	$a2, $sp, 620
	addi.d	$s5, $sp, 136
	st.d	$s5, $sp, 120
	st.w	$a1, $sp, 136
	st.h	$a2, $sp, 140
	st.d	$a0, $sp, 128
	addi.d	$s6, $sp, 104
	ld.d	$a1, $sp, 640
	ld.d	$s3, $sp, 632
	st.d	$s6, $sp, 88
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s6
	bltu	$a1, $a2, .LBB92_330
# %bb.328:                              # %.noexc.i603
.Ltmp2496:
	addi.d	$a0, $sp, 88
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2497:
# %bb.329:                              # %.noexc604
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 88
	st.d	$a1, $sp, 104
.LBB92_330:                             # %._crit_edge.i.i602
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_337
# %bb.331:                              # %._crit_edge.i.i602
	bnez	$a1, .LBB92_336
# %bb.332:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_337
.LBB92_333:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit579.thread
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	ld.d	$a4, $sp, 16                    # 8-byte Folded Reload
	blt	$a3, $a4, .LBB92_400
# %bb.334:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB92_447
# %bb.335:
	addi.d	$a0, $a2, 128
	b	.LBB92_449
.LBB92_336:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_337:
	ld.d	$a0, $sp, 696
	ld.d	$a5, $s0, 40
	st.d	$a0, $sp, 96
.Ltmp2499:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 120
	addi.d	$a4, $sp, 88
	move	$a2, $s1
	move	$a3, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp2500:
# %bb.338:
	ld.d	$a0, $sp, 88
	beq	$a0, $s6, .LBB92_340
# %bb.339:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i606
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_340:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit608
	ld.d	$a0, $sp, 120
	beq	$a0, $s5, .LBB92_342
# %bb.341:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i609
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_342:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit611
.Ltmp2502:
	ori	$a2, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp2503:
# %bb.343:                              # %.noexc617
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a4, $a3, 7
	bltz	$a3, .LBB92_346
# %bb.344:
	ori	$a3, $zero, 4
	bgeu	$a4, $a3, .LBB92_347
# %bb.345:
	ld.d	$a3, $s0, 192
	b	.LBB92_349
.LBB92_346:
	srai.d	$a2, $a3, 9
	b	.LBB92_348
.LBB92_347:
	srli.d	$a2, $a4, 2
.LBB92_348:
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a2, $a0, 3
	addi.d	$a3, $a1, 512
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a4, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a1, $a2
.LBB92_349:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i612
	st.d	$a2, $sp, 696
	st.d	$a1, $sp, 704
	st.d	$a3, $sp, 712
	st.d	$a0, $sp, 720
.Ltmp2504:
	addi.d	$a0, $sp, 664
	addi.d	$a2, $sp, 696
	addi.d	$a3, $sp, 472
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2505:
# %bb.350:
	addi.d	$a0, $sp, 472
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB92_352
# %bb.351:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i620
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_352:
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB92_355
# %bb.353:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB92_357
# %bb.354:
	srli.d	$a2, $a1, 2
	b	.LBB92_356
.LBB92_355:
	srai.d	$a2, $a3, 9
.LBB92_356:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB92_357:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit639
	addi.d	$s5, $sp, 488
	st.d	$s5, $sp, 472
	ld.d	$a1, $a2, 8
	ld.d	$s3, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s5
	bltu	$a1, $a2, .LBB92_360
# %bb.358:                              # %.noexc.i.i641
.Ltmp2507:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2508:
# %bb.359:                              # %.noexc642
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 472
	st.d	$a1, $sp, 488
.LBB92_360:                             # %._crit_edge.i.i.i640
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_364
# %bb.361:                              # %._crit_edge.i.i.i640
	bnez	$a1, .LBB92_363
# %bb.362:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_364
.LBB92_363:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_364:
	ld.d	$a1, $sp, 696
	ld.d	$a0, $sp, 472
	ori	$a2, $zero, 4
	st.d	$a1, $sp, 480
	bne	$a1, $a2, .LBB92_366
# %bb.365:                              # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit645
	ld.w	$a1, $a0, 0
	lu12i.w	$a2, 415542
	ori	$a2, $a2, 3173
	beq	$a1, $a2, .LBB92_375
.LBB92_366:
	move	$s3, $zero
	beq	$a0, $s5, .LBB92_368
.LBB92_367:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i657
	ld.d	$a1, $sp, 488
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_368:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit659
	beqz	$s3, .LBB92_394
# %bb.369:
	pcalau12i	$a0, %pc_hi20(.L.str.14)
	addi.d	$a0, $a0, %pc_lo12(.L.str.14)
	ld.h	$a1, $a0, 4
	ld.wu	$a0, $a0, 0
	addi.d	$a2, $sp, 616
	st.d	$a2, $sp, 600
	st.h	$a1, $sp, 620
	st.w	$a0, $sp, 616
	ori	$a1, $zero, 6
	st.d	$a1, $sp, 608
	st.b	$zero, $sp, 622
	ld.w	$a2, $sp, 619
	addi.d	$s5, $sp, 72
	st.d	$s5, $sp, 56
	st.w	$a0, $sp, 72
	st.w	$a2, $sp, 75
	st.d	$a1, $sp, 64
	addi.d	$s6, $sp, 40
	ld.d	$a1, $sp, 640
	ld.d	$s3, $sp, 632
	st.d	$s6, $sp, 24
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 696
	move	$a0, $s6
	bltu	$a1, $a2, .LBB92_372
# %bb.370:                              # %.noexc.i669
.Ltmp2513:
	addi.d	$a0, $sp, 24
	addi.d	$a1, $sp, 696
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2514:
# %bb.371:                              # %.noexc670
	ld.d	$a1, $sp, 696
	st.d	$a0, $sp, 24
	st.d	$a1, $sp, 40
.LBB92_372:                             # %._crit_edge.i.i668
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_379
# %bb.373:                              # %._crit_edge.i.i668
	bnez	$a1, .LBB92_378
# %bb.374:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_379
.LBB92_375:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit645.thread
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a3, $a1, 7
	addi.d	$a1, $a3, 1
	ld.d	$a4, $sp, 16                    # 8-byte Folded Reload
	blt	$a3, $a4, .LBB92_401
# %bb.376:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB92_462
# %bb.377:
	addi.d	$a0, $a2, 128
	b	.LBB92_464
.LBB92_378:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_379:
	ld.d	$a0, $sp, 696
	ld.d	$a5, $s0, 40
	st.d	$a0, $sp, 32
.Ltmp2516:
	addi.d	$a0, $sp, 472
	addi.d	$a1, $sp, 56
	addi.d	$a4, $sp, 24
	move	$a2, $s1
	move	$a3, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS6_PSt5dequeIS6_SaIS6_EE)
	jirl	$ra, $ra, 0
.Ltmp2517:
# %bb.380:
	ld.d	$a0, $sp, 24
	beq	$a0, $s6, .LBB92_382
# %bb.381:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i672
	ld.d	$a1, $sp, 40
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_382:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit674
	ld.d	$a0, $sp, 56
	beq	$a0, $s5, .LBB92_384
# %bb.383:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i675
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_384:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit677
.Ltmp2519:
	ori	$a2, $zero, 1
	move	$a0, $s0
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd12delete_wordsEii)
	jirl	$ra, $ra, 0
.Ltmp2520:
# %bb.385:                              # %.noexc683
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a4, $a3, 7
	bltz	$a3, .LBB92_388
# %bb.386:
	ori	$a3, $zero, 4
	bgeu	$a4, $a3, .LBB92_389
# %bb.387:
	ld.d	$a3, $s0, 192
	b	.LBB92_391
.LBB92_388:
	srai.d	$a2, $a3, 9
	b	.LBB92_390
.LBB92_389:
	srli.d	$a2, $a4, 2
.LBB92_390:
	slli.d	$a1, $a2, 3
	ldx.d	$a1, $a0, $a1
	alsl.d	$a0, $a2, $a0, 3
	addi.d	$a3, $a1, 512
	slli.d	$a2, $a2, 2
	sub.d	$a2, $a4, $a2
	slli.d	$a2, $a2, 7
	add.d	$a2, $a1, $a2
.LBB92_391:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit.i678
	st.d	$a2, $sp, 696
	st.d	$a1, $sp, 704
	st.d	$a3, $sp, 712
	st.d	$a0, $sp, 720
.Ltmp2521:
	addi.d	$a0, $sp, 664
	addi.d	$a2, $sp, 696
	addi.d	$a3, $sp, 472
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_)
	jirl	$ra, $ra, 0
.Ltmp2522:
# %bb.392:
	addi.d	$a0, $sp, 472
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB92_394
# %bb.393:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i686
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_394:
	ld.d	$a0, $sp, 632
	beq	$a0, $s4, .LBB92_396
# %bb.395:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i704
	ld.d	$a1, $sp, 648
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_396:
	ld.d	$s8, $sp, 728                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 736                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 744                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 752                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 760                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 768                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 776                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 784                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 792                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 800                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 808                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 816
	ret
.LBB92_397:
	srai.d	$a2, $a1, 2
	b	.LBB92_403
.LBB92_398:
	srai.d	$a2, $a1, 2
	b	.LBB92_418
.LBB92_399:
	srai.d	$a2, $a1, 2
	b	.LBB92_433
.LBB92_400:
	srai.d	$a2, $a1, 2
	b	.LBB92_448
.LBB92_401:
	srai.d	$a2, $a1, 2
	b	.LBB92_463
.LBB92_402:
	srli.d	$a2, $a1, 2
.LBB92_403:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB92_404:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit383
	addi.d	$fp, $sp, 712
	st.d	$fp, $sp, 696
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 664
	move	$a0, $fp
	bltu	$a1, $a2, .LBB92_407
# %bb.405:                              # %.noexc.i.i385
.Ltmp2442:
	addi.d	$a0, $sp, 696
	addi.d	$a1, $sp, 664
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2443:
# %bb.406:                              # %.noexc386
	ld.d	$a1, $sp, 664
	st.d	$a0, $sp, 696
	st.d	$a1, $sp, 712
.LBB92_407:                             # %._crit_edge.i.i.i384
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_411
# %bb.408:                              # %._crit_edge.i.i.i384
	bnez	$a1, .LBB92_410
# %bb.409:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_411
.LBB92_410:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_411:
	ld.d	$a1, $sp, 664
	ld.d	$a0, $sp, 696
	ori	$a2, $zero, 2
	st.d	$a1, $sp, 704
	bne	$a1, $a2, .LBB92_413
# %bb.412:
	ld.hu	$a1, $a0, 0
	lu12i.w	$a2, 6
	ori	$a2, $a2, 3940
	xor	$a1, $a1, $a2
	sltui	$s6, $a1, 1
	b	.LBB92_414
.LBB92_413:
	move	$s6, $zero
.LBB92_414:
	beq	$a0, $fp, .LBB92_416
# %bb.415:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i390
	ld.d	$a1, $sp, 712
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_416:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit392
	ld.d	$s3, $sp, 472
	bne	$s3, $s5, .LBB92_199
	b	.LBB92_200
.LBB92_417:
	srli.d	$a2, $a1, 2
.LBB92_418:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB92_419:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit449
	addi.d	$fp, $sp, 712
	st.d	$fp, $sp, 696
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 664
	move	$a0, $fp
	bltu	$a1, $a2, .LBB92_422
# %bb.420:                              # %.noexc.i.i451
.Ltmp2459:
	addi.d	$a0, $sp, 696
	addi.d	$a1, $sp, 664
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2460:
# %bb.421:                              # %.noexc452
	ld.d	$a1, $sp, 664
	st.d	$a0, $sp, 696
	st.d	$a1, $sp, 712
.LBB92_422:                             # %._crit_edge.i.i.i450
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_426
# %bb.423:                              # %._crit_edge.i.i.i450
	bnez	$a1, .LBB92_425
# %bb.424:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_426
.LBB92_425:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_426:
	ld.d	$a0, $sp, 664
	ld.d	$s3, $sp, 696
	ori	$a1, $zero, 10
	st.d	$a0, $sp, 704
	bne	$a0, $a1, .LBB92_428
# %bb.427:
	pcalau12i	$a0, %pc_hi20(.L.str.161)
	addi.d	$a1, $a0, %pc_lo12(.L.str.161)
	ori	$a2, $zero, 10
	move	$a0, $s3
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s6, $a0, 1
	b	.LBB92_429
.LBB92_428:
	move	$s6, $zero
.LBB92_429:
	beq	$s3, $fp, .LBB92_431
# %bb.430:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i456
	ld.d	$a0, $sp, 712
	addi.d	$a1, $a0, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_431:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit458
	ld.d	$s3, $sp, 472
	bne	$s3, $s5, .LBB92_241
	b	.LBB92_242
.LBB92_432:
	srli.d	$a2, $a1, 2
.LBB92_433:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB92_434:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit515
	addi.d	$fp, $sp, 712
	st.d	$fp, $sp, 696
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 664
	move	$a0, $fp
	bltu	$a1, $a2, .LBB92_437
# %bb.435:                              # %.noexc.i.i517
.Ltmp2476:
	addi.d	$a0, $sp, 696
	addi.d	$a1, $sp, 664
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2477:
# %bb.436:                              # %.noexc518
	ld.d	$a1, $sp, 664
	st.d	$a0, $sp, 696
	st.d	$a1, $sp, 712
.LBB92_437:                             # %._crit_edge.i.i.i516
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_441
# %bb.438:                              # %._crit_edge.i.i.i516
	bnez	$a1, .LBB92_440
# %bb.439:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_441
.LBB92_440:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_441:
	ld.d	$a1, $sp, 664
	ld.d	$a0, $sp, 696
	ori	$a2, $zero, 4
	st.d	$a1, $sp, 704
	bne	$a1, $a2, .LBB92_443
# %bb.442:
	ld.w	$a1, $a0, 0
	lu12i.w	$a2, 452182
	ori	$a2, $a2, 2167
	xor	$a1, $a1, $a2
	sltui	$s6, $a1, 1
	b	.LBB92_444
.LBB92_443:
	move	$s6, $zero
.LBB92_444:
	beq	$a0, $fp, .LBB92_446
# %bb.445:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i522
	ld.d	$a1, $sp, 712
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_446:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit524
	ld.d	$s3, $sp, 472
	bne	$s3, $s5, .LBB92_283
	b	.LBB92_284
.LBB92_447:
	srli.d	$a2, $a1, 2
.LBB92_448:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB92_449:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit581
	addi.d	$fp, $sp, 712
	st.d	$fp, $sp, 696
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 664
	move	$a0, $fp
	bltu	$a1, $a2, .LBB92_452
# %bb.450:                              # %.noexc.i.i583
.Ltmp2493:
	addi.d	$a0, $sp, 696
	addi.d	$a1, $sp, 664
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2494:
# %bb.451:                              # %.noexc584
	ld.d	$a1, $sp, 664
	st.d	$a0, $sp, 696
	st.d	$a1, $sp, 712
.LBB92_452:                             # %._crit_edge.i.i.i582
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_456
# %bb.453:                              # %._crit_edge.i.i.i582
	bnez	$a1, .LBB92_455
# %bb.454:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_456
.LBB92_455:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_456:
	ld.d	$a1, $sp, 664
	ld.d	$a0, $sp, 696
	ori	$a2, $zero, 2
	st.d	$a1, $sp, 704
	bne	$a1, $a2, .LBB92_458
# %bb.457:
	ld.hu	$a1, $a0, 0
	lu12i.w	$a2, 6
	ori	$a2, $a2, 1641
	xor	$a1, $a1, $a2
	sltui	$s6, $a1, 1
	b	.LBB92_459
.LBB92_458:
	move	$s6, $zero
.LBB92_459:
	beq	$a0, $fp, .LBB92_461
# %bb.460:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i588
	ld.d	$a1, $sp, 712
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_461:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit590
	ld.d	$s3, $sp, 472
	bne	$s3, $s5, .LBB92_325
	b	.LBB92_326
.LBB92_462:
	srli.d	$a2, $a1, 2
.LBB92_463:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB92_464:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit647
	addi.d	$fp, $sp, 712
	st.d	$fp, $sp, 696
	ld.d	$a1, $a0, 8
	ld.d	$s3, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 664
	move	$a0, $fp
	bltu	$a1, $a2, .LBB92_467
# %bb.465:                              # %.noexc.i.i649
.Ltmp2510:
	addi.d	$a0, $sp, 696
	addi.d	$a1, $sp, 664
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2511:
# %bb.466:                              # %.noexc650
	ld.d	$a1, $sp, 664
	st.d	$a0, $sp, 696
	st.d	$a1, $sp, 712
.LBB92_467:                             # %._crit_edge.i.i.i648
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	beq	$a1, $a2, .LBB92_471
# %bb.468:                              # %._crit_edge.i.i.i648
	bnez	$a1, .LBB92_470
# %bb.469:
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB92_471
.LBB92_470:
	addi.d	$a2, $a1, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB92_471:
	ld.d	$a1, $sp, 664
	ld.d	$a0, $sp, 696
	ori	$a2, $zero, 2
	st.d	$a1, $sp, 704
	bne	$a1, $a2, .LBB92_473
# %bb.472:
	ld.hu	$a1, $a0, 0
	lu12i.w	$a2, 6
	ori	$a2, $a2, 1641
	xor	$a1, $a1, $a2
	sltui	$s3, $a1, 1
	b	.LBB92_474
.LBB92_473:
	move	$s3, $zero
.LBB92_474:
	beq	$a0, $fp, .LBB92_476
# %bb.475:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i654
	ld.d	$a1, $sp, 712
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_476:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit656
	ld.d	$a0, $sp, 472
	bne	$a0, $s5, .LBB92_367
	b	.LBB92_368
.LBB92_477:
.Ltmp2512:
	b	.LBB92_482
.LBB92_478:
.Ltmp2495:
	b	.LBB92_482
.LBB92_479:
.Ltmp2478:
	b	.LBB92_482
.LBB92_480:
.Ltmp2461:
	b	.LBB92_482
.LBB92_481:
.Ltmp2444:
.LBB92_482:
	ld.d	$a2, $sp, 472
	move	$fp, $a0
	beq	$a2, $s5, .LBB92_524
# %bb.483:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i428
	ld.d	$a0, $sp, 488
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB92_523
.LBB92_484:
.Ltmp2515:
	move	$fp, $a0
	b	.LBB92_491
.LBB92_485:
.Ltmp2498:
	move	$fp, $a0
	b	.LBB92_496
.LBB92_486:
.Ltmp2481:
	move	$fp, $a0
	b	.LBB92_501
.LBB92_487:
.Ltmp2464:
	move	$fp, $a0
	b	.LBB92_506
.LBB92_488:
.Ltmp2447:
	move	$fp, $a0
	b	.LBB92_511
.LBB92_489:
.Ltmp2518:
	ld.d	$a2, $sp, 24
	move	$fp, $a0
	beq	$a2, $s6, .LBB92_491
# %bb.490:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i695
	ld.d	$a0, $sp, 40
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_491:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit697
	ld.d	$a0, $sp, 56
	beq	$a0, $s5, .LBB92_521
# %bb.492:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i698
	ld.d	$a1, $sp, 72
	b	.LBB92_513
.LBB92_493:
.Ltmp2509:
	move	$fp, $a0
	b	.LBB92_524
.LBB92_494:
.Ltmp2501:
	ld.d	$a2, $sp, 88
	move	$fp, $a0
	beq	$a2, $s6, .LBB92_496
# %bb.495:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i629
	ld.d	$a0, $sp, 104
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_496:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit631
	ld.d	$a0, $sp, 120
	beq	$a0, $s5, .LBB92_521
# %bb.497:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i632
	ld.d	$a1, $sp, 136
	b	.LBB92_513
.LBB92_498:
.Ltmp2492:
	move	$fp, $a0
	b	.LBB92_524
.LBB92_499:
.Ltmp2484:
	ld.d	$a2, $sp, 152
	move	$fp, $a0
	beq	$a2, $s6, .LBB92_501
# %bb.500:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i563
	ld.d	$a0, $sp, 168
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_501:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit565
	ld.d	$a0, $sp, 184
	beq	$a0, $s5, .LBB92_521
# %bb.502:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i566
	ld.d	$a1, $sp, 200
	b	.LBB92_513
.LBB92_503:
.Ltmp2475:
	move	$fp, $a0
	b	.LBB92_524
.LBB92_504:
.Ltmp2467:
	ld.d	$a2, $sp, 216
	move	$fp, $a0
	beq	$a2, $s6, .LBB92_506
# %bb.505:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i497
	ld.d	$a0, $sp, 232
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_506:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit499
	ld.d	$a0, $sp, 248
	beq	$a0, $s5, .LBB92_521
# %bb.507:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i500
	ld.d	$a1, $sp, 264
	b	.LBB92_513
.LBB92_508:
.Ltmp2458:
	move	$fp, $a0
	b	.LBB92_524
.LBB92_509:
.Ltmp2450:
	ld.d	$a2, $sp, 280
	move	$fp, $a0
	beq	$a2, $s6, .LBB92_511
# %bb.510:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i431
	ld.d	$a0, $sp, 296
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_511:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit433
	ld.d	$a0, $sp, 312
	beq	$a0, $s5, .LBB92_521
# %bb.512:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i434
	ld.d	$a1, $sp, 328
.LBB92_513:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit700
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB92_521
.LBB92_514:
.Ltmp2441:
	move	$fp, $a0
	b	.LBB92_524
.LBB92_515:
.Ltmp2523:
	b	.LBB92_520
.LBB92_516:
.Ltmp2506:
	b	.LBB92_520
.LBB92_517:
.Ltmp2489:
	b	.LBB92_520
.LBB92_518:
.Ltmp2472:
	b	.LBB92_520
.LBB92_519:
.Ltmp2455:
.LBB92_520:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit700
	move	$fp, $a0
	addi.d	$a0, $sp, 472
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB92_521:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit700
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB92_524
# %bb.522:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i701
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
.LBB92_523:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_524:
	ld.d	$a0, $sp, 632
	bne	$a0, $s4, .LBB92_545
	b	.LBB92_547
.LBB92_525:
.Ltmp2526:
	ld.d	$a2, $sp, 472
	move	$fp, $a0
	bne	$a2, $s8, .LBB92_527
	b	.LBB92_547
.LBB92_526:
.Ltmp2540:
	ld.d	$a2, $sp, 472
	move	$fp, $a0
	beq	$a2, $s7, .LBB92_547
.LBB92_527:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i230
	ld.d	$a0, $sp, 488
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB92_546
.LBB92_528:
.Ltmp2529:
	move	$fp, $a0
	b	.LBB92_532
.LBB92_529:
.Ltmp2543:
	move	$fp, $a0
	b	.LBB92_536
.LBB92_530:
.Ltmp2532:
	ld.d	$a2, $sp, 344
	move	$fp, $a0
	addi.d	$a0, $sp, 360
	beq	$a2, $a0, .LBB92_532
# %bb.531:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i353
	ld.d	$a0, $sp, 360
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_532:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit355
	ld.d	$a0, $sp, 376
	addi.d	$a1, $sp, 392
	beq	$a0, $a1, .LBB92_542
# %bb.533:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i356
	ld.d	$a1, $sp, 392
	b	.LBB92_538
.LBB92_534:
.Ltmp2546:
	ld.d	$a2, $sp, 408
	move	$fp, $a0
	addi.d	$a0, $sp, 424
	beq	$a2, $a0, .LBB92_536
# %bb.535:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i265
	ld.d	$a0, $sp, 424
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_536:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit267
	ld.d	$a0, $sp, 440
	addi.d	$a1, $sp, 456
	beq	$a0, $a1, .LBB92_542
# %bb.537:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i268
	ld.d	$a1, $sp, 456
.LBB92_538:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit270
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB92_542
.LBB92_539:
.Ltmp2537:
	b	.LBB92_541
.LBB92_540:
.Ltmp2551:
.LBB92_541:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit270
	move	$fp, $a0
	addi.d	$a0, $sp, 472
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
.LBB92_542:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit270
	ld.d	$a0, $sp, 600
	addi.d	$a1, $sp, 616
	beq	$a0, $a1, .LBB92_544
# %bb.543:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i271
	ld.d	$a1, $sp, 616
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_544:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit273
	ld.d	$a0, $sp, 632
	addi.d	$a1, $sp, 648
	beq	$a0, $a1, .LBB92_547
.LBB92_545:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i707
	ld.d	$a1, $sp, 648
	addi.d	$a1, $a1, 1
.LBB92_546:
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB92_547:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end92:
	.size	_ZN2PP3Cmd16handle_two_wordsEv, .Lfunc_end92-_ZN2PP3Cmd16handle_two_wordsEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table92:
.Lexception52:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Lfunc_begin52-.Lfunc_begin52  # >> Call Site 1 <<
	.uleb128 .Ltmp2538-.Lfunc_begin52       #   Call between .Lfunc_begin52 and .Ltmp2538
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2538-.Lfunc_begin52       # >> Call Site 2 <<
	.uleb128 .Ltmp2539-.Ltmp2538            #   Call between .Ltmp2538 and .Ltmp2539
	.uleb128 .Ltmp2540-.Lfunc_begin52       #     jumps to .Ltmp2540
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2539-.Lfunc_begin52       # >> Call Site 3 <<
	.uleb128 .Ltmp2541-.Ltmp2539            #   Call between .Ltmp2539 and .Ltmp2541
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2541-.Lfunc_begin52       # >> Call Site 4 <<
	.uleb128 .Ltmp2542-.Ltmp2541            #   Call between .Ltmp2541 and .Ltmp2542
	.uleb128 .Ltmp2543-.Lfunc_begin52       #     jumps to .Ltmp2543
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2542-.Lfunc_begin52       # >> Call Site 5 <<
	.uleb128 .Ltmp2544-.Ltmp2542            #   Call between .Ltmp2542 and .Ltmp2544
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2544-.Lfunc_begin52       # >> Call Site 6 <<
	.uleb128 .Ltmp2545-.Ltmp2544            #   Call between .Ltmp2544 and .Ltmp2545
	.uleb128 .Ltmp2546-.Lfunc_begin52       #     jumps to .Ltmp2546
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2545-.Lfunc_begin52       # >> Call Site 7 <<
	.uleb128 .Ltmp2547-.Ltmp2545            #   Call between .Ltmp2545 and .Ltmp2547
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2547-.Lfunc_begin52       # >> Call Site 8 <<
	.uleb128 .Ltmp2550-.Ltmp2547            #   Call between .Ltmp2547 and .Ltmp2550
	.uleb128 .Ltmp2551-.Lfunc_begin52       #     jumps to .Ltmp2551
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2550-.Lfunc_begin52       # >> Call Site 9 <<
	.uleb128 .Ltmp2524-.Ltmp2550            #   Call between .Ltmp2550 and .Ltmp2524
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2524-.Lfunc_begin52       # >> Call Site 10 <<
	.uleb128 .Ltmp2525-.Ltmp2524            #   Call between .Ltmp2524 and .Ltmp2525
	.uleb128 .Ltmp2526-.Lfunc_begin52       #     jumps to .Ltmp2526
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2525-.Lfunc_begin52       # >> Call Site 11 <<
	.uleb128 .Ltmp2527-.Ltmp2525            #   Call between .Ltmp2525 and .Ltmp2527
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2527-.Lfunc_begin52       # >> Call Site 12 <<
	.uleb128 .Ltmp2528-.Ltmp2527            #   Call between .Ltmp2527 and .Ltmp2528
	.uleb128 .Ltmp2529-.Lfunc_begin52       #     jumps to .Ltmp2529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2528-.Lfunc_begin52       # >> Call Site 13 <<
	.uleb128 .Ltmp2530-.Ltmp2528            #   Call between .Ltmp2528 and .Ltmp2530
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2530-.Lfunc_begin52       # >> Call Site 14 <<
	.uleb128 .Ltmp2531-.Ltmp2530            #   Call between .Ltmp2530 and .Ltmp2531
	.uleb128 .Ltmp2532-.Lfunc_begin52       #     jumps to .Ltmp2532
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2531-.Lfunc_begin52       # >> Call Site 15 <<
	.uleb128 .Ltmp2533-.Ltmp2531            #   Call between .Ltmp2531 and .Ltmp2533
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2533-.Lfunc_begin52       # >> Call Site 16 <<
	.uleb128 .Ltmp2536-.Ltmp2533            #   Call between .Ltmp2533 and .Ltmp2536
	.uleb128 .Ltmp2537-.Lfunc_begin52       #     jumps to .Ltmp2537
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2536-.Lfunc_begin52       # >> Call Site 17 <<
	.uleb128 .Ltmp2439-.Ltmp2536            #   Call between .Ltmp2536 and .Ltmp2439
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2439-.Lfunc_begin52       # >> Call Site 18 <<
	.uleb128 .Ltmp2440-.Ltmp2439            #   Call between .Ltmp2439 and .Ltmp2440
	.uleb128 .Ltmp2441-.Lfunc_begin52       #     jumps to .Ltmp2441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2440-.Lfunc_begin52       # >> Call Site 19 <<
	.uleb128 .Ltmp2445-.Ltmp2440            #   Call between .Ltmp2440 and .Ltmp2445
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2445-.Lfunc_begin52       # >> Call Site 20 <<
	.uleb128 .Ltmp2446-.Ltmp2445            #   Call between .Ltmp2445 and .Ltmp2446
	.uleb128 .Ltmp2447-.Lfunc_begin52       #     jumps to .Ltmp2447
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2446-.Lfunc_begin52       # >> Call Site 21 <<
	.uleb128 .Ltmp2448-.Ltmp2446            #   Call between .Ltmp2446 and .Ltmp2448
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2448-.Lfunc_begin52       # >> Call Site 22 <<
	.uleb128 .Ltmp2449-.Ltmp2448            #   Call between .Ltmp2448 and .Ltmp2449
	.uleb128 .Ltmp2450-.Lfunc_begin52       #     jumps to .Ltmp2450
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2449-.Lfunc_begin52       # >> Call Site 23 <<
	.uleb128 .Ltmp2451-.Ltmp2449            #   Call between .Ltmp2449 and .Ltmp2451
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2451-.Lfunc_begin52       # >> Call Site 24 <<
	.uleb128 .Ltmp2454-.Ltmp2451            #   Call between .Ltmp2451 and .Ltmp2454
	.uleb128 .Ltmp2455-.Lfunc_begin52       #     jumps to .Ltmp2455
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2454-.Lfunc_begin52       # >> Call Site 25 <<
	.uleb128 .Ltmp2456-.Ltmp2454            #   Call between .Ltmp2454 and .Ltmp2456
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2456-.Lfunc_begin52       # >> Call Site 26 <<
	.uleb128 .Ltmp2457-.Ltmp2456            #   Call between .Ltmp2456 and .Ltmp2457
	.uleb128 .Ltmp2458-.Lfunc_begin52       #     jumps to .Ltmp2458
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2457-.Lfunc_begin52       # >> Call Site 27 <<
	.uleb128 .Ltmp2462-.Ltmp2457            #   Call between .Ltmp2457 and .Ltmp2462
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2462-.Lfunc_begin52       # >> Call Site 28 <<
	.uleb128 .Ltmp2463-.Ltmp2462            #   Call between .Ltmp2462 and .Ltmp2463
	.uleb128 .Ltmp2464-.Lfunc_begin52       #     jumps to .Ltmp2464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2463-.Lfunc_begin52       # >> Call Site 29 <<
	.uleb128 .Ltmp2465-.Ltmp2463            #   Call between .Ltmp2463 and .Ltmp2465
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2465-.Lfunc_begin52       # >> Call Site 30 <<
	.uleb128 .Ltmp2466-.Ltmp2465            #   Call between .Ltmp2465 and .Ltmp2466
	.uleb128 .Ltmp2467-.Lfunc_begin52       #     jumps to .Ltmp2467
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2466-.Lfunc_begin52       # >> Call Site 31 <<
	.uleb128 .Ltmp2468-.Ltmp2466            #   Call between .Ltmp2466 and .Ltmp2468
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2468-.Lfunc_begin52       # >> Call Site 32 <<
	.uleb128 .Ltmp2471-.Ltmp2468            #   Call between .Ltmp2468 and .Ltmp2471
	.uleb128 .Ltmp2472-.Lfunc_begin52       #     jumps to .Ltmp2472
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2471-.Lfunc_begin52       # >> Call Site 33 <<
	.uleb128 .Ltmp2473-.Ltmp2471            #   Call between .Ltmp2471 and .Ltmp2473
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2473-.Lfunc_begin52       # >> Call Site 34 <<
	.uleb128 .Ltmp2474-.Ltmp2473            #   Call between .Ltmp2473 and .Ltmp2474
	.uleb128 .Ltmp2475-.Lfunc_begin52       #     jumps to .Ltmp2475
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2474-.Lfunc_begin52       # >> Call Site 35 <<
	.uleb128 .Ltmp2479-.Ltmp2474            #   Call between .Ltmp2474 and .Ltmp2479
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2479-.Lfunc_begin52       # >> Call Site 36 <<
	.uleb128 .Ltmp2480-.Ltmp2479            #   Call between .Ltmp2479 and .Ltmp2480
	.uleb128 .Ltmp2481-.Lfunc_begin52       #     jumps to .Ltmp2481
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2480-.Lfunc_begin52       # >> Call Site 37 <<
	.uleb128 .Ltmp2482-.Ltmp2480            #   Call between .Ltmp2480 and .Ltmp2482
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2482-.Lfunc_begin52       # >> Call Site 38 <<
	.uleb128 .Ltmp2483-.Ltmp2482            #   Call between .Ltmp2482 and .Ltmp2483
	.uleb128 .Ltmp2484-.Lfunc_begin52       #     jumps to .Ltmp2484
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2483-.Lfunc_begin52       # >> Call Site 39 <<
	.uleb128 .Ltmp2485-.Ltmp2483            #   Call between .Ltmp2483 and .Ltmp2485
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2485-.Lfunc_begin52       # >> Call Site 40 <<
	.uleb128 .Ltmp2488-.Ltmp2485            #   Call between .Ltmp2485 and .Ltmp2488
	.uleb128 .Ltmp2489-.Lfunc_begin52       #     jumps to .Ltmp2489
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2488-.Lfunc_begin52       # >> Call Site 41 <<
	.uleb128 .Ltmp2490-.Ltmp2488            #   Call between .Ltmp2488 and .Ltmp2490
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2490-.Lfunc_begin52       # >> Call Site 42 <<
	.uleb128 .Ltmp2491-.Ltmp2490            #   Call between .Ltmp2490 and .Ltmp2491
	.uleb128 .Ltmp2492-.Lfunc_begin52       #     jumps to .Ltmp2492
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2491-.Lfunc_begin52       # >> Call Site 43 <<
	.uleb128 .Ltmp2496-.Ltmp2491            #   Call between .Ltmp2491 and .Ltmp2496
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2496-.Lfunc_begin52       # >> Call Site 44 <<
	.uleb128 .Ltmp2497-.Ltmp2496            #   Call between .Ltmp2496 and .Ltmp2497
	.uleb128 .Ltmp2498-.Lfunc_begin52       #     jumps to .Ltmp2498
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2497-.Lfunc_begin52       # >> Call Site 45 <<
	.uleb128 .Ltmp2499-.Ltmp2497            #   Call between .Ltmp2497 and .Ltmp2499
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2499-.Lfunc_begin52       # >> Call Site 46 <<
	.uleb128 .Ltmp2500-.Ltmp2499            #   Call between .Ltmp2499 and .Ltmp2500
	.uleb128 .Ltmp2501-.Lfunc_begin52       #     jumps to .Ltmp2501
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2500-.Lfunc_begin52       # >> Call Site 47 <<
	.uleb128 .Ltmp2502-.Ltmp2500            #   Call between .Ltmp2500 and .Ltmp2502
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2502-.Lfunc_begin52       # >> Call Site 48 <<
	.uleb128 .Ltmp2505-.Ltmp2502            #   Call between .Ltmp2502 and .Ltmp2505
	.uleb128 .Ltmp2506-.Lfunc_begin52       #     jumps to .Ltmp2506
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2505-.Lfunc_begin52       # >> Call Site 49 <<
	.uleb128 .Ltmp2507-.Ltmp2505            #   Call between .Ltmp2505 and .Ltmp2507
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2507-.Lfunc_begin52       # >> Call Site 50 <<
	.uleb128 .Ltmp2508-.Ltmp2507            #   Call between .Ltmp2507 and .Ltmp2508
	.uleb128 .Ltmp2509-.Lfunc_begin52       #     jumps to .Ltmp2509
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2508-.Lfunc_begin52       # >> Call Site 51 <<
	.uleb128 .Ltmp2513-.Ltmp2508            #   Call between .Ltmp2508 and .Ltmp2513
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2513-.Lfunc_begin52       # >> Call Site 52 <<
	.uleb128 .Ltmp2514-.Ltmp2513            #   Call between .Ltmp2513 and .Ltmp2514
	.uleb128 .Ltmp2515-.Lfunc_begin52       #     jumps to .Ltmp2515
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2514-.Lfunc_begin52       # >> Call Site 53 <<
	.uleb128 .Ltmp2516-.Ltmp2514            #   Call between .Ltmp2514 and .Ltmp2516
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2516-.Lfunc_begin52       # >> Call Site 54 <<
	.uleb128 .Ltmp2517-.Ltmp2516            #   Call between .Ltmp2516 and .Ltmp2517
	.uleb128 .Ltmp2518-.Lfunc_begin52       #     jumps to .Ltmp2518
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2517-.Lfunc_begin52       # >> Call Site 55 <<
	.uleb128 .Ltmp2519-.Ltmp2517            #   Call between .Ltmp2517 and .Ltmp2519
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2519-.Lfunc_begin52       # >> Call Site 56 <<
	.uleb128 .Ltmp2522-.Ltmp2519            #   Call between .Ltmp2519 and .Ltmp2522
	.uleb128 .Ltmp2523-.Lfunc_begin52       #     jumps to .Ltmp2523
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2522-.Lfunc_begin52       # >> Call Site 57 <<
	.uleb128 .Ltmp2442-.Ltmp2522            #   Call between .Ltmp2522 and .Ltmp2442
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2442-.Lfunc_begin52       # >> Call Site 58 <<
	.uleb128 .Ltmp2443-.Ltmp2442            #   Call between .Ltmp2442 and .Ltmp2443
	.uleb128 .Ltmp2444-.Lfunc_begin52       #     jumps to .Ltmp2444
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2443-.Lfunc_begin52       # >> Call Site 59 <<
	.uleb128 .Ltmp2459-.Ltmp2443            #   Call between .Ltmp2443 and .Ltmp2459
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2459-.Lfunc_begin52       # >> Call Site 60 <<
	.uleb128 .Ltmp2460-.Ltmp2459            #   Call between .Ltmp2459 and .Ltmp2460
	.uleb128 .Ltmp2461-.Lfunc_begin52       #     jumps to .Ltmp2461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2460-.Lfunc_begin52       # >> Call Site 61 <<
	.uleb128 .Ltmp2476-.Ltmp2460            #   Call between .Ltmp2460 and .Ltmp2476
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2476-.Lfunc_begin52       # >> Call Site 62 <<
	.uleb128 .Ltmp2477-.Ltmp2476            #   Call between .Ltmp2476 and .Ltmp2477
	.uleb128 .Ltmp2478-.Lfunc_begin52       #     jumps to .Ltmp2478
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2477-.Lfunc_begin52       # >> Call Site 63 <<
	.uleb128 .Ltmp2493-.Ltmp2477            #   Call between .Ltmp2477 and .Ltmp2493
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2493-.Lfunc_begin52       # >> Call Site 64 <<
	.uleb128 .Ltmp2494-.Ltmp2493            #   Call between .Ltmp2493 and .Ltmp2494
	.uleb128 .Ltmp2495-.Lfunc_begin52       #     jumps to .Ltmp2495
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2494-.Lfunc_begin52       # >> Call Site 65 <<
	.uleb128 .Ltmp2510-.Ltmp2494            #   Call between .Ltmp2494 and .Ltmp2510
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2510-.Lfunc_begin52       # >> Call Site 66 <<
	.uleb128 .Ltmp2511-.Ltmp2510            #   Call between .Ltmp2510 and .Ltmp2511
	.uleb128 .Ltmp2512-.Lfunc_begin52       #     jumps to .Ltmp2512
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2511-.Lfunc_begin52       # >> Call Site 67 <<
	.uleb128 .Lfunc_end92-.Ltmp2511         #   Call between .Ltmp2511 and .Lfunc_end92
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end52:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd15check_input_endEbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd15check_input_endEbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd15check_input_endEbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd15check_input_endEbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd15check_input_endEbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception53
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	st.d	$s2, $sp, 120                   # 8-byte Folded Spill
	st.d	$s3, $sp, 112                   # 8-byte Folded Spill
	st.d	$s4, $sp, 104                   # 8-byte Folded Spill
	st.d	$s5, $sp, 96                    # 8-byte Folded Spill
	st.d	$s6, $sp, 88                    # 8-byte Folded Spill
	st.d	$s7, $sp, 80                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	move	$s1, $a0
	ld.d	$a4, $a0, 176
	ld.d	$a1, $a0, 184
	ld.d	$a0, $a0, 200
	move	$fp, $a3
	move	$s0, $a2
	sub.d	$a2, $a4, $a1
	srai.d	$a1, $a2, 7
	bltz	$a2, .LBB93_3
# %bb.1:
	ori	$a2, $zero, 4
	bltu	$a1, $a2, .LBB93_5
# %bb.2:
	srli.d	$a2, $a1, 2
	b	.LBB93_4
.LBB93_3:
	srai.d	$a2, $a2, 9
.LBB93_4:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a4, $a0, $a1
.LBB93_5:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
	addi.d	$s3, $sp, 56
	st.d	$s3, $sp, 40
	ld.d	$a1, $a4, 8
	ld.d	$s2, $a4, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s3
	bltu	$a1, $a2, .LBB93_7
# %bb.6:                                # %.noexc.i.i
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB93_7:                               # %._crit_edge.i.i.i
	addi.w	$s6, $zero, -1
	beq	$a1, $s6, .LBB93_11
# %bb.8:                                # %._crit_edge.i.i.i
	bnez	$a1, .LBB93_10
# %bb.9:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB93_11
.LBB93_10:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB93_11:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
	ld.d	$a0, $sp, 8
	ld.d	$s2, $sp, 40
	ori	$a1, $zero, 11
	st.d	$a0, $sp, 48
	bne	$a0, $a1, .LBB93_13
# %bb.12:
	pcalau12i	$a0, %pc_hi20(.L.str.209)
	addi.d	$a1, $a0, %pc_lo12(.L.str.209)
	ori	$a2, $zero, 11
	move	$a0, $s2
	pcaddu18i	$ra, %call36(bcmp)
	jirl	$ra, $ra, 0
	sltui	$s4, $a0, 1
	bne	$s2, $s3, .LBB93_14
	b	.LBB93_15
.LBB93_13:
	move	$s4, $zero
	beq	$s2, $s3, .LBB93_15
.LBB93_14:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a0, $sp, 56
	addi.d	$a1, $a0, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB93_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	beqz	$s4, .LBB93_19
# %bb.16:
	ld.d	$a0, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a2, $s1, 200
	sub.d	$a3, $a0, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB93_22
# %bb.17:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB93_35
# %bb.18:
	ld.w	$s7, $a0, 80
	ld.w	$s3, $a0, 84
	b	.LBB93_37
.LBB93_19:
	ld.d	$a2, $s1, 176
	ld.d	$a1, $s1, 184
	ld.d	$a0, $s1, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a1, $a3, 7
	bltz	$a3, .LBB93_23
# %bb.20:
	ori	$a3, $zero, 4
	bltu	$a1, $a3, .LBB93_25
# %bb.21:
	srli.d	$a2, $a1, 2
	b	.LBB93_24
.LBB93_22:
	srai.d	$a3, $a3, 9
	slli.d	$a0, $a3, 3
	ldx.d	$a0, $a2, $a0
	slli.d	$a2, $a3, 2
	sub.d	$a1, $a1, $a2
	b	.LBB93_36
.LBB93_23:
	srai.d	$a2, $a3, 9
.LBB93_24:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a2, $a0, $a1
.LBB93_25:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit71
	addi.d	$s0, $sp, 56
	st.d	$s0, $sp, 40
	ld.d	$a1, $a2, 8
	ld.d	$fp, $a2, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s0
	bltu	$a1, $a2, .LBB93_27
# %bb.26:                               # %.noexc.i.i73
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB93_27:                              # %._crit_edge.i.i.i72
	beq	$a1, $s6, .LBB93_31
# %bb.28:                               # %._crit_edge.i.i.i72
	bnez	$a1, .LBB93_30
# %bb.29:
	ld.b	$a1, $fp, 0
	st.b	$a1, $a0, 0
	b	.LBB93_31
.LBB93_30:
	addi.d	$a2, $a1, 1
	move	$a1, $fp
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB93_31:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit74
	ld.d	$a1, $sp, 8
	ld.d	$a0, $sp, 40
	ori	$a2, $zero, 4
	st.d	$a1, $sp, 48
	bne	$a1, $a2, .LBB93_33
# %bb.32:
	ld.w	$a1, $a0, 0
	lu12i.w	$a2, 460535
	ori	$a2, $a2, 1139
	xor	$a1, $a1, $a2
	sltui	$fp, $a1, 1
	bne	$a0, $s0, .LBB93_34
	b	.LBB93_131
.LBB93_33:
	move	$fp, $zero
	beq	$a0, $s0, .LBB93_131
.LBB93_34:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i77
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB93_131
.LBB93_35:
	slli.d	$a0, $a1, 1
	bstrins.d	$a0, $zero, 2, 0
	ldx.d	$a0, $a2, $a0
	andi	$a1, $a1, 3
.LBB93_36:
	slli.d	$a2, $a1, 7
	add.d	$a2, $a0, $a2
	ld.w	$s7, $a2, 80
	ld.w	$s3, $a2, 84
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB93_37:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit34
	addi.d	$s5, $sp, 56
	ld.d	$a1, $a0, 96
	ld.d	$s2, $a0, 88
	st.d	$s5, $sp, 40
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 8
	move	$a0, $s5
	bltu	$a1, $a2, .LBB93_39
# %bb.38:                               # %.noexc.i.i36
	addi.d	$a0, $sp, 40
	addi.d	$a1, $sp, 8
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 8
	st.d	$a0, $sp, 40
	st.d	$a1, $sp, 56
.LBB93_39:                              # %._crit_edge.i.i.i35
	beq	$a1, $s6, .LBB93_43
# %bb.40:                               # %._crit_edge.i.i.i35
	bnez	$a1, .LBB93_42
# %bb.41:
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB93_43
.LBB93_42:
	addi.d	$a2, $a1, 1
	move	$a1, $s2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB93_43:                              # %_ZN2PP4Word12get_filenameB5cxx11Ev.exit
	ld.d	$a0, $sp, 8
	ld.d	$a1, $s0, 16
	st.d	$a0, $sp, 48
	ld.d	$a0, $a1, -24
	addi.d	$s2, $s0, 16
	add.d	$a0, $s2, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB93_132
# %bb.44:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB93_46
# %bb.45:
	ld.bu	$a0, $s4, 67
	b	.LBB93_48
.LBB93_46:
.Ltmp2552:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2553:
# %bb.47:                               # %.noexc84
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp2554:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp2555:
.LBB93_48:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp2556:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2557:
# %bb.49:                               # %.noexc86
.Ltmp2558:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2559:
# %bb.50:                               # %_ZNSolsEPFRSoS_E.exit
.Ltmp2560:
	pcalau12i	$a0, %pc_hi20(.L.str.210)
	addi.d	$a1, $a0, %pc_lo12(.L.str.210)
	ori	$a2, $zero, 50
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2561:
# %bb.51:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
.Ltmp2562:
	move	$a0, $s2
	move	$a1, $s3
	pcaddu18i	$ra, %call36(_ZNSolsEi)
	jirl	$ra, $ra, 0
.Ltmp2563:
# %bb.52:
.Ltmp2564:
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.59)
	addi.d	$a1, $a0, %pc_lo12(.L.str.59)
	ori	$a2, $zero, 1
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2565:
# %bb.53:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit37
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB93_132
# %bb.54:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i89
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB93_56
# %bb.55:
	ld.bu	$a0, $s4, 67
	b	.LBB93_58
.LBB93_56:
.Ltmp2566:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2567:
# %bb.57:                               # %.noexc94
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp2568:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp2569:
.LBB93_58:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i91
.Ltmp2570:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2571:
# %bb.59:                               # %.noexc96
.Ltmp2572:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2573:
# %bb.60:                               # %_ZNSolsEPFRSoS_E.exit38
.Ltmp2574:
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a1, $a0, %pc_lo12(.L.str.22)
	ori	$a2, $zero, 4
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2575:
# %bb.61:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit39
	ld.d	$a0, $s1, 40
	ld.d	$a2, $a0, 16
	ld.d	$a1, $a0, 24
	addi.w	$s7, $s7, -1
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 5
	add.d	$a1, $a1, $s7
	bltz	$a1, .LBB93_64
# %bb.62:
	ori	$a3, $zero, 15
	bltu	$a3, $a1, .LBB93_65
# %bb.63:
	slli.d	$a0, $s7, 5
	add.d	$a0, $a2, $a0
	b	.LBB93_67
.LBB93_64:
	srai.d	$a2, $a1, 4
	b	.LBB93_66
.LBB93_65:
	srli.d	$a2, $a1, 4
.LBB93_66:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB93_67:                              # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit
	ld.d	$a1, $a0, 0
	ld.d	$a2, $a0, 8
.Ltmp2576:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2577:
# %bb.68:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB93_132
# %bb.69:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i100
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB93_71
# %bb.70:
	ld.bu	$a0, $s4, 67
	b	.LBB93_73
.LBB93_71:
.Ltmp2578:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2579:
# %bb.72:                               # %.noexc105
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp2580:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp2581:
.LBB93_73:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i102
.Ltmp2582:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2583:
# %bb.74:                               # %.noexc107
.Ltmp2584:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2585:
# %bb.75:                               # %_ZNSolsEPFRSoS_E.exit41
.Ltmp2586:
	pcalau12i	$a0, %pc_hi20(.L.str.194)
	addi.d	$a1, $a0, %pc_lo12(.L.str.194)
	ori	$a2, $zero, 9
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2587:
# %bb.76:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit42
	ld.d	$a1, $sp, 40
	ld.d	$a2, $sp, 48
.Ltmp2588:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2589:
# %bb.77:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit43
	move	$s3, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB93_132
# %bb.78:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i111
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB93_80
# %bb.79:
	ld.bu	$a0, $s4, 67
	b	.LBB93_82
.LBB93_80:
.Ltmp2590:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2591:
# %bb.81:                               # %.noexc116
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp2592:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp2593:
.LBB93_82:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i113
.Ltmp2594:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2595:
# %bb.83:                               # %.noexc118
.Ltmp2596:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2597:
# %bb.84:                               # %_ZNSolsEPFRSoS_E.exit44
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s3, $a0, 240
	beqz	$s3, .LBB93_132
# %bb.85:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i122
	ld.bu	$a0, $s3, 56
	beqz	$a0, .LBB93_87
# %bb.86:
	ld.bu	$a0, $s3, 67
	b	.LBB93_89
.LBB93_87:
.Ltmp2598:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2599:
# %bb.88:                               # %.noexc127
	ld.d	$a0, $s3, 0
	ld.d	$a2, $a0, 48
.Ltmp2600:
	ori	$a1, $zero, 10
	move	$a0, $s3
	jirl	$ra, $a2, 0
.Ltmp2601:
.LBB93_89:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i124
.Ltmp2602:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2603:
# %bb.90:                               # %.noexc129
.Ltmp2604:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2605:
# %bb.91:                               # %_ZNSolsEPFRSoS_E.exit45
.Ltmp2606:
	move	$s3, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.211)
	addi.d	$a1, $a0, %pc_lo12(.L.str.211)
	ori	$a2, $zero, 42
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2607:
# %bb.92:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit46
	ld.d	$a0, $s3, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s3, $a0
	ld.d	$s4, $a0, 240
	beqz	$s4, .LBB93_132
# %bb.93:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i133
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB93_95
# %bb.94:
	ld.bu	$a0, $s4, 67
	b	.LBB93_97
.LBB93_95:
.Ltmp2608:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2609:
# %bb.96:                               # %.noexc138
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
.Ltmp2610:
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.Ltmp2611:
.LBB93_97:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i135
.Ltmp2612:
	ext.w.b	$a1, $a0
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2613:
# %bb.98:                               # %.noexc140
.Ltmp2614:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2615:
# %bb.99:                               # %_ZNSolsEPFRSoS_E.exit47
.Ltmp2616:
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a1, $a0, %pc_lo12(.L.str.22)
	ori	$a2, $zero, 4
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2617:
# %bb.100:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit48
	ld.d	$a0, $s1, 40
	ld.d	$a2, $a0, 16
	ld.d	$a1, $a0, 24
	ld.d	$a0, $a0, 40
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 5
	add.d	$a1, $a1, $s7
	bltz	$a1, .LBB93_103
# %bb.101:
	ori	$a3, $zero, 15
	bltu	$a3, $a1, .LBB93_104
# %bb.102:
	slli.d	$a0, $s7, 5
	add.d	$a0, $a2, $a0
	b	.LBB93_106
.LBB93_103:
	srai.d	$a2, $a1, 4
	b	.LBB93_105
.LBB93_104:
	srli.d	$a2, $a1, 4
.LBB93_105:
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 4
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 5
	add.d	$a0, $a0, $a1
.LBB93_106:                             # %_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm.exit50
	addi.d	$s3, $sp, 24
	st.d	$s3, $sp, 8
	ld.d	$a1, $a0, 8
	ld.d	$s1, $a0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 72
	move	$a0, $s3
	bltu	$a1, $a2, .LBB93_109
# %bb.107:                              # %.noexc.i
.Ltmp2618:
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 72
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2619:
# %bb.108:                              # %.noexc
	ld.d	$a1, $sp, 72
	st.d	$a0, $sp, 8
	st.d	$a1, $sp, 24
.LBB93_109:                             # %._crit_edge.i.i
	beq	$a1, $s6, .LBB93_113
# %bb.110:                              # %._crit_edge.i.i
	bnez	$a1, .LBB93_112
# %bb.111:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB93_113
.LBB93_112:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB93_113:
	ld.d	$a0, $sp, 72
	st.d	$a0, $sp, 16
	pcalau12i	$a0, %pc_hi20(.L.str.212)
	addi.d	$a1, $a0, %pc_lo12(.L.str.212)
	addi.d	$a0, $sp, 8
	ori	$a3, $zero, 1
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm)
	jirl	$ra, $ra, 0
	ld.w	$a1, $sp, 16
	addi.w	$s1, $a0, 12
	bge	$s1, $a1, .LBB93_119
# %bb.114:                              # %.lr.ph.preheader
	addi.d	$s0, $s0, 32
	b	.LBB93_117
	.p2align	4, , 16
.LBB93_115:                             #   in Loop: Header=BB93_117 Depth=1
.Ltmp2623:
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2624:
.LBB93_116:                             #   in Loop: Header=BB93_117 Depth=1
	ld.w	$a0, $sp, 16
	addi.d	$s1, $s1, 1
	bge	$s1, $a0, .LBB93_119
.LBB93_117:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $sp, 8
	ldx.b	$a1, $a0, $s1
	ld.d	$a0, $s2, 0
	st.b	$a1, $sp, 72
	ld.d	$a0, $a0, -24
	ldx.d	$a0, $s0, $a0
	beqz	$a0, .LBB93_115
# %bb.118:                              #   in Loop: Header=BB93_117 Depth=1
.Ltmp2621:
	addi.d	$a1, $sp, 72
	ori	$a2, $zero, 1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2622:
	b	.LBB93_116
.LBB93_119:                             # %._crit_edge
	ld.d	$a0, $s2, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s2, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB93_134
# %bb.120:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i144
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB93_122
# %bb.121:
	ld.bu	$a0, $s0, 67
	b	.LBB93_124
.LBB93_122:
.Ltmp2626:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2627:
# %bb.123:                              # %.noexc149
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
.Ltmp2628:
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.Ltmp2629:
.LBB93_124:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i146
.Ltmp2630:
	ext.w.b	$a1, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2631:
# %bb.125:                              # %.noexc151
.Ltmp2632:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2633:
# %bb.126:                              # %_ZNSolsEPFRSoS_E.exit52
	ld.d	$a0, $sp, 8
	ori	$a1, $zero, 2
	st.w	$a1, $fp, 0
	beq	$a0, $s3, .LBB93_128
# %bb.127:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i58
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB93_128:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit60
	ld.d	$a0, $sp, 40
	beq	$a0, $s5, .LBB93_130
# %bb.129:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i61
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB93_130:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit63
	ori	$fp, $zero, 1
.LBB93_131:
	move	$a0, $fp
	ld.d	$s7, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 120                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.LBB93_132:                             # %.invoke
.Ltmp2637:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2638:
# %bb.133:                              # %.cont
.LBB93_134:
.Ltmp2634:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2635:
# %bb.135:                              # %.noexc148
.LBB93_136:
.Ltmp2620:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s5, .LBB93_141
	b	.LBB93_144
.LBB93_137:
.Ltmp2636:
	b	.LBB93_139
.LBB93_138:
.Ltmp2625:
.LBB93_139:
	move	$fp, $a0
	ld.d	$a0, $sp, 8
	bne	$a0, $s3, .LBB93_142
# %bb.140:
	ld.d	$a0, $sp, 40
	bne	$a0, $s5, .LBB93_144
.LBB93_141:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit69
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB93_142:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i64
	ld.d	$a1, $sp, 24
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 40
	beq	$a0, $s5, .LBB93_141
	b	.LBB93_144
.LBB93_143:
.Ltmp2639:
	move	$fp, $a0
	ld.d	$a0, $sp, 40
	beq	$a0, $s5, .LBB93_141
.LBB93_144:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i67
	ld.d	$a1, $sp, 56
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end93:
	.size	_ZN2PP3Cmd15check_input_endEbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end93-_ZN2PP3Cmd15check_input_endEbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table93:
.Lexception53:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Lfunc_begin53-.Lfunc_begin53  # >> Call Site 1 <<
	.uleb128 .Ltmp2552-.Lfunc_begin53       #   Call between .Lfunc_begin53 and .Ltmp2552
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2552-.Lfunc_begin53       # >> Call Site 2 <<
	.uleb128 .Ltmp2617-.Ltmp2552            #   Call between .Ltmp2552 and .Ltmp2617
	.uleb128 .Ltmp2639-.Lfunc_begin53       #     jumps to .Ltmp2639
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2618-.Lfunc_begin53       # >> Call Site 3 <<
	.uleb128 .Ltmp2619-.Ltmp2618            #   Call between .Ltmp2618 and .Ltmp2619
	.uleb128 .Ltmp2620-.Lfunc_begin53       #     jumps to .Ltmp2620
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2619-.Lfunc_begin53       # >> Call Site 4 <<
	.uleb128 .Ltmp2623-.Ltmp2619            #   Call between .Ltmp2619 and .Ltmp2623
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2623-.Lfunc_begin53       # >> Call Site 5 <<
	.uleb128 .Ltmp2622-.Ltmp2623            #   Call between .Ltmp2623 and .Ltmp2622
	.uleb128 .Ltmp2625-.Lfunc_begin53       #     jumps to .Ltmp2625
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2626-.Lfunc_begin53       # >> Call Site 6 <<
	.uleb128 .Ltmp2633-.Ltmp2626            #   Call between .Ltmp2626 and .Ltmp2633
	.uleb128 .Ltmp2636-.Lfunc_begin53       #     jumps to .Ltmp2636
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2633-.Lfunc_begin53       # >> Call Site 7 <<
	.uleb128 .Ltmp2637-.Ltmp2633            #   Call between .Ltmp2633 and .Ltmp2637
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2637-.Lfunc_begin53       # >> Call Site 8 <<
	.uleb128 .Ltmp2638-.Ltmp2637            #   Call between .Ltmp2637 and .Ltmp2638
	.uleb128 .Ltmp2639-.Lfunc_begin53       #     jumps to .Ltmp2639
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2634-.Lfunc_begin53       # >> Call Site 9 <<
	.uleb128 .Ltmp2635-.Ltmp2634            #   Call between .Ltmp2634 and .Ltmp2635
	.uleb128 .Ltmp2636-.Lfunc_begin53       #     jumps to .Ltmp2636
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2635-.Lfunc_begin53       # >> Call Site 10 <<
	.uleb128 .Lfunc_end93-.Ltmp2635         #   Call between .Ltmp2635 and .Lfunc_end93
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end53:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_: # @_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -64
	.cfi_def_cfa_offset 64
	st.d	$ra, $sp, 56                    # 8-byte Folded Spill
	st.d	$fp, $sp, 48                    # 8-byte Folded Spill
	st.d	$s0, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$s0, $a1
	ld.d	$a1, $a2, 0
	ld.d	$a4, $s0, 16
	move	$fp, $a0
	beq	$a1, $a4, .LBB94_3
# %bb.1:
	ld.d	$a0, $s0, 48
	beq	$a1, $a0, .LBB94_5
# %bb.2:
	ld.d	$a0, $a2, 24
	ld.d	$a2, $a0, 0
	addi.d	$a4, $a2, 512
	st.d	$a1, $sp, 8
	st.d	$a2, $sp, 16
	st.d	$a4, $sp, 24
	st.d	$a0, $sp, 32
	addi.d	$a2, $sp, 8
	move	$a0, $fp
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_)
	jirl	$ra, $ra, 0
	b	.LBB94_13
.LBB94_3:
	ld.d	$a0, $s0, 24
	beq	$a1, $a0, .LBB94_7
# %bb.4:
	addi.d	$a0, $a4, -128
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
	addi.d	$a0, $a0, -128
	st.d	$a0, $s0, 16
	b	.LBB94_8
.LBB94_5:
	ld.d	$a2, $s0, 64
	addi.d	$a2, $a2, -128
	beq	$a1, $a2, .LBB94_9
# %bb.6:
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 48
	addi.d	$a0, $a0, 128
	st.d	$a0, $s0, 48
	b	.LBB94_10
.LBB94_7:
	move	$a0, $s0
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
.LBB94_8:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EE10push_frontERKS1_.exit
	vld	$vr0, $s0, 24
	ld.d	$a1, $s0, 40
	st.d	$a0, $fp, 0
	vst	$vr0, $fp, 8
	st.d	$a1, $fp, 24
	b	.LBB94_13
.LBB94_9:
	move	$a0, $s0
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 48
.LBB94_10:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EE9push_backERKS1_.exit
	vld	$vr0, $s0, 56
	ld.d	$a2, $s0, 56
	ld.d	$a1, $s0, 72
	vst	$vr0, $fp, 8
	st.d	$a1, $fp, 24
	bne	$a0, $a2, .LBB94_12
# %bb.11:
	ld.d	$a0, $a1, -8
	addi.d	$a1, $a1, -8
	st.d	$a1, $fp, 24
	st.d	$a0, $fp, 8
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 16
.LBB94_12:                              # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EmmEv.exit
	addi.d	$a0, $a0, -128
	st.d	$a0, $fp, 0
.LBB94_13:
	ld.d	$s0, $sp, 40                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 48                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 56                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 64
	ret
.Lfunc_end94:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_, .Lfunc_end94-_ZNSt5dequeIN2PP4WordESaIS1_EE6insertESt15_Deque_iteratorIS1_RKS1_PS5_ES6_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd15clear_processedEv   # -- Begin function _ZN2PP3Cmd15clear_processedEv
	.p2align	5
	.type	_ZN2PP3Cmd15clear_processedEv,@function
_ZN2PP3Cmd15clear_processedEv:          # @_ZN2PP3Cmd15clear_processedEv
# %bb.0:
	ld.d	$a2, $a0, 232
	ld.d	$a1, $a0, 200
	sub.d	$a3, $a2, $a1
	srai.d	$a3, $a3, 3
	sltu	$a2, $zero, $a2
	ld.d	$a4, $a0, 208
	ld.d	$a5, $a0, 216
	sub.d	$a3, $a3, $a2
	ld.d	$a6, $a0, 192
	ld.d	$a2, $a0, 176
	sub.d	$a4, $a4, $a5
	srai.d	$a4, $a4, 7
	alsl.d	$a3, $a3, $a4, 2
	sub.d	$a4, $a6, $a2
	srai.d	$a4, $a4, 7
	add.d	$a5, $a3, $a4
	addi.w	$a3, $a5, 0
	blez	$a3, .LBB95_9
# %bb.1:                                # %.lr.ph
	ld.d	$a3, $a0, 184
	move	$a0, $zero
	sub.d	$a3, $a2, $a3
	srai.d	$a4, $a3, 7
	bstrpick.d	$a5, $a5, 30, 0
	ori	$a6, $zero, 3
	b	.LBB95_5
	.p2align	4, , 16
.LBB95_2:                               #   in Loop: Header=BB95_5 Depth=1
	srai.d	$a7, $a4, 2
.LBB95_3:                               #   in Loop: Header=BB95_5 Depth=1
	slli.d	$t0, $a7, 3
	ldx.d	$t0, $a1, $t0
	slli.d	$a7, $a7, 9
	sub.d	$a7, $t0, $a7
	add.d	$a7, $a7, $a3
.LBB95_4:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB95_5 Depth=1
	st.b	$zero, $a7, 36
	addi.d	$a0, $a0, 1
	addi.d	$a4, $a4, 1
	addi.d	$a5, $a5, -1
	addi.d	$a3, $a3, 128
	beqz	$a5, .LBB95_9
.LBB95_5:                               # =>This Inner Loop Header: Depth=1
	bltz	$a4, .LBB95_2
# %bb.6:                                #   in Loop: Header=BB95_5 Depth=1
	bltu	$a6, $a4, .LBB95_8
# %bb.7:                                #   in Loop: Header=BB95_5 Depth=1
	slli.d	$a7, $a0, 7
	add.d	$a7, $a2, $a7
	b	.LBB95_4
	.p2align	4, , 16
.LBB95_8:                               #   in Loop: Header=BB95_5 Depth=1
	srli.d	$a7, $a4, 2
	b	.LBB95_3
.LBB95_9:                               # %._crit_edge
	ret
.Lfunc_end95:
	.size	_ZN2PP3Cmd15clear_processedEv, .Lfunc_end95-_ZN2PP3Cmd15clear_processedEv
                                        # -- End function
	.globl	_ZN2PP3Cmd15check_processedERbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi # -- Begin function _ZN2PP3Cmd15check_processedERbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.p2align	5
	.type	_ZN2PP3Cmd15check_processedERbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi,@function
_ZN2PP3Cmd15check_processedERbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi: # @_ZN2PP3Cmd15check_processedERbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
.Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception54
# %bb.0:
	addi.d	$sp, $sp, -144
	.cfi_def_cfa_offset 144
	st.d	$ra, $sp, 136                   # 8-byte Folded Spill
	st.d	$fp, $sp, 128                   # 8-byte Folded Spill
	st.d	$s0, $sp, 120                   # 8-byte Folded Spill
	st.d	$s1, $sp, 112                   # 8-byte Folded Spill
	st.d	$s2, $sp, 104                   # 8-byte Folded Spill
	st.d	$s3, $sp, 96                    # 8-byte Folded Spill
	st.d	$s4, $sp, 88                    # 8-byte Folded Spill
	st.d	$s5, $sp, 80                    # 8-byte Folded Spill
	st.d	$s6, $sp, 72                    # 8-byte Folded Spill
	st.d	$s7, $sp, 64                    # 8-byte Folded Spill
	st.d	$s8, $sp, 56                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s2, $a0
	ld.d	$a5, $a0, 232
	ld.d	$a4, $a0, 200
	move	$fp, $a3
	move	$s1, $a2
	move	$s3, $a1
	sub.d	$a6, $a5, $a4
	srai.d	$a0, $a6, 3
	sltu	$a7, $zero, $a5
	ld.d	$a1, $s2, 208
	ld.d	$a2, $s2, 216
	sub.d	$t0, $a0, $a7
	ld.d	$a3, $s2, 192
	ld.d	$a0, $s2, 176
	sub.d	$t1, $a1, $a2
	srai.d	$t2, $t1, 7
	alsl.d	$t0, $t0, $t2, 2
	sub.d	$t2, $a3, $a0
	ld.d	$t3, $s2, 184
	srai.d	$t4, $t2, 7
	add.d	$t5, $t0, $t4
	addi.w	$t4, $t5, 0
	sub.d	$t3, $a0, $t3
	srai.d	$t0, $t3, 7
	addi.d	$s0, $s1, 16
	blez	$t4, .LBB96_9
# %bb.1:                                # %.lr.ph
	move	$t4, $zero
	bstrpick.d	$t5, $t5, 30, 0
	slli.d	$t6, $t0, 7
	ori	$t7, $zero, 3
	move	$t8, $t0
	.p2align	4, , 16
.LBB96_2:                               # =>This Inner Loop Header: Depth=1
	bltz	$t8, .LBB96_5
# %bb.3:                                #   in Loop: Header=BB96_2 Depth=1
	bltu	$t7, $t8, .LBB96_6
# %bb.4:                                #   in Loop: Header=BB96_2 Depth=1
	slli.d	$s4, $t4, 7
	add.d	$s4, $a0, $s4
	ld.bu	$s4, $s4, 36
	beqz	$s4, .LBB96_8
	b	.LBB96_12
	.p2align	4, , 16
.LBB96_5:                               #   in Loop: Header=BB96_2 Depth=1
	srai.d	$s4, $t8, 2
	b	.LBB96_7
	.p2align	4, , 16
.LBB96_6:                               #   in Loop: Header=BB96_2 Depth=1
	srli.d	$s4, $t8, 2
.LBB96_7:                               #   in Loop: Header=BB96_2 Depth=1
	slli.d	$s5, $s4, 3
	ldx.d	$s5, $a4, $s5
	slli.d	$s4, $s4, 9
	sub.d	$s4, $s5, $s4
	add.d	$s4, $s4, $t6
	ld.bu	$s4, $s4, 36
	bnez	$s4, .LBB96_12
.LBB96_8:                               #   in Loop: Header=BB96_2 Depth=1
	addi.d	$t4, $t4, 1
	addi.d	$t8, $t8, 1
	addi.d	$t5, $t5, -1
	addi.d	$t6, $t6, 128
	bnez	$t5, .LBB96_2
.LBB96_9:                               # %.critedge
	st.b	$zero, $s3, 0
	bltz	$t0, .LBB96_55
# %bb.10:
	ori	$a1, $zero, 4
	bltu	$t0, $a1, .LBB96_57
# %bb.11:
	srli.d	$a0, $t0, 2
	b	.LBB96_56
.LBB96_12:                              # %.preheader
	srli.d	$a6, $a6, 3
	sub.d	$a6, $a6, $a7
	srli.d	$a7, $t1, 7
	alsl.d	$a6, $a6, $a7, 2
	srli.d	$a7, $t2, 7
	add.w	$a6, $a6, $a7
	blez	$a6, .LBB96_62
# %bb.13:                               # %.lr.ph120.preheader
	move	$s7, $zero
	move	$s8, $zero
	addi.d	$a6, $s1, 256
	st.d	$a6, $sp, 8                     # 8-byte Folded Spill
	addi.d	$s6, $sp, 32
	b	.LBB96_16
	.p2align	4, , 16
.LBB96_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB96_16 Depth=1
	ld.d	$a5, $s2, 232
	ld.d	$a4, $s2, 200
	ld.d	$a1, $s2, 208
	ld.d	$a2, $s2, 216
	ld.d	$a3, $s2, 192
	ld.d	$a0, $s2, 176
	ori	$a6, $zero, 2
	st.w	$a6, $fp, 0
.LBB96_15:                              #   in Loop: Header=BB96_16 Depth=1
	addi.d	$s8, $s8, 1
	sub.d	$a6, $a5, $a4
	srli.d	$a6, $a6, 3
	sltu	$a7, $zero, $a5
	sub.d	$a6, $a6, $a7
	sub.d	$a7, $a1, $a2
	srli.d	$a7, $a7, 7
	alsl.d	$a6, $a6, $a7, 2
	sub.d	$a7, $a3, $a0
	srli.d	$a7, $a7, 7
	add.w	$a6, $a6, $a7
	addi.d	$s7, $s7, 128
	bge	$s8, $a6, .LBB96_62
.LBB96_16:                              # %.lr.ph120
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a6, $s2, 184
	sub.d	$a6, $a0, $a6
	srai.d	$a6, $a6, 7
	add.d	$a6, $s8, $a6
	bltz	$a6, .LBB96_20
# %bb.17:                               #   in Loop: Header=BB96_16 Depth=1
	ori	$a7, $zero, 4
	bgeu	$a6, $a7, .LBB96_21
# %bb.18:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit32.thread
                                        #   in Loop: Header=BB96_16 Depth=1
	add.d	$a6, $a0, $s7
	ld.bu	$a6, $a6, 36
	bnez	$a6, .LBB96_15
# %bb.19:                               # %.thread55
                                        #   in Loop: Header=BB96_16 Depth=1
	st.b	$zero, $s3, 0
	b	.LBB96_25
	.p2align	4, , 16
.LBB96_20:                              #   in Loop: Header=BB96_16 Depth=1
	srai.d	$a7, $a6, 2
	b	.LBB96_22
	.p2align	4, , 16
.LBB96_21:                              #   in Loop: Header=BB96_16 Depth=1
	srli.d	$a7, $a6, 2
.LBB96_22:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit32
                                        #   in Loop: Header=BB96_16 Depth=1
	slli.d	$t0, $a7, 3
	ldx.d	$t0, $a4, $t0
	slli.d	$a7, $a7, 2
	sub.d	$a7, $a6, $a7
	slli.d	$a7, $a7, 7
	add.d	$a7, $t0, $a7
	ld.bu	$a7, $a7, 36
	bnez	$a7, .LBB96_15
# %bb.23:                               #   in Loop: Header=BB96_16 Depth=1
	st.b	$zero, $s3, 0
	bltz	$a6, .LBB96_26
# %bb.24:                               #   in Loop: Header=BB96_16 Depth=1
	ori	$a1, $zero, 3
	bltu	$a1, $a6, .LBB96_27
.LBB96_25:                              #   in Loop: Header=BB96_16 Depth=1
	add.d	$a0, $a0, $s7
	b	.LBB96_29
.LBB96_26:                              #   in Loop: Header=BB96_16 Depth=1
	srai.d	$a0, $a6, 2
	b	.LBB96_28
.LBB96_27:                              #   in Loop: Header=BB96_16 Depth=1
	srli.d	$a0, $a6, 2
.LBB96_28:                              #   in Loop: Header=BB96_16 Depth=1
	slli.d	$a1, $a0, 3
	ldx.d	$a1, $a4, $a1
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a6, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB96_29:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit34
                                        #   in Loop: Header=BB96_16 Depth=1
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.214)
	addi.d	$a1, $a0, %pc_lo12(.L.str.214)
	ori	$a2, $zero, 43
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ldx.d	$s4, $a1, $a0
	beqz	$s4, .LBB96_63
# %bb.30:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i41
                                        #   in Loop: Header=BB96_16 Depth=1
	ld.bu	$a0, $s4, 56
	beqz	$a0, .LBB96_32
# %bb.31:                               #   in Loop: Header=BB96_16 Depth=1
	ld.bu	$a0, $s4, 67
	b	.LBB96_33
.LBB96_32:                              #   in Loop: Header=BB96_16 Depth=1
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s4, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s4
	jirl	$ra, $a2, 0
.LBB96_33:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit44
                                        #   in Loop: Header=BB96_16 Depth=1
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.215)
	addi.d	$a1, $a0, %pc_lo12(.L.str.215)
	ori	$a2, $zero, 22
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s2, 176
	ld.d	$a1, $s2, 184
	ld.d	$a0, $s2, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s8, $a1
	bltz	$a1, .LBB96_36
# %bb.34:                               #   in Loop: Header=BB96_16 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB96_37
# %bb.35:                               #   in Loop: Header=BB96_16 Depth=1
	add.d	$a0, $a2, $s7
	b	.LBB96_39
.LBB96_36:                              #   in Loop: Header=BB96_16 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB96_38
.LBB96_37:                              #   in Loop: Header=BB96_16 Depth=1
	srli.d	$a2, $a1, 2
.LBB96_38:                              #   in Loop: Header=BB96_16 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB96_39:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit36
                                        #   in Loop: Header=BB96_16 Depth=1
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	st.d	$s6, $sp, 16
	st.d	$a1, $sp, 48
	move	$a0, $s6
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB96_41
# %bb.40:                               # %.noexc.i.i
                                        #   in Loop: Header=BB96_16 Depth=1
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 48
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 48
	st.d	$a0, $sp, 16
	st.d	$a1, $sp, 32
.LBB96_41:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB96_16 Depth=1
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB96_45
# %bb.42:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB96_16 Depth=1
	bnez	$a1, .LBB96_44
# %bb.43:                               #   in Loop: Header=BB96_16 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB96_45
.LBB96_44:                              #   in Loop: Header=BB96_16 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB96_45:                              # %_ZN2PP4Word10get_stringB5cxx11Ev.exit
                                        #   in Loop: Header=BB96_16 Depth=1
	ld.d	$a2, $sp, 48
	ld.d	$a1, $sp, 16
	st.d	$a2, $sp, 24
.Ltmp2640:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2641:
# %bb.46:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB96_16 Depth=1
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB96_64
# %bb.47:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i46
                                        #   in Loop: Header=BB96_16 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB96_49
# %bb.48:                               #   in Loop: Header=BB96_16 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB96_51
.LBB96_49:                              #   in Loop: Header=BB96_16 Depth=1
.Ltmp2642:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2643:
# %bb.50:                               # %.noexc49
                                        #   in Loop: Header=BB96_16 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp2644:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp2645:
.LBB96_51:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB96_16 Depth=1
.Ltmp2646:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2647:
# %bb.52:                               # %.noexc51
                                        #   in Loop: Header=BB96_16 Depth=1
.Ltmp2648:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2649:
# %bb.53:                               # %_ZNSolsEPFRSoS_E.exit
                                        #   in Loop: Header=BB96_16 Depth=1
	ld.d	$a0, $sp, 16
	beq	$a0, $s6, .LBB96_14
# %bb.54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB96_16 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB96_14
.LBB96_55:
	srai.d	$a0, $t3, 9
.LBB96_56:
	slli.d	$a1, $a0, 3
	ldx.d	$a1, $a4, $a1
	slli.d	$a0, $a0, 2
	sub.d	$a0, $t0, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
.LBB96_57:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit29
	move	$a1, $s1
	move	$a2, $fp
	pcaddu18i	$ra, %call36(_ZN2PP4Word11fatal_errorERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %pc_hi20(.L.str.213)
	addi.d	$a1, $a0, %pc_lo12(.L.str.213)
	ori	$a2, $zero, 33
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 16
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$s1, $a0, 240
	beqz	$s1, .LBB96_63
# %bb.58:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a0, $s1, 56
	beqz	$a0, .LBB96_60
# %bb.59:
	ld.bu	$a0, $s1, 67
	b	.LBB96_61
.LBB96_60:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
.LBB96_61:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ori	$a0, $zero, 2
	st.w	$a0, $fp, 0
.LBB96_62:                              # %.loopexit
	ld.d	$s8, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 104                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 112                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 120                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 128                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 136                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 144
	ret
.LBB96_63:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB96_64:
.Ltmp2651:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2652:
# %bb.65:                               # %.noexc
.LBB96_66:                              # %.loopexit.split-lp
.Ltmp2653:
	b	.LBB96_68
.LBB96_67:                              # %.loopexit56
.Ltmp2650:
.LBB96_68:
	move	$fp, $a0
	ld.d	$a0, $sp, 16
	beq	$a0, $s6, .LBB96_70
# %bb.69:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i37
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB96_70:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit39
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end96:
	.size	_ZN2PP3Cmd15check_processedERbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi, .Lfunc_end96-_ZN2PP3Cmd15check_processedERbRNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEERi
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table96:
.Lexception54:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end54-.Lcst_begin54
.Lcst_begin54:
	.uleb128 .Lfunc_begin54-.Lfunc_begin54  # >> Call Site 1 <<
	.uleb128 .Ltmp2640-.Lfunc_begin54       #   Call between .Lfunc_begin54 and .Ltmp2640
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2640-.Lfunc_begin54       # >> Call Site 2 <<
	.uleb128 .Ltmp2649-.Ltmp2640            #   Call between .Ltmp2640 and .Ltmp2649
	.uleb128 .Ltmp2650-.Lfunc_begin54       #     jumps to .Ltmp2650
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2649-.Lfunc_begin54       # >> Call Site 3 <<
	.uleb128 .Ltmp2651-.Ltmp2649            #   Call between .Ltmp2649 and .Ltmp2651
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2651-.Lfunc_begin54       # >> Call Site 4 <<
	.uleb128 .Ltmp2652-.Ltmp2651            #   Call between .Ltmp2651 and .Ltmp2652
	.uleb128 .Ltmp2653-.Lfunc_begin54       #     jumps to .Ltmp2653
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2652-.Lfunc_begin54       # >> Call Site 5 <<
	.uleb128 .Lfunc_end96-.Ltmp2652         #   Call between .Ltmp2652 and .Lfunc_end96
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end54:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd15print_all_wordsEv   # -- Begin function _ZN2PP3Cmd15print_all_wordsEv
	.p2align	5
	.type	_ZN2PP3Cmd15print_all_wordsEv,@function
_ZN2PP3Cmd15print_all_wordsEv:          # @_ZN2PP3Cmd15print_all_wordsEv
.Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception55
# %bb.0:
	addi.d	$sp, $sp, -448
	.cfi_def_cfa_offset 448
	st.d	$ra, $sp, 440                   # 8-byte Folded Spill
	st.d	$fp, $sp, 432                   # 8-byte Folded Spill
	st.d	$s0, $sp, 424                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
.Ltmp2654:
	addi.d	$a1, $sp, 32
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZN2PP3Cmd15print_all_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp2655:
# %bb.1:
	ld.d	$a0, $sp, 96
	addi.d	$s0, $sp, 16
	st.d	$s0, $sp, 0
	st.d	$zero, $sp, 8
	st.b	$zero, $sp, 16
	beqz	$a0, .LBB97_4
# %bb.2:
	ld.d	$a1, $sp, 80
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB97_4
# %bb.3:
	ld.d	$a3, $sp, 88
	sub.d	$a4, $a0, $a3
.Ltmp2657:
	addi.d	$a0, $sp, 0
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2658:
	b	.LBB97_5
.LBB97_4:
	addi.d	$a1, $sp, 128
.Ltmp2659:
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2660:
.LBB97_5:                               # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	ld.d	$a1, $sp, 0
	ld.d	$a2, $sp, 8
.Ltmp2662:
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2663:
# %bb.6:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	ld.d	$a0, $sp, 0
	beq	$a0, $s0, .LBB97_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB97_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$fp, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $fp, 0
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 64
	ld.d	$a0, $a0, -24
	addi.d	$s0, $sp, 32
	ld.d	$a2, $fp, 72
	pcalau12i	$a3, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a3, $a3, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	stx.d	$a1, $a0, $s0
	ld.d	$a0, $sp, 128
	st.d	$a2, $sp, 48
	addi.d	$a1, $a3, 16
	addi.d	$a2, $sp, 144
	st.d	$a1, $sp, 56
	beq	$a0, $a2, .LBB97_10
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
	ld.d	$a1, $sp, 144
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB97_10:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 56
	addi.d	$a0, $sp, 112
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 16
	st.d	$a0, $sp, 32
	ld.d	$a1, $fp, 24
	ld.d	$a0, $a0, -24
	stx.d	$a1, $a0, $s0
	st.d	$zero, $sp, 40
	addi.d	$a0, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	ld.d	$s0, $sp, 424                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 432                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 440                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 448
	ret
.LBB97_11:
.Ltmp2664:
	b	.LBB97_13
.LBB97_12:
.Ltmp2661:
.LBB97_13:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s0, .LBB97_16
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB97_15:
.Ltmp2656:
	move	$fp, $a0
.LBB97_16:
	addi.d	$a0, $sp, 32
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end97:
	.size	_ZN2PP3Cmd15print_all_wordsEv, .Lfunc_end97-_ZN2PP3Cmd15print_all_wordsEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table97:
.Lexception55:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end55-.Lcst_begin55
.Lcst_begin55:
	.uleb128 .Lfunc_begin55-.Lfunc_begin55  # >> Call Site 1 <<
	.uleb128 .Ltmp2654-.Lfunc_begin55       #   Call between .Lfunc_begin55 and .Ltmp2654
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2654-.Lfunc_begin55       # >> Call Site 2 <<
	.uleb128 .Ltmp2655-.Ltmp2654            #   Call between .Ltmp2654 and .Ltmp2655
	.uleb128 .Ltmp2656-.Lfunc_begin55       #     jumps to .Ltmp2656
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2657-.Lfunc_begin55       # >> Call Site 3 <<
	.uleb128 .Ltmp2660-.Ltmp2657            #   Call between .Ltmp2657 and .Ltmp2660
	.uleb128 .Ltmp2661-.Lfunc_begin55       #     jumps to .Ltmp2661
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2662-.Lfunc_begin55       # >> Call Site 4 <<
	.uleb128 .Ltmp2663-.Ltmp2662            #   Call between .Ltmp2662 and .Ltmp2663
	.uleb128 .Ltmp2664-.Lfunc_begin55       #     jumps to .Ltmp2664
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2663-.Lfunc_begin55       # >> Call Site 5 <<
	.uleb128 .Lfunc_end97-.Ltmp2663         #   Call between .Ltmp2663 and .Lfunc_end97
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end55:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd15print_all_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd15print_all_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd15print_all_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd15print_all_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd15print_all_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
.Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception56
# %bb.0:
	addi.d	$sp, $sp, -560
	.cfi_def_cfa_offset 560
	st.d	$ra, $sp, 552                   # 8-byte Folded Spill
	st.d	$fp, $sp, 544                   # 8-byte Folded Spill
	st.d	$s0, $sp, 536                   # 8-byte Folded Spill
	st.d	$s1, $sp, 528                   # 8-byte Folded Spill
	st.d	$s2, $sp, 520                   # 8-byte Folded Spill
	st.d	$s3, $sp, 512                   # 8-byte Folded Spill
	st.d	$s4, $sp, 504                   # 8-byte Folded Spill
	st.d	$s5, $sp, 496                   # 8-byte Folded Spill
	st.d	$s6, $sp, 488                   # 8-byte Folded Spill
	st.d	$s7, $sp, 480                   # 8-byte Folded Spill
	st.d	$s8, $sp, 472                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s0, $a0
	addi.d	$fp, $a1, 16
	pcalau12i	$a0, %pc_hi20(.L.str.216)
	addi.d	$a1, $a0, %pc_lo12(.L.str.216)
	ori	$a2, $zero, 19
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $s0, 240
	ld.d	$a2, $s0, 248
	st.d	$fp, $sp, 8                     # 8-byte Folded Spill
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s1, $a1, 240
	beqz	$s1, .LBB98_54
# %bb.1:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a1, $s1, 56
	beqz	$a1, .LBB98_3
# %bb.2:
	ld.bu	$a1, $s1, 67
	b	.LBB98_4
.LBB98_3:
	move	$fp, $a0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s1, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s1
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $fp
.LBB98_4:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	move	$s8, $zero
	move	$s1, $zero
	pcalau12i	$a0, %got_pc_hi20(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	addi.d	$s6, $sp, 64
	ld.d	$s2, $a0, 0
	ld.d	$a1, $a0, 64
	st.d	$a1, $sp, 0                     # 8-byte Folded Spill
	ld.d	$fp, $a0, 72
	ld.d	$s7, $a0, 16
	ld.d	$s3, $a0, 24
	b	.LBB98_6
	.p2align	4, , 16
.LBB98_5:                               # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
                                        #   in Loop: Header=BB98_6 Depth=1
	pcalau12i	$a0, %got_pc_hi20(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	ld.d	$a0, $a0, %got_pc_lo12(_ZTVSt15basic_streambufIcSt11char_traitsIcEE)
	addi.d	$a0, $a0, 16
	st.d	$a0, $sp, 104
	addi.d	$a0, $sp, 160
	pcaddu18i	$ra, %call36(_ZNSt6localeD1Ev)
	jirl	$ra, $ra, 0
	st.d	$s7, $sp, 80
	ld.d	$a0, $s7, -24
	addi.d	$a1, $sp, 80
	stx.d	$s3, $a0, $a1
	st.d	$zero, $sp, 88
	addi.d	$a0, $sp, 208
	pcaddu18i	$ra, %call36(_ZNSt8ios_baseD2Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 1
	addi.d	$s8, $s8, 128
.LBB98_6:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, 232
	ld.d	$a1, $s0, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $s0, 208
	ld.d	$a3, $s0, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $s0, 192
	ld.d	$a4, $s0, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.w	$a0, $a0, $a1
	bge	$s1, $a0, .LBB98_47
# %bb.7:                                #   in Loop: Header=BB98_6 Depth=1
	addi.d	$a0, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s1, $a1
	bltz	$a1, .LBB98_10
# %bb.8:                                #   in Loop: Header=BB98_6 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB98_11
# %bb.9:                                #   in Loop: Header=BB98_6 Depth=1
	add.d	$a0, $a2, $s8
	b	.LBB98_13
	.p2align	4, , 16
.LBB98_10:                              #   in Loop: Header=BB98_6 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB98_12
	.p2align	4, , 16
.LBB98_11:                              #   in Loop: Header=BB98_6 Depth=1
	srli.d	$a2, $a1, 2
.LBB98_12:                              #   in Loop: Header=BB98_6 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB98_13:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB98_6 Depth=1
.Ltmp2665:
	addi.d	$a1, $sp, 80
	pcaddu18i	$ra, %call36(_ZN2PP4Word10print_typeERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE)
	jirl	$ra, $ra, 0
.Ltmp2666:
# %bb.14:                               #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a2, $s0, 176
	ld.d	$a1, $s0, 184
	ld.d	$a0, $s0, 200
	sub.d	$a1, $a2, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $s1, $a1
	bltz	$a1, .LBB98_17
# %bb.15:                               #   in Loop: Header=BB98_6 Depth=1
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB98_18
# %bb.16:                               #   in Loop: Header=BB98_6 Depth=1
	add.d	$a0, $a2, $s8
	b	.LBB98_20
	.p2align	4, , 16
.LBB98_17:                              #   in Loop: Header=BB98_6 Depth=1
	srai.d	$a2, $a1, 2
	b	.LBB98_19
	.p2align	4, , 16
.LBB98_18:                              #   in Loop: Header=BB98_6 Depth=1
	srli.d	$a2, $a1, 2
.LBB98_19:                              #   in Loop: Header=BB98_6 Depth=1
	slli.d	$a3, $a2, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a2, $a2, 2
	sub.d	$a1, $a1, $a2
	slli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
.LBB98_20:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit19
                                        #   in Loop: Header=BB98_6 Depth=1
	st.d	$s6, $sp, 48
	ld.d	$a1, $a0, 8
	ld.d	$s4, $a0, 0
	st.d	$a1, $sp, 16
	move	$a0, $s6
	ori	$a2, $zero, 16
	bltu	$a1, $a2, .LBB98_23
# %bb.21:                               # %.noexc.i.i
                                        #   in Loop: Header=BB98_6 Depth=1
.Ltmp2668:
	addi.d	$a0, $sp, 48
	addi.d	$a1, $sp, 16
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2669:
# %bb.22:                               # %.noexc
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a1, $sp, 16
	st.d	$a0, $sp, 48
	st.d	$a1, $sp, 64
.LBB98_23:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB98_6 Depth=1
	addi.w	$a2, $zero, -1
	beq	$a1, $a2, .LBB98_27
# %bb.24:                               # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB98_6 Depth=1
	bnez	$a1, .LBB98_26
# %bb.25:                               #   in Loop: Header=BB98_6 Depth=1
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
	b	.LBB98_27
	.p2align	4, , 16
.LBB98_26:                              #   in Loop: Header=BB98_6 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB98_27:                              #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a2, $sp, 16
	ld.d	$a1, $sp, 48
	st.d	$a2, $sp, 56
.Ltmp2671:
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2672:
# %bb.28:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB98_6 Depth=1
.Ltmp2673:
	move	$s4, $a0
	pcalau12i	$a0, %pc_hi20(.L.str.5)
	addi.d	$a1, $a0, %pc_lo12(.L.str.5)
	ori	$a2, $zero, 1
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2674:
# %bb.29:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a0, $sp, 144
	addi.d	$a1, $sp, 32
	st.d	$a1, $sp, 16
	st.d	$zero, $sp, 24
	st.b	$zero, $sp, 32
	beqz	$a0, .LBB98_32
# %bb.30:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a1, $sp, 128
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a0, $a0, $a2
	or	$a0, $a0, $a1
	beqz	$a0, .LBB98_32
# %bb.31:                               #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a3, $sp, 136
	sub.d	$a4, $a0, $a3
.Ltmp2676:
	addi.d	$a0, $sp, 16
	move	$a1, $zero
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2677:
	b	.LBB98_33
	.p2align	4, , 16
.LBB98_32:                              #   in Loop: Header=BB98_6 Depth=1
.Ltmp2678:
	addi.d	$a0, $sp, 16
	addi.d	$a1, $sp, 176
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_)
	jirl	$ra, $ra, 0
.Ltmp2679:
.LBB98_33:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a1, $sp, 16
	ld.d	$a2, $sp, 24
.Ltmp2681:
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2682:
# %bb.34:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit23
                                        #   in Loop: Header=BB98_6 Depth=1
	move	$s4, $a0
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s4, $a0
	ld.d	$s5, $a0, 240
	beqz	$s5, .LBB98_52
# %bb.35:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i40
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.bu	$a0, $s5, 56
	beqz	$a0, .LBB98_37
# %bb.36:                               #   in Loop: Header=BB98_6 Depth=1
	ld.bu	$a0, $s5, 67
	b	.LBB98_39
	.p2align	4, , 16
.LBB98_37:                              #   in Loop: Header=BB98_6 Depth=1
.Ltmp2683:
	move	$a0, $s5
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
.Ltmp2684:
# %bb.38:                               # %.noexc44
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a0, $s5, 0
	ld.d	$a2, $a0, 48
.Ltmp2685:
	ori	$a1, $zero, 10
	move	$a0, $s5
	jirl	$ra, $a2, 0
.Ltmp2686:
.LBB98_39:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB98_6 Depth=1
.Ltmp2687:
	ext.w.b	$a1, $a0
	move	$a0, $s4
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
.Ltmp2688:
# %bb.40:                               # %.noexc46
                                        #   in Loop: Header=BB98_6 Depth=1
.Ltmp2689:
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
.Ltmp2690:
# %bb.41:                               # %_ZNSolsEPFRSoS_E.exit
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB98_43
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB98_43:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a0, $sp, 48
	beq	$a0, $s6, .LBB98_45
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i25
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB98_45:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit27
                                        #   in Loop: Header=BB98_6 Depth=1
	st.d	$s2, $sp, 80
	ld.d	$a1, $s2, -24
	pcalau12i	$a0, %got_pc_hi20(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a2, $a0, %got_pc_lo12(_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE)
	ld.d	$a0, $sp, 176
	ld.d	$a3, $sp, 0                     # 8-byte Folded Reload
	addi.d	$a4, $sp, 80
	stx.d	$a3, $a1, $a4
	st.d	$fp, $sp, 96
	addi.d	$a1, $a2, 16
	st.d	$a1, $sp, 104
	addi.d	$a1, $sp, 192
	beq	$a0, $a1, .LBB98_5
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB98_6 Depth=1
	ld.d	$a1, $sp, 192
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB98_5
.LBB98_47:
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $a1, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $a1, $a0
	ld.d	$s0, $a0, 240
	beqz	$s0, .LBB98_54
# %bb.48:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i35
	ld.bu	$a0, $s0, 56
	beqz	$a0, .LBB98_50
# %bb.49:
	ld.bu	$a0, $s0, 67
	b	.LBB98_51
.LBB98_50:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
.LBB98_51:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit38
	ext.w.b	$a1, $a0
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$s8, $sp, 472                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 480                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 488                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 496                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 504                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 512                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 520                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 528                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 536                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 544                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 552                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 560
	ret
.LBB98_52:
.Ltmp2692:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.Ltmp2693:
# %bb.53:                               # %.noexc43
.LBB98_54:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB98_55:
.Ltmp2670:
	b	.LBB98_60
.LBB98_56:
.Ltmp2680:
	ld.d	$a2, $sp, 16
	move	$fp, $a0
	addi.d	$a0, $sp, 32
	beq	$a2, $a0, .LBB98_66
# %bb.57:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	ld.d	$a0, $sp, 32
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	b	.LBB98_65
.LBB98_58:                              # %.loopexit.split-lp
.Ltmp2694:
	b	.LBB98_63
.LBB98_59:
.Ltmp2667:
.LBB98_60:
	move	$fp, $a0
	addi.d	$a0, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB98_61:
.Ltmp2675:
	move	$fp, $a0
	b	.LBB98_66
.LBB98_62:                              # %.loopexit
.Ltmp2691:
.LBB98_63:
	move	$fp, $a0
	ld.d	$a0, $sp, 16
	addi.d	$a1, $sp, 32
	beq	$a0, $a1, .LBB98_66
# %bb.64:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i28
	ld.d	$a1, $sp, 32
	addi.d	$a1, $a1, 1
.LBB98_65:                              # %.body
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB98_66:
	ld.d	$a0, $sp, 48
	beq	$a0, $s6, .LBB98_68
# %bb.67:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i31
	ld.d	$a1, $sp, 64
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB98_68:
	addi.d	$a0, $sp, 80
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end98:
	.size	_ZN2PP3Cmd15print_all_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end98-_ZN2PP3Cmd15print_all_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table98:
.Lexception56:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end56-.Lcst_begin56
.Lcst_begin56:
	.uleb128 .Lfunc_begin56-.Lfunc_begin56  # >> Call Site 1 <<
	.uleb128 .Ltmp2665-.Lfunc_begin56       #   Call between .Lfunc_begin56 and .Ltmp2665
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2665-.Lfunc_begin56       # >> Call Site 2 <<
	.uleb128 .Ltmp2666-.Ltmp2665            #   Call between .Ltmp2665 and .Ltmp2666
	.uleb128 .Ltmp2667-.Lfunc_begin56       #     jumps to .Ltmp2667
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2668-.Lfunc_begin56       # >> Call Site 3 <<
	.uleb128 .Ltmp2669-.Ltmp2668            #   Call between .Ltmp2668 and .Ltmp2669
	.uleb128 .Ltmp2670-.Lfunc_begin56       #     jumps to .Ltmp2670
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2669-.Lfunc_begin56       # >> Call Site 4 <<
	.uleb128 .Ltmp2671-.Ltmp2669            #   Call between .Ltmp2669 and .Ltmp2671
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2671-.Lfunc_begin56       # >> Call Site 5 <<
	.uleb128 .Ltmp2674-.Ltmp2671            #   Call between .Ltmp2671 and .Ltmp2674
	.uleb128 .Ltmp2675-.Lfunc_begin56       #     jumps to .Ltmp2675
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2676-.Lfunc_begin56       # >> Call Site 6 <<
	.uleb128 .Ltmp2679-.Ltmp2676            #   Call between .Ltmp2676 and .Ltmp2679
	.uleb128 .Ltmp2680-.Lfunc_begin56       #     jumps to .Ltmp2680
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2681-.Lfunc_begin56       # >> Call Site 7 <<
	.uleb128 .Ltmp2690-.Ltmp2681            #   Call between .Ltmp2681 and .Ltmp2690
	.uleb128 .Ltmp2691-.Lfunc_begin56       #     jumps to .Ltmp2691
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2690-.Lfunc_begin56       # >> Call Site 8 <<
	.uleb128 .Ltmp2692-.Ltmp2690            #   Call between .Ltmp2690 and .Ltmp2692
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2692-.Lfunc_begin56       # >> Call Site 9 <<
	.uleb128 .Ltmp2693-.Ltmp2692            #   Call between .Ltmp2692 and .Ltmp2693
	.uleb128 .Ltmp2694-.Lfunc_begin56       #     jumps to .Ltmp2694
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2693-.Lfunc_begin56       # >> Call Site 10 <<
	.uleb128 .Lfunc_end98-.Ltmp2693         #   Call between .Ltmp2693 and .Lfunc_end98
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end56:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd17print_using_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd17print_using_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd17print_using_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd17print_using_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd17print_using_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
.Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception57
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$fp, $a0
	move	$s3, $zero
	move	$s4, $zero
	addi.d	$s0, $a1, 16
	addi.d	$s2, $sp, 16
	ori	$s5, $zero, 3
	pcalau12i	$a0, %pc_hi20(.L.str.5)
	addi.d	$s1, $a0, %pc_lo12(.L.str.5)
	b	.LBB99_2
	.p2align	4, , 16
.LBB99_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB99_2 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, 128
.LBB99_2:                               # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s4, $a2, .LBB99_13
# %bb.3:                                #   in Loop: Header=BB99_2 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s4, $a2
	bltz	$a2, .LBB99_6
# %bb.4:                                #   in Loop: Header=BB99_2 Depth=1
	bltu	$s5, $a2, .LBB99_7
# %bb.5:                                #   in Loop: Header=BB99_2 Depth=1
	add.d	$a1, $a1, $s3
	b	.LBB99_9
	.p2align	4, , 16
.LBB99_6:                               #   in Loop: Header=BB99_2 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB99_8
	.p2align	4, , 16
.LBB99_7:                               #   in Loop: Header=BB99_2 Depth=1
	srli.d	$a1, $a2, 2
.LBB99_8:                               #   in Loop: Header=BB99_2 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB99_9:                               # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB99_2 Depth=1
	sltu	$a2, $zero, $s4
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZN2PP4Word16get_print_stringB5cxx11Eb)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	ld.d	$a2, $sp, 8
.Ltmp2695:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2696:
# %bb.10:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB99_2 Depth=1
.Ltmp2697:
	ori	$a2, $zero, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2698:
# %bb.11:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB99_2 Depth=1
	ld.d	$a0, $sp, 0
	beq	$a0, $s2, .LBB99_1
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB99_2 Depth=1
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB99_1
.LBB99_13:
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB99_14:
.Ltmp2699:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s2, .LBB99_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i8
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB99_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit10
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end99:
	.size	_ZN2PP3Cmd17print_using_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end99-_ZN2PP3Cmd17print_using_wordsERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table99:
.Lexception57:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end57-.Lcst_begin57
.Lcst_begin57:
	.uleb128 .Lfunc_begin57-.Lfunc_begin57  # >> Call Site 1 <<
	.uleb128 .Ltmp2695-.Lfunc_begin57       #   Call between .Lfunc_begin57 and .Ltmp2695
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2695-.Lfunc_begin57       # >> Call Site 2 <<
	.uleb128 .Ltmp2698-.Ltmp2695            #   Call between .Ltmp2695 and .Ltmp2698
	.uleb128 .Ltmp2699-.Lfunc_begin57       #     jumps to .Ltmp2699
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2698-.Lfunc_begin57       # >> Call Site 3 <<
	.uleb128 .Lfunc_end99-.Ltmp2698         #   Call between .Ltmp2698 and .Lfunc_end99
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end57:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd20print_using_words_fmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd20print_using_words_fmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd20print_using_words_fmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd20print_using_words_fmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd20print_using_words_fmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
.Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception58
# %bb.0:
	addi.d	$sp, $sp, -240
	.cfi_def_cfa_offset 240
	st.d	$ra, $sp, 232                   # 8-byte Folded Spill
	st.d	$fp, $sp, 224                   # 8-byte Folded Spill
	st.d	$s0, $sp, 216                   # 8-byte Folded Spill
	st.d	$s1, $sp, 208                   # 8-byte Folded Spill
	st.d	$s2, $sp, 200                   # 8-byte Folded Spill
	st.d	$s3, $sp, 192                   # 8-byte Folded Spill
	st.d	$s4, $sp, 184                   # 8-byte Folded Spill
	st.d	$s5, $sp, 176                   # 8-byte Folded Spill
	st.d	$s6, $sp, 168                   # 8-byte Folded Spill
	st.d	$s7, $sp, 160                   # 8-byte Folded Spill
	st.d	$s8, $sp, 152                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	move	$s6, $zero
	addi.d	$a0, $a1, 16
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	addi.d	$a0, $a1, 256
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	addi.w	$s3, $zero, -1
	pcalau12i	$a0, %pc_hi20(.L.str.217)
	addi.d	$a0, $a0, %pc_lo12(.L.str.217)
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	ori	$s5, $zero, 0
	lu32i.d	$s5, -1
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	move	$s8, $s3
	b	.LBB100_3
	.p2align	4, , 16
.LBB100_1:                              #   in Loop: Header=BB100_3 Depth=1
	ld.bu	$a0, $s2, 67
.LBB100_2:                              #   in Loop: Header=BB100_3 Depth=1
	ext.w.b	$a1, $a0
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$s6, $sp, 40                    # 8-byte Folded Reload
.LBB100_3:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB100_7 Depth 2
	blez	$s6, .LBB100_5
# %bb.4:                                #   in Loop: Header=BB100_3 Depth=1
	ori	$a2, $zero, 5
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.LBB100_5:                              #   in Loop: Header=BB100_3 Depth=1
	st.d	$zero, $sp, 32                  # 8-byte Folded Spill
	st.d	$zero, $sp, 16                  # 8-byte Folded Spill
	slli.d	$s4, $s6, 7
	move	$s0, $s6
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	b	.LBB100_7
	.p2align	4, , 16
.LBB100_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit148
                                        #   in Loop: Header=BB100_7 Depth=2
	addi.d	$s0, $s0, 1
	addi.d	$s4, $s4, 128
	move	$s6, $s7
	beqz	$s1, .LBB100_74
.LBB100_7:                              #   Parent Loop BB100_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s0, $a2, .LBB100_74
# %bb.8:                                #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s0, $a2
	bltz	$a3, .LBB100_11
# %bb.9:                                #   in Loop: Header=BB100_7 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB100_12
# %bb.10:                               #   in Loop: Header=BB100_7 Depth=2
	add.d	$a1, $a1, $s4
	b	.LBB100_14
	.p2align	4, , 16
.LBB100_11:                             #   in Loop: Header=BB100_7 Depth=2
	srai.d	$a1, $a3, 2
	b	.LBB100_13
	.p2align	4, , 16
.LBB100_12:                             #   in Loop: Header=BB100_7 Depth=2
	srli.d	$a1, $a3, 2
.LBB100_13:                             #   in Loop: Header=BB100_7 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s0, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB100_14:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB100_7 Depth=2
	sltu	$s2, $zero, $s0
	addi.d	$a0, $sp, 120
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4Word16get_print_stringB5cxx11Eb)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 128
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB100_16
# %bb.15:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit106
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 120
	ld.b	$a0, $a0, 0
	andi	$a0, $a0, 255
	addi.d	$a1, $a0, -61
	sltui	$a1, $a1, 1
	masknez	$a2, $s3, $a1
	maskeqz	$a1, $s6, $a1
	or	$s3, $a1, $a2
	addi.d	$a1, $a0, -40
	sltui	$a1, $a1, 1
	ld.d	$a2, $sp, 48                    # 8-byte Folded Reload
	masknez	$a2, $a2, $a1
	maskeqz	$a1, $s6, $a1
	or	$a1, $a1, $a2
	st.d	$a1, $sp, 48                    # 8-byte Folded Spill
	addi.d	$a0, $a0, -41
	sltui	$a0, $a0, 1
	masknez	$a1, $s8, $a0
	maskeqz	$a0, $s6, $a0
	or	$s8, $a0, $a1
.LBB100_16:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit106.thread165
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	sub.d	$a1, $a2, $a1
	sub.d	$a2, $a3, $a4
	srli.d	$a2, $a2, 7
	alsl.d	$a2, $a1, $a2, 2
	ld.d	$a3, $fp, 192
	ld.d	$a1, $fp, 176
	addi.d	$a4, $sp, 104
	st.d	$a4, $sp, 88
	st.d	$zero, $sp, 96
	st.b	$zero, $sp, 104
	sub.d	$a3, $a3, $a1
	srli.d	$a3, $a3, 7
	add.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 32
	add.d	$a2, $a2, $s5
	srai.d	$a2, $a2, 32
	addi.w	$s7, $s6, 1
	bge	$s0, $a2, .LBB100_40
# %bb.17:                               #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a3, $s0, $a2
	addi.d	$a3, $a3, 1
	bltz	$a3, .LBB100_20
# %bb.18:                               #   in Loop: Header=BB100_7 Depth=2
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB100_21
# %bb.19:                               #   in Loop: Header=BB100_7 Depth=2
	add.d	$a0, $a1, $s4
	b	.LBB100_23
.LBB100_20:                             #   in Loop: Header=BB100_7 Depth=2
	srai.d	$a1, $a3, 2
	b	.LBB100_22
.LBB100_21:                             #   in Loop: Header=BB100_7 Depth=2
	srli.d	$a1, $a3, 2
.LBB100_22:                             #   in Loop: Header=BB100_7 Depth=2
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	add.d	$a1, $s0, $a1
	slli.d	$a1, $a1, 7
	add.d	$a0, $a1, $a0
.LBB100_23:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit109
                                        #   in Loop: Header=BB100_7 Depth=2
	addi.d	$a1, $a0, 128
.Ltmp2700:
	addi.d	$a0, $sp, 56
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZN2PP4Word16get_print_stringB5cxx11Eb)
	jirl	$ra, $ra, 0
.Ltmp2701:
# %bb.24:                               #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB100_28
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $sp, 56
	addi.d	$a2, $sp, 72
	beq	$a1, $a2, .LBB100_31
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a2, $sp, 104
	vld	$vr0, $sp, 64
	st.d	$a1, $sp, 88
	vst	$vr0, $sp, 96
	beqz	$a0, .LBB100_30
.LBB100_27:                             #   in Loop: Header=BB100_7 Depth=2
	st.d	$a0, $sp, 56
	st.d	$a2, $sp, 72
	b	.LBB100_36
.LBB100_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $sp, 56
	addi.d	$a2, $sp, 72
	beq	$a1, $a2, .LBB100_31
# %bb.29:                               #   in Loop: Header=BB100_7 Depth=2
	move	$a0, $zero
                                        # implicit-def: $r6
	vld	$vr0, $sp, 64
	st.d	$a1, $sp, 88
	vst	$vr0, $sp, 96
	bnez	$a0, .LBB100_27
.LBB100_30:                             #   in Loop: Header=BB100_7 Depth=2
	addi.d	$a0, $sp, 72
	st.d	$a0, $sp, 56
	b	.LBB100_36
.LBB100_31:                             #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a2, $sp, 64
	beqz	$a2, .LBB100_35
# %bb.32:                               #   in Loop: Header=BB100_7 Depth=2
	ori	$a3, $zero, 1
	bne	$a2, $a3, .LBB100_34
# %bb.33:                               #   in Loop: Header=BB100_7 Depth=2
	ld.b	$a1, $a1, 0
	st.b	$a1, $a0, 0
	b	.LBB100_35
.LBB100_34:                             #   in Loop: Header=BB100_7 Depth=2
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB100_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 64
	ld.d	$a1, $sp, 88
	st.d	$a0, $sp, 96
	stx.b	$zero, $a1, $a0
	ld.d	$a0, $sp, 56
.LBB100_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB100_7 Depth=2
	st.d	$zero, $sp, 64
	st.b	$zero, $a0, 0
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	beq	$a0, $a1, .LBB100_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB100_38:                             #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 96
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB100_40
# %bb.39:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit111
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 88
	ld.b	$a0, $a0, 0
	andi	$a0, $a0, 255
	addi.d	$a0, $a0, -41
	sltui	$a0, $a0, 1
	masknez	$a1, $s8, $a0
	maskeqz	$a0, $s7, $a0
	or	$s8, $a0, $a1
.LBB100_40:                             # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit111.thread169
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$s2, $sp, 128
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	bge	$a0, $s0, .LBB100_43
# %bb.41:                               #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	add.d	$a0, $a0, $s2
	addi.w	$a0, $a0, 1
	ori	$a1, $zero, 75
	bge	$a1, $a0, .LBB100_43
# %bb.42:                               #   in Loop: Header=BB100_7 Depth=2
	move	$s1, $zero
	st.d	$s6, $sp, 40                    # 8-byte Folded Spill
	b	.LBB100_70
	.p2align	4, , 16
.LBB100_43:                             #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $fp, 232
	ld.d	$a1, $fp, 200
	sub.d	$a1, $a0, $a1
	srli.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	ld.d	$a2, $fp, 208
	ld.d	$a3, $fp, 216
	sub.d	$a0, $a1, $a0
	ld.d	$a1, $fp, 192
	ld.d	$a4, $fp, 176
	sub.d	$a2, $a2, $a3
	srli.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	sub.d	$a1, $a1, $a4
	srli.d	$a1, $a1, 7
	add.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 32
	add.d	$a0, $a0, $s5
	srai.d	$a0, $a0, 32
	bge	$s0, $a0, .LBB100_69
# %bb.44:                               # %._crit_edge.i.i114
                                        #   in Loop: Header=BB100_7 Depth=2
	addi.d	$a0, $sp, 72
	st.d	$a0, $sp, 56
	ori	$a0, $zero, 32
	st.h	$a0, $sp, 72
	ori	$s1, $zero, 1
	st.d	$s1, $sp, 64
	bltz	$s3, .LBB100_47
# %bb.45:                               # %._crit_edge.i.i114
                                        #   in Loop: Header=BB100_7 Depth=2
	bge	$s3, $s0, .LBB100_47
# %bb.46:                               #   in Loop: Header=BB100_7 Depth=2
	ori	$s1, $zero, 2
.Ltmp2706:
	pcalau12i	$a0, %pc_hi20(.L.str.218)
	addi.d	$a3, $a0, %pc_lo12(.L.str.218)
	addi.d	$a0, $sp, 56
	ori	$a2, $zero, 1
	ori	$a4, $zero, 2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2707:
.LBB100_47:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	bltz	$a0, .LBB100_53
# %bb.48:                               #   in Loop: Header=BB100_7 Depth=2
	addi.d	$a0, $s8, 1
	sltu	$a0, $zero, $a0
	slt	$a1, $s0, $s8
	xori	$a1, $a1, 1
	and	$a0, $a0, $a1
	bnez	$a0, .LBB100_53
# %bb.49:                               #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	bge	$a0, $s0, .LBB100_53
# %bb.50:                               #   in Loop: Header=BB100_7 Depth=2
	addi.w	$a0, $zero, -1
	beq	$s8, $a0, .LBB100_52
# %bb.51:                               #   in Loop: Header=BB100_7 Depth=2
	addi.w	$a0, $s8, -1
	bge	$s0, $a0, .LBB100_53
.LBB100_52:                             #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a2, $sp, 64
	ori	$s1, $zero, 2
.Ltmp2708:
	pcalau12i	$a0, %pc_hi20(.L.str.218)
	addi.d	$a3, $a0, %pc_lo12(.L.str.218)
	addi.d	$a0, $sp, 56
	ori	$a4, $zero, 2
	move	$a1, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2709:
	.p2align	4, , 16
.LBB100_53:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit123
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 64
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB100_64
# %bb.54:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit125
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 56
	ld.bu	$a0, $a0, 0
	ori	$a1, $zero, 32
	bne	$a0, $a1, .LBB100_64
# %bb.55:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit125.thread
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 128
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB100_58
# %bb.56:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit127
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 120
	ld.bu	$a0, $a0, 0
	ori	$a1, $zero, 40
	bne	$a0, $a1, .LBB100_58
# %bb.57:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit127.thread
                                        #   in Loop: Header=BB100_7 Depth=2
.Ltmp2710:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	addi.d	$a0, $sp, 56
	ori	$a2, $zero, 1
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2711:
	move	$s1, $zero
.LBB100_58:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit129
                                        #   in Loop: Header=BB100_7 Depth=2
	addi.w	$a0, $s8, -1
	bne	$s6, $a0, .LBB100_60
# %bb.59:                               #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a2, $sp, 64
.Ltmp2712:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	addi.d	$a0, $sp, 56
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2713:
	move	$s1, $zero
.LBB100_60:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit131
                                        #   in Loop: Header=BB100_7 Depth=2
	bnez	$s0, .LBB100_64
# %bb.61:                               #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 96
	ori	$a1, $zero, 1
	bne	$a0, $a1, .LBB100_64
# %bb.62:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit133
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 88
	ld.bu	$a0, $a0, 0
	ori	$a1, $zero, 40
	bne	$a0, $a1, .LBB100_64
# %bb.63:                               # %_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_.exit133.thread
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a2, $sp, 64
.Ltmp2714:
	pcalau12i	$a0, %pc_hi20(.L.str)
	addi.d	$a3, $a0, %pc_lo12(.L.str)
	addi.d	$a0, $sp, 56
	move	$a1, $zero
	move	$a4, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm)
	jirl	$ra, $ra, 0
.Ltmp2715:
	move	$s1, $zero
	.p2align	4, , 16
.LBB100_64:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit135
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $sp, 120
	ld.d	$a2, $sp, 128
.Ltmp2716:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2717:
# %bb.65:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit137
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $sp, 56
	ld.d	$a2, $sp, 64
.Ltmp2718:
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2719:
# %bb.66:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit139
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 56
	addi.d	$a1, $sp, 72
	beq	$a0, $a1, .LBB100_68
# %bb.67:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i140
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $sp, 72
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB100_68:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit142
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	add.d	$a0, $a0, $s2
	add.d	$a0, $a0, $s1
	st.d	$a0, $sp, 32                    # 8-byte Folded Spill
	ori	$s1, $zero, 1
	b	.LBB100_70
	.p2align	4, , 16
.LBB100_69:                             #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $sp, 120
	ori	$a0, $zero, 1
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
.Ltmp2703:
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2704:
	ori	$s1, $zero, 1
.LBB100_70:                             # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB100_72
# %bb.71:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i143
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB100_72:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit145
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a0, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a0, $a1, .LBB100_6
# %bb.73:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i146
                                        #   in Loop: Header=BB100_7 Depth=2
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB100_6
	.p2align	4, , 16
.LBB100_74:                             #   in Loop: Header=BB100_3 Depth=1
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	andi	$a0, $a0, 1
	bnez	$a0, .LBB100_78
# %bb.75:                               #   in Loop: Header=BB100_3 Depth=1
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $a0, 0
	ld.d	$a0, $a0, -24
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	ldx.d	$s2, $a1, $a0
	beqz	$s2, .LBB100_79
# %bb.76:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB100_3 Depth=1
	ld.bu	$a0, $s2, 56
	bnez	$a0, .LBB100_1
# %bb.77:                               #   in Loop: Header=BB100_3 Depth=1
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s2, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s2
	jirl	$ra, $a2, 0
	b	.LBB100_2
.LBB100_78:
	ld.d	$s8, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 216                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 224                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 232                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 240
	ret
.LBB100_79:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB100_80:
.Ltmp2705:
	b	.LBB100_82
.LBB100_81:
.Ltmp2702:
.LBB100_82:
	move	$fp, $a0
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB100_85
	b	.LBB100_88
.LBB100_83:
.Ltmp2720:
	ld.d	$a2, $sp, 56
	move	$fp, $a0
	addi.d	$a0, $sp, 72
	bne	$a2, $a0, .LBB100_87
# %bb.84:
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	bne	$a0, $a1, .LBB100_88
.LBB100_85:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit151
	ld.d	$a0, $sp, 120
	addi.d	$a1, $sp, 136
	bne	$a0, $a1, .LBB100_89
.LBB100_86:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit154
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB100_87:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i119
	ld.d	$a0, $sp, 72
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 88
	addi.d	$a1, $sp, 104
	beq	$a0, $a1, .LBB100_85
.LBB100_88:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i149
	ld.d	$a1, $sp, 104
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 120
	addi.d	$a1, $sp, 136
	beq	$a0, $a1, .LBB100_86
.LBB100_89:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i152
	ld.d	$a1, $sp, 136
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end100:
	.size	_ZN2PP3Cmd20print_using_words_fmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end100-_ZN2PP3Cmd20print_using_words_fmERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table100:
.Lexception58:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end58-.Lcst_begin58
.Lcst_begin58:
	.uleb128 .Lfunc_begin58-.Lfunc_begin58  # >> Call Site 1 <<
	.uleb128 .Ltmp2700-.Lfunc_begin58       #   Call between .Lfunc_begin58 and .Ltmp2700
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2700-.Lfunc_begin58       # >> Call Site 2 <<
	.uleb128 .Ltmp2701-.Ltmp2700            #   Call between .Ltmp2700 and .Ltmp2701
	.uleb128 .Ltmp2702-.Lfunc_begin58       #     jumps to .Ltmp2702
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2701-.Lfunc_begin58       # >> Call Site 3 <<
	.uleb128 .Ltmp2706-.Ltmp2701            #   Call between .Ltmp2701 and .Ltmp2706
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2706-.Lfunc_begin58       # >> Call Site 4 <<
	.uleb128 .Ltmp2719-.Ltmp2706            #   Call between .Ltmp2706 and .Ltmp2719
	.uleb128 .Ltmp2720-.Lfunc_begin58       #     jumps to .Ltmp2720
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2719-.Lfunc_begin58       # >> Call Site 5 <<
	.uleb128 .Ltmp2703-.Ltmp2719            #   Call between .Ltmp2719 and .Ltmp2703
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2703-.Lfunc_begin58       # >> Call Site 6 <<
	.uleb128 .Ltmp2704-.Ltmp2703            #   Call between .Ltmp2703 and .Ltmp2704
	.uleb128 .Ltmp2705-.Lfunc_begin58       #     jumps to .Ltmp2705
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2704-.Lfunc_begin58       # >> Call Site 7 <<
	.uleb128 .Lfunc_end100-.Ltmp2704        #   Call between .Ltmp2704 and .Lfunc_end100
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end58:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_ZN2PP3Cmd21print_original_stringERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd21print_original_stringERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd21print_original_stringERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd21print_original_stringERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd21print_original_stringERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	ld.d	$a3, $a0, 48
	ld.d	$a2, $a0, 56
	addi.d	$a0, $a1, 16
	move	$a1, $a3
	pcaddu18i	$t8, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jr	$t8
.Lfunc_end101:
	.size	_ZN2PP3Cmd21print_original_stringERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, .Lfunc_end101-_ZN2PP3Cmd21print_original_stringERNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN2PP3Cmd17debug_print_wordsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN2PP3Cmd17debug_print_wordsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	5
	.type	_ZN2PP3Cmd17debug_print_wordsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN2PP3Cmd17debug_print_wordsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN2PP3Cmd17debug_print_wordsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception59
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	ld.d	$a3, $a1, 0
	ld.d	$a2, $a1, 8
	move	$fp, $a0
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$a0, $a0, %got_pc_lo12(_ZSt4cout)
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	ld.d	$a1, $a0, 0
	ld.d	$a1, $a1, -24
	add.d	$a1, $a0, $a1
	ld.d	$s0, $a1, 240
	beqz	$s0, .LBB102_22
# %bb.1:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	ld.bu	$a1, $s0, 56
	beqz	$a1, .LBB102_3
# %bb.2:
	ld.bu	$a1, $s0, 67
	b	.LBB102_4
.LBB102_3:
	move	$s1, $a0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $s0
	jirl	$ra, $a2, 0
	move	$a1, $a0
	move	$a0, $s1
.LBB102_4:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	ext.w.b	$a1, $a1
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	pcalau12i	$a0, %got_pc_hi20(_ZSt4cout)
	ld.d	$s0, $a0, %got_pc_lo12(_ZSt4cout)
	pcalau12i	$a0, %pc_hi20(.L.str.22)
	addi.d	$a1, $a0, %pc_lo12(.L.str.22)
	ori	$a2, $zero, 4
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
	move	$s3, $zero
	move	$s4, $zero
	addi.d	$s2, $sp, 16
	ori	$s5, $zero, 3
	pcalau12i	$a0, %pc_hi20(.L.str.5)
	addi.d	$s1, $a0, %pc_lo12(.L.str.5)
	b	.LBB102_6
	.p2align	4, , 16
.LBB102_5:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB102_6 Depth=1
	addi.d	$s4, $s4, 1
	addi.d	$s3, $s3, 128
.LBB102_6:                              # =>This Inner Loop Header: Depth=1
	ld.d	$a1, $fp, 232
	ld.d	$a0, $fp, 200
	sub.d	$a2, $a1, $a0
	srli.d	$a2, $a2, 3
	sltu	$a1, $zero, $a1
	ld.d	$a3, $fp, 208
	ld.d	$a4, $fp, 216
	sub.d	$a2, $a2, $a1
	ld.d	$a5, $fp, 192
	ld.d	$a1, $fp, 176
	sub.d	$a3, $a3, $a4
	srli.d	$a3, $a3, 7
	alsl.d	$a2, $a2, $a3, 2
	sub.d	$a3, $a5, $a1
	srli.d	$a3, $a3, 7
	add.w	$a2, $a2, $a3
	bge	$s4, $a2, .LBB102_17
# %bb.7:                                #   in Loop: Header=BB102_6 Depth=1
	ld.d	$a2, $fp, 184
	sub.d	$a2, $a1, $a2
	srai.d	$a2, $a2, 7
	add.d	$a2, $s4, $a2
	bltz	$a2, .LBB102_10
# %bb.8:                                #   in Loop: Header=BB102_6 Depth=1
	bltu	$s5, $a2, .LBB102_11
# %bb.9:                                #   in Loop: Header=BB102_6 Depth=1
	add.d	$a1, $a1, $s3
	b	.LBB102_13
	.p2align	4, , 16
.LBB102_10:                             #   in Loop: Header=BB102_6 Depth=1
	srai.d	$a1, $a2, 2
	b	.LBB102_12
	.p2align	4, , 16
.LBB102_11:                             #   in Loop: Header=BB102_6 Depth=1
	srli.d	$a1, $a2, 2
.LBB102_12:                             #   in Loop: Header=BB102_6 Depth=1
	slli.d	$a3, $a1, 3
	ldx.d	$a0, $a0, $a3
	slli.d	$a1, $a1, 2
	sub.d	$a1, $a2, $a1
	slli.d	$a1, $a1, 7
	add.d	$a1, $a0, $a1
.LBB102_13:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EEixEm.exit
                                        #   in Loop: Header=BB102_6 Depth=1
	sltu	$a2, $zero, $s4
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZN2PP4Word16get_print_stringB5cxx11Eb)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	ld.d	$a2, $sp, 8
.Ltmp2721:
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2722:
# %bb.14:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        #   in Loop: Header=BB102_6 Depth=1
.Ltmp2723:
	ori	$a2, $zero, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l)
	jirl	$ra, $ra, 0
.Ltmp2724:
# %bb.15:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
                                        #   in Loop: Header=BB102_6 Depth=1
	ld.d	$a0, $sp, 0
	beq	$a0, $s2, .LBB102_5
# %bb.16:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB102_6 Depth=1
	ld.d	$a1, $sp, 16
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB102_5
.LBB102_17:
	ld.d	$a0, $s0, 0
	ld.d	$a0, $a0, -24
	add.d	$a0, $s0, $a0
	ld.d	$fp, $a0, 240
	beqz	$fp, .LBB102_22
# %bb.18:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i11
	ld.bu	$a0, $fp, 56
	beqz	$a0, .LBB102_20
# %bb.19:
	ld.bu	$a0, $fp, 67
	b	.LBB102_21
.LBB102_20:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNKSt5ctypeIcE13_M_widen_initEv)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	ld.d	$a2, $a0, 48
	ori	$a1, $zero, 10
	move	$a0, $fp
	jirl	$ra, $a2, 0
.LBB102_21:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit14
	pcalau12i	$a1, %got_pc_hi20(_ZSt4cout)
	ld.d	$a2, $a1, %got_pc_lo12(_ZSt4cout)
	ext.w.b	$a1, $a0
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZNSo3putEc)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZNSo5flushEv)
	jirl	$ra, $ra, 0
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB102_22:
	pcaddu18i	$ra, %call36(_ZSt16__throw_bad_castv)
	jirl	$ra, $ra, 0
.LBB102_23:
.Ltmp2725:
	ld.d	$a2, $sp, 0
	move	$fp, $a0
	beq	$a2, $s2, .LBB102_25
# %bb.24:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	ld.d	$a0, $sp, 16
	addi.d	$a1, $a0, 1
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB102_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end102:
	.size	_ZN2PP3Cmd17debug_print_wordsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end102-_ZN2PP3Cmd17debug_print_wordsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table102:
.Lexception59:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end59-.Lcst_begin59
.Lcst_begin59:
	.uleb128 .Lfunc_begin59-.Lfunc_begin59  # >> Call Site 1 <<
	.uleb128 .Ltmp2721-.Lfunc_begin59       #   Call between .Lfunc_begin59 and .Ltmp2721
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2721-.Lfunc_begin59       # >> Call Site 2 <<
	.uleb128 .Ltmp2724-.Ltmp2721            #   Call between .Ltmp2721 and .Ltmp2724
	.uleb128 .Ltmp2725-.Lfunc_begin59       #     jumps to .Ltmp2725
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2724-.Lfunc_begin59       # >> Call Site 3 <<
	.uleb128 .Lfunc_end102-.Ltmp2724        #   Call between .Ltmp2724 and .Lfunc_end102
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end59:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm
	.p2align	5
	.type	_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm
.Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception60
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	st.d	$s3, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	move	$s0, $a1
	move	$fp, $a0
	srli.d	$a0, $a1, 2
	ori	$a1, $zero, 5
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	addi.d	$s1, $a1, 3
	addi.w	$a1, $zero, -12
	lu52i.d	$a2, $a1, 1023
	st.d	$s1, $fp, 8
	bgeu	$s0, $a2, .LBB103_5
# %bb.1:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE15_M_allocate_mapEm.exit
	addi.d	$s2, $a0, 1
	slli.d	$a0, $s1, 3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $fp, 0
	sub.d	$a1, $s1, $s2
	slli.d	$a1, $a1, 2
	bstrins.d	$a1, $zero, 2, 0
	add.d	$s1, $a0, $a1
	alsl.d	$s3, $s2, $s1, 3
	move	$s2, $s1
	.p2align	4, , 16
.LBB103_2:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp2726:
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2727:
# %bb.3:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB103_2 Depth=1
	st.d	$a0, $s2, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB103_2
# %bb.4:                                # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE15_M_create_nodesEPPS1_S5_.exit
	ld.d	$a0, $s1, 0
	st.d	$s1, $fp, 40
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	ld.d	$a1, $s3, -8
	st.d	$a0, $fp, 24
	addi.d	$a2, $s3, -8
	st.d	$a2, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 64
	st.d	$a0, $fp, 16
	andi	$a0, $s0, 3
	slli.d	$a0, $a0, 7
	add.d	$a0, $a1, $a0
	st.d	$a0, $fp, 48
	ld.d	$s3, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.LBB103_5:
	lu52i.d	$a0, $a1, 2047
	bltu	$s0, $a0, .LBB103_7
# %bb.6:                                # %.noexc.i
	pcaddu18i	$ra, %call36(_ZSt28__throw_bad_array_new_lengthv)
	jirl	$ra, $ra, 0
.LBB103_7:                              # %.noexc3.i
	pcaddu18i	$ra, %call36(_ZSt17__throw_bad_allocv)
	jirl	$ra, $ra, 0
.LBB103_8:
.Ltmp2728:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	bgeu	$s1, $s2, .LBB103_10
	.p2align	4, , 16
.LBB103_9:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 8
	bltu	$s1, $s2, .LBB103_9
.LBB103_10:                             # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE16_M_destroy_nodesEPPS1_S5_.exit.i
.Ltmp2729:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp2730:
# %bb.11:
.LBB103_12:
.Ltmp2731:
	move	$s0, $a0
.Ltmp2732:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp2733:
# %bb.13:                               # %.body
	move	$a0, $s0
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 8
	ld.d	$a0, $fp, 0
	slli.d	$a1, $a1, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 0
.Ltmp2735:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp2736:
# %bb.14:
.LBB103_15:
.Ltmp2737:
	move	$fp, $a0
.Ltmp2738:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp2739:
# %bb.16:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB103_17:
.Ltmp2740:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.LBB103_18:
.Ltmp2734:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end103:
	.size	_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm, .Lfunc_end103-_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table103:
.Lexception60:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end60-.Lcst_begin60
.Lcst_begin60:
	.uleb128 .Lfunc_begin60-.Lfunc_begin60  # >> Call Site 1 <<
	.uleb128 .Ltmp2726-.Lfunc_begin60       #   Call between .Lfunc_begin60 and .Ltmp2726
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2726-.Lfunc_begin60       # >> Call Site 2 <<
	.uleb128 .Ltmp2727-.Ltmp2726            #   Call between .Ltmp2726 and .Ltmp2727
	.uleb128 .Ltmp2728-.Lfunc_begin60       #     jumps to .Ltmp2728
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2727-.Lfunc_begin60       # >> Call Site 3 <<
	.uleb128 .Ltmp2729-.Ltmp2727            #   Call between .Ltmp2727 and .Ltmp2729
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2729-.Lfunc_begin60       # >> Call Site 4 <<
	.uleb128 .Ltmp2730-.Ltmp2729            #   Call between .Ltmp2729 and .Ltmp2730
	.uleb128 .Ltmp2731-.Lfunc_begin60       #     jumps to .Ltmp2731
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2732-.Lfunc_begin60       # >> Call Site 5 <<
	.uleb128 .Ltmp2733-.Ltmp2732            #   Call between .Ltmp2732 and .Ltmp2733
	.uleb128 .Ltmp2734-.Lfunc_begin60       #     jumps to .Ltmp2734
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2733-.Lfunc_begin60       # >> Call Site 6 <<
	.uleb128 .Ltmp2735-.Ltmp2733            #   Call between .Ltmp2733 and .Ltmp2735
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2735-.Lfunc_begin60       # >> Call Site 7 <<
	.uleb128 .Ltmp2736-.Ltmp2735            #   Call between .Ltmp2735 and .Ltmp2736
	.uleb128 .Ltmp2737-.Lfunc_begin60       #     jumps to .Ltmp2737
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2738-.Lfunc_begin60       # >> Call Site 8 <<
	.uleb128 .Ltmp2739-.Ltmp2738            #   Call between .Ltmp2738 and .Ltmp2739
	.uleb128 .Ltmp2740-.Lfunc_begin60       #     jumps to .Ltmp2740
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2739-.Lfunc_begin60       # >> Call Site 9 <<
	.uleb128 .Lfunc_end103-.Ltmp2739        #   Call between .Ltmp2739 and .Lfunc_end103
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end60:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase3:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	5
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	addi.d	$sp, $sp, -16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	pcaddu18i	$ra, %call36(_ZSt9terminatev)
	jirl	$ra, $ra, 0
.Lfunc_end104:
	.size	__clang_call_terminate, .Lfunc_end104-__clang_call_terminate
                                        # -- End function
	.section	.text._ZN2PP8VariableC2ERKS0_,"axG",@progbits,_ZN2PP8VariableC2ERKS0_,comdat
	.weak	_ZN2PP8VariableC2ERKS0_         # -- Begin function _ZN2PP8VariableC2ERKS0_
	.p2align	5
	.type	_ZN2PP8VariableC2ERKS0_,@function
_ZN2PP8VariableC2ERKS0_:                # @_ZN2PP8VariableC2ERKS0_
.Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception61
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s0, $a1
	move	$fp, $a0
	addi.d	$s4, $a0, 16
	st.d	$s4, $a0, 0
	ld.d	$a1, $a1, 8
	ld.d	$s1, $s0, 0
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	move	$a0, $s4
	bltu	$a1, $a2, .LBB105_2
# %bb.1:                                # %.noexc.i
	addi.d	$a1, $sp, 0
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
	ld.d	$a1, $sp, 0
	st.d	$a0, $fp, 0
	st.d	$a1, $fp, 16
.LBB105_2:                              # %._crit_edge.i.i
	addi.w	$s5, $zero, -1
	beq	$a1, $s5, .LBB105_6
# %bb.3:                                # %._crit_edge.i.i
	bnez	$a1, .LBB105_5
# %bb.4:
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB105_6
.LBB105_5:
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB105_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 8
	addi.d	$s1, $fp, 32
	addi.d	$a1, $s0, 32
.Ltmp2741:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_)
	jirl	$ra, $ra, 0
.Ltmp2742:
# %bb.7:
	ld.w	$a0, $s0, 64
	st.w	$a0, $fp, 64
	ld.d	$a0, $s0, 56
	st.d	$a0, $fp, 56
	ld.d	$a0, $s0, 80
	ld.d	$a1, $s0, 72
	sub.d	$s3, $a0, $a1
	st.d	$zero, $fp, 88
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 72
	beq	$a0, $a1, .LBB105_10
# %bb.8:                                # %_ZNSt15__new_allocatorIiE8allocateEmPKv.exit.i.i.i.i
.Ltmp2744:
	move	$a0, $s3
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
.Ltmp2745:
# %bb.9:
	move	$s2, $a0
	b	.LBB105_11
.LBB105_10:
	move	$s2, $zero
.LBB105_11:                             # %.noexc
	st.d	$s2, $fp, 72
	st.d	$s2, $fp, 80
	add.d	$a0, $s2, $s3
	st.d	$a0, $fp, 88
	ld.d	$a1, $s0, 72
	ld.d	$a0, $s0, 80
	sub.d	$s3, $a0, $a1
	blez	$s3, .LBB105_13
# %bb.12:
	move	$a0, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	add.d	$s2, $s2, $s3
.LBB105_13:
	st.d	$s2, $fp, 80
	ld.h	$a0, $s0, 96
	st.h	$a0, $fp, 96
	addi.d	$s2, $fp, 120
	st.d	$s2, $fp, 104
	ld.d	$a1, $s0, 112
	ld.d	$s0, $s0, 104
	ori	$a0, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a0, .LBB105_16
# %bb.14:                               # %.noexc.i13
.Ltmp2747:
	addi.d	$s6, $fp, 72
	addi.d	$s3, $fp, 104
	addi.d	$a1, $sp, 0
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2748:
# %bb.15:                               # %.noexc14
	ld.d	$a1, $sp, 0
	st.d	$a0, $s3, 0
	st.d	$a1, $s2, 0
	move	$s2, $a0
.LBB105_16:                             # %._crit_edge.i.i12
	beq	$a1, $s5, .LBB105_20
# %bb.17:                               # %._crit_edge.i.i12
	bnez	$a1, .LBB105_19
# %bb.18:
	ld.b	$a0, $s0, 0
	st.b	$a0, $s2, 0
	b	.LBB105_20
.LBB105_19:
	addi.d	$a2, $a1, 1
	move	$a0, $s2
	move	$a1, $s0
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB105_20:
	ld.d	$a0, $sp, 0
	st.d	$a0, $fp, 112
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB105_21:
.Ltmp2749:
	ld.d	$a2, $s6, 0
	move	$s0, $a0
	beqz	$a2, .LBB105_24
# %bb.22:
	ld.d	$a0, $fp, 88
	sub.d	$a1, $a0, $a2
	move	$a0, $a2
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB105_24
.LBB105_23:
.Ltmp2746:
	move	$s0, $a0
.LBB105_24:                             # %_ZNSt6vectorIiSaIiEED2Ev.exit
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev)
	jirl	$ra, $ra, 0
	b	.LBB105_26
.LBB105_25:
.Ltmp2743:
	move	$s0, $a0
.LBB105_26:
	ld.d	$a0, $fp, 0
	beq	$a0, $s4, .LBB105_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $s4, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB105_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end105:
	.size	_ZN2PP8VariableC2ERKS0_, .Lfunc_end105-_ZN2PP8VariableC2ERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZN2PP8VariableC2ERKS0_,"aG",@progbits,_ZN2PP8VariableC2ERKS0_,comdat
	.p2align	2, 0x0
GCC_except_table105:
.Lexception61:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end61-.Lcst_begin61
.Lcst_begin61:
	.uleb128 .Lfunc_begin61-.Lfunc_begin61  # >> Call Site 1 <<
	.uleb128 .Ltmp2741-.Lfunc_begin61       #   Call between .Lfunc_begin61 and .Ltmp2741
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2741-.Lfunc_begin61       # >> Call Site 2 <<
	.uleb128 .Ltmp2742-.Ltmp2741            #   Call between .Ltmp2741 and .Ltmp2742
	.uleb128 .Ltmp2743-.Lfunc_begin61       #     jumps to .Ltmp2743
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2744-.Lfunc_begin61       # >> Call Site 3 <<
	.uleb128 .Ltmp2745-.Ltmp2744            #   Call between .Ltmp2744 and .Ltmp2745
	.uleb128 .Ltmp2746-.Lfunc_begin61       #     jumps to .Ltmp2746
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2745-.Lfunc_begin61       # >> Call Site 4 <<
	.uleb128 .Ltmp2747-.Ltmp2745            #   Call between .Ltmp2745 and .Ltmp2747
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2747-.Lfunc_begin61       # >> Call Site 5 <<
	.uleb128 .Ltmp2748-.Ltmp2747            #   Call between .Ltmp2747 and .Ltmp2748
	.uleb128 .Ltmp2749-.Lfunc_begin61       #     jumps to .Ltmp2749
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2748-.Lfunc_begin61       # >> Call Site 6 <<
	.uleb128 .Lfunc_end105-.Ltmp2748        #   Call between .Ltmp2748 and .Lfunc_end105
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end61:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
.Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception62
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	move	$s1, $a1
	ld.d	$a1, $a1, 8
	ld.d	$a2, $s1, 0
	move	$fp, $a0
	sub.d	$s2, $a1, $a2
	st.d	$zero, $a0, 16
	vrepli.b	$vr0, 0
	vst	$vr0, $a0, 0
	beq	$a1, $a2, .LBB106_2
# %bb.1:                                # %_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv.exit.i.i.i
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s0, $a0
	b	.LBB106_3
.LBB106_2:
	move	$s0, $zero
.LBB106_3:
	st.d	$s0, $fp, 0
	st.d	$s0, $fp, 8
	add.d	$a0, $s0, $s2
	st.d	$a0, $fp, 16
	ld.d	$s2, $s1, 0
	ld.d	$s3, $s1, 8
	st.d	$s0, $sp, 16
	st.d	$s0, $sp, 0
	addi.d	$a0, $sp, 16
	st.d	$a0, $sp, 8
	beq	$s2, $s3, .LBB106_13
# %bb.4:                                # %.lr.ph.i.i.i.preheader
	ori	$s4, $zero, 16
	addi.w	$s5, $zero, -1
	b	.LBB106_7
	.p2align	4, , 16
.LBB106_5:                              #   in Loop: Header=BB106_7 Depth=1
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB106_6:                              #   in Loop: Header=BB106_7 Depth=1
	ld.d	$a0, $sp, 24
	ld.d	$a1, $sp, 16
	st.d	$a0, $s0, 8
	addi.d	$s2, $s2, 32
	addi.d	$s0, $a1, 32
	st.d	$s0, $sp, 16
	beq	$s2, $s3, .LBB106_13
.LBB106_7:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addi.d	$a0, $s0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $s2, 8
	ld.d	$s1, $s2, 0
	st.d	$a1, $sp, 24
	bltu	$a1, $s4, .LBB106_10
# %bb.8:                                # %.noexc.i.i.i.i.i
                                        #   in Loop: Header=BB106_7 Depth=1
.Ltmp2750:
	addi.d	$a1, $sp, 24
	move	$a0, $s0
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2751:
# %bb.9:                                # %.noexc.i.i.i
                                        #   in Loop: Header=BB106_7 Depth=1
	ld.d	$a1, $sp, 24
	st.d	$a0, $s0, 0
	st.d	$a1, $s0, 16
.LBB106_10:                             # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB106_7 Depth=1
	beq	$a1, $s5, .LBB106_6
# %bb.11:                               # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB106_7 Depth=1
	bnez	$a1, .LBB106_5
# %bb.12:                               #   in Loop: Header=BB106_7 Depth=1
	ld.b	$a1, $s1, 0
	st.b	$a1, $a0, 0
	b	.LBB106_6
.LBB106_13:                             # %.loopexit
	st.d	$s0, $fp, 8
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB106_14:                             # %.body
.Ltmp2752:
	move	$s0, $a0
	addi.d	$a0, $sp, 0
	pcaddu18i	$ra, %call36(_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 0
	beqz	$a0, .LBB106_16
# %bb.15:
	ld.d	$a1, $fp, 16
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB106_16:                             # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end106:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_, .Lfunc_end106-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,comdat
	.p2align	2, 0x0
GCC_except_table106:
.Lexception62:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end62-.Lcst_begin62
.Lcst_begin62:
	.uleb128 .Lfunc_begin62-.Lfunc_begin62  # >> Call Site 1 <<
	.uleb128 .Ltmp2750-.Lfunc_begin62       #   Call between .Lfunc_begin62 and .Ltmp2750
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2750-.Lfunc_begin62       # >> Call Site 2 <<
	.uleb128 .Ltmp2751-.Ltmp2750            #   Call between .Ltmp2750 and .Ltmp2751
	.uleb128 .Ltmp2752-.Lfunc_begin62       #     jumps to .Ltmp2752
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2751-.Lfunc_begin62       # >> Call Site 3 <<
	.uleb128 .Lfunc_end106-.Ltmp2751        #   Call between .Ltmp2751 and .Lfunc_end106
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end62:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,"axG",@progbits,_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,comdat
	.weak	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev # -- Begin function _ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.p2align	5
	.type	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,@function
_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev: # @_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
.Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception63
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	ld.d	$a1, $a0, 8
	bnez	$a1, .LBB107_2
.LBB107_1:
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.LBB107_2:
	ld.d	$a0, $a0, 0
	ld.d	$a1, $a1, 0
.Ltmp2753:
	pcaddu18i	$ra, %call36(_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_)
	jirl	$ra, $ra, 0
.Ltmp2754:
	b	.LBB107_1
.LBB107_3:
.Ltmp2755:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end107:
	.size	_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev, .Lfunc_end107-_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,"aG",@progbits,_ZNSt19_UninitDestroyGuardIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table107:
.Lexception63:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end63-.Lcst_begin63
.Lcst_begin63:
	.uleb128 .Ltmp2753-.Lfunc_begin63       # >> Call Site 1 <<
	.uleb128 .Ltmp2754-.Ltmp2753            #   Call between .Ltmp2753 and .Ltmp2754
	.uleb128 .Ltmp2755-.Lfunc_begin63       #     jumps to .Ltmp2755
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2754-.Lfunc_begin63       # >> Call Site 2 <<
	.uleb128 .Lfunc_end107-.Ltmp2754        #   Call between .Ltmp2754 and .Lfunc_end107
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end63:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,"axG",@progbits,_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,comdat
	.weak	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ # -- Begin function _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.p2align	5
	.type	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_,@function
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_: # @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.cfi_startproc
# %bb.0:
	beq	$a0, $a1, .LBB108_6
# %bb.1:                                # %.lr.ph.preheader
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	move	$fp, $a1
	addi.d	$s0, $a0, 16
	b	.LBB108_3
	.p2align	4, , 16
.LBB108_2:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit
                                        #   in Loop: Header=BB108_3 Depth=1
	addi.d	$a0, $s0, 16
	addi.d	$s0, $s0, 32
	beq	$a0, $fp, .LBB108_5
.LBB108_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s0, -16
	beq	$s0, $a0, .LBB108_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB108_3 Depth=1
	ld.d	$a1, $s0, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB108_2
.LBB108_5:
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
.LBB108_6:                              # %._crit_edge
	ret
.Lfunc_end108:
	.size	_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_, .Lfunc_end108-_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_: # @_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -48
	.cfi_def_cfa_offset 48
	st.d	$ra, $sp, 40                    # 8-byte Folded Spill
	st.d	$fp, $sp, 32                    # 8-byte Folded Spill
	st.d	$s0, $sp, 24                    # 8-byte Folded Spill
	st.d	$s1, $sp, 16                    # 8-byte Folded Spill
	st.d	$s2, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$fp, $a2
	move	$s0, $a1
	ld.d	$a1, $a1, 24
	ld.d	$a0, $a2, 24
	addi.d	$s2, $a1, 8
	bgeu	$s2, $a0, .LBB109_3
	.p2align	4, , 16
.LBB109_1:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$s1, $s2, 0
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s1, 128
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s1, 256
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$a0, $s1, 384
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 24
	addi.d	$s2, $s2, 8
	bltu	$s2, $a0, .LBB109_1
# %bb.2:                                # %._crit_edge.loopexit
	ld.d	$a1, $s0, 24
.LBB109_3:                              # %._crit_edge
	ld.d	$s1, $s0, 0
	beq	$a1, $a0, .LBB109_8
# %bb.4:
	ld.d	$s0, $s0, 16
	beq	$s1, $s0, .LBB109_6
	.p2align	4, , 16
.LBB109_5:                              # %.lr.ph.i6
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $s0, .LBB109_5
.LBB109_6:                              # %_ZSt8_DestroyIPN2PP4WordEEvT_S3_.exit9
	ld.d	$s0, $fp, 8
	ld.d	$fp, $fp, 0
	beq	$s0, $fp, .LBB109_10
	.p2align	4, , 16
.LBB109_7:                              # %.lr.ph.i11
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 128
	bne	$s0, $fp, .LBB109_7
	b	.LBB109_10
.LBB109_8:
	ld.d	$fp, $fp, 0
	beq	$s1, $fp, .LBB109_10
	.p2align	4, , 16
.LBB109_9:                              # %.lr.ph.i16
                                        # =>This Inner Loop Header: Depth=1
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s1, $s1, 128
	bne	$s1, $fp, .LBB109_9
.LBB109_10:                             # %_ZSt8_DestroyIPN2PP4WordEEvT_S3_.exit14
	ld.d	$s2, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s1, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 24                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 32                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 40                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 48
	ret
.Lfunc_end109:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_, .Lfunc_end109-_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_: # @_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
.Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception64
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sltu	$a2, $zero, $s1
	ld.d	$a3, $fp, 48
	ld.d	$a4, $fp, 56
	sub.d	$a0, $a0, $a2
	ld.d	$a2, $fp, 32
	ld.d	$a5, $fp, 16
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a0, $a0, $a3, 2
	sub.d	$a2, $a2, $a5
	srai.d	$a2, $a2, 7
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 15
	beq	$a0, $a2, .LBB110_5
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB110_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB110_3:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a0, $fp, 48
.Ltmp2756:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2757:
# %bb.4:                                # %_ZNSt16allocator_traitsISaIN2PP4WordEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_.exit
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	st.d	$a1, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB110_5:
	pcalau12i	$a0, %pc_hi20(.L.str.220)
	addi.d	$a0, $a0, %pc_lo12(.L.str.220)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB110_6:
.Ltmp2758:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 72
	ld.d	$a0, $a0, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp2759:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp2760:
# %bb.7:
.LBB110_8:
.Ltmp2761:
	move	$fp, $a0
.Ltmp2762:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp2763:
# %bb.9:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB110_10:
.Ltmp2764:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end110:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_, .Lfunc_end110-_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJRKS1_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table110:
.Lexception64:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end64-.Lcst_begin64
.Lcst_begin64:
	.uleb128 .Lfunc_begin64-.Lfunc_begin64  # >> Call Site 1 <<
	.uleb128 .Ltmp2756-.Lfunc_begin64       #   Call between .Lfunc_begin64 and .Ltmp2756
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2756-.Lfunc_begin64       # >> Call Site 2 <<
	.uleb128 .Ltmp2757-.Ltmp2756            #   Call between .Ltmp2756 and .Ltmp2757
	.uleb128 .Ltmp2758-.Lfunc_begin64       #     jumps to .Ltmp2758
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2757-.Lfunc_begin64       # >> Call Site 3 <<
	.uleb128 .Ltmp2759-.Ltmp2757            #   Call between .Ltmp2757 and .Ltmp2759
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2759-.Lfunc_begin64       # >> Call Site 4 <<
	.uleb128 .Ltmp2760-.Ltmp2759            #   Call between .Ltmp2759 and .Ltmp2760
	.uleb128 .Ltmp2761-.Lfunc_begin64       #     jumps to .Ltmp2761
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2762-.Lfunc_begin64       # >> Call Site 5 <<
	.uleb128 .Ltmp2763-.Ltmp2762            #   Call between .Ltmp2762 and .Ltmp2763
	.uleb128 .Ltmp2764-.Lfunc_begin64       #     jumps to .Ltmp2764
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2763-.Lfunc_begin64       # >> Call Site 6 <<
	.uleb128 .Lfunc_end110-.Ltmp2763        #   Call between .Ltmp2763 and .Lfunc_end110
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end64:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb: # @_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB111_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB111_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB111_12
# %bb.3:
	move	$a0, $s0
	b	.LBB111_8
.LBB111_4:                              # %_ZNSt11_Deque_baseIN2PP4WordESaIS1_EE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB111_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB111_6:                              # %_ZSt4copyIPPN2PP4WordES3_ET0_T_S5_S4_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB111_9
.LBB111_7:                              # %_ZSt9__advanceIPPN2PP4WordElEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB111_14
.LBB111_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB111_9:                              # %_ZSt4copyIPPN2PP4WordES3_ET0_T_S5_S4_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB111_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB111_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB111_6
.LBB111_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB111_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB111_9
.LBB111_14:                             # %_ZSt9__advanceIPPN2PP4WordElEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB111_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB111_9
.Lfunc_end111:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb, .Lfunc_end111-_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E: # @_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -176
	.cfi_def_cfa_offset 176
	st.d	$ra, $sp, 168                   # 8-byte Folded Spill
	st.d	$fp, $sp, 160                   # 8-byte Folded Spill
	st.d	$s0, $sp, 152                   # 8-byte Folded Spill
	st.d	$s1, $sp, 144                   # 8-byte Folded Spill
	st.d	$s2, $sp, 136                   # 8-byte Folded Spill
	st.d	$s3, $sp, 128                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	ld.d	$a5, $a2, 0
	ld.d	$a4, $a2, 8
	ld.d	$a3, $a2, 16
	ld.d	$a2, $a2, 24
	addi.d	$a6, $a5, 128
	move	$s0, $a1
	move	$fp, $a0
	move	$t0, $a4
	move	$a7, $a3
	move	$a1, $a2
	bne	$a6, $a3, .LBB112_2
# %bb.1:
	ld.d	$a6, $a2, 8
	addi.d	$a1, $a2, 8
	addi.d	$a7, $a6, 512
	move	$t0, $a6
.LBB112_2:                              # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EppEv.exit
	ld.d	$t2, $s0, 40
	ld.d	$s1, $s0, 16
	ld.d	$t1, $s0, 32
	sub.d	$a0, $a2, $t2
	srai.d	$a0, $a0, 3
	sltu	$t3, $zero, $a2
	sub.d	$a0, $a0, $t3
	sub.d	$t3, $a5, $a4
	srai.d	$t3, $t3, 7
	sub.d	$t5, $t1, $s1
	ld.d	$t4, $s0, 72
	srai.d	$t5, $t5, 7
	add.d	$t3, $t5, $t3
	alsl.d	$s2, $a0, $t3, 2
	sub.d	$t6, $t4, $t2
	ld.d	$t3, $s0, 48
	ld.d	$a0, $s0, 56
	srai.d	$t6, $t6, 3
	sltu	$t7, $zero, $t4
	sub.d	$t6, $t6, $t7
	sub.d	$t7, $t3, $a0
	srai.d	$t7, $t7, 7
	add.d	$t5, $t7, $t5
	alsl.d	$t5, $t6, $t5, 2
	srli.d	$t5, $t5, 1
	bgeu	$s2, $t5, .LBB112_7
# %bb.3:
	beq	$a5, $s1, .LBB112_5
# %bb.4:
	ld.d	$a0, $s0, 24
	st.d	$s1, $sp, 96
	st.d	$a0, $sp, 104
	st.d	$t1, $sp, 112
	st.d	$t2, $sp, 120
	st.d	$a5, $sp, 64
	st.d	$a4, $sp, 72
	st.d	$a3, $sp, 80
	st.d	$a2, $sp, 88
	st.d	$a6, $sp, 32
	st.d	$t0, $sp, 40
	st.d	$a7, $sp, 48
	st.d	$a1, $sp, 56
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 96
	addi.d	$a2, $sp, 64
	addi.d	$a3, $sp, 32
	pcaddu18i	$ra, %call36(_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_)
	jirl	$ra, $ra, 0
	ld.d	$s1, $s0, 16
	ld.d	$t1, $s0, 32
.LBB112_5:
	addi.d	$s3, $t1, -128
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	beq	$s1, $s3, .LBB112_11
# %bb.6:
	ld.d	$a0, $s0, 16
	addi.d	$a0, $a0, 128
	st.d	$a0, $s0, 16
	b	.LBB112_14
.LBB112_7:
	beq	$a6, $t3, .LBB112_9
# %bb.8:
	ld.d	$t1, $s0, 64
	st.d	$a6, $sp, 96
	st.d	$t0, $sp, 104
	st.d	$a7, $sp, 112
	st.d	$a1, $sp, 120
	st.d	$t3, $sp, 64
	st.d	$a0, $sp, 72
	st.d	$t1, $sp, 80
	st.d	$t4, $sp, 88
	st.d	$a5, $sp, 32
	st.d	$a4, $sp, 40
	st.d	$a3, $sp, 48
	st.d	$a2, $sp, 56
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 96
	addi.d	$a2, $sp, 64
	addi.d	$a3, $sp, 32
	pcaddu18i	$ra, %call36(_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_)
	jirl	$ra, $ra, 0
	ld.d	$t3, $s0, 48
	ld.d	$a0, $s0, 56
.LBB112_9:
	beq	$t3, $a0, .LBB112_12
# %bb.10:
	addi.d	$a0, $t3, -128
	b	.LBB112_13
.LBB112_11:
	ld.d	$a0, $s0, 24
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a1, $a0, 8
	st.d	$a1, $s0, 40
	ld.d	$a0, $a0, 8
	st.d	$a0, $s0, 24
	addi.d	$a1, $a0, 512
	st.d	$a1, $s0, 32
	st.d	$a0, $s0, 16
	b	.LBB112_14
.LBB112_12:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s0, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s0, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s0, 64
	addi.d	$a0, $a0, 384
.LBB112_13:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE8pop_backEv.exit
	st.d	$a0, $s0, 48
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 16
.LBB112_14:
	vld	$vr0, $s0, 24
	ld.d	$a1, $s0, 24
	ld.d	$a2, $s0, 40
	vst	$vr0, $fp, 8
	sub.d	$a1, $a0, $a1
	srai.d	$a1, $a1, 7
	add.d	$a1, $a1, $s2
	st.d	$a2, $fp, 24
	bltz	$a1, .LBB112_17
# %bb.15:
	ori	$a3, $zero, 3
	bltu	$a3, $a1, .LBB112_18
# %bb.16:
	slli.d	$a1, $s2, 7
	add.d	$a0, $a0, $a1
	b	.LBB112_20
.LBB112_17:
	srai.d	$a0, $a1, 2
	b	.LBB112_19
.LBB112_18:
	srli.d	$a0, $a1, 2
.LBB112_19:
	slli.d	$a3, $a0, 3
	ldx.d	$a3, $a2, $a3
	alsl.d	$a2, $a0, $a2, 3
	st.d	$a2, $fp, 24
	st.d	$a3, $fp, 8
	addi.d	$a2, $a3, 512
	st.d	$a2, $fp, 16
	slli.d	$a0, $a0, 2
	sub.d	$a0, $a1, $a0
	slli.d	$a0, $a0, 7
	add.d	$a0, $a3, $a0
.LBB112_20:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
	st.d	$a0, $fp, 0
	ld.d	$s3, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 152                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 160                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 168                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 176
	ret
.Lfunc_end112:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E, .Lfunc_end112-_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,"axG",@progbits,_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,comdat
	.weak	_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_ # -- Begin function _ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.p2align	5
	.type	_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,@function
_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_: # @_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -272
	.cfi_def_cfa_offset 272
	st.d	$ra, $sp, 264                   # 8-byte Folded Spill
	st.d	$fp, $sp, 256                   # 8-byte Folded Spill
	st.d	$s0, $sp, 248                   # 8-byte Folded Spill
	st.d	$s1, $sp, 240                   # 8-byte Folded Spill
	st.d	$s2, $sp, 232                   # 8-byte Folded Spill
	st.d	$s3, $sp, 224                   # 8-byte Folded Spill
	st.d	$s4, $sp, 216                   # 8-byte Folded Spill
	st.d	$s5, $sp, 208                   # 8-byte Folded Spill
	st.d	$s6, $sp, 200                   # 8-byte Folded Spill
	st.d	$s7, $sp, 192                   # 8-byte Folded Spill
	st.d	$s8, $sp, 184                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s5, $a2
	ld.d	$a4, $a1, 24
	ld.d	$a2, $a2, 24
	st.d	$a0, $sp, 8                     # 8-byte Folded Spill
	beq	$a4, $a2, .LBB113_40
# %bb.1:
	st.d	$a1, $sp, 24                    # 8-byte Folded Spill
	ld.d	$a1, $s5, 8
	ld.d	$a0, $s5, 0
	ld.d	$s8, $a3, 0
	ld.d	$s6, $a3, 8
	ld.d	$a2, $a3, 16
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	st.d	$a3, $sp, 16                    # 8-byte Folded Spill
	ld.d	$a2, $a3, 24
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	sub.d	$a1, $a0, $a1
	srai.d	$fp, $a1, 7
	bgtz	$fp, .LBB113_20
.LBB113_2:                              # %_ZSt23__copy_move_backward_a1ILb1EPN2PP4WordES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	st.d	$s8, $a1, 0
	st.d	$s6, $a1, 8
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	st.d	$a0, $a1, 16
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	st.d	$a0, $a1, 24
	ld.d	$a0, $s5, 24
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a1, $a2, 24
	addi.d	$a3, $a0, -8
	bne	$a3, $a1, .LBB113_6
.LBB113_3:                              # %._crit_edge
	ld.d	$a1, $a2, 0
	ld.d	$a0, $a2, 16
	sub.d	$a1, $a0, $a1
	srai.d	$fp, $a1, 7
	blez	$fp, .LBB113_41
# %bb.4:                                # %.lr.ph.i8.preheader
	ori	$s5, $zero, 4
	b	.LBB113_31
	.p2align	4, , 16
.LBB113_5:                              # %_ZSt23__copy_move_backward_a1ILb1EPN2PP4WordES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit60
                                        #   in Loop: Header=BB113_6 Depth=1
	ld.d	$a1, $sp, 16                    # 8-byte Folded Reload
	st.d	$s8, $a1, 0
	st.d	$s6, $a1, 8
	ld.d	$a0, $sp, 40                    # 8-byte Folded Reload
	st.d	$a0, $a1, 16
	ld.d	$a0, $sp, 48                    # 8-byte Folded Reload
	st.d	$a0, $a1, 24
	ld.d	$a2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $a2, 24
	ld.d	$a3, $sp, 32                    # 8-byte Folded Reload
	addi.d	$a3, $a3, -8
	beq	$a3, $a0, .LBB113_3
.LBB113_6:                              # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB113_9 Depth 2
                                        #       Child Loop BB113_13 Depth 3
	st.d	$a3, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a0, $a3, 0
	addi.d	$a0, $a0, 512
	ori	$s1, $zero, 4
	b	.LBB113_9
	.p2align	4, , 16
.LBB113_7:                              #   in Loop: Header=BB113_9 Depth=2
	srai.d	$a1, $a0, 2
.LBB113_8:                              #   in Loop: Header=BB113_9 Depth=2
	slli.d	$a2, $a1, 3
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	ldx.d	$s6, $a3, $a2
	alsl.d	$a2, $a1, $a3, 3
	addi.d	$a3, $s6, 512
	st.d	$a3, $sp, 40                    # 8-byte Folded Spill
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$s8, $s6, $a0
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	sub.d	$s1, $s1, $fp
	move	$a0, $s7
	blez	$s1, .LBB113_5
.LBB113_9:                              #   Parent Loop BB113_6 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB113_13 Depth 3
	sub.d	$s4, $s8, $s6
	beq	$s8, $s6, .LBB113_11
# %bb.10:                               #   in Loop: Header=BB113_9 Depth=2
	srai.d	$a1, $s4, 7
	slt	$a2, $a1, $s1
	maskeqz	$a1, $a1, $a2
	masknez	$a2, $s1, $a2
	or	$fp, $a1, $a2
	move	$a1, $s8
	b	.LBB113_12
	.p2align	4, , 16
.LBB113_11:                             # %.thread.i59
                                        #   in Loop: Header=BB113_9 Depth=2
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
	sltui	$a2, $s1, 4
	ori	$a3, $zero, 4
	masknez	$a3, $a3, $a2
	maskeqz	$a2, $s1, $a2
	or	$fp, $a2, $a3
.LBB113_12:                             # %.lr.ph.i.preheader.i42
                                        #   in Loop: Header=BB113_9 Depth=2
	sub.d	$s0, $zero, $fp
	slli.d	$s5, $s0, 7
	slli.d	$a2, $fp, 7
	sub.d	$s7, $a0, $a2
	addi.d	$s2, $a1, -128
	addi.d	$s3, $a0, -128
	.p2align	4, , 16
.LBB113_13:                             # %.lr.ph.i.i46
                                        #   Parent Loop BB113_6 Depth=1
                                        #     Parent Loop BB113_9 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	addi.d	$a0, $sp, 56
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP4WordaSERKS0_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, -128
	addi.d	$s5, $s5, 128
	addi.d	$s3, $s3, -128
	bnez	$s5, .LBB113_13
# %bb.14:                               # %_ZSt23__copy_move_backward_a2ILb1EPN2PP4WordES2_ET1_T0_S4_S3_.exit.loopexit.i50
                                        #   in Loop: Header=BB113_9 Depth=2
	srai.d	$a0, $s4, 7
	sub.d	$a0, $a0, $fp
	bltz	$a0, .LBB113_7
# %bb.15:                               #   in Loop: Header=BB113_9 Depth=2
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB113_17
# %bb.16:                               #   in Loop: Header=BB113_9 Depth=2
	slli.d	$a0, $s0, 7
	add.d	$s8, $s8, $a0
	sub.d	$s1, $s1, $fp
	move	$a0, $s7
	bgtz	$s1, .LBB113_9
	b	.LBB113_5
	.p2align	4, , 16
.LBB113_17:                             #   in Loop: Header=BB113_9 Depth=2
	srli.d	$a1, $a0, 2
	b	.LBB113_8
	.p2align	4, , 16
.LBB113_18:                             #   in Loop: Header=BB113_20 Depth=1
	srai.d	$a1, $a0, 2
.LBB113_19:                             #   in Loop: Header=BB113_20 Depth=1
	slli.d	$a2, $a1, 3
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	ldx.d	$s6, $a3, $a2
	alsl.d	$a2, $a1, $a3, 3
	addi.d	$a3, $s6, 512
	st.d	$a3, $sp, 40                    # 8-byte Folded Spill
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$s8, $s6, $a0
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	sub.d	$fp, $fp, $s1
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	blez	$fp, .LBB113_2
.LBB113_20:                             # %.lr.ph.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB113_24 Depth 2
	sub.d	$s7, $s8, $s6
	beq	$s8, $s6, .LBB113_22
# %bb.21:                               #   in Loop: Header=BB113_20 Depth=1
	srai.d	$a1, $s7, 7
	slt	$a2, $a1, $fp
	maskeqz	$a1, $a1, $a2
	masknez	$a2, $fp, $a2
	or	$s1, $a1, $a2
	move	$a1, $s8
	b	.LBB113_23
	.p2align	4, , 16
.LBB113_22:                             # %.thread.i
                                        #   in Loop: Header=BB113_20 Depth=1
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
	sltui	$a2, $fp, 4
	ori	$a3, $zero, 4
	masknez	$a3, $a3, $a2
	maskeqz	$a2, $fp, $a2
	or	$s1, $a2, $a3
.LBB113_23:                             # %.lr.ph.i.preheader.i
                                        #   in Loop: Header=BB113_20 Depth=1
	sub.d	$s0, $zero, $s1
	slli.d	$s2, $s0, 7
	slli.d	$a2, $s1, 7
	sub.d	$a2, $a0, $a2
	st.d	$a2, $sp, 32                    # 8-byte Folded Spill
	addi.d	$s3, $a1, -128
	addi.d	$s4, $a0, -128
	.p2align	4, , 16
.LBB113_24:                             # %.lr.ph.i.i
                                        #   Parent Loop BB113_20 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a0, $sp, 56
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordaSERKS0_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, -128
	addi.d	$s2, $s2, 128
	addi.d	$s4, $s4, -128
	bnez	$s2, .LBB113_24
# %bb.25:                               # %_ZSt23__copy_move_backward_a2ILb1EPN2PP4WordES2_ET1_T0_S4_S3_.exit.loopexit.i
                                        #   in Loop: Header=BB113_20 Depth=1
	srai.d	$a0, $s7, 7
	sub.d	$a0, $a0, $s1
	bltz	$a0, .LBB113_18
# %bb.26:                               #   in Loop: Header=BB113_20 Depth=1
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB113_28
# %bb.27:                               #   in Loop: Header=BB113_20 Depth=1
	slli.d	$a0, $s0, 7
	add.d	$s8, $s8, $a0
	sub.d	$fp, $fp, $s1
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	bgtz	$fp, .LBB113_20
	b	.LBB113_2
	.p2align	4, , 16
.LBB113_28:                             #   in Loop: Header=BB113_20 Depth=1
	srli.d	$a1, $a0, 2
	b	.LBB113_19
	.p2align	4, , 16
.LBB113_29:                             #   in Loop: Header=BB113_31 Depth=1
	srai.d	$a1, $a0, 2
.LBB113_30:                             #   in Loop: Header=BB113_31 Depth=1
	slli.d	$a2, $a1, 3
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	ldx.d	$s6, $a3, $a2
	alsl.d	$a2, $a1, $a3, 3
	addi.d	$a3, $s6, 512
	st.d	$a3, $sp, 40                    # 8-byte Folded Spill
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$s8, $s6, $a0
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	sub.d	$fp, $fp, $s4
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	blez	$fp, .LBB113_41
.LBB113_31:                             # %.lr.ph.i8
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB113_35 Depth 2
	sub.d	$s7, $s8, $s6
	beq	$s8, $s6, .LBB113_33
# %bb.32:                               #   in Loop: Header=BB113_31 Depth=1
	srai.d	$a1, $s7, 7
	slt	$a2, $a1, $fp
	maskeqz	$a1, $a1, $a2
	masknez	$a2, $fp, $a2
	or	$s4, $a1, $a2
	move	$a1, $s8
	b	.LBB113_34
	.p2align	4, , 16
.LBB113_33:                             # %.thread.i31
                                        #   in Loop: Header=BB113_31 Depth=1
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
	sltui	$a2, $fp, 4
	masknez	$a3, $s5, $a2
	maskeqz	$a2, $fp, $a2
	or	$s4, $a2, $a3
.LBB113_34:                             # %.lr.ph.i.preheader.i14
                                        #   in Loop: Header=BB113_31 Depth=1
	sub.d	$s3, $zero, $s4
	slli.d	$s2, $s3, 7
	slli.d	$a2, $s4, 7
	sub.d	$a2, $a0, $a2
	st.d	$a2, $sp, 32                    # 8-byte Folded Spill
	addi.d	$s0, $a1, -128
	addi.d	$s1, $a0, -128
	.p2align	4, , 16
.LBB113_35:                             # %.lr.ph.i.i18
                                        #   Parent Loop BB113_31 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a0, $sp, 56
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordaSERKS0_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, -128
	addi.d	$s2, $s2, 128
	addi.d	$s1, $s1, -128
	bnez	$s2, .LBB113_35
# %bb.36:                               # %_ZSt23__copy_move_backward_a2ILb1EPN2PP4WordES2_ET1_T0_S4_S3_.exit.loopexit.i22
                                        #   in Loop: Header=BB113_31 Depth=1
	srai.d	$a0, $s7, 7
	sub.d	$a0, $a0, $s4
	bltz	$a0, .LBB113_29
# %bb.37:                               #   in Loop: Header=BB113_31 Depth=1
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB113_39
# %bb.38:                               #   in Loop: Header=BB113_31 Depth=1
	slli.d	$a0, $s3, 7
	add.d	$s8, $s8, $a0
	sub.d	$fp, $fp, $s4
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	bgtz	$fp, .LBB113_31
	b	.LBB113_41
	.p2align	4, , 16
.LBB113_39:                             #   in Loop: Header=BB113_31 Depth=1
	srli.d	$a1, $a0, 2
	b	.LBB113_30
.LBB113_40:
	ld.d	$a1, $a1, 0
	ld.d	$a0, $s5, 0
	ld.d	$s8, $a3, 0
	ld.d	$s6, $a3, 8
	ld.d	$a2, $a3, 16
	st.d	$a2, $sp, 40                    # 8-byte Folded Spill
	ld.d	$a2, $a3, 24
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	sub.d	$a1, $a0, $a1
	srai.d	$fp, $a1, 7
	bgtz	$fp, .LBB113_44
.LBB113_41:                             # %_ZSt23__copy_move_backward_a1ILb1EPN2PP4WordES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit32
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	st.d	$s8, $a0, 0
	st.d	$s6, $a0, 8
	ld.d	$a1, $sp, 40                    # 8-byte Folded Reload
	st.d	$a1, $a0, 16
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	st.d	$a1, $a0, 24
	ld.d	$s8, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 232                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 240                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 248                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 256                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 264                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 272
	ret
	.p2align	4, , 16
.LBB113_42:                             #   in Loop: Header=BB113_44 Depth=1
	srai.d	$a1, $a0, 2
.LBB113_43:                             #   in Loop: Header=BB113_44 Depth=1
	slli.d	$a2, $a1, 3
	ld.d	$a3, $sp, 48                    # 8-byte Folded Reload
	ldx.d	$s6, $a3, $a2
	alsl.d	$a2, $a1, $a3, 3
	addi.d	$a3, $s6, 512
	st.d	$a3, $sp, 40                    # 8-byte Folded Spill
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$s8, $s6, $a0
	st.d	$a2, $sp, 48                    # 8-byte Folded Spill
	sub.d	$fp, $fp, $s4
	move	$a0, $s7
	blez	$fp, .LBB113_41
.LBB113_44:                             # %.lr.ph.i64
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB113_48 Depth 2
	sub.d	$s2, $s8, $s6
	beq	$s8, $s6, .LBB113_46
# %bb.45:                               #   in Loop: Header=BB113_44 Depth=1
	srai.d	$a1, $s2, 7
	slt	$a2, $a1, $fp
	maskeqz	$a1, $a1, $a2
	masknez	$a2, $fp, $a2
	or	$s4, $a1, $a2
	move	$a1, $s8
	b	.LBB113_47
	.p2align	4, , 16
.LBB113_46:                             # %.thread.i87
                                        #   in Loop: Header=BB113_44 Depth=1
	ld.d	$a1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$a1, $a1, -8
	addi.d	$a1, $a1, 512
	sltui	$a2, $fp, 4
	ori	$a3, $zero, 4
	masknez	$a3, $a3, $a2
	maskeqz	$a2, $fp, $a2
	or	$s4, $a2, $a3
.LBB113_47:                             # %.lr.ph.i.preheader.i70
                                        #   in Loop: Header=BB113_44 Depth=1
	sub.d	$s3, $zero, $s4
	slli.d	$s5, $s3, 7
	slli.d	$a2, $s4, 7
	sub.d	$s7, $a0, $a2
	addi.d	$s0, $a1, -128
	addi.d	$s1, $a0, -128
	.p2align	4, , 16
.LBB113_48:                             # %.lr.ph.i.i74
                                        #   Parent Loop BB113_44 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a0, $sp, 56
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordaSERKS0_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 56
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, -128
	addi.d	$s5, $s5, 128
	addi.d	$s1, $s1, -128
	bnez	$s5, .LBB113_48
# %bb.49:                               # %_ZSt23__copy_move_backward_a2ILb1EPN2PP4WordES2_ET1_T0_S4_S3_.exit.loopexit.i78
                                        #   in Loop: Header=BB113_44 Depth=1
	srai.d	$a0, $s2, 7
	sub.d	$a0, $a0, $s4
	bltz	$a0, .LBB113_42
# %bb.50:                               #   in Loop: Header=BB113_44 Depth=1
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB113_52
# %bb.51:                               #   in Loop: Header=BB113_44 Depth=1
	slli.d	$a0, $s3, 7
	add.d	$s8, $s8, $a0
	sub.d	$fp, $fp, $s4
	move	$a0, $s7
	bgtz	$fp, .LBB113_44
	b	.LBB113_41
	.p2align	4, , 16
.LBB113_52:                             #   in Loop: Header=BB113_44 Depth=1
	srli.d	$a1, $a0, 2
	b	.LBB113_43
.Lfunc_end113:
	.size	_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_, .Lfunc_end113-_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,"axG",@progbits,_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,comdat
	.weak	_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_ # -- Begin function _ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.p2align	5
	.type	_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_,@function
_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_: # @_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -256
	.cfi_def_cfa_offset 256
	st.d	$ra, $sp, 248                   # 8-byte Folded Spill
	st.d	$fp, $sp, 240                   # 8-byte Folded Spill
	st.d	$s0, $sp, 232                   # 8-byte Folded Spill
	st.d	$s1, $sp, 224                   # 8-byte Folded Spill
	st.d	$s2, $sp, 216                   # 8-byte Folded Spill
	st.d	$s3, $sp, 208                   # 8-byte Folded Spill
	st.d	$s4, $sp, 200                   # 8-byte Folded Spill
	st.d	$s5, $sp, 192                   # 8-byte Folded Spill
	st.d	$s6, $sp, 184                   # 8-byte Folded Spill
	st.d	$s7, $sp, 176                   # 8-byte Folded Spill
	st.d	$s8, $sp, 168                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s6, $a1
	ld.d	$a1, $a1, 24
	ld.d	$a4, $a2, 24
	ld.d	$fp, $s6, 0
	st.d	$a0, $sp, 0                     # 8-byte Folded Spill
	beq	$a1, $a4, .LBB114_35
# %bb.1:
	st.d	$a2, $sp, 16                    # 8-byte Folded Spill
	ld.d	$a0, $s6, 16
	ld.d	$s8, $a3, 0
	ld.d	$a1, $a3, 8
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a5, $a3, 16
	st.d	$a3, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s7, $a3, 24
	sub.d	$a0, $a0, $fp
	srai.d	$s2, $a0, 7
	bgtz	$s2, .LBB114_18
.LBB114_2:                              # %_ZSt14__copy_move_a1ILb1EPN2PP4WordES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	st.d	$s8, $a1, 0
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	st.d	$a0, $a1, 8
	st.d	$a5, $a1, 16
	st.d	$s7, $a1, 24
	ld.d	$a0, $s6, 24
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a1, $a2, 24
	addi.d	$a3, $a0, 8
	bne	$a3, $a1, .LBB114_6
.LBB114_3:                              # %._crit_edge
	ld.d	$fp, $a2, 8
	ld.d	$a0, $a2, 0
	sub.d	$a0, $a0, $fp
	srai.d	$s2, $a0, 7
	blez	$s2, .LBB114_36
# %bb.4:                                # %.lr.ph.i9.preheader
	ori	$s6, $zero, 3
	b	.LBB114_28
	.p2align	4, , 16
.LBB114_5:                              # %_ZSt14__copy_move_a1ILb1EPN2PP4WordES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit48
                                        #   in Loop: Header=BB114_6 Depth=1
	ld.d	$a1, $sp, 8                     # 8-byte Folded Reload
	st.d	$s8, $a1, 0
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	st.d	$a0, $a1, 8
	st.d	$a5, $a1, 16
	st.d	$s7, $a1, 24
	ld.d	$a2, $sp, 16                    # 8-byte Folded Reload
	ld.d	$a0, $a2, 24
	ld.d	$a3, $sp, 24                    # 8-byte Folded Reload
	addi.d	$a3, $a3, 8
	beq	$a3, $a0, .LBB114_3
.LBB114_6:                              # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB114_9 Depth 2
                                        #       Child Loop BB114_11 Depth 3
	st.d	$a3, $sp, 24                    # 8-byte Folded Spill
	ld.d	$s0, $a3, 0
	ori	$s1, $zero, 4
	b	.LBB114_9
	.p2align	4, , 16
.LBB114_7:                              #   in Loop: Header=BB114_9 Depth=2
	srai.d	$a1, $a0, 2
.LBB114_8:                              #   in Loop: Header=BB114_9 Depth=2
	slli.d	$a2, $a1, 3
	ldx.d	$a4, $s7, $a2
	alsl.d	$s7, $a1, $s7, 3
	addi.d	$a5, $a4, 512
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	st.d	$a4, $sp, 32                    # 8-byte Folded Spill
	add.d	$s8, $a4, $a0
	sub.d	$s1, $s1, $fp
	add.d	$s0, $s0, $s5
	blez	$s1, .LBB114_5
.LBB114_9:                              #   Parent Loop BB114_6 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB114_11 Depth 3
	sub.d	$a0, $a5, $s8
	srai.d	$a0, $a0, 7
	slt	$a1, $a0, $s1
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s1, $a1
	or	$fp, $a0, $a1
	slli.d	$s5, $fp, 7
	move	$s6, $a5
	beq	$a5, $s8, .LBB114_12
# %bb.10:                               # %.lr.ph.i.i37.preheader
                                        #   in Loop: Header=BB114_9 Depth=2
	move	$s4, $s5
	move	$s2, $s8
	move	$s3, $s0
	.p2align	4, , 16
.LBB114_11:                             # %.lr.ph.i.i37
                                        #   Parent Loop BB114_6 Depth=1
                                        #     Parent Loop BB114_9 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	addi.d	$a0, $sp, 40
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(_ZN2PP4WordaSERKS0_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 128
	addi.d	$s4, $s4, -128
	addi.d	$s3, $s3, 128
	bnez	$s4, .LBB114_11
.LBB114_12:                             # %_ZSt14__copy_move_a2ILb1EPN2PP4WordES2_S2_ET2_T0_T1_S3_.exit.i44
                                        #   in Loop: Header=BB114_9 Depth=2
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	sub.d	$a0, $s8, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $fp
	bltz	$a0, .LBB114_7
# %bb.13:                               #   in Loop: Header=BB114_9 Depth=2
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB114_15
# %bb.14:                               #   in Loop: Header=BB114_9 Depth=2
	slli.d	$a0, $fp, 7
	add.d	$s8, $s8, $a0
	move	$a5, $s6
	sub.d	$s1, $s1, $fp
	add.d	$s0, $s0, $s5
	bgtz	$s1, .LBB114_9
	b	.LBB114_5
	.p2align	4, , 16
.LBB114_15:                             #   in Loop: Header=BB114_9 Depth=2
	srli.d	$a1, $a0, 2
	b	.LBB114_8
	.p2align	4, , 16
.LBB114_16:                             #   in Loop: Header=BB114_18 Depth=1
	srai.d	$a1, $a0, 2
.LBB114_17:                             #   in Loop: Header=BB114_18 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$a4, $s7, $a2
	alsl.d	$s7, $a1, $s7, 3
	addi.d	$a5, $a4, 512
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	st.d	$a4, $sp, 32                    # 8-byte Folded Spill
	add.d	$s8, $a4, $a0
	sub.d	$s2, $s2, $s0
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	add.d	$fp, $fp, $a0
	blez	$s2, .LBB114_2
.LBB114_18:                             # %.lr.ph.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB114_20 Depth 2
	sub.d	$a0, $a5, $s8
	srai.d	$a0, $a0, 7
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$s0, $a0, $a1
	slli.d	$a0, $s0, 7
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	move	$s5, $a5
	beq	$a5, $s8, .LBB114_21
# %bb.19:                               # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB114_18 Depth=1
	ld.d	$s1, $sp, 24                    # 8-byte Folded Reload
	move	$s3, $s8
	move	$s4, $fp
	.p2align	4, , 16
.LBB114_20:                             # %.lr.ph.i.i
                                        #   Parent Loop BB114_18 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a0, $sp, 40
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(_ZN2PP4WordaSERKS0_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s3, $s3, 128
	addi.d	$s1, $s1, -128
	addi.d	$s4, $s4, 128
	bnez	$s1, .LBB114_20
.LBB114_21:                             # %_ZSt14__copy_move_a2ILb1EPN2PP4WordES2_S2_ET2_T0_T1_S3_.exit.i
                                        #   in Loop: Header=BB114_18 Depth=1
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	sub.d	$a0, $s8, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s0
	bltz	$a0, .LBB114_16
# %bb.22:                               #   in Loop: Header=BB114_18 Depth=1
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB114_24
# %bb.23:                               #   in Loop: Header=BB114_18 Depth=1
	slli.d	$a0, $s0, 7
	add.d	$s8, $s8, $a0
	move	$a5, $s5
	sub.d	$s2, $s2, $s0
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	add.d	$fp, $fp, $a0
	bgtz	$s2, .LBB114_18
	b	.LBB114_2
	.p2align	4, , 16
.LBB114_24:                             #   in Loop: Header=BB114_18 Depth=1
	srli.d	$a1, $a0, 2
	b	.LBB114_17
	.p2align	4, , 16
.LBB114_25:                             #   in Loop: Header=BB114_28 Depth=1
	srai.d	$a1, $a0, 2
.LBB114_26:                             #   in Loop: Header=BB114_28 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$a4, $s7, $a2
	alsl.d	$s7, $a1, $s7, 3
	addi.d	$a5, $a4, 512
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	st.d	$a4, $sp, 32                    # 8-byte Folded Spill
	add.d	$s8, $a4, $a0
.LBB114_27:                             # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EpLEl.exit.i24
                                        #   in Loop: Header=BB114_28 Depth=1
	sub.d	$s2, $s2, $s4
	ld.d	$a0, $sp, 24                    # 8-byte Folded Reload
	add.d	$fp, $fp, $a0
	blez	$s2, .LBB114_36
.LBB114_28:                             # %.lr.ph.i9
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB114_30 Depth 2
	sub.d	$a0, $a5, $s8
	srai.d	$a0, $a0, 7
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$s4, $a0, $a1
	slli.d	$a0, $s4, 7
	st.d	$a0, $sp, 24                    # 8-byte Folded Spill
	move	$s5, $a5
	beq	$a5, $s8, .LBB114_31
# %bb.29:                               # %.lr.ph.i.i15.preheader
                                        #   in Loop: Header=BB114_28 Depth=1
	ld.d	$s3, $sp, 24                    # 8-byte Folded Reload
	move	$s0, $s8
	move	$s1, $fp
	.p2align	4, , 16
.LBB114_30:                             # %.lr.ph.i.i15
                                        #   Parent Loop BB114_28 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a0, $sp, 40
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordaSERKS0_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 128
	addi.d	$s3, $s3, -128
	addi.d	$s1, $s1, 128
	bnez	$s3, .LBB114_30
.LBB114_31:                             # %_ZSt14__copy_move_a2ILb1EPN2PP4WordES2_S2_ET2_T0_T1_S3_.exit.i22
                                        #   in Loop: Header=BB114_28 Depth=1
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	sub.d	$a0, $s8, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s4
	bltz	$a0, .LBB114_25
# %bb.32:                               #   in Loop: Header=BB114_28 Depth=1
	bltu	$s6, $a0, .LBB114_34
# %bb.33:                               #   in Loop: Header=BB114_28 Depth=1
	slli.d	$a0, $s4, 7
	add.d	$s8, $s8, $a0
	move	$a5, $s5
	b	.LBB114_27
	.p2align	4, , 16
.LBB114_34:                             #   in Loop: Header=BB114_28 Depth=1
	srli.d	$a1, $a0, 2
	b	.LBB114_26
.LBB114_35:
	ld.d	$a0, $a2, 0
	ld.d	$s8, $a3, 0
	ld.d	$a1, $a3, 8
	st.d	$a1, $sp, 32                    # 8-byte Folded Spill
	ld.d	$a5, $a3, 16
	ld.d	$s7, $a3, 24
	sub.d	$a0, $a0, $fp
	srai.d	$s2, $a0, 7
	bgtz	$s2, .LBB114_39
.LBB114_36:                             # %_ZSt14__copy_move_a1ILb1EPN2PP4WordES1_EN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS7_PS7_EE6__typeES5_S5_SA_.exit26
	ld.d	$a0, $sp, 0                     # 8-byte Folded Reload
	st.d	$s8, $a0, 0
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	st.d	$a1, $a0, 8
	st.d	$a5, $a0, 16
	st.d	$s7, $a0, 24
	ld.d	$s8, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 200                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 208                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 216                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 224                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 232                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 240                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 248                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 256
	ret
	.p2align	4, , 16
.LBB114_37:                             #   in Loop: Header=BB114_39 Depth=1
	srai.d	$a1, $a0, 2
.LBB114_38:                             #   in Loop: Header=BB114_39 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$a4, $s7, $a2
	alsl.d	$s7, $a1, $s7, 3
	addi.d	$a5, $a4, 512
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	st.d	$a4, $sp, 32                    # 8-byte Folded Spill
	add.d	$s8, $a4, $a0
	sub.d	$s2, $s2, $s4
	add.d	$fp, $fp, $s3
	blez	$s2, .LBB114_36
.LBB114_39:                             # %.lr.ph.i53
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB114_41 Depth 2
	sub.d	$a0, $a5, $s8
	srai.d	$a0, $a0, 7
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$s4, $a0, $a1
	slli.d	$s3, $s4, 7
	move	$s6, $a5
	beq	$a5, $s8, .LBB114_42
# %bb.40:                               # %.lr.ph.i.i59.preheader
                                        #   in Loop: Header=BB114_39 Depth=1
	move	$s5, $s3
	move	$s0, $s8
	move	$s1, $fp
	.p2align	4, , 16
.LBB114_41:                             # %.lr.ph.i.i59
                                        #   Parent Loop BB114_39 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addi.d	$a0, $sp, 40
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZN2PP4WordaSERKS0_)
	jirl	$ra, $ra, 0
	addi.d	$a0, $sp, 40
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	addi.d	$s0, $s0, 128
	addi.d	$s5, $s5, -128
	addi.d	$s1, $s1, 128
	bnez	$s5, .LBB114_41
.LBB114_42:                             # %_ZSt14__copy_move_a2ILb1EPN2PP4WordES2_S2_ET2_T0_T1_S3_.exit.i66
                                        #   in Loop: Header=BB114_39 Depth=1
	ld.d	$a0, $sp, 32                    # 8-byte Folded Reload
	sub.d	$a0, $s8, $a0
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s4
	bltz	$a0, .LBB114_37
# %bb.43:                               #   in Loop: Header=BB114_39 Depth=1
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB114_45
# %bb.44:                               #   in Loop: Header=BB114_39 Depth=1
	slli.d	$a0, $s4, 7
	add.d	$s8, $s8, $a0
	move	$a5, $s6
	sub.d	$s2, $s2, $s4
	add.d	$fp, $fp, $s3
	bgtz	$s2, .LBB114_39
	b	.LBB114_36
	.p2align	4, , 16
.LBB114_45:                             #   in Loop: Header=BB114_39 Depth=1
	srli.d	$a1, $a0, 2
	b	.LBB114_38
.Lfunc_end114:
	.size	_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_, .Lfunc_end114-_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
.Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception65
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	move	$s1, $a2
	move	$s3, $a1
	move	$s0, $a0
	st.d	$a0, $sp, 8
	ori	$a0, $zero, 200
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$fp, $a0
	addi.d	$s2, $a0, 32
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E)
	jirl	$ra, $ra, 0
	st.d	$fp, $sp, 16
.Ltmp2765:
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_)
	jirl	$ra, $ra, 0
.Ltmp2766:
# %bb.1:
	move	$s1, $a1
	beqz	$a1, .LBB115_9
# %bb.2:
	addi.d	$a3, $s0, 8
	ori	$a1, $zero, 1
	bnez	$a0, .LBB115_8
# %bb.3:
	beq	$a3, $s1, .LBB115_8
# %bb.4:
	ld.d	$s3, $fp, 40
	ld.d	$s4, $s1, 40
	sltu	$a0, $s4, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s4, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB115_6
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	ld.d	$a1, $s1, 32
	ld.d	$a0, $s2, 0
	move	$s2, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a3, $s2
	bnez	$a0, .LBB115_7
.LBB115_6:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	sub.d	$a0, $s3, $s4
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB115_7:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i
	addi.w	$a0, $a0, 0
	slti	$a1, $a0, 0
.LBB115_8:                              # %.thread
	move	$a0, $a1
	move	$a1, $fp
	move	$a2, $s1
	pcaddu18i	$ra, %call36(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a0, $a0, 1
	st.d	$a0, $s0, 40
	move	$a0, $fp
	b	.LBB115_10
.LBB115_9:
	move	$s0, $a0
	move	$a0, $s2
	pcaddu18i	$ra, %call36(_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 200
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $s0
.LBB115_10:                             # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev.exit
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB115_11:
.Ltmp2767:
	move	$fp, $a0
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end115:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_, .Lfunc_end115-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE22_M_emplace_hint_uniqueIJS6_IS5_S9_EEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table115:
.Lexception65:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end65-.Lcst_begin65
.Lcst_begin65:
	.uleb128 .Lfunc_begin65-.Lfunc_begin65  # >> Call Site 1 <<
	.uleb128 .Ltmp2765-.Lfunc_begin65       #   Call between .Lfunc_begin65 and .Ltmp2765
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2765-.Lfunc_begin65       # >> Call Site 2 <<
	.uleb128 .Ltmp2766-.Ltmp2765            #   Call between .Ltmp2765 and .Ltmp2766
	.uleb128 .Ltmp2767-.Lfunc_begin65       #     jumps to .Ltmp2767
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2766-.Lfunc_begin65       # >> Call Site 3 <<
	.uleb128 .Lfunc_end115-.Ltmp2766        #   Call between .Ltmp2766 and .Lfunc_end115
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end65:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -80
	.cfi_def_cfa_offset 80
	st.d	$ra, $sp, 72                    # 8-byte Folded Spill
	st.d	$fp, $sp, 64                    # 8-byte Folded Spill
	st.d	$s0, $sp, 56                    # 8-byte Folded Spill
	st.d	$s1, $sp, 48                    # 8-byte Folded Spill
	st.d	$s2, $sp, 40                    # 8-byte Folded Spill
	st.d	$s3, $sp, 32                    # 8-byte Folded Spill
	st.d	$s4, $sp, 24                    # 8-byte Folded Spill
	st.d	$s5, $sp, 16                    # 8-byte Folded Spill
	st.d	$s6, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	move	$s1, $a0
	addi.d	$a0, $a0, 8
	move	$s0, $a2
	beq	$a0, $a1, .LBB116_4
# %bb.1:
	move	$fp, $a1
	ld.d	$s5, $s0, 8
	ld.d	$s6, $a1, 40
	sltu	$a0, $s6, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s6, $a0
	or	$s2, $a0, $a1
	beqz	$s2, .LBB116_10
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i22
	ld.d	$s3, $fp, 32
	ld.d	$s4, $s0, 0
	move	$a0, $s4
	move	$a1, $s3
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	beqz	$a0, .LBB116_11
# %bb.3:                                # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread
	bltz	$a0, .LBB116_12
	b	.LBB116_18
.LBB116_4:
	ld.d	$a0, $s1, 40
	beqz	$a0, .LBB116_28
# %bb.5:
	ld.d	$a1, $s1, 32
	ld.d	$fp, $a1, 40
	ld.d	$s2, $s0, 8
	sltu	$a0, $s2, $fp
	masknez	$a2, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a2, $a0, $a2
	beqz	$a2, .LBB116_7
# %bb.6:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	ld.d	$a3, $s0, 0
	ld.d	$a0, $a1, 32
	move	$s3, $a1
	move	$a1, $a3
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	move	$a1, $s3
	bnez	$a0, .LBB116_8
.LBB116_7:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	sub.d	$a0, $fp, $s2
	lu12i.w	$a2, -524288
	slt	$a3, $a2, $a0
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
	lu12i.w	$a2, 524287
	ori	$a2, $a2, 4095
	slt	$a3, $a0, $a2
	maskeqz	$a0, $a0, $a3
	masknez	$a2, $a2, $a3
	or	$a0, $a0, $a2
.LBB116_8:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB116_28
# %bb.9:
	move	$fp, $zero
	b	.LBB116_29
.LBB116_10:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29
	bltu	$s5, $s6, .LBB116_12
	b	.LBB116_19
.LBB116_11:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit29.thread81
	bgeu	$s5, $s6, .LBB116_18
.LBB116_12:
	ld.d	$a0, $s1, 24
	beq	$a0, $fp, .LBB116_22
# %bb.13:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s5, $s3
	masknez	$a1, $s3, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB116_15
# %bb.14:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i31
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB116_16
.LBB116_15:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i34
	sub.d	$a0, $s3, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB116_16:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit38
	addi.w	$a0, $a0, 0
	bgez	$a0, .LBB116_28
# %bb.17:
	ld.d	$a0, $s2, 24
	sltui	$a0, $a0, 1
	masknez	$fp, $fp, $a0
	maskeqz	$a0, $s2, $a0
	or	$a1, $a0, $fp
	b	.LBB116_29
.LBB116_18:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i40
	move	$a0, $s3
	move	$a1, $s4
	move	$a2, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB116_20
.LBB116_19:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i43
	sub.d	$a0, $s6, $s5
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB116_20:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit47
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB116_23
# %bb.21:
	move	$a1, $zero
	b	.LBB116_29
.LBB116_22:
	move	$a1, $fp
	b	.LBB116_29
.LBB116_23:
	ld.d	$a0, $s1, 32
	beq	$a0, $fp, .LBB116_30
# %bb.24:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s3, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB116_26
# %bb.25:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i49
	ld.d	$a1, $s2, 32
	ld.d	$a0, $s0, 0
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB116_27
.LBB116_26:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i52
	sub.d	$a0, $s5, $s3
	lu12i.w	$a1, -524288
	slt	$a2, $a1, $a0
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	lu12i.w	$a1, 524287
	ori	$a1, $a1, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB116_27:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit56
	addi.w	$a0, $a0, 0
	bltz	$a0, .LBB116_31
.LBB116_28:
	move	$a0, $s1
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_)
	jirl	$ra, $ra, 0
	move	$fp, $a0
.LBB116_29:
	move	$a0, $fp
	ld.d	$s6, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s5, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 56                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 64                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 72                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 80
	ret
.LBB116_30:
	move	$a1, $fp
	move	$fp, $zero
	b	.LBB116_29
.LBB116_31:
	ld.d	$a0, $fp, 24
	sltui	$a0, $a0, 1
	maskeqz	$a1, $fp, $a0
	masknez	$fp, $s2, $a0
	or	$a1, $a1, $fp
	b	.LBB116_29
.Lfunc_end116:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_, .Lfunc_end116-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -16
	.cfi_def_cfa_offset 16
	st.d	$ra, $sp, 8                     # 8-byte Folded Spill
	st.d	$fp, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	ld.d	$fp, $a0, 8
	beqz	$fp, .LBB117_2
# %bb.1:
	addi.d	$a0, $fp, 32
	pcaddu18i	$ra, %call36(_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev)
	jirl	$ra, $ra, 0
	ori	$a1, $zero, 200
	move	$a0, $fp
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB117_2:
	ld.d	$fp, $sp, 0                     # 8-byte Folded Reload
	ld.d	$ra, $sp, 8                     # 8-byte Folded Reload
	addi.d	$sp, $sp, 16
	ret
.Lfunc_end117:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev, .Lfunc_end117-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE10_Auto_nodeD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E,"axG",@progbits,_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E,comdat
	.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E # -- Begin function _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E
	.p2align	5
	.type	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E,@function
_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E: # @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a1
	move	$s0, $a0
	addi.d	$a0, $a0, 16
	st.d	$a0, $s0, 0
	ld.d	$a1, $a1, 0
	addi.d	$s1, $fp, 16
	beq	$a1, $s1, .LBB118_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	st.d	$a1, $s0, 0
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 16
	b	.LBB118_3
.LBB118_2:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$a1, $fp, 8
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB118_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	ld.d	$a0, $fp, 8
	st.d	$a0, $s0, 8
	st.d	$s1, $fp, 0
	st.b	$zero, $fp, 16
	addi.d	$a0, $s0, 48
	st.d	$a0, $s0, 32
	ld.d	$a1, $fp, 32
	addi.d	$s1, $fp, 48
	st.d	$zero, $fp, 8
	beq	$a1, $s1, .LBB118_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	st.d	$a1, $s0, 32
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 48
	b	.LBB118_6
.LBB118_5:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i
	ld.d	$a1, $fp, 40
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB118_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit.i
	ld.d	$a0, $fp, 40
	vld	$vr0, $fp, 64
	st.d	$a0, $s0, 40
	st.b	$zero, $fp, 48
	vst	$vr0, $s0, 64
	ld.d	$a0, $fp, 80
	st.d	$s1, $fp, 32
	st.d	$zero, $fp, 40
	st.d	$a0, $s0, 80
	ld.w	$a0, $fp, 96
	vrepli.b	$vr0, 0
	vst	$vr0, $fp, 64
	st.d	$zero, $fp, 80
	st.w	$a0, $s0, 96
	ld.d	$a0, $fp, 88
	st.d	$a0, $s0, 88
	vld	$vr1, $fp, 104
	vst	$vr1, $s0, 104
	ld.d	$a0, $fp, 120
	st.d	$a0, $s0, 120
	ld.h	$a0, $fp, 128
	st.d	$zero, $fp, 120
	vst	$vr0, $fp, 104
	st.h	$a0, $s0, 128
	addi.d	$a0, $s0, 152
	st.d	$a0, $s0, 136
	ld.d	$a1, $fp, 136
	addi.d	$s1, $fp, 152
	beq	$a1, $s1, .LBB118_8
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i7.i
	st.d	$a1, $s0, 136
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 152
	b	.LBB118_9
.LBB118_8:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i8.i
	ld.d	$a1, $fp, 144
	addi.d	$a2, $a1, 1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB118_9:                              # %_ZN2PP8VariableC2EOS0_.exit
	ld.d	$a0, $fp, 144
	st.d	$a0, $s0, 144
	st.d	$s1, $fp, 136
	st.d	$zero, $fp, 144
	st.b	$zero, $fp, 152
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end118:
	.size	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E, .Lfunc_end118-_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEEC2IS5_S8_TnNSt9enable_ifIXaaclsr6_PCCFPIT_T0_EE22_MoveConstructiblePairISC_SD_EEclsr6_PCCFPISC_SD_EE30_ImplicitlyMoveConvertiblePairISC_SD_EEEbE4typeELb1EEEOS_ISC_SD_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_
	.p2align	5
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a0
	ld.d	$a0, $a0, 16
	move	$s0, $a1
	lu12i.w	$s4, -524288
	lu12i.w	$s3, 524287
	beqz	$a0, .LBB119_13
# %bb.1:                                # %.lr.ph
	ld.d	$s5, $s0, 8
	ld.d	$s2, $s0, 0
	ori	$s6, $s3, 4095
	ori	$s7, $zero, 24
	ori	$s8, $zero, 16
	b	.LBB119_4
	.p2align	4, , 16
.LBB119_2:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
                                        #   in Loop: Header=BB119_4 Depth=1
	sub.d	$a0, $s5, $s3
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	slt	$a1, $a0, $s6
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s6, $a1
	or	$a0, $a0, $a1
.LBB119_3:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit
                                        #   in Loop: Header=BB119_4 Depth=1
	addi.w	$a1, $a0, 0
	slti	$a0, $a1, 0
	masknez	$a2, $s7, $a0
	maskeqz	$a0, $s8, $a0
	or	$a0, $a0, $a2
	ldx.d	$a0, $fp, $a0
	beqz	$a0, .LBB119_6
.LBB119_4:                              # =>This Inner Loop Header: Depth=1
	move	$fp, $a0
	ld.d	$s3, $a0, 40
	sltu	$a0, $s3, $s5
	masknez	$a1, $s5, $a0
	maskeqz	$a0, $s3, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB119_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB119_4 Depth=1
	ld.d	$a1, $fp, 32
	move	$a0, $s2
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB119_3
	b	.LBB119_2
.LBB119_6:                              # %._crit_edge
	move	$s2, $fp
	lu12i.w	$s3, 524287
	bgez	$a1, .LBB119_9
# %bb.7:                                # %._crit_edge.thread
	ld.d	$a0, $s1, 24
	beq	$fp, $a0, .LBB119_14
.LBB119_8:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base)
	jirl	$ra, $ra, 0
	move	$s2, $a0
.LBB119_9:
	ld.d	$s1, $s2, 40
	ld.d	$s5, $s0, 8
	sltu	$a0, $s5, $s1
	masknez	$a1, $s1, $a0
	maskeqz	$a0, $s5, $a0
	or	$a2, $a0, $a1
	beqz	$a2, .LBB119_11
# %bb.10:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i6
	ld.d	$a1, $s0, 0
	ld.d	$a0, $s2, 32
	pcaddu18i	$ra, %call36(memcmp)
	jirl	$ra, $ra, 0
	bnez	$a0, .LBB119_12
.LBB119_11:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i9
	sub.d	$a0, $s1, $s5
	slt	$a1, $s4, $a0
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s4, $a1
	or	$a0, $a0, $a1
	ori	$a1, $s3, 4095
	slt	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
.LBB119_12:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit13
	addi.w	$a0, $a0, 0
	slti	$a1, $a0, 0
	srai.d	$a0, $a0, 63
	and	$fp, $a0, $fp
	masknez	$a0, $s2, $a1
	b	.LBB119_15
.LBB119_13:
	addi.d	$fp, $s1, 8
	ld.d	$a0, $s1, 24
	bne	$fp, $a0, .LBB119_8
.LBB119_14:
	move	$a0, $zero
.LBB119_15:
	move	$a1, $fp
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.Lfunc_end119:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_, .Lfunc_end119-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N2PP8VariableEESt10_Select1stISA_ESt4lessIS5_ESaISA_EE24_M_get_insert_unique_posERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,"axG",@progbits,_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,comdat
	.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev # -- Begin function _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.p2align	5
	.type	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev,@function
_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev: # @_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 136
	addi.d	$a1, $fp, 152
	beq	$a0, $a1, .LBB120_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB120_2:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	ld.d	$a0, $fp, 104
	beqz	$a0, .LBB120_4
# %bb.3:
	ld.d	$a1, $fp, 120
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB120_4:                              # %_ZNSt6vectorIiSaIiEED2Ev.exit.i
	ld.d	$a0, $fp, 64
	ld.d	$s0, $fp, 72
	beq	$a0, $s0, .LBB120_10
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	addi.d	$s1, $a0, 16
	b	.LBB120_7
	.p2align	4, , 16
.LBB120_6:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB120_7 Depth=1
	addi.d	$a0, $s1, 16
	addi.d	$s1, $s1, 32
	beq	$a0, $s0, .LBB120_9
.LBB120_7:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s1, -16
	beq	$s1, $a0, .LBB120_6
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB120_7 Depth=1
	ld.d	$a1, $s1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	b	.LBB120_6
.LBB120_9:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	ld.d	$a0, $fp, 64
.LBB120_10:                             # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	beqz	$a0, .LBB120_12
# %bb.11:
	ld.d	$a1, $fp, 80
	sub.d	$a1, $a1, $a0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB120_12:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit.i
	ld.d	$a0, $fp, 32
	addi.d	$a1, $fp, 48
	beq	$a0, $a1, .LBB120_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i2.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB120_14:                             # %_ZN2PP8VariableD2Ev.exit
	ld.d	$a0, $fp, 0
	addi.d	$a1, $fp, 16
	beq	$a0, $a1, .LBB120_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	ld.d	$a1, $a1, 0
	addi.d	$a1, $a1, 1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	pcaddu18i	$t8, %call36(_ZdlPvm)
	jr	$t8
.LBB120_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.Lfunc_end120:
	.size	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev, .Lfunc_end120-_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN2PP8VariableEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
.Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception66
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s7, $s5, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s7, $a0, .LBB121_18
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	move	$s4, $a1
	srai.d	$a0, $s7, 5
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$s6, $zero, -1
	lu52i.d	$a1, $s6, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 5
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	add.d	$s3, $a0, $s7
	addi.d	$a0, $s3, 16
	ld.d	$a1, $s4, 8
	ld.d	$s4, $s4, 0
	stx.d	$a0, $s2, $s7
	ori	$a2, $zero, 16
	st.d	$a1, $sp, 0
	bltu	$a1, $a2, .LBB121_4
# %bb.2:                                # %.noexc.i
.Ltmp2768:
	addi.d	$a1, $sp, 0
	move	$a0, $s3
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm)
	jirl	$ra, $ra, 0
.Ltmp2769:
# %bb.3:                                # %.noexc
	ld.d	$a1, $sp, 0
	st.d	$a0, $s3, 0
	st.d	$a1, $s3, 16
.LBB121_4:                              # %._crit_edge.i.i
	beq	$a1, $s6, .LBB121_7
# %bb.5:                                # %._crit_edge.i.i
	bnez	$a1, .LBB121_11
# %bb.6:
	ld.b	$a1, $s4, 0
	st.b	$a1, $a0, 0
.LBB121_7:
	ld.d	$a0, $sp, 0
	st.d	$a0, $s3, 8
	move	$s3, $s2
	bne	$s0, $s5, .LBB121_12
.LBB121_8:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	beqz	$s0, .LBB121_10
.LBB121_9:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB121_10:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 32
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB121_11:
	addi.d	$a2, $a1, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	ld.d	$a0, $sp, 0
	st.d	$a0, $s3, 8
	move	$s3, $s2
	beq	$s0, $s5, .LBB121_8
.LBB121_12:                             # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	b	.LBB121_15
	.p2align	4, , 16
.LBB121_13:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB121_15 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
.LBB121_14:                             # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB121_15 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s3, $s0, $s4
	st.d	$zero, $s7, 8
	addi.d	$s4, $s4, 32
	add.d	$a0, $s0, $s4
	st.b	$zero, $s3, 0
	beq	$a0, $s5, .LBB121_17
.LBB121_15:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s2, $s4
	ldx.d	$a1, $s0, $s4
	add.d	$s7, $s0, $s4
	addi.d	$a0, $s6, 16
	addi.d	$s3, $s7, 16
	stx.d	$a0, $s2, $s4
	bne	$s3, $a1, .LBB121_13
# %bb.16:                               # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB121_15 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB121_14
.LBB121_17:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	add.d	$s3, $s2, $s4
	bnez	$s0, .LBB121_9
	b	.LBB121_10
.LBB121_18:
	pcalau12i	$a0, %pc_hi20(.L.str.225)
	addi.d	$a0, $a0, %pc_lo12(.L.str.225)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB121_19:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit22
.Ltmp2770:
	move	$fp, $a0
	move	$a0, $s2
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end121:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_, .Lfunc_end121-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJRKS5_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table121:
.Lexception66:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end66-.Lcst_begin66
.Lcst_begin66:
	.uleb128 .Lfunc_begin66-.Lfunc_begin66  # >> Call Site 1 <<
	.uleb128 .Ltmp2768-.Lfunc_begin66       #   Call between .Lfunc_begin66 and .Ltmp2768
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2768-.Lfunc_begin66       # >> Call Site 2 <<
	.uleb128 .Ltmp2769-.Ltmp2768            #   Call between .Ltmp2768 and .Ltmp2769
	.uleb128 .Ltmp2770-.Lfunc_begin66       #     jumps to .Ltmp2770
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2769-.Lfunc_begin66       # >> Call Site 3 <<
	.uleb128 .Lfunc_end121-.Ltmp2769        #   Call between .Ltmp2769 and .Lfunc_end121
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end66:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_
	.p2align	5
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$s5, $a0, 8
	ld.d	$s0, $a0, 0
	sub.d	$s6, $s5, $s0
	addi.w	$a0, $zero, -32
	lu52i.d	$a0, $a0, 2047
	beq	$s6, $a0, .LBB122_14
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	move	$s3, $a1
	srai.d	$a0, $s6, 5
	ori	$a1, $zero, 1
	sltu	$a2, $a1, $a0
	masknez	$a1, $a1, $a2
	maskeqz	$a2, $a0, $a2
	or	$a1, $a2, $a1
	add.d	$a0, $a1, $a0
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 63
	sltu	$a2, $a0, $a1
	maskeqz	$a0, $a0, $a2
	masknez	$a1, $a1, $a2
	or	$a0, $a0, $a1
	slli.d	$s1, $a0, 5
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	ld.d	$a1, $s3, 0
	add.d	$s7, $a0, $s6
	addi.d	$a0, $s7, 16
	addi.d	$s4, $s3, 16
	stx.d	$a0, $s2, $s6
	beq	$a1, $s4, .LBB122_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	ld.d	$a0, $s3, 16
	ld.d	$s6, $s3, 8
	st.d	$a1, $s7, 0
	st.d	$a0, $s7, 16
	b	.LBB122_4
.LBB122_3:                              # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i
	ld.d	$s6, $s3, 8
	addi.d	$a2, $s6, 1
	move	$a1, $s4
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
.LBB122_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	st.d	$s6, $s7, 8
	st.d	$s4, $s3, 0
	st.d	$zero, $s3, 8
	st.b	$zero, $s3, 16
	move	$s3, $s2
	beq	$s0, $s5, .LBB122_11
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	move	$s4, $zero
	b	.LBB122_8
	.p2align	4, , 16
.LBB122_6:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB122_8 Depth=1
	ld.d	$a0, $s3, 0
	ld.d	$s8, $s7, 8
	st.d	$a1, $s6, 0
	st.d	$a0, $s6, 16
.LBB122_7:                              # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i
                                        #   in Loop: Header=BB122_8 Depth=1
	st.d	$s8, $s6, 8
	stx.d	$s3, $s0, $s4
	st.d	$zero, $s7, 8
	addi.d	$s4, $s4, 32
	add.d	$a0, $s0, $s4
	st.b	$zero, $s3, 0
	beq	$a0, $s5, .LBB122_10
.LBB122_8:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	add.d	$s6, $s2, $s4
	ldx.d	$a1, $s0, $s4
	add.d	$s7, $s0, $s4
	addi.d	$a0, $s6, 16
	addi.d	$s3, $s7, 16
	stx.d	$a0, $s2, $s4
	bne	$s3, $a1, .LBB122_6
# %bb.9:                                # %_ZNSt11char_traitsIcE4copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB122_8 Depth=1
	ld.d	$s8, $s7, 8
	addi.d	$a2, $s8, 1
	move	$a1, $s3
	pcaddu18i	$ra, %call36(memcpy)
	jirl	$ra, $ra, 0
	b	.LBB122_7
.LBB122_10:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	add.d	$s3, $s2, $s4
.LBB122_11:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	beqz	$s0, .LBB122_13
# %bb.12:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit.i
	ld.d	$a0, $fp, 16
	sub.d	$a1, $a0, $s0
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB122_13:                             # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Guard_allocD2Ev.exit
	addi.d	$a0, $s3, 32
	st.d	$s2, $fp, 0
	st.d	$a0, $fp, 8
	add.d	$a0, $s2, $s1
	st.d	$a0, $fp, 16
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB122_14:
	pcalau12i	$a0, %pc_hi20(.L.str.225)
	addi.d	$a0, $a0, %pc_lo12(.L.str.225)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end122:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_, .Lfunc_end122-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_appendIJS5_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE,"axG",@progbits,_ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE,comdat
	.weak	_ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE # -- Begin function _ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE
	.p2align	5
	.type	_ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE,@function
_ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE: # @_ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -160
	.cfi_def_cfa_offset 160
	st.d	$ra, $sp, 152                   # 8-byte Folded Spill
	st.d	$fp, $sp, 144                   # 8-byte Folded Spill
	st.d	$s0, $sp, 136                   # 8-byte Folded Spill
	st.d	$s1, $sp, 128                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	ld.d	$a5, $a2, 0
	ld.d	$a4, $a2, 8
	ld.d	$a3, $a2, 16
	ld.d	$a2, $a2, 24
	addi.d	$a6, $a5, 1
	move	$s0, $a1
	move	$fp, $a0
	move	$t1, $a4
	move	$t0, $a3
	move	$a7, $a2
	bne	$a6, $a3, .LBB123_2
# %bb.1:
	ld.d	$a6, $a2, 8
	addi.d	$a7, $a2, 8
	addi.d	$t0, $a6, 512
	move	$t1, $a6
.LBB123_2:                              # %_ZNSt15_Deque_iteratorIbRbPbEppEv.exit
	ld.d	$t3, $s0, 40
	ld.d	$t2, $s0, 16
	ld.d	$a1, $s0, 32
	sub.d	$a0, $a2, $t3
	srli.d	$a0, $a0, 3
	sltu	$t4, $zero, $a2
	sub.d	$a0, $a0, $t4
	slli.d	$a0, $a0, 9
	add.d	$t4, $a4, $t2
	ld.d	$t5, $s0, 72
	sub.d	$t4, $a5, $t4
	add.d	$t4, $t4, $a1
	add.d	$s1, $t4, $a0
	sub.d	$a0, $t5, $t3
	srli.d	$t6, $a0, 3
	sltu	$t7, $zero, $t5
	ld.d	$t4, $s0, 48
	ld.d	$a0, $s0, 56
	sub.d	$t6, $t6, $t7
	slli.d	$t6, $t6, 9
	add.d	$t7, $a1, $t4
	add.d	$t8, $t2, $a0
	sub.d	$t7, $t7, $t8
	add.d	$t6, $t7, $t6
	srli.d	$t6, $t6, 1
	bgeu	$s1, $t6, .LBB123_7
# %bb.3:
	beq	$a5, $t2, .LBB123_5
# %bb.4:
	ld.d	$a0, $s0, 24
	st.d	$t2, $sp, 96
	st.d	$a0, $sp, 104
	st.d	$a1, $sp, 112
	st.d	$t3, $sp, 120
	st.d	$a5, $sp, 64
	st.d	$a4, $sp, 72
	st.d	$a3, $sp, 80
	st.d	$a2, $sp, 88
	st.d	$a6, $sp, 32
	st.d	$t1, $sp, 40
	st.d	$t0, $sp, 48
	st.d	$a7, $sp, 56
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 96
	addi.d	$a2, $sp, 64
	addi.d	$a3, $sp, 32
	pcaddu18i	$ra, %call36(_ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_)
	jirl	$ra, $ra, 0
	ld.d	$t2, $s0, 16
	ld.d	$a1, $s0, 32
.LBB123_5:
	addi.d	$a0, $a1, -1
	beq	$t2, $a0, .LBB123_11
# %bb.6:
	addi.d	$a0, $t2, 1
	st.d	$a0, $s0, 16
	b	.LBB123_14
.LBB123_7:
	beq	$a6, $t4, .LBB123_9
# %bb.8:
	ld.d	$a1, $s0, 64
	st.d	$a6, $sp, 96
	st.d	$t1, $sp, 104
	st.d	$t0, $sp, 112
	st.d	$a7, $sp, 120
	st.d	$t4, $sp, 64
	st.d	$a0, $sp, 72
	st.d	$a1, $sp, 80
	st.d	$t5, $sp, 88
	st.d	$a5, $sp, 32
	st.d	$a4, $sp, 40
	st.d	$a3, $sp, 48
	st.d	$a2, $sp, 56
	addi.d	$a0, $sp, 0
	addi.d	$a1, $sp, 96
	addi.d	$a2, $sp, 64
	addi.d	$a3, $sp, 32
	pcaddu18i	$ra, %call36(_ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_)
	jirl	$ra, $ra, 0
	ld.d	$t4, $s0, 48
	ld.d	$a0, $s0, 56
.LBB123_9:
	beq	$t4, $a0, .LBB123_12
# %bb.10:
	addi.d	$a2, $t4, -1
	b	.LBB123_13
.LBB123_11:
	ld.d	$a0, $s0, 24
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 40
	addi.d	$a1, $a0, 8
	st.d	$a1, $s0, 40
	ld.d	$a0, $a0, 8
	st.d	$a0, $s0, 24
	addi.d	$a1, $a0, 512
	st.d	$a1, $s0, 32
	st.d	$a0, $s0, 16
	b	.LBB123_14
.LBB123_12:
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 72
	addi.d	$a1, $a0, -8
	st.d	$a1, $s0, 72
	ld.d	$a0, $a0, -8
	st.d	$a0, $s0, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $s0, 64
	addi.d	$a2, $a0, 511
.LBB123_13:                             # %_ZNSt5dequeIbSaIbEE8pop_backEv.exit
	ld.d	$a0, $s0, 16
	ld.d	$a1, $s0, 32
	st.d	$a2, $s0, 48
.LBB123_14:
	ld.d	$a3, $s0, 24
	ld.d	$a2, $s0, 40
	st.d	$a3, $fp, 8
	st.d	$a1, $fp, 16
	sub.d	$a1, $a0, $a3
	add.d	$a1, $a1, $s1
	st.d	$a2, $fp, 24
	bltz	$a1, .LBB123_17
# %bb.15:
	ori	$a3, $zero, 511
	bltu	$a3, $a1, .LBB123_18
# %bb.16:
	add.d	$a0, $a0, $s1
	b	.LBB123_20
.LBB123_17:
	srai.d	$a0, $a1, 9
	b	.LBB123_19
.LBB123_18:
	srli.d	$a0, $a1, 9
.LBB123_19:
	slli.d	$a3, $a0, 3
	ldx.d	$a3, $a2, $a3
	alsl.d	$a2, $a0, $a2, 3
	st.d	$a2, $fp, 24
	st.d	$a3, $fp, 8
	addi.d	$a2, $a3, 512
	st.d	$a2, $fp, 16
	slli.d	$a0, $a0, 9
	sub.d	$a0, $a1, $a0
	add.d	$a0, $a3, $a0
.LBB123_20:                             # %_ZStplRKSt15_Deque_iteratorIbRbPbEl.exit
	st.d	$a0, $fp, 0
	ld.d	$s1, $sp, 128                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 136                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 144                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 152                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 160
	ret
.Lfunc_end123:
	.size	_ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE, .Lfunc_end123-_ZNSt5dequeIbSaIbEE8_M_eraseESt15_Deque_iteratorIbRbPbE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,"axG",@progbits,_ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,comdat
	.weak	_ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_ # -- Begin function _ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.p2align	5
	.type	_ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,@function
_ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_: # @_ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s1, $a1
	ld.d	$a1, $a1, 24
	ld.d	$a4, $a2, 24
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	beq	$a1, $a4, .LBB124_48
# %bb.1:
	ld.d	$a0, $a2, 8
	st.d	$a2, $sp, 8                     # 8-byte Folded Spill
	ld.d	$s3, $a2, 0
	ld.d	$s8, $a3, 0
	ld.d	$s6, $a3, 8
	ld.d	$s7, $a3, 16
	st.d	$a3, $sp, 32                    # 8-byte Folded Spill
	ld.d	$s5, $a3, 24
	sub.d	$fp, $s3, $a0
	blez	$fp, .LBB124_16
# %bb.2:                                # %.lr.ph.i.preheader
	ori	$s0, $zero, 2
	ori	$s2, $zero, 511
	b	.LBB124_5
	.p2align	4, , 16
.LBB124_3:                              #   in Loop: Header=BB124_5 Depth=1
	srai.d	$a1, $a0, 9
.LBB124_4:                              #   in Loop: Header=BB124_5 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s6, $s5, $a2
	alsl.d	$s5, $a1, $s5, 3
	addi.d	$s7, $s6, 512
	slli.d	$a1, $a1, 9
	sub.d	$a0, $a0, $a1
	add.d	$s8, $s6, $a0
	sub.d	$fp, $fp, $s4
	blez	$fp, .LBB124_16
.LBB124_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	beq	$s8, $s6, .LBB124_7
# %bb.6:                                #   in Loop: Header=BB124_5 Depth=1
	sub.d	$a1, $s8, $s6
	move	$a0, $s8
	b	.LBB124_8
	.p2align	4, , 16
.LBB124_7:                              #   in Loop: Header=BB124_5 Depth=1
	ld.d	$a0, $s5, -8
	addi.d	$a0, $a0, 512
	ori	$a1, $zero, 512
.LBB124_8:                              # %_ZSt9__advanceIPblEvRT_T0_St26random_access_iterator_tag.exit.i.i
                                        #   in Loop: Header=BB124_5 Depth=1
	slt	$a2, $a1, $fp
	masknez	$a3, $fp, $a2
	maskeqz	$a1, $a1, $a2
	or	$s4, $a1, $a3
	sub.d	$s3, $s3, $s4
	sub.d	$a0, $a0, $s4
	blt	$s4, $s0, .LBB124_14
# %bb.9:                                #   in Loop: Header=BB124_5 Depth=1
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB124_10:                             # %_ZSt23__copy_move_backward_a2ILb1EPbS0_ET1_T0_S2_S1_.exit.i
                                        #   in Loop: Header=BB124_5 Depth=1
	add.d	$a0, $s6, $s4
	sub.d	$a0, $s8, $a0
	bltz	$a0, .LBB124_3
# %bb.11:                               #   in Loop: Header=BB124_5 Depth=1
	bltu	$s2, $a0, .LBB124_13
# %bb.12:                               #   in Loop: Header=BB124_5 Depth=1
	sub.d	$a0, $zero, $s4
	add.d	$s8, $s8, $a0
	sub.d	$fp, $fp, $s4
	bgtz	$fp, .LBB124_5
	b	.LBB124_16
	.p2align	4, , 16
.LBB124_13:                             #   in Loop: Header=BB124_5 Depth=1
	srli.d	$a1, $a0, 9
	b	.LBB124_4
.LBB124_14:                             # %_ZSt9__advanceIPblEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i
                                        #   in Loop: Header=BB124_5 Depth=1
	ori	$a1, $zero, 1
	bne	$s4, $a1, .LBB124_10
# %bb.15:                               #   in Loop: Header=BB124_5 Depth=1
	ld.b	$a1, $s3, 0
	st.b	$a1, $a0, 0
	b	.LBB124_10
.LBB124_16:                             # %_ZSt23__copy_move_backward_a1ILb1EPbbEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	st.d	$s5, $a2, 24
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $a0, 24
	ld.d	$a1, $s1, 24
	st.d	$s8, $a2, 0
	st.d	$s6, $a2, 8
	addi.d	$s4, $a0, -8
	st.d	$s7, $a2, 16
	beq	$s4, $a1, .LBB124_33
# %bb.17:
	ori	$fp, $zero, 2
	ori	$s0, $zero, 511
	st.d	$s1, $sp, 24                    # 8-byte Folded Spill
	b	.LBB124_19
	.p2align	4, , 16
.LBB124_18:                             # %_ZSt23__copy_move_backward_a1ILb1EPbbEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit58
                                        #   in Loop: Header=BB124_19 Depth=1
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	st.d	$s5, $a1, 24
	ld.d	$s1, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $s1, 24
	st.d	$s8, $a1, 0
	st.d	$s6, $a1, 8
	addi.d	$s4, $s4, -8
	st.d	$s7, $a1, 16
	beq	$s4, $a0, .LBB124_33
.LBB124_19:                             # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB124_22 Depth 2
	ld.d	$a0, $s4, 0
	addi.d	$s2, $a0, 512
	ori	$s1, $zero, 512
	b	.LBB124_22
	.p2align	4, , 16
.LBB124_20:                             #   in Loop: Header=BB124_22 Depth=2
	srai.d	$a1, $a0, 9
.LBB124_21:                             #   in Loop: Header=BB124_22 Depth=2
	slli.d	$a2, $a1, 3
	ldx.d	$s6, $s5, $a2
	alsl.d	$s5, $a1, $s5, 3
	addi.d	$s7, $s6, 512
	slli.d	$a1, $a1, 9
	sub.d	$a0, $a0, $a1
	add.d	$s8, $s6, $a0
	sub.d	$s1, $s1, $s3
	blez	$s1, .LBB124_18
.LBB124_22:                             #   Parent Loop BB124_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	beq	$s8, $s6, .LBB124_24
# %bb.23:                               #   in Loop: Header=BB124_22 Depth=2
	sub.d	$a1, $s8, $s6
	move	$a0, $s8
	b	.LBB124_25
	.p2align	4, , 16
.LBB124_24:                             #   in Loop: Header=BB124_22 Depth=2
	ld.d	$a0, $s5, -8
	addi.d	$a0, $a0, 512
	ori	$a1, $zero, 512
.LBB124_25:                             # %_ZSt9__advanceIPblEvRT_T0_St26random_access_iterator_tag.exit.i.i45
                                        #   in Loop: Header=BB124_22 Depth=2
	slt	$a2, $a1, $s1
	masknez	$a3, $s1, $a2
	maskeqz	$a1, $a1, $a2
	or	$s3, $a1, $a3
	sub.d	$s2, $s2, $s3
	sub.d	$a0, $a0, $s3
	blt	$s3, $fp, .LBB124_31
# %bb.26:                               #   in Loop: Header=BB124_22 Depth=2
	move	$a1, $s2
	move	$a2, $s3
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB124_27:                             # %_ZSt23__copy_move_backward_a2ILb1EPbS0_ET1_T0_S2_S1_.exit.i47
                                        #   in Loop: Header=BB124_22 Depth=2
	add.d	$a0, $s6, $s3
	sub.d	$a0, $s8, $a0
	bltz	$a0, .LBB124_20
# %bb.28:                               #   in Loop: Header=BB124_22 Depth=2
	bltu	$s0, $a0, .LBB124_30
# %bb.29:                               #   in Loop: Header=BB124_22 Depth=2
	sub.d	$a0, $zero, $s3
	add.d	$s8, $s8, $a0
	sub.d	$s1, $s1, $s3
	bgtz	$s1, .LBB124_22
	b	.LBB124_18
	.p2align	4, , 16
.LBB124_30:                             #   in Loop: Header=BB124_22 Depth=2
	srli.d	$a1, $a0, 9
	b	.LBB124_21
.LBB124_31:                             # %_ZSt9__advanceIPblEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i46
                                        #   in Loop: Header=BB124_22 Depth=2
	ori	$a1, $zero, 1
	bne	$s3, $a1, .LBB124_27
# %bb.32:                               #   in Loop: Header=BB124_22 Depth=2
	ld.b	$a1, $s2, 0
	st.b	$a1, $a0, 0
	b	.LBB124_27
.LBB124_33:                             # %._crit_edge
	ld.d	$a0, $s1, 0
	ld.d	$s0, $s1, 16
	sub.d	$fp, $s0, $a0
	blez	$fp, .LBB124_63
# %bb.34:                               # %.lr.ph.i8.preheader
	ori	$s2, $zero, 2
	ori	$s3, $zero, 511
	ori	$s4, $zero, 1
	b	.LBB124_37
	.p2align	4, , 16
.LBB124_35:                             #   in Loop: Header=BB124_37 Depth=1
	srai.d	$a1, $a0, 9
.LBB124_36:                             #   in Loop: Header=BB124_37 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s6, $s5, $a2
	alsl.d	$s5, $a1, $s5, 3
	addi.d	$s7, $s6, 512
	slli.d	$a1, $a1, 9
	sub.d	$a0, $a0, $a1
	add.d	$s8, $s6, $a0
	sub.d	$fp, $fp, $s1
	blez	$fp, .LBB124_63
.LBB124_37:                             # %.lr.ph.i8
                                        # =>This Inner Loop Header: Depth=1
	beq	$s8, $s6, .LBB124_39
# %bb.38:                               #   in Loop: Header=BB124_37 Depth=1
	sub.d	$a1, $s8, $s6
	move	$a0, $s8
	b	.LBB124_40
	.p2align	4, , 16
.LBB124_39:                             #   in Loop: Header=BB124_37 Depth=1
	ld.d	$a0, $s5, -8
	addi.d	$a0, $a0, 512
	ori	$a1, $zero, 512
.LBB124_40:                             # %_ZSt9__advanceIPblEvRT_T0_St26random_access_iterator_tag.exit.i.i18
                                        #   in Loop: Header=BB124_37 Depth=1
	slt	$a2, $a1, $fp
	masknez	$a3, $fp, $a2
	maskeqz	$a1, $a1, $a2
	or	$s1, $a1, $a3
	sub.d	$s0, $s0, $s1
	sub.d	$a0, $a0, $s1
	blt	$s1, $s2, .LBB124_46
# %bb.41:                               #   in Loop: Header=BB124_37 Depth=1
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB124_42:                             # %_ZSt23__copy_move_backward_a2ILb1EPbS0_ET1_T0_S2_S1_.exit.i20
                                        #   in Loop: Header=BB124_37 Depth=1
	add.d	$a0, $s6, $s1
	sub.d	$a0, $s8, $a0
	bltz	$a0, .LBB124_35
# %bb.43:                               #   in Loop: Header=BB124_37 Depth=1
	bltu	$s3, $a0, .LBB124_45
# %bb.44:                               #   in Loop: Header=BB124_37 Depth=1
	sub.d	$a0, $zero, $s1
	add.d	$s8, $s8, $a0
	sub.d	$fp, $fp, $s1
	bgtz	$fp, .LBB124_37
	b	.LBB124_63
	.p2align	4, , 16
.LBB124_45:                             #   in Loop: Header=BB124_37 Depth=1
	srli.d	$a1, $a0, 9
	b	.LBB124_36
.LBB124_46:                             # %_ZSt9__advanceIPblEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i19
                                        #   in Loop: Header=BB124_37 Depth=1
	bne	$s1, $s4, .LBB124_42
# %bb.47:                               #   in Loop: Header=BB124_37 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB124_42
.LBB124_48:
	ld.d	$a0, $s1, 0
	ld.d	$s0, $a2, 0
	ld.d	$s8, $a3, 0
	ld.d	$s6, $a3, 8
	ld.d	$s7, $a3, 16
	ld.d	$s5, $a3, 24
	sub.d	$fp, $s0, $a0
	blez	$fp, .LBB124_63
# %bb.49:                               # %.lr.ph.i62.preheader
	ori	$s2, $zero, 2
	ori	$s3, $zero, 511
	ori	$s4, $zero, 1
	b	.LBB124_52
	.p2align	4, , 16
.LBB124_50:                             #   in Loop: Header=BB124_52 Depth=1
	srai.d	$a1, $a0, 9
.LBB124_51:                             #   in Loop: Header=BB124_52 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s6, $s5, $a2
	alsl.d	$s5, $a1, $s5, 3
	addi.d	$s7, $s6, 512
	slli.d	$a1, $a1, 9
	sub.d	$a0, $a0, $a1
	add.d	$s8, $s6, $a0
	sub.d	$fp, $fp, $s1
	blez	$fp, .LBB124_63
.LBB124_52:                             # %.lr.ph.i62
                                        # =>This Inner Loop Header: Depth=1
	beq	$s8, $s6, .LBB124_54
# %bb.53:                               #   in Loop: Header=BB124_52 Depth=1
	sub.d	$a1, $s8, $s6
	move	$a0, $s8
	b	.LBB124_55
	.p2align	4, , 16
.LBB124_54:                             #   in Loop: Header=BB124_52 Depth=1
	ld.d	$a0, $s5, -8
	addi.d	$a0, $a0, 512
	ori	$a1, $zero, 512
.LBB124_55:                             # %_ZSt9__advanceIPblEvRT_T0_St26random_access_iterator_tag.exit.i.i72
                                        #   in Loop: Header=BB124_52 Depth=1
	slt	$a2, $a1, $fp
	masknez	$a3, $fp, $a2
	maskeqz	$a1, $a1, $a2
	or	$s1, $a1, $a3
	sub.d	$s0, $s0, $s1
	sub.d	$a0, $a0, $s1
	blt	$s1, $s2, .LBB124_61
# %bb.56:                               #   in Loop: Header=BB124_52 Depth=1
	move	$a1, $s0
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB124_57:                             # %_ZSt23__copy_move_backward_a2ILb1EPbS0_ET1_T0_S2_S1_.exit.i74
                                        #   in Loop: Header=BB124_52 Depth=1
	add.d	$a0, $s6, $s1
	sub.d	$a0, $s8, $a0
	bltz	$a0, .LBB124_50
# %bb.58:                               #   in Loop: Header=BB124_52 Depth=1
	bltu	$s3, $a0, .LBB124_60
# %bb.59:                               #   in Loop: Header=BB124_52 Depth=1
	sub.d	$a0, $zero, $s1
	add.d	$s8, $s8, $a0
	sub.d	$fp, $fp, $s1
	bgtz	$fp, .LBB124_52
	b	.LBB124_63
	.p2align	4, , 16
.LBB124_60:                             #   in Loop: Header=BB124_52 Depth=1
	srli.d	$a1, $a0, 9
	b	.LBB124_51
.LBB124_61:                             # %_ZSt9__advanceIPblEvRT_T0_St26random_access_iterator_tag.exit.thread.i.i73
                                        #   in Loop: Header=BB124_52 Depth=1
	bne	$s1, $s4, .LBB124_57
# %bb.62:                               #   in Loop: Header=BB124_52 Depth=1
	ld.b	$a1, $s0, 0
	st.b	$a1, $a0, 0
	b	.LBB124_57
.LBB124_63:                             # %_ZSt23__copy_move_backward_a1ILb1EPbbEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit31
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	st.d	$s8, $a0, 0
	st.d	$s6, $a0, 8
	st.d	$s7, $a0, 16
	st.d	$s5, $a0, 24
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end124:
	.size	_ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_, .Lfunc_end124-_ZSt24__copy_move_backward_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,"axG",@progbits,_ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,comdat
	.weak	_ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_ # -- Begin function _ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.p2align	5
	.type	_ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_,@function
_ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_: # @_ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -128
	.cfi_def_cfa_offset 128
	st.d	$ra, $sp, 120                   # 8-byte Folded Spill
	st.d	$fp, $sp, 112                   # 8-byte Folded Spill
	st.d	$s0, $sp, 104                   # 8-byte Folded Spill
	st.d	$s1, $sp, 96                    # 8-byte Folded Spill
	st.d	$s2, $sp, 88                    # 8-byte Folded Spill
	st.d	$s3, $sp, 80                    # 8-byte Folded Spill
	st.d	$s4, $sp, 72                    # 8-byte Folded Spill
	st.d	$s5, $sp, 64                    # 8-byte Folded Spill
	st.d	$s6, $sp, 56                    # 8-byte Folded Spill
	st.d	$s7, $sp, 48                    # 8-byte Folded Spill
	st.d	$s8, $sp, 40                    # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$s2, $a2
	ld.d	$a4, $a1, 24
	ld.d	$a2, $a2, 24
	ld.d	$s3, $a1, 0
	st.d	$a0, $sp, 16                    # 8-byte Folded Spill
	beq	$a4, $a2, .LBB125_39
# %bb.1:
	st.d	$a1, $sp, 8                     # 8-byte Folded Spill
	ld.d	$a0, $a1, 16
	ld.d	$s0, $a3, 0
	ld.d	$s7, $a3, 8
	ld.d	$s8, $a3, 16
	st.d	$a3, $sp, 32                    # 8-byte Folded Spill
	ld.d	$s6, $a3, 24
	sub.d	$fp, $a0, $s3
	blez	$fp, .LBB125_13
# %bb.2:                                # %.lr.ph.i.preheader
	ori	$s1, $zero, 2
	ori	$s4, $zero, 511
	b	.LBB125_5
	.p2align	4, , 16
.LBB125_3:                              #   in Loop: Header=BB125_5 Depth=1
	srai.d	$a1, $a0, 9
.LBB125_4:                              #   in Loop: Header=BB125_5 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s7, $s6, $a2
	alsl.d	$s6, $a1, $s6, 3
	addi.d	$s8, $s7, 512
	slli.d	$a1, $a1, 9
	sub.d	$a0, $a0, $a1
	add.d	$s0, $s7, $a0
	sub.d	$fp, $fp, $s5
	add.d	$s3, $s3, $s5
	blez	$fp, .LBB125_13
.LBB125_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	sub.d	$a0, $s8, $s0
	slt	$a1, $a0, $fp
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$s5, $a0, $a1
	blt	$s5, $s1, .LBB125_11
# %bb.6:                                #   in Loop: Header=BB125_5 Depth=1
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $s5
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB125_7:                              # %_ZSt14__copy_move_a2ILb1EPbS0_S0_ET2_T0_T1_S1_.exit.i
                                        #   in Loop: Header=BB125_5 Depth=1
	sub.d	$a0, $s0, $s7
	add.d	$a0, $a0, $s5
	bltz	$a0, .LBB125_3
# %bb.8:                                #   in Loop: Header=BB125_5 Depth=1
	bltu	$s4, $a0, .LBB125_10
# %bb.9:                                #   in Loop: Header=BB125_5 Depth=1
	add.d	$s0, $s0, $s5
	sub.d	$fp, $fp, $s5
	add.d	$s3, $s3, $s5
	bgtz	$fp, .LBB125_5
	b	.LBB125_13
	.p2align	4, , 16
.LBB125_10:                             #   in Loop: Header=BB125_5 Depth=1
	srli.d	$a1, $a0, 9
	b	.LBB125_4
.LBB125_11:                             #   in Loop: Header=BB125_5 Depth=1
	ori	$a0, $zero, 1
	bne	$s5, $a0, .LBB125_7
# %bb.12:                               #   in Loop: Header=BB125_5 Depth=1
	ld.b	$a0, $s3, 0
	st.b	$a0, $s0, 0
	b	.LBB125_7
.LBB125_13:                             # %_ZSt14__copy_move_a1ILb1EPbbEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit
	ld.d	$a2, $sp, 32                    # 8-byte Folded Reload
	st.d	$s6, $a2, 24
	ld.d	$a0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$a0, $a0, 24
	ld.d	$a1, $s2, 24
	st.d	$s0, $a2, 0
	st.d	$s7, $a2, 8
	addi.d	$s5, $a0, 8
	st.d	$s8, $a2, 16
	beq	$s5, $a1, .LBB125_27
# %bb.14:
	ori	$fp, $zero, 2
	ori	$s1, $zero, 511
	st.d	$s2, $sp, 24                    # 8-byte Folded Spill
	b	.LBB125_16
	.p2align	4, , 16
.LBB125_15:                             # %_ZSt14__copy_move_a1ILb1EPbbEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit34
                                        #   in Loop: Header=BB125_16 Depth=1
	ld.d	$a1, $sp, 32                    # 8-byte Folded Reload
	st.d	$s6, $a1, 24
	ld.d	$s2, $sp, 24                    # 8-byte Folded Reload
	ld.d	$a0, $s2, 24
	st.d	$s0, $a1, 0
	st.d	$s7, $a1, 8
	addi.d	$s5, $s5, 8
	st.d	$s8, $a1, 16
	beq	$s5, $a0, .LBB125_27
.LBB125_16:                             # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB125_19 Depth 2
	ld.d	$s3, $s5, 0
	ori	$s2, $zero, 512
	b	.LBB125_19
	.p2align	4, , 16
.LBB125_17:                             #   in Loop: Header=BB125_19 Depth=2
	srai.d	$a1, $a0, 9
.LBB125_18:                             #   in Loop: Header=BB125_19 Depth=2
	slli.d	$a2, $a1, 3
	ldx.d	$s7, $s6, $a2
	alsl.d	$s6, $a1, $s6, 3
	addi.d	$s8, $s7, 512
	slli.d	$a1, $a1, 9
	sub.d	$a0, $a0, $a1
	add.d	$s0, $s7, $a0
	sub.d	$s2, $s2, $s4
	add.d	$s3, $s3, $s4
	blez	$s2, .LBB125_15
.LBB125_19:                             #   Parent Loop BB125_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	sub.d	$a0, $s8, $s0
	slt	$a1, $a0, $s2
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $s2, $a1
	or	$s4, $a0, $a1
	blt	$s4, $fp, .LBB125_25
# %bb.20:                               #   in Loop: Header=BB125_19 Depth=2
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB125_21:                             # %_ZSt14__copy_move_a2ILb1EPbS0_S0_ET2_T0_T1_S1_.exit.i28
                                        #   in Loop: Header=BB125_19 Depth=2
	sub.d	$a0, $s0, $s7
	add.d	$a0, $a0, $s4
	bltz	$a0, .LBB125_17
# %bb.22:                               #   in Loop: Header=BB125_19 Depth=2
	bltu	$s1, $a0, .LBB125_24
# %bb.23:                               #   in Loop: Header=BB125_19 Depth=2
	add.d	$s0, $s0, $s4
	sub.d	$s2, $s2, $s4
	add.d	$s3, $s3, $s4
	bgtz	$s2, .LBB125_19
	b	.LBB125_15
	.p2align	4, , 16
.LBB125_24:                             #   in Loop: Header=BB125_19 Depth=2
	srli.d	$a1, $a0, 9
	b	.LBB125_18
.LBB125_25:                             #   in Loop: Header=BB125_19 Depth=2
	ori	$a0, $zero, 1
	bne	$s4, $a0, .LBB125_21
# %bb.26:                               #   in Loop: Header=BB125_19 Depth=2
	ld.b	$a0, $s3, 0
	st.b	$a0, $s0, 0
	b	.LBB125_21
.LBB125_27:                             # %._crit_edge
	move	$a0, $s2
	ld.d	$s2, $s2, 8
	ld.d	$a0, $a0, 0
	sub.d	$fp, $a0, $s2
	blez	$fp, .LBB125_51
# %bb.28:                               # %.lr.ph.i9.preheader
	ori	$s3, $zero, 2
	ori	$s4, $zero, 511
	ori	$s5, $zero, 1
	b	.LBB125_31
	.p2align	4, , 16
.LBB125_29:                             #   in Loop: Header=BB125_31 Depth=1
	srai.d	$a1, $a0, 9
.LBB125_30:                             #   in Loop: Header=BB125_31 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s7, $s6, $a2
	alsl.d	$s6, $a1, $s6, 3
	addi.d	$s8, $s7, 512
	slli.d	$a1, $a1, 9
	sub.d	$a0, $a0, $a1
	add.d	$s0, $s7, $a0
	sub.d	$fp, $fp, $s1
	add.d	$s2, $s2, $s1
	blez	$fp, .LBB125_51
.LBB125_31:                             # %.lr.ph.i9
                                        # =>This Inner Loop Header: Depth=1
	sub.d	$a0, $s8, $s0
	slt	$a1, $a0, $fp
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$s1, $a0, $a1
	blt	$s1, $s3, .LBB125_37
# %bb.32:                               #   in Loop: Header=BB125_31 Depth=1
	move	$a0, $s0
	move	$a1, $s2
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB125_33:                             # %_ZSt14__copy_move_a2ILb1EPbS0_S0_ET2_T0_T1_S1_.exit.i13
                                        #   in Loop: Header=BB125_31 Depth=1
	sub.d	$a0, $s0, $s7
	add.d	$a0, $a0, $s1
	bltz	$a0, .LBB125_29
# %bb.34:                               #   in Loop: Header=BB125_31 Depth=1
	bltu	$s4, $a0, .LBB125_36
# %bb.35:                               #   in Loop: Header=BB125_31 Depth=1
	add.d	$s0, $s0, $s1
	sub.d	$fp, $fp, $s1
	add.d	$s2, $s2, $s1
	bgtz	$fp, .LBB125_31
	b	.LBB125_51
	.p2align	4, , 16
.LBB125_36:                             #   in Loop: Header=BB125_31 Depth=1
	srli.d	$a1, $a0, 9
	b	.LBB125_30
.LBB125_37:                             #   in Loop: Header=BB125_31 Depth=1
	bne	$s1, $s5, .LBB125_33
# %bb.38:                               #   in Loop: Header=BB125_31 Depth=1
	ld.b	$a0, $s2, 0
	st.b	$a0, $s0, 0
	b	.LBB125_33
.LBB125_39:
	ld.d	$a0, $s2, 0
	ld.d	$s0, $a3, 0
	ld.d	$s7, $a3, 8
	ld.d	$s8, $a3, 16
	ld.d	$s6, $a3, 24
	sub.d	$fp, $a0, $s3
	blez	$fp, .LBB125_51
# %bb.40:                               # %.lr.ph.i39.preheader
	ori	$s2, $zero, 2
	ori	$s4, $zero, 511
	ori	$s5, $zero, 1
	b	.LBB125_43
	.p2align	4, , 16
.LBB125_41:                             #   in Loop: Header=BB125_43 Depth=1
	srai.d	$a1, $a0, 9
.LBB125_42:                             #   in Loop: Header=BB125_43 Depth=1
	slli.d	$a2, $a1, 3
	ldx.d	$s7, $s6, $a2
	alsl.d	$s6, $a1, $s6, 3
	addi.d	$s8, $s7, 512
	slli.d	$a1, $a1, 9
	sub.d	$a0, $a0, $a1
	add.d	$s0, $s7, $a0
	sub.d	$fp, $fp, $s1
	add.d	$s3, $s3, $s1
	blez	$fp, .LBB125_51
.LBB125_43:                             # %.lr.ph.i39
                                        # =>This Inner Loop Header: Depth=1
	sub.d	$a0, $s8, $s0
	slt	$a1, $a0, $fp
	maskeqz	$a0, $a0, $a1
	masknez	$a1, $fp, $a1
	or	$s1, $a0, $a1
	blt	$s1, $s2, .LBB125_49
# %bb.44:                               #   in Loop: Header=BB125_43 Depth=1
	move	$a0, $s0
	move	$a1, $s3
	move	$a2, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB125_45:                             # %_ZSt14__copy_move_a2ILb1EPbS0_S0_ET2_T0_T1_S1_.exit.i43
                                        #   in Loop: Header=BB125_43 Depth=1
	sub.d	$a0, $s0, $s7
	add.d	$a0, $a0, $s1
	bltz	$a0, .LBB125_41
# %bb.46:                               #   in Loop: Header=BB125_43 Depth=1
	bltu	$s4, $a0, .LBB125_48
# %bb.47:                               #   in Loop: Header=BB125_43 Depth=1
	add.d	$s0, $s0, $s1
	sub.d	$fp, $fp, $s1
	add.d	$s3, $s3, $s1
	bgtz	$fp, .LBB125_43
	b	.LBB125_51
	.p2align	4, , 16
.LBB125_48:                             #   in Loop: Header=BB125_43 Depth=1
	srli.d	$a1, $a0, 9
	b	.LBB125_42
.LBB125_49:                             #   in Loop: Header=BB125_43 Depth=1
	bne	$s1, $s5, .LBB125_45
# %bb.50:                               #   in Loop: Header=BB125_43 Depth=1
	ld.b	$a0, $s3, 0
	st.b	$a0, $s0, 0
	b	.LBB125_45
.LBB125_51:                             # %_ZSt14__copy_move_a1ILb1EPbbEN9__gnu_cxx11__enable_ifIXsr23__is_random_access_iterIT0_EE7__valueESt15_Deque_iteratorIT1_RS5_PS5_EE6__typeES3_S3_S8_.exit19
	ld.d	$a0, $sp, 16                    # 8-byte Folded Reload
	st.d	$s0, $a0, 0
	st.d	$s7, $a0, 8
	st.d	$s8, $a0, 16
	st.d	$s6, $a0, 24
	ld.d	$s8, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s7, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 72                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 80                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 88                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 96                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 104                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 112                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 120                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 128
	ret
.Lfunc_end125:
	.size	_ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_, .Lfunc_end125-_ZSt15__copy_move_ditILb1EbRbPbSt15_Deque_iteratorIbS0_S1_EET3_S2_IT0_T1_T2_ES8_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_,"axG",@progbits,_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_,comdat
	.weak	_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_ # -- Begin function _ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_
	.p2align	5
	.type	_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_,@function
_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_: # @_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a2, $a0, 64
	ld.d	$a0, $a0, 48
	addi.d	$a2, $a2, -1
	beq	$a0, $a2, .LBB126_2
# %bb.1:
	ld.b	$a1, $a1, 0
	ld.d	$a2, $fp, 56
	st.b	$a1, $a0, 0
	addi.d	$a0, $a0, 1
	st.d	$a0, $fp, 48
	bne	$a0, $a2, .LBB126_7
	b	.LBB126_6
.LBB126_2:
	ld.d	$s0, $fp, 72
	ld.d	$a2, $fp, 40
	sub.d	$a2, $s0, $a2
	srli.d	$a2, $a2, 3
	sltu	$a3, $zero, $s0
	ld.d	$a4, $fp, 56
	ld.d	$a5, $fp, 32
	ld.d	$a6, $fp, 16
	sub.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 9
	add.d	$a0, $a0, $a5
	add.d	$a3, $a4, $a6
	sub.d	$a0, $a0, $a3
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 2047
	beq	$a0, $a2, .LBB126_8
# %bb.3:
	move	$s1, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s0, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB126_5
# %bb.4:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s0, $fp, 72
.LBB126_5:                              # %.thread
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s0, 8
	ld.d	$a1, $fp, 48
	ld.b	$a2, $s1, 0
	addi.d	$a3, $s0, 8
	st.b	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
.LBB126_6:
	ld.d	$a0, $fp, 72
	ld.d	$a0, $a0, -8
	addi.d	$a0, $a0, 512
.LBB126_7:                              # %_ZNSt5dequeIbSaIbEE4backEv.exit
	addi.d	$a0, $a0, -1
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB126_8:
	pcalau12i	$a0, %pc_hi20(.L.str.220)
	addi.d	$a0, $a0, %pc_lo12(.L.str.220)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end126:
	.size	_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_, .Lfunc_end126-_ZNSt5dequeIbSaIbEE12emplace_backIJbEEERbDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb: # @_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB127_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB127_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB127_12
# %bb.3:
	move	$a0, $s0
	b	.LBB127_8
.LBB127_4:                              # %_ZNSt11_Deque_baseIbSaIbEE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB127_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB127_6:                              # %_ZSt4copyIPPbS1_ET0_T_S3_S2_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB127_9
.LBB127_7:                              # %_ZSt9__advanceIPPblEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB127_14
.LBB127_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB127_9:                              # %_ZSt4copyIPPbS1_ET0_T_S3_S2_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB127_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB127_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB127_6
.LBB127_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB127_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB127_9
.LBB127_14:                             # %_ZSt9__advanceIPPblEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB127_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB127_9
.Lfunc_end127:
	.size	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb, .Lfunc_end127-_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_,"axG",@progbits,_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_,comdat
	.weak	_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ # -- Begin function _ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_,@function
_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_: # @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	ld.d	$a2, $fp, 48
	ld.d	$a3, $fp, 56
	srli.d	$a0, $a0, 3
	sltu	$a4, $zero, $s1
	sub.d	$a0, $a0, $a4
	sub.d	$a2, $a2, $a3
	ld.d	$a3, $fp, 32
	ld.d	$a4, $fp, 16
	slli.d	$a0, $a0, 7
	srai.d	$a2, $a2, 2
	add.d	$a0, $a0, $a2
	sub.d	$a2, $a3, $a4
	srai.d	$a2, $a2, 2
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 511
	beq	$a0, $a2, .LBB128_4
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB128_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB128_3:                              # %_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a1, $fp, 48
	ld.w	$a2, $s0, 0
	addi.d	$a3, $s1, 8
	st.w	$a2, $a1, 0
	st.d	$a3, $fp, 72
	st.d	$a0, $fp, 56
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 64
	st.d	$a0, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB128_4:
	pcalau12i	$a0, %pc_hi20(.L.str.220)
	addi.d	$a0, $a0, %pc_lo12(.L.str.220)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end128:
	.size	_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_, .Lfunc_end128-_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb
	.p2align	5
	.type	_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb: # @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$s6, $a0, $s1
	srai.d	$a3, $s6, 3
	ld.d	$s4, $fp, 8
	addi.d	$s3, $a3, 1
	add.d	$s7, $s3, $a1
	slli.d	$a3, $s7, 1
	move	$s0, $a2
	bgeu	$a3, $s4, .LBB129_4
# %bb.1:
	ld.d	$a2, $fp, 0
	sub.d	$a3, $s4, $s7
	slli.d	$a3, $a3, 2
	bstrins.d	$a3, $zero, 2, 0
	add.d	$a2, $a2, $a3
	maskeqz	$a1, $a1, $s0
	alsl.d	$s0, $a1, $a2, 3
	addi.d	$a0, $a0, 8
	bgeu	$s0, $s1, .LBB129_7
# %bb.2:
	sub.d	$a2, $a0, $s1
	ori	$a0, $zero, 9
	blt	$a2, $a0, .LBB129_12
# %bb.3:
	move	$a0, $s0
	b	.LBB129_8
.LBB129_4:                              # %_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm.exit
	sltu	$a0, $a1, $s4
	masknez	$a2, $a1, $a0
	maskeqz	$a0, $s4, $a0
	or	$a0, $a0, $a2
	add.d	$a0, $s4, $a0
	addi.d	$s5, $a0, 2
	slli.d	$a0, $s5, 3
	move	$s8, $a1
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	move	$s2, $a0
	sub.d	$a0, $s5, $s7
	slli.d	$a0, $a0, 2
	bstrins.d	$a0, $zero, 2, 0
	add.d	$a0, $s2, $a0
	maskeqz	$a1, $s8, $s0
	addi.d	$a2, $s6, 8
	ori	$a3, $zero, 9
	alsl.d	$s0, $a1, $a0, 3
	blt	$a2, $a3, .LBB129_10
# %bb.5:
	move	$a0, $s0
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB129_6:                              # %_ZSt4copyIPPiS1_ET0_T_S3_S2_.exit26
	ld.d	$a0, $fp, 0
	slli.d	$a1, $s4, 3
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	st.d	$s2, $fp, 0
	st.d	$s5, $fp, 8
	b	.LBB129_9
.LBB129_7:                              # %_ZSt9__advanceIPPilEvRT_T0_St26random_access_iterator_tag.exit.i
	alsl.d	$a1, $s3, $s0, 3
	sub.d	$a2, $a0, $s1
	srai.d	$a3, $a2, 3
	ori	$a4, $zero, 2
	sub.d	$a0, $a1, $a2
	blt	$a3, $a4, .LBB129_14
.LBB129_8:
	move	$a1, $s1
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
.LBB129_9:                              # %_ZSt4copyIPPiS1_ET0_T_S3_S2_.exit
	ld.d	$a0, $s0, 0
	st.d	$a0, $fp, 24
	addi.d	$a0, $a0, 512
	st.d	$a0, $fp, 32
	alsl.d	$a0, $s3, $s0, 3
	ld.d	$a1, $a0, -8
	st.d	$s0, $fp, 40
	addi.d	$a0, $a0, -8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB129_10:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB129_6
# %bb.11:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB129_6
.LBB129_12:
	ori	$a0, $zero, 8
	bne	$a2, $a0, .LBB129_9
# %bb.13:
	ld.d	$a0, $s1, 0
	st.d	$a0, $s0, 0
	b	.LBB129_9
.LBB129_14:                             # %_ZSt9__advanceIPPilEvRT_T0_St26random_access_iterator_tag.exit.thread.i
	ori	$a1, $zero, 8
	bne	$a2, $a1, .LBB129_9
# %bb.15:
	ld.d	$a1, $s1, 0
	st.d	$a1, $a0, 0
	b	.LBB129_9
.Lfunc_end129:
	.size	_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb, .Lfunc_end129-_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,"axG",@progbits,_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,comdat
	.weak	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb # -- Begin function _ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.p2align	5
	.type	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,@function
_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb: # @_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.cfi_startproc
# %bb.0:
	addi.d	$sp, $sp, -96
	.cfi_def_cfa_offset 96
	st.d	$ra, $sp, 88                    # 8-byte Folded Spill
	st.d	$fp, $sp, 80                    # 8-byte Folded Spill
	st.d	$s0, $sp, 72                    # 8-byte Folded Spill
	st.d	$s1, $sp, 64                    # 8-byte Folded Spill
	st.d	$s2, $sp, 56                    # 8-byte Folded Spill
	st.d	$s3, $sp, 48                    # 8-byte Folded Spill
	st.d	$s4, $sp, 40                    # 8-byte Folded Spill
	st.d	$s5, $sp, 32                    # 8-byte Folded Spill
	st.d	$s6, $sp, 24                    # 8-byte Folded Spill
	st.d	$s7, $sp, 16                    # 8-byte Folded Spill
	st.d	$s8, $sp, 8                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	move	$fp, $a0
	ld.d	$a0, $a0, 16
	ld.d	$s5, $fp, 32
	move	$s0, $a1
	beq	$a0, $s5, .LBB130_10
# %bb.1:
	ld.wu	$a1, $fp, 24
	bstrpick.d	$a5, $a2, 31, 0
	addi.d	$a4, $a1, 1
	bne	$s0, $a0, .LBB130_3
# %bb.2:
	addi.w	$a6, $a2, 0
	addi.w	$a7, $a1, 0
	beq	$a7, $a6, .LBB130_8
.LBB130_3:                              # %_ZNSt13_Bit_iteratormmEv.exit.preheader.i
	srli.d	$a6, $a4, 3
	lu12i.w	$a7, 262143
	ori	$a7, $a7, 4088
	and	$a6, $a6, $a7
	add.d	$a6, $a0, $a6
	andi	$t2, $a4, 63
	addi.w	$a7, $zero, -8
	ori	$t0, $zero, 63
	ori	$t1, $zero, 1
	addi.w	$a2, $a2, 0
	move	$t4, $a1
	move	$t3, $a0
	.p2align	4, , 16
.LBB130_4:                              # %_ZNSt13_Bit_iteratormmEv.exit.i
                                        # =>This Inner Loop Header: Depth=1
	addi.w	$t6, $t4, -1
	addi.w	$t4, $t4, 0
	sltui	$t4, $t4, 1
	maskeqz	$t5, $a7, $t4
	masknez	$t6, $t6, $t4
	maskeqz	$t4, $t0, $t4
	or	$t4, $t4, $t6
	addi.w	$t6, $t2, -1
	sltui	$t7, $t2, 1
	masknez	$t2, $t6, $t7
	maskeqz	$t6, $t0, $t7
	ldx.d	$t8, $t3, $t5
	or	$t2, $t6, $t2
	maskeqz	$t6, $a7, $t7
	add.d	$a6, $a6, $t6
	srl.d	$t6, $t8, $t4
	andi	$t7, $t6, 1
	sll.d	$t6, $t1, $t2
	beqz	$t7, .LBB130_6
# %bb.5:                                #   in Loop: Header=BB130_4 Depth=1
	ld.d	$t7, $a6, 0
	or	$t6, $t7, $t6
	add.d	$t3, $t3, $t5
	st.d	$t6, $a6, 0
	beq	$t3, $s0, .LBB130_7
	b	.LBB130_4
	.p2align	4, , 16
.LBB130_6:                              #   in Loop: Header=BB130_4 Depth=1
	ld.d	$t7, $a6, 0
	andn	$t6, $t7, $t6
	add.d	$t3, $t3, $t5
	st.d	$t6, $a6, 0
	bne	$t3, $s0, .LBB130_4
.LBB130_7:                              # %_ZNSt14_Bit_referenceaSERKS_.exit.i
                                        #   in Loop: Header=BB130_4 Depth=1
	bne	$t4, $a2, .LBB130_4
.LBB130_8:                              # %_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_.exit
	ori	$a2, $zero, 1
	sll.d	$a2, $a2, $a5
	beqz	$a3, .LBB130_22
# %bb.9:
	ld.d	$a3, $s0, 0
	or	$a2, $a3, $a2
	st.d	$a2, $s0, 0
	ori	$a2, $zero, 63
	st.w	$a4, $fp, 24
	beq	$a1, $a2, .LBB130_23
	b	.LBB130_36
.LBB130_10:
	ld.d	$s2, $fp, 0
	ld.wu	$a1, $fp, 24
	sub.d	$s1, $a0, $s2
	alsl.d	$a1, $s1, $a1, 3
	addi.w	$a0, $zero, -64
	lu52i.d	$a0, $a0, 2047
	beq	$a1, $a0, .LBB130_39
# %bb.11:                               # %_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc.exit
	move	$s8, $a3
	move	$s6, $a2
	ori	$a2, $zero, 1
	sltu	$a3, $a2, $a1
	masknez	$a2, $a2, $a3
	maskeqz	$a3, $a1, $a3
	or	$a2, $a3, $a2
	add.d	$a1, $a2, $a1
	sltu	$a2, $a1, $a2
	sltu	$a3, $a1, $a0
	maskeqz	$a1, $a1, $a3
	masknez	$a0, $a0, $a3
	or	$a0, $a1, $a0
	addi.d	$a0, $a0, 63
	masknez	$a0, $a0, $a2
	addi.w	$a1, $zero, -1
	lu52i.d	$a1, $a1, 2047
	maskeqz	$a1, $a1, $a2
	or	$a0, $a1, $a0
	srli.d	$a1, $a0, 3
	addi.w	$s7, $zero, -8
	lu52i.d	$a0, $s7, 255
	st.d	$a1, $sp, 0                     # 8-byte Folded Spill
	and	$a0, $a1, $a0
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	sub.d	$s4, $s0, $s2
	ori	$a1, $zero, 9
	move	$s3, $a0
	blt	$s4, $a1, .LBB130_37
# %bb.12:
	move	$a0, $s3
	move	$a1, $s2
	move	$a2, $s4
	pcaddu18i	$ra, %call36(memmove)
	jirl	$ra, $ra, 0
	add.d	$a1, $s3, $s4
.LBB130_13:                             # %_ZSt4copyIPmS0_ET0_T_S2_S1_.exit.i
	addi.w	$a3, $s6, 0
	move	$a2, $s8
	move	$a4, $zero
	beqz	$a3, .LBB130_20
# %bb.14:                               # %.lr.ph.i.i.i.preheader
	move	$a7, $zero
	ori	$a5, $zero, 1
	move	$a6, $s0
	.p2align	4, , 16
.LBB130_15:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$t0, $a6, 0
	srl.d	$t0, $t0, $a7
	andi	$t1, $t0, 1
	sll.d	$t0, $a5, $a4
	beqz	$t1, .LBB130_17
# %bb.16:                               #   in Loop: Header=BB130_15 Depth=1
	ld.d	$t1, $a1, 0
	or	$t0, $t1, $t0
	b	.LBB130_18
	.p2align	4, , 16
.LBB130_17:                             #   in Loop: Header=BB130_15 Depth=1
	ld.d	$t1, $a1, 0
	andn	$t0, $t1, $t0
.LBB130_18:                             # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i
                                        #   in Loop: Header=BB130_15 Depth=1
	st.d	$t0, $a1, 0
	addi.w	$t0, $a4, 1
	addi.d	$a4, $a4, -63
	sltui	$t1, $a4, 1
	masknez	$a4, $t0, $t1
	alsl.d	$a1, $t1, $a1, 3
	addi.w	$t0, $a7, 1
	addi.d	$a7, $a7, -63
	sltui	$t1, $a7, 1
	masknez	$a7, $t0, $t1
	alsl.d	$a6, $t1, $a6, 3
	bne	$a7, $a3, .LBB130_15
# %bb.19:                               # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i
                                        #   in Loop: Header=BB130_15 Depth=1
	bne	$a6, $s0, .LBB130_15
.LBB130_20:                             # %_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.exit
	addi.w	$a5, $a4, 1
	addi.d	$a3, $a4, -63
	sltui	$a6, $a3, 1
	ori	$a3, $zero, 1
	sll.d	$a3, $a3, $a4
	beqz	$a2, .LBB130_24
# %bb.21:
	ld.d	$a2, $a1, 0
	or	$a2, $a2, $a3
	b	.LBB130_25
.LBB130_22:
	ld.d	$a3, $s0, 0
	andn	$a2, $a3, $a2
	st.d	$a2, $s0, 0
	ori	$a2, $zero, 63
	st.w	$a4, $fp, 24
	bne	$a1, $a2, .LBB130_36
.LBB130_23:
	st.w	$zero, $fp, 24
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 16
	b	.LBB130_36
.LBB130_24:
	ld.d	$a2, $a1, 0
	andn	$a2, $a2, $a3
.LBB130_25:                             # %_ZNSt14_Bit_referenceaSEb.exit124
	st.d	$a2, $a1, 0
	ld.d	$a2, $fp, 16
	ld.w	$a3, $fp, 24
	alsl.d	$s4, $a6, $a1, 3
	masknez	$s8, $a5, $a6
	bne	$s0, $a2, .LBB130_27
# %bb.26:                               # %_ZNSt14_Bit_referenceaSEb.exit124
	addi.w	$a1, $s6, 0
	beq	$a1, $a3, .LBB130_33
.LBB130_27:                             # %.lr.ph.i.i.preheader
	ori	$a1, $zero, 1
	.p2align	4, , 16
.LBB130_28:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a5, $s0, 0
	addi.w	$a4, $s6, 0
	srl.d	$a5, $a5, $a4
	andi	$a6, $a5, 1
	sll.d	$a5, $a1, $s8
	beqz	$a6, .LBB130_30
# %bb.29:                               #   in Loop: Header=BB130_28 Depth=1
	ld.d	$a6, $s4, 0
	or	$a5, $a6, $a5
	b	.LBB130_31
	.p2align	4, , 16
.LBB130_30:                             #   in Loop: Header=BB130_28 Depth=1
	ld.d	$a6, $s4, 0
	andn	$a5, $a6, $a5
.LBB130_31:                             # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i
                                        #   in Loop: Header=BB130_28 Depth=1
	st.d	$a5, $s4, 0
	addi.w	$a5, $s8, 1
	addi.d	$a6, $s8, -63
	sltui	$a6, $a6, 1
	masknez	$s8, $a5, $a6
	alsl.d	$s4, $a6, $s4, 3
	addi.w	$a0, $s6, 1
	addi.d	$a4, $a4, -63
	sltui	$a4, $a4, 1
	alsl.d	$s0, $a4, $s0, 3
	masknez	$s6, $a0, $a4
	bne	$s0, $a2, .LBB130_28
# %bb.32:                               # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i
                                        #   in Loop: Header=BB130_28 Depth=1
	bne	$s6, $a3, .LBB130_28
.LBB130_33:                             # %_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_.exit
	beqz	$s2, .LBB130_35
# %bb.34:
	sub.d	$a0, $s5, $s1
	move	$a1, $s1
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.LBB130_35:                             # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	lu52i.d	$a0, $s7, 511
	ld.d	$a1, $sp, 0                     # 8-byte Folded Reload
	and	$a0, $a1, $a0
	add.d	$a0, $s3, $a0
	st.d	$a0, $fp, 32
	st.d	$s3, $fp, 0
	st.w	$zero, $fp, 8
	st.d	$s4, $fp, 16
	st.w	$s8, $fp, 24
.LBB130_36:                             # %_ZNSt13_Bit_iteratorppEv.exit
	ld.d	$s8, $sp, 8                     # 8-byte Folded Reload
	ld.d	$s7, $sp, 16                    # 8-byte Folded Reload
	ld.d	$s6, $sp, 24                    # 8-byte Folded Reload
	ld.d	$s5, $sp, 32                    # 8-byte Folded Reload
	ld.d	$s4, $sp, 40                    # 8-byte Folded Reload
	ld.d	$s3, $sp, 48                    # 8-byte Folded Reload
	ld.d	$s2, $sp, 56                    # 8-byte Folded Reload
	ld.d	$s1, $sp, 64                    # 8-byte Folded Reload
	ld.d	$s0, $sp, 72                    # 8-byte Folded Reload
	ld.d	$fp, $sp, 80                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 88                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 96
	ret
.LBB130_37:
	ori	$a0, $zero, 8
	move	$a1, $s3
	bne	$s4, $a0, .LBB130_13
# %bb.38:
	ld.d	$a0, $s2, 0
	st.d	$a0, $s3, 0
	addi.d	$a1, $s3, 8
	b	.LBB130_13
.LBB130_39:
	pcalau12i	$a0, %pc_hi20(.L.str.226)
	addi.d	$a0, $a0, %pc_lo12(.L.str.226)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.Lfunc_end130:
	.size	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb, .Lfunc_end130-_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_: # @_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_
.Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception67
# %bb.0:
	addi.d	$sp, $sp, -224
	.cfi_def_cfa_offset 224
	st.d	$ra, $sp, 216                   # 8-byte Folded Spill
	st.d	$fp, $sp, 208                   # 8-byte Folded Spill
	st.d	$s0, $sp, 200                   # 8-byte Folded Spill
	st.d	$s1, $sp, 192                   # 8-byte Folded Spill
	st.d	$s2, $sp, 184                   # 8-byte Folded Spill
	st.d	$s3, $sp, 176                   # 8-byte Folded Spill
	st.d	$s4, $sp, 168                   # 8-byte Folded Spill
	st.d	$s5, $sp, 160                   # 8-byte Folded Spill
	st.d	$s6, $sp, 152                   # 8-byte Folded Spill
	st.d	$s7, $sp, 144                   # 8-byte Folded Spill
	st.d	$s8, $sp, 136                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	.cfi_offset 26, -48
	.cfi_offset 27, -56
	.cfi_offset 28, -64
	.cfi_offset 29, -72
	.cfi_offset 30, -80
	.cfi_offset 31, -88
	ld.d	$a5, $a2, 0
	ld.d	$a7, $a3, 0
	move	$fp, $a0
	beq	$a5, $a7, .LBB131_9
# %bb.1:
	move	$s0, $a1
	ld.d	$s2, $a1, 16
	ld.d	$a0, $a1, 48
	bne	$a5, $s2, .LBB131_3
# %bb.2:
	beq	$a7, $a0, .LBB131_17
.LBB131_3:                              # %.critedge
	ld.d	$t1, $a3, 24
	ld.d	$t0, $a2, 24
	sub.d	$a1, $t1, $t0
	srai.d	$a1, $a1, 3
	ld.d	$t2, $a3, 8
	sltu	$a4, $zero, $t1
	sub.d	$a1, $a1, $a4
	ld.d	$t3, $a2, 16
	sub.d	$a4, $a7, $t2
	srai.d	$a4, $a4, 7
	alsl.d	$a4, $a1, $a4, 2
	sub.d	$a6, $t3, $a5
	ld.d	$a1, $s0, 40
	srai.d	$a6, $a6, 7
	add.d	$s3, $a4, $a6
	ld.d	$a4, $s0, 32
	sub.d	$a6, $t0, $a1
	ld.d	$t4, $a2, 8
	srai.d	$a2, $a6, 3
	sltu	$a6, $zero, $t0
	sub.d	$a6, $a2, $a6
	sub.d	$a2, $a5, $t4
	srai.d	$t5, $a2, 7
	sub.d	$t6, $a4, $s2
	ld.d	$a2, $s0, 72
	srai.d	$t6, $t6, 7
	add.d	$t5, $t5, $t6
	alsl.d	$s1, $a6, $t5, 2
	sub.d	$t5, $a2, $a1
	ld.d	$a6, $s0, 56
	srai.d	$t5, $t5, 3
	sltu	$t7, $zero, $a2
	sub.d	$t7, $t5, $t7
	sub.d	$t5, $a0, $a6
	srai.d	$t5, $t5, 7
	add.d	$t6, $t5, $t6
	alsl.d	$t6, $t7, $t6, 2
	sub.d	$t6, $t6, $s3
	srli.d	$t6, $t6, 1
	bgeu	$t6, $s1, .LBB131_10
# %bb.4:
	beq	$a7, $a0, .LBB131_6
# %bb.5:
	ld.d	$a1, $a3, 16
	ld.d	$a3, $s0, 64
	st.d	$a7, $sp, 104
	st.d	$t2, $sp, 112
	st.d	$a1, $sp, 120
	st.d	$t1, $sp, 128
	st.d	$a0, $sp, 72
	st.d	$a6, $sp, 80
	st.d	$a3, $sp, 88
	st.d	$a2, $sp, 96
	st.d	$a5, $sp, 40
	st.d	$t4, $sp, 48
	st.d	$t3, $sp, 56
	st.d	$t0, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 104
	addi.d	$a2, $sp, 72
	addi.d	$a3, $sp, 40
	pcaddu18i	$ra, %call36(_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 48
	ld.d	$a6, $s0, 56
	ld.d	$a2, $s0, 72
	sub.d	$a1, $a0, $a6
	srai.d	$t5, $a1, 7
.LBB131_6:
	ld.d	$a1, $s0, 64
	sub.d	$a3, $t5, $s3
	bltz	$a3, .LBB131_15
# %bb.7:
	ori	$a4, $zero, 3
	bltu	$a4, $a3, .LBB131_22
# %bb.8:
	sub.d	$a3, $zero, $s3
	slli.d	$a3, $a3, 7
	add.d	$s3, $a0, $a3
	move	$s2, $a6
	move	$s8, $a1
	move	$s7, $a2
	b	.LBB131_24
.LBB131_9:
	vld	$vr0, $a2, 8
	ld.d	$a0, $a2, 24
	st.d	$a5, $fp, 0
	vst	$vr0, $fp, 8
	st.d	$a0, $fp, 24
	b	.LBB131_40
.LBB131_10:
	beq	$a5, $s2, .LBB131_12
# %bb.11:
	ld.d	$a0, $s0, 24
	ld.d	$a2, $a3, 16
	st.d	$s2, $sp, 104
	st.d	$a0, $sp, 112
	st.d	$a4, $sp, 120
	st.d	$a1, $sp, 128
	st.d	$a5, $sp, 72
	st.d	$t4, $sp, 80
	st.d	$t3, $sp, 88
	st.d	$t0, $sp, 96
	st.d	$a7, $sp, 40
	st.d	$t2, $sp, 48
	st.d	$a2, $sp, 56
	st.d	$t1, $sp, 64
	addi.d	$a0, $sp, 8
	addi.d	$a1, $sp, 104
	addi.d	$a2, $sp, 72
	addi.d	$a3, $sp, 40
	pcaddu18i	$ra, %call36(_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_)
	jirl	$ra, $ra, 0
	ld.d	$s2, $s0, 16
	ld.d	$a4, $s0, 32
	ld.d	$a1, $s0, 40
.LBB131_12:
	ld.d	$a0, $s0, 24
	sub.d	$a2, $s2, $a0
	srai.d	$a2, $a2, 7
	add.d	$a2, $a2, $s3
	bltz	$a2, .LBB131_16
# %bb.13:
	ori	$a3, $zero, 3
	bltu	$a3, $a2, .LBB131_28
# %bb.14:
	slli.d	$a2, $s3, 7
	add.d	$s4, $s2, $a2
	move	$s5, $a0
	move	$s6, $a4
	move	$s3, $a1
	b	.LBB131_30
.LBB131_15:
	srai.d	$a4, $a3, 2
	b	.LBB131_23
.LBB131_16:
	srai.d	$a3, $a2, 2
	b	.LBB131_29
.LBB131_17:
	ld.d	$s1, $s0, 24
	ld.d	$s3, $s0, 32
	ld.d	$s4, $s0, 40
	ld.d	$a1, $s0, 72
	st.d	$s2, $sp, 104
	st.d	$s1, $sp, 112
	vld	$vr0, $s0, 56
	st.d	$s3, $sp, 120
	st.d	$s4, $sp, 128
	st.d	$a0, $sp, 72
	vst	$vr0, $sp, 80
	st.d	$a1, $sp, 96
.Ltmp2771:
	addi.d	$a1, $sp, 104
	addi.d	$a2, $sp, 72
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
.Ltmp2772:
# %bb.18:                               # %.noexc.i
	ld.d	$s5, $s0, 72
	bgeu	$s4, $s5, .LBB131_21
# %bb.19:                               # %.lr.ph.i.i.i.preheader
	move	$a1, $s4
	.p2align	4, , 16
.LBB131_20:                             # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s6, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s6
	bltu	$s6, $s5, .LBB131_20
.LBB131_21:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE5clearEv.exit
	st.d	$s2, $s0, 48
	st.d	$s1, $s0, 56
	st.d	$s3, $s0, 64
	st.d	$s4, $s0, 72
	st.d	$s2, $fp, 0
	st.d	$s1, $fp, 8
	st.d	$s3, $fp, 16
	st.d	$s4, $fp, 24
	b	.LBB131_40
.LBB131_22:
	srli.d	$a4, $a3, 2
.LBB131_23:
	slli.d	$a5, $a4, 3
	ldx.d	$s2, $a2, $a5
	alsl.d	$s7, $a4, $a2, 3
	addi.d	$s8, $s2, 512
	slli.d	$a4, $a4, 2
	sub.d	$a3, $a3, $a4
	slli.d	$a3, $a3, 7
	add.d	$s3, $s2, $a3
.LBB131_24:                             # %_ZStmiRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
	st.d	$s3, $sp, 104
	st.d	$s2, $sp, 112
	st.d	$s8, $sp, 120
	st.d	$s7, $sp, 128
	st.d	$a0, $sp, 72
	st.d	$a6, $sp, 80
	st.d	$a1, $sp, 88
	st.d	$a2, $sp, 96
	addi.d	$a1, $sp, 104
	addi.d	$a2, $sp, 72
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
	ld.d	$s4, $s0, 72
	bgeu	$s7, $s4, .LBB131_27
# %bb.25:                               # %.lr.ph.i.i6.preheader
	move	$a1, $s7
	.p2align	4, , 16
.LBB131_26:                             # %.lr.ph.i.i6
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $a1, 8
	addi.d	$s5, $a1, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	move	$a1, $s5
	bltu	$s5, $s4, .LBB131_26
.LBB131_27:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE15_M_erase_at_endESt15_Deque_iteratorIS1_RS1_PS1_E.exit
	st.d	$s3, $s0, 48
	ld.d	$s4, $s0, 16
	ld.d	$s5, $s0, 24
	ld.d	$s6, $s0, 32
	ld.d	$s3, $s0, 40
	st.d	$s2, $s0, 56
	st.d	$s8, $s0, 64
	st.d	$s7, $s0, 72
	b	.LBB131_33
.LBB131_28:
	srli.d	$a3, $a2, 2
.LBB131_29:
	slli.d	$a5, $a3, 3
	ldx.d	$s5, $a1, $a5
	alsl.d	$s3, $a3, $a1, 3
	addi.d	$s6, $s5, 512
	slli.d	$a3, $a3, 2
	sub.d	$a2, $a2, $a3
	slli.d	$a2, $a2, 7
	add.d	$s4, $s5, $a2
.LBB131_30:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
	st.d	$s2, $sp, 104
	st.d	$a0, $sp, 112
	st.d	$a4, $sp, 120
	st.d	$a1, $sp, 128
	st.d	$s4, $sp, 72
	st.d	$s5, $sp, 80
	st.d	$s6, $sp, 88
	st.d	$s3, $sp, 96
	addi.d	$a1, $sp, 104
	addi.d	$a2, $sp, 72
	move	$a0, $s0
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE19_M_destroy_data_auxESt15_Deque_iteratorIS1_RS1_PS1_ES7_)
	jirl	$ra, $ra, 0
	ld.d	$s2, $s0, 40
	bgeu	$s2, $s3, .LBB131_32
	.p2align	4, , 16
.LBB131_31:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	ld.d	$a0, $s2, 0
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
	addi.d	$s2, $s2, 8
	bltu	$s2, $s3, .LBB131_31
.LBB131_32:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_erase_at_beginESt15_Deque_iteratorIS1_RS1_PS1_E.exit
	st.d	$s4, $s0, 16
	st.d	$s5, $s0, 24
	st.d	$s6, $s0, 32
	st.d	$s3, $s0, 40
.LBB131_33:
	st.d	$s5, $fp, 8
	st.d	$s6, $fp, 16
	sub.d	$a0, $s4, $s5
	srai.d	$a0, $a0, 7
	add.d	$a0, $a0, $s1
	st.d	$s3, $fp, 24
	bltz	$a0, .LBB131_36
# %bb.34:
	ori	$a1, $zero, 3
	bltu	$a1, $a0, .LBB131_37
# %bb.35:
	slli.d	$a0, $s1, 7
	add.d	$a0, $s4, $a0
	b	.LBB131_39
.LBB131_36:
	srai.d	$a1, $a0, 2
	b	.LBB131_38
.LBB131_37:
	srli.d	$a1, $a0, 2
.LBB131_38:
	alsl.d	$a2, $a1, $s3, 3
	slli.d	$a3, $a1, 3
	st.d	$a2, $fp, 24
	ldx.d	$a2, $s3, $a3
	st.d	$a2, $fp, 8
	addi.d	$a3, $a2, 512
	st.d	$a3, $fp, 16
	slli.d	$a1, $a1, 2
	sub.d	$a0, $a0, $a1
	slli.d	$a0, $a0, 7
	add.d	$a0, $a2, $a0
.LBB131_39:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit9
	st.d	$a0, $fp, 0
.LBB131_40:
	ld.d	$s8, $sp, 136                   # 8-byte Folded Reload
	ld.d	$s7, $sp, 144                   # 8-byte Folded Reload
	ld.d	$s6, $sp, 152                   # 8-byte Folded Reload
	ld.d	$s5, $sp, 160                   # 8-byte Folded Reload
	ld.d	$s4, $sp, 168                   # 8-byte Folded Reload
	ld.d	$s3, $sp, 176                   # 8-byte Folded Reload
	ld.d	$s2, $sp, 184                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 192                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 200                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 208                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 216                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 224
	ret
.LBB131_41:
.Ltmp2773:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end131:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_, .Lfunc_end131-_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE8_M_eraseESt15_Deque_iteratorIS1_RS1_PS1_ES7_,comdat
	.p2align	2, 0x0
GCC_except_table131:
.Lexception67:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end67-.Lcst_begin67
.Lcst_begin67:
	.uleb128 .Lfunc_begin67-.Lfunc_begin67  # >> Call Site 1 <<
	.uleb128 .Ltmp2771-.Lfunc_begin67       #   Call between .Lfunc_begin67 and .Ltmp2771
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2771-.Lfunc_begin67       # >> Call Site 2 <<
	.uleb128 .Ltmp2772-.Ltmp2771            #   Call between .Ltmp2771 and .Ltmp2772
	.uleb128 .Ltmp2773-.Lfunc_begin67       #     jumps to .Ltmp2773
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2772-.Lfunc_begin67       # >> Call Site 3 <<
	.uleb128 .Lfunc_end131-.Ltmp2772        #   Call between .Ltmp2772 and .Lfunc_end131
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end67:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_: # @_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_
.Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception68
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$a2, $a0, $s1
	srai.d	$a2, $a2, 3
	sltu	$a0, $zero, $a0
	ld.d	$a3, $fp, 48
	ld.d	$a4, $fp, 56
	sub.d	$a0, $a2, $a0
	ld.d	$a2, $fp, 32
	ld.d	$a5, $fp, 16
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a0, $a0, $a3, 2
	sub.d	$a2, $a2, $a5
	srai.d	$a2, $a2, 7
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 15
	beq	$a0, $a2, .LBB132_5
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	bne	$s1, $a0, .LBB132_3
# %bb.2:
	ori	$a1, $zero, 1
	ori	$a2, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 40
.LBB132_3:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EE23_M_reserve_map_at_frontEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	addi.d	$a1, $s1, -8
	st.d	$a0, $s1, -8
	st.d	$a1, $fp, 40
	st.d	$a0, $fp, 24
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	addi.d	$a0, $a0, 384
	st.d	$a0, $fp, 16
.Ltmp2774:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2775:
# %bb.4:                                # %_ZNSt16allocator_traitsISaIN2PP4WordEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB132_5:
	pcalau12i	$a0, %pc_hi20(.L.str.220)
	addi.d	$a0, $a0, %pc_lo12(.L.str.220)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB132_6:
.Ltmp2776:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 16
	ld.d	$a2, $fp, 32
	ld.d	$a0, $fp, 40
	addi.d	$a1, $a1, 128
	st.d	$a1, $fp, 16
	bne	$a1, $a2, .LBB132_8
# %bb.7:
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 40
	st.d	$a1, $fp, 24
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 32
	st.d	$a1, $fp, 16
.LBB132_8:                              # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EppEv.exit
	ld.d	$a0, $a0, -8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp2777:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp2778:
# %bb.9:
.LBB132_10:
.Ltmp2779:
	move	$fp, $a0
.Ltmp2780:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp2781:
# %bb.11:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB132_12:
.Ltmp2782:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end132:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_, .Lfunc_end132-_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJRKS1_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table132:
.Lexception68:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end68-.Lcst_begin68
.Lcst_begin68:
	.uleb128 .Lfunc_begin68-.Lfunc_begin68  # >> Call Site 1 <<
	.uleb128 .Ltmp2774-.Lfunc_begin68       #   Call between .Lfunc_begin68 and .Ltmp2774
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2774-.Lfunc_begin68       # >> Call Site 2 <<
	.uleb128 .Ltmp2775-.Ltmp2774            #   Call between .Ltmp2774 and .Ltmp2775
	.uleb128 .Ltmp2776-.Lfunc_begin68       #     jumps to .Ltmp2776
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2775-.Lfunc_begin68       # >> Call Site 3 <<
	.uleb128 .Ltmp2777-.Ltmp2775            #   Call between .Ltmp2775 and .Ltmp2777
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2777-.Lfunc_begin68       # >> Call Site 4 <<
	.uleb128 .Ltmp2778-.Ltmp2777            #   Call between .Ltmp2777 and .Ltmp2778
	.uleb128 .Ltmp2779-.Lfunc_begin68       #     jumps to .Ltmp2779
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2780-.Lfunc_begin68       # >> Call Site 5 <<
	.uleb128 .Ltmp2781-.Ltmp2780            #   Call between .Ltmp2780 and .Ltmp2781
	.uleb128 .Ltmp2782-.Lfunc_begin68       #     jumps to .Ltmp2782
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2781-.Lfunc_begin68       # >> Call Site 6 <<
	.uleb128 .Lfunc_end132-.Ltmp2781        #   Call between .Ltmp2781 and .Lfunc_end132
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end68:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_: # @_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_
.Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception69
# %bb.0:
	addi.d	$sp, $sp, -432
	.cfi_def_cfa_offset 432
	st.d	$ra, $sp, 424                   # 8-byte Folded Spill
	st.d	$fp, $sp, 416                   # 8-byte Folded Spill
	st.d	$s0, $sp, 408                   # 8-byte Folded Spill
	st.d	$s1, $sp, 400                   # 8-byte Folded Spill
	st.d	$s2, $sp, 392                   # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	.cfi_offset 25, -40
	move	$s0, $a2
	move	$s1, $a1
	move	$fp, $a0
	addi.d	$a0, $sp, 136
	move	$a1, $a3
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
	ld.d	$a0, $s0, 24
	ld.d	$a3, $s1, 40
	sub.d	$a1, $a0, $a3
	ld.d	$a2, $s0, 0
	ld.d	$a4, $s0, 8
	srai.d	$a1, $a1, 3
	sltu	$a0, $zero, $a0
	sub.d	$a0, $a1, $a0
	sub.d	$a2, $a2, $a4
	ld.d	$a4, $s1, 32
	ld.d	$a1, $s1, 16
	srai.d	$a2, $a2, 7
	alsl.d	$a0, $a0, $a2, 2
	ld.d	$a2, $s1, 72
	sub.d	$a4, $a4, $a1
	srai.d	$a4, $a4, 7
	add.d	$s2, $a0, $a4
	sub.d	$a5, $a2, $a3
	ld.d	$a0, $s1, 48
	ld.d	$a3, $s1, 56
	srai.d	$a5, $a5, 3
	sltu	$a6, $zero, $a2
	sub.d	$a5, $a5, $a6
	sub.d	$a6, $a0, $a3
	srai.d	$a6, $a6, 7
	alsl.d	$a5, $a5, $a6, 2
	add.d	$a4, $a5, $a4
	srli.d	$a4, $a4, 1
	bgeu	$s2, $a4, .LBB133_4
# %bb.1:
	ld.d	$a0, $s1, 24
	beq	$a1, $a0, .LBB133_9
# %bb.2:
	addi.d	$a0, $a1, -128
.Ltmp2790:
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2791:
# %bb.3:                                # %.noexc
	ld.d	$a0, $s1, 16
	addi.d	$t3, $a0, -128
	st.d	$t3, $s1, 16
	b	.LBB133_11
.LBB133_4:
	move	$a1, $a0
	beq	$a0, $a3, .LBB133_17
# %bb.5:                                # %_ZNSt5dequeIN2PP4WordESaIS1_EE4backEv.exit
	ld.d	$a2, $s1, 64
	addi.d	$a2, $a2, -128
	addi.d	$a1, $a1, -128
	beq	$a0, $a2, .LBB133_18
.LBB133_6:
.Ltmp2783:
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2784:
# %bb.7:                                # %.noexc14
	ld.d	$a0, $s1, 48
	addi.d	$a3, $a0, 128
	st.d	$a3, $s1, 48
	ld.d	$a0, $s1, 56
	ld.d	$a1, $s1, 72
	beq	$a3, $a0, .LBB133_20
.LBB133_8:
	ld.d	$a2, $s1, 64
	b	.LBB133_21
.LBB133_9:
.Ltmp2792:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2793:
# %bb.10:                               # %._ZNSt5dequeIN2PP4WordESaIS1_EE10push_frontEOS1_.exit_crit_edge
	ld.d	$t3, $s1, 16
.LBB133_11:                             # %_ZNSt5dequeIN2PP4WordESaIS1_EE10push_frontEOS1_.exit
	ld.d	$a5, $s1, 24
	ld.d	$a6, $s1, 32
	ld.d	$a4, $s1, 40
	addi.d	$a0, $t3, 128
	move	$a3, $a5
	move	$a2, $a6
	move	$a1, $a4
	bne	$a0, $a6, .LBB133_13
# %bb.12:
	ld.d	$a0, $a4, 8
	addi.d	$a1, $a4, 8
	addi.d	$a2, $a0, 512
	move	$a3, $a0
.LBB133_13:                             # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EppEv.exit
	addi.d	$a7, $a0, 128
	move	$t2, $a3
	move	$t1, $a2
	move	$t0, $a1
	beq	$a7, $a2, .LBB133_26
# %bb.14:                               # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EppEv.exit10
	sub.d	$t4, $t3, $a5
	srai.d	$t4, $t4, 7
	add.d	$t4, $t4, $s2
	bltz	$t4, .LBB133_27
.LBB133_15:
	ori	$t5, $zero, 3
	bltu	$t5, $t4, .LBB133_29
# %bb.16:
	slli.d	$t4, $s2, 7
	add.d	$t3, $t3, $t4
	b	.LBB133_31
.LBB133_17:
	ld.d	$a1, $a2, -8
	addi.d	$a1, $a1, 512
	ld.d	$a2, $s1, 64
	addi.d	$a2, $a2, -128
	addi.d	$a1, $a1, -128
	bne	$a0, $a2, .LBB133_6
.LBB133_18:
.Ltmp2785:
	move	$a0, $s1
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_)
	jirl	$ra, $ra, 0
.Ltmp2786:
# %bb.19:                               # %._ZNSt5dequeIN2PP4WordESaIS1_EE9push_backEOS1_.exit_crit_edge
	ld.d	$a3, $s1, 48
	ld.d	$a0, $s1, 56
	ld.d	$a1, $s1, 72
	bne	$a3, $a0, .LBB133_8
.LBB133_20:
	ld.d	$a0, $a1, -8
	addi.d	$a1, $a1, -8
	addi.d	$a2, $a0, 512
	move	$a3, $a2
.LBB133_21:                             # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EmmEv.exit
	addi.d	$a3, $a3, -128
	move	$a4, $a1
	move	$a5, $a2
	move	$a6, $a0
	move	$a7, $a3
	bne	$a3, $a0, .LBB133_23
# %bb.22:
	ld.d	$a6, $a1, -8
	addi.d	$a5, $a6, 512
	addi.d	$a4, $a1, -8
	move	$a7, $a5
.LBB133_23:                             # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EmmEv.exit16
	ld.d	$t4, $s1, 16
	ld.d	$t1, $s1, 24
	ld.d	$t0, $s1, 40
	sub.d	$t2, $t4, $t1
	srai.d	$t2, $t2, 7
	add.d	$t3, $t2, $s2
	addi.d	$a7, $a7, -128
	bltz	$t3, .LBB133_28
# %bb.24:
	ori	$t2, $zero, 3
	bltu	$t2, $t3, .LBB133_34
# %bb.25:
	ld.d	$t2, $s1, 32
	slli.d	$t3, $s2, 7
	add.d	$t3, $t4, $t3
	b	.LBB133_36
.LBB133_26:
	ld.d	$a7, $a1, 8
	addi.d	$t0, $a1, 8
	addi.d	$t1, $a7, 512
	move	$t2, $a7
	sub.d	$t4, $t3, $a5
	srai.d	$t4, $t4, 7
	add.d	$t4, $t4, $s2
	bgez	$t4, .LBB133_15
.LBB133_27:
	srai.d	$t3, $t4, 2
	b	.LBB133_30
.LBB133_28:
	srai.d	$t4, $t3, 2
	b	.LBB133_35
.LBB133_29:
	srli.d	$t3, $t4, 2
.LBB133_30:
	slli.d	$a5, $t3, 3
	ldx.d	$a5, $a4, $a5
	alsl.d	$a4, $t3, $a4, 3
	addi.d	$a6, $a5, 512
	slli.d	$t3, $t3, 2
	sub.d	$t3, $t4, $t3
	slli.d	$t3, $t3, 7
	add.d	$t3, $a5, $t3
.LBB133_31:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit
	st.d	$t3, $s0, 0
	st.d	$a5, $s0, 8
	st.d	$a6, $s0, 16
	addi.d	$t3, $t3, 128
	st.d	$a4, $s0, 24
	bne	$t3, $a6, .LBB133_33
# %bb.32:
	ld.d	$t3, $a4, 8
	addi.d	$a4, $a4, 8
	addi.d	$a6, $t3, 512
	move	$a5, $t3
.LBB133_33:                             # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EppEv.exit11
	st.d	$a7, $sp, 360
	st.d	$t2, $sp, 368
	st.d	$t1, $sp, 376
	st.d	$t0, $sp, 384
	st.d	$t3, $sp, 328
	st.d	$a5, $sp, 336
	st.d	$a6, $sp, 344
	st.d	$a4, $sp, 352
	st.d	$a0, $sp, 296
	st.d	$a3, $sp, 304
	st.d	$a2, $sp, 312
	st.d	$a1, $sp, 320
.Ltmp2794:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 360
	addi.d	$a2, $sp, 328
	addi.d	$a3, $sp, 296
	pcaddu18i	$ra, %call36(_ZSt15__copy_move_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_)
	jirl	$ra, $ra, 0
.Ltmp2795:
	b	.LBB133_37
.LBB133_34:
	srli.d	$t4, $t3, 2
.LBB133_35:
	slli.d	$t1, $t4, 3
	ldx.d	$t1, $t0, $t1
	alsl.d	$t0, $t4, $t0, 3
	addi.d	$t2, $t1, 512
	slli.d	$t4, $t4, 2
	sub.d	$t3, $t3, $t4
	slli.d	$t3, $t3, 7
	add.d	$t3, $t1, $t3
.LBB133_36:                             # %_ZStplRKSt15_Deque_iteratorIN2PP4WordERS1_PS1_El.exit18
	st.d	$t3, $s0, 0
	st.d	$t1, $s0, 8
	st.d	$t2, $s0, 16
	st.d	$t0, $s0, 24
	st.d	$t3, $sp, 360
	st.d	$t1, $sp, 368
	st.d	$t2, $sp, 376
	st.d	$t0, $sp, 384
	st.d	$a7, $sp, 328
	st.d	$a6, $sp, 336
	st.d	$a5, $sp, 344
	st.d	$a4, $sp, 352
	st.d	$a3, $sp, 296
	st.d	$a0, $sp, 304
	st.d	$a2, $sp, 312
	st.d	$a1, $sp, 320
.Ltmp2787:
	addi.d	$a0, $sp, 264
	addi.d	$a1, $sp, 360
	addi.d	$a2, $sp, 328
	addi.d	$a3, $sp, 296
	pcaddu18i	$ra, %call36(_ZSt24__copy_move_backward_ditILb1EN2PP4WordERS1_PS1_St15_Deque_iteratorIS1_S2_S3_EET3_S4_IT0_T1_T2_ESA_S6_)
	jirl	$ra, $ra, 0
.Ltmp2788:
.LBB133_37:
	ld.d	$a1, $s0, 0
.Ltmp2797:
	addi.d	$a0, $sp, 8
	addi.d	$a2, $sp, 136
	pcaddu18i	$ra, %call36(_ZN2PP4WordaSERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2798:
# %bb.38:
	addi.d	$a0, $sp, 8
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	vld	$vr0, $s0, 0
	vld	$vr1, $s0, 16
	vst	$vr0, $fp, 0
	vst	$vr1, $fp, 16
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	ld.d	$s2, $sp, 392                   # 8-byte Folded Reload
	ld.d	$s1, $sp, 400                   # 8-byte Folded Reload
	ld.d	$s0, $sp, 408                   # 8-byte Folded Reload
	ld.d	$fp, $sp, 416                   # 8-byte Folded Reload
	ld.d	$ra, $sp, 424                   # 8-byte Folded Reload
	addi.d	$sp, $sp, 432
	ret
.LBB133_39:
.Ltmp2789:
	b	.LBB133_42
.LBB133_40:
.Ltmp2796:
	b	.LBB133_42
.LBB133_41:
.Ltmp2799:
.LBB133_42:
	move	$fp, $a0
	addi.d	$a0, $sp, 136
	pcaddu18i	$ra, %call36(_ZN2PP4WordD1Ev)
	jirl	$ra, $ra, 0
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.Lfunc_end133:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_, .Lfunc_end133-_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE14_M_emplace_auxIJRKS1_EEESt15_Deque_iteratorIS1_RS1_PS1_ESA_DpOT_,comdat
	.p2align	2, 0x0
GCC_except_table133:
.Lexception69:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end69-.Lcst_begin69
.Lcst_begin69:
	.uleb128 .Lfunc_begin69-.Lfunc_begin69  # >> Call Site 1 <<
	.uleb128 .Ltmp2790-.Lfunc_begin69       #   Call between .Lfunc_begin69 and .Ltmp2790
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2790-.Lfunc_begin69       # >> Call Site 2 <<
	.uleb128 .Ltmp2786-.Ltmp2790            #   Call between .Ltmp2790 and .Ltmp2786
	.uleb128 .Ltmp2799-.Lfunc_begin69       #     jumps to .Ltmp2799
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2794-.Lfunc_begin69       # >> Call Site 3 <<
	.uleb128 .Ltmp2795-.Ltmp2794            #   Call between .Ltmp2794 and .Ltmp2795
	.uleb128 .Ltmp2796-.Lfunc_begin69       #     jumps to .Ltmp2796
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2787-.Lfunc_begin69       # >> Call Site 4 <<
	.uleb128 .Ltmp2788-.Ltmp2787            #   Call between .Ltmp2787 and .Ltmp2788
	.uleb128 .Ltmp2789-.Lfunc_begin69       #     jumps to .Ltmp2789
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2797-.Lfunc_begin69       # >> Call Site 5 <<
	.uleb128 .Ltmp2798-.Ltmp2797            #   Call between .Ltmp2797 and .Ltmp2798
	.uleb128 .Ltmp2799-.Lfunc_begin69       #     jumps to .Ltmp2799
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2798-.Lfunc_begin69       # >> Call Site 6 <<
	.uleb128 .Lfunc_end133-.Ltmp2798        #   Call between .Ltmp2798 and .Lfunc_end133
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end69:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_: # @_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_
.Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception70
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$a0, $a0, 72
	ld.d	$s1, $fp, 40
	sub.d	$a2, $a0, $s1
	srai.d	$a2, $a2, 3
	sltu	$a0, $zero, $a0
	ld.d	$a3, $fp, 48
	ld.d	$a4, $fp, 56
	sub.d	$a0, $a2, $a0
	ld.d	$a2, $fp, 32
	ld.d	$a5, $fp, 16
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a0, $a0, $a3, 2
	sub.d	$a2, $a2, $a5
	srai.d	$a2, $a2, 7
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 15
	beq	$a0, $a2, .LBB134_5
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	bne	$s1, $a0, .LBB134_3
# %bb.2:
	ori	$a1, $zero, 1
	ori	$a2, $zero, 1
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 40
.LBB134_3:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EE23_M_reserve_map_at_frontEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	addi.d	$a1, $s1, -8
	st.d	$a0, $s1, -8
	st.d	$a1, $fp, 40
	st.d	$a0, $fp, 24
	addi.d	$a1, $a0, 512
	st.d	$a1, $fp, 32
	addi.d	$a0, $a0, 384
	st.d	$a0, $fp, 16
.Ltmp2800:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2801:
# %bb.4:                                # %_ZNSt16allocator_traitsISaIN2PP4WordEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_.exit
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB134_5:
	pcalau12i	$a0, %pc_hi20(.L.str.220)
	addi.d	$a0, $a0, %pc_lo12(.L.str.220)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB134_6:
.Ltmp2802:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a1, $fp, 16
	ld.d	$a2, $fp, 32
	ld.d	$a0, $fp, 40
	addi.d	$a1, $a1, 128
	st.d	$a1, $fp, 16
	bne	$a1, $a2, .LBB134_8
# %bb.7:
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 40
	st.d	$a1, $fp, 24
	addi.d	$a2, $a1, 512
	st.d	$a2, $fp, 32
	st.d	$a1, $fp, 16
.LBB134_8:                              # %_ZNSt15_Deque_iteratorIN2PP4WordERS1_PS1_EppEv.exit
	ld.d	$a0, $a0, -8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp2803:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp2804:
# %bb.9:
.LBB134_10:
.Ltmp2805:
	move	$fp, $a0
.Ltmp2806:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp2807:
# %bb.11:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB134_12:
.Ltmp2808:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end134:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_, .Lfunc_end134-_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_push_front_auxIJS1_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table134:
.Lexception70:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end70-.Lcst_begin70
.Lcst_begin70:
	.uleb128 .Lfunc_begin70-.Lfunc_begin70  # >> Call Site 1 <<
	.uleb128 .Ltmp2800-.Lfunc_begin70       #   Call between .Lfunc_begin70 and .Ltmp2800
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2800-.Lfunc_begin70       # >> Call Site 2 <<
	.uleb128 .Ltmp2801-.Ltmp2800            #   Call between .Ltmp2800 and .Ltmp2801
	.uleb128 .Ltmp2802-.Lfunc_begin70       #     jumps to .Ltmp2802
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2801-.Lfunc_begin70       # >> Call Site 3 <<
	.uleb128 .Ltmp2803-.Ltmp2801            #   Call between .Ltmp2801 and .Ltmp2803
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2803-.Lfunc_begin70       # >> Call Site 4 <<
	.uleb128 .Ltmp2804-.Ltmp2803            #   Call between .Ltmp2803 and .Ltmp2804
	.uleb128 .Ltmp2805-.Lfunc_begin70       #     jumps to .Ltmp2805
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2806-.Lfunc_begin70       # >> Call Site 5 <<
	.uleb128 .Ltmp2807-.Ltmp2806            #   Call between .Ltmp2806 and .Ltmp2807
	.uleb128 .Ltmp2808-.Lfunc_begin70       #     jumps to .Ltmp2808
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2807-.Lfunc_begin70       # >> Call Site 6 <<
	.uleb128 .Lfunc_end134-.Ltmp2807        #   Call between .Ltmp2807 and .Lfunc_end134
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end70:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_,"axG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_,comdat
	.weak	_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_ # -- Begin function _ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_
	.p2align	5
	.type	_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_,@function
_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_: # @_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_
.Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception71
# %bb.0:
	addi.d	$sp, $sp, -32
	.cfi_def_cfa_offset 32
	st.d	$ra, $sp, 24                    # 8-byte Folded Spill
	st.d	$fp, $sp, 16                    # 8-byte Folded Spill
	st.d	$s0, $sp, 8                     # 8-byte Folded Spill
	st.d	$s1, $sp, 0                     # 8-byte Folded Spill
	.cfi_offset 1, -8
	.cfi_offset 22, -16
	.cfi_offset 23, -24
	.cfi_offset 24, -32
	move	$fp, $a0
	ld.d	$s1, $a0, 72
	ld.d	$a0, $a0, 40
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sltu	$a2, $zero, $s1
	ld.d	$a3, $fp, 48
	ld.d	$a4, $fp, 56
	sub.d	$a0, $a0, $a2
	ld.d	$a2, $fp, 32
	ld.d	$a5, $fp, 16
	sub.d	$a3, $a3, $a4
	srai.d	$a3, $a3, 7
	alsl.d	$a0, $a0, $a3, 2
	sub.d	$a2, $a2, $a5
	srai.d	$a2, $a2, 7
	add.d	$a0, $a0, $a2
	addi.w	$a2, $zero, -1
	lu52i.d	$a2, $a2, 15
	beq	$a0, $a2, .LBB135_5
# %bb.1:
	move	$s0, $a1
	ld.d	$a0, $fp, 0
	ld.d	$a1, $fp, 8
	sub.d	$a0, $s1, $a0
	srai.d	$a0, $a0, 3
	sub.d	$a0, $a1, $a0
	ori	$a1, $zero, 1
	bltu	$a1, $a0, .LBB135_3
# %bb.2:
	ori	$a1, $zero, 1
	move	$a0, $fp
	move	$a2, $zero
	pcaddu18i	$ra, %call36(_ZNSt5dequeIN2PP4WordESaIS1_EE17_M_reallocate_mapEmb)
	jirl	$ra, $ra, 0
	ld.d	$s1, $fp, 72
.LBB135_3:                              # %_ZNSt5dequeIN2PP4WordESaIS1_EE22_M_reserve_map_at_backEm.exit
	ori	$a0, $zero, 512
	pcaddu18i	$ra, %call36(_Znwm)
	jirl	$ra, $ra, 0
	st.d	$a0, $s1, 8
	ld.d	$a0, $fp, 48
.Ltmp2809:
	move	$a1, $s0
	pcaddu18i	$ra, %call36(_ZN2PP4WordC1ERKS0_)
	jirl	$ra, $ra, 0
.Ltmp2810:
# %bb.4:                                # %_ZNSt16allocator_traitsISaIN2PP4WordEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_.exit
	ld.d	$a0, $fp, 72
	ld.d	$a1, $a0, 8
	addi.d	$a0, $a0, 8
	st.d	$a0, $fp, 72
	st.d	$a1, $fp, 56
	addi.d	$a0, $a1, 512
	st.d	$a0, $fp, 64
	st.d	$a1, $fp, 48
	ld.d	$s1, $sp, 0                     # 8-byte Folded Reload
	ld.d	$s0, $sp, 8                     # 8-byte Folded Reload
	ld.d	$fp, $sp, 16                    # 8-byte Folded Reload
	ld.d	$ra, $sp, 24                    # 8-byte Folded Reload
	addi.d	$sp, $sp, 32
	ret
.LBB135_5:
	pcalau12i	$a0, %pc_hi20(.L.str.220)
	addi.d	$a0, $a0, %pc_lo12(.L.str.220)
	pcaddu18i	$ra, %call36(_ZSt20__throw_length_errorPKc)
	jirl	$ra, $ra, 0
.LBB135_6:
.Ltmp2811:
	pcaddu18i	$ra, %call36(__cxa_begin_catch)
	jirl	$ra, $ra, 0
	ld.d	$a0, $fp, 72
	ld.d	$a0, $a0, 8
	ori	$a1, $zero, 512
	pcaddu18i	$ra, %call36(_ZdlPvm)
	jirl	$ra, $ra, 0
.Ltmp2812:
	pcaddu18i	$ra, %call36(__cxa_rethrow)
	jirl	$ra, $ra, 0
.Ltmp2813:
# %bb.7:
.LBB135_8:
.Ltmp2814:
	move	$fp, $a0
.Ltmp2815:
	pcaddu18i	$ra, %call36(__cxa_end_catch)
	jirl	$ra, $ra, 0
.Ltmp2816:
# %bb.9:
	move	$a0, $fp
	pcaddu18i	$ra, %call36(_Unwind_Resume)
	jirl	$ra, $ra, 0
.LBB135_10:
.Ltmp2817:
	pcaddu18i	$ra, %call36(__clang_call_terminate)
	jirl	$ra, $ra, 0
.Lfunc_end135:
	.size	_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_, .Lfunc_end135-_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_,"aG",@progbits,_ZNSt5dequeIN2PP4WordESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table135:
.Lexception71:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end71-.Lcst_begin71
.Lcst_begin71:
	.uleb128 .Lfunc_begin71-.Lfunc_begin71  # >> Call Site 1 <<
	.uleb128 .Ltmp2809-.Lfunc_begin71       #   Call between .Lfunc_begin71 and .Ltmp2809
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2809-.Lfunc_begin71       # >> Call Site 2 <<
	.uleb128 .Ltmp2810-.Ltmp2809            #   Call between .Ltmp2809 and .Ltmp2810
	.uleb128 .Ltmp2811-.Lfunc_begin71       #     jumps to .Ltmp2811
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2810-.Lfunc_begin71       # >> Call Site 3 <<
	.uleb128 .Ltmp2812-.Ltmp2810            #   Call between .Ltmp2810 and .Ltmp2812
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2812-.Lfunc_begin71       # >> Call Site 4 <<
	.uleb128 .Ltmp2813-.Ltmp2812            #   Call between .Ltmp2812 and .Ltmp2813
	.uleb128 .Ltmp2814-.Lfunc_begin71       #     jumps to .Ltmp2814
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2815-.Lfunc_begin71       # >> Call Site 5 <<
	.uleb128 .Ltmp2816-.Ltmp2815            #   Call between .Ltmp2815 and .Ltmp2816
	.uleb128 .Ltmp2817-.Lfunc_begin71       #     jumps to .Ltmp2817
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2816-.Lfunc_begin71       # >> Call Site 6 <<
	.uleb128 .Lfunc_end135-.Ltmp2816        #   Call between .Ltmp2816 and .Lfunc_end135
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end71:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.word	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2, 0x0
                                        # -- End function
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.space	1
	.size	.L.str, 1

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	" \t"
	.size	.L.str.1, 3

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	" \t()[],*/+-=!#"
	.size	.L.str.2, 15

	.type	_ZN2PPL10index_baseE,@object    # @_ZN2PPL10index_baseE
	.data
	.p2align	2, 0x0
_ZN2PPL10index_baseE:
	.word	1                               # 0x1
	.size	_ZN2PPL10index_baseE, 4

	.type	_ZN2PPL14case_sensitiveE,@object # @_ZN2PPL14case_sensitiveE
	.local	_ZN2PPL14case_sensitiveE
	.comm	_ZN2PPL14case_sensitiveE,1,1
	.type	.L.str.3,@object                # @.str.3
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.3:
	.asciz	"\""
	.size	.L.str.3, 2

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	"'"
	.size	.L.str.4, 2

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	" "
	.size	.L.str.5, 2

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"command"
	.size	.L.str.6, 8

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	"assignment"
	.size	.L.str.7, 11

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"parser_list_variables"
	.size	.L.str.8, 22

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"debug"
	.size	.L.str.9, 6

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"parser_list_functions"
	.size	.L.str.10, 22

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	"parser_print_fbuffer"
	.size	.L.str.11, 21

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	"if"
	.size	.L.str.12, 3

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"internal_cmd"
	.size	.L.str.13, 13

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"elseif"
	.size	.L.str.14, 7

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"endif"
	.size	.L.str.15, 6

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"do"
	.size	.L.str.16, 3

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	"return"
	.size	.L.str.17, 7

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	"enddo"
	.size	.L.str.18, 6

	.type	.L.str.19,@object               # @.str.19
.L.str.19:
	.asciz	"stop"
	.size	.L.str.19, 5

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"when"
	.size	.L.str.20, 5

	.type	.L.str.21,@object               # @.str.21
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.21:
	.asciz	"endwhen"
	.size	.L.str.21, 8

	.type	.L.str.22,@object               # @.str.22
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.22:
	.asciz	"    "
	.size	.L.str.22, 5

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"Expected the object following the unary - to be a number."
	.size	.L.str.24, 58

	.type	.L.str.25,@object               # @.str.25
.L.str.25:
	.asciz	"Instead, it was "
	.size	.L.str.25, 17

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"Expected the object following the unary + to be a number."
	.size	.L.str.27, 58

	.type	.L.str.29,@object               # @.str.29
.L.str.29:
	.asciz	"Asterisk cannot be at the start of a line."
	.size	.L.str.29, 43

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"Asterisk cannot be at the end of a line."
	.size	.L.str.30, 41

	.type	.L.str.31,@object               # @.str.31
.L.str.31:
	.asciz	"Expected the object before the * to be a number."
	.size	.L.str.31, 49

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	"Cmd.cc, get_sizeb, internal error."
	.size	.L.str.32, 35

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"dim != 2, dim="
	.size	.L.str.33, 15

	.type	.L.str.34,@object               # @.str.34
.L.str.34:
	.asciz	"Expected number words in this line >= "
	.size	.L.str.34, 39

	.type	.L.str.35,@object               # @.str.35
.L.str.35:
	.asciz	"Actual number words = "
	.size	.L.str.35, 23

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	"="
	.size	.L.str.36, 2

	.type	.L.str.37,@object               # @.str.37
.L.str.37:
	.asciz	"Expected an equals sign for symbol "
	.size	.L.str.37, 36

	.type	.L.str.38,@object               # @.str.38
.L.str.38:
	.asciz	"Instead symbol "
	.size	.L.str.38, 16

	.type	.L.str.39,@object               # @.str.39
.L.str.39:
	.asciz	" is: "
	.size	.L.str.39, 6

	.type	.L.str.40,@object               # @.str.40
.L.str.40:
	.asciz	"Multiplicity not equal 1 for "
	.size	.L.str.40, 30

	.type	.L.str.41,@object               # @.str.41
.L.str.41:
	.asciz	"Multiplicity is: "
	.size	.L.str.41, 18

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	"("
	.size	.L.str.42, 2

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	"Expected an open parenthesis ,(, following the command name in this line,"
	.size	.L.str.43, 74

	.type	.L.str.44,@object               # @.str.44
.L.str.44:
	.asciz	"For example: "
	.size	.L.str.44, 14

	.type	.L.str.45,@object               # @.str.45
.L.str.45:
	.asciz	"(...) = ..."
	.size	.L.str.45, 12

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	"Instead found: "
	.size	.L.str.46, 16

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	"Expected a close parenthesis ,), following the array indices in this line,"
	.size	.L.str.48, 75

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	"The index for the array must be an integer that is >= "
	.size	.L.str.49, 55

	.type	.L.str.50,@object               # @.str.50
.L.str.50:
	.asciz	"Integer includes numbers like 3, 3., 3.0, but not 3.5"
	.size	.L.str.50, 54

	.type	.L.str.51,@object               # @.str.51
.L.str.51:
	.asciz	"The index input is: "
	.size	.L.str.51, 21

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	"Count must be positive ["
	.size	.L.str.52, 25

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	"]"
	.size	.L.str.53, 2

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	"Maximum number of values allowed = "
	.size	.L.str.54, 36

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"(for multi-dimension arrays this max number is"
	.size	.L.str.55, 47

	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"     max_dim1 * max_dim2 * ...)"
	.size	.L.str.56, 32

	.type	.L.str.57,@object               # @.str.57
.L.str.57:
	.asciz	"This command exceeds that value by "
	.size	.L.str.57, 36

	.type	.L.str.58,@object               # @.str.58
.L.str.58:
	.asciz	"dimension"
	.size	.L.str.58, 10

	.type	.L.str.59,@object               # @.str.59
.L.str.59:
	.asciz	":"
	.size	.L.str.59, 2

	.type	.L.str.60,@object               # @.str.60
.L.str.60:
	.asciz	"variable_description"
	.size	.L.str.60, 21

	.type	.L.str.61,@object               # @.str.61
.L.str.61:
	.asciz	"The variable_description command must have 3 words on the line"
	.size	.L.str.61, 63

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	"First word =  variable_description"
	.size	.L.str.62, 35

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"Second word =  name of the variable"
	.size	.L.str.63, 36

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"Third word =  description (usually some phrase in quotes)"
	.size	.L.str.64, 58

	.type	.L.str.65,@object               # @.str.65
.L.str.65:
	.asciz	"This command has "
	.size	.L.str.65, 18

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	" words instead of 3 words."
	.size	.L.str.66, 27

	.type	.L.str.67,@object               # @.str.67
.L.str.67:
	.asciz	"Expected a variable name as word 2"
	.size	.L.str.67, 35

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"Variable names must begin with the $ character."
	.size	.L.str.68, 48

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	"This variable name does not begin with a $ character."
	.size	.L.str.69, 54

	.type	.L.str.70,@object               # @.str.70
.L.str.70:
	.asciz	"Note that putting quotes around a variable name makes it"
	.size	.L.str.70, 57

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	"a string, not a variable."
	.size	.L.str.71, 26

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	"Variable name = "
	.size	.L.str.72, 17

	.type	.L.str.73,@object               # @.str.73
.L.str.73:
	.asciz	"Cannot change the description for a pre-defined variable"
	.size	.L.str.73, 57

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	" is pre-defined."
	.size	.L.str.74, 17

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	"++"
	.size	.L.str.75, 3

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	"--"
	.size	.L.str.76, 3

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	"Attempted to use a variable before it was defined."
	.size	.L.str.77, 51

	.type	.L.str.78,@object               # @.str.78
.L.str.78:
	.asciz	"Undefined variable = "
	.size	.L.str.78, 22

	.type	.L.str.79,@object               # @.str.79
.L.str.79:
	.asciz	"Expected number words in this line = 3"
	.size	.L.str.79, 39

	.type	.L.str.80,@object               # @.str.80
.L.str.80:
	.asciz	"Expected number of symbols in this line >= "
	.size	.L.str.80, 44

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	"Actual number of symbols is less than expected."
	.size	.L.str.81, 48

	.type	.L.str.82,@object               # @.str.82
.L.str.82:
	.asciz	"Expected an open parenthesis ,(, following the variable name in this line,"
	.size	.L.str.82, 75

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"Trying to use a variable before it is defined."
	.size	.L.str.83, 47

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.asciz	"The list of defined variables (at this point) is:"
	.size	.L.str.84, 50

	.type	.L.str.85,@object               # @.str.85
.L.str.85:
	.asciz	"Expected a number for variable index "
	.size	.L.str.85, 38

	.type	.L.str.86,@object               # @.str.86
.L.str.86:
	.asciz	"Instead found:   "
	.size	.L.str.86, 18

	.type	.L.str.87,@object               # @.str.87
.L.str.87:
	.asciz	"Expected an integer for variable index "
	.size	.L.str.87, 40

	.type	.L.str.88,@object               # @.str.88
.L.str.88:
	.asciz	"Expected (...)"
	.size	.L.str.88, 15

	.type	.L.str.89,@object               # @.str.89
.L.str.89:
	.asciz	"Found "
	.size	.L.str.89, 7

	.type	.L.str.90,@object               # @.str.90
.L.str.90:
	.asciz	"Did not find a closing parenthesis, ), in math expression"
	.size	.L.str.90, 58

	.type	.L.str.91,@object               # @.str.91
.L.str.91:
	.asciz	"Check for unbalanced parentheses in math expression."
	.size	.L.str.91, 53

	.type	.L.str.93,@object               # @.str.93
.L.str.93:
	.asciz	"arithmetic"
	.size	.L.str.93, 11

	.type	.L.str.94,@object               # @.str.94
.L.str.94:
	.asciz	"relational"
	.size	.L.str.94, 11

	.type	.L.str.95,@object               # @.str.95
.L.str.95:
	.asciz	"logical"
	.size	.L.str.95, 8

	.type	.L.str.96,@object               # @.str.96
.L.str.96:
	.asciz	"Found a "
	.size	.L.str.96, 9

	.type	.L.str.97,@object               # @.str.97
.L.str.97:
	.asciz	" sign at the end of a line."
	.size	.L.str.97, 28

	.type	.L.str.98,@object               # @.str.98
.L.str.98:
	.asciz	"Expected something to the right of the  "
	.size	.L.str.98, 41

	.type	.L.str.99,@object               # @.str.99
.L.str.99:
	.asciz	" sign to operate on."
	.size	.L.str.99, 21

	.type	.L.str.100,@object              # @.str.100
.L.str.100:
	.asciz	"Expected the object following the unary "
	.size	.L.str.100, 41

	.type	.L.str.101,@object              # @.str.101
.L.str.101:
	.asciz	" to be a number."
	.size	.L.str.101, 17

	.type	.L.str.102,@object              # @.str.102
.L.str.102:
	.asciz	"Unknown error with unary "
	.size	.L.str.102, 26

	.type	.L.str.103,@object              # @.str.103
.L.str.103:
	.asciz	"Error with words: "
	.size	.L.str.103, 19

	.type	.L.str.104,@object              # @.str.104
.L.str.104:
	.asciz	"Misplaced "
	.size	.L.str.104, 11

	.type	.L.str.105,@object              # @.str.105
.L.str.105:
	.asciz	" operator."
	.size	.L.str.105, 11

	.type	.L.str.106,@object              # @.str.106
.L.str.106:
	.asciz	"++ and -- operators must follow a variable or "
	.size	.L.str.106, 47

	.type	.L.str.107,@object              # @.str.107
.L.str.107:
	.asciz	"an element of an array variable. "
	.size	.L.str.107, 34

	.type	.L.str.108,@object              # @.str.108
.L.str.108:
	.asciz	"Expected a function"
	.size	.L.str.108, 20

	.type	.L.str.109,@object              # @.str.109
.L.str.109:
	.asciz	"The list of known functions is:"
	.size	.L.str.109, 32

	.type	.L.str.110,@object              # @.str.110
.L.str.110:
	.asciz	"defined"
	.size	.L.str.110, 8

	.type	.L.str.112,@object              # @.str.112
.L.str.112:
	.asciz	"false"
	.size	.L.str.112, 6

	.type	.L.str.113,@object              # @.str.113
.L.str.113:
	.asciz	"string"
	.size	.L.str.113, 7

	.type	.L.str.114,@object              # @.str.114
.L.str.114:
	.asciz	"real"
	.size	.L.str.114, 5

	.type	.L.str.115,@object              # @.str.115
.L.str.115:
	.asciz	"Expected a number for function argument number "
	.size	.L.str.115, 48

	.type	.L.str.123,@object              # @.str.123
.L.str.123:
	.asciz	".hgeq."
	.size	.L.str.123, 7

	.type	.L.str.124,@object              # @.str.124
.L.str.124:
	.asciz	".hgne."
	.size	.L.str.124, 7

	.type	.L.str.125,@object              # @.str.125
.L.str.125:
	.asciz	".hggt."
	.size	.L.str.125, 7

	.type	.L.str.126,@object              # @.str.126
.L.str.126:
	.asciz	".hgge."
	.size	.L.str.126, 7

	.type	.L.str.127,@object              # @.str.127
.L.str.127:
	.asciz	".hglt."
	.size	.L.str.127, 7

	.type	.L.str.128,@object              # @.str.128
.L.str.128:
	.asciz	".hgle."
	.size	.L.str.128, 7

	.type	.L.str.129,@object              # @.str.129
.L.str.129:
	.asciz	".not."
	.size	.L.str.129, 6

	.type	.L.str.130,@object              # @.str.130
.L.str.130:
	.asciz	".and."
	.size	.L.str.130, 6

	.type	.L.str.132,@object              # @.str.132
.L.str.132:
	.asciz	"Misplaced math operation."
	.size	.L.str.132, 26

	.type	.L.str.133,@object              # @.str.133
.L.str.133:
	.asciz	"All math operations must be inside parentheses."
	.size	.L.str.133, 48

	.type	.L.str.134,@object              # @.str.134
.L.str.134:
	.asciz	"The endif (or end if) statement should not have anything else on the line."
	.size	.L.str.134, 75

	.type	.L.str.135,@object              # @.str.135
.L.str.135:
	.asciz	"Found other words on the line."
	.size	.L.str.135, 31

	.type	.L.str.136,@object              # @.str.136
.L.str.136:
	.asciz	"else"
	.size	.L.str.136, 5

	.type	.L.str.137,@object              # @.str.137
.L.str.137:
	.asciz	"The else statement should not have anything else on the line."
	.size	.L.str.137, 62

	.type	.L.str.138,@object              # @.str.138
.L.str.138:
	.asciz	"Expected an open parentheses, (, following "
	.size	.L.str.138, 44

	.type	.L.str.139,@object              # @.str.139
.L.str.139:
	.asciz	"Expected a close parentheses, ), as the next to last symbol on the line."
	.size	.L.str.139, 73

	.type	.L.str.140,@object              # @.str.140
.L.str.140:
	.asciz	"then"
	.size	.L.str.140, 5

	.type	.L.str.141,@object              # @.str.141
.L.str.141:
	.asciz	"Expected then as the last word on the line."
	.size	.L.str.141, 44

	.type	.L.str.142,@object              # @.str.142
.L.str.142:
	.asciz	"The enddo (or end do) statement should not have anything else on the line."
	.size	.L.str.142, 75

	.type	.L.str.143,@object              # @.str.143
.L.str.143:
	.asciz	"cycle"
	.size	.L.str.143, 6

	.type	.L.str.144,@object              # @.str.144
.L.str.144:
	.asciz	"The cycle statement should not have anything else on the line."
	.size	.L.str.144, 63

	.type	.L.str.145,@object              # @.str.145
.L.str.145:
	.asciz	"exit"
	.size	.L.str.145, 5

	.type	.L.str.146,@object              # @.str.146
.L.str.146:
	.asciz	"The exit statement should not have anything else on the line."
	.size	.L.str.146, 62

	.type	.L.str.148,@object              # @.str.148
.L.str.148:
	.asciz	"Expected at least 6 words on this line after any math evaluations."
	.size	.L.str.148, 67

	.type	.L.str.149,@object              # @.str.149
.L.str.149:
	.asciz	"For example, "
	.size	.L.str.149, 14

	.type	.L.str.150,@object              # @.str.150
.L.str.150:
	.asciz	"    do "
	.size	.L.str.150, 8

	.type	.L.str.151,@object              # @.str.151
.L.str.151:
	.asciz	" = 1 , 10"
	.size	.L.str.151, 10

	.type	.L.str.152,@object              # @.str.152
.L.str.152:
	.asciz	"Instead found "
	.size	.L.str.152, 15

	.type	.L.str.153,@object              # @.str.153
.L.str.153:
	.asciz	" words on the line."
	.size	.L.str.153, 20

	.type	.L.str.154,@object              # @.str.154
.L.str.154:
	.asciz	"The line (after any math evaluations have been done) is:"
	.size	.L.str.154, 57

	.type	.L.str.155,@object              # @.str.155
.L.str.155:
	.asciz	"Loop variable names must begin with a $ sign."
	.size	.L.str.155, 46

	.type	.L.str.156,@object              # @.str.156
.L.str.156:
	.asciz	"The third word must be an = sign."
	.size	.L.str.156, 34

	.type	.L.str.157,@object              # @.str.157
.L.str.157:
	.asciz	"The fifth word must be a comma."
	.size	.L.str.157, 32

	.type	.L.str.158,@object              # @.str.158
.L.str.158:
	.asciz	"The loop variable, "
	.size	.L.str.158, 20

	.type	.L.str.159,@object              # @.str.159
.L.str.159:
	.asciz	" was not found in the variable list."
	.size	.L.str.159, 37

	.type	.L.str.160,@object              # @.str.160
.L.str.160:
	.asciz	"This should not happen, possible code bug?"
	.size	.L.str.160, 43

	.type	.L.str.161,@object              # @.str.161
.L.str.161:
	.asciz	"subroutine"
	.size	.L.str.161, 11

	.type	.L.str.162,@object              # @.str.162
	.section	.rodata.str1.8,"aMS",@progbits,1
	.p2align	3, 0x0
.L.str.162:
	.asciz	"endsubroutine"
	.size	.L.str.162, 14

	.type	.L.str.163,@object              # @.str.163
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.163:
	.asciz	"call"
	.size	.L.str.163, 5

	.type	.L.str.167,@object              # @.str.167
.L.str.167:
	.asciz	"Error in line "
	.size	.L.str.167, 15

	.type	.L.str.168,@object              # @.str.168
.L.str.168:
	.asciz	" umatched */"
	.size	.L.str.168, 13

	.type	.L.str.171,@object              # @.str.171
.L.str.171:
	.asciz	"ignore"
	.size	.L.str.171, 7

	.type	.L.str.172,@object              # @.str.172
.L.str.172:
	.asciz	"fix"
	.size	.L.str.172, 4

	.type	.L.str.173,@object              # @.str.173
.L.str.173:
	.asciz	"error"
	.size	.L.str.173, 6

	.type	.L.str.174,@object              # @.str.174
.L.str.174:
	.asciz	"Possible error, detected the following"
	.size	.L.str.174, 39

	.type	.L.str.175,@object              # @.str.175
.L.str.175:
	.asciz	"   comma digits space exponent comma"
	.size	.L.str.175, 37

	.type	.L.str.176,@object              # @.str.176
.L.str.176:
	.asciz	"The digits and exponent are separated by one or more spaces,"
	.size	.L.str.176, 61

	.type	.L.str.177,@object              # @.str.177
.L.str.177:
	.asciz	"this is not allowed for a single number."
	.size	.L.str.177, 41

	.type	.L.str.178,@object              # @.str.178
.L.str.178:
	.asciz	"The digits are: "
	.size	.L.str.178, 17

	.type	.L.str.179,@object              # @.str.179
.L.str.179:
	.asciz	"  and the exponent is: "
	.size	.L.str.179, 24

	.type	.L.str.180,@object              # @.str.180
.L.str.180:
	.asciz	"If this is one number, then remove the space."
	.size	.L.str.180, 46

	.type	.L.str.181,@object              # @.str.181
.L.str.181:
	.asciz	"If this is two numbers, then put a comma between the"
	.size	.L.str.181, 53

	.type	.L.str.182,@object              # @.str.182
.L.str.182:
	.asciz	" digits and exponent."
	.size	.L.str.182, 22

	.type	.L.str.183,@object              # @.str.183
.L.str.183:
	.asciz	"This error (and the same error in subsequent lines) can"
	.size	.L.str.183, 56

	.type	.L.str.184,@object              # @.str.184
.L.str.184:
	.asciz	"be controlled with the following input file command"
	.size	.L.str.184, 52

	.type	.L.str.185,@object              # @.str.185
.L.str.185:
	.asciz	"and arguments (put before the lines with errors)"
	.size	.L.str.185, 49

	.type	.L.str.186,@object              # @.str.186
.L.str.186:
	.asciz	"      depcmd_dse argument"
	.size	.L.str.186, 26

	.type	.L.str.187,@object              # @.str.187
.L.str.187:
	.asciz	"where argument has one of the following values:"
	.size	.L.str.187, 48

	.type	.L.str.188,@object              # @.str.188
.L.str.188:
	.asciz	"      fix     Silently remove the space, merge into one number"
	.size	.L.str.188, 63

	.type	.L.str.189,@object              # @.str.189
.L.str.189:
	.asciz	"      ignore  Silently treat as two numbers"
	.size	.L.str.189, 44

	.type	.L.str.190,@object              # @.str.190
.L.str.190:
	.asciz	"      error   Generate fatal error (default)"
	.size	.L.str.190, 45

	.type	.L.str.191,@object              # @.str.191
.L.str.191:
	.asciz	"While the default is to generate an error, if the"
	.size	.L.str.191, 50

	.type	.L.str.192,@object              # @.str.192
.L.str.192:
	.asciz	"command name is matdef, then the default is fix."
	.size	.L.str.192, 49

	.type	.L.str.193,@object              # @.str.193
.L.str.193:
	.asciz	"*** FATAL ERROR in line "
	.size	.L.str.193, 25

	.type	.L.str.194,@object              # @.str.194
.L.str.194:
	.asciz	"in file: "
	.size	.L.str.194, 10

	.type	.L.str.195,@object              # @.str.195
.L.str.195:
	.asciz	"*** WARNING in line "
	.size	.L.str.195, 21

	.type	.L.str.196,@object              # @.str.196
.L.str.196:
	.asciz	"A duplicate value has been specified for: "
	.size	.L.str.196, 43

	.type	.L.str.197,@object              # @.str.197
.L.str.197:
	.asciz	","
	.size	.L.str.197, 2

	.type	.L.str.198,@object              # @.str.198
.L.str.198:
	.asciz	") = "
	.size	.L.str.198, 5

	.type	.L.str.199,@object              # @.str.199
.L.str.199:
	.asciz	"This array element was first specified in line "
	.size	.L.str.199, 48

	.type	.L.str.200,@object              # @.str.200
.L.str.200:
	.asciz	"This fatal error can be turned into a warning with the command "
	.size	.L.str.200, 64

	.type	.L.str.201,@object              # @.str.201
.L.str.201:
	.asciz	"    duplicate_array_values = warning"
	.size	.L.str.201, 37

	.type	.L.str.202,@object              # @.str.202
.L.str.202:
	.asciz	"This warning can be turned into a fatal error with the command "
	.size	.L.str.202, 64

	.type	.L.str.203,@object              # @.str.203
.L.str.203:
	.asciz	"    duplicate_array_values = fatal"
	.size	.L.str.203, 35

	.type	.L.str.204,@object              # @.str.204
.L.str.204:
	.asciz	"Duplicate array value checking can be turned off totally with"
	.size	.L.str.204, 62

	.type	.L.str.205,@object              # @.str.205
.L.str.205:
	.asciz	"    duplicate_array_values = none"
	.size	.L.str.205, 34

	.type	.L.str.206,@object              # @.str.206
.L.str.206:
	.asciz	"This is not recommended since you will lose the opportunity"
	.size	.L.str.206, 60

	.type	.L.str.207,@object              # @.str.207
.L.str.207:
	.asciz	"to check for legimate errors in your input."
	.size	.L.str.207, 44

	.type	.L.str.208,@object              # @.str.208
.L.str.208:
	.asciz	"end"
	.size	.L.str.208, 4

	.type	.L.str.209,@object              # @.str.209
.L.str.209:
	.asciz	"fatal_error"
	.size	.L.str.209, 12

	.type	.L.str.210,@object              # @.str.210
.L.str.210:
	.asciz	"*** User has issued a fatal_error command in line "
	.size	.L.str.210, 51

	.type	.L.str.211,@object              # @.str.211
.L.str.211:
	.asciz	"The user supplied fatal_error message is: "
	.size	.L.str.211, 43

	.type	.L.str.212,@object              # @.str.212
.L.str.212:
	.asciz	"f"
	.size	.L.str.212, 2

	.type	.L.str.213,@object              # @.str.213
.L.str.213:
	.asciz	"This line has not been processed."
	.size	.L.str.213, 34

	.type	.L.str.214,@object              # @.str.214
.L.str.214:
	.asciz	"A word on this line has not been processed."
	.size	.L.str.214, 44

	.type	.L.str.215,@object              # @.str.215
.L.str.215:
	.asciz	"Not proccessed word = "
	.size	.L.str.215, 23

	.type	.L.str.216,@object              # @.str.216
.L.str.216:
	.asciz	"*** Command name = "
	.size	.L.str.216, 20

	.type	.L.str.217,@object              # @.str.217
.L.str.217:
	.asciz	"     "
	.size	.L.str.217, 6

	.type	.L.str.218,@object              # @.str.218
.L.str.218:
	.asciz	", "
	.size	.L.str.218, 3

	.type	.L.str.220,@object              # @.str.220
.L.str.220:
	.asciz	"cannot create std::deque larger than max_size()"
	.size	.L.str.220, 48

	.type	.L.str.221,@object              # @.str.221
.L.str.221:
	.asciz	"basic_string::substr"
	.size	.L.str.221, 21

	.type	.L.str.222,@object              # @.str.222
.L.str.222:
	.asciz	"%s: __pos (which is %zu) > this->size() (which is %zu)"
	.size	.L.str.222, 55

	.type	.L.str.224,@object              # @.str.224
.L.str.224:
	.asciz	"cannot create std::vector larger than max_size()"
	.size	.L.str.224, 49

	.type	.L.str.225,@object              # @.str.225
.L.str.225:
	.asciz	"vector::_M_realloc_append"
	.size	.L.str.225, 26

	.type	.L.str.226,@object              # @.str.226
.L.str.226:
	.asciz	"vector<bool>::_M_insert_aux"
	.size	.L.str.226, 28

	.type	.L.str.227,@object              # @.str.227
.L.str.227:
	.asciz	"basic_string::append"
	.size	.L.str.227, 21

	.globl	_ZN2PP3CmdC1Ev
	.type	_ZN2PP3CmdC1Ev,@function
_ZN2PP3CmdC1Ev = _ZN2PP3CmdC2Ev
	.globl	_ZN2PP3CmdC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi
	.type	_ZN2PP3CmdC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi,@function
_ZN2PP3CmdC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi = _ZN2PP3CmdC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPSt3mapIS6_NS_8VariableESt4lessIS6_ESaISt4pairIKS6_S8_EEEPS7_IS6_NS_8FunctionESA_SaISB_ISC_SH_EEEPSt5dequeIS6_SaIS6_EEiiS6_RNS1_18basic_stringstreamIcS4_S5_EERi
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3, 0x0
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.dword	__gxx_personality_v0
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZSt4cout
